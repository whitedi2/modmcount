
&НаСервере
Процедура РассчитатьНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Склад,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МетодОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СпособОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.НормаПотребления,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МинимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МаксимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Упаковка,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СрокИсполнения,
	|	ИСТИНА КАК ПолеПроверки,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.ЗаказВОфисе,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.КратностьПоставки
	|ПОМЕСТИТЬ ВТ_ПараметрыОбеспечения_СкладИПодразделение
	|ИЗ
	|	РегистрСведений.АссортиментнаяМатрица.СрезПоследних(
	|			&Период,
	|			Предприятие = &Предприятие
	|				И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение))
	|				И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК АссортиментнаяМатрицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияПотребности.СрезПоследних(
	|				&Период,
	|				Предприятие = &Предприятие
	|					И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|						ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение))
	|					И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ИЛИ Склад = &Склад)
	|					И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК ПараметрыОбеспеченияПотребностиСрезПоследних
	|		ПО АссортиментнаяМатрицаСрезПоследних.Предприятие = ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие
	|			И АссортиментнаяМатрицаСрезПоследних.Подразделение = ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение
	|			И АссортиментнаяМатрицаСрезПоследних.Номенклатура = ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура
	|ГДЕ
	|	АссортиментнаяМатрицаСрезПоследних.ВыведенИзАссортимента = ЛОЖЬ
	|	И НЕ ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.Предприятие,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.Подразделение,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.Склад,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.Номенклатура,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.МетодОбеспечения,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.СпособОбеспечения,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.НормаПотребления,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.МинимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.МаксимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.Упаковка,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.СрокИсполнения,
	|	ИСТИНА КАК ПолеПроверки,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.ЗаказВОфисе,
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение.КратностьПоставки
	|ПОМЕСТИТЬ ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад
	|ИЗ
	|	ВТ_ПараметрыОбеспечения_СкладИПодразделение КАК ВТ_ПараметрыОбеспечения_СкладИПодразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Склад,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МетодОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СпособОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.НормаПотребления,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МинимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МаксимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Упаковка,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СрокИсполнения,
	|	ИСТИНА,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.ЗаказВОфисе,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.КратностьПоставки
	|ИЗ
	|	РегистрСведений.АссортиментнаяМатрица.СрезПоследних(
	|			&Период,
	|			Предприятие = &Предприятие
	|				И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение))
	|				И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК АссортиментнаяМатрицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияПотребности.СрезПоследних(
	|				&Период,
	|				Предприятие = &Предприятие
	|					И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|						ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение))
	|					И Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК ПараметрыОбеспеченияПотребностиСрезПоследних
	|		ПО АссортиментнаяМатрицаСрезПоследних.Предприятие = ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие
	|			И АссортиментнаяМатрицаСрезПоследних.Подразделение = ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение
	|			И АссортиментнаяМатрицаСрезПоследних.Номенклатура = ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ
	|					ВТ_ПараметрыОбеспечения_СкладИПодразделение.ПолеПроверки
	|				ИЗ
	|					ВТ_ПараметрыОбеспечения_СкладИПодразделение КАК ВТ_ПараметрыОбеспечения_СкладИПодразделение)
	|	И АссортиментнаяМатрицаСрезПоследних.ВыведенИзАссортимента = ЛОЖЬ
	|	И НЕ ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Склад,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МетодОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СпособОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.НормаПотребления,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МинимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МаксимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Упаковка,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СрокИсполнения,
	|	ИСТИНА,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.ЗаказВОфисе,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.КратностьПоставки
	|ИЗ
	|	РегистрСведений.ПараметрыОбеспеченияПотребности.СрезПоследних(
	|			&Период,
	|			Предприятие = &Предприятие
	|				И Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					ИЛИ Склад = &Склад)
	|				И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК ПараметрыОбеспеченияПотребностиСрезПоследних,
	|	РегистрСведений.АссортиментнаяМатрица.СрезПоследних(
	|			&Период,
	|			Предприятие = &Предприятие
	|				И Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК АссортиментнаяМатрицаСрезПоследних
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ
	|					ВТ_ПараметрыОбеспечения_СкладИПодразделение.ПолеПроверки
	|				ИЗ
	|					ВТ_ПараметрыОбеспечения_СкладИПодразделение КАК ВТ_ПараметрыОбеспечения_СкладИПодразделение)
	|	И АссортиментнаяМатрицаСрезПоследних.ВыведенИзАссортимента = ЛОЖЬ
	|	И НЕ ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.Предприятие,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.Подразделение,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.Склад,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.Номенклатура,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.МетодОбеспечения,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.СпособОбеспечения,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.НормаПотребления,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.МинимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.МаксимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.Упаковка,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.СрокИсполнения,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.ПолеПроверки,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.ЗаказВОфисе,
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.КратностьПоставки
	|ПОМЕСТИТЬ ВТ_ПараметрыОбеспечения
	|ИЗ
	|	ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад КАК ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Склад,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МетодОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СпособОбеспечения,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.НормаПотребления,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МинимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.МаксимальныйЗапас,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.Упаковка,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.СрокИсполнения,
	|	NULL,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.ЗаказВОфисе,
	|	ПараметрыОбеспеченияПотребностиСрезПоследних.КратностьПоставки
	|ИЗ
	|	РегистрСведений.АссортиментнаяМатрица.СрезПоследних(
	|			&Период,
	|			Предприятие = &Предприятие
	|				И Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК АссортиментнаяМатрицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыОбеспеченияПотребности.СрезПоследних(
	|				&Период,
	|				Предприятие = &Предприятие
	|					И Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					И Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					И (&НомГруппа = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ИЛИ Номенклатура В ИЕРАРХИИ (&НомГруппа))) КАК ПараметрыОбеспеченияПотребностиСрезПоследних
	|		ПО АссортиментнаяМатрицаСрезПоследних.Предприятие = ПараметрыОбеспеченияПотребностиСрезПоследних.Предприятие
	|			И АссортиментнаяМатрицаСрезПоследних.Подразделение = ПараметрыОбеспеченияПотребностиСрезПоследних.Подразделение
	|			И АссортиментнаяМатрицаСрезПоследних.Номенклатура = ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура
	|ГДЕ
	|	НЕ ИСТИНА В
	|				(ВЫБРАТЬ
	|					ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад.ПолеПроверки
	|				ИЗ
	|					ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад КАК ВТ_ПараметрыОбеспечения_ПодразделениеИлиСклад)
	|	И АссортиментнаяМатрицаСрезПоследних.ВыведенИзАссортимента = ЛОЖЬ
	|	И НЕ ПараметрыОбеспеченияПотребностиСрезПоследних.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорзинаТорговТовары.Номенклатура,
	|	ТоргиСрезПоследних.ВыведенаИзТоргов КАК ВыведенаИзТоргов
	|ПОМЕСТИТЬ ВТ_Торги
	|ИЗ
	|	Справочник.КорзинаТоргов.Товары КАК КорзинаТорговТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Торги.СрезПоследних(&Период, ) КАК ТоргиСрезПоследних
	|		ПО КорзинаТорговТовары.Ссылка = ТоргиСрезПоследних.Корзина
	|			И КорзинаТорговТовары.Номенклатура = ТоргиСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяБлокировкаНоменклатурыВЗаказах.Предприятие,
	|	ВременнаяБлокировкаНоменклатурыВЗаказах.Подразделение,
	|	ВременнаяБлокировкаНоменклатурыВЗаказах.Номенклатура
	|ПОМЕСТИТЬ ВТ_ЗаблокированныеЗаказы
	|ИЗ
	|	РегистрСведений.ВременнаяБлокировкаНоменклатурыВЗаказах КАК ВременнаяБлокировкаНоменклатурыВЗаказах
	|ГДЕ
	|	ВременнаяБлокировкаНоменклатурыВЗаказах.ДатаНач <= &Период
	|	И ВременнаяБлокировкаНоменклатурыВЗаказах.ДатаКон >= &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркетинговыеМероприятия.ЦенаПоступления,
	|	МаркетинговыеМероприятия.Номенклатура,
	|	МаркетинговыеМероприятия.Предприятие,
	|	МаркетинговыеМероприятия.Подразделение,
	|	МаркетинговыеМероприятия.ДатаДокумента
	|ПОМЕСТИТЬ ВТ_МаркетинговыеМероприятия
	|ИЗ
	|	РегистрСведений.МаркетинговыеМероприятия КАК МаркетинговыеМероприятия
	|ГДЕ
	|	МаркетинговыеМероприятия.Предприятие = &Предприятие
	|	И МаркетинговыеМероприятия.ДатаЗаказовНач <= &ПериодЦен
	|	И МаркетинговыеМероприятия.ДатаЗаказовКон >= &ПериодЦен
	|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ИЛИ МаркетинговыеМероприятия.Подразделение В ИЕРАРХИИ (&Подразделение))
	|	И МаркетинговыеМероприятия.ЦенаПоступления <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МаркетинговыеМероприятия.Номенклатура,
	|	ВТ_МаркетинговыеМероприятия.Предприятие,
	|	ВТ_МаркетинговыеМероприятия.Подразделение,
	|	МАКСИМУМ(ВТ_МаркетинговыеМероприятия.ДатаДокумента) КАК ДатаДокумента
	|ПОМЕСТИТЬ ВТ_МаксДатаМаркетинговыеМероприятия
	|ИЗ
	|	ВТ_МаркетинговыеМероприятия КАК ВТ_МаркетинговыеМероприятия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_МаркетинговыеМероприятия.Подразделение,
	|	ВТ_МаркетинговыеМероприятия.Номенклатура,
	|	ВТ_МаркетинговыеМероприятия.Предприятие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_МаркетинговыеМероприятия.ЦенаПоступления,
	|	ВТ_МаркетинговыеМероприятия.Номенклатура,
	|	ВТ_МаркетинговыеМероприятия.Предприятие,
	|	ВТ_МаркетинговыеМероприятия.Подразделение
	|ПОМЕСТИТЬ ВТ_МаркетинговыеМероприятияИтог
	|ИЗ
	|	ВТ_МаксДатаМаркетинговыеМероприятия КАК ВТ_МаксДатаМаркетинговыеМероприятия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаркетинговыеМероприятия КАК ВТ_МаркетинговыеМероприятия
	|		ПО ВТ_МаксДатаМаркетинговыеМероприятия.Номенклатура = ВТ_МаркетинговыеМероприятия.Номенклатура
	|			И ВТ_МаксДатаМаркетинговыеМероприятия.Предприятие = ВТ_МаркетинговыеМероприятия.Предприятие
	|			И ВТ_МаксДатаМаркетинговыеМероприятия.Подразделение = ВТ_МаркетинговыеМероприятия.Подразделение
	|			И ВТ_МаксДатаМаркетинговыеМероприятия.ДатаДокумента = ВТ_МаркетинговыеМероприятия.ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоставщикаСрезПоследних.Номенклатура,
	|	НоменклатураПоставщикаСрезПоследних.Контрагент,
	|	НоменклатураПоставщикаСрезПоследних.Подразделение,
	|	НоменклатураПоставщикаСрезПоследних.Предприятие
	|ПОМЕСТИТЬ ВТ_ПоследнийПрайс
	|ИЗ
	|	РегистрСведений.НоменклатураПоставщика.СрезПоследних(
	|			&Период,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_ПараметрыОбеспечения.Номенклатура
	|					ИЗ
	|						ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)
	|				И Предприятие = &Предприятие
	|				И Подразделение В
	|					(ВЫБРАТЬ
	|						ВТ_ПараметрыОбеспечения.Подразделение
	|					ИЗ
	|						ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)) КАК НоменклатураПоставщикаСрезПоследних
	|ГДЕ
	|	(&Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ НоменклатураПоставщикаСрезПоследних.Контрагент = &Контрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОбеспеченияПотребностейИсточникиОбеспеченияПотребностей.ИсточникОбеспечения,
	|	СпособыОбеспеченияПотребностейПодразделения.Подразделение,
	|	СпособыОбеспеченияПотребностей.Ссылка
	|ПОМЕСТИТЬ ВТ_СпособыОбеспечения
	|ИЗ
	|	Справочник.СпособыОбеспеченияПотребностей КАК СпособыОбеспеченияПотребностей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей.Подразделения КАК СпособыОбеспеченияПотребностейПодразделения
	|		ПО СпособыОбеспеченияПотребностей.Подразделения.Ссылка = СпособыОбеспеченияПотребностейПодразделения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей.ИсточникиОбеспеченияПотребностей КАК СпособыОбеспеченияПотребностейИсточникиОбеспеченияПотребностей
	|		ПО СпособыОбеспеченияПотребностей.ИсточникиОбеспеченияПотребностей.Ссылка = СпособыОбеспеченияПотребностейИсточникиОбеспеченияПотребностей.Ссылка
	|ГДЕ
	|	СпособыОбеспеченияПотребностей.Предприятие В
	|			(ВЫБРАТЬ
	|				ВТ_ПараметрыОбеспечения.Предприятие
	|			ИЗ
	|				ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)
	|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ИЛИ СпособыОбеспеченияПотребностейПодразделения.Подразделение В ИЕРАРХИИ (&Подразделение))
	|	И (&Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ СпособыОбеспеченияПотребностейИсточникиОбеспеченияПотребностей.ИсточникОбеспечения = &Контрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоследнийПрайс.Контрагент КАК Контрагент,
	|	ВТ_ПараметрыОбеспечения.Предприятие КАК Предприятие,
	|	ВТ_ПараметрыОбеспечения.Склад,
	|	ВТ_ПараметрыОбеспечения.Номенклатура,
	|	ВТ_ПараметрыОбеспечения.МетодОбеспечения,
	|	ВТ_ПараметрыОбеспечения.СпособОбеспечения КАК СпособОбеспечения,
	|	ВТ_ПараметрыОбеспечения.НормаПотребления,
	|	ВТ_ПараметрыОбеспечения.МинимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения.МаксимальныйЗапас,
	|	ВТ_ПараметрыОбеспечения.Упаковка,
	|	ВТ_ПараметрыОбеспечения.СрокИсполнения,
	|	ВТ_ПараметрыОбеспечения.Подразделение,
	|	ВТ_ПараметрыОбеспечения.ЗаказВОфисе,
	|	ВТ_ПараметрыОбеспечения.КратностьПоставки
	|ПОМЕСТИТЬ Вт_ИтоговыеДанныеБезЦен
	|ИЗ
	|	ВТ_ПоследнийПрайс КАК ВТ_ПоследнийПрайс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения
	|		ПО ВТ_ПоследнийПрайс.Номенклатура = ВТ_ПараметрыОбеспечения.Номенклатура
	|			И ВТ_ПоследнийПрайс.Предприятие = ВТ_ПараметрыОбеспечения.Предприятие
	|			И ВТ_ПоследнийПрайс.Подразделение = ВТ_ПараметрыОбеспечения.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаблокированныеЗаказы КАК ВТ_ЗаблокированныеЗаказы
	|		ПО ВТ_ПоследнийПрайс.Предприятие = ВТ_ЗаблокированныеЗаказы.Предприятие
	|			И ВТ_ПоследнийПрайс.Подразделение = ВТ_ЗаблокированныеЗаказы.Подразделение
	|			И ВТ_ПоследнийПрайс.Номенклатура = ВТ_ЗаблокированныеЗаказы.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ПараметрыОбеспечения.Номенклатура ЕСТЬ NULL 
	|	И ВТ_ЗаблокированныеЗаказы.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_ИтоговыеДанныеБезЦен.Контрагент КАК Контрагент,
	|	Вт_ИтоговыеДанныеБезЦен.Предприятие КАК Предприятие,
	|	Вт_ИтоговыеДанныеБезЦен.Склад,
	|	Вт_ИтоговыеДанныеБезЦен.Номенклатура,
	|	Вт_ИтоговыеДанныеБезЦен.МетодОбеспечения,
	|	Вт_ИтоговыеДанныеБезЦен.СпособОбеспечения КАК СпособОбеспечения,
	|	Вт_ИтоговыеДанныеБезЦен.НормаПотребления,
	|	Вт_ИтоговыеДанныеБезЦен.МинимальныйЗапас,
	|	Вт_ИтоговыеДанныеБезЦен.МаксимальныйЗапас,
	|	Вт_ИтоговыеДанныеБезЦен.Упаковка,
	|	Вт_ИтоговыеДанныеБезЦен.СрокИсполнения,
	|	ЦеныНоменклатурыСрезПоследних.ВидЦены,
	|	ЕСТЬNULL(ВТ_МаркетинговыеМероприятияИтог.ЦенаПоступления, ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	Вт_ИтоговыеДанныеБезЦен.Подразделение,
	|	Вт_ИтоговыеДанныеБезЦен.ЗаказВОфисе,
	|	Вт_ИтоговыеДанныеБезЦен.КратностьПоставки,
	|	ВЫБОР
	|		КОГДА ВТ_МаркетинговыеМероприятияИтог.ЦенаПоступления ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК МаркетинговоеМероприятие
	|ПОМЕСТИТЬ Вт_ИтоговыеДанные
	|ИЗ
	|	Вт_ИтоговыеДанныеБезЦен КАК Вт_ИтоговыеДанныеБезЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ПериодЦен,
	|				ВидЦены.ЦенаПоставщика
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_ПараметрыОбеспечения.Номенклатура
	|						ИЗ
	|							ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)
	|					И Предприятие В
	|						(ВЫБРАТЬ
	|							ВТ_ПараметрыОбеспечения.Предприятие
	|						ИЗ
	|							ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)
	|					И подразделение В
	|						(ВЫБРАТЬ
	|							ВТ_ПараметрыОбеспечения.Подразделение
	|						ИЗ
	|							ВТ_ПараметрыОбеспечения КАК ВТ_ПараметрыОбеспечения)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО Вт_ИтоговыеДанныеБезЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И Вт_ИтоговыеДанныеБезЦен.Контрагент = ЦеныНоменклатурыСрезПоследних.ВидЦены.Поставщик
	|			И Вт_ИтоговыеДанныеБезЦен.Подразделение = ЦеныНоменклатурыСрезПоследних.Подразделение
	|			И Вт_ИтоговыеДанныеБезЦен.Предприятие = ЦеныНоменклатурыСрезПоследних.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаркетинговыеМероприятияИтог КАК ВТ_МаркетинговыеМероприятияИтог
	|		ПО Вт_ИтоговыеДанныеБезЦен.Номенклатура = ВТ_МаркетинговыеМероприятияИтог.Номенклатура
	|			И Вт_ИтоговыеДанныеБезЦен.Предприятие = ВТ_МаркетинговыеМероприятияИтог.Предприятие
	|			И Вт_ИтоговыеДанныеБезЦен.Подразделение = ВТ_МаркетинговыеМероприятияИтог.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_ИтоговыеДанные.Контрагент КАК Поставщик,
	|	Вт_ИтоговыеДанные.Предприятие,
	|	Вт_ИтоговыеДанные.Склад,
	|	Вт_ИтоговыеДанные.Номенклатура,
	|	Вт_ИтоговыеДанные.МетодОбеспечения,
	|	ВТ_СпособыОбеспечения.Ссылка КАК СпособОбеспечения,
	|	Вт_ИтоговыеДанные.НормаПотребления,
	|	Вт_ИтоговыеДанные.МинимальныйЗапас,
	|	Вт_ИтоговыеДанные.МаксимальныйЗапас,
	|	Вт_ИтоговыеДанные.Упаковка,
	|	Вт_ИтоговыеДанные.СрокИсполнения,
	|	ВТ_СпособыОбеспечения.Ссылка.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа,
	|	ВТ_СпособыОбеспечения.Ссылка.ТипОбеспечения КАК ТипОбеспечения,
	|	ВТ_СпособыОбеспечения.Ссылка.КалендарьПоставок КАК КалендарьПоставок,
	|	ВТ_СпособыОбеспечения.Ссылка.КалендарьЗаказов КАК КалендарьЗаказов,
	|	ВТ_СпособыОбеспечения.Подразделение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Коэффициент, 1) КАК КратностьПоставкиУпаковки,
	|	Вт_ИтоговыеДанные.ЗаказВОфисе,
	|	ВЫБОР
	|		КОГДА Вт_ИтоговыеДанные.КратностьПоставки ЕСТЬ NULL 
	|				ИЛИ Вт_ИтоговыеДанные.КратностьПоставки = 0
	|			ТОГДА 1
	|		ИНАЧЕ Вт_ИтоговыеДанные.КратностьПоставки
	|	КОНЕЦ КАК КратностьПоставки,
	|	СтруктураПредприятияДополнительныеРеквизиты.Значение КАК КодSAP,
	|	Вт_ИтоговыеДанные.Номенклатура.Код КАК НоменклатураКод,
	|	Вт_ИтоговыеДанные.Цена,
	|	Вт_ИтоговыеДанные.МаркетинговоеМероприятие,
	|	Вт_ИтоговыеДанные.ВидЦены
	|ИЗ
	|	Вт_ИтоговыеДанные КАК Вт_ИтоговыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СпособыОбеспечения КАК ВТ_СпособыОбеспечения
	|		ПО Вт_ИтоговыеДанные.Контрагент = ВТ_СпособыОбеспечения.ИсточникОбеспечения
	|			И Вт_ИтоговыеДанные.Подразделение = ВТ_СпособыОбеспечения.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|		ПО Вт_ИтоговыеДанные.Номенклатура = УпаковкиНоменклатуры.Номенклатура
	|			И (УпаковкиНоменклатуры.ОсновнаяУпаковка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия.ДополнительныеРеквизиты КАК СтруктураПредприятияДополнительныеРеквизиты
	|		ПО Вт_ИтоговыеДанные.Подразделение = СтруктураПредприятияДополнительныеРеквизиты.Ссылка
	|			И (СтруктураПредприятияДополнительныеРеквизиты.Свойство.Наименование = ""Код в SAP (Подразделение)"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Торги КАК ВТ_Торги
	|		ПО Вт_ИтоговыеДанные.Номенклатура = ВТ_Торги.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(ВТ_Торги.ВыведенаИзТоргов, ЛОЖЬ) = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураКод";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ПериодЦен", ?(Поставщик.УсловияЦенПоставки = Перечисления.УсловияЦенПоставки.НаДатуПоставки, ДатаПоставки, Дата));
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Контрагент", Поставщик);
	Запрос.УстановитьПараметр("НомГруппа", ГруппаНоменклатуры);
	
	ТаблицаПараметровОбеспечения = Запрос.Выполнить().Выгрузить();
	
	ТаблицаПараметровОбеспеченияНоменклатуры = ТаблицаПараметровОбеспечения.Скопировать(, "Номенклатура");
	ТаблицаПараметровОбеспеченияНоменклатуры.Свернуть("Номенклатура");
	МассивНоменклатур = ТаблицаПараметровОбеспеченияНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	ТаблицаПараметровОбеспеченияПодразделения = ТаблицаПараметровОбеспечения.Скопировать(, "Подразделение");
	ТаблицаПараметровОбеспеченияПодразделения.Свернуть("Подразделение");
	МассивПодразделений = ТаблицаПараметровОбеспеченияПодразделения.ВыгрузитьКолонку("Подразделение");
	
	//МассивКалендарей = ТаблицаПараметровОбеспечения.ВыгрузитьКолонку("КалендарьПоставок");
	ТаблицаПараметровОбеспеченияСклады = ТаблицаПараметровОбеспечения.Скопировать(, "Склад");
	ТаблицаПараметровОбеспеченияСклады.Свернуть("Склад");
	МассивСкладов = ТаблицаПараметровОбеспеченияСклады.ВыгрузитьКолонку("Склад");
	
	ТаблицаПараметровОбеспеченияПоставщик = ТаблицаПараметровОбеспечения.Скопировать(, "Поставщик");
	ТаблицаПараметровОбеспеченияПоставщик.Свернуть("Поставщик");
	МассивПоставщиков = ТаблицаПараметровОбеспеченияПоставщик.ВыгрузитьКолонку("Поставщик");
	
	МассивКалендарей = ТаблицаПараметровОбеспечения.ВыгрузитьКолонку("КалендарьПоставок");
	
	ЗапросПоОстаткам = Новый Запрос;
	ЗапросПоОстаткам.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Остаток,
	|	УчетныйОстатки.Субконто1 КАК Номенклатура,
	|	УчетныйОстатки.Предприятия,
	|	УчетныйОстатки.Подразделение,
	|	-ЕСТЬNULL(УчетныйОбороты.КоличествоОборот / РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ), 0) КАК РасчНорма,
	|	УчетныйОбороты.КоличествоОборот,
	|	-ЕСТЬNULL(УчетныйОбороты.КоличествоОборот, 0) КАК Реализовано
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&КонецПериода,
	|			Счет = &Счет,
	|			,
	|			Предприятия = &Предприятие
	|				И Подразделение В (&Подразделения)
	|				И Субконто1 В (&Номенклатуры)
	|				И Субконто2 В (&Склады)) КАК УчетныйОстатки
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Счет = &Счет,
	|				,
	|				Предприятия = &Предприятие
	|					И Подразделение В (&Подразделения)
	|					И Субконто1 В (&Номенклатуры)
	|					И Субконто2 В (&Склады),
	|				КорСчет = &КорСчет,
	|				) КАК УчетныйОбороты
	|		ПО УчетныйОстатки.Счет = УчетныйОбороты.Счет
	|			И УчетныйОстатки.Субконто1 = УчетныйОбороты.Субконто1
	|			И УчетныйОстатки.Предприятия = УчетныйОбороты.Предприятия
	|			И УчетныйОстатки.Подразделение = УчетныйОбороты.Подразделение
	|			И УчетныйОстатки.Субконто2 = УчетныйОбороты.Субконто2";
	ЗапросПоОстаткам.УстановитьПараметр("КонецПериода", Дата);
	ЗапросПоОстаткам.УстановитьПараметр("НачалоПериода", Дата - 86400*7);
	ЗапросПоОстаткам.УстановитьПараметр("Счет", ПланыСчетов.Учетный.Счет41());
	ЗапросПоОстаткам.УстановитьПараметр("Предприятие", Объект.Предприятие);
	ЗапросПоОстаткам.УстановитьПараметр("Номенклатуры", МассивНоменклатур);
	ЗапросПоОстаткам.УстановитьПараметр("Склады", МассивСкладов);
	ЗапросПоОстаткам.УстановитьПараметр("Подразделения", МассивПодразделений);
	ЗапросПоОстаткам.УстановитьПараметр("КорСчет", ПланыСчетов.Учетный.Счет9002());
	ТаблицаОстатков = ЗапросПоОстаткам.Выполнить().Выгрузить();
	
	ЗапросПоЗаказам = Новый Запрос;
	ЗапросПоЗаказам.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура,
	|	ЗаказПоставщикуТабличнаяЧасть.Ссылка.Подразделение,
	|	СУММА(ЗаказПоставщикуТабличнаяЧасть.Количество) КАК КоличествоОстатокДт
	|ИЗ
	|	Документ.ЗаказПоставщику.ТабличнаяЧасть КАК ЗаказПоставщикуТабличнаяЧасть
	|ГДЕ
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура В(&МассивНоменклатур)
	|	И ЗаказПоставщикуТабличнаяЧасть.Ссылка.Подразделение В(&МассивПодразделений)
	|	И ЗаказПоставщикуТабличнаяЧасть.Ссылка.Дата >= &Период
	|	И НЕ ЗаказПоставщикуТабличнаяЧасть.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт)
	|	И НЕ ЗаказПоставщикуТабличнаяЧасть.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Отменен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуТабличнаяЧасть.Ссылка.Подразделение,
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура";
	ЗапросПоЗаказам.УстановитьПараметр("Период", Дата - 3*86400);
	ЗапросПоЗаказам.УстановитьПараметр("Предприятие", Объект.Предприятие);
	ЗапросПоЗаказам.УстановитьПараметр("МассивПодразделений", МассивПодразделений);
	ЗапросПоЗаказам.УстановитьПараметр("МассивНоменклатур", МассивНоменклатур);
	ТоварыВПути = ЗапросПоЗаказам.Выполнить().Выгрузить();
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаПараметровОбеспечения Из ТаблицаПараметровОбеспечения Цикл
		СтрокаЗаказа = ТаблицаЗаказа.Добавить();
		СтрокаЗаказа.НомерСтроки = НомерСтроки;
		ЗаполнитьЗначенияСвойств(СтрокаЗаказа, СтрокаПараметровОбеспечения);
		Если ЗначениеЗаполнено(ДатаПоставки) Тогда
			СтрокаЗаказа.ДатаПоставки = ДатаПоставки;
		КонецЕсли;
		СтрокиПоОстаткам = ТаблицаОстатков.НайтиСтроки(Новый Структура("Номенклатура, Подразделение", СтрокаПараметровОбеспечения.Номенклатура, СтрокаПараметровОбеспечения.Подразделение));
		Если СтрокиПоОстаткам.Количество() > 0 Тогда
			СтрокаЗаказа.ТекущийОстаток = СтрокиПоОстаткам[0].Остаток;
			СтрокаЗаказа.НормаПотребления = СтрокиПоОстаткам[0].РасчНорма;
			СтрокаЗаказа.Реализовано = СтрокиПоОстаткам[0].Реализовано;
		Иначе
			СтрокаЗаказа.ТекущийОстаток = 0;
			СтрокаЗаказа.НормаПотребления = 0;
		КонецЕсли;	
		Если СтрокаПараметровОбеспечения.МетодОбеспечения = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоСтатистике Или СтрокаПараметровОбеспечения.МетодОбеспечения = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме Тогда
			Если СтрокаПараметровОбеспечения.МетодОбеспечения = Перечисления.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаНаСрокПоНорме Тогда
				СтрокаЗаказа.НормаПотребления = СтрокаПараметровОбеспечения.НормаПотребления;
			КонецЕсли;
			СтрокиТоваровВПути = ТоварыВПути.НайтиСтроки(Новый Структура("Подразделение, Номенклатура", СтрокаПараметровОбеспечения.Подразделение, СтрокаПараметровОбеспечения.Номенклатура));
			Если СтрокиТоваровВПути.Количество() > 0 Тогда
				СтрокаЗаказа.ТоварыВПути = СтрокиТоваровВПути[0].КоличествоОстатокДт;
			Иначе
				СтрокаЗаказа.ТоварыВПути = 0;
			КонецЕсли;	
			//рассчет ближайшей возможной даты поставки
			Если ЗначениеЗаполнено(ДатаПоставки) Тогда
				СтрокаЗаказа.ДатаПоставки = ДатаПоставки;
			Иначе	
				МассивДат = Новый Массив;
				ДатаСУчетовДнейНаПоставку = Дата + СтрокаПараметровОбеспечения.СрокИсполненияЗаказа*86400;
				МассивДат.Добавить(ДатаСУчетовДнейНаПоставку);	
				СоответствиеРабочихДат = КалендарныеГрафики.ПолучитьДатыРабочихДней(СтрокаПараметровОбеспечения.КалендарьПоставок, МассивДат);
				ПерваяРабочаяДатаПоГрафику = СоответствиеРабочихДат.Получить(ДатаСУчетовДнейНаПоставку);
				Если Не ПерваяРабочаяДатаПоГрафику = Неопределено Тогда
					СтрокаЗаказа.ДатаПоставки = ПерваяРабочаяДатаПоГрафику;
				КонецЕсли;
			КонецЕсли;
			КоличествоДнейДоБлижайшейПоставки = (СтрокаЗаказа.ДатаПоставки - Дата)/86400; 
			//расчитываем ср/суточная реализация*график+мнз(мин стразовой запас)-остаток-товар в пути;округленная до кратности поставки 
			РассчетноеКоличество = СтрокаЗаказа.НормаПотребления * КоличествоДнейДоБлижайшейПоставки + СтрокаЗаказа.МинимальныйЗапас - СтрокаЗаказа.ТекущийОстаток - СтрокаЗаказа.ТоварыВПути;
			Если РассчетноеКоличество = 0 Тогда
				РассчетноеКоличество = СтрокаЗаказа.МинимальныйЗапас;
			ИначеЕсли РассчетноеКоличество < 0 Тогда
				РассчетноеКоличество = 0;
			КонецЕсли;	
			СтрокаЗаказа.РасчетноеКоличество = ОкруглитьДоКратностиПоставки(РассчетноеКоличество, СтрокаЗаказа.КратностьПоставки);
			СтрокаЗаказа.ФактическоеКоличество = СтрокаЗаказа.РасчетноеКоличество;
			СтрокаЗаказа.Сумма = СтрокаЗаказа.ФактическоеКоличество * СтрокаЗаказа.Цена;
		Иначе
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;	
		
КонецПроцедуры

&НаСерверебезКонтекста
Функция ОкруглитьДоКратностиПоставки(Количество, Кратность)
	
	НекратноеЧисло = (Количество / Кратность);
	
	Если Количество = 0 Тогда
		Возврат 0;
	КонецЕсли;	
	
	Если НекратноеЧисло < 1 Тогда
		Возврат Кратность;
	ИначеЕсли Цел(НекратноеЧисло) = НекратноеЧисло Тогда
		Возврат НекратноеЧисло * Кратность;
	Иначе
		Возврат (Цел(НекратноеЧисло) + 1) * Кратность;
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Не ЗначениеЗаполнено(ДатаПоставки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = "ДатаПоставки";
		Сообщение.Текст = "Не указана дата поставки";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	Если ТаблицаЗаказа.Количество() > 0 Тогда
		Ответ = Вопрос("Табличная часть будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ТаблицаЗаказа.Очистить();
			РассчитатьНаСервере();
		КонецЕсли;	
	Иначе	
		РассчитатьНаСервере();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаказы(Команда)
	
	ЕстьНекорректнаяКратность = Ложь;
	ЕстьНоменклатураБезШК = Ложь;
	НомераСтрок = Новый Массив;
	НомераСтрокНомБезШК = Новый Массив;
	
	Для Каждого СтрокаЗаказа Из ТаблицаЗаказа Цикл
		
		Если СтрокаЗаказа.ФактическоеКоличество = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		НекратноеЧисло = СтрокаЗаказа.ФактическоеКоличество/СтрокаЗаказа.КратностьПоставки;
		//ОтсутствуетШК = ЭлектронныйДокументооборотСервер.НоменклатураБезШК(СтрокаЗаказа.Номенклатура);
		ОтсутствуетШК = Ложь;

		Если Не Цел(НекратноеЧисло) = НекратноеЧисло Тогда
			ЕстьНекорректнаяКратность = Истина;
			НомераСтрок.Добавить(ТаблицаЗаказа.Индекс(СтрокаЗаказа)+1);
			СтрокаЗаказа.ЕстьОшибки = Истина;
		КонецЕсли;	
		
		Если ОтсутствуетШК Тогда
			ЕстьНоменклатураБезШК = Истина;
			НомераСтрокНомБезШК.Добавить(ТаблицаЗаказа.Индекс(СтрокаЗаказа)+1);
			СтрокаЗаказа.ЕстьОшибки = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьНекорректнаяКратность Тогда
		Сообщение = Новый СообщениеПользователю;
		ТекстСообщения = "В фактическом количестве указанна некорректная кратность в строках: ";
		
		Для Каждого НомерСтроки Из НомераСтрок Цикл
			ТекстСообщения = ТекстСообщения + НомерСтроки + "; ";	
		КонецЦикла;	
		
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЕстьНоменклатураБезШК Тогда
		Сообщение = Новый СообщениеПользователю;
		ТекстСообщения = "Есть номенклатура без штрихкода в строках: ";
		
		Для Каждого НомерСтроки Из НомераСтрокНомБезШК Цикл
			ТекстСообщения = ТекстСообщения + НомерСтроки + "; ";	
		КонецЦикла;	
		
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СформироватьЗаказыНаСервере();
	
	Элементы.Группа4.ТекущаяСтраница = Элементы.ГруппаСоздание;
	
КонецПроцедуры

Процедура СформироватьЗаказыНаСервере()
	
	СформированнаяТаблицаЗаказа = ТаблицаЗаказа.Выгрузить();
	
	ТЗПоПоставщикам = СформированнаяТаблицаЗаказа.Скопировать(, "Поставщик, ДатаПоставки, Подразделение");
	ТЗПоПоставщикам.Свернуть("Поставщик, ДатаПоставки, Подразделение");
	
	Для Каждого СтрокаПоПоставщикам Из ТЗПоПоставщикам Цикл
		НайденныеСтроки = СформированнаяТаблицаЗаказа.НайтиСтроки(Новый Структура("Поставщик, ДатаПоставки, Подразделение", СтрокаПоПоставщикам.Поставщик, СтрокаПоПоставщикам.ДатаПоставки, СтрокаПоПоставщикам.Подразделение));
		ДокЗаказ = Документы.ЗаказПоставщику.СоздатьДокумент();
		ДокЗаказ.Предприятие = Объект.Предприятие;
		ДокЗаказ.Подразделение = СтрокаПоПоставщикам.Подразделение;
		ДокЗаказ.Контрагент = СтрокаПоПоставщикам.Поставщик;
		РеквизитыДоговора = сабОперОбщегоНазначения.ПолучитьДоговорКонтрагентаПоУмолчанию(ДокЗаказ.Контрагент, ДокЗаказ.Подразделение.Организация);
		ДокЗаказ.Договор = РеквизитыДоговора.Договор;
		ДокЗаказ.ДатаПоступления = СтрокаПоПоставщикам.ДатаПоставки;
		ДокЗаказ.Дата = Дата;
		ДокЗаказ.ПоступлениеОднойДатой = Истина;
		ДокЗаказ.ЦенаВключаетНДС = Истина;
		ДокЗаказ.УчитыватьНДС = Истина;
		ДокЗаказ.ВидОперации = Перечисления.ВидыЗаказов.ЗакупкаТоваров;
		ДокЗаказ.Организация = ДокЗаказ.Подразделение.Организация;
		ДокЗаказ.Склад = ДокЗаказ.Подразделение.Склад;
		ДокЗаказ.Статус = Перечисления.СтатусыЗаказовПоставщикам.Создан;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока.ФактическоеКоличество <= 0 Тогда
				Продолжить;
			КонецЕсли;	
			СтрокаДокЗаказа = ДокЗаказ.ТабличнаяЧасть.Добавить();
			СтрокаДокЗаказа.Номенклатура 		= НайденнаяСтрока.Номенклатура;
			СтрокаДокЗаказа.ВидЦеныПоставщика 	= НайденнаяСтрока.ВидЦены;
			СтрокаДокЗаказа.ДатаПоступления 	= СтрокаПоПоставщикам.ДатаПоставки;
			СтрокаДокЗаказа.ЕдиницаИзмерения 	= СтрокаДокЗаказа.Номенклатура.ЕдиницаИзмерения;
			СтрокаДокЗаказа.КоличествоУпаковок 	= НайденнаяСтрока.ФактическоеКоличество;
			СтрокаДокЗаказа.Количество 			= НайденнаяСтрока.ФактическоеКоличество;
			СтрокаДокЗаказа.Цена 				= НайденнаяСтрока.Цена;
			СтрокаДокЗаказа.Сумма 				= СтрокаДокЗаказа.Количество * СтрокаДокЗаказа.Цена;
			СтрокаДокЗаказа.СтавкаНДС 			= СтрокаДокЗаказа.Номенклатура.СтавкаНДС;
			ТекСтавка = СтрокаДокЗаказа.СтавкаНДС.Ставка;
			Если ЗначениеЗаполнено(ТекСтавка) Тогда
				СтрокаДокЗаказа.СуммаНДС = СтрокаДокЗаказа.Сумма / (1+ТекСтавка/100) * (ТекСтавка/100);
			КонецЕсли;
			Если ЗначениеЗаполнено(Склад) Тогда
				СтрокаДокЗаказа.Склад = Склад;
			Иначе	
				ТипНоменклатуры = НайденнаяСтрока.Номенклатура.ТипНоменклатуры;
				Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Материалы Тогда
					СтрокаДокЗаказа.Склад = Справочники.Склады.ПолучитьСкладПоЗначениюДопРеквизита("Склад производства", Объект.Предприятие);
				Иначе
					СтрокаДокЗаказа.Склад = Справочники.Склады.ПолучитьСкладПоЗначениюДопРеквизита("Торговый зал", Объект.Предприятие);
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		ДокЗаказ.Записать();
		СтрокаТаблицыЗаказов = ТаблицаЗаказов.Добавить();
		СтрокаТаблицыЗаказов.Заказ = ДокЗаказ.Ссылка;
		ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПечатьЗаказаПоставщику(Команда)
	
	МассивЗаказов = Элементы.ТаблицаЗаказов.ТекущиеДанные;
	
	Если Не МассивЗаказов = Неопределено Тогда
		ТабДок = ПечатьЗаказаНаСервере(МассивЗаказов.Заказ);
		
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Защита = Ложь;
		ТабДок.ТолькоПросмотр = Истина;
		ТабДок.ОтображатьЗаголовки = Истина;
		ТабДок.АвтоМасштаб = Истина;
		ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечатиДокумента");
		ФормаПечати.Результат = ТабДок;
		ФормаПечати.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьЗаказаНаСервере(ПараметрКоманды)
	
	Возврат Документы.ЗаказПоставщику.ПечатьЗаказПоставщику(ПараметрКоманды);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	Дата = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаказаФактическоеКоличествоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаЗаказа.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Сумма = ТекДанные.ФактическоеКоличество * ТекДанные.Цена;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьНовоеАвтоформированиеЗаказов(Команда)
	
	ТаблицаЗаказа.Очистить();
	Поставщик = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	Склад = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
	ГруппаНоменклатуры = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	
	Элементы.Группа4.ТекущаяСтраница = Элементы.ГруппаФормирование;
	
КонецПроцедуры
