
&НаКлиенте
Процедура ОбъектПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Объект.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		Если ТипЗнч(ТекСтрока.Субконто1) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств") И НЕ ПустаяСтрока(ТекСтрока.Субконто1) Тогда
			Объект.Статья = ТекСтрока.Субконто1;
		КонецЕсли;
		Если ТипЗнч(ТекСтрока.Подразделение) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Объект.Подразделение = ТекСтрока.Подразделение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерезаписатьРегистратора(ТекДок, Статья, Подразделение)
	
	ТекДокОбъект = ТекДок.ПолучитьОбъект();
	ТекДокОбъект.Субконто1 = Статья;
	Если НЕ Подразделение.Пустая() Тогда
		ТекДокОбъект.Подразделение = Подразделение;
	КонецЕсли;
	
	Если ТекДокОбъект.Проводки.Количество() Тогда
		Если УЧ_Сервер.ДенежныйСчет(ТекДокОбъект.Проводки[0].КорСчет) И УЧ_Сервер.ЕстьВидСубконто(ТекДокОбъект.Проводки[0].КорСчет, "СтатьиДДС") Тогда
			ТекДокОбъект.Проводки[0].КорСубконто1 = БюджетныйНаСервере.ОбратнаяВнутрихолдинговаяСтатья(Статья);
			ТекДокОбъект.Проводки[0].Подразделение = Подразделение;
		КонецЕсли;
	КонецЕсли;
	
	
	Попытка
		ТекДокОбъект.Записать(РежимЗаписиДокумента.Проведение);	
	Исключение
		ТекДокОбъект.Записать();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Присвоить(Команда)
	//ТекСтрока = Элементы.Объект.ТекущиеДанные;
	Если Элементы.Группа4.ТекущаяСтраница = Элементы.ДвиженияДСНовый Тогда
		МассивДокументов = Новый Массив;
		Для Каждого ТекСтрока Из Элементы.Объект3.ВыделенныеСтроки Цикл
			ТекСтрока2 = Элементы.Объект3.ДанныеСтроки(ТекСтрока);
			//если внх-поступление, то сопоставляем с внх-расходом
			ОснованиеВНХ = Неопределено;
			НомерСтрокиОснованиеВНХ = Неопределено;
			
			СтрокаДляОбработки = ТаблицаДляОбработки.Добавить();
			СтрокаДляОбработки.Ссылка 					= ТекСтрока2.Ссылка;
			Если ЗначениеЗаполнено(Объект.Статья) Тогда
				СтрокаДляОбработки.Статья 					= Объект.Статья;
			КонецЕсли;
			Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
				СтрокаДляОбработки.Подразделение 			= Объект.Подразделение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Объект.ЦФО) Тогда
				СтрокаДляОбработки.ЦФО 						= Объект.ЦФО; 
			иначе 
				СтрокаДляОбработки.ЦФО 						= ТекСтрока2.ЦФО;
			КонецЕсли;
			СтрокаДляОбработки.НомерСтроки 				= ТекСтрока2.НомерСтроки; 
			//СтрокаДляОбработки.ОснованиеВНХ 			= ОснованиеВНХ; 
			//СтрокаДляОбработки.НомерСтрокиОснованиеВНХ 	= НомерСтрокиОснованиеВНХ;
			
			Если МассивДокументов.Найти(ТекСтрока2.Ссылка) = Неопределено Тогда
				МассивДокументов.Добавить(ТекСтрока2.Ссылка);		
			КонецЕсли;
		КонецЦикла;
		
		
		счСтроки = 0;
		ВремяНачала = ТекущаяДата();
		ЧислоСтрок  = МассивДокументов.Количество();
		
		Для Каждого ТекДок Из МассивДокументов Цикл //для клиент-сервера
			
			ТекущаяСкорость = ТекущаяДата();
			счСтроки = счСтроки + 1;
			СкоростьЗагрузки = ?(ТекущаяДата() - ВремяНачала = 0, 0, Окр(счСтроки / (ТекущаяДата() - ВремяНачала), 2));
			ОсталосьВремени = Окр((ТекущаяДата() - ВремяНачала) / счСтроки * (ЧислоСтрок - счСтроки) / 60, 2);
			
			Если счСтроки / 100 = Окр(счСтроки / 100, 0) ИЛИ СкоростьЗагрузки < 1 ИЛИ ЧислоСтрок < 100 ИЛИ СкоростьЗагрузки < 5 Тогда
				Состояние("Загрузка..." + " Осталось " + Строка(ОсталосьВремени) + " мин." + " Скорость " + Строка(СкоростьЗагрузки) + " стр/сек",
				счСтроки / ЧислоСтрок * 100, "№ дока: " +  Строка(ТекДок) +
				" (" + Строка(счСтроки) + "/" + Строка(ЧислоСтрок) + ")" );
			КонецЕсли;
			
			ПерезаписатьРегистратораПоНесколькимСтрокам(ТекДок);
		КонецЦикла;
		
		ТаблицаДляОбработки.Очистить();
		Элементы.Объект3.Обновить();
		//ОповеститьОбИзменении(Тип("ДокументСсылка.УЧ_ДвижениеДС"));
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере2(Отказ, СтандартнаяОбработка)
	//Объект.Период.ДатаНачала = ?(Объект.Период.ДатаНачала < НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), - 1)), НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), - 1)), Объект.Период.ДатаНачала);
	//Объект.Период.ДатаОкончания = ?(Объект.Период.ДатаОкончания < Дата('20120401000000'), Дата('20120401000000'), Объект.Период.ДатаОкончания);
	Объект.Период.ДатаОкончания = ?(Объект.Период.ДатаОкончания < Объект.Период.ДатаНачала, КонецМесяца(Объект.Период.ДатаНачала), Объект.Период.ДатаОкончания);
	//Объект2.Параметры.УстановитьЗначениеПараметра("Предприятия", ПараметрыСеанса.ДоступныеПредприятия);
	Объект3.Параметры.УстановитьЗначениеПараметра("Предприятия", ПараметрыСеанса.ДоступныеПредприятия);
	//Объект3.Параметры.УстановитьЗначениеПараметра("ПредприятиеКазна", Неопределено);
	Объект3.Параметры.УстановитьЗначениеПараметра("ДатаНачала", Объект.Период.ДатаНачала);
	Объект3.Параметры.УстановитьЗначениеПараметра("ДатаКонец", Объект.Период.ДатаОкончания);
	Объект3.Параметры.УстановитьЗначениеПараметра("КазнаОсн", ПланыСчетов.Учетный.Счет5501());
	//Объект3.Параметры.УстановитьЗначениеПараметра("Счет50", ПланыСчетов.Учетный.Счет50());
	//Объект3.Параметры.УстановитьЗначениеПараметра("Счет51", ПланыСчетов.Учетный.Счет51());
	 
	Объект3.Параметры.УстановитьЗначениеПараметра("СчетКассаМагазина", ПланыСчетов.Учетный.НайтиПоКоду("50.03"));
	//Проводки.Параметры.УстановитьЗначениеПараметра("Предприятия", ПараметрыСеанса.ДоступныеПредприятия);
КонецПроцедуры


&НаКлиенте
Процедура Неклассифицированные(Команда)
	Элементы.ОбъектНеклассифицированные.Пометка = 1 - Элементы.ОбъектНеклассифицированные.Пометка;
	ОбновитьСписок(Элементы.ОбъектНеклассифицированные.Пометка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписок(ТекЗнач)
КонецПроцедуры

&НаКлиенте
Процедура ОбъектВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя = "Субконто1" Тогда
		СтандартнаяОбработка = Ложь;
		ТекСтатья = Элемент.ТекущиеДанные.Субконто1;
		ТекПодразделение = Элемент.ТекущиеДанные.Подразделение;
		НоваяСтатья = ОткрытьФормуМодально("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора", Новый Структура("ТекущаяСтрока", ТекСтатья)); 
		Если НЕ НоваяСтатья = Неопределено Тогда
			ПерезаписатьРегистратора(Элементы.Объект.ТекущаяСтрока, НоваяСтатья, ТекПодразделение);
			ОповеститьОбИзменении(Элементы.Объект.ТекущаяСтрока);
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "Подразделение" Тогда
		СтандартнаяОбработка = Ложь;
		ТекСтатья = Элемент.ТекущиеДанные.Субконто1;
		ТекПодразделение = Элемент.ТекущиеДанные.Подразделение;
		аа = ПолучитьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", Новый Структура("ТекущаяСтрока, Владелец", ТекПодразделение, Элемент.ТекущиеДанные.Предприятие));
		НовыйОтбор = аа.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
		НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = Элемент.ТекущиеДанные.Предприятие;
		НовоеПодразделение = аа.ОткрытьМодально();
		//НовоеПодразделение = ОткрытьФормуМодально("Справочник.СтруктураПредприятия.ФормаВыбора", Новый Структура("ТекущаяСтрока, Владелец", ТекПодразделение, Элемент.ТекущиеДанные.Предприятие)); 
		Если НЕ НовоеПодразделение = Неопределено Тогда
			ПерезаписатьРегистратора(Элементы.Объект.ТекущаяСтрока, ТекСтатья, НовоеПодразделение);
			ОповеститьОбИзменении(Элементы.Объект.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПерезаписатьОперацию(ТекДанные, Статья, Подразделение)
	
	
	
	Если НЕ ТипЗнч(ТекДанные.Регистратор) = Тип("ДокументСсылка.УЧ_Операция") Тогда
		Сообщить("Документ-регистратор не является операцией. Изменение статьи невозможно.");
		Возврат;
	Иначе
		РегистраторОбъект = ТекДанные.Регистратор.ПолучитьОбъект();
		ТекСтрока = РегистраторОбъект.Проводки[ТекДанные.НомерСтроки - 1];
		Если ТекСтрока.СчетДебет = ПланыСчетов.Учетный.Счет5501() Тогда //если приход
			
			Если Не ПустаяСтрока(Статья) Тогда
				ТекСтрока.Субконто1Дебет = Статья;
			КонецЕсли;	
			Если Не ПустаяСтрока(Подразделение) Тогда
				ТекСтрока.ПодразделениеДт = Подразделение;
			КонецЕсли;
			
		Иначе //если расход
			Если Не ПустаяСтрока(Статья) Тогда
				ТекСтрока.Субконто1Кредит = Статья;
			КонецЕсли;	
			Если Не ПустаяСтрока(Подразделение) Тогда
				ТекСтрока.ПодразделениеКт = Подразделение;
			КонецЕсли;
			
		КонецЕсли;
		
		РегистраторОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Проводки1ПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Проводки1.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		Если ТипЗнч(ТекСтрока.Статья) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств") И НЕ ПустаяСтрока(ТекСтрока.Статья) Тогда
			Объект.Статья = ТекСтрока.Статья;
		КонецЕсли;
		Если ТипЗнч(ТекСтрока.Подразделение) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Объект.Подразделение = ТекСтрока.Подразделение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Подразделение1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПодразделениеВыборСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеВыборСервер()
	//Если Элементы.Группа4.ТекущаяСтраница = Элементы.ДвиженияДС Тогда
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Объект3.ТекущиеДанные.ЦФО");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Подразделение1.СвязиПараметровВыбора = НовыеСвязи;
	//Иначе
	//	НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Проводки1.ТекущиеДанные.Предприятия");
	//	НовыйМассив = Новый Массив();
	//	НовыйМассив.Добавить(НоваяСвязь);
	//	НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	//	Элементы.Подразделение1.СвязиПараметровВыбора = НовыеСвязи;
	//КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НеклассифицированныеКазна(Команда)
	Элементы.Проводки1НеклассифицированныеКазна.Пометка = 1 - Элементы.Проводки1НеклассифицированныеКазна.Пометка;
	ОбновитьПроводки1(Элементы.Проводки1НеклассифицированныеКазна.Пометка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьПроводки1(Признак)
	
		
КонецПроцедуры

&НаКлиенте
Процедура Объект3Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "Объект3КодСтатьи" ИЛИ Элемент.ТекущийЭлемент.Имя = "Объект3ФинСтатья" Тогда
		СтандартнаяОбработка = Ложь;
		//Если Элемент.ТекущиеДанные.Обработано И Не БюджетныйНаСервере.РольДоступнаСервер("ОФК") Тогда
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Текст = "Статья не может быть изменена так как установлен признак ""Обработано""";
		//	Сообщение.Сообщить();
		//Иначе	
		ТекСтатья = Элемент.ТекущиеДанные.ФинСтатья;
		ТекПодразделение = Элемент.ТекущиеДанные.ФинПодразделение;
		ТекЦФО = Элемент.ТекущиеДанные.ЦФО;
		НоваяСтатья = Неопределено;
		
		ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора", Новый Структура("ТекущаяСтрока", ТекСтатья),,,,, Новый ОписаниеОповещения("Объект3ВыборЗавершение", ЭтаФорма, Новый Структура("ТекПодразделение, ТекЦФО, Элемент", ТекПодразделение, ТекЦФО, Элемент)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "Объект3ФинПодразделение" Тогда
		СтандартнаяОбработка = Ложь;
		ТекСтатья = Элемент.ТекущиеДанные.ФинСтатья;
		ТекПодразделение = Элемент.ТекущиеДанные.ФинПодразделение;
		ТекЦФО = Элемент.ТекущиеДанные.ЦФО;
		аа = ПолучитьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", Новый Структура("ТекущаяСтрока, Владелец", ТекПодразделение, ТекЦФО));
		НовыйОтбор = аа.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
		НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		НовыйОтбор.ПравоеЗначение = ТекЦФО;
		НовоеПодразделение = аа.ОткрытьМодально();
		//НовоеПодразделение = ОткрытьФормуМодально("Справочник.СтруктураПредприятия.ФормаВыбора", Новый Структура("ТекущаяСтрока, Владелец", ТекПодразделение, Элемент.ТекущиеДанные.Предприятие)); 
		Если НЕ НовоеПодразделение = Неопределено Тогда
			ПерезаписатьРегистратора2(Элемент.ТекущиеДанные.Ссылка, ТекСтатья, НовоеПодразделение, ТекЦФО, Элемент.ТекущиеДанные.НомерСтроки);
			Элементы.Объект3.Обновить();
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "Объект3ЦФО" Тогда
		СтандартнаяОбработка = Ложь;
		ТекЦФО = Элемент.ТекущиеДанные.ЦФО;
		ТекСтатья = Элемент.ТекущиеДанные.ФинСтатья;
		ТекПодразделение = "";
		НовоеЦФО = Неопределено;

		ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(ЗначениеЗаполнено(ТекЦФО), ТекЦФО, Элемент.ТекущиеДанные.Предприятие)),,,,, Новый ОписаниеОповещения("Объект3ВыборЗавершение1", ЭтаФорма, Новый Структура("ТекПодразделение, ТекСтатья, Элемент", ТекПодразделение, ТекСтатья, Элемент)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "Объект3Обработано" Тогда
		СтандартнаяОбработка = Ложь;
		Если БюджетныйНаСервере.РольДоступнаСервер("ОФК") Тогда
			//ТекСтатья = Элемент.ТекущиеДанные.ФинСтатья;
			//ТекПодразделение = Элемент.ТекущиеДанные.ФинПодразделение;
			//ТекЦФО = Элемент.ТекущиеДанные.ЦФО;
			ЗначениеОбработано = ПолучитьЗначениеОбработано(Элемент.ТекущиеДанные.Ссылка, Элемент.ТекущиеДанные.НомерСтроки);
			Если ЗначениеОбработано Тогда
				ПерезаписатьРегистратора2(Элемент.ТекущиеДанные.Ссылка, ТекСтатья, ТекПодразделение, ТекЦФО, Элемент.ТекущиеДанные.НомерСтроки, , , Ложь);
			Иначе
				ПерезаписатьРегистратора2(Элемент.ТекущиеДанные.Ссылка, ТекСтатья, ТекПодразделение, ТекЦФО, Элемент.ТекущиеДанные.НомерСтроки, , , Истина);
			КонецЕсли;	
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Реквизит ""Обработано"" может изменять только ОФК";
			Сообщение.Сообщить();
		КонецЕсли;
		Элементы.Объект3.Обновить();
	Иначе
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Объект3ВыборЗавершение1(Результат, ДополнительныеПараметры) Экспорт
	
	ТекПодразделение = ДополнительныеПараметры.ТекПодразделение;
	ТекСтатья = ДополнительныеПараметры.ТекСтатья;
	Элемент = ДополнительныеПараметры.Элемент;
	
	
	//ТекПодразделение = Элемент.ТекущиеДанные.ФинПодразделение;
	НовоеЦФО = Результат; 
	Если НЕ НовоеЦФО = Неопределено Тогда
		ПерезаписатьРегистратора2(Элемент.ТекущиеДанные.Ссылка, ТекСтатья, ТекПодразделение, НовоеЦФО, Элемент.ТекущиеДанные.НомерСтроки);
		Элементы.Объект3.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Объект3ВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекПодразделение = ДополнительныеПараметры.ТекПодразделение;
	ТекЦФО = ДополнительныеПараметры.ТекЦФО;
	Элемент = ДополнительныеПараметры.Элемент;
	
	
	НоваяСтатья = Результат; 
	Если НЕ НоваяСтатья = Неопределено Тогда
		
		//если внх-поступление, то сопоставляем с внх-расходом
		ОснованиеВНХ = Неопределено;
		НомерСтрокиОснованиеВНХ = Неопределено;
		
		ПерезаписатьРегистратора2(Элемент.ТекущиеДанные.Ссылка, НоваяСтатья, ТекПодразделение, ТекЦФО, Элемент.ТекущиеДанные.НомерСтроки, ОснованиеВНХ, НомерСтрокиОснованиеВНХ);
		Элементы.Объект3.Обновить();
	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерезаписатьРегистратора2(ТекДок, Статья, Подразделение, ЦФО, НомерСтроки, ОснованиеВНХ = Неопределено, НомерСтрокиОснованиеВНХ = Неопределено, Обработано = Неопределено)
	
	ТекДокОбъект = ТекДок.ПолучитьОбъект();
	
	Если ТипЗнч(ТекДок) = Тип("ДокументСсылка.УЧ_ДвижениеДС") Тогда
		
		Если ЗначениеЗаполнено(Статья) Тогда
			ТекДокОбъект.Проводки[НомерСтроки - 1].ФинСтатья = Статья;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЦФО) Тогда
			ТекДокОбъект.Проводки[НомерСтроки - 1].ФинЦФО = ЦФО;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Если ЦФО.УчетПоПодразделениям Тогда
				ТекДокОбъект.Проводки[НомерСтроки - 1].ФинПодразделение = Подразделение;
			Иначе
				ТекДокОбъект.Проводки[НомерСтроки - 1].ФинПодразделение = ЦФО.ВидДеятельности;
			КонецЕсли;
		КонецЕсли;
		
		Если УЧ_Сервер.ДенежныйСчет(ТекДокОбъект.Проводки[НомерСтроки - 1].КорСчет) И УЧ_Сервер.ЕстьВидСубконто(ТекДокОбъект.Проводки[НомерСтроки - 1].КорСчет, "СтатьиДДС") Тогда
			ТекДокОбъект.Проводки[НомерСтроки - 1].КорСубконто1 = БюджетныйНаСервере.ОбратнаяВнутрихолдинговаяСтатья(Статья);
			ТекДокОбъект.Проводки[НомерСтроки - 1].Подразделение = Подразделение;
		КонецЕсли;
		
		//Если НЕ ОснованиеВНХ = Неопределено Тогда
		//	ТекДокОбъект.Проводки[НомерСтроки - 1].ОснованиеВНХ = ОснованиеВНХ;	
		//	ТекДокОбъект.Проводки[НомерСтроки - 1].НомерСтрокиОснованиеВНХ = НомерСтрокиОснованиеВНХ;	
		//КонецЕсли;
		
		Если Не Обработано = Неопределено Тогда
			ТекДокОбъект.Проводки[НомерСтроки - 1].Обработано = Обработано;	
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Статья) Тогда
			ТекДокОбъект.Статья = Статья;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЦФО) Тогда
			ТекДокОбъект.ЦФО = ЦФО
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Если ЦФО.УчетПоПодразделениям Тогда
				ТекДокОбъект.Подразделение = Подразделение;
			Иначе
				ТекДокОбъект.Подразделение = ЦФО.ВидДеятельности;
			КонецЕсли;
		КонецЕсли;
		
		Если УЧ_Сервер.ДенежныйСчет(ТекДокОбъект.КорСчет) И УЧ_Сервер.ЕстьВидСубконто(ТекДокОбъект.КорСчет, "СтатьиДДС") Тогда
			ТекДокОбъект.КорСубконто1 = БюджетныйНаСервере.ОбратнаяВнутрихолдинговаяСтатья(Статья);
		КонецЕсли;
		
		//Если НЕ ОснованиеВНХ = Неопределено Тогда
		//	ТекДокОбъект.Проводки[НомерСтроки - 1].ОснованиеВНХ = ОснованиеВНХ;	
		//	ТекДокОбъект.Проводки[НомерСтроки - 1].НомерСтрокиОснованиеВНХ = НомерСтрокиОснованиеВНХ;	
		//КонецЕсли;
		
		Если Не Обработано = Неопределено Тогда
			ТекДокОбъект.Проводки[НомерСтроки - 1].Обработано = Обработано;	
		КонецЕсли;
				
	КонецЕсли;
	
	ТекДокОбъект.Записать(РежимЗаписиДокумента.Проведение);	
	
КонецПроцедуры

&НаСервере
Процедура ПерезаписатьРегистратораПоНесколькимСтрокам(ТекДок)
	
	//НовТаблица = ТаблицаДляОбработки.Выгрузить();
	//НовТаблица.Свернуть("Ссылка");
	//МассивДокументов = НовТаблица.ВыгрузитьКолонку("Ссылка");
	//
	//Для Каждого ТекДок Из МассивДокументов Цикл
		ТекДокОбъект = ТекДок.ПолучитьОбъект();
		
		Если ТипЗнч(ТекДок) = Тип("ДокументСсылка.УЧ_ДвижениеДС") Тогда
			МассивСтрок = ТаблицаДляОбработки.НайтиСтроки(Новый Структура("Ссылка", ТекДок));
			
			Для Каждого ТекСтрока Из МассивСтрок Цикл
				Если ЗначениеЗаполнено(ТекСтрока.Статья) Тогда
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].ФинСтатья = ТекСтрока.Статья;
				КонецЕсли;
				Если ЗначениеЗаполнено(ТекСтрока.ЦФО) Тогда
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].ФинЦФО = ТекСтрока.ЦФО;
				КонецЕсли;
				Если ЗначениеЗаполнено(ТекСтрока.Подразделение) Тогда
					//Если ТекСтрока.ЦФО.УчетПоПодразделениям Тогда
					//	ТекДокОбъект.Подразделение = ТекСтрока.Подразделение;
					//Иначе
					//	ТекДокОбъект.Подразделение = ТекСтрока.ЦФО.ВидДеятельности;
					//КонецЕсли; 
					ТекДокОбъект.Подразделение = ТекСтрока.Подразделение;
					Если ЗначениеЗаполнено(ТекСтрока.ЦФО) тогда
						ИзменитьЦФО(ТекСтрока.ЦФО,ТекСтрока.Подразделение); 
					КонецЕсли;
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].Подразделение = ТекСтрока.Подразделение;
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].ФинПодразделение = ТекСтрока.Подразделение;
				КонецЕсли;

				
				Если УЧ_Сервер.ДенежныйСчет(ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].КорСчет) И УЧ_Сервер.ЕстьВидСубконто(ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].КорСчет, "СтатьиДДС") Тогда
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].КорСубконто1 = БюджетныйНаСервере.ОбратнаяВнутрихолдинговаяСтатья(ТекСтрока.Статья);
				КонецЕсли;
				
				//Если ЗначениеЗаполнено(ТекСтрока.ОснованиеВНХ) Тогда
				//	ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].ОснованиеВНХ = ТекСтрока.ОснованиеВНХ;	
				//	ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].НомерСтрокиОснованиеВНХ = ТекСтрока.НомерСтрокиОснованиеВНХ;	
				//КонецЕсли;
				
				//	Если Не Обработано = Неопределено Тогда
				//		ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].Обработано = Обработано;	
				//	КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			МассивСтрок = ТаблицаДляОбработки.НайтиСтроки(Новый Структура("Ссылка", ТекДок));
			
			Для Каждого ТекСтрока Из МассивСтрок Цикл
				
				Если ЗначениеЗаполнено(ТекСтрока.Статья) Тогда
					ТекДокОбъект.Статья = ТекСтрока.Статья
				КонецЕсли;
				Если ЗначениеЗаполнено(ТекСтрока.ЦФО) Тогда
					ТекДокОбъект.ЦФО = ТекСтрока.ЦФО;
				КонецЕсли;
				Если ЗначениеЗаполнено(ТекСтрока.Подразделение) Тогда	
					//Если ТекСтрока.ЦФО.УчетПоПодразделениям Тогда
					//	ТекДокОбъект.Подразделение = ТекСтрока.Подразделение;
					//Иначе
					//	ТекДокОбъект.Подразделение = ТекСтрока.ЦФО.ВидДеятельности;
					//КонецЕсли; 
					ТекДокОбъект.Подразделение = ТекСтрока.Подразделение;
					ИзменитьЦФО(ТекСтрока.ЦФО,ТекСтрока.Подразделение);
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].Подразделение = ТекСтрока.Подразделение;
					ТекДокОбъект.Проводки[ТекСтрока.НомерСтроки - 1].ФинПодразделение = ТекСтрока.Подразделение;
				КонецЕсли;
				
				Если УЧ_Сервер.ДенежныйСчет(ТекДокОбъект.КорСчет) И УЧ_Сервер.ЕстьВидСубконто(ТекДокОбъект.КорСчет, "СтатьиДДС") Тогда
					ТекДокОбъект.КорСубконто1 = БюджетныйНаСервере.ОбратнаяВнутрихолдинговаяСтатья(ТекСтрока.Статья);
				КонецЕсли;
				
				//Если НЕ ОснованиеВНХ = Неопределено Тогда
				//	ТекДокОбъект.Проводки[НомерСтроки - 1].ОснованиеВНХ = ОснованиеВНХ;	
				//	ТекДокОбъект.Проводки[НомерСтроки - 1].НомерСтрокиОснованиеВНХ = НомерСтрокиОснованиеВНХ;	
				//КонецЕсли;
				
				//Если Не Обработано = Неопределено Тогда
				//	ТекДокОбъект.Проводки[НомерСтроки - 1].Обработано = Обработано;	
				//КонецЕсли;
			КонецЦикла;	
			
		КонецЕсли;
		
		ТекДокОбъект.Записать(РежимЗаписиДокумента.Проведение);	
	//КонецЦикла;
	
КонецПроцедуры	

Процедура ИзменитьЦФО(ЦФОСсылка,ВидДеятельностиЦФО)

	Если НЕ ЦФОСсылка = Справочники.Предприятия.ПустаяСсылка() тогда 
		ЦФООбъект = ЦФОСсылка.ПолучитьОбъект();
		ЦФООбъект.ВидДеятельности = ВидДеятельностиЦФО;
		НачатьТранзакцию();
		Попытка 
			Если ТранзакцияАктивна() тогда
				ЦФООбъект.Записать();	
				ЗафиксироватьТранзакцию();        
			КонецЕсли;
		исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЕсли;   

КонецПроцедуры

&НаКлиенте
Процедура Объект3ПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Объект3.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		//Если ТипЗнч(ТекСтрока.ФинСтатья) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств") И НЕ ПустаяСтрока(ТекСтрока.ФинСтатья) Тогда
		//	Объект.Статья = ТекСтрока.ФинСтатья;
		//КонецЕсли;
		//Если ТипЗнч(ТекСтрока.ФинПодразделение) = Тип("СправочникСсылка.СтруктураПредприятия") И НЕ ПустаяСтрока(ТекСтрока.ФинПодразделение) Тогда
		//	Объект.Подразделение = ТекСтрока.ФинПодразделение;
		//КонецЕсли;
		//Если ТипЗнч(ТекСтрока.ЦФО) = Тип("СправочникСсылка.Предприятия") И НЕ ПустаяСтрока(ТекСтрока.ЦФО) Тогда
		//	Объект.ЦФО = ТекСтрока.ЦФО;
		//КонецЕсли;
		
		Если Элементы.Объект3Основания.Пометка Тогда
			ТекСтрока = Элементы.Объект3.ДанныеСтроки(Элементы.Объект3.ТекущаяСтрока);
			ОбновитьОснования(ТекСтрока.Ссылка);	
		КонецЕсли;

	ИначеЕсли Элементы.Объект3Основания.Пометка Тогда 
		ОбновитьОснования(Неопределено);	
	КонецЕсли;
	Суммировать();
КонецПроцедуры

&НаКлиенте
Процедура Суммировать()
	ТекСумма = 0;
	Если НЕ Элементы.Объект3.ТекущиеДанные = Неопределено Тогда
		Для каждого ТекСтрока Из Элементы.Объект3.ВыделенныеСтроки Цикл
			ТекСумма = ТекСумма + Элементы.Объект3.ДанныеСтроки(ТекСтрока).СуммаПриход - Элементы.Объект3.ДанныеСтроки(ТекСтрока).СуммаРасход;		
		КонецЦикла; 
	КонецЕсли;
	ИтогоСумма = ТекСумма;
КонецПроцедуры


&НаКлиенте
Процедура Заполнить(Команда)
	ПриСозданииНаСервере2(Ложь, истина);
	Если БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		ЗаполнитьСерверТЧ();
		ТабДок.Показать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСерверТЧ()
	ТабДок.Очистить();
	Попытка
		ЭтотОбъект2 = ВнешниеОбработки.Создать("ОбработкаФакта");	
	Исключение
		ЭтотОбъект2 = Обработки.ОбработкаФакта;
	КонецПопытки;
	
	Макет = ЭтотОбъект2.ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьДанные = Макет.ПолучитьОбласть("Данные");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УЧ_ДвижениеДСПроводки.Ссылка,
	               |	УЧ_ДвижениеДСПроводки.НомерСтроки,
	               |	УЧ_ДвижениеДСПроводки.КорСчет,
	               |	УЧ_ДвижениеДСПроводки.КорСубконто1,
	               |	УЧ_ДвижениеДСПроводки.КорСубконто2,
	               |	УЧ_ДвижениеДСПроводки.КорСубконто3,
	               |	УЧ_ДвижениеДСПроводки.Сумма,
	               |	УЧ_ДвижениеДСПроводки.Содержание,
	               |	УЧ_ДвижениеДСПроводки.Валюта,
	               |	УЧ_ДвижениеДСПроводки.Курс,
	               |	УЧ_ДвижениеДСПроводки.ВалСумма,
	               |	УЧ_ДвижениеДСПроводки.Подразделение,
	               |	УЧ_ДвижениеДСПроводки.Количество,
	               |	УЧ_ДвижениеДСПроводки.ФинСтатья,
	               |	УЧ_ДвижениеДСПроводки.ФинПодразделение,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Счет,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Субконто2 КАК Источник,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Субконто1 КАК СтатьяШапки,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.СуммаДокумента,
	               |	ВЫБОР
	               |		КОГДА УЧ_ДвижениеДСПроводки.Ссылка.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Поступление)
	               |				ИЛИ УЧ_ДвижениеДСПроводки.Ссылка.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПоступлениеВНХ)
	               |			ТОГДА УЧ_ДвижениеДСПроводки.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаПриход,
	               |	ВЫБОР
	               |		КОГДА НЕ(УЧ_ДвижениеДСПроводки.Ссылка.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.Поступление)
	               |					ИЛИ УЧ_ДвижениеДСПроводки.Ссылка.ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ПоступлениеВНХ))
	               |			ТОГДА УЧ_ДвижениеДСПроводки.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаРасход,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Дата,
	               |	УЧ_ДвижениеДСПроводки.ФинСтатья.Код КАК КодСтатьи,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Предприятие,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.ПриходРасход КАК ВидОперации,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Содержание КАК СодержаниеШапки,
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Контрагент
	               |ИЗ
	               |	Документ.УЧ_ДвижениеДС.Проводки КАК УЧ_ДвижениеДСПроводки
	               |ГДЕ
	               |	УЧ_ДвижениеДСПроводки.Ссылка.Предприятие В ИЕРАРХИИ(&Предприятия)
	               |	И УЧ_ДвижениеДСПроводки.Ссылка.Проведен = ИСТИНА
	               |	И УЧ_ДвижениеДСПроводки.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаКонец";
	
	Запрос.УстановитьПараметр("ДатаНачала", ?(Объект.Период.ДатаНачала < НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), - 1)), НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), - 1)), Объект.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКонец", ?(Объект.Период.ДатаОкончания < Дата('20120501000000'), Дата('20120501000000'), Объект.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Предприятия", ПараметрыСеанса.ДоступныеПредприятия);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТабДок.Вывести(ОбластьШапка);
	
	
	Пока Выборка.Следующий() Цикл
		ОбластьДанные.Параметры.Заполнить(Выборка);
		//ОбластьДанные.Параметры.ФинСтатья.Значение = Выборка.ФинСтатья;
		ТабДок.Вывести(ОбластьДанные);
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПриИзменении(Элемент)
	
	а = 1;// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Объект.Период.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата()) - 1);
		Объект.Период.ДатаОкончания = КонецМесяца(НачалоМесяца(ТекущаяДата()) - 1);
	КонецЕсли;	
	
	ПриСозданииНаСервере2(Ложь, истина);
	
	Элементы.Объект3.Обновить();
	
	СкрытьПодразделения();
	
КонецПроцедуры

&НаКлиенте
Процедура Основания(Команда)
	Элементы.Объект3Основания.Пометка = 1 - Элементы.Объект3Основания.Пометка;
	Если Элементы.Объект3Основания.Пометка Тогда
		ОбновитьОснования(Элементы.Объект3.ДанныеСтроки(Элементы.Объект3.ТекущаяСтрока).Ссылка);
		Элементы.Объект3Основания.Заголовок = "Скрыть основания...";
	Иначе
		Элементы.Объект3Основания.Заголовок = "Показать основания...";
	КонецЕсли;
	Элементы.Группа8.Видимость = Элементы.Объект3Основания.Пометка;
КонецПроцедуры

Процедура ОбновитьОснования(ТекСсылка)
	ТекДС = ТекСсылка;	
	СписокДокументов = Новый Массив;
	Для Н = 1 По 5 Цикл
		Попытка
			СписокДокументов.Добавить(ТекДС.ДокОснование);
			ТекДС = ТекДС.ДокОснование;
		Исключение
			Попытка
				СписокДокументов.Добавить(ТекДС.Заявка);
				ТекДС = ТекДС.Заявка;
			Исключение
			КонецПопытки;	
		КонецПопытки; 
		Н = Н + 1;
	КонецЦикла;
	
	
	Платежка = "";
	Заявка = "";
	Казна = "";
	Касса = "";
	СтрокаЗаявки = 0;
	Для каждого ТекДок Из СписокДокументов Цикл
		Если ТипЗнч(ТекДок) = Тип("ДокументСсылка.ПлатежноеПоручение") Тогда
			Платежка = ТекДок;
		ИначеЕсли  ТипЗнч(ТекДок) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату")  Тогда
			Заявка = ТекДок;
		ИначеЕсли ТипЗнч(ТекДок) = Тип("ДокументСсылка.Д_ЗаявкаНаАвансовыйОтчет") Тогда
			Заявка = ТекДок;
			//СтрокаЗаявки = ТекДок.НомерСтроки;
		ИначеЕсли  ТипЗнч(ТекДок) = Тип("ДокументСсылка.УЧ_РК") Тогда
			Если ТекДок.Источник = сабОбщегоНазначенияПовтИсп.ПолучитьПредопределенныйИсточник() Тогда
				Казна = ТекДок;
			Иначе
				Касса = ТекДок;
			КонецЕсли;	
		Иначе
			Казна = ТекДок;	
		КонецЕсли;
	КонецЦикла; 

	

КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПриСозданииНаСервере2(Ложь, истина);
	//Если БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
	//	ЗаполнитьСерверТЧ();
	//	ТабДок.Показать();
	//КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаНажатие(Элемент, СтандартнаяОбработка)
	Если ТипЗнч(Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаАвансовыйОтчет") И ЗначениеЗаполнено(Заявка) Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Документ.Д_ЗаявкаНаАвансовыйОтчет.ФормаОбъекта", Новый Структура("Ключ, НомерСтроки", Заявка, СтрокаЗаявки)); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПодразделения()
	//ЕстьПодр = ЕстьПодразделения();
	// Элементы.Подразделение1.Видимость = ЕстьПодр;
	// Элементы.Объект3ФинПодразделение.Видимость = ЕстьПодр;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПодразделения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям,
	               |	Предприятия.Ссылка
	               |ИЗ
	               |	Справочник.Предприятия КАК Предприятия
	               |ГДЕ
	               |	Предприятия.УчетПоПодразделениям = ИСТИНА
	               |	И Предприятия.Ссылка В(&ДоступныеПредприятия)";
	
	Запрос.УстановитьПараметр("ДоступныеПредприятия", ПараметрыСеанса.ДоступныеПредприятия);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выбрать().Количество();
	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьЗначениеОбработано(Ссылка, НомерСтроки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ДвижениеДСПроводки.Обработано
	|ИЗ
	|	Документ.УЧ_ДвижениеДС.Проводки КАК УЧ_ДвижениеДСПроводки
	|ГДЕ
	|	УЧ_ДвижениеДСПроводки.Ссылка = &Ссылка
	|	И УЧ_ДвижениеДСПроводки.НомерСтроки = &НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УЧ_РК.Обработано
	|ИЗ
	|	Документ.УЧ_РК КАК УЧ_РК
	|ГДЕ
	|	УЧ_РК.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Обработано;	
	КонецЦикла;	

КонецФункции


