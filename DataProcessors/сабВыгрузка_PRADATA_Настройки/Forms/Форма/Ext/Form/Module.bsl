
&НаКлиенте
Процедура ПроизвольныйПериодПриИзменении(Элемент)
	
	Если Объект.ПроизвольныйПериод Тогда
		Элементы.ДатаНачала.Доступность = Истина;
		Элементы.ДатаОкончания.Доступность = Истина;
	Иначе
		Элементы.ДатаНачала.Доступность = Ложь;
		Элементы.ДатаОкончания.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда		
		ТекстСообщения = НСтр(
		"ru='Для данной операции необходимо
		|установить расширение работы с файлами!
		|Установка выполняется в разделе
		|""Сервис и администрирование""/
		|""Настройка сервисных функций"".'"
		);
		ПоказатьПредупреждение(Неопределено, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
	ДиалогВыбораКаталога.Каталог = ПутьКФайлу;
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбораКаталога.Каталог;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлы(Команда) 
	
	Если Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеОтветаСохранитьНастройки",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,"Настройки были изменены. Перед выгрузкой необходимо сохранить настройки. Сохранить настройки и продолжить?",РежимДиалогаВопрос.ДаНетОтмена);
	Иначе	
		ВыгрузитьФайлыНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеОтветаСохранитьНастройки(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаСервере();
		Модифицированность = Ложь;
		ВыгрузитьФайлыНаКлиенте();	
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура ВыгрузитьФайлыНаКлиенте()
	
	Если Объект.ПроизвольныйПериод Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			Сообщить("Период должен быть заполнен.");
			Возврат;
		КонецЕсли;
		Если НачалоДня(Объект.ДатаНачала) > НачалоДня(Объект.ДатаОкончания) Тогда
			Сообщить("Дата окончания не может быть меньше даты начала");
			Возврат;
		КонецЕсли;
	КонецЕсли; 
	Для Каждого СтрокаКонтрагенты Из Объект.Контрагенты Цикл
		Если Не ЗначениеЗаполнено(СокрЛП(СтрокаКонтрагенты.ПапкаДляРучнойВыгрузки)) Тогда
			Продолжить;
		КонецЕсли;
		Файл_delivery = Новый ТекстовыйДокумент; 
		Файл_sku = Новый ТекстовыйДокумент; 
		Файл_ttoptions = Новый ТекстовыйДокумент;
		Файл_stocks = Новый ТекстовыйДокумент;
		Файл_receive = Новый ТекстовыйДокумент;
		Файл_cancellations = Новый ТекстовыйДокумент;
		Файл_ta = Новый ТекстовыйДокумент;
		Если СтрокаКонтрагенты.Лакталис Тогда
			Файл_warehouses = Новый ТекстовыйДокумент;	
		КонецЕсли;
		СтруктураСтрокаКонтрагенты = Новый Структура("Поставщик,ВсяНоменклатура,ИД,Алти,Лакталис,Экомилк,Бонфесто,Умалат",СтрокаКонтрагенты.Поставщик,СтрокаКонтрагенты.ВсяНоменклатура,СтрокаКонтрагенты.ИД,СтрокаКонтрагенты.Алти,СтрокаКонтрагенты.Лакталис,СтрокаКонтрагенты.Экомилк,СтрокаКонтрагенты.Бонфесто,СтрокаКонтрагенты.Умалат);
		Если СтрокаКонтрагенты.Лакталис Тогда
			ВыгрузитьФайлыСервер(Файл_delivery, Файл_sku,Файл_ttoptions,Файл_stocks,Файл_receive,Файл_cancellations,Файл_ta,Файл_warehouses,СтруктураСтрокаКонтрагенты); 
		Иначе
			ВыгрузитьФайлыСервер(Файл_delivery, Файл_sku,Файл_ttoptions,Файл_stocks,Файл_receive,Файл_cancellations,Файл_ta,,СтруктураСтрокаКонтрагенты); 
		КонецЕсли;
		ПутьКФайлу = СтрокаКонтрагенты.ПапкаДляРучнойВыгрузки;
		Файл_delivery.Записать(ПутьКФайлу + "\delivery.csv",КодировкаТекста.UTF8);
		Сообщить("Файл " + ПутьКФайлу + "\delivery.csv" + " создан."); 
		Файл_sku.Записать(ПутьКФайлу + "\sku.csv",КодировкаТекста.UTF8);
		Сообщить("Файл " + ПутьКФайлу + "\sku.csv" + " создан.");
		Если СтрокаКонтрагенты.Умалат Тогда
			Файл_ttoptions.Записать(ПутьКФайлу + "\clients.csv",КодировкаТекста.UTF8);
			Сообщить("Файл " + ПутьКФайлу + "\clients.csv" + " создан.");
		Иначе
			Файл_ttoptions.Записать(ПутьКФайлу + "\ttoptions.csv",КодировкаТекста.UTF8);
			Сообщить("Файл " + ПутьКФайлу + "\ttoptions.csv" + " создан.");
		КонецЕсли;
		Файл_stocks.Записать(ПутьКФайлу + "\stocks.csv",КодировкаТекста.UTF8);
		Сообщить("Файл " + ПутьКФайлу + "\stocks.csv" + " создан."); 
		Файл_receive.Записать(ПутьКФайлу + "\receive.csv",КодировкаТекста.UTF8);
		Сообщить("Файл " + ПутьКФайлу + "\receive.csv" + " создан.");
		Если Не СтрокаКонтрагенты.Умалат Тогда
			Файл_cancellations.Записать(ПутьКФайлу + "\cancellations.csv",КодировкаТекста.UTF8);
			Сообщить("Файл " + ПутьКФайлу + "\cancellations.csv" + " создан.");
		КонецЕсли;
		Файл_ta.Записать(ПутьКФайлу + "\ta.csv",КодировкаТекста.UTF8);
		Сообщить("Файл " + ПутьКФайлу + "\ta.csv" + " создан.");  
		Если СтрокаКонтрагенты.Лакталис Тогда
			Файл_warehouses.Записать(ПутьКФайлу + "\warehouses.csv",КодировкаТекста.UTF8);
			Сообщить("Файл " + ПутьКФайлу + "\warehouses.csv" + " создан.");  
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура СформироватьФайлПоКонтрагенту(Файл_delivery,Файл_sku,Файл_ttoptions,Файл_stocks,Файл_receive,Файл_cancellations,Файл_ta,Файл_warehouses=Неопределено,НоменклатураДляОтбора,Поставщик,ИДДистрибьютора,ЭтоАлти,ЭтоЛакталис,ЭтоЭкомилк,ЭтоБонфесто,ЭтоУмалат)
//Формирования файла sku +++
	#Область ФормированияФайла_sku 
	Файл_sku.ДобавитьСтроку("id дистрибьютора;Код продукта дистрибьютора;Название продукта;Штрихкод;Код продукта производителя;id единицы измерения продукта");
	Запрос = Новый Запрос;
	Если ЭтоЛакталис ИЛИ ЭтоБонфесто Тогда
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК НоменклатураШтрихкод
	|ПОМЕСТИТЬ ВТШтрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод <> """"
	|	И ШтрихкодыНоменклатуры.Номенклатура В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураШтрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСпр.Ссылка КАК Ссылка,
	|	НоменклатураСпр.Наименование КАК Наименование,
	|	НоменклатураСпр.Код КАК Код,
	|	ВЫБОР
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""8751""
	|			ТОГДА 2 
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""
	|			ТОГДА 3
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """") КАК Штрихкод,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураКонтрагентов.КодНоменклатуры, """")) КАК КодНоменклатурыПоставщика
	|ИЗ
	|	Справочник.Номенклатура КАК НоменклатураСпр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтрихкоды КАК ВТШтрихкоды
	|		ПО НоменклатураСпр.Ссылка = ВТШтрихкоды.НоменклатураШтрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО НоменклатураСпр.Ссылка = НоменклатураКонтрагентов.Номенклатура
	|			И (НоменклатураКонтрагентов.ВладелецНоменклатуры = &Поставщик)
	|ГДЕ
	|	НоменклатураСпр.Ссылка В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """"),
	|	НоменклатураСпр.Ссылка,
	|	НоменклатураСпр.Наименование,
	|	НоменклатураСпр.Код,
	|	ВЫБОР
	|	КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""8751""
	|			ТОГДА 2 
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""
	|			ТОГДА 3
	|	КОНЕЦ"; 
ИначеЕсли ЭтоУмалат Тогда
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК НоменклатураШтрихкод
	|ПОМЕСТИТЬ ВТШтрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод <> """"
	|	И ШтрихкодыНоменклатуры.Номенклатура В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураШтрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСпр.Ссылка КАК Ссылка,
	|	НоменклатураСпр.Наименование КАК Наименование,
	|	НоменклатураСпр.Код КАК Код,
	|	ВЫБОР
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""8751""
	|			ТОГДА 2 
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""
	|			ТОГДА 3
	|       ИНАЧЕ 4
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """") КАК Штрихкод,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураКонтрагентов.КодНоменклатуры, """")) КАК КодНоменклатурыПоставщика
	|ИЗ
	|	Справочник.Номенклатура КАК НоменклатураСпр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтрихкоды КАК ВТШтрихкоды
	|		ПО НоменклатураСпр.Ссылка = ВТШтрихкоды.НоменклатураШтрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО НоменклатураСпр.Ссылка = НоменклатураКонтрагентов.Номенклатура
	|			И (НоменклатураКонтрагентов.ВладелецНоменклатуры = &Поставщик)
	|ГДЕ
	|	НоменклатураСпр.Ссылка В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """"),
	|	НоменклатураСпр.Ссылка,
	|	НоменклатураСпр.Наименование,
	|	НоменклатураСпр.Код,
	|	ВЫБОР
	|	КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""8751""
	|			ТОГДА 2 
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""
	|			ТОГДА 3
	|       ИНАЧЕ 4
	|	КОНЕЦ";
Иначе
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК НоменклатураШтрихкод
	|ПОМЕСТИТЬ ВТШтрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод <> """"
	|	И ШтрихкодыНоменклатуры.Номенклатура В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ШтрихкодыНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураШтрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСпр.Ссылка КАК Ссылка,
	|	НоменклатураСпр.Наименование КАК Наименование,
	|	НоменклатураСпр.Код КАК Код,
	|	ВЫБОР
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""
	|			ТОГДА 3
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """") КАК Штрихкод,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураКонтрагентов.КодНоменклатуры, """")) КАК КодНоменклатурыПоставщика
	|ИЗ
	|	Справочник.Номенклатура КАК НоменклатураСпр
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТШтрихкоды КАК ВТШтрихкоды
	|		ПО НоменклатураСпр.Ссылка = ВТШтрихкоды.НоменклатураШтрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|		ПО НоменклатураСпр.Ссылка = НоменклатураКонтрагентов.Номенклатура
	|			И (НоменклатураКонтрагентов.ВладелецНоменклатуры = &Поставщик)
	|ГДЕ
	|	НоменклатураСпр.Ссылка В(&НоменклатураДляОтбора)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТШтрихкоды.Штрихкод, """"),
	|	НоменклатураСпр.Ссылка,
	|	НоменклатураСпр.Наименование,
	|	НоменклатураСпр.Код,
	|	ВЫБОР
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""796""
	|			ТОГДА 1
	|		КОГДА НоменклатураСпр.ЕдиницаИзмерения.Код = ""166""      
	|			ТОГДА 3
	|	КОНЕЦ";
	КонецЕсли;
	Запрос.УстановитьПараметр("НоменклатураДляОтбора", НоменклатураДляОтбора); 
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Файл_sku.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код) + ";" +
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.Наименование)  + ";" +
		Строка(ВыборкаДетальныеЗаписи.Штрихкод)  + ";" + 
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.КодНоменклатурыПоставщика) + ";" +  //Код продукта производителя  
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.ЕдиницаИзмерения));	
	КонецЦикла; 
	КодДляПустойСтроки = ВыборкаДетальныеЗаписи.Код;										
	#КонецОбласти
	//Формирования файла sku ---
	
	//Формирования файла delivery +++
	#Область ФормированияФайла_delivery 
	Если ЭтоАлти ИЛИ ЭтоЭкомилк Тогда
		Файл_delivery.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Дата;Код продукта дистрибьютора;Количество;Сумма отгрузки;Сумма отгрузки с НДС;Код ТА;Номер расходной накладной;Годен до;Дата производства;Номер партии");
	ИначеЕсли ЭтоЛакталис ИЛИ ЭтоБонфесто Тогда
		Файл_delivery.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Дата;Код продукта дистрибьютора;Количество;Сумма отгрузки;Сумма отгрузки с НДС;Код ТА;Сумма в закупочных ценах;Сумма в закупочных ценах с НДС;Номер расходной накладной;Годен до;Дата производства;Номер партии");
	ИначеЕсли ЭтоУмалат Тогда
		Файл_delivery.ДобавитьСтроку("ID дистрибьютора;Код клиента ERP;Дата;Код продукта дистрибьютора;Количество;Сумма отгрузки;Код ТА;Номер расходной накладной;Закупочная цена");
	Иначе
		Файл_delivery.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Дата;Код продукта дистрибьютора;Количество;Сумма отгрузки;Сумма отгрузки с НДС;Код ТА;Номер расходной накладной;Акция;Поставщик;Годен до;Дата производства;Номер партии");
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = ВернутьТекстЗапросаdelivery(ЭтоЛакталис ИЛИ ЭтоБонфесто ИЛИ ЭтоУмалат);
	ДатаНачалаВыгрузки = ?(Объект.ПроизвольныйПериод, НачалоДня(Объект.ДатаНачала), НачалоДня(ТекущаяДата() - 3888000)); 
	ДатаОкончанияВыгрузки = ?(Объект.ПроизвольныйПериод, КонецДня(Объект.ДатаОкончания - 86400), КонецДня(ТекущаяДата() - 86400));
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
	Запрос.УстановитьПараметр("ИДДистрибьютора", ИДДистрибьютора);
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
	
	РезультатЗапросаПродажи = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаПродажи.Выбрать();
	ТЗДляОтбораТочек = Новый ТаблицаЗначений;
	ТЗДляОтбораТочек.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты")); 
	ТЗДляОтбораТочек.Колонки.Добавить("ПодразделениеКонтрагента",Новый ОписаниеТипов("СправочникСсылка.ПодразделенияКонтрагентов"));
	ТипыОтветственных = Новый Массив;
	ТипыОтветственных.Добавить(Тип("СправочникСсылка.Сотрудники"));
	ТипыОтветственных.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ТЗДляОтбораТочек.Колонки.Добавить("Ответственный",Новый ОписаниеТипов(ТипыОтветственных));
	
	МассивДляОтбораТА = Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		СтрокаТЗДляОтбораТочек = ТЗДляОтбораТочек.Добавить();
		СтрокаТЗДляОтбораТочек.Контрагент = ВыборкаДетальныеЗаписи.Контрагент; 
		СтрокаТЗДляОтбораТочек.ПодразделениеКонтрагента = ВыборкаДетальныеЗаписи.ПодразделениеКонтрагента;
		СтрокаТЗДляОтбораТочек.Ответственный = ВыборкаДетальныеЗаписи.Ответственный;
		МассивДляОтбораТА.Добавить(ВыборкаДетальныеЗаписи.Ответственный);
		Количество = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-ВыборкаДетальныеЗаписи.Количество,ВыборкаДетальныеЗаписи.Количество); 
		СуммаБезНДС = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-ВыборкаДетальныеЗаписи.СуммаБезНДС,ВыборкаДетальныеЗаписи.СуммаБезНДС);
		СуммаСНДС = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-ВыборкаДетальныеЗаписи.СуммаСНДС,ВыборкаДетальныеЗаписи.СуммаСНДС);
		ДатаДокумента = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Дата),Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=dd.MM.yyyy"),"");  
		КодПодразделения = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПодразделениеКонтрагентаКод),ВыборкаДетальныеЗаписи.ПодразделениеКонтрагентаКод,ВыборкаДетальныеЗаписи.КонтрагентКод);
		Если ЭтоЛакталис ИЛИ ЭтоБонфесто Тогда
			СуммаЗакупки = ВыборкаДетальныеЗаписи.Цена * ВыборкаДетальныеЗаписи.Количество;
			СтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(ВыборкаДетальныеЗаписи.НоменклатураСтавкаНДС,ТекущаяДата());
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС, Ложь);
			СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СуммаЗакупки,Истина,ПроцентНДС);
			СуммаЗакупкиБезНДС = СуммаЗакупки - СуммаНДС;
			СуммаЗакупкиСоЗнаком = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-СуммаЗакупки,СуммаЗакупки);
			СуммаЗакупкиБезНДССоЗнаком = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-СуммаЗакупкиБезНДС,СуммаЗакупкиБезНДС);
			Файл_delivery.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентКод + "#" + КодПодразделения)  + ";" +
			ДатаДокумента  + ";" +  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.НоменклатураКод)  + ";" +
			ОбработатьСтроку(Количество,"Количество")  + ";" + 
			ОбработатьСтроку(СуммаБезНДС,"Стоимость")  + ";" + 
			ОбработатьСтроку(СуммаСНДС,"Стоимость")  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ОтветственныйКод) + ";" +  //ТА  
			ОбработатьСтроку(СуммаЗакупкиБезНДССоЗнаком,"Стоимость")  + ";" +
			ОбработатьСтроку(СуммаЗакупкиСоЗнаком,"Стоимость")  + ";" + 
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" +
			""  + ";" +  //Годен до
			""  + ";" +  //ДатаПроизводства
			"" //Номер партии
			); 
		ИначеЕсли ЭтоАлти ИЛИ ЭтоЭкомилк Тогда
			Файл_delivery.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентКод + "#" + КодПодразделения)  + ";" +
			ДатаДокумента  + ";" +  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.НоменклатураКод)  + ";" +
			ОбработатьСтроку(Количество,"Количество")  + ";" + 
			ОбработатьСтроку(СуммаБезНДС,"Стоимость")  + ";" + 
			ОбработатьСтроку(СуммаСНДС,"Стоимость")  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ОтветственныйКод) + ";" +  //ТА  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" +
			""  + ";" +  //Годен до
			""  + ";" +  //ДатаПроизводства
			"" //Номер партии
			);  
		ИначеЕсли ЭтоУмалат Тогда 
           //ЦенаЗакупкиСоЗнаком = ?(ВыборкаДетальныеЗаписи.ЭтоВозврат,-ВыборкаДетальныеЗаписи.Цена,ВыборкаДетальныеЗаписи.Цена);
			ЦенаЗакупкиСоЗнаком = ВыборкаДетальныеЗаписи.Цена;
			Файл_delivery.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			//ОбработатьСтроку(?(ЗначениеЗаполнено(КодПодразделения),ВыборкаДетальныеЗаписи.КонтрагентКод + "/" + КодПодразделения,
			//ВыборкаДетальныеЗаписи.КонтрагентКод))  + ";" + 
			ОбработатьСтроку(?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПодразделениеКонтрагентаКод),
			ВыборкаДетальныеЗаписи.ПодразделениеКонтрагентаКод,ВыборкаДетальныеЗаписи.КонтрагентКод))  + ";" +
			ДатаДокумента  + ";" +  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.НоменклатураКод)  + ";" +
			ОбработатьСтроку(Количество,"Количество")  + ";" + 
			ОбработатьСтроку(СуммаСНДС,"Стоимость")  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ОтветственныйКод) + ";" +  //ТА  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" +
			ОбработатьСтроку(ЦенаЗакупкиСоЗнаком,"Стоимость")); 
		Иначе
			Файл_delivery.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентКод + "#" + КодПодразделения)  + ";" +
			ДатаДокумента  + ";" +  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.НоменклатураКод)  + ";" +
			ОбработатьСтроку(Количество,"Количество")  + ";" + 
			ОбработатьСтроку(СуммаБезНДС,"Стоимость")  + ";" + 
			ОбработатьСтроку(СуммаСНДС,"Стоимость")  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ОтветственныйКод) + ";" +  //ТА  
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" +
			"" + ";" +  //Акция
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Поставщик)  + ";" +
			""  + ";" +  //Годен до
			""  + ";" +  //ДатаПроизводства
			"" //Номер партии
			);  
		КонецЕсли;
	КонецЦикла;
	ТЗДляОтбораТочек.Свернуть("Контрагент,ПодразделениеКонтрагента,Ответственный");										
	#КонецОбласти
	//Формирования файла delivery ---   
	
	//Формирования файла ttoptions +++ 
	#Область ФормированияФайла_ttoptions
	Если ЭтоАлти Тогда
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента;Название ТТ;Адрес ТТ;Код ИНН;Тип ТТ;ПРИНАДЛЕЖНОСТЬ К СЕТИ");
	ИначеЕсли ЭтоЛакталис Тогда
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента;Название ТТ;Адрес ТТ;Код ИНН");
	ИначеЕсли ЭтоЭкомилк Тогда
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента;Название ТТ;Адрес ТТ;Код ИНН;Категоризация ТТ;Торговый представитель;Сеть ТТ");
	ИначеЕсли ЭтоБонфесто Тогда
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента;Название ТТ;Адрес ТТ;ИНН;Канал дистрибьютора");
	ИначеЕсли ЭтоУмалат Тогда
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента");
	Иначе 
		Файл_ttoptions.ДобавитьСтроку("id дистрибьютора;Код клиента ERP;Название клиента;Адрес клиента;Название ТТ;Адрес ТТ;Код ИНН;Категория ТТ Д;Название сети у дистрибьютора");
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗДляОтбораТочек",ТЗДляОтбораТочек);;
	Если ЭтоУмалат Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|ТЗДляОтбораТочек.Контрагент КАК Контрагент,
		|ТЗДляОтбораТочек.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
		|ТЗДляОтбораТочек.Ответственный КАК Ответственный
		|Поместить ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту
		|ИЗ &ТЗДляОтбораТочек КАК ТЗДляОтбораТочек
		|;
		|//////////////////////////////////////////////////////////////////////////////  
		|	ВЫБРАТЬ
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент КАК Контрагент,
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Наименование КАК КонтрагентНаименование,
		//|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Код КАК КодКонтрагента,
		//|   ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента КАК ПодразделениеКонтрагентаСсылка,
		//|   ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Ответственный.Наименование КАК Ответственный,
		|	 ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	""""
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Наименование КОНЕЦ КАК НаименованиеТорговойТочки,
		|ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	""""
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Адрес КОНЕЦ КАК Адрес,
		|ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Код
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Код КОНЕЦ КАК КодКонтрагента
		|	
		|Упорядочить ПО КодКонтрагента";
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Адрес = "";
			ТЗ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДетальныеЗаписи.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ТекущаяДата(),Ложь);
			Если ТЗ.Количество() > 0 Тогда	
				ЗначениеАдреса = РаботаСАдресами.СведенияОбАдресе(ТЗ[0].Значение); 
				ПредстАдреса =  ЗначениеАдреса.Представление;
				
				МассивПолейАдреса = СтрРазделить(ПредстАдреса,",");
				Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛП(МассивПолейАдреса[0])) Тогда 
					МассивПолейАдреса.Вставить(1,ЗначениеАдреса.Страна);
				Иначе
					МассивПолейАдреса.Вставить(0,ЗначениеАдреса.Страна);
				КонецЕсли;
				Адрес = СтрСоединить(МассивПолейАдреса,",");
				Адрес = СтрЗаменить(Адрес,",",", ");
			Иначе 
				Адрес = "Юр.адрес не заведен";
			КонецЕсли;
			Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ВыборкаДетальныеЗаписи.КодКонтрагента + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование + " " + ВыборкаДетальныеЗаписи.НаименованиеТорговойТочки) + ";" +
			ОбработатьСтроку(?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Адрес),ВыборкаДетальныеЗаписи.Адрес,Адрес)));
		КонецЦикла;
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ 
		|ТЗДляОтбораТочек.Контрагент КАК Контрагент,
		|ТЗДляОтбораТочек.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
		|ТЗДляОтбораТочек.Ответственный КАК Ответственный
		|Поместить ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту
		|ИЗ &ТЗДляОтбораТочек КАК ТЗДляОтбораТочек
		|;
		|//////////////////////////////////////////////////////////////////////////////  
		|	ВЫБРАТЬ 
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент КАК Контрагент,
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.ИНН КАК ИНН,
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Наименование КАК КонтрагентНаименование,
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Код КАК КодКонтрагента,
		|   ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента КАК ПодразделениеКонтрагентаСсылка,
		|   ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Ответственный.Наименование КАК Ответственный,
		|	 ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Наименование
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Наименование КОНЕЦ КАК НаименованиеТорговойТочки,
		
		|	ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	""""
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Адрес КОНЕЦ КАК Адрес,
		|	
		|    ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.Контрагент.Код
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.Код КОНЕЦ КАК КодТорговойТочки,
		|    ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	Истина
		|Иначе Ложь КОНЕЦ КАК КонтрагентВместоТорговойТочки,
		|    ВЫБОР КОГДА ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента = Значение(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка) Тогда
		|	""""
		|Иначе ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту.ПодразделениеКонтрагента.ОбособленноеПодразделение КОНЕЦ КАК ОбособленноеПодразделение
		|	ИЗ ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту КАК ВТКонтрагентПодразделениеГруппировкаПоКонтрагенту                                                            
		|Упорядочить ПО КодКонтрагента";
		//КонецЕсли;
		//	Запрос.УстановитьПараметр("ТЗДляОтбораТочек",ТЗДляОтбораТочек);;
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			//Если Не ЭтоУмалат Тогда
			Адрес = "";
			ТЗ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДетальныеЗаписи.Контрагент, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ТекущаяДата(),Ложь);
			Если ТЗ.Количество() > 0 Тогда	
				ЗначениеАдреса = РаботаСАдресами.СведенияОбАдресе(ТЗ[0].Значение); 
				ПредстАдреса =  ЗначениеАдреса.Представление;
				
				МассивПолейАдреса = СтрРазделить(ПредстАдреса,",");
				Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СокрЛП(МассивПолейАдреса[0])) Тогда 
					МассивПолейАдреса.Вставить(1,ЗначениеАдреса.Страна);
				Иначе
					МассивПолейАдреса.Вставить(0,ЗначениеАдреса.Страна);
				КонецЕсли;
				Адрес = СтрСоединить(МассивПолейАдреса,",");
				Адрес = СтрЗаменить(Адрес,",",", ");
			Иначе 
				Адрес = "Юр.адрес не заведен";
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.КонтрагентВместоТорговойТочки Тогда
				АдресТорговойТочки = Адрес;
			Иначе
				АдресТорговойТочки = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Адрес),ВыборкаДетальныеЗаписи.Адрес, "Самовывоз");  
			КонецЕсли; 
			СтруктураПоискаТЗДляОтбораТочек = Новый Структура("Контрагент",ВыборкаДетальныеЗаписи.Контрагент);
			МассивСтрокТЗДляОтбораТочек = ТЗДляОтбораТочек.НайтиСтроки(СтруктураПоискаТЗДляОтбораТочек);
			НаименованиеТорговойТочки = ?(МассивСтрокТЗДляОтбораТочек.Количество() > 1,ВыборкаДетальныеЗаписи.КонтрагентНаименование + " " +
			ВыборкаДетальныеЗаписи.НаименованиеТорговойТочки,ВыборкаДетальныеЗаписи.НаименованиеТорговойТочки);
			//КонецЕсли;
			Если ЭтоАлти Тогда
				НазваниеКлиента = ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование);
				Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ВыборкаДетальныеЗаписи.КодКонтрагента + "#" + ВыборкаДетальныеЗаписи.КодТорговойТочки + ";" +
				НазваниеКлиента  + ";" +
				ОбработатьСтроку(Адрес)  + ";" +
				НазваниеКлиента + " " + ОбработатьСтроку(НаименованиеТорговойТочки)  + ";" +
				ОбработатьСтроку(АдресТорговойТочки)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ИНН)  + ";" +
				"" + ";" +  //Тип ТТ 
				"");  //Принадлежность к сети 
			ИначеЕсли ЭтоЭкомилк Тогда
				Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ВыборкаДетальныеЗаписи.КодКонтрагента + "#" + ВыборкаДетальныеЗаписи.КодТорговойТочки + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование)  + ";" +
				ОбработатьСтроку(Адрес)  + ";" +
				ОбработатьСтроку(НаименованиеТорговойТочки)  + ";" +
				ОбработатьСтроку(АдресТорговойТочки)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ИНН)  + ";" +
				"" + ";" +  //Категория ТТ Д 
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Ответственный)  + ";" +
				"");  //Сеть ТТ
			ИначеЕсли ЭтоЛакталис Тогда
				Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ВыборкаДетальныеЗаписи.КодКонтрагента + "#" + ВыборкаДетальныеЗаписи.КодТорговойТочки + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование)  + ";" +
				ОбработатьСтроку(Адрес)  + ";" +
				ОбработатьСтроку(НаименованиеТорговойТочки)  + ";" +
				ОбработатьСтроку(АдресТорговойТочки)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ИНН)); 
			ИначеЕсли ЭтоБонфесто Тогда
				Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ВыборкаДетальныеЗаписи.КодКонтрагента + "#" + ВыборкаДетальныеЗаписи.КодТорговойТочки + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование)  + ";" +
				ОбработатьСтроку(Адрес)  + ";" +
				ОбработатьСтроку(НаименованиеТорговойТочки)  + ";" +
				ОбработатьСтроку(АдресТорговойТочки)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ИНН) + ";" +
				""); //Канал дистрибьютора 
				//ИначеЕсли ЭтоУмалат Тогда 
				//Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				//ВыборкаДетальныеЗаписи.КодКонтрагента + ";" +
				//ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование + " " + ВыборкаДетальныеЗаписи.НаименованиеТорговойТочки) + ";" +
				//ОбработатьСтроку(Адрес)); 
			Иначе
				Файл_ttoptions.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ВыборкаДетальныеЗаписи.КодКонтрагента + "#" + ВыборкаДетальныеЗаписи.КодТорговойТочки + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.КонтрагентНаименование)  + ";" +
				ОбработатьСтроку(Адрес)  + ";" +
				ОбработатьСтроку(НаименованиеТорговойТочки)  + ";" +
				ОбработатьСтроку(АдресТорговойТочки)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ИНН)  + ";" +
				"" + ";" +  //Категория ТТ Д 
				ВыборкаДетальныеЗаписи.ОбособленноеПодразделение);  //Название сети у дистрибьютора
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	#КонецОбласти
	//Формирования файла ttoptions --- 
	
	//Формирования файла stocks +++
	#Область ФормированияФайла_stocks
	Если ЭтоЛакталис ИЛИ ЭтоБонфесто ИЛИ ЭтоУмалат Тогда 
		Если ЭтоЛакталис Тогда
			Файл_stocks.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Сумма в закупочных ценах;Сумма в закупочных ценах с НДС;Номер партии;Годен до;Дата производства;Код склада");
		ИначеЕсли ЭтоБонфесто Тогда
			Файл_stocks.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Сумма в закупочных ценах;Сумма в закупочных ценах с НДС;Номер партии;Годен до;Дата производства");
		ИначеЕсли ЭтоУмалат Тогда	
			Файл_stocks.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Сумма в закупочных ценах");
		КонецЕсли;
		Если НоменклатураДляОтбора.Количество() > 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	сабДанныеПоставокСрезПоследних.Номенклатура КАК Номенклатура,
			|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.Период) КАК Период
			|ПОМЕСТИТЬ ВТЦены
			|ИЗ
			|	РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
			
			|СГРУППИРОВАТЬ ПО
			|	сабДанныеПоставокСрезПоследних.Номенклатура
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТЦены.Номенклатура КАК Номенклатура,
			|	СУММА(сабДанныеПоставокСрезПоследних.Цена) КАК Цена,
			|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.ЦенаБезНДС) КАК ЦенаБезНДС
			|ПОМЕСТИТЬ ВТЦеныИтоговая
			|ИЗ
			|	ВТЦены КАК ВТЦены
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
			|		ПО ВТЦены.Номенклатура = сабДанныеПоставокСрезПоследних.Номенклатура
			|			И ВТЦены.Период = сабДанныеПоставокСрезПоследних.Период
			
			|СГРУППИРОВАТЬ ПО
			|	ВТЦены.Номенклатура
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
			|ПОМЕСТИТЬ Дни
			|ИЗ
			|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
			|ГДЕ
			|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
			|	ДНИ.ДатаКалендаря КАК ДатаКалендаря,
			|	СУММА(ВЫБОР
			|			КОГДА ХозрасчетныйОстаткиИОбороты.Период = &ДатаНачала
			|				ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0)
			|			ИНАЧЕ ВЫБОР
			|					КОГДА ХозрасчетныйОстаткиИОбороты.Период <= ДНИ.ДатаКалендаря
			|						ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборот, 0)
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОНЕЦ) КАК КоличествоКонечныйОстаток,
			|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Субконто2
			|ПОМЕСТИТЬ ВТИтоговая
			|ИЗ
			|	Дни КАК ДНИ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, День, ДвиженияИГраницыПериода, Счет = &Счет, &МассивСубконто, Субконто1 В (&Номенклатура)) КАК ХозрасчетныйОстаткиИОбороты
			|		ПО (ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток > 0)
			
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ДНИ.ДатаКалендаря,
			|	ХозрасчетныйОстаткиИОбороты.Субконто2
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ВТИтоговая.Субконто1 КАК Справочник.Номенклатура).ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	ВЫРАЗИТЬ(ВТИтоговая.Субконто1 КАК Справочник.Номенклатура).Код КАК Код,
			|	ВЫРАЗИТЬ(ВТИтоговая.Субконто2 КАК Справочник.Склады).Код КАК КодСклада,
			|	ВТИтоговая.Субконто2 КАК Склад,
			|	ВТИтоговая.ДатаКалендаря КАК ДатаКалендаря,
			|	ВТИтоговая.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
			|	ЕСТЬNULL(ВТЦеныИтоговая.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ВТЦеныИтоговая.ЦенаБезНДС, 0) КАК ЦенаБезНДС
			|ИЗ
			|	ВТИтоговая КАК ВТИтоговая
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦеныИтоговая КАК ВТЦеныИтоговая
			|		ПО ((ВЫРАЗИТЬ(ВТИтоговая.Субконто1 КАК Справочник.Номенклатура)) = ВТЦеныИтоговая.Номенклатура)
			
			|УПОРЯДОЧИТЬ ПО
			|	ДатаКалендаря,
			|	Код";		
			МассивСубконто = Новый Массив;
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
			Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
			Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
			Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
			Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
			Запрос.УстановитьПараметр("МассивСубконто", МассивСубконто);
			ТЗОстатки = Запрос.Выполнить().Выгрузить(); 
			Для Каждого СтрокаТЗОстатки Из ТЗОстатки Цикл
				СтруктураОтбораТЗОстатки = Новый Структура("Код,ДатаКалендаря",СтрокаТЗОстатки.Код,СтрокаТЗОстатки.ДатаКалендаря);
				НайденныеСтрокиТЗОстатки = ТЗОстатки.НайтиСтроки(СтруктураОтбораТЗОстатки);	
				Если НайденныеСтрокиТЗОстатки.Количество() > 1 Тогда
					СтрокаОставлена = Ложь;
					ИтераторОбходаМассива = 0;
					Для каждого НайденнаяСтрокиТЗОстатки Из НайденныеСтрокиТЗОстатки Цикл 
						ИтераторОбходаМассива = ИтераторОбходаМассива + 1;
						Если Не СтрокаОставлена И ИтераторОбходаМассива = НайденныеСтрокиТЗОстатки.Количество() Тогда
							Прервать;
						КонецЕсли;
						Если НайденнаяСтрокиТЗОстатки.КоличествоКонечныйОстаток = 0 Тогда
							ТЗОстатки.Удалить(НайденнаяСтрокиТЗОстатки); 
						Иначе
							СтрокаОставлена = Истина;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			МассивСкладов = Новый Массив;
			Для Каждого СтрокаСтрокаТЗОстатки ИЗ ТЗОстатки Цикл 
				Если МассивСкладов.Найти(СтрокаСтрокаТЗОстатки.Склад) = Неопределено Тогда
					МассивСкладов.Добавить(СтрокаСтрокаТЗОстатки.Склад);
				КонецЕсли;
				СуммаЗакупки = СтрокаСтрокаТЗОстатки.КоличествоКонечныйОстаток * СтрокаСтрокаТЗОстатки.Цена; 
				СтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(СтрокаСтрокаТЗОстатки.ВидСтавкиНДС,ТекущаяДата());
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС, Ложь);
				СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СуммаЗакупки,Истина,ПроцентНДС);
				СуммаЗакупкиБезНДС = СуммаЗакупки - СуммаНДС;
				Если ЭтоЛакталис Тогда
					Файл_stocks.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.ДатаКалендаря) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.Код)  + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.КоличествоКонечныйОстаток,"Количество")  + ";" +  
					ОбработатьСтроку(СуммаЗакупкиБезНДС,"Стоимость")  + ";" +
					ОбработатьСтроку(СуммаЗакупки,"Стоимость")  + ";" + 
					"" + ";" +  //Номер партии
					"" + ";" +  //Годен до
					"" + ";" + //Дата производства
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.КодСклада));	
				ИначеЕсли ЭтоБонфесто Тогда
					Файл_stocks.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.ДатаКалендаря) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.Код)  + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.КоличествоКонечныйОстаток,"Количество")  + ";" +  
					ОбработатьСтроку(СуммаЗакупкиБезНДС,"Стоимость")  + ";" +
					ОбработатьСтроку(СуммаЗакупки,"Стоимость")  + ";" + 
					"" + ";" +  //Номер партии
					"" + ";" +  //Годен до
					""); //Дата производства 
				ИначеЕсли ЭтоУмалат Тогда 
					Файл_stocks.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.ДатаКалендаря) + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.Код)  + ";" +
					ОбработатьСтроку(СтрокаСтрокаТЗОстатки.КоличествоКонечныйОстаток,"Количество")  + ";" +  
					ОбработатьСтроку(СуммаЗакупки,"Стоимость")); 
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	Иначе
		Файл_stocks.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Номер партии;Годен до;Дата производства");
		Если НоменклатураДляОтбора.Количество() > 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
			|ПОМЕСТИТЬ Дни
			|ИЗ
			|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
			|ГДЕ
			|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
			|	ДНИ.ДатаКалендаря КАК ДатаКалендаря,
			|	СУММА(ВЫБОР
			|			КОГДА ХозрасчетныйОстаткиИОбороты.Период = &ДатаНачала
			|				ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0)
			|			ИНАЧЕ ВЫБОР
			|					КОГДА ХозрасчетныйОстаткиИОбороты.Период <= ДНИ.ДатаКалендаря
			|						ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборот, 0)
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОНЕЦ) КАК КоличествоКонечныйОстаток
			|ПОМЕСТИТЬ ВТИтоговая
			|ИЗ
			|	Дни КАК ДНИ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, День, ДвиженияИГраницыПериода, Счет = &Счет, &МассивСубконто, Субконто1 В (&Номенклатура)) КАК ХозрасчетныйОстаткиИОбороты
			|		ПО (ИСТИНА)
			
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ДНИ.ДатаКалендаря
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ВТИтоговая.Субконто1 КАК Справочник.Номенклатура).Код КАК Код,
			|	ВТИтоговая.ДатаКалендаря КАК ДатаКалендаря,
			|	ВТИтоговая.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
			|ИЗ
			|	ВТИтоговая КАК ВТИтоговая
			
			|УПОРЯДОЧИТЬ ПО
			|	ДатаКалендаря,
			|	Код";
			
			МассивСубконто = Новый Массив;
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
			Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
			Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
			Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
			Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
			Запрос.УстановитьПараметр("МассивСубконто", МассивСубконто);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Файл_stocks.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток)  + ";" + 
				"" + ";" +  //Номер партии
				"" + ";" +  //Годен до
				""); //Дата производства 
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;
	#КонецОбласти            
	//Формирования файла stocks ---  
	
	//Формирования файла receive +++
	#Область ФормированияФайла_receive 
	Если ЭтоЛакталис ИЛИ ЭтоБонфесто Тогда
		Файл_receive.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Сумма в закупочных ценах;Сумма в закупочных ценах с НДС;Номер накладной;Годен до;Дата производства;Номер партии");
	ИначеЕсли ЭтоУмалат Тогда
		Файл_receive.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество");
	Иначе
		Файл_receive.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Номер накладной;Годен до;Дата производства;Номер партии");
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
	|ПОМЕСТИТЬ Дни
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка.Дата КАК Дата,
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК Номер,
	|	ПоступлениеТоваровУслугТовары.Номенклатура.Код КАК Код,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслугТовары.Сумма
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма + ПоступлениеТоваровУслугТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
	|	КОНЕЦ КАК СуммаБезНДС
	|ПОМЕСТИТЬ ТЧДокументы
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПоступлениеТоваровУслугТовары.Номенклатура В(&Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка.Дата,
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Номенклатура,
	|	ВозвратТоваровПоставщику.Ссылка.Номер,
	|	ВозвратТоваровПоставщику.Номенклатура.Код,
	|	-ВозвратТоваровПоставщику.Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.Ссылка.СуммаВключаетНДС
	|			ТОГДА -ВозвратТоваровПоставщику.Сумма
	|		ИНАЧЕ -(ВозвратТоваровПоставщику.Сумма + ВозвратТоваровПоставщику.СуммаНДС)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.Ссылка.СуммаВключаетНДС
	|			ТОГДА -(ВозвратТоваровПоставщику.Сумма - ВозвратТоваровПоставщику.СуммаНДС)
	|		ИНАЧЕ -ВозвратТоваровПоставщику.Сумма
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВозвратТоваровПоставщику.Номенклатура В(&Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДНИ.ДатаКалендаря КАК ДатаКалендаря,
	|	ТЧДокументы.Ссылка КАК Регистратор,
	|	ЕСТЬNULL(ТЧДокументы.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ТЧДокументы.Номенклатура, """") КАК Номенклатура,
	|	ЕСТЬNULL(ТЧДокументы.Код, &КодДляПустойСтроки) КАК Код,
	|	СУММА(ЕСТЬNULL(ТЧДокументы.Количество, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ТЧДокументы.СуммаБезНДС, 0)) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(ТЧДокументы.СуммаСНДС, 0)) КАК СуммаСНДС
	|ИЗ
	|	Дни КАК ДНИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧДокументы КАК ТЧДокументы
	|		ПО (НАЧАЛОПЕРИОДА(ДНИ.ДатаКалендаря, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТЧДокументы.Дата, ДЕНЬ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ТЧДокументы.Номенклатура, """"),
	|	ДНИ.ДатаКалендаря,
	|	ЕСТЬNULL(ТЧДокументы.Код, &КодДляПустойСтроки),
	|	ТЧДокументы.Ссылка,
	|	ЕСТЬNULL(ТЧДокументы.Номер, """")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКалендаря,
	|	Номенклатура";  
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
	Запрос.УстановитьПараметр("КодДляПустойСтроки", КодДляПустойСтроки); 
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ЭтоЛакталис ИЛИ ЭтоБонфесто Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Файл_receive.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Количество)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.СуммаБезНДС)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.СуммаСНДС)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" + 
			"" + ";" +  //Годен до
			"" + ";" +  //Дата производства
			""); //Номер партии 
		КонецЦикла;
	ИначеЕсли ЭтоУмалат Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Файл_receive.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Количество)); //Номер партии 
		КонецЦикла;
	Иначе
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Файл_receive.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Количество)  + ";" + 
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" + 
			"" + ";" +  //Годен до
			"" + ";" +  //Дата производства
			""); //Номер партии 
		КонецЦикла;
	КонецЕсли;
	#КонецОбласти
	//Формирования файла receive --- 
	
	//Формирования файла cancellations +++
	#Область ФормированияФайла_cancellations 
	Если Не ЭтоУмалат Тогда
		Если ЭтоБонфесто Тогда
			Файл_cancellations.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Сумма в закупочных ценах;Сумма в закупочных ценах с НДС;Номер документа;Годен до;Дата производства;Номер партии");
		Иначе
			Файл_cancellations.ДобавитьСтроку("id дистрибьютора;Дата;Код продукта дистрибьютора;Количество;Номер документа;Годен до;Дата производства;Номер партии");
		КонецЕсли;	
		Запрос = Новый Запрос;
		Если ЭтоБонфесто Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	сабДанныеПоставокСрезПоследних.Номенклатура КАК Номенклатура,
			|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.Период) КАК Период
			|ПОМЕСТИТЬ ВТЦеныСоСкладами
			|ИЗ
			|	РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	сабДанныеПоставокСрезПоследних.Номенклатура
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТЦеныСоСкладами.Номенклатура КАК Номенклатура,
			|	СУММА(сабДанныеПоставокСрезПоследних.Цена) КАК Цена,
			|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.ЦенаБезНДС) КАК ЦенаБезНДС,
			|	сабДанныеПоставокСрезПоследних.Предприятие КАК Предприятие
			|ПОМЕСТИТЬ ВТЦены
			|ИЗ
			|	ВТЦеныСоСкладами КАК ВТЦеныСоСкладами
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
			|		ПО (ВТЦеныСоСкладами.Номенклатура = сабДанныеПоставокСрезПоследних.Номенклатура)
			|			И (ВТЦеныСоСкладами.Период = сабДанныеПоставокСрезПоследних.Период)
			|СГРУППИРОВАТЬ ПО
			|	ВТЦеныСоСкладами.Номенклатура,
			|	сабДанныеПоставокСрезПоследних.Предприятие
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
			|ПОМЕСТИТЬ Дни
			|ИЗ
			|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
			|ГДЕ
			|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор.Номер КАК Номер,
			|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Номенклатура).Код КАК Код,
			|	ХозрасчетныйОстаткиИОбороты.КоличествоОборот КАК КоличествоОборот,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборот КАК СуммаОборот
			|ПОМЕСТИТЬ ТЧРегистр
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет = &Счет, &МассивСубконто, Субконто1 В (&Номенклатура), , ) КАК ХозрасчетныйОстаткиИОбороты
			|ГДЕ
			|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.КорректировкаПоступления
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДНИ.ДатаКалендаря КАК ДатаКалендаря,
			|	ТЧРегистр.Регистратор КАК Регистратор,
			|	ЕСТЬNULL(ТЧРегистр.Номер, """") КАК Номер,
			|	ЕСТЬNULL(ТЧРегистр.Субконто1, """") КАК Субконто1,
			|	ЕСТЬNULL(ТЧРегистр.Код, &КодДляПустойСтроки) КАК Код,
			|	СУММА(ЕСТЬNULL(ТЧРегистр.КоличествоОборот, 0)) КАК КоличествоОборот 
			|ПОМЕСТИТЬ ВТИтоговая
			|ИЗ
			|	Дни КАК ДНИ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧРегистр КАК ТЧРегистр
			|		ПО (НАЧАЛОПЕРИОДА(ДНИ.ДатаКалендаря, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТЧРегистр.Период, ДЕНЬ))
			|
			|СГРУППИРОВАТЬ ПО
			|	ТЧРегистр.Субконто1,
			|	ДНИ.ДатаКалендаря,
			|	ТЧРегистр.Код,
			|	ТЧРегистр.Регистратор,
			|	ТЧРегистр.Номер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТИтоговая.ДатаКалендаря КАК ДатаКалендаря,
			|	ВТИтоговая.Регистратор КАК Регистратор,
			|	ВТИтоговая.Номер КАК Номер,
			|	ВТИтоговая.Субконто1 КАК Субконто1,
			|	Выразить(ВТИтоговая.Субконто1 КАК Справочник.Номенклатура).ВидСтавкиНДС КАК СтавкаНДС,
			|	ВТИтоговая.Код КАК Код,
			|	ВТИтоговая.КоличествоОборот КАК Количество,
			|	ЕСТЬNULL(ВТЦены.Цена, 0) КАК Цена,
			|	ЕСТЬNULL(ВТЦены.ЦенаБезНДС, 0) КАК ЦенаБезНДС 
			|ИЗ
			|	ВТИтоговая КАК ВТИтоговая
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
			|		ПО (ВТИтоговая.Регистратор.Организация = ВТЦены.Предприятие.ОсновнаяОрганизация)
			|			И (ВТИтоговая.Субконто1 = ВТЦены.Номенклатура)
			|УПОРЯДОЧИТЬ ПО
			|	ДатаКалендаря,
			|	Субконто1";
			Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
			Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
			Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
			Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
			Запрос.УстановитьПараметр("КодДляПустойСтроки", КодДляПустойСтроки); 
			Запрос.УстановитьПараметр("МассивСубконто", МассивСубконто);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				//КоличествоСоЗнаком = (-ВыборкаДетальныеЗаписи.Количество);
				СуммаЗакупки = ВыборкаДетальныеЗаписи.Цена * ВыборкаДетальныеЗаписи.Количество;
				СтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(ВыборкаДетальныеЗаписи.СтавкаНДС,ТекущаяДата());
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС, Ложь);
				СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(СуммаЗакупки,Истина,ПроцентНДС);
				СуммаЗакупкиБезНДС = СуммаЗакупки - СуммаНДС;
				Файл_cancellations.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Количество)  + ";" + 
				ОбработатьСтроку(СуммаЗакупкиБезНДС)  + ";" +  
				ОбработатьСтроку(СуммаЗакупки)  + ";" + 
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" + 
				"" + ";" +  //Годен до
				"" + ";" +  //Дата производства
				""); //Номер партии 
			КонецЦикла;
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеПроизводственногоКалендаря.Дата КАК ДатаКалендаря
			|ПОМЕСТИТЬ Дни
			|ИЗ
			|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
			|ГДЕ
			|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Регистратор.Номер КАК Номер,
			|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Номенклатура).Код КАК Код,
			|	ХозрасчетныйОстаткиИОбороты.КоличествоОборот КАК КоличествоОборот,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборот КАК СуммаОборот
			|ПОМЕСТИТЬ ТЧРегистр
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет = &Счет, &МассивСубконто, Субконто1 В (&Номенклатура), , ) КАК ХозрасчетныйОстаткиИОбороты
			|ГДЕ
			|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.КорректировкаПоступления
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.КорректировкаРеализации
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			|	И НЕ ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДНИ.ДатаКалендаря КАК ДатаКалендаря,
			|	ТЧРегистр.Регистратор КАК Регистратор,
			|	ЕСТЬNULL(ТЧРегистр.Номер, """") КАК Номер,
			|	ЕСТЬNULL(ТЧРегистр.Субконто1, """") КАК Субконто1,
			|	ЕСТЬNULL(ТЧРегистр.Код, &КодДляПустойСтроки) КАК Код,
			|	СУММА(ЕСТЬNULL(ТЧРегистр.КоличествоОборот, 0)) КАК КоличествоОборот
			|ИЗ
			|	Дни КАК ДНИ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧРегистр КАК ТЧРегистр
			|		ПО (НАЧАЛОПЕРИОДА(ДНИ.ДатаКалендаря, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТЧРегистр.Период, ДЕНЬ))
			|
			|СГРУППИРОВАТЬ ПО
			|	ТЧРегистр.Субконто1,
			|	ДНИ.ДатаКалендаря,
			|	ТЧРегистр.Код,
			|	ТЧРегистр.Регистратор,
			|	ТЧРегистр.Номер
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаКалендаря,
			|	Субконто1";
			Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаВыгрузки);
			Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияВыгрузки);
			Запрос.УстановитьПараметр("Номенклатура", НоменклатураДляОтбора);
			Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
			Запрос.УстановитьПараметр("КодДляПустойСтроки", КодДляПустойСтроки); 
			Запрос.УстановитьПараметр("МассивСубконто", МассивСубконто);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Файл_cancellations.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.ДатаКалендаря) + ";" +
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код)  + ";" +
				ОбработатьСтроку(-ВыборкаДетальныеЗаписи.КоличествоОборот)  + ";" + 
				ОбработатьСтроку(ВыборкаДетальныеЗаписи.Номер)  + ";" + 
				"" + ";" +  //Годен до
				"" + ";" +  //Дата производства
				""); //Номер партии 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти
	//Формирования файла cancellations ---	
	
	//Формирования файла ta +++
	#Область ФормированияФайла_ta  
	Файл_ta.ДобавитьСтроку("id дистрибьютора;Код ТА;Имя ТА"); 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Представление КАК ФизическоеЛицоПредставление,
	|	ФизическиеЛица.Код КАК Код
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&МассивДляОтбораТА)";
	
	Запрос.УстановитьПараметр("МассивДляОтбораТА", МассивДляОтбораТА);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Файл_ta.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код) + ";" +
		ОбработатьСтроку(ВыборкаДетальныеЗаписи.ФизическоеЛицоПредставление));  
	КонецЦикла;
	#КонецОбласти
	//Формирования файла ta ---
	
	//Формирования файла warehouses +++
	#Область ФормированияФайла_warehouses
	Если Файл_warehouses <> Неопределено Тогда
		Файл_warehouses.ДобавитьСтроку("id дистрибьютора;Код склада;Название склада;Адрес склада;Тип склада"); 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.Код КАК Код,
		|	Склады.Наименование КАК Наименование, 
		|	Склады.АдресСкладаДляВыгрузки КАК АдресСкладаДляВыгрузки,
		|	Склады.ВидСкладаДляВыгрузки КАК ВидСкладаДляВыгрузки
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка В(&СкладыДляОтбора)";
		
		Запрос.УстановитьПараметр("СкладыДляОтбора", МассивСкладов);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ВидСкладаДляВыгрузки = "Склад ответственного хранения" Тогда
				ВидСкладаДляВыгрузки = "1";
			ИначеЕсли ВыборкаДетальныеЗаписи.ВидСкладаДляВыгрузки = "Товар в пути" Тогда
				ВидСкладаДляВыгрузки = "2"; 
			ИначеЕсли ВыборкаДетальныеЗаписи.ВидСкладаДляВыгрузки = "Брак" Тогда
				ВидСкладаДляВыгрузки = "3";
			ИначеЕсли ВыборкаДетальныеЗаписи.ВидСкладаДляВыгрузки = "Резерв" Тогда
				ВидСкладаДляВыгрузки = "4";
			Иначе 
				ВидСкладаДляВыгрузки = "0";
			КонецЕсли;
			Файл_warehouses.ДобавитьСтроку("" + ОбработатьСтроку(ИДДистрибьютора) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Код) + ";" + 
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.Наименование) + ";" +
			ОбработатьСтроку(ВыборкаДетальныеЗаписи.АдресСкладаДляВыгрузки) + ";" +
			ОбработатьСтроку(ВидСкладаДляВыгрузки));  
		КонецЦикла;
	КонецЕсли;
	#КонецОбласти
	//Формирования файла warehouses ---
КонецПроцедуры


&НаСервере
Процедура ВыгрузитьФайлыСервер(Файл_delivery,Файл_sku,Файл_ttoptions,Файл_stocks,Файл_receive,Файл_cancellations,Файл_ta,Файл_warehouses = Неопределено, СтрокаКонтрагенты = Неопределено)
	
	Если СтрокаКонтрагенты <> Неопределено Тогда
		Поставщик = СтрокаКонтрагенты.Поставщик;
		ТЧНоменклатура = Объект.Номенклатура;
		Если СтрокаКонтрагенты.ВсяНоменклатура Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура
			|			ИЗ
			|				Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|			ГДЕ
			|				ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &Контрагент
			|				И ПоступлениеТоваровУслугТовары.Ссылка.Проведен";
			
			Запрос.УстановитьПараметр("Контрагент", Поставщик);
			РезультатЗапроса = Запрос.Выполнить();
			НоменклатураДляОтбора = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Номенклатура");
		Иначе
			Запрос = Новый Запрос; 
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Номенклатура.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Ссылка В(&Ссылка)";
			Запрос.УстановитьПараметр("Ссылка",ТЧНоменклатура.Выгрузить(Новый Структура("Контрагент,Выгружать",
			Поставщик,Истина),"Номенклатура").ВыгрузитьКолонку("Номенклатура"));
			РезультатЗапроса = Запрос.Выполнить();
			НоменклатураДляОтбора = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
		КонецЕсли;
		ИДДистрибьютора = СтрокаКонтрагенты.ИД; 
		ЭтоАлти = СтрокаКонтрагенты.Алти;
		ЭтоЛакталис = СтрокаКонтрагенты.Лакталис;
		ЭтоЭкомилк = СтрокаКонтрагенты.Экомилк;
		ЭтоБонфесто = СтрокаКонтрагенты.Бонфесто;
		ЭтоУмалат = СтрокаКонтрагенты.Умалат;
		СформироватьФайлПоКонтрагенту(Файл_delivery,Файл_sku,Файл_ttoptions,Файл_stocks,Файл_receive,Файл_cancellations,Файл_ta,Файл_warehouses,НоменклатураДляОтбора,Поставщик,ИДДистрибьютора,ЭтоАлти,ЭтоЛакталис,ЭтоЭкомилк,ЭтоБонфесто,ЭтоУмалат);
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ОбработатьСтроку(ИсходнаяСтрока,УказанныйТип = Неопределено)
	
	ОбработаннаяСтрока = ИсходнаяСтрока; 
	Если УказанныйТип = "Количество" Тогда
		ОбработаннаяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),Формат(ИсходнаяСтрока,"ЧДЦ=3; ЧГ=0; ЧО=1"),"0");
	ИначеЕсли УказанныйТип = "Стоимость" Тогда
		ОбработаннаяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),Формат(ИсходнаяСтрока,"ЧДЦ=2; ЧГ=0; ЧО=1"),"0");
	ИначеЕсли ТипЗнч(ИсходнаяСтрока) = Тип("Число") Тогда
		ОбработаннаяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),Формат(ИсходнаяСтрока,"ЧГ=0; ЧО=1"),"0");
	ИначеЕсли ТипЗнч(ИсходнаяСтрока) = Тип("Дата") Тогда 
		ОбработаннаяСтрока = Формат(ИсходнаяСтрока,"ДФ=dd.MM.yyyy");
	Иначе
		ОбработаннаяСтрока = СтрЗаменить(Строка(ИсходнаяСтрока),"""","""""");
		Если 
			( СтрНайти(ОбработаннаяСтрока," ")>0  ) ИЛИ
			( СтрНайти(ОбработаннаяСтрока,"""")>0 ) ИЛИ
			( СтрНайти(ОбработаннаяСтрока,",")>0  ) ИЛИ
			( СтрНайти(ОбработаннаяСтрока,";")>0  ) ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.Таб)>0 )  ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.ВК)>0 )   ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.ПФ)>0 )   ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.ВТаб)>0 ) ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.НПП)>0 )  ИЛИ
			( СтрНайти(ОбработаннаяСтрока,Символы.ПС)>0 ) 
			Тогда 
			ОбработаннаяСтрока = """"+ОбработаннаяСтрока+"""";
		КонецЕсли;    
	КонецЕсли;     
	Возврат ОбработаннаяСтрока;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройка = РеквизитФормыВЗначение("Объект").ИзвлечьНастройкуИзХранилища();
	Если ЗначениеЗаполнено(Настройка) тогда
		Объект.Контрагенты.Очистить();
		Объект.Контрагенты.Загрузить(Настройка.Контрагенты);
		Объект.Номенклатура.Очистить();
		Объект.Номенклатура.Загрузить(Настройка.Номенклатура);
	КонецЕсли;
	Если Объект.ПроизвольныйПериод Тогда
		Элементы.ДатаНачала.Доступность = Истина;
		Элементы.ДатаОкончания.Доступность = Истина;
	Иначе
		Элементы.ДатаНачала.Доступность = Ложь;
		Элементы.ДатаОкончания.Доступность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РежимВыгрузкиКонтрагентов = "" Тогда
		РежимВыгрузкиКонтрагентов = "Активные";	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗНоменклатура.Контрагент КАК Контрагент,
	|	ТЗНоменклатура.Номенклатура КАК Номенклатура,
	|	ТЗНоменклатура.Выгружать КАК Выгружать
	|ПОМЕСТИТЬ ВТНоменклатура
	|ИЗ
	|	&ТЗНоменклатура КАК ТЗНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНоменклатура.Контрагент КАК Контрагент,
	|	ВТНоменклатура.Номенклатура КАК Номенклатура,
	|	ВТНоменклатура.Выгружать КАК Выгружать
	|ИЗ
	|	ВТНоменклатура КАК ВТНоменклатура
	|ГДЕ
	|	ВТНоменклатура.Контрагент В (&Контрагенты)";
	
	Запрос.УстановитьПараметр("ТЗНоменклатура", Объект.Номенклатура.Выгрузить());
	Запрос.УстановитьПараметр("Контрагенты", Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Поставщик"));
	РезультатЗапроса = Запрос.Выполнить();
	Настройка = Новый Структура("Контрагенты, Номенклатура", 
	Объект.Контрагенты.Выгрузить(),РезультатЗапроса.Выгрузить());
	РеквизитФормыВЗначение("Объект").ПоместитьНастройкуВХранилище(Настройка);
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	СохранитьНастройкиНаСервере();
	Модифицированность = Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентыПапкаДляВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда		
		ТекстСообщения = НСтр(
		"ru='Для данной операции необходимо
		|установить расширение работы с файлами!
		|Установка выполняется в разделе
		|""Сервис и администрирование""/
		|""Настройка сервисных функций"".'"
		);
		ПоказатьПредупреждение(Неопределено, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
	ДиалогВыбораКаталога.Каталог = Элементы.Контрагенты.ТекущиеДанные.ПапкаДляВыгрузки;
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Элементы.Контрагенты.ТекущиеДанные.ПапкаДляВыгрузки = ДиалогВыбораКаталога.Каталог;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Контрагенты.ТекущиеДанные <> Неопределено Тогда
		МассивСтрок = Объект.Номенклатура.НайтиСтроки(Новый Структура("Контрагент", Элементы.Контрагенты.ТекущиеДанные.Поставщик)); 
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.Номенклатура.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПоставщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Элементы.Контрагенты.ТекущиеДанные.Поставщик Тогда
		ЗаполнитьНоменклатуруПоПоставщикуНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНоменклатуруПоПоставщикуНаСервере(Поставщик)
	
	МассивСтрок = Объект.Номенклатура.НайтиСтроки(Новый Структура("Контрагент",Поставщик));
	Если МассивСтрок.Количество() = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &Контрагент
		|	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен";
		
		Запрос.УстановитьПараметр("Контрагент", Поставщик);
		РезультатЗапроса = Запрос.Выполнить(); 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрокаНоменклатура = Объект.Номенклатура.Добавить();
			НоваяСтрокаНоменклатура.Номенклатура = Выборка.Номенклатура;
			НоваяСтрокаНоменклатура.Контрагент = Выборка.Контрагент;
			НоваяСтрокаНоменклатура.Выгружать = Истина;
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Модифицированность = Истина; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда 
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеОтветаЗакрытиеФормы",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,"Настройки были изменены.Сохранить настройки?",РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеОтветаЗакрытиеФормы(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаСервере();
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьТекстЗапросаdelivery(ЭтоЛакталис)
	
	Если ЭтоЛакталис Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	сабДанныеПоставокСрезПоследних.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ВТЦеныСоСкладами
		|ИЗ
		|	РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
		
		|СГРУППИРОВАТЬ ПО
		|	сабДанныеПоставокСрезПоследних.Номенклатура
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТЦеныСоСкладами.Номенклатура КАК Номенклатура,
		|	СУММА(сабДанныеПоставокСрезПоследних.Цена) КАК Цена,
		|	МАКСИМУМ(сабДанныеПоставокСрезПоследних.ЦенаБезНДС) КАК ЦенаБезНДС,
		|	сабДанныеПоставокСрезПоследних.Предприятие КАК Предприятие
		|ПОМЕСТИТЬ ВТЦены
		|ИЗ
		|	ВТЦеныСоСкладами КАК ВТЦеныСоСкладами
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДанныеПоставок.СрезПоследних(, Номенклатура В (&Номенклатура)) КАК сабДанныеПоставокСрезПоследних
		|		ПО (ВТЦеныСоСкладами.Номенклатура = сабДанныеПоставокСрезПоследних.Номенклатура)
		|			И (ВТЦеныСоСкладами.Период = сабДанныеПоставокСрезПоследних.Период)
		
		|СГРУППИРОВАТЬ ПО
		|	ВТЦеныСоСкладами.Номенклатура,
		|	сабДанныеПоставокСрезПоследних.Предприятие
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	сабОбработкаДокументов.ДокументУУ КАК ДокументУУ,
		|	сабОбработкаДокументов.ДокументБУ КАК ДокументБУ,
		|	сабОбработкаДокументов.ДатаОбработки КАК ДатаОбработки
		|ПОМЕСТИТЬ ВТ_НеПустые
		|ИЗ
		|	РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.РеализацияТоваровУслуг)
		|			ИЛИ ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.ВозвратТоваровОтПокупателя))
		|	И сабОбработкаДокументов.ДокументУУ.Дата ЕСТЬ НЕ NULL 
		
		|СГРУППИРОВАТЬ ПО
		|	сабОбработкаДокументов.ДокументБУ,
		|	сабОбработкаДокументов.ДокументУУ,
		|	сабОбработкаДокументов.ДатаОбработки
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_НеПустые.ДокументУУ) КАК ДокументУУ,
		|	ВТ_НеПустые.ДокументБУ КАК ДокументБУ,
		|	ВТ_НеПустые.ДатаОбработки КАК ДатаОбработки
		|ПОМЕСТИТЬ Вт_Группировка
		|ИЗ
		|	ВТ_НеПустые КАК ВТ_НеПустые
		
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НеПустые.ДокументБУ,
		|	ВТ_НеПустые.ДатаОбработки
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Группировка.ДокументБУ КАК ДокументБУ,
		|	МАКСИМУМ(Вт_Группировка.ДатаОбработки) КАК ДатаОбработки
		|ПОМЕСТИТЬ Вт_Группировка_Итоговая
		|ИЗ
		|	Вт_Группировка КАК Вт_Группировка
		
		|СГРУППИРОВАТЬ ПО
		|	Вт_Группировка.ДокументБУ
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Группировка_Итоговая.ДокументБУ КАК ДокументБУ,
		|	МАКСИМУМ(Вт_Группировка.ДокументУУ) КАК ДокументУУ
		|ПОМЕСТИТЬ ВТ_Итоговая
		|ИЗ
		|	Вт_Группировка_Итоговая КАК Вт_Группировка_Итоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Группировка КАК Вт_Группировка
		|		ПО Вт_Группировка_Итоговая.ДокументБУ = Вт_Группировка.ДокументБУ
		|			И Вт_Группировка_Итоговая.ДатаОбработки = Вт_Группировка.ДатаОбработки
		
		|СГРУППИРОВАТЬ ПО
		|	Вт_Группировка_Итоговая.ДокументБУ
		
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументБУ
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА РеализацияТоваровУслугТовары.Сумма - РеализацияТоваровУслугТовары.СуммаНДС
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Сумма
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА РеализацияТоваровУслугТовары.Сумма
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Сумма + РеализацияТоваровУслугТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаСНДС,
		|	&ИДДистрибьютора КАК ИДДистрибьютора,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент.Код КАК КонтрагентКод,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
		|	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
		|	РеализацияТоваровУслугТовары.Номенклатура.Код КАК НоменклатураКод,
		|	РеализацияТоваровУслугТовары.Номенклатура.Производитель.НаименованиеПолное КАК Поставщик,
		|	РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеКонтрагента,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """") КАК ПодразделениеКонтрагентаКод,
		|	ЛОЖЬ КАК ЭтоВозврат
		|ПОМЕСТИТЬ ВТПродажи
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
		|	И РеализацияТоваровУслугТовары.Номенклатура В(&Номенклатура)
		
		|ОБЪЕДИНИТЬ ВСЕ
		
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
		|	ВозвратТоваровОтПокупателяТовары.Количество,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ВозвратТоваровОтПокупателяТовары.Сумма - ВозвратТоваровОтПокупателяТовары.СуммаНДС
		|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.Сумма
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ВозвратТоваровОтПокупателяТовары.Сумма
		|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.Сумма + ВозвратТоваровОтПокупателяТовары.СуммаНДС
		|	КОНЕЦ,
		|	&ИДДистрибьютора,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент.Код,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.Код,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.Производитель.НаименованиеПолное,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """"),
		|	ИСТИНА
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ВозвратТоваровОтПокупателяТовары.Номенклатура В(&Номенклатура)
		|	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
		
		|ОБЪЕДИНИТЬ ВСЕ
		
		|ВЫБРАТЬ
		|	КорректировкаРеализацииТовары.Ссылка,
		|	КорректировкаРеализацииТовары.Номенклатура,
		|	КорректировкаРеализацииТовары.Количество - КорректировкаРеализацииТовары.КоличествоДоИзменения,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения - (КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
		|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
		|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения + (КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
		|	КОНЕЦ,
		|	&ИДДистрибьютора,
		|	КорректировкаРеализацииТовары.Ссылка.Контрагент.Код,
		|	КорректировкаРеализацииТовары.Ссылка.Контрагент,
		|	КорректировкаРеализацииТовары.Ссылка.Номер,
		|	КорректировкаРеализацииТовары.Ссылка.Дата,
		|	КорректировкаРеализацииТовары.Номенклатура.Код,
		|	КорректировкаРеализацииТовары.Номенклатура.Производитель.НаименованиеПолное,
		|	КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """"),
		|	ЛОЖЬ
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО КорректировкаРеализацииТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	КорректировкаРеализацииТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И КорректировкаРеализацииТовары.Номенклатура В(&Номенклатура)
		|	И КорректировкаРеализацииТовары.Ссылка.Проведен
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПродажи.Ссылка КАК Ссылка,
		|	ВТПродажи.Номенклатура КАК Номенклатура,
		|	ВТПродажи.Количество КАК Количество,
		|	ВТПродажи.СуммаБезНДС КАК СуммаБезНДС,
		|	ВТПродажи.СуммаСНДС КАК СуммаСНДС,
		|	ВТПродажи.ИДДистрибьютора КАК ИДДистрибьютора,
		|	ВТПродажи.КонтрагентКод КАК КонтрагентКод,
		|	ВТПродажи.Контрагент КАК Контрагент,
		|	ВТПродажи.Номер КАК Номер,
		|	ВТПродажи.Дата КАК Дата,
		|	ВТПродажи.НоменклатураКод КАК НоменклатураКод,
		|	ВТПродажи.Поставщик КАК Поставщик,
		|	ВТПродажи.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	ВТПродажи.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТПродажи.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
		|	ВТПродажи.ПодразделениеКонтрагентаКод КАК ПодразделениеКонтрагентаКод,
		|	ВТПродажи.ЭтоВозврат КАК ЭтоВозврат,
		|	ЕСТЬNULL(ВТЦены.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(ВТЦены.ЦенаБезНДС, 0) КАК ЦенаБезНДС
		|ПОМЕСТИТЬ ВТПродажиСЦенамиЗакупки
		|ИЗ
		|	ВТПродажи КАК ВТПродажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
		|		ПО (ВТПродажи.Ссылка.Организация = ВТЦены.Предприятие.ОсновнаяОрганизация)
		|			И (ВТПродажи.Номенклатура = ВТЦены.Номенклатура)
		|;
		
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПродажиСЦенамиЗакупки.Ссылка КАК Ссылка,
		|	ВТПродажиСЦенамиЗакупки.Номенклатура КАК Номенклатура,
		|	ВТПродажиСЦенамиЗакупки.Количество КАК Количество,
		|	ВТПродажиСЦенамиЗакупки.СуммаБезНДС КАК СуммаБезНДС,
		|	ВТПродажиСЦенамиЗакупки.СуммаСНДС КАК СуммаСНДС,
		|	ВТПродажиСЦенамиЗакупки.ИДДистрибьютора КАК ИДДистрибьютора,
		|	ВТПродажиСЦенамиЗакупки.КонтрагентКод КАК КонтрагентКод,
		|	ВТПродажиСЦенамиЗакупки.Контрагент КАК Контрагент,
		|	ВТПродажиСЦенамиЗакупки.Номер КАК Номер,
		|	ВТПродажиСЦенамиЗакупки.Дата КАК Дата,
		|	ВТПродажиСЦенамиЗакупки.НоменклатураКод КАК НоменклатураКод,
		|	ВТПродажиСЦенамиЗакупки.Поставщик КАК Поставщик,
		|	ВТПродажиСЦенамиЗакупки.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	ВТПродажиСЦенамиЗакупки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТПродажиСЦенамиЗакупки.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
		|	ВТПродажиСЦенамиЗакупки.ПодразделениеКонтрагентаКод КАК ПодразделениеКонтрагентаКод,
		|	ВТПродажиСЦенамиЗакупки.ЭтоВозврат КАК ЭтоВозврат,
		|	ЕСТЬNULL(ОтветственныеСрезПоследних.Ответственный.Код, """") КАК ОтветственныйКод,
		|	ЕСТЬNULL(ОтветственныеСрезПоследних.Ответственный, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Ответственный,
		|	ВТПродажиСЦенамиЗакупки.Цена КАК Цена,
		|	ВТПродажиСЦенамиЗакупки.ЦенаБезНДС КАК ЦенаБезНДС,
		|	ВТПродажиСЦенамиЗакупки.Номенклатура.ВидСтавкиНДС КАК НоменклатураСтавкаНДС
		|ИЗ
		|	ВТПродажиСЦенамиЗакупки КАК ВТПродажиСЦенамиЗакупки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные.СрезПоследних(
		|				&ДатаОкончания,
		|				Контрагент В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВтПродажи.Контрагент КАК Контрагент
		|					ИЗ
		|						ВТПродажи КАК ВтПродажи)) КАК ОтветственныеСрезПоследних
		|		ПО ВТПродажиСЦенамиЗакупки.Контрагент = ОтветственныеСрезПоследних.Контрагент";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	сабОбработкаДокументов.ДокументУУ КАК ДокументУУ,
		|	сабОбработкаДокументов.ДокументБУ КАК ДокументБУ,
		|	сабОбработкаДокументов.ДатаОбработки КАК ДатаОбработки
		|ПОМЕСТИТЬ ВТ_НеПустые
		|ИЗ
		|	РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.РеализацияТоваровУслуг)
		|			ИЛИ ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.ВозвратТоваровОтПокупателя))
		|	И сабОбработкаДокументов.ДокументУУ.Дата ЕСТЬ НЕ NULL 
		|СГРУППИРОВАТЬ ПО
		|	сабОбработкаДокументов.ДокументБУ,
		|	сабОбработкаДокументов.ДокументУУ,
		|	сабОбработкаДокументов.ДатаОбработки
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_НеПустые.ДокументУУ) КАК ДокументУУ,
		|	ВТ_НеПустые.ДокументБУ КАК ДокументБУ,
		|	ВТ_НеПустые.ДатаОбработки КАК ДатаОбработки
		|ПОМЕСТИТЬ Вт_Группировка
		|ИЗ
		|	ВТ_НеПустые КАК ВТ_НеПустые
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НеПустые.ДокументБУ,
		|	ВТ_НеПустые.ДатаОбработки
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Группировка.ДокументБУ КАК ДокументБУ,
		|	МАКСИМУМ(Вт_Группировка.ДатаОбработки) КАК ДатаОбработки
		|ПОМЕСТИТЬ Вт_Группировка_Итоговая
		|ИЗ
		|	Вт_Группировка КАК Вт_Группировка
		|СГРУППИРОВАТЬ ПО
		|	Вт_Группировка.ДокументБУ
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Группировка_Итоговая.ДокументБУ КАК ДокументБУ,
		|	МАКСИМУМ(Вт_Группировка.ДокументУУ) КАК ДокументУУ
		|ПОМЕСТИТЬ ВТ_Итоговая
		|ИЗ
		|	Вт_Группировка_Итоговая КАК Вт_Группировка_Итоговая
		|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Группировка КАК Вт_Группировка
		|		ПО Вт_Группировка_Итоговая.ДокументБУ = Вт_Группировка.ДокументБУ
		|			И Вт_Группировка_Итоговая.ДатаОбработки = Вт_Группировка.ДатаОбработки
		|СГРУППИРОВАТЬ ПО
		|	Вт_Группировка_Итоговая.ДокументБУ
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументБУ
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА РеализацияТоваровУслугТовары.Сумма - РеализацияТоваровУслугТовары.СуммаНДС
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Сумма
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА РеализацияТоваровУслугТовары.Сумма
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Сумма + РеализацияТоваровУслугТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаСНДС,
		|	&ИДДистрибьютора КАК ИДДистрибьютора,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент.Код КАК КонтрагентКод,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслугТовары.Ссылка.Номер КАК Номер,
		|	РеализацияТоваровУслугТовары.Ссылка.Дата КАК Дата,
		|	РеализацияТоваровУслугТовары.Номенклатура.Код КАК НоменклатураКод,
		|	РеализацияТоваровУслугТовары.Номенклатура.Производитель.НаименованиеПолное КАК Поставщик,
		|	РеализацияТоваровУслугТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	РеализацияТоваровУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеКонтрагента,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """") КАК ПодразделениеКонтрагентаКод,
		|	ЛОЖЬ КАК ЭтоВозврат
		|ПОМЕСТИТЬ ВТПродажи
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО РеализацияТоваровУслугТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
		|	И РеализацияТоваровУслугТовары.Номенклатура В(&Номенклатура)
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
		|	ВозвратТоваровОтПокупателяТовары.Количество,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ВозвратТоваровОтПокупателяТовары.Сумма - ВозвратТоваровОтПокупателяТовары.СуммаНДС
		|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.Сумма
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА ВозвратТоваровОтПокупателяТовары.Сумма
		|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.Сумма + ВозвратТоваровОтПокупателяТовары.СуммаНДС
		|	КОНЕЦ,
		|	&ИДДистрибьютора,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент.Код,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Контрагент,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Номер,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.Код,
		|	ВозвратТоваровОтПокупателяТовары.Номенклатура.Производитель.НаименованиеПолное,
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.СуммаВключаетНДС,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """"),
		|	ИСТИНА
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ВозвратТоваровОтПокупателяТовары.Номенклатура В(&Номенклатура)
		|	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	КорректировкаРеализацииТовары.Ссылка,
		|	КорректировкаРеализацииТовары.Номенклатура,
		|	КорректировкаРеализацииТовары.Количество - КорректировкаРеализацииТовары.КоличествоДоИзменения,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения - (КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
		|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС
		|			ТОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения
		|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения + (КорректировкаРеализацииТовары.СуммаНДС - КорректировкаРеализацииТовары.СуммаНДСДоИзменения)
		|	КОНЕЦ,
		|	&ИДДистрибьютора,
		|	КорректировкаРеализацииТовары.Ссылка.Контрагент.Код,
		|	КорректировкаРеализацииТовары.Ссылка.Контрагент,
		|	КорректировкаРеализацииТовары.Ссылка.Номер,
		|	КорректировкаРеализацииТовары.Ссылка.Дата,
		|	КорректировкаРеализацииТовары.Номенклатура.Код,
		|	КорректировкаРеализацииТовары.Номенклатура.Производитель.НаименованиеПолное,
		|	КорректировкаРеализацииТовары.Ссылка.СуммаВключаетНДС,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|			ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ВТ_Итоговая.ДокументУУ ЕСТЬ НЕ NULL 
		|				ТОГДА ВТ_Итоговая.ДокументУУ.ПодразделениеКонтрагента.Код
		|			ИНАЧЕ """"
		|		КОНЕЦ, """"),
		|	ЛОЖЬ
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
		|		ПО КорректировкаРеализацииТовары.Ссылка = ВТ_Итоговая.ДокументБУ
		|ГДЕ
		|	КорректировкаРеализацииТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И КорректировкаРеализацииТовары.Номенклатура В(&Номенклатура)
		|	И КорректировкаРеализацииТовары.Ссылка.Проведен
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПродажи.Ссылка КАК Ссылка,
		|	ВТПродажи.Номенклатура КАК Номенклатура,
		|	ВТПродажи.Количество КАК Количество,
		|	ВТПродажи.СуммаБезНДС КАК СуммаБезНДС,
		|	ВТПродажи.СуммаСНДС КАК СуммаСНДС,
		|	ВТПродажи.ИДДистрибьютора КАК ИДДистрибьютора,
		|	ВТПродажи.КонтрагентКод КАК КонтрагентКод,
		|	ВТПродажи.Контрагент КАК Контрагент,
		|	ВТПродажи.Номер КАК Номер,
		|	ВТПродажи.Дата КАК Дата,
		|	ВТПродажи.НоменклатураКод КАК НоменклатураКод,
		|	ВТПродажи.Поставщик КАК Поставщик,
		|	ВТПродажи.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	ВТПродажи.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТПродажи.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
		|	ВТПродажи.ПодразделениеКонтрагентаКод КАК ПодразделениеКонтрагентаКод,
		|	ВТПродажи.ЭтоВозврат КАК ЭтоВозврат,
		|	ЕСТЬNULL(ОтветственныеСрезПоследних.Ответственный.Код, """") КАК ОтветственныйКод,
		|	ЕСТЬNULL(ОтветственныеСрезПоследних.Ответственный, Значение(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Ответственный
		|ИЗ
		|	ВТПродажи КАК ВТПродажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные.СрезПоследних(
		|				&ДатаОкончания,
		|				Контрагент В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВтПродажи.Контрагент КАК Контрагент
		|					ИЗ
		|						ВТПродажи КАК ВтПродажи)) КАК ОтветственныеСрезПоследних
		|		ПО (ВТПродажи.Контрагент = ОтветственныеСрезПоследних.Контрагент)"; 
	КонецЕсли;
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура КонтрагентыПапкаДляРучнойВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда		
		ТекстСообщения = НСтр(
		"ru='Для данной операции необходимо
		|установить расширение работы с файлами!
		|Установка выполняется в разделе
		|""Сервис и администрирование""/
		|""Настройка сервисных функций"".'"
		);
		ПоказатьПредупреждение(Неопределено, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
	ДиалогВыбораКаталога.Каталог = Элементы.Контрагенты.ТекущиеДанные.ПапкаДляРучнойВыгрузки;
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Элементы.Контрагенты.ТекущиеДанные.ПапкаДляРучнойВыгрузки = ДиалогВыбораКаталога.Каталог;
		Модифицированность = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Контрагент = Элементы.Контрагенты.ТекущиеДанные.Поставщик;
		Элемент.ТекущиеДанные.Выгружать = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элементы.Контрагенты.ТекущиеДанные.ВсяНоменклатура Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(,"Для добавления номенклатуры необходимо снять признак ""Вся номенклатура"" для контрагента");
	КонецЕсли;
	
КонецПроцедуры
