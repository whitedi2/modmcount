
&НаСервере
Процедура ЗагрузитьНаСервере()
	РеквизитФормыВЗначение("Объект").ВыполнитьКоманду("сабЗагрузкаВыписокИзКлиентБанка", Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	
	Настройка = Новый Структура("УчетнаяЗапись, Отправитель, КоличествоДней", 
	УчетнаяЗапись, Отправитель, КоличествоДней);
	ЗаполнитьЗначенияСвойств(Настройка,РеквизитФормыВЗначение("Объект"));	
	Константы.сабЗагрузкаВыписокИзКлиентБанка.Установить(Новый ХранилищеЗначения(Настройка,Новый СжатиеДанных(9)));
КонецПроцедуры	

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Настройка = Константы.сабЗагрузкаВыписокИзКлиентБанка.Получить().Получить();
	Если Настройка <> Неопределено Тогда
		УчетнаяЗапись = Настройка.УчетнаяЗапись;
		Отправитель = Настройка.Отправитель;			   
		КоличествоДней = Настройка.КоличествоДней;
	КонецЕсли;
	
	Запись = РегистрыСведений.ПараметрыРегламентныхЗаданийРасширения.СоздатьМенеджерЗаписи();
	Запись.РегламентноеЗадание= Перечисления.РегламентныеЗаданияРасширения.ЗагрузкаВыписокИзКлиентБанка;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		ЗаписьСуществует = Истина;
		Расписание = Запись.Расписание.Получить();
		Элементы.КнопкаРасписаниеСинхронизации.Заголовок = Строка(Расписание);
		ЗапускПоРасписанию = Запись.Использование;
	Иначе
		ЗаписьСуществует = Ложь;
		Расписание = Неопределено;
		Элементы.КнопкаРасписаниеСинхронизации.Заголовок = "Расписание не заполнено. Синхронизация выполняться не будет";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеСинхронизации(Команда)
	Расписание = НайтиРасписание();	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание); // создаем диалог
	Диалог.Показать(Новый ОписаниеОповещения("ПоказатьДиалогЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));		
КонецПроцедуры

&НаСервере
Функция НайтиРасписание()
	
	Запись = РегистрыСведений.ПараметрыРегламентныхЗаданийРасширения.СоздатьМенеджерЗаписи();
	Запись.РегламентноеЗадание= Перечисления.РегламентныеЗаданияРасширения.ЗагрузкаВыписокИзКлиентБанка;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Расписание = Запись.Расписание.Получить();
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат Расписание;
	
КонецФункции // НайтиРасписание()


&НаКлиенте
Процедура ПоказатьДиалогЗавершение(Расписание,ДополнительныеПараметры) Экспорт
	Если Расписание <> Неопределено Тогда
		СохранитьРасписание(Расписание);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьРасписание(Расписание)
	
	Элементы.КнопкаРасписаниеСинхронизации.Заголовок = Строка(Расписание);
	
	Набор = РегистрыСведений.ПараметрыРегламентныхЗаданийРасширения.СоздатьНаборЗаписей();
	Набор.Отбор.РегламентноеЗадание.Установить(Перечисления.РегламентныеЗаданияРасширения.ЗагрузкаВыписокИзКлиентБанка);
	Набор.Прочитать();
	Если Набор.Количество() = 0 Тогда
		
		МенеджерЗаписи = РегистрыСведений.ПараметрыРегламентныхЗаданийРасширения.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Расписание = Новый ХранилищеЗначения(Расписание);
		МенеджерЗаписи.Использование = ЗапускПоРасписанию;
		МенеджерЗаписи.РегламентноеЗадание = Перечисления.РегламентныеЗаданияРасширения.ЗагрузкаВыписокИзКлиентБанка;
		МенеджерЗаписи.Записать();;
		
	Иначе
		
		Для Каждого Запись Из Набор Цикл
			Запись.Расписание = Новый ХранилищеЗначения(Расписание);
			Запись.Использование = ЗапускПоРасписанию;
		КонецЦикла;
		Набор.Записать();
		
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗапускПоРасписаниюПриИзмененииНаСервере()
	Набор = РегистрыСведений.ПараметрыРегламентныхЗаданийРасширения.СоздатьНаборЗаписей();
	Набор.Отбор.РегламентноеЗадание.Установить(Перечисления.РегламентныеЗаданияРасширения.ЗагрузкаВыписокИзКлиентБанка);
	Набор.Прочитать();
	Если Набор.Количество() <> 0 Тогда
		Для Каждого Запись Из Набор Цикл
			Запись.Использование = ЗапускПоРасписанию;
		КонецЦикла;
		Набор.Записать();	      
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПоРасписаниюПриИзменении(Элемент)
	ЗапускПоРасписаниюПриИзмененииНаСервере();
КонецПроцедуры