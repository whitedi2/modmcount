&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтруктураСвойств = Новый Структура;
	ЗаполнитьВидыОпераций(, СтруктураСвойств);
	//АдресХранилищаСвойств = ПоместитьВоВременноеХранилище(СтруктураСвойств, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыОпераций(Родитель = Неопределено, СтруктураСвойств)
	
	СтруктураДоков = БПСервер.СписокВидовСЗ(Родитель, "Все документы");
	
	////заполняем фильтр
	//Для каждого ТекСтрока Из СтруктураДоков Цикл
	//	СписокТиповДокументов.Добавить(ТекСтрока.Ссылка, ТекСтрока.Наименование);	
	//КонецЦикла;//конец заполнения фильтра
	
	
	ИндексКоманды = 0;
	Для Каждого ВидОперации Из СтруктураДоков Цикл
		Если ВидОперации.ЭтоРодитель Тогда
			Элементы.Добавить("Декорация" + ВидОперации.Код, Тип("ДекорацияФормы"), ?(Родитель = Неопределено, Неопределено, Элементы["ГруппаФормы" + ВидОперации.РодительКод]));
			
			НоваяКнопка = Элементы.Найти("ГруппаФормы" + ВидОперации.Код);
			Если НоваяКнопка = Неопределено Тогда
				НоваяКнопка = Элементы.Добавить("ГруппаФормы" + ВидОперации.Код, Тип("ГруппаФормы"), ?(Родитель = Неопределено, Неопределено, Элементы["ГруппаФормы" + ВидОперации.РодительКод]));
			Иначе	
				//НоваяКнопка.Видимость = Истина;	
			КонецЕсли;
			НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			НоваяКнопка.Заголовок = ?(ЗначениеЗаполнено(ВидОперации.ИмяСписка), ВидОперации.ИмяСписка, ВидОперации.Наименование);
			НоваяКнопка.ОтображатьЗаголовок = Истина;
			НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			//СтруктураСвойств.Вставить("ГруппаФормы" + ВидОперации.Код, Новый Структура("ОтображатьЗаголовок, Группировка", Истина, "Вертикальная"));
			
			//НоваяКнопка.ОтображатьЗаголовок = Истина;
			ЗаполнитьВидыОпераций(ВидОперации.Ссылка, СтруктураСвойств);
		Иначе
			//НоваяКоманда = Элементы.Найти("ПолеФормы" + ВидОперации.Код);
			//Если НоваяКоманда = Неопределено Тогда
			//	НоваяКоманда = Элементы.Добавить("ПолеФормы" + ВидОперации.Код);
			//КонецЕсли;
			//НоваяКоманда.Действие  = "ВыборВидаОперации";
			
			
			
			НоваяКоманда = Команды.Найти("Команда" + ВидОперации.Код);
			Если НоваяКоманда = Неопределено Тогда
				НоваяКоманда = Команды.Добавить("Команда" + ВидОперации.Код);
			КонецЕсли;
			НоваяКоманда.Действие  = "ВыборВидаОперации";
			НоваяКнопка = Элементы.Найти("Команда" + ВидОперации.Код);
			Если НоваяКнопка = Неопределено Тогда
				НоваяКнопка = Элементы.Добавить("Команда" + ВидОперации.Код, Тип("КнопкаФормы"),?(Родитель = Неопределено, Элементы.ВидыДокументов, Элементы["ГруппаФормы" + ВидОперации.РодительКод]));
			Иначе	
				НоваяКнопка.Видимость = Истина;	
			КонецЕсли;
			НоваяКнопка.Заголовок = ?(ЗначениеЗаполнено(ВидОперации.ИмяСписка), ВидОперации.ИмяСписка, ВидОперации.Наименование);;
			НоваяКнопка.ИмяКоманды = "Команда" + ВидОперации.Код;
			НоваяКнопка.Вид = ВидКнопкиФормы.Гиперссылка;
			

			//НоваяКнопка.Отступ = ?(Родитель = Неопределено, 0, 2);
			//НоваяКнопка.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
			//НоваяКнопка.Подсказка = ВидОперации.Комментарий;
			//СтруктураСвойств.Вставить("Команда" + ВидОперации.Код, Новый Структура("Отступ, Подсказка", ?(Родитель = Неопределено, 0, 2), ВидОперации.Комментарий));
			
			Если НоваяКнопка.Заголовок = "Все документы" Тогда
				НовыйШрифт = Новый Шрифт(,10,Истина);
				НоваяКнопка.Шрифт = НовыйШрифт;
			Иначе
				
				НовыйШрифт = Новый Шрифт(,10);
				НоваяКнопка.Шрифт = НовыйШрифт;
			КонецЕсли;
			
			
			Если ЗначениеЗаполнено(ВидОперации.Комментарий) Тогда
				ДобавляемыеРеквизиты = Новый Массив; 
				Реквизит = Новый РеквизитФормы("Реквизит" + ВидОперации.Код, Новый ОписаниеТипов("Строка")); 
				ДобавляемыеРеквизиты.Добавить(Реквизит); 
				ИзменитьРеквизиты(ДобавляемыеРеквизиты);
				НоваяКнопка = Элементы.Найти("ПолеФормы" + ВидОперации.Код);
				Если НоваяКнопка = Неопределено И Родитель = Неопределено Тогда
					НоваяКнопка = Элементы.Добавить("ПолеФормы" + ВидОперации.Код, Тип("ПолеФормы"),?(Родитель = Неопределено, Элементы.ВидыДокументов, Элементы["ГруппаФормы" + ВидОперации.РодительКод]));
					НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
					НоваяКнопка.ПутьКДанным  = "Реквизит" + ВидОперации.Код;
					//НоваяКнопка.Гиперссылка = Истина;
					ЭтотОбъект["Реквизит" + ВидОперации.Код] = ВидОперации.Комментарий;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаОперации(Команда)
	
	КодВидаДокумента = Прав(Команда.Имя, СтрДлина(Команда.Имя) - 7);
	
	Если КодВидаДокумента = "011" Тогда
		ОткрытьФорму("ЖурналДокументов.ВнутренниеДокументы.Форма.ФормаСписка");
		Возврат;
	КонецЕсли;
	СтруктураТиповДокументов = ПодобратьТипДокумента(КодВидаДокумента);
	Если СтруктураТиповДокументов.Количество() Тогда
		Если ЗначениеЗаполнено(СтруктураТиповДокументов[0].РодительИмяДокумента) Тогда
			
			ПараметрыФормы = Новый Структура("ВидВнутреннегоДокумента, ПодтипВнутрДокумента, ФормаВыбора", СтруктураТиповДокументов[0].РодительСсылка, СтруктураТиповДокументов[0].Ссылка, Ложь);
			ОткрытьФорму("ЖурналДокументов.ВнутренниеДокументы.Форма.ФормаСписка", ПараметрыФормы, , СтруктураТиповДокументов[0].Ссылка);

			
			//ТекФорма = ПолучитьФорму("Документ." + СтруктураТиповДокументов[0].РодительИмяДокумента + ".ФормаОбъекта");
			//ТекФорма.Объект.ВидСЗ = СтруктураТиповДокументов[0].Ссылка;
			//ТекФорма.Открыть();
		Иначе
			ПараметрыФормы = Новый Структура("ВидВнутреннегоДокумента, ФормаВыбора", СтруктураТиповДокументов[0].Ссылка, Ложь);
			ОткрытьФорму("ЖурналДокументов.ВнутренниеДокументы.Форма.ФормаСписка", ПараметрыФормы, , СтруктураТиповДокументов[0].Ссылка);
			
			//ТекФорма = ПолучитьФорму("Документ." + СтруктураТиповДокументов[0].ИмяДокумента + ".ФормаОбъекта");
			//ТекФорма.Открыть();
		КонецЕсли;
	Иначе
		Предупреждение("Документ не найден!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодобратьТипДокумента(КодЭлемента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_ВидыВнутреннихДокументов.Ссылка КАК Ссылка,
	               |	Д_ВидыВнутреннихДокументов.ИмяДокумента КАК ИмяДокумента,
	               |	Д_ВидыВнутреннихДокументов.Родитель.ИмяДокумента КАК РодительИмяДокумента,
	               |	Д_ВидыВнутреннихДокументов.Родитель КАК РодительСсылка
	               |ИЗ
	               |	Справочник.Д_ВидыВнутреннихДокументов КАК Д_ВидыВнутреннихДокументов
	               |ГДЕ
	               |	Д_ВидыВнутреннихДокументов.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", КодЭлемента);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	МассивДанных = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		Стр = Новый Структура;
		Стр.Вставить("Ссылка", Выборка.Ссылка);
		Стр.Вставить("ИмяДокумента", Выборка.ИмяДокумента);
		Стр.Вставить("РодительИмяДокумента", Выборка.РодительИмяДокумента);
		Стр.Вставить("РодительСсылка", Выборка.РодительСсылка);
		МассивДанных.Добавить(Стр);
		
	КонецЦикла;
	Возврат МассивДанных;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ОбновитьСвойстваЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСвойстваЭлементов()
	СтруктураСвойств = ПолучитьИзВременногоХранилища(АдресХранилищаСвойств);
	
	Для каждого ТекЭлемент Из Элементы Цикл
		Если СтруктураСвойств.Свойство(ТекЭлемент.Имя) Тогда
			ЗаполнитьЗначенияСвойств(ТекЭлемент, СтруктураСвойств[ТекЭлемент.Имя]);
			Если СтруктураСвойств[ТекЭлемент.Имя].Свойство("Группировка") Тогда
				ТекЭлемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	

КонецПроцедуры



