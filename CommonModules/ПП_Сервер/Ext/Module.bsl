
//Получает реквизит документа или справочника по его имени
Функция ПолучитьРеквизит(ВыбОбъект,ИмяРеквизита) Экспорт
	Возврат  ВыбОбъект[ИмяРеквизита];		
КонецФункции

Функция ОписаниеСтр(Элемент) Экспорт
	Если ПустаяСтрока(Элемент) Тогда
		Эл = "";
	Иначе
		Эл = Строка(Элемент) + Символы.ПС;
	КонецЕсли;
	Возврат Эл
КонецФункции


Функция ПредставлениеДок(ТекДок) Экспорт
	ДлинаСтроки = СтрДлина(СокрЛП(ТекДок))-22;
	Док = Лев(ТекДок,ДлинаСтроки);
	Возврат Док
КонецФункции

Функция КраткоеПредставлениеДокумента(ТекДок) Экспорт
	Док = "№ " + СокрЛП(ТекДок.Номер) + " от " + Формат(ТекДок.Дата,"ДЛФ=Д");
	Возврат Док
КонецФункции


Функция НомерДок(ТекДок) Экспорт
	Возврат ТекДок.Номер
КонецФункции

//Получает последнее значение предприятия по дате и источнику
//СчетИсточник: тип БанковскийСчет или Источник
Функция ПолучитьПредприятие(Дата, знач СчетИсточник) Экспорт
		
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_ИсточникППСрезПоследних.Предприятие
	               |ИЗ
	               |	РегистрСведений.Д_ИсточникПП.СрезПоследних(&Дата, БанковскиеСчета = &Источник) КАК Д_ИсточникППСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Источник", СчетИсточник);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Предприятие;
	Иначе
		Возврат Справочники.Предприятия.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции


// Функция ПрочитатьXMLВТаблицу преобразует текст формата XML в таблицу значений,
// при этом колонки таблицы формируются на основе описания в XML.
//
// Параметры:
//  ТекстXML     - текст формата XML.
//
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПрочитатьXMLВТаблицу(ТекстXML) Экспорт
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(ТекстXML);
	
	// Прочитаем первый узел и проверим его
	Если Не Чтение.Прочитать() Тогда
		ВызватьИсключение("Пустой XML");
	ИначеЕсли Чтение.Имя <> "Items" Тогда
		ВызватьИсключение("Ошибка в структуре XML");
	КонецЕсли;
	
	// Получим описание таблицы и создадим ее
	ИмяТаблицы = Чтение.ПолучитьАтрибут("Description");
	ИменаКолонок = СтрЗаменить(Чтение.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	Колонок = СтрЧислоСтрок(ИменаКолонок);
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	Для Сч = 1 По Колонок Цикл
		ТаблицаЗначений.Колонки.Добавить(СтрПолучитьСтроку(ИменаКолонок, Сч), Новый ОписаниеТипов("Строка"));
	КонецЦикла;
	
	// Заполним значения в таблице
	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		ИначеЕсли Чтение.Имя <> "Item" Тогда
			ВызватьИсключение("Ошибка в структуре XML");
		КонецЕсли;
		
		новСтр = ТаблицаЗначений.Добавить();
		Для Сч = 1 По Колонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
			новСтр[Сч-1] = Чтение.ПолучитьАтрибут(ИмяКолонки);
		КонецЦикла;
		
	КонецЦикла;
	
	// Заполним результат
	Результат = Новый Структура;
	Результат.Вставить("ИмяТаблицы", ИмяТаблицы);
	Результат.Вставить("Данные", ТаблицаЗначений);
	
	Возврат Результат;
	
КонецФункции // ПрочитатьXMLВТаблицу()


// Выводит сообщение об ошибке заполнения поля.
//
Процедура СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, ИмяТабличнойЧасти = Неопределено, НомерСтроки = Неопределено, Поле = Неопределено, Отказ = Ложь) Экспорт
		
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;

	Если ИмяТабличнойЧасти <> Неопределено Тогда
		Сообщение.Поле = ИмяТабличнойЧасти + "[" + (НомерСтроки - 1) + "]." + Поле;
	ИначеЕсли ЗначениеЗаполнено(Поле) Тогда
		Сообщение.Поле = Поле;
	КонецЕсли;

	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Сообщить();

	Отказ = Истина;
	
КонецПроцедуры // СообщитьОбОшибке()

Функция НазваниеСчёта(Счёт) Экспорт
	Если Счёт = ПланыСчетов.Учетный.Счет5002() Тогда  
		Возврат "Валюта";
	ИначеЕсли Счёт = ПланыСчетов.Учетный.Счет5001() Тогда
		Возврат "Рубли";
	Иначе
		Возврат Счёт;
	КонецЕсли;
КонецФункции

Функция ЭтоРасходнаяОперация(ВидОперации = Неопределено) Экспорт
	
	Если ВидОперации = Неопределено Тогда
		МассивРасходныхВидовОпераций = Новый Массив;
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.Оплата);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.ОплатаВНХ);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеСотруднику);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.ВозмещениеПоступлений);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.СнятиеНаличных);
		МассивРасходныхВидовОпераций.Добавить(Перечисления.ВидыОперацийПлатежноеПоручение.ВзносНаличнымиВБанк);
		
		Для каждого ТекСтрока Из Перечисления.ВидыОперацийСписаниеДенежныхСредств Цикл
			МассивРасходныхВидовОпераций.Добавить(ТекСтрока);
		КонецЦикла; 
		
		Возврат МассивРасходныхВидовОпераций;
	
	КонецЕсли;
	
	Возврат ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.Оплата
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ОплатаВНХ
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеСотруднику
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ВозмещениеПоступлений
	ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.СнятиеНаличных 
	ИЛИ ВидОперации = "Расход";
КонецФункции // ()

Функция ЭтоВНХОперация(ВидОперации) Экспорт
	Возврат ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ОплатаВНХ ИЛИ ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПоступлениеВНХ;
КонецФункции

Функция НайтиОснованиеДляПоступленияВНХ(ДокументПоступления) Экспорт
	
	ДокументОснование = Неопределено;
	
	ЗапросОплатыВНХ = Новый Запрос;
	ЗапросОплатыВНХ.Текст = "ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК ОплатаВНХ_Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Дата >= &ДатаНач
	|	И ПлатежноеПоручение.ПометкаУдаления = ЛОЖЬ
	|	И ПлатежноеПоручение.СуммаДокумента = &СуммаДокумента
	|	И ПлатежноеПоручение.БанковскийСчет = &БанковскийСчет
	|	И ПлатежноеПоручение.СчетКонтрагента = &СчетКонтрагента
	|	И ПлатежноеПоручение.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПлатежноеПоручение.ОплатаВНХ)
	|	И ПлатежноеПоручение.Дата <= &ДатаКон";
	ЗапросОплатыВНХ.УстановитьПараметр("ДатаНач", НачалоДня(ДокументПоступления.Дата));
	ЗапросОплатыВНХ.УстановитьПараметр("ДатаКон", КонецДня(ДокументПоступления.Дата));
	ЗапросОплатыВНХ.УстановитьПараметр("СуммаДокумента", ДокументПоступления.СуммаДокумента);
	ЗапросОплатыВНХ.УстановитьПараметр("БанковскийСчет", ДокументПоступления.СчетКонтрагента);
	ЗапросОплатыВНХ.УстановитьПараметр("СчетКонтрагента", ДокументПоступления.БанковскийСчет);
	
	РезОплВНХ = ЗапросОплатыВНХ.Выполнить();
	ВыборкаОплВНХ = РезОплВНХ.Выбрать();
	
	Если ВыборкаОплВНХ.Следующий() Тогда
		ДокументОснование = ВыборкаОплВНХ.ОплатаВНХ_Ссылка;		
	КонецЕсли;

	Возврат ДокументОснование;
	
КонецФункции

Функция ПолучитьРезультатСгруппированногоЗапросаПоРеестру(Заявка, ГруппироватьПлатежи, УчитыватьНазначениеПриГруппировке, ЗапросДляПечати = Ложь, ОплатаДо = Неопределено) Экспорт
	
	Если ОплатаДо = Неопределено Тогда
		ОплатаДо = КонецДня(ТекущаяДата());	
	КонецЕсли;
	
	Запрос = Новый Запрос;
		
	ЗапросаГруппировка = "ВЫБРАТЬ
	                     |	МАКСИМУМ(Задача.Ссылка) КАК Ссылка,
	                     |	Задача.ТочкаМаршрута КАК ТочкаМаршрута,
	                     |	МАКСИМУМ(Задача.Номер) КАК Номер,
	                     |	Задача.Заявка КАК Заявка
	                     |ПОМЕСТИТЬ ВТ_Задача
	                     |ИЗ
	                     |	Справочник.Задача КАК Задача
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	Задача.ТочкаМаршрута,
	                     |	Задача.Заявка
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие КАК Предприятие,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация КАК Организация,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент КАК Контрагент,
	                     |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежаБух) КАК НазначениеПлатежаБух,
	                     |	СУММА(ВЫБОР
	                     |			КОГДА &ЧастичнаяОплата
	                     |				ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаЧастичнойОплаты
	                     |			ИНАЧЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	                     |		КОНЕЦ) КАК СуммаДокумента,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет КАК БанковскийСчет,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента КАК СчетКонтрагента,
	                     |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.ПлатежноеПоручение) КАК ПлатежноеПоручение,
	                     |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО) КАК ЦФО,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник КАК Плательщик,
	                     |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежа) КАК НазначениеПлатежа,
	                     |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.Приложение) КАК Приложение,
	                     |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.Примечание) КАК Примечание,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий КАК Комментарий,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС КАК СтавкаНДС,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации КАК ВидОперации,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК КАК КодБК,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО КАК КодОКАТО,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования КАК ПоказательОснования,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя КАК СтатусСоставителя,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера КАК ПоказательНомера,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты КАК ПоказательДаты,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа КАК ПоказательТипа,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода КАК ПоказательПериода,
	                     |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект) КАК ИнвПроект,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН КАК УИН,
	                     |	СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаНДС) КАК СуммаНДС,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор КАК Договор,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов КАК СчетВзаиморасчетов,
	                     |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение) КАК Подразделение,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение КАК ПодразделениеШапка,
	                     |	МАКСИМУМ(ВТ_Задача.Номер) КАК Номер,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика КАК КПППлательщика,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет КАК ПодотчетИзЗаявки,
	                     |	сабГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки КАК УИДСтроки
	                     |ИЗ
	                     |	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Задача КАК ВТ_Задача
	                     |		ПО (ВТ_Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5))
	                     |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = ВТ_Задача.Заявка
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабГрафикПлатежей КАК сабГрафикПлатежей
	                     |		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = сабГрафикПлатежей.Документ
	                     |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО = сабГрафикПлатежей.ЦФО
	                     |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = сабГрафикПлатежей.УИДСтрокиДокумента
	                     |ГДЕ
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Ссылка = &Ссылка
	                     |	И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет,
	                     |	сабГрафикПлатежей.ДатаПлатежа,
	                     |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	ПлатежноеПоручение";
	
	ЗапросГруппировкаСУчетомОснования = "ВЫБРАТЬ
	                                    |	МАКСИМУМ(Задача.Ссылка) КАК Ссылка,
	                                    |	Задача.ТочкаМаршрута КАК ТочкаМаршрута,
	                                    |	МАКСИМУМ(Задача.Номер) КАК Номер,
	                                    |	Задача.Заявка КАК Заявка
	                                    |ПОМЕСТИТЬ ВТ_Задача
	                                    |ИЗ
	                                    |	Справочник.Задача КАК Задача
	                                    |
	                                    |СГРУППИРОВАТЬ ПО
	                                    |	Задача.ТочкаМаршрута,
	                                    |	Задача.Заявка
	                                    |;
	                                    |
	                                    |////////////////////////////////////////////////////////////////////////////////
	                                    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие КАК Предприятие,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация КАК Организация,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент КАК Контрагент,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежаБух КАК НазначениеПлатежаБух,
	                                    |	СУММА(ВЫБОР
	                                    |			КОГДА &ЧастичнаяОплата
	                                    |				ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаЧастичнойОплаты
	                                    |			ИНАЧЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	                                    |		КОНЕЦ) КАК СуммаДокумента,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет КАК БанковскийСчет,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента КАК СчетКонтрагента,
	                                    |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.ПлатежноеПоручение) КАК ПлатежноеПоручение,
	                                    |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО) КАК ЦФО,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник КАК Плательщик,
	                                    |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежа) КАК НазначениеПлатежа,
	                                    |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.Приложение) КАК Приложение,
	                                    |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.Примечание) КАК Примечание,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий КАК Комментарий,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС КАК СтавкаНДС,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации КАК ВидОперации,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК КАК КодБК,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО КАК КодОКАТО,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования КАК ПоказательОснования,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя КАК СтатусСоставителя,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера КАК ПоказательНомера,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты КАК ПоказательДаты,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа КАК ПоказательТипа,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода КАК ПоказательПериода,
	                                    |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект) КАК ИнвПроект,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН КАК УИН,
	                                    |	СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаНДС) КАК СуммаНДС,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор КАК Договор,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов КАК СчетВзаиморасчетов,
	                                    |	КОЛИЧЕСТВО(Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение) КАК Подразделение,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение КАК ПодразделениеШапка,
	                                    |	МАКСИМУМ(ВТ_Задача.Номер) КАК Номер,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика КАК КПППлательщика,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет КАК ПодотчетИзЗаявки,
	                                    |	МАКСИМУМ(сабГрафикПлатежей.ДатаПлатежа) КАК ДатаПлатежа,
	                                    |	МАКСИМУМ(Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки) КАК УИДСтроки
	                                    |ИЗ
	                                    |	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	                                    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Задача КАК ВТ_Задача
	                                    |		ПО (ВТ_Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5))
	                                    |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = ВТ_Задача.Заявка
	                                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабГрафикПлатежей КАК сабГрафикПлатежей
	                                    |		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = сабГрафикПлатежей.Документ
	                                    |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО = сабГрафикПлатежей.ЦФО
	                                    |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = сабГрафикПлатежей.УИДСтрокиДокумента
	                                    |ГДЕ
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Ссылка = &Ссылка
	                                    |	И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	                                    |
	                                    |СГРУППИРОВАТЬ ПО
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежаБух,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика,
	                                    |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет
	                                    |
	                                    |УПОРЯДОЧИТЬ ПО
	                                    |	ПлатежноеПоручение";
	
	ЗапросБезГруппировки = "ВЫБРАТЬ
	                       |	МАКСИМУМ(Задача.Ссылка) КАК Ссылка,
	                       |	Задача.ТочкаМаршрута КАК ТочкаМаршрута,
	                       |	МАКСИМУМ(Задача.Номер) КАК Номер,
	                       |	Задача.Заявка КАК Заявка
	                       |ПОМЕСТИТЬ ВТ_Задача
	                       |ИЗ
	                       |	Справочник.Задача КАК Задача
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	Задача.ТочкаМаршрута,
	                       |	Задача.Заявка
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие КАК Предприятие,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация КАК Организация,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент КАК Контрагент,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежаБух КАК НазначениеПлатежаБух,
	                       |	ВЫБОР
	                       |		КОГДА &ЧастичнаяОплата
	                       |			ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаЧастичнойОплаты
	                       |		ИНАЧЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	                       |	КОНЕЦ КАК СуммаДокумента,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет КАК БанковскийСчет,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента КАК СчетКонтрагента,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПлатежноеПоручение КАК ПлатежноеПоручение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО КАК ЦФО,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник КАК Плательщик,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежа КАК НазначениеПлатежа,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Приложение КАК Приложение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Примечание КАК Примечание,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий КАК Комментарий,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС КАК СтавкаНДС,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации КАК ВидОперации,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК КАК КодБК,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО КАК КодОКАТО,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования КАК ПоказательОснования,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя КАК СтатусСоставителя,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера КАК ПоказательНомера,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты КАК ПоказательДаты,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа КАК ПоказательТипа,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода КАК ПоказательПериода,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект КАК ИнвПроект,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН КАК УИН,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаНДС КАК СуммаНДС,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор КАК Договор,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов КАК СчетВзаиморасчетов,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение КАК Подразделение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение КАК ПодразделениеШапка,
	                       |	ВТ_Задача.Номер КАК Номер,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки КАК УИДСтроки,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НомерСтроки КАК НомерСтроки,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика КАК КПППлательщика,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет КАК ПодотчетИзЗаявки,
	                       |	МАКСИМУМ(сабГрафикПлатежей.ДатаПлатежа) КАК ДатаПлатежа
	                       |ИЗ
	                       |	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Задача КАК ВТ_Задача
	                       |		ПО (ВТ_Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5))
	                       |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = ВТ_Задача.Заявка
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабГрафикПлатежей КАК сабГрафикПлатежей
	                       |		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = сабГрафикПлатежей.Документ
	                       |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО = сабГрафикПлатежей.ЦФО
	                       |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = сабГрафикПлатежей.УИДСтрокиДокумента
	                       |ГДЕ
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Ссылка = &Ссылка "  + ?(ЗапросДляПечати, "", " И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ ") + "
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Организация,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежаБух,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПлатежноеПоручение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НазначениеПлатежа,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Приложение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Примечание,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Комментарий,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтавкаНДС,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВидОперации,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодБК,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КодОКАТО,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательОснования,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатусСоставителя,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательНомера,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательДаты,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательТипа,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ПоказательПериода,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИН,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаНДС,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетВзаиморасчетов,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение,
	                       |	ВТ_Задача.Номер,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.НомерСтроки,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.КПППлательщика,
	                       |	Д_ЗаявкаНаОплатуЗаявкаБезнал.ВыдачаВПодОтчет,
	                       |	ВЫБОР
	                       |		КОГДА &ЧастичнаяОплата
	                       |			ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаЧастичнойОплаты
	                       |		ИНАЧЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
						   |	КОНЕЦ
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	" + ?(ЗапросДляПечати, "НомерСтроки;", "ПлатежноеПоручение;");
	
	Запрос.Текст = ?(ГруппироватьПлатежи, ?(УчитыватьНазначениеПриГруппировке, ЗапросГруппировкаСУчетомОснования, ЗапросаГруппировка), ЗапросБезГруппировки);
	Запрос.УстановитьПараметр("Ссылка", Заявка);
	Запрос.УстановитьПараметр("ЧастичнаяОплата", БПСервер.ИспользуетсяМеханизмЧастичнойОплаты(Заявка.Предприятие));
	Запрос.УстановитьПараметр("ОплатаДо", ОплатаДо);
	
	Возврат Запрос.Выполнить();
	
КонецФункции	

Функция ПолучитьМассивКПППредприятия(БанковскийСчет, Организация) Экспорт
	
	МассивКПП = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Наименование,
	               |	Организации.КПП
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |ГДЕ
	               |	Организации.Ссылка = &Организация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СтруктураПредприятия.Наименование,
	               |	СтруктураПредприятия.КПП
	               |ИЗ
	               |	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	               |ГДЕ
	               |	СтруктураПредприятия.Владелец В
	               |			(ВЫБРАТЬ
	               |				Д_ИсточникППСрезПоследних.Предприятие
	               |			ИЗ
	               |				РегистрСведений.Д_ИсточникПП.СрезПоследних(, БанковскиеСчета = &БанковскийСчет) КАК Д_ИсточникППСрезПоследних)
	               |	И НЕ СтруктураПредприятия.КПП = """"";
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Стру = Новый Структура;
		Стру.Вставить("Наименование", Выборка.Наименование);
		Стру.Вставить("КПП", Выборка.КПП);
		МассивКПП.Добавить(Стру);
	КонецЦикла;
	
	Возврат МассивКПП;
	
КонецФункции	

Процедура АкцептоватьЗаявкиНаФинансирование()	Экспорт 
	
	//Дата1 = Дата("20170201");
	Дата1 = НачалоДня(ТекущаяДата());
	Дата2 = КонецДня((ТекущаяДата() - 86400));
	
	ТекЗапрос = Новый Запрос;
	ТекЗапрос.Текст = 
	"ВЫБРАТЬ
	|	ПлатежноеПоручениеСтрокиЗаявкиНаОплату.Ссылка КАК Ссылка,
	|	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование КАК ЗаявкаНаФинансирование,
	|	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование.Акцептован КАК ЗаявкаНаФинансированиеАкцептован
	|ИЗ
	|	Документ.ПлатежноеПоручение.СтрокиЗаявкиНаОплату КАК ПлатежноеПоручениеСтрокиЗаявкиНаОплату
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	|		ПО ПлатежноеПоручениеСтрокиЗаявкиНаОплату.ДокОснование = Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка
	|ГДЕ
	|	ПлатежноеПоручениеСтрокиЗаявкиНаОплату.Ссылка.Дата МЕЖДУ ДобавитьКДате(&Дата1, ДЕНЬ, -4) И &Дата2
	|	И ПлатежноеПоручениеСтрокиЗаявкиНаОплату.Ссылка.Проведен = ИСТИНА
	|	И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежноеПоручениеСтрокиЗаявкиНаОплату.Ссылка,
	|	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование,
	|	Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование.Акцептован
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлатежноеПоручениеСтрокиЗаявкиНаОплату.Ссылка.Дата";
	
	ТекЗапрос.УстановитьПараметр("Дата1", Дата1);
	ТекЗапрос.УстановитьПараметр("Дата2", Дата2);
	
	РезультатЗапроса = ТекЗапрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		
		Заявка = ВыборкаДетальныеЗаписи.ЗаявкаНаФинансирование.ПолучитьОбъект(); 
		Если Не Заявка.Акцептован Тогда 
			
			Заявка.Акцептован = Истина;
			
			Попытка
				Заявка.Записать();
			Исключение
				ЗаписьЖурналаРегистрации("Акцептовка заявок на финансирование. Ошибка при записи объекта.", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегламентныеЗадания.сабАкцептовать_ЗаявкиНаФинансирование,, ИнформацияОбОшибке().Описание);
			КонецПопытки;	
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВернутьМассивСчетовДоступныхКассиру() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйВидыСубконто.ВидСубконто КАК ВидСубконто,
	               |	УчетныйВидыСубконто.Ссылка КАК Ссылка
	               |ИЗ
	               |	ПланСчетов.Учетный.ВидыСубконто КАК УчетныйВидыСубконто
	               |ГДЕ
	               |	УчетныйВидыСубконто.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Кассы))";
	
	Запрос.УстановитьПараметр("", );
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Выборка;
	
КонецФункции

Функция ПроверкаНомераСчета(НомерСчета) Экспорт
	
	Перем Поз; // счетчик цикла
	
	// Весовые коэффициенты
	Вес="71371371371371371371371";
	КонтрСумма=0;
	Для Поз=1 По 23 Цикл
		Произв=Число(Сред(НомерСчета, Поз, 1))*Число(Сред(Вес, Поз, 1));
		МладшийРазряд=Число(Прав(Строка(Произв),1));
		КонтрСумма=КонтрСумма+МладшийРазряд;
	КонецЦикла;
	Проверка=КонтрСумма/10-Цел(КонтрСумма/10);
	
	Возврат Проверка;
	
КонецФункции // ПроверкаНомераСчета()

Функция ПодобратьСчетПоПлатежномуПоручению(Контрагент, НазначениеПлатежа) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетНаОплатуПокупателю.Ссылка КАК Ссылка,
	               |	СчетНаОплатуПокупателю.Номер КАК Номер
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	               |		ПО СчетНаОплатуПокупателю.Ссылка = ПлатежноеПоручение.Заявка
	               |ГДЕ
	               |	СчетНаОплатуПокупателю.Контрагент = &Контрагент
	               |	И ПлатежноеПоручение.Ссылка ЕСТЬ NULL
	               |	И СчетНаОплатуПокупателю.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЕстьНомер = СтрНайти(НазначениеПлатежа, Строка(Число(Выборка.Номер)));
		Если ЕстьНомер Тогда
			Заявка = Выборка.Ссылка;		
			Возврат Заявка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;


КонецФункции // ()
