
&Вместо("ДобавитьИзФайловойСистемыСРасширениемСинхронно")
Функция УУ_ДобавитьИзФайловойСистемыСРасширениемСинхронно(ПараметрыВыполнения)
	Результат = Новый Структура;
	Результат.Вставить("ФайлДобавлен", Ложь);
	Результат.Вставить("ФайлСсылка",   Неопределено);
	Результат.Вставить("ТекстОшибки",  "");
	
	ФильтрДиалога = ?(ПараметрыВыполнения.Свойство("ФильтрДиалогаВыбора"),
		ПараметрыВыполнения.ФильтрДиалогаВыбора, НСтр("ru = 'Все файлы (*.*)|*.*'"));
		
	Если Не ПараметрыВыполнения.Свойство("ПолноеИмяФайла") Тогда
		// Загрузить из файловой системы с расширением работы с файлами.
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");
		ДиалогВыбораФайла.Фильтр = ФильтрДиалога;
		ДиалогВыбораФайла.Каталог = РаботаСФайламиСлужебныйВызовСервера.РабочийКаталогПапки(ПараметрыВыполнения.ВладелецФайла);
		Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
			Возврат Результат;
		КонецЕсли;
		ПараметрыВыполнения.Вставить("ПолноеИмяФайла", ДиалогВыбораФайла.ПолноеИмяФайла);
	КонецЕсли;
	
	Если Не ПараметрыВыполнения.Свойство("ИмяСоздаваемогоФайла") Тогда
		ПараметрыВыполнения.Вставить("ИмяСоздаваемогоФайла", Неопределено);
	КонецЕсли;
	
	ДобавляемыйФайл = Новый Файл(ПараметрыВыполнения.ПолноеИмяФайла);
	Если Не ДобавляемыйФайл.Существует() Тогда
		ТекстОшибки = НСтр("ru = 'Указанный файл не существует:
			|%1'");
		Результат.ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, 
			ПараметрыВыполнения.ПолноеИмяФайла);
		Возврат Результат;
	КонецЕсли;

	Если ПараметрыВыполнения.Свойство("МаксимальныйРазмер")
		И ПараметрыВыполнения.МаксимальныйРазмер > 0
		И ДобавляемыйФайл.Размер() > ПараметрыВыполнения.МаксимальныйРазмер*1024*1024 Тогда
		
		ТекстОшибки = НСтр("ru = 'Размер файла превышает %1 Мб.'");
		Результат.ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, 
			ПараметрыВыполнения.МаксимальныйРазмер);
		
		Возврат Результат;
		
	КонецЕсли;
	
	ПроверитьВозможностьЗагрузкиФайла(ДобавляемыйФайл);
	
	ОбщиеНастройки = ОбщиеНастройкиРаботыСФайлами();
	ИзвлекатьТекстыФайловНаКлиенте = НЕ ОбщиеНастройки.ИзвлекатьТекстыФайловНаСервере;
	Если ИзвлекатьТекстыФайловНаКлиенте Тогда
		АдресВременногоХранилищаТекста = ИзвлечьТекстВоВременноеХранилище(ДобавляемыйФайл.ПолноеИмя,
			ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Иначе
		АдресВременногоХранилищаТекста = "";
	КонецЕсли;
		
	// Помещение файла во временное хранилище.
	АдресВременногоХранилищаФайла = "";
	
	ПомещаемыеФайлы = Новый Массив;
	Описание = Новый ОписаниеПередаваемогоФайла(ДобавляемыйФайл.ПолноеИмя, "");
	ПомещаемыеФайлы.Добавить(Описание);
	
	ПомещенныеФайлы = Новый Массив;
	ФайлыПомещены = ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Если НЕ ФайлыПомещены Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ПомещенныеФайлы.Количество() = 1 Тогда
		АдресВременногоХранилищаФайла = ПомещенныеФайлы[0].Хранение;
	КонецЕсли;
	
#Если МобильныйКлиент Тогда
	ПредставлениеНаМобильномУстройстве = ДобавляемыйФайл.ПолучитьПредставлениеФайлаБиблиотекиМобильногоУстройства();
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ПредставлениеНаМобильномУстройстве);
	ИмяФайлаБезРасширения = СтрЗаменить(ПредставлениеНаМобильномУстройстве, "." + РасширениеФайла, "");
#Иначе
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ДобавляемыйФайл.Расширение);
	ИмяФайлаБезРасширения = ДобавляемыйФайл.ИмяБезРасширения;
#КонецЕсли
	
	Если ПараметрыВыполнения.ИмяСоздаваемогоФайла <> Неопределено Тогда
		ИмяСоздания = ПараметрыВыполнения.ИмяСоздаваемогоФайла;
	Иначе
		ИмяСоздания = ИмяФайлаБезРасширения;
	КонецЕсли;
	
	// Создание карточки Файла в БД.
	Попытка
		
		Если РаботаСФайламиСлужебныйКлиентПовтИсп.ЭтоСправочникФайлы(ПараметрыВыполнения.ВладелецФайла) Тогда
			
			СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией", ДобавляемыйФайл);
			СведенияОФайле.АдресВременногоХранилищаФайла = АдресВременногоХранилищаФайла;
			СведенияОФайле.АдресВременногоХранилищаТекста = АдресВременногоХранилищаТекста;
			СведенияОФайле.ЗаписатьВИсторию = Истина;
			СведенияОФайле.ИмяБезРасширения = ИмяСоздания;
			СведенияОФайле.РасширениеБезТочки = РасширениеФайла;
			Результат.ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.СоздатьФайлСВерсией(ПараметрыВыполнения.ВладелецФайла, СведенияОФайле);
			
		Иначе
			
			ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
			ПараметрыФайла.ВладелецФайлов = ПараметрыВыполнения.ВладелецФайла;
			ПараметрыФайла.ИмяБезРасширения = ИмяФайлаБезРасширения;
			ПараметрыФайла.РасширениеБезТочки = РасширениеФайла;
			
			Результат.ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла,
				АдресВременногоХранилищаФайла,
				АдресВременногоХранилищаТекста);
				
		КонецЕсли;
		
		Результат.ФайлДобавлен = Истина;
		
	Исключение
		Результат.ТекстОшибки = ОшибкаСозданияНовогоФайла(ИнформацияОбОшибке());
	КонецПопытки;
	
	Если Результат.ТекстОшибки <> "" Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ВладелецФайла", ПараметрыВыполнения.ВладелецФайла);
	ПараметрыОповещения.Вставить("Файл"         , Результат.ФайлСсылка);
	ПараметрыОповещения.Вставить("ЭтоНовый"     , Истина);
	ПараметрыОповещения.Вставить("ФормаВладелецУИД", ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Оповестить("Запись_Файл", ПараметрыОповещения, Результат.ФайлСсылка);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Создание:'"),
		ПолучитьНавигационнуюСсылку(Результат.ФайлСсылка),
		Результат.ФайлСсылка,
		БиблиотекаКартинок.Информация32);
	
	Возврат Результат;
КонецФункции

&Вместо("ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла")
Процедура УУ_ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла(Помещен, Адрес, ВыбранноеИмяФайла, ПараметрыВыполнения)
	Если Не Помещен Тогда
		ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, Неопределено);
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ФайлДобавлен", Ложь);
	Результат.Вставить("ФайлСсылка",   Неопределено);
	Результат.Вставить("ТекстОшибки",  "");
	
	СтруктураПути = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ВыбранноеИмяФайла);
	Если ПустаяСтрока(СтруктураПути.Расширение) Тогда
		ТекстВопроса = НСтр("ru = 'Укажите файл с расширением.'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Повторить, НСтр("ru = 'Выбрать другой файл'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		Обработчик = Новый ОписаниеОповещения("ДобавитьИзФайловойСистемыБезРасширенияПослеОтветаНаВопросПовторить", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыВыполнения.Свойство("МаксимальныйРазмер")
		И ПараметрыВыполнения.МаксимальныйРазмер > 0 Тогда
		
		РазмерФайла = ПолучитьИзВременногоХранилища(Адрес).Размер();
		Если РазмерФайла > ПараметрыВыполнения.МаксимальныйРазмер*1024*1024 Тогда
			
			ТекстОшибки = НСтр("ru = 'Размер файла превышает %1 Мб.'");
			Результат.ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, 
				ПараметрыВыполнения.МаксимальныйРазмер);
			ВернутьРезультатПослеПоказаПредупреждения(ПараметрыВыполнения.ОбработчикРезультата, Результат.ТекстОшибки, Неопределено);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Создание файла в ИБ.
	Попытка
		
		Если РаботаСФайламиСлужебныйКлиентПовтИсп.ЭтоСправочникФайлы(ПараметрыВыполнения.ВладелецФайла) Тогда
			
			СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией");
			СведенияОФайле.АдресВременногоХранилищаФайла = Адрес;
			СведенияОФайле.ИмяБезРасширения = СтруктураПути.ИмяБезРасширения;
			СведенияОФайле.РасширениеБезТочки = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(СтруктураПути.Расширение);
			Результат.ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.СоздатьФайлСВерсией(ПараметрыВыполнения.ВладелецФайла, СведенияОФайле);
			Результат.ФайлДобавлен = Истина;
			
		Иначе
			
			ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
			ПараметрыФайла.ВладелецФайлов = ПараметрыВыполнения.ВладелецФайла;
			ПараметрыФайла.ИмяБезРасширения = СтруктураПути.ИмяБезРасширения;
			ПараметрыФайла.РасширениеБезТочки = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(СтруктураПути.Расширение);
			
			Результат.ФайлСсылка = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла,Адрес);
			Результат.ФайлДобавлен = Истина;
			
		КонецЕсли;
		
	Исключение
		Результат.ТекстОшибки = ОшибкаСозданияНовогоФайла(ИнформацияОбОшибке());
	КонецПопытки;
	Если Результат.ТекстОшибки <> "" Тогда
		ВернутьРезультатПослеПоказаПредупреждения(ПараметрыВыполнения.ОбработчикРезультата, Результат.ТекстОшибки, Неопределено);
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Владелец", ПараметрыВыполнения.ВладелецФайла);
	ПараметрыОповещения.Вставить("Файл",     Результат.ФайлСсылка);
	ПараметрыОповещения.Вставить("ЭтоНовый", Истина);
	ПараметрыОповещения.Вставить("ФормаВладелецУИД", ПараметрыВыполнения.ФормаВладелец.УникальныйИдентификатор);
	Оповестить("Запись_Файл", ПараметрыОповещения, Результат.ФайлСсылка);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Создание:'"),
		ПолучитьНавигационнуюСсылку(Результат.ФайлСсылка),
		Результат.ФайлСсылка,
		БиблиотекаКартинок.Информация32);
	
	Если ПараметрыВыполнения.НеОткрыватьКарточкуПослеСозданияИзФайла <> Истина Тогда
		ПараметрыФормы = Новый Структура("КарточкаОткрытаПослеСозданияФайла", Истина);
		ОписаниеОповещенияОЗакрытии = ОбработчикЗавершения(ПараметрыВыполнения.ОбработчикРезультата);
		РаботаСФайламиКлиент.ОткрытьФормуФайла(Результат.ФайлСсылка,, ПараметрыФормы, ОписаниеОповещенияОЗакрытии);
	Иначе
		ВернутьРезультат(ПараметрыВыполнения.ОбработчикРезультата, Результат);
	КонецЕсли;
КонецПроцедуры
