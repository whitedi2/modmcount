
&После("ОтправкаСерверныхОповещенийКлиентам")
Процедура УУ_ОтправкаСерверныхОповещенийКлиентам() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ФоноваяОбработка = Справочники.сабМониторВнедрения.НайтиПоНаименованию("ФоноваяОбработкаБУДокументов", Истина);
	
	Если ЗначениеЗаполнено(ФоноваяОбработка) И ФоноваяОбработка.Значение Тогда
		
		ДокументыКОбработке = РегистрыСведений.сабОбработкаДокументов.ПолучитьНеобработанныеДокументы(100, Истина);
		Для каждого ТекОбр Из ДокументыКОбработке Цикл
			Попытка
				РегистрыСведений.сабОбработкаДокументов.ОбработатьДокументыБУНаСервере(ТекОбр);	
			Исключение
				НоваяЗапись = РегистрыСведений.сабДокументОшибкаФоновогоПроведения.СоздатьМенеджерЗаписи();
				НоваяЗапись.ДокументБУ = ТекОбр.Ссылка;
				НоваяЗапись.ДатаОбработки = ТекущаяДата();
				НоваяЗапись.Комментарий = ОписаниеОшибки();
				НоваяЗапись.Записать();
			КонецПопытки;
		КонецЦикла;
		
		ДокументыКОбработке = РегистрыСведений.сабОбработкаДокументов.ПолучитьНеобработанныеДокументыРозница(100);
		Для каждого ТекОбр Из ДокументыКОбработке Цикл
			Попытка
				РегистрыСведений.сабОбработкаДокументов.ОбработатьДокументыБУНаСервере(ТекОбр);	
			Исключение
				НоваяЗапись = РегистрыСведений.сабДокументОшибкаФоновогоПроведения.СоздатьМенеджерЗаписи();
				НоваяЗапись.ДокументБУ = ТекОбр.Ссылка;
				НоваяЗапись.ДатаОбработки = ТекущаяДата();
				НоваяЗапись.Комментарий = ОписаниеОшибки();
				НоваяЗапись.Записать();
			КонецПопытки;
		КонецЦикла;
		
		ФоноваяПроверка = Справочники.сабМониторВнедрения.НайтиПоНаименованию("ФоноваяПроверкаБУДокументов", Истина);
		Если ЗначениеЗаполнено(ФоноваяПроверка) И ФоноваяПроверка.Значение Тогда
			ДокументыКОбработке = РегистрыСведений.сабОбработкаДокументов.ПолучитьИзмененныеДокументы(100, Истина);
			
			Для каждого ТекОбр Из ДокументыКОбработке Цикл
				Попытка
					ТекОбъект = ТекОбр.ДокументУУ.ПолучитьОбъект();
					ТекОбъект.ОбработкаЗаполненияСФормы(ТекОбр.ДокументБУ, Неопределено, Истина);
					Если ТекОбъект.Проведен Тогда
						ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);	
					ИначеЕсли ТекОбъект.ПометкаУдаления Тогда
						ТекОбъект.УстановитьПометкуУдаления(Истина);
						ТекОбъект.ПометкаУдаления = Истина;
						ТекОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					Иначе	
						ТекОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					КонецЕсли;
					
					НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ДокументБУ.Установить(ТекОбр.ДокументБУ);
					НаборЗаписей.Отбор.ДокументУУ.Установить(ТекОбр.ДокументУУ);
					НаборЗаписей.Прочитать();
					Для каждого ТекСТрока Из НаборЗаписей Цикл
						ТекСТрока.Модифицирован = Ложь;
					КонецЦикла;
					НаборЗаписей.Записать();
					
				Исключение
					НоваяЗапись = РегистрыСведений.сабДокументОшибкаФоновогоПроведения.СоздатьМенеджерЗаписи();
					НоваяЗапись.ДокументБУ = ТекОбр.ДокументБУ;
					НоваяЗапись.ДатаОбработки = ТекущаяДата();
					НоваяЗапись.Комментарий = ОписаниеОшибки();
					НоваяЗапись.Записать();
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;

	КонецЕсли;
	
	ФоноваяОбработкаУУ = Справочники.сабМониторВнедрения.НайтиПоНаименованию("ФоноваяОбработкаУУДокументов", Истина);
	
	Если ЗначениеЗаполнено(ФоноваяОбработкаУУ) И ФоноваяОбработкаУУ.Значение Тогда
		
		ДокументыУУКОбработке = РегистрыСведений.сабОбработкаДокументов.ПолучитьНеобработанныеДокументыУУ(Неопределено, Истина);
		Для каждого ТекОбр Из ДокументыУУКОбработке Цикл
			Попытка
				РегистрыСведений.сабОбработкаДокументов.ОбработатьДокументыУУНаСервере(ТекОбр);	
			Исключение
				//НоваяЗапись = РегистрыСведений.сабДокументОшибкаФоновогоПроведения.СоздатьМенеджерЗаписи();
				//НоваяЗапись.ДокументБУ = ТекОбр.Ссылка;
				//НоваяЗапись.ДатаОбработки = ТекущаяДата();
				//НоваяЗапись.Комментарий = ОписаниеОшибки();
				//НоваяЗапись.Записать();
			КонецПопытки;
		КонецЦикла;

	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры
