// Копирует в регистр сведений подчиненной валюты всю информацию из регистра
// сведений базовой валюты (период, курс, кратность).
//
// Параметры
//  ВалютаИсточник – Справочники.Валюты – ссылка на базовую валюту, из регистра
//                 сведений которой, будут копироваться данные
//  ВалютаПриемник – Справочники.Валюты – ссылка на зависимую валюту от базовой,
//                 в регистр сведений которой данные будут копироваться
//
Процедура ЗаписатьСведенияДляПодчиненногоРегистра(ВалютаИсточник, ВалютаПриемник) Экспорт
	
	НацВалюта = УЧ_Сервер.НациональнаяВалюта();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ *
	              | ИЗ РегистрСведений.КурсыВалют
	              | ГДЕ Валюта = &ВалютаИсточник";
	Запрос.УстановитьПараметр("ВалютаИсточник", ВалютаИсточник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РегистрКурсыВалют = РегистрыСведений.КурсыВалют;
	НаборКурсов = РегистрКурсыВалют.СоздатьНаборЗаписей();
	
	НаборКурсов.Отбор.Валюта.ВидСравнения  = ВидСравнения.Равно;
	НаборКурсов.Отбор.Валюта.Значение      = ВалютаПриемник;
	НаборКурсов.Отбор.Валюта.Использование = Истина;
	
	НаборКурсов.Отбор.Валюта2.ВидСравнения  = ВидСравнения.Равно;
	НаборКурсов.Отбор.Валюта2.Значение      = ВалютаПриемник;
	НаборКурсов.Отбор.Валюта2.Использование = Истина;
	
	КоэффициентПодчиненногоКурса = ВалютаПриемник.КоэффициентПодчиненногоКурса;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяЗаписьНабораКурсов = НаборКурсов.Добавить();
		НоваяЗаписьНабораКурсов.Валюта    = ВалютаПриемник;
		НоваяЗаписьНабораКурсов.Валюта2    = НацВалюта;
		НоваяЗаписьНабораКурсов.Кратность = Выборка.Кратность;
		НоваяЗаписьНабораКурсов.Курс      = Выборка.Курс + Выборка.Курс*КоэффициентПодчиненногоКурса/100;
		НоваяЗаписьНабораКурсов.Период    = Выборка.Период;
		
	КонецЦикла;
	
	НаборКурсов.Записать();
	
КонецПроцедуры

// Функция возвращает информацию о курсе валюты на основе ссылки на валюту.
// Данные возвращаются в виде структуры.
//
// Параметры:
// ВыбраннаяВалюта - Справочник.Валюты / Ссылка - ссылка на валюту, информацию
//                  о курсе которой необходимо получить
//
// Возвращаемое значение:
// ДанныеКурса   - стуктура, содержащая информацию о последней доступной 
//                 записи курса
//
Функция ЗаполнитьДанныеЛокальногоКурсаДляВалюты(ВыбраннаяВалюта, Валюта2 = Неопределено, ДатаКурса) Экспорт
	
	Если Не ЗначениеЗаполнено(Валюта2) тогда
		Валюта2 = УЧ_Сервер.НациональнаяВалюта();
	КонецЕсли;
	
	ДанныеКурса = Новый Структура("ДатаКурса,ЛокальныйКурс, Курс, Кратность");
	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегКурсы.Период КАК Период,
	               |	ЕСТЬNULL(РегКурсы.ЛокальныйКурс, 0) КАК ЛокальныйКурс,
	               |	ЕСТЬNULL(РегКурсы.Кратность, 0) КАК Кратность,
	               |	ЕСТЬNULL(РегКурсы.Курс, 0) КАК Курс
	               |ИЗ
	               |	РегистрСведений.КурсыВалют.СрезПоследних(
	               |			&ОкончаниеПериодаЗагрузки,
	               |			Валюта = &ВыбраннаяВалюта
	               |				И БазоваяВалюта = &Валюта2) КАК РегКурсы";
	Запрос.УстановитьПараметр("ВыбраннаяВалюта", ВыбраннаяВалюта);
	Запрос.УстановитьПараметр("Валюта2", Валюта2);
	Запрос.УстановитьПараметр("ОкончаниеПериодаЗагрузки", ДатаКурса);
	
	ВыборкаКурс = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаКурс.Количество() Тогда
		ВыборкаКурс.Следующий();
		
		ДанныеКурса.ДатаКурса = ВыборкаКурс.Период;
		ДанныеКурса.ЛокальныйКурс      = ВыборкаКурс.ЛокальныйКурс;
		ДанныеКурса.Курс      = ВыборкаКурс.Курс;
		ДанныеКурса.Кратность = ВыборкаКурс.Кратность;
	Иначе
		ДанныеКурса.ДатаКурса = "";
		ДанныеКурса.ЛокальныйКурс      = 0;
		ДанныеКурса.Курс      = 0;
		ДанныеКурса.Кратность = 0;
	КонецЕсли;
		
	Возврат ДанныеКурса;
	
КонецФункции

// Возвращает таблицу значений - валюты, зависящие от переданной
// в качестве параметра.
// Возвращаемое значение
// ТаблицаЗначений
// колонка "Ссылка" - СправочникСсылка.Валюты
// колонка "КоэффициентПодчиненногоКурса" - число
//
Функция ПолучитьСписокЗависимыхВалют(знач ВалютаБазовая) Экспорт
	
	Запрос	= Новый Запрос;
	Запрос.Текст = "Выбрать Ссылка, КоэффициентПодчиненногоКурса
	                | ИЗ Справочник.Валюты Как СпрВалюты
	                | ГДЕ ПодчиненныйКурсОт = &ВалютаБазовая";
	
	Запрос.УстановитьПараметр("ВалютаБазовая", ВалютаБазовая);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//считаем курс для валюты
Функция СреднийКурс(ДатаОст, Валюта, Организация, Банк, ВидОстатка = "Курс") Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	//|	ВЫБОР
	//|		КОГДА ВалютныеДвиженияОстатки.ВалютнаяСуммаОстаток = 0
	//|			ТОГДА 0
	//|		ИНАЧЕ ВалютныеДвиженияОстатки.СуммаОстаток / ВалютныеДвиженияОстатки.ВалютнаяСуммаОстаток
	//|	КОНЕЦ КАК Курс,
	|	ВалютныеДвиженияОстатки.ВалютнаяСуммаОстаток,
	|	ВалютныеДвиженияОстатки.СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ВалютныеДвижения.Остатки(
	|			&ДатаОст,
	|			Организации = &Юрлицо
	|				И Валюта = &Валюта
	|				И Банки = &Банк) КАК ВалютныеДвиженияОстатки";
	
	Запрос.УстановитьПараметр("ДатаОст", ДатаОст);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Юрлицо", Организация);
	Запрос.УстановитьПараметр("Банк", Банк);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтруктураОстатка = Новый Структура("Курс, ВалютнаяСумма, Сумма", ?(Выборка.ВалютнаяСуммаОстаток = 0,0,Выборка.СуммаОстаток / Выборка.ВалютнаяСуммаОстаток), Выборка.ВалютнаяСуммаОстаток, Выборка.СуммаОстаток);
		Возврат СтруктураОстатка;
	Иначе
		Возврат Новый Структура("Курс, ВалютнаяСумма, Сумма", 0, 0, 0);
	КонецЕсли;
	
	
КонецФункции // ()

Функция ПолучитьЛокальныйКурсВалютыНаДату(ВыбраннаяВалюта,ДатаКурса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	РегКурсы.Период,
	|	РегКурсы.Валюта,
	|	РегКурсы.ЛокальныйКурс КАК Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК РегКурсы
	|ГДЕ
	|	РегКурсы.Валюта = &ВыбраннаяВалюта
	|	И РегКурсы.Период = &ДатаКурса";
	Запрос.УстановитьПараметр("ВыбраннаяВалюта", ВыбраннаяВалюта);
	Запрос.УстановитьПараметр("ДатаКурса", НачалоДня(ДатаКурса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Курс;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

//Получает кросс курс валют
//Валюта1 - основная валюта
//Валюта2 - валюта, за которую покупается Валюта1
Функция ПолучитьКроссКурс(Валюта1, Валюта2, Дата = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&Период,
	|			Валюта = &Валюта1
	|				И БазоваяВалюта = &Валюта2) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Валюта1", Валюта1);
	Запрос.УстановитьПараметр("Валюта2", Валюта2);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Курс;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции
