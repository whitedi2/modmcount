Функция ПолучитьСвойстваСчета(Знач Счет) Экспорт

	Если ТипЗнч(Счет) <> Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Счет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
	
	ДанныеСчета = Новый Структура;
	ДанныеСчета.Вставить("Ссылка"                         , Счет.Ссылка);
	ДанныеСчета.Вставить("Наименование"                   , Счет.Наименование);
	ДанныеСчета.Вставить("Код"                            , Счет.Код);
	ДанныеСчета.Вставить("Родитель"                       , Счет.Родитель);
	ДанныеСчета.Вставить("Наименование"                   , Счет.Наименование);
	ДанныеСчета.Вставить("Вид"                            , Счет.Вид);
	ДанныеСчета.Вставить("Забалансовый"                   , Счет.Забалансовый);
	ДанныеСчета.Вставить("ЗапретитьИспользоватьВПроводках", Счет.ЗапретитьИспользоватьВПроводках);
	ДанныеСчета.Вставить("Валютный"                       , Счет.Валютный);
	ДанныеСчета.Вставить("Количественный"                 , Счет.Количественный);
	ДанныеСчета.Вставить("УчетПоПодразделениям"           , Счет.УчетПоПодразделениям);
	ДанныеСчета.Вставить("НалоговыйУчет"                  , Счет.НалоговыйУчет);
	ДанныеСчета.Вставить("КоличествоСубконто"             , Счет.ВидыСубконто.Количество());

	МаксКоличествоСубконто = ПолучитьМаксКоличествоСубконто();
	Для Индекс = 1 По МаксКоличествоСубконто Цикл
		Если Индекс <= Счет.ВидыСубконто.Количество() Тогда
			ДанныеСчета.Вставить("ВидСубконто" + Индекс,                   Счет.ВидыСубконто[Индекс - 1].ВидСубконто);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Наименование",  Строка(Счет.ВидыСубконто[Индекс - 1].ВидСубконто));
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТипЗначения",   Счет.ВидыСубконто[Индекс - 1].ВидСубконто.ТипЗначения);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Суммовой",      Счет.ВидыСубконто[Индекс - 1].Суммовой);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТолькоОбороты", Счет.ВидыСубконто[Индекс - 1].ТолькоОбороты);
		Иначе
			ДанныеСчета.Вставить("ВидСубконто" + Индекс,                   Неопределено);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Наименование",  Неопределено);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТипЗначения",   Неопределено);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "Суммовой",      Ложь);
			ДанныеСчета.Вставить("ВидСубконто" + Индекс + "ТолькоОбороты", Ложь);
		КонецЕсли;
	КонецЦикла;

	Возврат ДанныеСчета;

КонецФункции

Функция ПолучитьМаксКоличествоСубконто() Экспорт

	Возврат Метаданные.ПланыСчетов.Хозрасчетный.МаксКоличествоСубконто;

КонецФункции

Функция ВедетсяУчетПоСкладам(Счет) Экспорт

	СвойстваСчета = ПолучитьСвойстваСчета(Счет);

	УчетПоСкладам = СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады
		ИЛИ СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;

	Возврат УчетПоСкладам;

КонецФункции 

Функция ВедетсяСуммовойУчетПоСкладам(Счет) Экспорт

	СвойстваСчета      = ПолучитьСвойстваСчета(Счет);

	Если СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады Тогда
		Возврат СвойстваСчета.ВидСубконто1Суммовой;
	ИначеЕсли СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады Тогда
		Возврат СвойстваСчета.ВидСубконто2Суммовой;
	ИначеЕсли СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады Тогда
		Возврат СвойстваСчета.ВидСубконто3Суммовой;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция НаСчетеВедетсяПартионныйУчет(Счет) Экспорт

	СвойстваСчета  = ПолучитьСвойстваСчета(Счет);

	ПартионныйУчет = СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии
		ИЛИ СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии;

	Возврат ПартионныйУчет;

КонецФункции 

Функция КомиссионныйТовар(Счет) Экспорт

	Комиссионный = ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный")
		И Счет <> ПланыСчетов.Хозрасчетный.ПустаяСсылка()
		И Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ТоварыПринятыеНаКомиссию);

	Возврат Комиссионный;

КонецФункции

Функция СчетОтноситсяКДеятельностиЕНВД(Счет) Экспорт

	ЭтоСчетЕНВД = СчетаВыручкиЕНВД().Найти(Счет) <> Неопределено
		ИЛИ СчетаРасходовЕНВД().Найти(Счет) <> Неопределено;

	Возврат ЭтоСчетЕНВД;

КонецФункции 

Функция СчетаВыручкиЕНВД() Экспорт

	Возврат УправленческийУчетПереопределяемый.СчетаВыручкиЕНВД();

КонецФункции

Функция СчетаРасходовЕНВД() Экспорт

	Возврат УправленческийУчетПереопределяемый.СчетаРасходовЕНВД();

КонецФункции

Функция МассивСчетовПереоценкиУСН() Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Валютный
	|		И Хозрасчетный.Ссылка В ИЕРАРХИИ 
	|		(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса), 
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), 
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета), 
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпециальныеСчета), 
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереводыВПути_))";
	
	ТаблицаСчетов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаСчетов.ВыгрузитьКолонку("Счет");

КонецФункции

Функция НаСчетеВедетсяУчетПоДокументамРасчетов(Счет) Экспорт

	СвойстваСчета = ПолучитьСвойстваСчета(Счет);

	УчетПоДокументамРасчетов = СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами
		ИЛИ СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами;

	Возврат УчетПоДокументамРасчетов;

КонецФункции

Функция НаСчетеВедетсяУчетПоКонтрагентам(Счет) Экспорт

	СвойстваСчета = ПолучитьСвойстваСчета(Счет);

	УчетПоКонтрагентам = СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты
		ИЛИ СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;

	Возврат УчетПоКонтрагентам;

КонецФункции 

Функция НаСчетеВедетсяУчетПоДоговорам(Счет) Экспорт

	СвойстваСчета = ПолучитьСвойстваСчета(Счет);

	УчетПоДоговорам = СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры
		ИЛИ СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;

	Возврат УчетПоДоговорам;

КонецФункции

Функция НаСчетеВедетсяУчетПоНоменклатурнымГруппам(Счет) Экспорт
	
	СвойстваСчета = ПолучитьСвойстваСчета(Счет);

	УчетПоНомГруппам = СвойстваСчета.ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы
		ИЛИ СвойстваСчета.ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы
		ИЛИ СвойстваСчета.ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;

	Возврат УчетПоНомГруппам;

КонецФункции

Функция СчетВИерархии(Счет, Эталон) Экспорт

	Если ЗначениеЗаполнено(Счет) Тогда
		Возврат Счет = Эталон ИЛИ Счет.ПринадлежитЭлементу(Эталон);
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

// Определяет вид актива для РБП.
//
// Параметры:
//  СчетСписания   - ПланСчетовСсылка - ссылка на счет, по которому определяется 
//                  вид актива (обязательный параметр).
//  
Функция ОпределитьВидАктиваРБП(СчетСписания) Экспорт
	
	Если Не ЗначениеЗаполнено(СчетСписания) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет01)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ОсновныеСредства)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&Счет08)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы)
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетЗатрат)
		|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.Запасы)
		|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ВидАктива
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка = &ТекущийСчет";

	Запрос.УстановитьПараметр("ТекущийСчет", СчетСписания);
	Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	Запрос.УстановитьПараметр("Счет08", ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.БракВПроизводстве);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);

	Запрос.УстановитьПараметр("СчетЗатрат", Массив);

	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();

	Возврат Результат.ВидАктива;

КонецФункции

// Определяет счет учета материалов, переданных в переработку
Функция СчетУчетаМатериалыПереданныеВПереработку(Знач СчетВыбранныйПользователем = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(СчетВыбранныйПользователем)
		И СчетВыбранныйПользователем.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку) Тогда
		Возврат СчетВыбранныйПользователем;
	Иначе
		Возврат ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку;
	КонецЕсли;
	
КонецФункции

// Определяет счет учета материалов, принятых в переработку и затем использованных
Функция СчетУчетаМатериалыПринятыеВПереработкуВПроизводстве(Знач СчетВыбранныйПользователем = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(СчетВыбранныйПользователем) Тогда
		Возврат СчетВыбранныйПользователем;
	Иначе
		Возврат ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;
	КонецЕсли;
	
КонецФункции
