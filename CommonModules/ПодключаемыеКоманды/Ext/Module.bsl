
&После("ПриСозданииНаСервере")
Процедура УУ_ПриСозданииНаСервере(Форма, Знач ПараметрыРазмещения)
	Параметры = Форма.Параметры;	
	Если Параметры.Свойство("ДокументУУ") Тогда
		ДобавляемыеРеквизиты	= Новый Массив;
		
		Массив = Новый Массив;
		Массив.Добавить(ТипЗнч(Параметры.ДокументУУ));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		
		Реквизит_ДокументУУ = Новый РеквизитФормы("ДокументУУ",	ОписаниеТиповС,	, "Документ УУ");
		ДобавляемыеРеквизиты.Добавить(Реквизит_ДокументУУ);
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		Форма.ДокументУУ = Параметры.ДокументУУ; 
		
	КонецЕсли;
	
	сабСписаниеСРасчетногоСчетаПриСозданииНаСервере(Форма, ПараметрыРазмещения);
	
	ПерсональныеРеквизитыДляОбъектовБУ(Форма, ПараметрыРазмещения);
	
	ИгнорироватьБлокАвтообновления = Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("сабИгнорироватьБлокировкуАвтообновленийДокументов");
	Если Не ИгнорироватьБлокАвтообновления Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"Объект") Тогда	 
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"АвтообновленияЗаблокированы") Тогда
				Если Форма.Элементы.Найти("АвтообновленияЗаблокированы") = Неопределено Тогда
					Если Форма.Элементы.Найти("ГруппаКомментарийОтветственный") <> Неопределено Тогда
						НовыйЭлемент = Форма.Элементы.Добавить("АвтообновленияЗаблокированы", Тип("ПолеФормы"),Форма.Элементы.ГруппаКомментарийОтветственный);
						НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
						НовыйЭлемент.ВидФлажка = ВидФлажка.Выключатель;
						НовыйЭлемент.ПутьКДанным = "Объект.АвтообновленияЗаблокированы";
					ИначеЕсли Форма.Элементы.Найти("ГруппаПодвал") <> Неопределено Тогда
						НовыйЭлемент = Форма.Элементы.Добавить("АвтообновленияЗаблокированы", Тип("ПолеФормы"),Форма.Элементы.ГруппаПодвал);
						НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
						НовыйЭлемент.ВидФлажка = ВидФлажка.Выключатель;
						НовыйЭлемент.ПутьКДанным = "Объект.АвтообновленияЗаблокированы";
					Иначе
						НовыйЭлемент = Форма.Элементы.Добавить("АвтообновленияЗаблокированы", Тип("ПолеФормы"));
						НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
						НовыйЭлемент.ВидФлажка = ВидФлажка.Выключатель;
						НовыйЭлемент.ПутьКДанным = "Объект.АвтообновленияЗаблокированы";
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"Объект") Тогда	 
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"ВидСкладаДляВыгрузки") Тогда
			Если Форма.Элементы.Найти("ВидСкладаДляВыгрузки") = Неопределено Тогда
				НовыйЭлемент = Форма.Элементы.Добавить("ВидСкладаДляВыгрузки", Тип("ПолеФормы"));
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
				НовыйЭлемент.КнопкаВыпадающегоСписка = Истина;
				НовыйЭлемент.СписокВыбора.Добавить("Основной");
				НовыйЭлемент.СписокВыбора.Добавить("Склад ответственного хранения");
				НовыйЭлемент.СписокВыбора.Добавить("Товар в пути");
				НовыйЭлемент.СписокВыбора.Добавить("Брак");
				НовыйЭлемент.СписокВыбора.Добавить("Резерв");
				НовыйЭлемент.РедактированиеТекста = Ложь; 
				НовыйЭлемент.КнопкаОчистки = Истина;
				НовыйЭлемент.ПутьКДанным = "Объект.ВидСкладаДляВыгрузки";
			КонецЕсли; 
		КонецЕсли;	
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"АдресСкладаДляВыгрузки") Тогда
			Если Форма.Элементы.Найти("АдресСкладаДляВыгрузки") = Неопределено Тогда
				НовыйЭлемент = Форма.Элементы.Добавить("АдресСкладаДляВыгрузки", Тип("ПолеФормы"));
				НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
				НовыйЭлемент.КнопкаОчистки = Истина;
				НовыйЭлемент.ПутьКДанным = "Объект.АдресСкладаДляВыгрузки";
			КонецЕсли; 
		КонецЕсли;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"ЛогинДляСмарт") Тогда
			Если Форма.Элементы.Найти("ЛогинДляСмарт") = Неопределено Тогда 
				Если Форма.Элементы.Найти("СтраницаДополнительныеРеквизиты") = Неопределено Тогда
					НовыйЭлемент = Форма.Элементы.Добавить("ЛогинДляСмарт", Тип("ПолеФормы"));
					НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
					НовыйЭлемент.КнопкаОчистки = Истина;
					НовыйЭлемент.ПутьКДанным = "Объект.ЛогинДляСмарт";
				Иначе
					Если Форма.Элементы.Найти("Описание") = Неопределено Тогда
						НовыйЭлемент = Форма.Элементы.Добавить("ЛогинДляСмарт", Тип("ПолеФормы"),Форма.Элементы.СтраницаДополнительныеРеквизиты);
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
						НовыйЭлемент.КнопкаОчистки = Истина;
						НовыйЭлемент.ПутьКДанным = "Объект.ЛогинДляСмарт";
					Иначе
						НовыйЭлемент = Форма.Элементы.Вставить("ЛогинДляСмарт", Тип("ПолеФормы"),Форма.Элементы.СтраницаДополнительныеРеквизиты,Форма.Элементы.Описание);
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
						НовыйЭлемент.КнопкаОчистки = Истина;
						НовыйЭлемент.ПутьКДанным = "Объект.ЛогинДляСмарт";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"ПарольДляСмарт") Тогда
			Если Форма.Элементы.Найти("ПарольДляСмарт") = Неопределено Тогда 
				Если Форма.Элементы.Найти("СтраницаДополнительныеРеквизиты") = Неопределено Тогда
					НовыйЭлемент = Форма.Элементы.Добавить("ПарольДляСмарт", Тип("ПолеФормы"));
					НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
					НовыйЭлемент.КнопкаОчистки = Истина;
					НовыйЭлемент.ПутьКДанным = "Объект.ПарольДляСмарт";
				Иначе
					Если Форма.Элементы.Найти("Описание") = Неопределено Тогда
						НовыйЭлемент = Форма.Элементы.Добавить("ПарольДляСмарт", Тип("ПолеФормы"),Форма.Элементы.СтраницаДополнительныеРеквизиты);
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
						НовыйЭлемент.КнопкаОчистки = Истина;
						НовыйЭлемент.ПутьКДанным = "Объект.ПарольДляСмарт";
					Иначе
						НовыйЭлемент = Форма.Элементы.Вставить("ПарольДляСмарт", Тип("ПолеФормы"),Форма.Элементы.СтраницаДополнительныеРеквизиты,Форма.Элементы.Описание);
						НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
						НовыйЭлемент.КнопкаОчистки = Истина;
						НовыйЭлемент.ПутьКДанным = "Объект.ПарольДляСмарт";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли; 
	
	Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора" Тогда
		Если Форма.Параметры.Свойство("СопоставлениеИзПриемкиВыборНоменклатурыБезГруппДляФормыСопоставления") Тогда
			Если Параметры.СопоставлениеИзПриемкиВыборНоменклатурыБезГруппДляФормыСопоставления Тогда
				Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Список;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Элементы.Найти("ГруппаДокументУУ") = Неопределено Тогда
		
		Группа = Форма.Элементы.Добавить(
		"ГруппаДокументУУ",
		Тип("ГруппаФормы"),
		Форма);
		
		Группа.Заголовок = "Документ-основание УУ";
		Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		Группа.Поведение  = ПоведениеОбычнойГруппы.Свертываемая;
		Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		Группа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		//НовыйЭлемент = Форма.Элементы.Добавить("ДокументБУ", Тип("ПолеФормы"), Группа);
		//НовыйЭлемент.ПутьКДанным                  = "ДокументБУ";
		//НовыйЭлемент.Вид                          = ВидПоляФормы.ПолеНадписи;
		//НовыйЭлемент.Гиперссылка 				  = Истина;
		
		//Форма.ДокументБУ = ТекЗапись.ДокументБУ;
		//
		//НовыйЭлемент = Форма.Элементы.Добавить("АвтообновленияЗаблокированы", Тип("ПолеФормы"), Группа);
		//НовыйЭлемент.ПутьКДанным                  = "АвтообновленияЗаблокированы";
		//НовыйЭлемент.Вид                          = ВидПоляФормы.ПолеФлажка;
		//НовыйЭлемент.ВидФлажка                    = ВидФлажка.Выключатель;
		//НовыйЭлемент.ПоложениеЗаголовка 		  = ПоложениеЗаголовкаЭлементаФормы.Право;
		//
		//Форма.АвтообновленияЗаблокированы = ТекЗапись.АвтообновленияЗаблокированы;
		
	КонецЕсли;
	
	Группа = Форма.Элементы.Найти("ГруппаДокументУУ");
	
	Попытка
		РеквизитФормыПоИмени = Форма["Объект"];
		//Если ТипЗнч(Форма["Объект"].Ссылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		сабОбщегоНазначенияБУХ.ДобавитьИсториюИзмененийУУДока(Форма,Группа);
		//КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры 

Процедура сабСписаниеСРасчетногоСчетаПриСозданииНаСервере(Форма, Знач ПараметрыРазмещения)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"Объект") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"Ссылка") И ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
			Группа = Форма.Элементы.Добавить(
			Форма,
			Тип("ГруппаФормы"),
			Форма.Элементы.ГруппаПодвал);
			
			Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
			Группа.Поведение  = ПоведениеОбычнойГруппы.Свертываемая;
			Группа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
			Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
			
			Группа.Заголовок = "Реквизиты (Управленка):";
			
			ПолеВвода = Форма.Элементы.Добавить("ДокументОснование", Тип("ПолеФормы"), Группа); 
			ПолеВвода.Заголовок = "Документ основание";
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПутьКДанным = "Объект.ДокументОснование";
			ПолеВвода.ТолькоПросмотр = Не РольДоступна("ОФК") И Не РольДоступна("ПолныеПрава");
			
			//заявка на форму
			Если ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ЗначениеЗаполнено(Форма.Объект.ДокументОснование.Заявка) тогда
				
				ТекЗаявка = Форма.Объект.ДокументОснование.Заявка;
				
				ДобавляемыеРеквизиты = Новый Массив;
				
				Массив = Новый Массив;
				Массив.Добавить(ТипЗнч(ТекЗаявка));
				ОписаниеТиповС = Новый ОписаниеТипов(Массив);
				
				Если Не БюджетныйНаСервере.ЕстьСвойствоОбъекта(Форма, "сабЗаявка") Тогда
					сабЗаявка = Новый РеквизитФормы("сабЗаявка",	ОписаниеТиповС,	, "Заявка на оплату");
					ДобавляемыеРеквизиты.Добавить(сабЗаявка);
					Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
				КонецЕсли;	
				
				ПолеВвода = Форма.Элементы.Добавить("сабЗаявка", Тип("ПолеФормы"), Группа); 
				ПолеВвода.Заголовок = "Заявка на оплату";
				ПолеВвода.Вид = ВидПоляФормы.ПолеНадписи;
				ПолеВвода.ПутьКДанным = "сабЗаявка";
				ПолеВвода.ГиперСсылка = Истина;
				ПолеВвода.ТолькоПросмотр = Истина;
				
				Форма.сабЗаявка = ТекЗаявка;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерсональныеРеквизитыДляОбъектовБУ(Форма, Знач ПараметрыРазмещения)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"Объект") Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект,"Ссылка") И 
			(ТипЗнч(Форма.Объект.Ссылка) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Или ТипЗнч(Форма.Объект.Ссылка) = Тип("СправочникСсылка.Организации")) Тогда
			
			Группа = Форма.Элементы.Добавить(
			"УпрГруппа",
			Тип("ГруппаФормы"),
			Форма);
			
			Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			Группа.Поведение  = ПоведениеОбычнойГруппы.Свертываемая;
			Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			Группа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
			Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
			Группа.Заголовок = "Реквизиты (Управленка):";
			
			ПолеВвода = Форма.Элементы.Добавить("сабПодразделение", Тип("ПолеФормы"), Группа);
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.ПутьКДанным = "Объект.сабПодразделение";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
        

