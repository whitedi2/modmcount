
Процедура СкрытьПодразделения(Форма, Элемент = Неопределено, ИмяРеквизитаПредприятие = "Предприятие") Экспорт
	
	Если Лев(Форма.ИмяФормы, 5) = "Отчет" Тогда
		Объект = Форма.Отчет;
	ИначеЕсли Форма.Параметры.Свойство("Ключ") Тогда //попробуем так отловить форму документа
		Объект = Форма.Объект;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Объект.Свойство(ИмяРеквизитаПредприятие) Тогда
		ТекПП = Объект[ИмяРеквизитаПредприятие];
	ИначеЕсли Объект.Свойство("Организация") Тогда	
		ТекПП = Объект.Организация;
	Иначе
		Возврат;
	КонецЕсли;
	
	УчетПоПодразделениям = БюджетныйНаСервере.ВернутьРеквизит(ТекПП, "УчетПоПодразделениям");
	Если УчетПоПодразделениям = Неопределено ИЛИ УчетПоПодразделениям = NULL Тогда
		УчетПоПодразделениям = Ложь;
	КонецЕсли; 
	
	ЭтоДокументДвиженияТМЦИОпцияВыключена = Ложь;
	Если Объект.Свойство("Ссылка") Тогда
		ЭтоДокументДвиженияТМЦИОпцияВыключена = ЭтоДокументДвиженияТМЦИОпцияВыключена(Объект.Ссылка);
	КонецЕсли;
	
	Если Объект.Свойство("Ссылка") И НЕ УчетПоПодразделениям Тогда
		Если БюджетныйНаСервере.ДокументПодразделениеИстина(Объект.Ссылка, ТекПП) Тогда
			Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабУчетПоПодразделениям", Истина));
		Иначе
			Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабУчетПоПодразделениям", ТекПП));
		КонецЕсли;
	Иначе
		//для подразделеений использование функциональных опций (новое д1 10.06.16)
		Если ЭтоДокументДвиженияТМЦИОпцияВыключена Тогда
			Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабУчетПоПодразделениям", ПредопределенноеЗначение("Справочник.Предприятия.ПустаяСсылка")));
		Иначе	
			Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабУчетПоПодразделениям", ТекПП));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоДокументДвиженияТМЦИОпцияВыключена(Ссылка) Экспорт
	МассивТипов =  Новый Массив;
	//МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ПоступлениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ПереводТМЦ"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ПеремещениеМатериаловВПроизводство"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ПеремещениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_Реализация")); //??лишнее, т.к. продажи по подразделениям
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_СписаниеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ОприходованиеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.УЧ_ВозвратТоваровПоставщику"));
	
	Возврат НЕ МассивТипов.Найти(ТипЗнч(Ссылка)) = Неопределено И НЕ БюджетныйНаСервере.УчетТМЦПоПодразделениям(Ссылка.Предприятие); 
КонецФункции // ()


Процедура СкрытьОрганизацию(Форма) Экспорт

	Если Лев(Форма.ИмяФормы, 5) = "Отчет" Тогда
		Объект = Форма.Отчет;
	ИначеЕсли Форма.Параметры.Свойство("Ключ") Тогда //попробуем так отловить форму документа
		Объект = Форма.Объект;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Объект.Свойство("Предприятие") Тогда
		ТекПП = Объект.Предприятие;
	ИначеЕсли Объект.Свойство("Организация") Тогда	
		ТекПП = Объект.Организация;
	Иначе
		Возврат;
	КонецЕсли;
	
	
	

	Если ТекПП.Пустая() Тогда
		Возврат;	
	КонецЕсли;
	
	УчетПоОрганизациям = БюджетныйНаСервере.ВернутьРеквизит(ТекПП, "УчетПоОрганизациям");
	
	//Если НЕ УчетПоОрганизациям Тогда
	//	УчетПоПодразделениям = БюджетныйНаСервере.ДокументПодразделениеИстина(ОбъектСсылка.Ссылка, ТекПП);
	//КонецЕсли;
	
	Для каждого ТекЭлемент Из Форма.Элементы Цикл
		Если ТекЭлемент.Имя = "Организация" Тогда
			ТекЭлемент.Видимость = УчетПоОрганизациям;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СкрытьПредприятие(Форма, ТекущийПользователь) Экспорт
	
	Форма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ПользовательСистемное", ТекущийПользователь));
	
КонецПроцедуры

Функция ЭтоБуква(Символ) Экспорт
	
	Код = КодСимвола(Символ);
	
	Если (Код<=47) ИЛИ (Код>=58 И Код<=64) ИЛИ (Код>=91 И Код<=96)  ИЛИ (Код>=123 И Код<=126) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Процедура СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, ИмяТабличнойЧасти = Неопределено, НомерСтроки = Неопределено, Поле = Неопределено, Отказ = Ложь) Экспорт
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	
	Если ИмяТабличнойЧасти <> Неопределено Тогда
		Сообщение.Поле = ИмяТабличнойЧасти + "[" + (НомерСтроки - 1) + "]." + Поле;
	ИначеЕсли ЗначениеЗаполнено(Поле) Тогда
		Сообщение.Поле = Поле;
	КонецЕсли;
	
	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Сообщить();
	
	Отказ = Истина;
	
КонецПроцедуры // СообщитьОбОшибке()

Функция ПолучитьСтрокуИзМассиваПодстрок(Массив, Разделитель = ",") Экспорт
	
	// возвращаемое значение функции
	Результат = "";
	
	Для Каждого Элемент ИЗ Массив Цикл
		
		Подстрока = ?(ТипЗнч(Элемент) = Тип("Строка"), Элемент, Строка(Элемент));
		
		РазделительПодстрок = ?(ПустаяСтрока(Результат), "", Разделитель);
		
		Результат = Результат + РазделительПодстрок + Подстрока;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


#Область ИсторияОткрытияОтчетов

&НаСервере
Процедура ИсторияИспользованияОтчетовОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	ЗаписатьИсториюОтчетовНаСервере(Источник);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИсториюОтчетовНаСервере(Источник)
	ДатаФормированияОтчета = ТекущаяДата();
	НаименованиеОтчета = Строка(Источник);
	НаименованиеОтчета = Прав(НаименованиеОтчета,СтрДлина(НаименованиеОтчета) - 14);
	НаборЗаписей = РегистрыСведений.ИсторияИспользованияОтчетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаФормированияОтчета);
	НаборЗаписей.Отбор.Пользователь.Установить(ПараметрыСеанса.ТекущийПользователь);
	НаборЗаписей.Отбор.Отчет.Установить(НаименованиеОтчета);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Отчет = НаименованиеОтчета;
	НоваяЗапись.Период = ДатаФормированияОтчета;
	НоваяЗапись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	НаборЗаписей.Записать(Ложь);
КонецПроцедуры
#КонецОбласти 