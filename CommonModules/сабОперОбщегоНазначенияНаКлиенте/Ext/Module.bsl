
Процедура ОбработатьЗаполнениеПоШтрихкодуНаКлиенте(Форма, ИмяТЧ, ИмяРеквизитаНоменклатуры, ИмяРеквизитаКоличества, Штрихкод) Экспорт
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		Номенклатура = сабОперОбщегоНазначения.ПодобратНоменклатуруПоШК(Штрихкод);
		Текданные = Форма.Элементы[ИмяТЧ].ТекущиеДанные;
		Если Не Текданные = Неопределено И НЕ ЗначениеЗаполнено(Текданные[ИмяРеквизитаНоменклатуры]) Тогда
			Если ТипЗнч(Номенклатура) = Тип("Структура") Тогда
				ЗаполнитьЗначенияСвойств(ТекДанные, Номенклатура);
				ТекДанные[ИмяРеквизитаНоменклатуры] = Номенклатура.Номенклатура;
			Иначе
				Текданные[ИмяРеквизитаНоменклатуры] = Номенклатура;
			КонецЕсли; 
		Иначе
			Если ТипЗнч(Номенклатура) = Тип("Структура") Тогда				
				НайденныеПозиции = Форма.Объект[ИмяТЧ].НайтиСтроки(Новый Структура(ИмяРеквизитаНоменклатуры, Номенклатура.Номенклатура));
				Если НайденныеПозиции.Количество() Тогда
					НайденныеПозиции[0][ИмяРеквизитаКоличества] = НайденныеПозиции[0][ИмяРеквизитаКоличества] + Номенклатура.Количество;
					Форма.Элементы[ИмяТЧ].ТекущаяСтрока = НайденныеПозиции[0].ПолучитьИдентификатор();
				Иначе
					Форма.Элементы[ИмяТЧ].ДобавитьСтроку();
					Форма.Элементы[ИмяТЧ].ТекущиеДанные[ИмяРеквизитаНоменклатуры] = Номенклатура.Номенклатура;
					Форма.Элементы[ИмяТЧ].ТекущиеДанные[ИмяРеквизитаКоличества] = Номенклатура.Количество;
				КонецЕсли;
			Иначе
				НайденныеПозиции = Форма.Объект[ИмяТЧ].НайтиСтроки(Новый Структура(ИмяРеквизитаНоменклатуры, Номенклатура));
				Если НайденныеПозиции.Количество() Тогда
					Форма.Элементы[ИмяТЧ].ТекущаяСтрока = НайденныеПозиции[0].ПолучитьИдентификатор();
				Иначе
					Форма.Элементы[ИмяТЧ].ДобавитьСтроку();
					Форма.Элементы[ИмяТЧ].ТекущиеДанные[ИмяРеквизитаНоменклатуры] = Номенклатура;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПроверкаСозданияНаОснованииНаКлиенте(Объект, ИмяРеквизита = "Комментарий") Экспорт

	Если СтрНайти(Объект[ИмяРеквизита], "##УжеСоздан") Тогда
		Сообщить("На основании заказа уже был создан документ " + Сред(Объект[ИмяРеквизита], 12) + "!");
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Если СтрНайти(Объект[ИмяРеквизита], "##НеПроведен") Тогда
		Сообщить("Документ-основание не проведен!");
		Отказ = Истина;
		Возврат Отказ;
	КонецЕсли;
	
	Отказ = Ложь;
	Возврат Отказ;
	
КонецФункции

#Область СинхронизацияСерий

Процедура СинхронизироватьНомерСтрокиРеализацииДляТЧСерии(ТекущиеДанные,Товары,СерииНоменклатуры,ИмяНоменклатура = "Номенклатура") Экспорт
	
	Если ТекущиеДанные.ИсходныйНомерСтрокиДляСерии <> 0 И ТекущиеДанные.ИсходныйНомерСтрокиДляСерии <> ТекущиеДанные.НомерСтроки Тогда
		Для Каждого СтрокаТЧ Из Товары Цикл
			//Если ЭтоСписаниеТоваров Тогда
			//	СтруктураПоискаСерии = Новый Структура("Номенклатура, НомерСтрокиРеализации",СтрокаТЧ.Товар, СтрокаТЧ.ИсходныйНомерСтрокиДляСерии);
			//Иначе
				СтруктураПоискаСерии = Новый Структура("Номенклатура, НомерСтрокиРеализации",СтрокаТЧ[ИмяНоменклатура], СтрокаТЧ.ИсходныйНомерСтрокиДляСерии);
			//КонецЕсли;	
			НайденныеСтрокаСерии = СерииНоменклатуры.НайтиСтроки(СтруктураПоискаСерии); 
			
			Для Каждого НайденнаяСтрока Из НайденныеСтрокаСерии Цикл
				НайденнаяСтрока.НомерСтрокиРеализации = СтрокаТЧ.НомерСтроки;	
			КонецЦикла;
			СтрокаТЧ.ИсходныйНомерСтрокиДляСерии = СтрокаТЧ.НомерСтроки; 
		КонецЦикла; 
		СерииНоменклатуры.Сортировать("НомерСтрокиРеализации");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНомерИсходнойСтрокиДляСерии(ТекущиеДанные) Экспорт
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ИсходныйНомерСтрокиДляСерии) Тогда
		ТекущиеДанные.ИсходныйНомерСтрокиДляСерии = ТекущиеДанные.НомерСтроки;
	КонецЕсли; 
	
КонецПроцедуры 

Процедура ЗаполнитьТЧСерииПриИзмененииСерииВОсновнойТЧ(ТекущиеДанные,СерииНоменклатуры, ИмяНоменклатура = "Номенклатура") Экспорт
	
	//Если ЭтоСписаниеТоваров Тогда
	//	ПараметрыОтбораСерииНоменклатуры = Новый Структура("Номенклатура,НомерСтрокиРеализации",ТекущиеДанные.Товар,ТекущиеДанные.НомерСтроки);
	//Иначе
		ПараметрыОтбораСерииНоменклатуры = Новый Структура("Номенклатура,НомерСтрокиРеализации",ТекущиеДанные[ИмяНоменклатура],ТекущиеДанные.НомерСтроки);
	//КонецЕсли;	
	МассивНайденныеСтрокиСерииНоменклатуры = СерииНоменклатуры.НайтиСтроки(ПараметрыОтбораСерииНоменклатуры);
	ИндексДляДобавления = Неопределено;
	Для каждого НайденнаяСтрокаСерииНоменклатуры Из МассивНайденныеСтрокиСерииНоменклатуры Цикл
		Если ИндексДляДобавления = Неопределено Тогда
			ИндексДляДобавления = СерииНоменклатуры.Индекс(НайденнаяСтрокаСерииНоменклатуры);
		КонецЕсли;
		СерииНоменклатуры.Удалить(НайденнаяСтрокаСерииНоменклатуры);
	КонецЦикла;
	Если ИндексДляДобавления = Неопределено Тогда
		ИндексДляДобавления = 0;
	КонецЕсли;
	НоваяСтрокаСерииНоменклатуры = СерииНоменклатуры.Вставить(ИндексДляДобавления);
	//Если ЭтоСписаниеТоваров Тогда
	//	НоваяСтрокаСерииНоменклатуры.Номенклатура = ТекущиеДанные.Товар;
	//Иначе
		НоваяСтрокаСерииНоменклатуры.Номенклатура = ТекущиеДанные[ИмяНоменклатура];
	//КонецЕсли;
	НоваяСтрокаСерииНоменклатуры.Количество = ТекущиеДанные.Количество;
	НоваяСтрокаСерииНоменклатуры.НомерСтрокиРеализации = ТекущиеДанные.НомерСтроки;
	НоваяСтрокаСерииНоменклатуры.СерияНоменклатуры = ТекущиеДанные.СерияНоменклатуры;
	НоваяСтрокаСерииНоменклатуры.ДатаПроизводства = сабОбщегоНазначенияБУХ.ПолучитьДатуПроизводстваДляСерииНоменклатуры(ТекущиеДанные.СерияНоменклатуры);
	СерииНоменклатуры.Сортировать("НомерСтрокиРеализации"); 
	
КонецПроцедуры

#КонецОбласти