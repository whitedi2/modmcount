
// Функция нижнего уровня - вызывается для версии файла
Функция Распознать(ТекущаяВерсия, РасширениеФайлаРезультата, ОписаниеОшибки, РаспознанныйТекст, ПутьКФайлу) Экспорт

	ТипПлатформыСервера = ОбщегоНазначенияПовтИсп.ТипПлатформыСервера();
	Если ТипПлатформыСервера <> ТипПлатформы.Windows_x86 И ТипПлатформыСервера <> ТипПлатформы.Windows_x86_64 Тогда
		Возврат "ПоставленВОчередь";  // распознавание работает только под Windows
	КонецЕсли;	
	
	//Если ТекущаяВерсия.СтатусРаспознаванияТекста <> Перечисления.СтатусыРаспознаванияТекста.НужноРаспознать И ТекущаяВерсия.СтатусРаспознаванияТекста <> Перечисления.СтатусыРаспознаванияТекста.ПустаяСсылка() Тогда
	//	Возврат "Ошибка"; // не нужно распознавать - не должны были нас тут вызвать
	//КонецЕсли;	
	
	//ИмяФайлаСПутем = "";
	//ТипХраненияФайла = ТекущаяВерсия.ТипХраненияФайла;
	//
	ИмяФайлаСПутем = Константы.ПутьКМестуХраненияФайлов.Получить() + "\" + ТекущаяВерсия.Наименование;
	//
	//Если ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
	//	
	//	ХранилищеФайла = РаботаСФайламиВызовСервера.ПолучитьХранилищеФайлаИзИнформационнойБазы(ТекущаяВерсия);
	//	ДвоичныеДанныеФайла = ХранилищеФайла.Получить();
	//	
	//	// Сохраним файл из БД на диск
	//	ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);
	//	
	//Иначе // тут файл на диске
	
	//Если НЕ ТекущаяВерсия.Том.Пустая() Тогда
	//ИмяФайлаСПутемВТоме = ФайловыеФункции.ПолныйПутьТома(ТекущаяВерсия.Том) + ТекущаяВерсия.ПутьКФайлу; 
	//КопироватьФайл(ИмяФайлаСПутемВТоме, ИмяФайлаСПутем);
	Файл = Новый Файл(ИмяФайлаСПутем);
	Файл.УстановитьТолькоЧтение(Ложь);
	//КонецЕсли;
		
	//КонецЕсли;
	
	ИмяФайлаРезультата = ПолучитьИмяВременногоФайла(РасширениеФайлаРезультата);
	ФорматРезультата = 2; // txt
	Если РасширениеФайлаРезультата = "html" Тогда
		ФорматРезультата = 8192; // html
	КонецЕсли;	
	Кодировка = 2; // ANSI
	
	ПриложениеЗапускаCuneiForm = ПолучитьОбщийМакет("ПриложениеЗапускаCuneiForm");
	ИмяEXEФайла = ПолучитьИмяВременногоФайла("exe");
	ПриложениеЗапускаCuneiForm.Записать(ИмяEXEФайла);
	
	КомпонентаЗагрузкиCuneiForm = Неопределено;
	Попытка
		КодВозврата = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаЗагрузкиCuneiForm", "CuneiFormLoaderAddIn", ТипВнешнейКомпоненты.Native);
		КомпонентаЗагрузкиCuneiForm = Новый("AddIn.CuneiFormLoaderAddIn.AddInNativeExtension");	
	Исключение
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить компоненту загрузки CuneiForm'");
		Возврат "Ошибка";
	КонецПопытки;
	
	ВремяОжиданияРаспознавания = 30; // секунды
	ПутьКПрограммеКонвертацииPDF = РаботаСФайлами.ПолучитьПутьКПрограммеКонвертацииPDF();
	
	ЯзыкРаспознаванияЧисло = 7;
	Если ЗначениеЗаполнено(ТекущаяВерсия.ЯзыкРаспознавания) Тогда
		ЯзыкРаспознаванияЧисло = Число(ТекущаяВерсия.ЯзыкРаспознавания);
	КонецЕсли;
	
	КодВозврата = КомпонентаЗагрузкиCuneiForm.РаспознатьКартинку(ИмяEXEФайла, ИмяФайлаСПутем, ИмяФайлаРезультата, 
		ЯзыкРаспознаванияЧисло, ВремяОжиданияРаспознавания, ПутьКПрограммеКонвертацииPDF);
	
	//УдалитьФайлы(ИмяФайлаСПутем);
	
	Если КодВозврата = Истина Тогда
		
		Текст = "";
		
		Если РасширениеФайлаРезультата = "html" Тогда
			
			Текст = РаботаСФайламиСлужебный.ИзвлечьТекст(ИмяФайлаРезультата);
			
		Иначе
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.Прочитать(ИмяФайлаРезультата); // если в формате TXT
			Текст = ТекстовыйДокумент.ПолучитьТекст();
		КонецЕсли;	
		
		ПутьКФайлу = ИмяФайлаРезультата;
		РаспознанныйТекст = Текст;
		Возврат "Успешно";
	КонецЕсли;	
	
	УдалитьФайлы(ИмяФайлаРезультата);
	
	ОписаниеОшибки = НСтр("ru = 'Не удалось распознать картинку. Возможно она не содержит текста для распознавания. '");
	
	Если ТипЗнч(КодВозврата) = Тип("Строка") Тогда
		ОписаниеОшибки = ОписаниеОшибки + Символы.ПС + Символы.ПС + НСтр("ru = 'Описание ошибки: '") + Строка(КодВозврата);
	КонецЕсли;
	
	Возврат "Ошибка";
	
КонецФункции // РаспознатьФайл()
