
&Вместо("ПодготовитьДанныеШапкиСчетаФактуры1137")
Функция УУ_ПодготовитьДанныеШапкиСчетаФактуры1137(ВыборкаСФ, СтрокаТаблицыРеквизиты, ПлатежноРасчетныеДокументы, ДополнитьДаннымиУПД, ФормированиеЭД)

	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыРеквизиты);
	
	СведенияОЮрФизЛицах = Новый Соответствие; // для хранения ранее полученных сведений
	
	ДанныеШапки = Новый Структура;
	
	// Номер и дата
	Если ВыборкаСФ.УдалитьПрефиксыИзНомера Тогда
		Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаСФ.Номер, Истина, Ложь);
	Иначе
		Номер = ВыборкаСФ.Номер;
	КонецЕсли;
	
	// Дополняем номер индексом обособленного подразделения (при необходимости)
	Если ЗначениеЗаполнено(Реквизиты.ЦифровойИндексОбособленногоПодразделения)
		И ВыборкаСФ.ЭтоСчетФактураВыданный
		И ЗначениеЗаполнено(ВыборкаСФ.ВидСчетаФактуры) Тогда
		Номер = Номер + "/" + Реквизиты.ЦифровойИндексОбособленногоПодразделения;
	КонецЕсли;
	
	Если УчетНДСПереопределяемый.ЭтоСчетФактураНаАванс(ВыборкаСФ.ВидСчетаФактуры) Тогда
		// Методически неверно оформлять УПД в случае получения предварительной оплаты.
		ДополнитьДаннымиУПД = Ложь;
	КонецЕсли;
	
	ДанныеШапки.Вставить("Номер", СокрЛП(Номер));
	ДанныеШапки.Вставить("Дата", ВыборкаСФ.Дата);
	
	// Номер и дата исправления
	ДанныеШапки.Вставить("Исправление", ВыборкаСФ.Исправление);
	Если ВыборкаСФ.Исправление Тогда
		ДанныеШапки.Вставить("НомерИсправления", ВыборкаСФ.НомерИсправления);
		ДанныеШапки.Вставить("ДатаИсправления", ВыборкаСФ.ДатаИсправления);
	Иначе 	
		ДанныеШапки.Вставить("НомерИсправления", "--");
		ДанныеШапки.Вставить("ДатаИсправления", "--");
	КонецЕсли;

	ДанныеШапки.Вставить("Поставщик", Реквизиты.Поставщик);

	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Организация, ВыборкаСФ.ДатаСведений);
	СведенияОЮрФизЛицах.Вставить(Реквизиты.Организация, СведенияОбОрганизации);
	
	Если Реквизиты.СводныйСФКомиссияПоЗакупке Тогда
		
		СведенияОПоставщике = СведенияОбОрганизации;
		
		ДанныеШапки.Вставить("ПредставлениеПоставщика", Реквизиты.Поставщик);
		
		ДанныеШапки.Вставить("АдресПоставщика", Реквизиты.АдресПоставщика);
		
		ДанныеШапки.Вставить("ИННКППпоставщика", Реквизиты.ИННКППпоставщика);
		
	Иначе	
		
		СведенияОПоставщике = СведенияОЮрФизЛицах[Реквизиты.Поставщик];
		Если СведенияОПоставщике = Неопределено Тогда
			СведенияОПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Поставщик, ВыборкаСФ.ДатаСведений);
			СведенияОЮрФизЛицах.Вставить(Реквизиты.Поставщик, СведенияОПоставщике);
		КонецЕсли;
		
		ДанныеШапки.Вставить("ПредставлениеПоставщика", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,"));
		
		// Адрес продавца
		ДанныеШапки.Вставить("АдресПоставщика", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,"));
		
	КонецЕсли;
	
	ДанныеШапки.Вставить("ИННпоставщика", Реквизиты.ИННпоставщика);
	
	Если НЕ ВыборкаСФ.ЭтоСчетФактураВыданный И ЗначениеЗаполнено(ВыборкаСФ.КППСчетаФактуры) Тогда
		КППпоставщика = ВыборкаСФ.КППСчетаФактуры;
	ИначеЕсли ВыборкаСФ.ЭтоСчетФактураВыданный
		И ЗначениеЗаполнено(ВыборкаСФ.КПППродавца) Тогда 
		КППпоставщика = ВыборкаСФ.КПППродавца;
	Иначе
		КПППоставщика = УчетНДСБП.КППНаДату(Реквизиты.ОбособленноеПодразделениеПоставщика, ВыборкаСФ.ДатаСведений);
	КонецЕсли;
	
	ДанныеШапки.Вставить("КППпоставщика", КППпоставщика);
	
	// Наименование покупателя
	ДанныеШапки.Вставить("Покупатель", Реквизиты.Покупатель);
	
	Если Реквизиты.СводныйСФКомиссияПоПродаже Тогда
		
		ДанныеШапки.Вставить("ПредставлениеПокупателя", Реквизиты.Покупатель);
		
		ДанныеШапки.Вставить("АдресПокупателя", Реквизиты.АдресПокупателя);
		
		ДанныеШапки.Вставить("ИННКПППокупателя", Реквизиты.ИННКППпокупателя);

	Иначе
		
		СведенияОПокупателе = СведенияОЮрФизЛицах[Реквизиты.Покупатель];
		Если СведенияОПокупателе = Неопределено Тогда
			СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Покупатель, ВыборкаСФ.ДатаСведений);
			СведенияОЮрФизЛицах.Вставить(Реквизиты.Покупатель, СведенияОПокупателе);
		КонецЕсли;
		
		ДанныеШапки.Вставить("ПредставлениеПокупателя", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "НаименованиеДляПечатныхФорм,"));
		
		// Адрес покупателя
		ДанныеШапки.Вставить("АдресПокупателя", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,"));
			
	КонецЕсли;
	
	ДанныеШапки.Вставить("ИННпокупателя", Реквизиты.ИННпокупателя);
	
	Если ВыборкаСФ.ЭтоСчетФактураВыданный И ЗначениеЗаполнено(ВыборкаСФ.КППСчетаФактуры) Тогда
		КППпокупателя = ВыборкаСФ.КППСчетаФактуры;
	Иначе
		КППпокупателя = УчетНДСБП.КППНаДату(Реквизиты.ОбособленноеПодразделениеПокупателя, ВыборкаСФ.ДатаСведений);
	КонецЕсли;
	
	ДанныеШапки.Вставить("КППпокупателя", КППпокупателя);
	
	// Грузоотправитель
	Если ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента
		ИЛИ ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку Тогда
		Грузоотправитель = Неопределено;
		ПредставлениеГрузоотправителя = "--";
	ИначеЕсли Реквизиты.ЕстьТовары 
		И ЗначениеЗаполнено(Реквизиты.Грузоотправитель) Тогда
		Если ТипЗнч(Реквизиты.Грузоотправитель) = Тип("Строка") Тогда
			ПредставлениеГрузоотправителя = Реквизиты.Грузоотправитель;
		ИначеЕсли ТипЗнч(Реквизиты.Грузоотправитель) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			СведенияОГрузоотправителе = СведенияОЮрФизЛицах[Реквизиты.Грузоотправитель];
			Если СведенияОГрузоотправителе = Неопределено Тогда
				СведенияОГрузоотправителе = УчетНДСПереопределяемый.СведенияОПодразделенииОрганизации(Реквизиты.Грузоотправитель);
				СведенияОЮрФизЛицах.Вставить(Реквизиты.Грузоотправитель, СведенияОГрузоотправителе);
			КонецЕсли;
			ПредставлениеГрузоотправителя = СведенияОГрузоотправителе;
		Иначе
			СведенияОГрузоотправителе = СведенияОЮрФизЛицах[Реквизиты.Грузоотправитель];
			Если СведенияОГрузоотправителе = Неопределено Тогда
				СведенияОГрузоотправителе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Грузоотправитель, ВыборкаСФ.ДатаСведений);
				СведенияОЮрФизЛицах.Вставить(Реквизиты.Грузоотправитель, СведенияОГрузоотправителе);
			КонецЕсли;
			ПредставлениеГрузоотправителя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОГрузоотправителе, "НаименованиеДляПечатныхФорм,ПочтовыйАдрес,");
		КонецЕсли;
		Грузоотправитель = Реквизиты.Грузоотправитель;	
	Иначе
		Грузоотправитель = Неопределено;
		ПредставлениеГрузоотправителя = "--";
	КонецЕсли;
	ДанныеШапки.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеШапки.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);

	// Грузополучатель
	Если ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
		Грузополучатель = Неопределено;
		ПредставлениеГрузополучателя = "--";
	ИначеЕсли Реквизиты.ЕстьТовары 
		И ЗначениеЗаполнено(Реквизиты.Грузополучатель) Тогда
		Если ТипЗнч(Реквизиты.Грузополучатель) = Тип("Строка") Тогда
			ПредставлениеГрузополучателя = Реквизиты.Грузополучатель;
		Иначе
			СведенияОГрузополучателе = СведенияОЮрФизЛицах[Реквизиты.Грузополучатель];
			Если СведенияОГрузополучателе = Неопределено Тогда
				СведенияОГрузополучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Грузополучатель, ВыборкаСФ.ДатаСведений);
				СведенияОЮрФизЛицах.Вставить(Реквизиты.Грузополучатель, СведенияОГрузополучателе);
			КонецЕсли;
			Если Реквизиты.АдресДоставки <> "" Тогда 
				СведенияОГрузополучателе.ПочтовыйАдрес = Реквизиты.АдресДоставки;
			КонецЕсли;
			ПредставлениеГрузополучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм,ПочтовыйАдрес,");
		КонецЕсли;
		Грузополучатель = Реквизиты.Грузополучатель;
	Иначе
		Грузополучатель = Неопределено;
		ПредставлениеГрузополучателя = "--";
	КонецЕсли;
	ДанныеШапки.Вставить("Грузополучатель", Грузополучатель);
	ДанныеШапки.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
	
	// Платежно-расчетный документ
	ПоДокументу = "";
	Если ПлатежноРасчетныеДокументы <> Неопределено Тогда
		ТаблицаПлатежныхДокументов = ПлатежноРасчетныеДокументы.СкопироватьКолонки();
		Если ТипЗнч(ПлатежноРасчетныеДокументы) = Тип("ТаблицаЗначений") Тогда
			Отбор = Новый Структура("СчетФактура", ВыборкаСФ.СчетФактура);
			НайденныеСтроки = ПлатежноРасчетныеДокументы.НайтиСтроки(Отбор);
			РазделятьПоКонтрагентам = ТаблицаПлатежныхДокументов.Колонки.Найти("Контрагент") <> Неопределено;
			ПредыдущийКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
			Для каждого ДокументОплаты Из НайденныеСтроки Цикл
				Контрагент = ?(РазделятьПоКонтрагентам, ДокументОплаты.Контрагент, Справочники.Контрагенты.ПустаяСсылка());
				Если ЗначениеЗаполнено(ДокументОплаты.НомерДокумента)
					И ЗначениеЗаполнено(ДокументОплаты.ДатаДокумента) Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаПлатежныхДокументов.Добавить(), ДокументОплаты);
					ПоДокументу = ПоДокументу + ?(Не ДокументОплаты.НомерСтроки = 1 И Контрагент <> ПредыдущийКонтрагент, ";", ?(ПустаяСтрока(ПоДокументу), "",", ")) +
						ДокументОплаты.НомерДокумента + " от " + Формат(ДокументОплаты.ДатаДокумента, "ДЛФ='Д'") + " г.";
				КонецЕсли;
				ПредыдущийКонтрагент = Контрагент;	
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(ПоДокументу) Тогда
		Если ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ВыборкаСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
			ПоДокументу = "-- от --";
		Иначе
			ПоДокументу = "   от   ";
		КонецЕсли;
	КонецЕсли;
	ДанныеШапки.Вставить("ТаблицаПлатежныхДокументов", ТаблицаПлатежныхДокументов);
	ДанныеШапки.Вставить("ПоДокументу", ПоДокументу);
	
	Валюта = ""; 
	ВалютаКод = "";
	ВалютаКурс = 0; 
	ВалютаКратность = 0;
	ВалютаНаименование = "";
	
	// Валюта
	Если ЗначениеЗаполнено(Реквизиты.Валюта) Тогда
		РеквизитыВалюты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Реквизиты.Валюта, "НаименованиеПолное,Код");
		СтруктураКурса  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Реквизиты.Валюта, Реквизиты.ДатаОснования);
		
		Валюта             = РеквизитыВалюты.НаименованиеПолное + ", " + РеквизитыВалюты.Код;
		ВалютаНаименование = РеквизитыВалюты.НаименованиеПолное;
		ВалютаКод          = РеквизитыВалюты.Код;
		ВалютаКурс         = СтруктураКурса.Курс;
		ВалютаКратность    = СтруктураКурса.Кратность;
	КонецЕсли;
	
	ДанныеШапки.Вставить("Валюта", Реквизиты.Валюта);
	ДанныеШапки.Вставить("ВалютаНаименование", Валюта);
	ДанныеШапки.Вставить("ВалютаНаименованиеПолное", ВалютаНаименование);
	ДанныеШапки.Вставить("ВалютаКод", ВалютаКод);
	ДанныеШапки.Вставить("ВалютаКурс", ВалютаКурс);
	ДанныеШапки.Вставить("ВалютаКратность", ВалютаКратность);
	ДанныеШапки.Вставить("ИдентификаторГосКонтракта", ВыборкаСФ.ИдентификаторГосКонтракта);
	
	Если Реквизиты.Свойство("НДСИсчисляетсяНалоговымАгентом") Тогда
		НДСИсчисляетсяНалоговымАгентом = Реквизиты.НДСИсчисляетсяНалоговымАгентом = Истина
			И УчетНДС.ВедетсяУчетНДСПоФЗ335(ВыборкаСФ.Дата);
	Иначе
		НДСИсчисляетсяНалоговымАгентом = Ложь;
	КонецЕсли;
	
	ДанныеШапки.Вставить("НДСИсчисляетсяНалоговымАгентом", НДСИсчисляетсяНалоговымАгентом);
	
	// Сведения о комиссионере
	Если ВыборкаСФ.ЭтоСчетФактураВыданный 
		И (ТипЗнч(Реквизиты.Поставщик) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(Реквизиты.Поставщик) = Тип("Строка"))
		И ТипЗнч(Реквизиты.Покупатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Комиссионер = Реквизиты.Организация;
	ИначеЕсли НЕ ВыборкаСФ.ЭтоСчетФактураВыданный 
		И ВыборкаСФ.Контрагент <> Реквизиты.Поставщик
		И ВыборкаСФ.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку Тогда
		Комиссионер = ВыборкаСФ.Контрагент;
	Иначе
		Комиссионер = Неопределено;
	КонецЕсли;
	
	СведенияОКомиссионере = Неопределено;
	Если ЗначениеЗаполнено(Комиссионер) Тогда
		ДанныеШапки.Вставить("Комиссионер", Комиссионер);
		
		СведенияОКомиссионере = СведенияОЮрФизЛицах[Комиссионер];
		Если СведенияОКомиссионере = Неопределено Тогда
			СведенияОКомиссионере = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Комиссионер, ВыборкаСФ.ДатаСведений);
			СведенияОЮрФизЛицах.Вставить(Комиссионер, СведенияОКомиссионере);
		КонецЕсли;
		КППКомиссионера = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
		ДанныеШапки.Вставить("ПредставлениеКомиссионера", "Составлен комиссионером (агентом): " 
			+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "НаименованиеДляПечатныхФорм,")
			+ ", " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "ЮридическийАдрес,")
			+ ", ИНН/КПП: " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь)
			+ ?(ЗначениеЗаполнено(КППКомиссионера), "/" + КППКомиссионера, ""));
	
	Иначе
		ДанныеШапки.Вставить("Комиссионер", Неопределено);
		ДанныеШапки.Вставить("ПредставлениеКомиссионера", "");
	КонецЕсли;
	
	// Данные комиссионера на стороне комитентов 
	Если ВыборкаСФ.ЭтоСчетФактураВыданный Тогда

		Если Реквизиты.Свойство("Комиссионер") И ЗначениеЗаполнено(Реквизиты.Комиссионер) Тогда
		
			СведенияОКомиссионере = СведенияОЮрФизЛицах[Реквизиты.Комиссионер];
			Если СведенияОКомиссионере = Неопределено Тогда
				СведенияОКомиссионере = 
					БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Комиссионер, ВыборкаСФ.ДатаСведений);
				СведенияОЮрФизЛицах.Вставить(Реквизиты.Комиссионер, СведенияОКомиссионере);
			КонецЕсли;
		
			КППКомиссионера = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
			ПредставлениеКомиссионера =
				ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "НаименованиеДляПечатныхФорм,");
			ПредставлениеКомиссионераНаПечать = ПредставлениеКомиссионера
			+ ", ИНН/КПП: " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь)
			+ ?(ЗначениеЗаполнено(КППКомиссионера), "/" + КППКомиссионера, "");
			
			Если Реквизиты.Свойство("СчетаФактурыКомиссионера") И ЗначениеЗаполнено(Реквизиты.СчетаФактурыКомиссионера) Тогда

				ДанныеШапки.ПредставлениеКомиссионера = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Выставлен комиссионеру %1, по счетам-фактурам %2'"),
					ПредставлениеКомиссионераНаПечать, Реквизиты.СчетаФактурыКомиссионера);
			
			Иначе
				ДанныеШапки.ПредставлениеКомиссионера = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Выставлен комиссионеру %1, по счету-фактуре № %2 от %3'"),
					ПредставлениеКомиссионераНаПечать, Реквизиты.НомерСФКомиссионера,
						Формат(Реквизиты.ДатаСФКоммиссионера, "ДФ=dd.MM.yyyy"));
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

	// Данные для подвала
	Если ВыборкаСФ.ЭтоСчетФактураВыданный Тогда
		
		ОрганизацияЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация);
		
		// Получаем за один вызов данные по всем необходимым физлицам.
		СписокФизЛиц = Новый Массив;
		Если (ОрганизацияЭтоЮрЛицо ИЛИ ВедетсяУчетНДСПоФЗ81(ВыборкаСФ.Дата))
		   И ЗначениеЗаполнено(ВыборкаСФ.Руководитель) Тогда
			СписокФизЛиц.Добавить(ВыборкаСФ.Руководитель);
		КонецЕсли;
		Если ОрганизацияЭтоЮрЛицо
		   И ЗначениеЗаполнено(ВыборкаСФ.ГлавныйБухгалтер) Тогда
			СписокФизЛиц.Добавить(ВыборкаСФ.ГлавныйБухгалтер);
		КонецЕсли;
		Если ДополнитьДаннымиУПД Тогда
			Если Реквизиты.ЕстьТовары Тогда
				Кладовщик = ?(ЗначениеЗаполнено(Реквизиты.ОтпускПроизвел), Реквизиты.ОтпускПроизвел,
					ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Реквизиты.Склад, Реквизиты.ДатаОснования));
				Если ЗначениеЗаполнено(Кладовщик) Тогда
					СписокФизЛиц.Добавить(Кладовщик);
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Реквизиты.Исполнитель) Тогда
				СписокФизЛиц.Добавить(Реквизиты.Исполнитель);
			КонецЕсли;
			Если ЗначениеЗаполнено(Реквизиты.ОтветственныйЗаОформление) Тогда
				СписокФизЛиц.Добавить(Реквизиты.ОтветственныйЗаОформление);
			КонецЕсли; 
		КонецЕсли;
		Если СписокФизЛиц.Количество() > 0 Тогда
			ДанныеОтветственныхЛиц = УчетЗарплаты.ДанныеФизическихЛиц(Реквизиты.Организация, СписокФизЛиц, ВыборкаСФ.ДатаСведений, Истина, Истина);
		Иначе
			ДанныеОтветственныхЛиц = Новый ТаблицаЗначений;
			ДанныеОтветственныхЛиц.Колонки.Добавить("ФизическоеЛицо");
		КонецЕсли;
		
		Если ОрганизацияЭтоЮрЛицо Тогда
			
			Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Реквизиты.Организация, ВыборкаСФ.Дата, Реквизиты.Подразделение);
			// Должность руководителя в организации.
			ДанныеШапки.Вставить("ДолжностьРуководителя", Руководители.РуководительДолжностьПредставление);
			Если ЗначениеЗаполнено(ВыборкаСФ.Руководитель) Тогда
				ДанныеФизЛица = ДанныеОтветственныхЛиц.Найти(ВыборкаСФ.Руководитель, "ФизическоеЛицо");
				ПредставлениеФизЛица = ?(ДанныеФизЛица = Неопределено, "", ДанныеФизЛица.Представление);
				ФизическоеЛицо       = ?(ДанныеФизЛица = Неопределено, Справочники.ФизическиеЛица.ПустаяСсылка(), ДанныеФизЛица.ФизическоеЛицо);
				СтруктураФИО         = ?(ДанныеФизЛица = Неопределено, Новый Структура("Фамилия, Имя, Отчество, Представление"), СтруктураФИО(ДанныеФизЛица));
				
				ДанныеШапки.Вставить("ФИОРуководителя", ПредставлениеФизЛица);
				ДанныеШапки.Вставить("Руководитель",    ФизическоеЛицо);
				ДанныеШапки.Вставить("РуководительФИО", СтруктураФИО);
				
				// Должность уполномоченного лица обладающего правом подписи за руководителя.
				Если Руководители.Руководитель = ВыборкаСФ.Руководитель 
					И НЕ ЗначениеЗаполнено(ДанныеФизЛица.Должность) Тогда
					ДанныеШапки.Вставить("РуководительДолжность", Руководители.РуководительДолжностьПредставление);
				Иначе
					ДанныеШапки.Вставить("РуководительДолжность", ДанныеФизЛица.Должность);
				КонецЕсли;
			Иначе 
				ДанныеШапки.Вставить("ФИОРуководителя", Руководители.РуководительПредставление);
				ДанныеШапки.Вставить("Руководитель",    Руководители.Руководитель);
				ДанныеШапки.Вставить("РуководительФИО", Руководители.РуководительФИО);
				ДанныеШапки.Вставить("РуководительДолжность", Руководители.РуководительДолжностьПредставление);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаСФ.ГлавныйБухгалтер) Тогда
				ДанныеФизЛица = ДанныеОтветственныхЛиц.Найти(ВыборкаСФ.ГлавныйБухгалтер, "ФизическоеЛицо");
				ПредставлениеФизЛица = ?(ДанныеФизЛица = Неопределено, "", ДанныеФизЛица.Представление);
				ФизическоеЛицо       = ?(ДанныеФизЛица = Неопределено, Справочники.ФизическиеЛица.ПустаяСсылка(), ДанныеФизЛица.ФизическоеЛицо);
				СтруктураФИО         = ?(ДанныеФизЛица = Неопределено, Новый Структура("Фамилия, Имя, Отчество, Представление"), СтруктураФИО(ДанныеФизЛица));
				
				ДанныеШапки.Вставить("ФИОГлавногоБухгалтера", ПредставлениеФизЛица);
				ДанныеШапки.Вставить("ГлавныйБухгалтер",      ФизическоеЛицо);
				ДанныеШапки.Вставить("ГлавныйБухгалтерФИО",   СтруктураФИО);
			Иначе 
				ДанныеШапки.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтерПредставление);
				ДанныеШапки.Вставить("ГлавныйБухгалтер",      Руководители.ГлавныйБухгалтер);
				ДанныеШапки.Вставить("ГлавныйБухгалтерФИО",   Руководители.ГлавныйБухгалтерФИО);
			КонецЕсли;
		
		Иначе
			ДанныеШапки.Вставить("ДолжностьРуководителя", НСтр("ru = 'Индивидуальный предприниматель'"));
			ДанныеШапки.Вставить("Свидетельство",         ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "Свидетельство,"));
			ДанныеШапки.Вставить("Руководитель",          ВыборкаСФ.Руководитель);
			
			Если ВедетсяУчетНДСПоФЗ81(ВыборкаСФ.Дата) 
			   И ЗначениеЗаполнено(ВыборкаСФ.Руководитель) Тогда
				ДанныеФизЛица = ДанныеОтветственныхЛиц.Найти(ВыборкаСФ.Руководитель, "ФизическоеЛицо");
				СтруктураФИО         = ?(ДанныеФизЛица = Неопределено, Новый Структура("Фамилия, Имя, Отчество, Представление"), СтруктураФИО(ДанныеФизЛица));
				ДанныеШапки.Вставить("ФИОПБОЮЛ", ?(ДанныеФизЛица = Неопределено, "", ДанныеФизЛица.Представление));
				ДанныеШапки.Вставить("ПБОЮЛФИО", СтруктураФИО);
				
				// Должность уполномоченного лица обладающего правом подписи за руководителя.
				Если СведенияОбОрганизации.ИндивидуальныйПредприниматель = ВыборкаСФ.Руководитель 
					И НЕ ЗначениеЗаполнено(ДанныеФизЛица.Должность) Тогда
					ДанныеШапки.Вставить("РуководительДолжность", ДанныеШапки.ДолжностьРуководителя);
				Иначе
					ДанныеШапки.Вставить("РуководительДолжность", ДанныеФизЛица.Должность);
				КонецЕсли;
			Иначе
				СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(СведенияОбОрганизации.ФИОФизлица);
				СтруктураФИО.Вставить("Представление", СведенияОбОрганизации.ФИОФизлица);
				
				ДанныеШапки.Вставить("ФИОПБОЮЛ", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ФамилияИнициалыФизлица,"));
				ДанныеШапки.Вставить("ПБОЮЛФИО", СтруктураФИО);
				ДанныеШапки.Вставить("РуководительДолжность", ДанныеШапки.ДолжностьРуководителя);
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Если НЕ ТипЗнч(Реквизиты.Поставщик) = Тип("Строка")
			И НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Поставщик) Тогда
			ДанныеШапки.Вставить("Свидетельство",         ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,"));
		КонецЕсли;
	КонецЕсли;
	
	Если Реквизиты.Свойство("БезвозмезднаяПередача") Тогда
		Если Реквизиты.БезвозмезднаяПередача И НЕ ЗначениеЗаполнено(Реквизиты.Покупатель) Тогда
			ДанныеШапки.Покупатель = Неопределено;
			ДанныеШапки.ПредставлениеПокупателя="--";
			// Адрес покупателя
			ДанныеШапки.АдресПокупателя="--";
			ДанныеШапки.ИННпокупателя="--";
		КонецЕсли; 
		
		// Райков адрес из заказа {
		Если Реквизиты.БезвозмезднаяПередача И ЗначениеЗаполнено(Реквизиты.Покупатель) И ТипЗнч(Реквизиты.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров") И ЗначениеЗаполнено(Реквизиты.ДокументОснование.Заказ) Тогда  
			
			Если ЗначениеЗаполнено(Реквизиты.ДокументОснование.Заказ.АдресДоставки) Тогда
				//ДанныеШапки.АдресПокупателя = Реквизиты.ДокументОснование.Заказ.АдресДоставки;
				СведенияОГрузополучателе.ПочтовыйАдрес = Реквизиты.ДокументОснование.Заказ.АдресДоставки;
				
				ДанныеШапки.ПредставлениеГрузополучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм,ПочтовыйАдрес,");

			КонецЕсли;
			
		КонецЕсли;
		//}
		
	КонецЕсли;
	
	// Данные для универсального передаточного документа
	Если ДополнитьДаннымиУПД Тогда
		
		// Наименование экономического субъекта - составителя документа
		Если ЗначениеЗаполнено(Комиссионер) И СведенияОКомиссионере <> Неопределено Тогда
			ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "НаименованиеДляПечатныхФорм,");
			ИННПоставщика           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь);
			КПППоставщика           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
		Иначе
			ПредставлениеПоставщика = ДанныеШапки.ПредставлениеПоставщика;
			ИННПоставщика           = ДанныеШапки.ИННПоставщика;
			КПППоставщика           = ДанныеШапки.КПППоставщика;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КПППоставщика) Тогда
			ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
				ПредставлениеПоставщика, ИННПоставщика, КПППоставщика);
		ИначеЕсли ЗначениеЗаполнено(ИННПоставщика) Тогда
			ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
				ПредставлениеПоставщика, ИННПоставщика);
		Иначе
			ПредставлениеОрганизации = ПредставлениеПоставщика;
		КонецЕсли;
		ДанныеШапки.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		
		Если ЗначениеЗаполнено(ДанныеШапки.КППпокупателя) Тогда
			ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
				ДанныеШапки.ПредставлениеПокупателя, ДанныеШапки.ИННпокупателя, ДанныеШапки.КППпокупателя);
		ИначеЕсли ЗначениеЗаполнено(ДанныеШапки.ИННпокупателя) Тогда
			ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
				ДанныеШапки.ПредставлениеПокупателя, ДанныеШапки.ИННпокупателя);
		Иначе
			ПредставлениеКонтрагента = ДанныеШапки.ПредставлениеПокупателя;
		КонецЕсли;
		
		ДанныеШапки.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
		
		// Статус
		Если НЕ ЗначениеЗаполнено(ВыборкаСФ.ВидСчетаФактуры) Тогда
			СтатусУПД = 2;
			ДанныеШапки.Вставить("ПоДокументу",  "-- от --");
		Иначе
			СтатусУПД = 1;
		КонецЕсли;
		
		ДанныеШапки.Вставить("СтатусУПД", СтатусУПД);
		ДанныеШапки.Вставить("СопроводительныеДокументы", Реквизиты.СопроводительныеДокументы);
		
		ДанныеТранспортнаяНакладная = Новый Массив;
		
		Если Реквизиты.ПеревозкаАвтотранспортом И ЗначениеЗаполнено(Реквизиты.ДокументОснование) Тогда
			
			РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Реквизиты.ДокументОснование, "Дата,Номер");
			НомерОснования     = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Ложь);
			
			ДанныеШапки.Вставить("ТранспортнаяНакладнаяДата",  РеквизитыОснования.Дата);
			ДанныеШапки.Вставить("ТранспортнаяНакладнаяНомер", НомерОснования);
			
			ПредставлениеТранспортнаяНакладная = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Транспортная накладная № %1 от %2'"),
				ДанныеШапки.ТранспортнаяНакладнаяНомер, 
				Формат(ДанныеШапки.ТранспортнаяНакладнаяДата, "ДЛФ=ДД"));

			ДанныеТранспортнаяНакладная.Добавить(ПредставлениеТранспортнаяНакладная);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Реквизиты.Перевозчик) Тогда
			ДанныеШапки.Вставить("Перевозчик", Реквизиты.Перевозчик);
			
			// Данные перевозчика в электронном документе выводятся в отдельном реквизите.
			Если Не ФормированиеЭД Тогда
				ДанныеПеревозчик = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Реквизиты.Перевозчик, ВыборкаСФ.ДатаСведений);
				
				ПредставлениеПеревозчик = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Перевозчик %1'"),
					ДанныеПеревозчик.НаименованиеДляПечатныхФорм);
					
				ДанныеТранспортнаяНакладная.Добавить(ПредставлениеПеревозчик);
			КонецЕсли;
		Иначе
			ДанныеШапки.Вставить("Перевозчик", Неопределено);
		КонецЕсли;
		
		ДанныеШапки.Вставить("СведенияОТранспортировке", Реквизиты.СведенияОТранспортировкеИГрузе);
		
		Если ЗначениеЗаполнено(Реквизиты.СведенияОТранспортировкеИГрузе) Тогда
			ДанныеТранспортнаяНакладная.Добавить(Реквизиты.СведенияОТранспортировкеИГрузе);
		КонецЕсли; 
		
		
		ДанныеШапки.Вставить("ДанныеТранспортнаяНакладная", СтрСоединить(ДанныеТранспортнаяНакладная, ", "));
		
		// Номер
		Если СтатусУПД = 2 Тогда
			Если ТипЗнч(ВыборкаСФ.ДокументОснование) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
				ДанныеШапки.Номер = ДанныеШапки.Номер + "/" + ВыборкаСФ.НомерСтроки;
			КонецЕсли;
		КонецЕсли;
		
		ПередачаТоваровКомиссионеру = Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
			И ТипЗнч(Реквизиты.ДокументОснование) <> Тип("ДокументСсылка.ОтчетКомиссионераОПродажах");
		// По отчету комиссионера печатается УПД за поставщика (комиссионера).
		ПередачаТоваровКомитенту = ТипЗнч(Реквизиты.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров");
			
		БезПереходаПраваСобственности = ПередачаТоваровКомиссионеру ИЛИ ПередачаТоваровКомитенту;
			
		Если Реквизиты.Свойство("БезвозмезднаяПередача") Тогда
			Если Реквизиты.БезвозмезднаяПередача Тогда
				БезПереходаПраваСобственности = Ложь;
			КонецЕсли;
		КонецЕсли;
			
		// В соответствии с письмом ФНС России от 21.10.2013 N ММВ-20-3/96@ "Об отсутствии налоговых рисков при применении 
		// налогоплательщиками первичного документа, составленного на основе формы счета-фактуры", в УПД со статусом 2 при передаче
		// без перехода права собственности строки (2),(2а),(2б) и (6),(6а),(6б) не заполняются.
		
		Если БезПереходаПраваСобственности И СтатусУПД = 2 Тогда
			
			// Поставщик и Грузоотправитель
			Если ТипЗнч(ДанныеШапки.Грузоотправитель) = Тип("Строка") Тогда // "он же"
				ДанныеШапки.Грузоотправитель              = ДанныеШапки.Поставщик;
				ДанныеШапки.ПредставлениеГрузоотправителя = ДанныеШапки.ПредставлениеПоставщика 
					+ ?(ПустаяСтрока(ДанныеШапки.АдресПоставщика), "", ", ") + ДанныеШапки.АдресПоставщика;
			КонецЕсли;
			
			ДанныеШапки.Поставщик               = Неопределено; //
			ДанныеШапки.ПредставлениеПоставщика = "--";         // (2)
			ДанныеШапки.АдресПоставщика         = "--";         // (2а)
			ДанныеШапки.ИННПоставщика           = "--";         //
			ДанныеШапки.КПППоставщика           = "";           // (2б)
		
			// Покупатель и Грузополучатель
			Если ТипЗнч(ДанныеШапки.Грузополучатель) = Тип("Строка") Тогда // "он же"
				ДанныеШапки.Грузополучатель              = ДанныеШапки.Покупатель;
				ДанныеШапки.ПредставлениеГрузополучателя = ДанныеШапки.ПредставлениеПокупателя
					+ ?(ПустаяСтрока(ДанныеШапки.АдресПокупателя), "", ", ") + ДанныеШапки.АдресПокупателя;
			КонецЕсли;
			
			ДанныеШапки.Покупатель              = Неопределено; //
			ДанныеШапки.ПредставлениеПокупателя = "--";         // (6)
			ДанныеШапки.АдресПокупателя         = "--";         // (6а)
			ДанныеШапки.ИННПокупателя           = "--";         //
			ДанныеШапки.КПППокупателя           = "";           // (6б)
			
		КонецЕсли;
		
		// Основание передачи (сдачи)
		Основание = СокрП(Реквизиты.Основание);
		
		ДанныеШапки.Вставить("ОснованиеДата", Реквизиты.ОснованиеДата);
		ДанныеШапки.Вставить("ОснованиеНомер", Реквизиты.ОснованиеНомер);
		ДанныеШапки.Вставить("ОснованиеВид", Реквизиты.ВидДоговора);
		
		ФИОТоварПолучил = "";
		
		Если ЗначениеЗаполнено(Реквизиты.ДоверенностьНомер)
			ИЛИ ЗначениеЗаполнено(Реквизиты.ДоверенностьДата)
			ИЛИ ЗначениеЗаполнено(Реквизиты.ДоверенностьВыдана)
			 Тогда
			
			Доверенность = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'по доверенности №%1 от %2 выданной %3'"),
				Реквизиты.ДоверенностьНомер, Формат(Реквизиты.ДоверенностьДата, "ДЛФ=ДД"),
				Реквизиты.ДоверенностьВыдана);
			
			Основание = Основание + ?(ПустаяСтрока(Основание), "", "; ") + Доверенность;
			
			ФИОТоварПолучил =  Реквизиты.ДоверенностьЧерезКого;
			
		ИначеЕсли ЗначениеЗаполнено(Реквизиты.ДоверенностьЧерезКого) Тогда
			
			ФИОТоварПолучил = Реквизиты.ДоверенностьЧерезКого+?(ЗначениеЗаполнено(Реквизиты.ЗаЗаказчикаНаОсновании),", "+Реквизиты.ЗаЗаказчикаНаОсновании,"");
			
		КонецЕсли;
		
		ДанныеШапки.Вставить ("Основание",       Основание);
		ДанныеШапки.Вставить ("ФИОТоварПолучил", ФИОТоварПолучил);
		Если Реквизиты.Свойство("БанковскийСчетПродавца") Тогда
			ДанныеШапки.Вставить ("БанковскийСчетПродавца", Реквизиты.БанковскийСчетПродавца);
		КонецЕсли;
		
		Если ВыборкаСФ.ЭтоСчетФактураВыданный Тогда
			
			// Товар (груз) передал / услуги, результаты работ, права сдал
			
			Если Реквизиты.ЕстьТовары Тогда
				
				ДанныеКладовщика = ДанныеОтветственныхЛиц.Найти(Кладовщик, "ФизическоеЛицо");
				Если ДанныеКладовщика = Неопределено Тогда
					ДанныеШапки.Вставить("Кладовщик", Справочники.ФизическиеЛица.ПустаяСсылка());
					
					ДанныеШапки.Вставить("ДолжностьКладовщика");
					ДанныеШапки.Вставить("ФИОКладовщика", "");
					ДанныеШапки.Вставить("КладовщикФИО", Новый Структура("Фамилия, Имя, Отчество, Представление"));
				Иначе
					ДанныеШапки.Вставить("Кладовщик", Кладовщик);
					
					ДанныеШапки.Вставить("ДолжностьКладовщика", ДанныеКладовщика.Должность);
					ДанныеШапки.Вставить("ФИОКладовщика",       ДанныеКладовщика.Представление);
					ДанныеШапки.Вставить("КладовщикФИО", СтруктураФИО(ДанныеКладовщика));
				КонецЕсли;
				
			Иначе
				
				Если ЗначениеЗаполнено(Реквизиты.Исполнитель) Тогда
					
					ДанныеИсполнителя = ДанныеОтветственныхЛиц.Найти(Реквизиты.Исполнитель, "ФизическоеЛицо");
					Если ДанныеИсполнителя = Неопределено Тогда
						ДанныеШапки.Вставить("Кладовщик", Справочники.ФизическиеЛица.ПустаяСсылка());
						
						ДанныеШапки.Вставить("ДолжностьКладовщика");
						ДанныеШапки.Вставить("ФИОКладовщика", "");
						ДанныеШапки.Вставить("КладовщикФИО", Новый Структура("Фамилия, Имя, Отчество, Представление"));
					Иначе
						ДанныеШапки.Вставить("Кладовщик",           Реквизиты.Исполнитель);
						ДанныеШапки.Вставить("ДолжностьКладовщика", ДанныеИсполнителя.Должность);
						ДанныеШапки.Вставить("ФИОКладовщика",       ?(ЗначениеЗаполнено(ДанныеИсполнителя.Представление), ДанныеИсполнителя.Представление, "")
							+ ?(ЗначениеЗаполнено(Реквизиты.ИсполнительНаОсновании), " ", "") + Реквизиты.ИсполнительНаОсновании);
						ДанныеШапки.Вставить("КладовщикФИО", СтруктураФИО(ДанныеИсполнителя));
					КонецЕсли;
					
				ИначеЕсли ОрганизацияЭтоЮрЛицо Тогда
					ДанныеШапки.Вставить("Кладовщик",           ДанныеШапки.Руководитель);
					ДанныеШапки.Вставить("ДолжностьКладовщика", ДанныеШапки.РуководительДолжность);
					ДанныеШапки.Вставить("ФИОКладовщика",       ДанныеШапки.ФИОРуководителя);
					ДанныеШапки.Вставить("КладовщикФИО",        ДанныеШапки.РуководительФИО);
				Иначе
					ДанныеШапки.Вставить("Кладовщик",           ДанныеШапки.Руководитель);
					ДанныеШапки.Вставить("ДолжностьКладовщика", ДанныеШапки.РуководительДолжность);
					ДанныеШапки.Вставить("ФИОКладовщика",       ДанныеШапки.ФИОПБОЮЛ);
					ДанныеШапки.Вставить("КладовщикФИО",        ДанныеШапки.ПБОЮЛФИО);
				КонецЕсли;
				
			КонецЕсли;
			
			// Ответственный за правильность оформления факта хозяйственной жизни
			Если ЗначениеЗаполнено(Реквизиты.ОтветственныйЗаОформление) Тогда
				ДанныеОтветственного        = ДанныеОтветственныхЛиц.Найти(Реквизиты.ОтветственныйЗаОформление, "ФизическоеЛицо");
				
				ДолжностьОтветственного     = ?(ДанныеОтветственного = Неопределено, "", ДанныеОтветственного.Должность);
				ПредставлениеОтветственного = ?(ДанныеОтветственного = Неопределено, "", ДанныеОтветственного.Представление);
				СтруктураФИО                = ?(ДанныеОтветственного = Неопределено, Новый Структура("Фамилия, Имя, Отчество, Представление"), СтруктураФИО(ДанныеОтветственного));
				
				ДанныеШапки.Вставить("ДолжностьОтветственного", ДолжностьОтветственного);
				ДанныеШапки.Вставить("ФИООтветственного",       ПредставлениеОтветственного);
				ДанныеШапки.Вставить("ОтветственныйФИО",        СтруктураФИО);
				ДанныеШапки.Вставить("ОтветственныйЗаОформление", Реквизиты.ОтветственныйЗаОформление);
				
			ИначеЕсли ОрганизацияЭтоЮрЛицо Тогда
				
				ДанныеШапки.Вставить("ДолжностьОтветственного", ДанныеШапки.РуководительДолжность);
				ДанныеШапки.Вставить("ФИООтветственного",       ДанныеШапки.ФИОРуководителя);
				ДанныеШапки.Вставить("ОтветственныйФИО",        ДанныеШапки.РуководительФИО);
				ДанныеШапки.Вставить("ОтветственныйЗаОформление", ДанныеШапки.Руководитель);
				
			Иначе
				
				ДанныеШапки.Вставить("ДолжностьОтветственного", ДанныеШапки.РуководительДолжность);
				ДанныеШапки.Вставить("ФИООтветственного",       ДанныеШапки.ФИОПБОЮЛ);
				ДанныеШапки.Вставить("ОтветственныйФИО",        ДанныеШапки.ПБОЮЛФИО);
				ДанныеШапки.Вставить("ОтветственныйЗаОформление", ДанныеШапки.Руководитель);
				
			КонецЕсли;
			
			// Дата отгрузки, передачи (сдачи)
			ШаблонДатыОтгрузкиПередачи = Формат(Реквизиты.ДатаОснования, "ДФ='« дд » %1 ММММ %2 гггг  %3'");
			
			ДлинаДаты = 30;
			ДобавитьСимволовСлева  = Окр((ДлинаДаты - СтрДлина(ШаблонДатыОтгрузкиПередачи))/2, 0);
			ДобавитьСимволовСправа = ДлинаДаты - СтрДлина(ШаблонДатыОтгрузкиПередачи) - ДобавитьСимволовСлева;
			
			ДатаОтгрузкиПередачи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонДатыОтгрузкиПередачи, 
				СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(" ", ДобавитьСимволовСлева),
				СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(" ", ДобавитьСимволовСправа),
				НСтр("ru = 'года'"));
			
			ДанныеШапки.Вставить ("ДатаОтгрузкиПередачи", ДатаОтгрузкиПередачи);
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат ДанныеШапки;
	
КонецФункции
