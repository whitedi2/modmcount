Процедура ВыполнитьРегламентнуюЗадачуЗагрузкаВыписокИзКлиентБанка() Экспорт
	
	ИмяСобытия = НСтр("ru = 'Загрузка выписок из клиент-банка'", ОбщегоНазначения.КодОсновногоЯзыка());
	Обработка = Обработки.сабЗагрузкаВыписокИзКлиентБанка.Создать();
	Обработка.ВыполнитьКоманду("сабЗагрузкаВыписокИзКлиентБанка", Неопределено);
    Комментарий = НСтр("ru = 'Задание выполнено'", ОбщегоНазначения.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Примечание, , , Комментарий);
	
КонецПроцедуры

Процедура ВыполнитьРегламентнуюЗадачуРассылкаОповещенийОСозданииДокументовНаЭлектроннуюПочту() Экспорт
	
	ИмяСобытия = НСтр("ru = 'Рассылка оповещений о создании документов на электронную почту'", ОбщегоНазначения.КодОсновногоЯзыка());
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	
	
	НаборЗаписей = РегистрыСведений.сабЭлектронныеПисьма.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Для каждого Запись из НаборЗаписей Цикл
		
		Если Запись.Отправлено = Ложь Тогда
			
			ПараметрыОтправки = Новый Структура;
			ПараметрыОтправки.Вставить("Кому", Запись.Получатель);
			ПараметрыОтправки.Вставить("Тема", Запись.Тема);
			ПараметрыОтправки.Вставить("Тело", Запись.ТекстПисьма);
			Попытка
				УстановитьПривилегированныйРежим(Истина);
				РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыОтправки);
				Запись.Отправлено = Истина;
				Запись.ДатаОтправки = ТекущаяДата();
				УстановитьПривилегированныйРежим(Ложь);
			Исключение
				ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Примечание, , , ОписаниеОшибки);
			КонецПопытки;
			
		КонецЕсли; 
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Комментарий = НСтр("ru = 'Задание выполнено'", ОбщегоНазначения.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Примечание, , , Комментарий);
	
КонецПроцедуры

Процедура ВыполнитьРегламентнуюЗадачуЗаполнениеРегистраКэшОстатков() Экспорт
	
	ИмяСобытия = НСтр("ru = 'Заполнение регистра кэш остатков'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ДатаНачала = НачалоДня(ТекущаяДата() - (86400 * 90));
	ДатаКонца  = КонецДня(ТекущаяДата());
	Магазин = Справочники.СтруктураПредприятия.ПустаяСсылка();
	
	сабОперОбщегоНазначения.ОчиститьКеш(ДатаНачала, ДатаКонца, Магазин);
	Обработ = сабОперОбщегоНазначения.ЗаполнитьКешНаСервере(ДатаНачала, ДатаКонца, Магазин);
	счСтроки = 0;

	ТекДата = Неопределено;
	
	НовыйМассив = Новый Массив;
	Для каждого ТекОбр Из Обработ Цикл
		счСтроки = счСтроки + 1;
		НовыйМассив.Добавить(ТекОбр);
		Если счСтроки / 10000 = окр(счСтроки / 10000, 0) ИЛИ НЕ ТекДата = ТекОбр.Период Тогда
			НовыйМассив.Удалить(НовыйМассив.Количество()-1);
			сабОперОбщегоНазначения.ЗаписатьОстатки(НовыйМассив);
			НовыйМассив = Новый Массив;
			ТекДата = ТекОбр.Период;
			НовыйМассив.Добавить(ТекОбр);
		КонецЕсли;
	КонецЦикла;
	
	Если НовыйМассив.Количество() Тогда
		сабОперОбщегоНазначения.ЗаписатьОстатки(НовыйМассив);
	КонецЕсли;
	
  Комментарий = НСтр("ru = 'Задание выполнено'", ОбщегоНазначения.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Примечание, , , Комментарий);
	
КонецПроцедуры
