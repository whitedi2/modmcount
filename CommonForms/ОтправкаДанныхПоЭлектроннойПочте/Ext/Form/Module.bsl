
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Основание") Тогда
		
		Если ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда 
			
			Тема = Строка(Параметры.Основание);
			Содержание = Параметры.Основание.Комментарий;
			
			//Если ПустаяСтрока(Кому) Тогда
			//	Если Параметры.Основание.Подписал <> Неопределено Тогда
			//		Для каждого КИ Из Параметры.Основание.Подписал.КонтактнаяИнформация Цикл
			//			Если Не ПустаяСтрока(КИ.АдресЭП) Тогда
			//				Кому = КИ.АдресЭП;
			//				Прервать;
			//			КонецЕсли;	
			//		КонецЦикла;
			//	КонецЕсли;
			//КонецЕсли;	
			
			//Если ПустаяСтрока(Кому) Тогда
			//	Если Параметры.Основание.Отправитель <> Неопределено Тогда
			//		Если ТипЗнч(Параметры.Основание.Отправитель) = Тип("СправочникСсылка.Корреспонденты") Тогда
			//			Для каждого КИ Из Параметры.Основание.Отправитель.КонтактнаяИнформация Цикл
			//				Если Не ПустаяСтрока(КИ.АдресЭП) Тогда
			//					Кому = КИ.АдресЭП;
			//					Прервать;
			//				КонецЕсли;	
			//			КонецЦикла;
			//		КонецЕсли;
			//	КонецЕсли;	
			//КонецЕсли;
			
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.Д_СлужебнаяЗаписка") Тогда 
			
			Тема = Строка(Параметры.Основание);
			Содержание = Параметры.Основание.Комментарий;
			
			//Если ПустаяСтрока(Кому) Тогда
			//	Если Параметры.Основание.Адресат <> Неопределено Тогда
			//		Для каждого КИ Из Параметры.Основание.Адресат.КонтактнаяИнформация Цикл
			//			Если Не ПустаяСтрока(КИ.АдресЭП) Тогда
			//				Кому = КИ.АдресЭП;
			//				Прервать;
			//			КонецЕсли;	
			//		КонецЦикла;
			//	КонецЕсли;
			//КонецЕсли;	
			
			//Если ПустаяСтрока(Кому) Тогда
			//	Если Параметры.Основание.Получатель <> Неопределено Тогда
			//		Если ТипЗнч(Параметры.Основание.Получатель) = Тип("СправочникСсылка.Корреспонденты") Тогда
			//			Для каждого КИ Из Параметры.Основание.Получатель.КонтактнаяИнформация Цикл
			//				Если Не ПустаяСтрока(КИ.АдресЭП) Тогда
			//					Кому = КИ.АдресЭП;
			//					Прервать;
			//				КонецЕсли;	
			//			КонецЦикла;
			//		КонецЕсли;
			//	КонецЕсли;	
			//КонецЕсли;
			   
		//ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда 
		//	
		//	Тема = Параметры.Основание.Заголовок;
		//	Содержание = Параметры.Основание.Содержание;
		//	
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("СправочникСсылка.Файлы") Тогда 	
			
			Тема = Параметры.Основание.ПолноеНаименование;
			Содержание = Параметры.Основание.Описание;
			
			Строка = Файлы.Добавить();
			
			Строка.Файл = Параметры.Основание.ПолноеНаименование + "." + Параметры.Основание.ТекущаяВерсия.Расширение;
			Строка.Размер = Параметры.Основание.ТекущаяВерсия.Размер / 1024;
			Если Строка.Размер = 0 Тогда
				Строка.Размер = 1;
			КонецЕсли;		
			Строка.ВключитьФайл = Истина;
			Строка.Ссылка = Параметры.Основание;
			
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("Строка") Тогда
			ТекФайл = БюджетныйНаСервере.ЗагрузитьИСоздатьЭлементФайл(Параметры.Основание, Параметры.ИмяФайла, Параметры.ТекРазмер);
		КонецЕсли;
		
		
			
	КонецЕсли;	
	
	Подпись = НСтр("ru = 'Сообщение отправлено из программы 1С:Корпоративный учет.'");
	Подпись = Подпись + Символы.ПС;
	Подпись = Подпись + НСтр("ru = 'Основание: '") + ПолучитьНавигационнуюСсылкуИнформационнойБазы() + "#" + ПолучитьНавигационнуюСсылку(Параметры.Основание);
	
	Содержание = Содержание + Символы.ПС + Подпись;
	
	// Получить список файлов
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Файлы.Ссылка КАК Ссылка,
	               |	Файлы.Размер КАК Размер ,
	               |	Файлы.Наименование КАК Наименование,
	               |	Файлы.Расширение КАК Расширение
	               |ИЗ
	               |	Справочник.Файлы КАК Файлы
	               |ГДЕ
	               |	Файлы.Ссылка = &ВладелецФайла";
	Запрос.УстановитьПараметр("ВладелецФайла", ТекФайл);
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = Файлы.Добавить();
			Строка.Файл = Выборка.Наименование;
			
			Если Выборка.Размер <> Null Тогда
				Строка.Размер = Выборка.Размер;
				Если Строка.Размер = 0 Тогда
					Строка.Размер = 1;
				КонецЕсли;		
			КонецЕсли;	
			Строка.ВключитьФайл = Истина;
			Строка.Ссылка = Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	
	УчетнаяЗапись = ПараметрыСеанса.ТекущийПользователь.УчетнаяЗаписьЭлектроннойПочты;
	
	//// Получить учетную запись
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//			   |	УчетныеЗаписиЭлектроннойПочты.Ссылка
	//			   |ИЗ
	//			   |	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	//			   |ГДЕ
	//			   |	УчетныеЗаписиЭлектроннойПочты.ОтветственныйЗаОбработкуПисем = &ТекущийПользователь";
	//Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	//
	//Результат = Запрос.Выполнить();
	//Если Не Результат.Пустой() Тогда
	//	Выборка = Результат.Выбрать();
	//	Если Выборка.Количество() = 1 Тогда
	//		Выборка.Следующий();
	//		УчетнаяЗапись = Выборка.Ссылка;
	//	КонецЕсли;
	//КонецЕсли;	
	//
	//// Сохранение вводимых значений
	//СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Состояние(НСтр("ru = 'Идет отправка почтового сообщения. Пожалуйста, подождите...'"));
		ОтправитьСервер();
		Состояние(НСтр("ru = 'Почтовое сообщение отправлено.'"));
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ОтправитьСервер()	
	
	// Сохранение вводимых значений
	//СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
	СписокФайлов = Новый Массив();
	Для Каждого Строка Из Файлы Цикл
		Если Строка.ВключитьФайл Тогда
			СписокФайлов.Добавить(Строка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеЭлектроннойПочтой.ОтправитьПоЭлектроннойПочте(
		УчетнаяЗапись,
		Кому,
		Тема,
		Содержание,
		Важность,
		СписокФайлов,
		ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

