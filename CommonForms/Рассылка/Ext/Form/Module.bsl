&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	КонтрагентыКонтактнаяИнформация.АдресЭП КАК АдресЭП,
		|	ИСТИНА КАК Отправлять
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО КонтрагентыКонтактнаяИнформация.Ссылка = Контрагенты.Ссылка
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.АдресЭП <> """"
		|	И Контрагенты.Родитель В ИЕРАРХИИ(&Группа)";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблКлиентов.Загрузить(РезультатЗапроса);	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина);
	Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, обратитесь к администратору системы.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;
	
	УчетнаяЗапись = ДоступныеУчетныеЗаписи[0].Ссылка;
	
	Элементы.НоваяРассылка.Видимость = Ложь;
	
	ЗаполнитьИзПоследнейОтправкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлВоВложения()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлВоВложенияПриПомещенииФайлов", ЭтотОбъект);
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещения, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлВоВложенияПриПомещенииФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ДобавитьФайлыВСписок(ПомещенныеФайлы);
	ОбновитьПредставлениеВложений();
	ТребуетсяПодтверждениеЗакрытияФормы = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьФайлыВСписок(ПомещенныеФайлы)
	
	Для Каждого ОписаниеФайла Из ПомещенныеФайлы Цикл
		Файл = Новый Файл(ОписаниеФайла.Имя);
		Вложение = Вложения.Добавить();
		Вложение.Представление = Файл.Имя;
		Вложение.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(ОписаниеФайла.Хранение), УникальныйИдентификатор);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеВложений()
	
	ПредставлениеВложений.Очистить();
	
	Индекс = 0;
	
	Для Каждого Вложение Из Вложения Цикл
		Если Индекс = 0 Тогда
			СтрокаПредставления = ПредставлениеВложений.Добавить();
		КонецЕсли;
		
		СтрокаПредставления["Вложение" + Строка(Индекс + 1)] = Вложение.Представление;
		
		Индекс = Индекс + 1;
		Если Индекс = 2 Тогда 
			Индекс = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложитьФайлВыполнить()
	
	ДобавитьФайлВоВложения();
	
КонецПроцедуры

&НаСервере
Функция Вложения()
	
	Результат = Новый Массив;
	Для Каждого Вложение Из Вложения Цикл
		
		Представление             = Вложение.Представление;
		Кодировка                 = Вложение.Кодировка;
		АдресВоВременномХранилище = Вложение.АдресВоВременномХранилище;
		Идентификатор             = Вложение.Идентификатор;
		
		ОписаниеВложения = Новый Структура;
		ОписаниеВложения.Вставить("Представление",             Представление);
		ОписаниеВложения.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
		ОписаниеВложения.Вставить("Кодировка",                 Кодировка);
		ОписаниеВложения.Вставить("Идентификатор",             Идентификатор);
		Результат.Добавить(ОписаниеВложения);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СформироватьПараметрыПисьма(АдресЭП)
	
	ПараметрыПисьма = Новый Структура;
	Кому = Новый Массив;
	Копии = Новый Массив;
	СкрытыеКопии = Новый Массив;
	
	Кому.Добавить(Новый Структура("Адрес, Представление", АдресЭП, АдресЭП));
	
	ПараметрыПисьма.Вставить("Кому", Кому);
	
	ПараметрыПисьма.Вставить("АдресОтвета", УчетнаяЗапись.АдресЭлектроннойПочты);
	
	Если ЗначениеЗаполнено(ТемаПисьма) Тогда
		ПараметрыПисьма.Вставить("Тема", ТемаПисьма);
	КонецЕсли;
	
	ПараметрыПисьма.Вставить("Тело", ТелоПисьма);
	ПараметрыПисьма.Вставить("Вложения", Вложения());
	
	Возврат ПараметрыПисьма;
	
КонецФункции

&НаСервере
Процедура ОтправитьПисьмоНаСервере()
	
	Если ТекущееПисьмо.Ссылка.Пустая() Тогда 
		Спр = Справочники.ЭлектронныеПисьма.СоздатьЭлемент();
		Спр.Дата = ТекущаяДата();
		Спр.ТемаПисьма = ТемаПисьма;
		Спр.ТелоПисьма = Новый ХранилищеЗначения(ТелоПисьма);
		Спр.Наименование = Лев(ТемаПисьма,30) + "... (" + Формат(Спр.Дата,"ДЛФ=DT") + ")";
		Спр.Записать();
		ТекущееПисьмо = Спр.Ссылка;
	КонецЕсли;
	
	Для Каждого Строка Из ТаблКлиентов Цикл
		Если НЕ Строка.Отправлять ИЛИ Строка.Отправлен Тогда
			Продолжить;
		КонецЕсли;
	
		ПараметрыПисьма = СформироватьПараметрыПисьма(Строка.АдресЭП);
		Если ПараметрыПисьма = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Письмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(УчетнаяЗапись, ПараметрыПисьма);
		РезультатОтправки = РаботаСПочтовымиСообщениями.ОтправитьПисьмо(УчетнаяЗапись, Письмо);
		РаботаСПочтовымиСообщениямиПереопределяемый.ПослеОтправкиПисьма(ПараметрыПисьма);

		ОшибочныеПолучатели = РезультатОтправки.ОшибочныеПолучатели;
		Если ОшибочныеПолучатели.Количество() = 0 Тогда
			Строка.Отправлен = Истина;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.Рассылка.СоздатьМенеджерЗаписи(); 
		МенеджерЗаписи.Письмо = ТекущееПисьмо; 
		МенеджерЗаписи.Контрагент = Строка.Контрагент; 
		МенеджерЗаписи.АдресЭП = Строка.АдресЭП; 
		МенеджерЗаписи.Отправлен = Строка.Отправлен; 
		МенеджерЗаписи.Отправлять = Строка.Отправлять; 
		МенеджерЗаписи.Записать();    
		
		ДатаВыхода = ТекущаяДата() + Задержка;
		Пока ТекущаяДата() < ДатаВыхода Цикл
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмо(Команда)
	ОтправитьПисьмоНаСервере();
	Элементы.ТемаПисьма.Доступность = Ложь;
	Элементы.ТелоПисьма.Доступность = Ложь;
	Элементы.ПриложитьФайл.Доступность = Ложь;
	Элементы.Вложения.Доступность = Ложь;
	Элементы.НоваяРассылка.Видимость = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзПоследнейОтправкиНаСервере(ВыбПисьмо = Неопределено)
	
	Письмо = ВыбПисьмо;

	Запрос = Новый Запрос;
	
	Если Письмо = Неопределено Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭлектронныеПисьма.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЭлектронныеПисьма КАК ЭлектронныеПисьма
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭлектронныеПисьма.Дата УБЫВ";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Письмо = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЕсли;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рассылка.Контрагент КАК Контрагент,
		|	Рассылка.АдресЭП КАК АдресЭП,
		|	Рассылка.Отправлять КАК Отправлять
		|ИЗ
		|	РегистрСведений.Рассылка КАК Рассылка
		|ГДЕ
		|	Рассылка.Письмо = &Письмо";
	Иначе
		ТемаПисьма = Письмо.ТемаПисьма;
		ТелоПисьма = Письмо.ТелоПисьма.Получить();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рассылка.Контрагент КАК Контрагент,
		|	Рассылка.АдресЭП КАК АдресЭП,
		|	Рассылка.Отправлять КАК Отправлять,
		|	Рассылка.Отправлен КАК Отправлен
		|ИЗ
		|	РегистрСведений.Рассылка КАК Рассылка
		|ГДЕ
		|	Рассылка.Письмо = &Письмо";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Письмо", Письмо);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблКлиентов.Загрузить(РезультатЗапроса);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзПоследнейОтправки(Команда)
	ЗаполнитьИзПоследнейОтправкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НоваяРассылка(Команда)
	ТекущееПисьмо = "";
	Элементы.ТемаПисьма.Доступность = Истина;
	Элементы.ТелоПисьма.Доступность = Истина;
	Элементы.ПриложитьФайл.Доступность = Истина;
	Элементы.Вложения.Доступность = Истина;
	Элементы.НоваяРассылка.Видимость = Ложь;
	
	Для Каждого Строка Из ТаблКлиентов Цикл
		Строка.Отправлен = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТекущееПисьмоПриИзменении(Элемент)
	ЗаполнитьИзПоследнейОтправкиНаСервере(ТекущееПисьмо);
	Элементы.НоваяРассылка.Видимость = Истина;
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыВложения

// Удаляет вложение из списка, а так же вызывает функцию
// обновления таблицы представления вложений.
//
&НаКлиенте
Процедура ВложенияПередУдалением(Элемент, Отказ)
	
	НаименованиеВложения = Элемент.ТекущиеДанные[Элемент.ТекущийЭлемент.Имя];
	
	Для Каждого Вложение Из Вложения Цикл
		Если Вложение.Представление = НаименованиеВложения Тогда
			Вложения.Удалить(Вложение);
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьПредставлениеВложений();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ДобавитьФайлВоВложения();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьВложение();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	КоллекцияЗначений = ПараметрыПеретаскивания.Значение;
	Если ТипЗнч(КоллекцияЗначений) <> Тип("Массив") Тогда
		КоллекцияЗначений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыПеретаскивания.Значение);
	КонецЕсли;
	
	ЗагружаемыеФайлы = Новый Массив;
	Для Каждого Файл Из КоллекцияЗначений Цикл
		Если ТипЗнч(Файл) = Тип("СсылкаНаФайл") Тогда
			ЗагружаемыеФайлы.Добавить(Файл);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ЗагружаемыеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗагрузкеВложений", ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Интерактивно = Ложь;
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещения, ПараметрыЗагрузки, ЗагружаемыеФайлы);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьВложение()
	
	ВыбранноеВложение = ВыбранноеВложение();
	Если ВыбранноеВложение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		ПолучитьФайл(ВыбранноеВложение.АдресВоВременномХранилище, ВыбранноеВложение.Представление, Истина);
	#Иначе
		ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
		СоздатьКаталог(ИмяВременнойПапки);
		
		ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ВыбранноеВложение.Представление;
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ВыбранноеВложение.АдресВоВременномХранилище);
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		
		Файл = Новый Файл(ИмяВременногоФайла);
		Файл.УстановитьТолькоЧтение(Истина);
		Если Файл.Расширение = ".mxl" Тогда
			ТабличныйДокумент = ПолучитьТабличныйДокументПоДвоичнымДанным(ВыбранноеВложение.АдресВоВременномХранилище);
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ИмяДокумента", ВыбранноеВложение.Представление);
			ПараметрыОткрытия.Вставить("ТабличныйДокумент", ТабличныйДокумент);
			ПараметрыОткрытия.Вставить("ПутьКФайлу", ИмяВременногоФайла);
			ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект);
		Иначе
			ФайловаяСистемаКлиент.ОткрытьФайл(ИмяВременногоФайла);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументПоДвоичнымДанным(Знач ДвоичныеДанные)
	
	Если ТипЗнч(ДвоичныеДанные) = Тип("Строка") Тогда
		// Передан адрес двоичных данных во временном хранилище.
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДвоичныеДанные);
	КонецЕсли;
	
	ИмяФайла = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанные.Записать(ИмяФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяФайла);
	
	Попытка
		УдалитьФайлы(ИмяФайла);
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Получение табличного документа'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Функция ВыбранноеВложение()
	
	Результат = Неопределено;
	
	ТаблицаВложений = Вложения;
	
	Если Элементы.Вложения.ТекущиеДанные <> Неопределено Тогда
		
		НаименованиеВложения = Элементы.Вложения.ТекущиеДанные[Элементы.Вложения.ТекущийЭлемент.Имя];
		Для Каждого Вложение Из ТаблицаВложений Цикл
			Если Вложение.Представление = НаименованиеВложения Тогда
				Результат = Вложение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Результат = Неопределено Тогда
			Если Элементы.Вложения.ТекущиеДанные <> Неопределено Тогда
				НаименованиеВложения = Элементы.Вложения.ТекущиеДанные[Элементы.Вложения.ТекущийЭлемент.Имя];
				Для Каждого Вложение Из Вложения Цикл
					Если Вложение.Представление = НаименованиеВложения Тогда
						Результат = Вложение;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Для Каждого Строка Из ТаблКлиентов Цикл
	    Строка.Отправлять = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для Каждого Строка Из ТаблКлиентов Цикл
	    Строка.Отправлять = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция АдресЭП(Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыКонтактнаяИнформация.АдресЭП КАК АдресЭП
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.АдресЭП <> """"
		|	И КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.АдресЭП;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ТаблКлиентовКонтрагентПриИзменении(Элемент)
	ТекСтр = Элементы.ТаблКлиентов.ТекущиеДанные;
	ТекСтр.АдресЭП = АдресЭП(ТекСтр.Контрагент);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоАктивностиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ втАктивныеКонтрагенты
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РеализацияТоваровУслуг.Проведен = ИСТИНА
		|	И РеализацияТоваровУслуг.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслуг.Контрагент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПоступлениеТоваровУслуг.Проведен = ИСТИНА
		|	И ПоступлениеТоваровУслуг.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслуг.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	КонтрагентыКонтактнаяИнформация.АдресЭП КАК АдресЭП
		|ПОМЕСТИТЬ втЭПКонтрагенты
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО КонтрагентыКонтактнаяИнформация.Ссылка = Контрагенты.Ссылка
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.АдресЭП <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втАктивныеКонтрагенты.Контрагент КАК Контрагент,
		|	втЭПКонтрагенты.АдресЭП КАК АдресЭП,
		|	ИСТИНА КАК Отправлять
		|ИЗ
		|	втАктивныеКонтрагенты КАК втАктивныеКонтрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЭПКонтрагенты КАК втЭПКонтрагенты
		|		ПО втАктивныеКонтрагенты.Контрагент.Ссылка = втЭПКонтрагенты.Ссылка";
	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", Организация);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблКлиентов.Загрузить(РезультатЗапроса);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоАктивности(Команда)
	ЗаполнитьПоАктивностиНаСервере();
КонецПроцедуры
