
&НаКлиенте
Процедура ПоказатьИзменения(Команда)
	Ссылка = Элементы.СписокОбъектов.ТекущиеДанные.Объект;
	Данные = Элементы.СписокОбъектов.ТекущиеДанные.Данные;
	ПоказатьИзмененияНаСервере(Ссылка, Данные);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИзмененияНаФорме(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Ссылка = Элементы.СписокОбъектов.ТекущиеДанные.Объект;         
	Форма = ПолучитьФорму(ПолучитьПолноеИмяМетаданных(Ссылка) + ".ФормаОбъекта", Новый Структура("Ключ, РежимВосстановления", Ссылка, Истина));
	
	РеквизитыФормы = РеквизитыОбъектов.НайтиСтроки(Новый Структура("Объект", Ссылка));
	Для Каждого ТекРеквизитФормы из РеквизитыФормы Цикл
		
		Попытка
			Если ТекРеквизитФормы.Изменен и НЕ ТекРеквизитФормы.ЭтоТабличнаяЧасть Тогда
				Форма.Объект[ТекРеквизитФормы.Реквизит] = ТекРеквизитФормы.ЗначениеАвтосохраненное;
				Форма.Элементы[ТекРеквизитФормы.Реквизит].ШрифтЗаголовка.Жирный = Истина;
			КонецЕсли;
		Исключение
		КонецПопытки;		
		Форма.Модифицированность = Истина; 
		
	КонецЦикла;
	
	Форма.Открыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолноеИмяМетаданных(Ссылка)
	
	//Ссылка = Документы.УЧ_Операция.НайтиПоНомеру(0);
	возврат Ссылка.Метаданные().ПолноеИмя();
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПоказатьИзмененияНаСервере(Ссылка, Хранилище)
	//Форма = ПолучитьФорму(
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИЗакрыть(Команда)
	
	ТекстВопроса = "После закрытия этого окна восстановить несохраненные данные последнего сеанса будет невозможно. Продолжить?";
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		СписокОбъектов.Очистить();
		ОчиститьНаСервере();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьНаСервере()
	
	НаборЗаписей = РегистрыСведений.АвтосохранениеДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(БюджетныйНаСервере.ПолучитьПользователя());
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если СписокОбъектов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = "После закрытия этого окна восстановить несохраненные данные последнего сеанса будет невозможно. Продолжить?";
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОчиститьНаСервере();
	Иначе 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	АвтосохранениеДанных.Объект,
	               |	АвтосохранениеДанных.Данные,
	               |	АвтосохранениеДанных.Дата
	               |ИЗ
	               |	РегистрСведений.АвтосохранениеДанных КАК АвтосохранениеДанных
	               |ГДЕ
	               |	АвтосохранениеДанных.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураНоваяСтрокаОбъекты = Новый Структура; //новая строка таблицы СписокОбъектов.     СписокОбъектов.Добавить();
		СтруктураНоваяСтрокаОбъекты.Вставить("Тип",    Выборка.Объект.Метаданные().Синоним);
		СтруктураНоваяСтрокаОбъекты.Вставить("Объект", Выборка.Объект);
		СтруктураНоваяСтрокаОбъекты.Вставить("Дата",   Выборка.Дата);
		
		Данные = Выборка.Данные.Получить();
		Если ТипЗнч(Данные) = Тип("Структура") Тогда   //это не сохраненные данные форм
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ЕстьИзмененныеРеквизиты = Ложь;
		Для Каждого ТекРеквизит Из Данные Цикл  
			
			СтруктураНоваяСтрокаРеквизиты = Новый Структура; //новая строка таблицы РеквизитыОбъектов
			СтруктураНоваяСтрокаРеквизиты.Вставить("Объект",   Выборка.Объект);
			СтруктураНоваяСтрокаРеквизиты.Вставить("Реквизит", ТекРеквизит.Ключ);
			
			ЭтоТабличнаяЧасть                   = (Выборка.Объект.Метаданные().ТабличныеЧасти.Найти(ТекРеквизит.Ключ) <> Неопределено);
			ЗначениеВБД                         = Выборка.Объект[ТекРеквизит.Ключ];
			ЗначениеАвтосохраненное             = ТекРеквизит.Значение;
			
			СтруктураНоваяСтрокаРеквизиты.Вставить("ЭтоТабличнаяЧасть",       ЭтоТабличнаяЧасть);
			СтруктураНоваяСтрокаРеквизиты.Вставить("ЗначениеВБД",             ?(ЭтоТабличнаяЧасть, "<Таблица>", ЗначениеВБД));
			СтруктураНоваяСтрокаРеквизиты.Вставить("ЗначениеАвтосохраненное", ?(ЭтоТабличнаяЧасть, "<Таблица>", ЗначениеАвтосохраненное));
			
			Если ЭтоТабличнаяЧасть Тогда
				СтруктураНоваяСтрокаРеквизиты.Вставить("Изменен", СравнитьЗначения(ЗначениеВБД.Выгрузить(), ЗначениеАвтосохраненное));
			Иначе
				СтруктураНоваяСтрокаРеквизиты.Вставить("Изменен", СравнитьЗначения(ЗначениеВБД, ЗначениеАвтосохраненное));
			КонецЕсли;
			
			Если СтруктураНоваяСтрокаРеквизиты.Изменен Тогда
				НоваяСтрокаРеквизиты = РеквизитыОбъектов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизиты, СтруктураНоваяСтрокаРеквизиты);
				ЕстьИзмененныеРеквизиты = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьИзмененныеРеквизиты Тогда
			НоваяСтрокаОбъекты = СписокОбъектов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаОбъекты, СтруктураНоваяСтрокаОбъекты);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СписокОбъектов.Количество() = 0 Тогда
		ОчиститьНаСервере();
		Отказ = Истина;
	Иначе
		Элементы.РеквизитыОбъекта.ОтборСтрок = новый ФиксированнаяСтруктура("Объект, Изменен",  СписокОбъектов[0].Объект, Истина); 
 	КонецЕсли;
	
КонецПроцедуры

//Истина - отличаются, Ложь - не отличаются
Функция СравнитьЗначения(Значение1, Значение2)
	                                                    
	Если ТипЗнч(Значение1) <> ТипЗнч(Значение2) Тогда
		Возврат Истина;
		
	ИначеЕсли ТипЗнч(Значение1) = Тип("ТаблицаЗначений") тогда
		Если Значение1.Количество() <> Значение2.Количество() Тогда
			Возврат Истина;
		Иначе                                                         
			//Сравниваем таблицы значений
			Для НомерСтроки = 0 по Значение1.Количество() - 1 Цикл
				Для НомерКолонки = 0 По Значение1.Колонки.Количество() - 1 Цикл
					Если Значение1[НомерСтроки][НомерКолонки] <> Значение2[НомерСтроки][НомерКолонки] Тогда
						Возврат Истина;
					КонецЕсли;
				КонецЦикла;			
			КонецЦикла;
			Возврат Ложь;
			
		КонецЕсли;
		
	Иначе 
		Возврат Значение1 <> Значение2;
	КонецЕсли;
		
	
КонецФункции


&НаКлиенте
Процедура СписокОбъектовПриАктивизацииСтроки(Элемент)
	Если Элементы.СписокОбъектов.ТекущиеДанные <> Неопределено Тогда
		Элементы.РеквизитыОбъекта.ОтборСтрок = новый ФиксированнаяСтруктура("Объект, Изменен",  Элементы.СписокОбъектов.ТекущиеДанные.Объект, Истина);
	Иначе 
		Элементы.РеквизитыОбъекта.ОтборСтрок = новый ФиксированнаяСтруктура("Объект, Изменен",  Неопределено, Истина);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
//	Элементы.РеквизитыОбъекта.ОтборСтрок = новый ФиксированнаяСтруктура("Объект",  Элементы.СписокОбъектов.ТекущиеДанные.Объект); 
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбъектВосстановлен" Тогда
		
		СтрокиТЗ = СписокОбъектов.НайтиСтроки(Новый Структура("Объект", Параметр));
		Если СтрокиТЗ.Количество() <> 0 Тогда 
			СтрокаТЗ = СтрокиТЗ[0];
			СписокОбъектов.Удалить(СтрокаТЗ);
		КонецЕсли;
		
		Если СписокОбъектов.Количество() <> 0 Тогда
			СписокОбъектовПриАктивизацииСтроки(Элементы.СписокОбъектов);
		Иначе
			ЭтаФорма.Закрыть();
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ВосстановитьЭлемент(Команда)
	СписокОбъектовВыбор(Неопределено, Неопределено, Неопределено, Истина);
КонецПроцедуры

