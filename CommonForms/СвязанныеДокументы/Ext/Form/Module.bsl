
&НаСервере
&Вместо("ВывестиРодительскиеОбъекты")
Процедура УУ_ВывестиРодительскиеОбъекты(ТекущийОбъект, ДеревоРодитель, ВыведенныеОбъекты, СлужебныеОбъекты, ИндексСвязейОбъектов)
	
	МетаданныеОбъекта = ТекущийОбъект.Метаданные();
	СписокРеквизитов  = Новый Массив;
	
	Если СлужебныеОбъекты = Неопределено Тогда 
		СлужебныеОбъекты = Новый Соответствие;
	КонецЕсли;
	
	Если ИндексСвязейОбъектов = Неопределено Тогда 
		ИндексСвязейОбъектов = Новый Соответствие;
	КонецЕсли;
	
	ВестиУчетПоДоговорам = ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам");
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
		Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит)
			И Не Метаданные.КритерииОтбора.саб_СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
			
			МетаданныеРеквизита = МетаданныеТипаРеквизита(ТекущийТип);
			Если МетаданныеРеквизита.Метаданные = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЭтоСсылкаНаДоговор(ТекущийТип)
				И (ТекущийОбъект <> ОсновнойОбъект
					Или Не ВестиУчетПоДоговорам) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеРеквизита = ТекущийОбъект[Реквизит.Имя];
			Если ЗначениеЗаполнено(ЗначениеРеквизита)
				И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
				И ЗначениеРеквизита <> ТекущийОбъект
				И СписокРеквизитов.Найти(ЗначениеРеквизита) = Неопределено Тогда
				
				СписокРеквизитов.Добавить(ЗначениеРеквизита);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ИменаРеквизитов = "";
		СодержимоеТЧ = ТекущийОбъект[ТабличнаяЧасть.Имя].Выгрузить(); // ТаблицаЗначений
		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			
			Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит)
				И Не Метаданные.КритерииОтбора.саб_СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
				МетаданныеРеквизита = МетаданныеТипаРеквизита(ТекущийТип);
				Если МетаданныеРеквизита.Метаданные = Неопределено Тогда
					Продолжить;
				КонецЕсли;  
				
				Если ЭтоСсылкаНаДоговор(ТекущийТип)
					И (ТекущийОбъект <> ОсновнойОбъект
						Или Не ВестиУчетПоДоговорам) Тогда
					Продолжить;
				КонецЕсли;
	
				ИменаРеквизитов = ИменаРеквизитов + ?(ИменаРеквизитов = "", "", ", ") + Реквизит.Имя;
				Прервать;
			КонецЦикла;
			
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(ИменаРеквизитов);
		Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл
			
			Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл
			
				ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				МетаданныеЗначения = МетаданныеТипаРеквизита(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения.Метаданные = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеРеквизита = ТекущийОбъект
					Или СписокРеквизитов.Найти(ЗначениеРеквизита) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				СписокРеквизитов.Добавить(ЗначениеРеквизита);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если СписокРеквизитов.Количество() > 0 Тогда
		ВыводимыеОбъекты = ЗапросПоРеквизитамОбъектов(СписокРеквизитов).Выполнить().Выгрузить();
		ВыводимыеОбъекты.Сортировать("Дата");
		Для каждого ВыводимыйОбъект Из ВыводимыеОбъекты Цикл 
			
			Если ИндексСвязейОбъектов[ТекущийОбъект] = ВыводимыйОбъект.Ссылка Тогда 
				Продолжить;
			КонецЕсли;
			
			ИндексСвязейОбъектов[ТекущийОбъект] = ВыводимыйОбъект.Ссылка;
			
			НоваяСтрока = ДобавитьСтрокуВДерево(ДеревоРодитель, ВыводимыйОбъект, ВыведенныеОбъекты);			
			Если НоваяСтрока <> Неопределено
				И Не ДобавляемыйОбъектИмеетсяСредиРодителей(ДеревоРодитель, ВыводимыйОбъект.Ссылка) Тогда
				
				// @skip-check query-in-loop - Рекурсивный алгоритм обработки дерева.
				ВывестиРодительскиеОбъекты(ВыводимыйОбъект.Ссылка, НоваяСтрока, ВыведенныеОбъекты,
					СлужебныеОбъекты, ИндексСвязейОбъектов);
				
			ИначеЕсли СлужебныеОбъекты[ВыводимыйОбъект.Ссылка] = Неопределено Тогда 
				
				СлужебныеОбъекты[ВыводимыйОбъект.Ссылка] = Истина;
				
				Если ВыводимыйОбъект.Ссылка = ОсновнойОбъект Тогда
					Продолжить;
				КонецЕсли;
				
				// @skip-check query-in-loop - Рекурсивный алгоритм обработки дерева.
				ВывестиРодительскиеОбъекты(ВыводимыйОбъект.Ссылка, ДеревоРодитель, ВыведенныеОбъекты,
					СлужебныеОбъекты, ИндексСвязейОбъектов);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&Вместо("ОбъектыПоКритериюОтбора")
Функция УУ_ОбъектыПоКритериюОтбора(ЗначениеКритерияОтбора)
	
	//Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	//УстановитьПривилегированныйРежим(Истина);
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	СвязанныеДокументы.Ссылка
	//|ИЗ
	//|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
	
	Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  
		И Не Метаданные.КритерииОтбора.саб_СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;   
	ТекстДляЗапроса="";
	Если Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора)) Тогда
		ТекстДляЗапроса = ТекстДляЗапроса+"ВЫБРАТЬ
		|	СвязанныеДокументы.Ссылка КАК Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
	КонецЕсли;
	Если Метаданные.КритерииОтбора.саб_СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора)) Тогда  
		Если НЕ ПустаяСтрока(ТекстДляЗапроса) Тогда
			ТекстДляЗапроса=ТекстДляЗапроса+"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		ТекстДляЗапроса = ТекстДляЗапроса+"ВЫБРАТЬ
		|	саб_СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.саб_СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК саб_СвязанныеДокументы";
	КонецЕсли; 
	Запрос.Текст = ТекстДляЗапроса;
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	
	//Это простой костыль от бага в команде "Запрос.Выполнить().Выгрузить()"
	//Команда ".Выгрузить()" из результата запроса работает с БАГОМ для смешанных ссылок
	//на объекты из основной конфигурации и на объекты из расширения. 
	НовыйТЗ = Новый ТаблицаЗначений;
	НовыйТЗ.Колонки.Добавить("Ссылка");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = НовыйТЗ.Добавить();
		НоваяСтрока.Ссылка = Выборка.Ссылка;
	КонецЦикла;
	Возврат НовыйТЗ;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции