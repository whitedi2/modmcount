
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПараметрыАутенфикации = Константы.ПараметрыАутенфикации1С.Получить().Получить();
	Если ТипЗнч(ПараметрыАутенфикации) = Тип("Структура") И ПараметрыАутенфикации.Свойство("Логин") И ПараметрыАутенфикации.Свойство("Пароль") Тогда
		Логин1С = ПараметрыАутенфикации.Логин;
		Пароль1С = ПараметрыАутенфикации.Пароль;
	КонецЕсли;
	
	//++сабОпер
	сабОперПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	//--сабОпер
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	ПараметрыАутенфикации = новый Структура("Логин, Пароль", Логин1С, Пароль1С);
	ХранилищеЗначения = новый ХранилищеЗначения(ПараметрыАутенфикации);
	Константы.ПараметрыАутенфикации1С.Установить(ХранилищеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКМестуХраненияФайловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите путь к месту хранения файлов";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		НаборКонстант.ПутьКМестуХраненияФайлов = ДиалогОткрытияФайла.Каталог;
	Иначе
		Предупреждение("Каталог не выбран");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЛогинПароль1СНаСервере()

	//ОписаниеОшибки = "";
	//Попытка
	//	Прокси = ОбщегоНазначения.WSПрокси(
	//	СервисДанныхЕдиныхГосРеестров.АдресСервиса(),                            // АдресWSDL
	//	СервисДанныхЕдиныхГосРеестров.ПространствоИмен(),                        // URIПространстваИмен
	//	"RequisitesWebServiceEndpointImplService", // ИмяСервиса
	//	"RequisitesWebServiceEndpointImplPort",    // ИмяТочкиПодключения
	//	Логин1С,       							   // ИмяПользователя
	//	Пароль1С,          						   // Пароль
	//	30);                                       //Таймаут
	//Исключение
	//	ИнформацияОбОшибке = ИнформацияОбОшибке();
	//	ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	//КонецПопытки; 
	//
	//Если Прокси <> Неопределено Тогда
	//	Сообщить("Логин и пароль приняты");
	//Иначе 
	//	Сообщить(ОписаниеОшибки);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЛогинПароль1С(Команда)
	//ПроверитьЛогинПароль1СНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьИнтерфейс();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Записать();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура УЧ_ВНХМодульПриИзменении(Элемент)
	Элементы.сабУЧ_ИспользоватьПереводы.Доступность = Не НаборКонстант.УЧ_ВНХМодуль;
	Если НЕ Элемент = Неопределено И НЕ Элементы.сабУЧ_ИспользоватьПереводы.Доступность Тогда
		НаборКонстант.сабУЧ_ИспользоватьПереводы = Ложь;
	КонецЕсли;
	//Если Не Элемент = Неопределено Тогда
	//	Если НЕ НаборКонстант.УЧ_ВНХМодуль Тогда
	//		НаборКонстант.сабУЧ_ИспользоватьПереводы = Ложь;		
	//	КонецЕсли;	
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УЧ_ВНХМодульПриИзменении(Неопределено);
КонецПроцедуры

#Область сабОпер
&НаСервере
Процедура сабОперПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//!!!не забыть поставить в форме "Использовать всегда" НаборКонстант.сабМодульОперационный
	
	НовыйЭлемент = Элементы.Добавить("ЭлементсабМодульОперационный", Тип("ПолеФормы"), Элементы.Группа6);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	НовыйЭлемент.ПутьКДанным = "НаборКонстант.сабМодульОперативныйУчет";
	
	//НовыйЭлементГруппаИнтеграцияЕГАИС = Элементы.Добавить("ЭлементСтраницаИнтеграцияЕгаис", Тип("ГруппаФормы"), Элементы.Группа7);
	//НовыйЭлементГруппаИнтеграцияЕГАИС.Заголовок = "Интеграция ЕГАИС";
		
	//НовыйЭлемент = Элементы.Добавить("ЭлементВестиСведенияДляДекларацийПоАлкогольнойПродукции", Тип("ПолеФормы"), НовыйЭлементГруппаИнтеграцияЕГАИС);
	//НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	//НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	//НовыйЭлемент.ПутьКДанным = "НаборКонстант.ВестиСведенияДляДекларацийПоАлкогольнойПродукции";
	
КонецПроцедуры

&НаКлиенте
Процедура сабУЧ_ИспользоватьПереводыПриИзменении(Элемент)
		Элементы.УЧ_ВНХМодуль.Доступность = Не НаборКонстант.сабУЧ_ИспользоватьПереводы;
	Если НЕ Элемент = Неопределено И НЕ Элементы.УЧ_ВНХМодуль.Доступность Тогда
		НаборКонстант.УЧ_ВНХМодуль = Ложь;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти 
