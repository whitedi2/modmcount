
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ВСети") Тогда
		ВСети = Параметры.ВСети;
	иначе
		ВСети = "Все";
	КонецЕсли;
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	ТекДата = НачалоДня(ТекущаяДата());
	ОбновитьСписокАктивных();
	ОбновитьСпискиСервер();
	
	//предмет
	Если Параметры.Свойство("ПредметОбсужденя") Тогда
		ПредметОбсуждения = Параметры.ПредметОбсужденя;
		Элементы.ПредметОбсуждения.Видимость = ЗначениеЗаполнено(ПредметОбсуждения);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВСетиПриИзменении(Элемент)
	Если ВСети = "В сети" Тогда
		//Элементы.СписокПользователей.ОтборСтрок = Неопределено;
		СписокПользователейТЗ.Сортировать("Пользователь Возр");
		Элементы.СписокПользователей.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ИДКартинки", 4));
	ИначеЕсли ВСети = "Последние" Тогда
		//Элементы.СписокПользователей.ОтборСтрок = Неопределено;
		СписокПользователейТЗ.Сортировать("Новые Убыв, МаксДата Убыв, Пользователь Возр");
		Элементы.СписокПользователей.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Сегодня", Истина));
	Иначе
		СписокПользователейТЗ.Сортировать("ИДКартинки Возр, Пользователь Возр");
		Элементы.СписокПользователей.ОтборСтрок = Неопределено;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.СписокПользователей.ТекущиеДанные;
	СписокТЗ.Очистить();
	СдвигатьВнизЧат = Истина;
	Если НЕ ТекДанные = Неопределено И НЕ ТекДанные.Пользователь = ТекЮзер Тогда
		ТекЮзер = ТекДанные.Пользователь;
		ОбновитьСписки();
	КонецЕсли;
КонецПроцедуры




&НаКлиенте
Процедура Отправить(Команда)
	Если Не Элементы.СписокПользователей.ТекущиеДанные  = Неопределено Тогда
		Если НЕ ПустаяСтрока(Сообщение1) Тогда
			сабВнутреннийЧатСервер.СоздатьНовоеСообщениеЧата(Элементы.СписокПользователей.ТекущиеДанные.Пользователь, Сообщение1);
			ОбновитьСписки();
			Сообщение1 = "";
			//Элементы.Соощение.ОбновлениеТекстаРедактирования = ОбновлениеТекстаРедактирования.ПриИзмененииЗначения;
			//Элементы.Соощение.ОбновитьТекстРедактирования();
		КонецЕсли;
	Иначе
		Предупреждение("Не указан пользователь!");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВСетиПриИзменении(Неопределено);
	
	ПодключитьОбработчикОжидания("ОбновитьСписокАктивныхКлиент", 120);
	ПодключитьОбработчикОжидания("ОбновитьСписки", 5);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокАктивныхКлиент()
	Если Элементы.Соощение.ТекстРедактирования = Сообщение1 Тогда
		ОбновитьСписокАктивных();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки()
	Если Элементы.Соощение.ТекстРедактирования = Сообщение1 Тогда
		ТекДанные = Элементы.СписокПользователей.ТекущиеДанные;
		Если Не ТекДанные  = Неопределено Тогда
			Если НЕ ТекДанные = Неопределено Тогда
				ТекПольз = ТекДанные.Пользователь;
				ОбновитьОкноЧата(ТекПольз);
				//Если ВСети = "Последние" Тогда
				//	СписокПользователейТЗ.Сортировать("Новые Убыв, МаксДата Убыв, Пользователь Возр");
				//КонецЕсли;
				Если ТекДанные.Новые Тогда
					сабВнутреннийЧатСервер.ПрочитатьНовые(ТекПольз);
					Оповестить("ОбновитьДеревоЗадач");
				КонецЕсли;
			КонецЕсли;
			ОбновитьСпискиСервер();
		КонецЕсли;
		ПоказатьВсплывающееОкно();
	КонецЕсли;
КонецПроцедуры



&НаСервере
Процедура ОбновитьСпискиСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК Пользователь,
	               |	ВЫБОР
	               |				КОГДА Пользователи.ПометкаУдаления
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА Пользователи.Наименование В (&МассивАктивных)
	               |							ТОГДА 4
	               |						ИНАЧЕ 5
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	 КАК ИДКартинки,
	               |	ЕСТЬNULL(ВложенныйЗапрос.Новое, 0) КАК Новые,
	               |	ВложенныйЗапрос.МаксДата,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.МаксДата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Сегодня,
	               |	Пользователи.Наименование КАК Пользователь1
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Ч_СообщенияЧата.Автор КАК Автор,
	               |			СУММА(ВЫБОР
	               |					КОГДА Ч_СообщенияЧата.Прочитано = ИСТИНА
	               |						ТОГДА 0
	               |					ИНАЧЕ 1
	               |				КОНЕЦ) КАК Новое,
	               |			МАКСИМУМ(Ч_СообщенияЧата.ДатаВремя) КАК МаксДата
	               |		ИЗ
	               |			РегистрСведений.Ч_СообщенияЧата КАК Ч_СообщенияЧата
	               |		ГДЕ
	               |			Ч_СообщенияЧата.Кому = &Ссылка
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			Ч_СообщенияЧата.Автор) КАК ВложенныйЗапрос
	               |		ПО Пользователи.Ссылка = ВложенныйЗапрос.Автор
	               |ГДЕ
	               |	НЕ Пользователи.Ссылка В (&Ссылка)
	               |	И Пользователи.ПометкаУдаления = ЛОЖЬ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Пользователи.Ссылка,
	               | ВЫБОР
	               |				КОГДА Пользователи.ПометкаУдаления
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА Пользователи.Наименование В (&МассивАктивных)
	               |							ТОГДА 4
	               |						ИНАЧЕ 5
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	,
	               |	ВложенныйЗапрос.МаксДата,
	               |	ЕСТЬNULL(ВложенныйЗапрос.Новое, 0)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Пользователь
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	//Запрос.УстановитьПараметр("Кому", Кому);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("МассивАктивных", СписокАктивных.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ВСети", ВСети);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Всего = 0;
	ВсегоВСети = 0;
	НовыеИтого = 0;
	Для каждого ТекСтрока Из Выборка Цикл
		Всего = Всего + 1;
		ТекСтрокиОтобр = СписокПользователейТЗ.НайтиСтроки(Новый Структура("Пользователь", ТекСтрока.Пользователь));
		Если ТекСтрокиОтобр.Количество() Тогда
			ЗаполнитьЗначенияСвойств(ТекСтрокиОтобр[0], ТекСтрока);
		Иначе
			НоваяСтрока = СписокПользователейТЗ.Вставить(Выборка.Индекс(ТекСтрока));
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЕсли;
		Если ТекСтрока.ИДКартинки = 4 Тогда
			ВсегоВСети = ВсегоВСети + 1;
		КонецЕсли;
		НовыеИтого = НовыеИтого + ТекСтрока.Новые;
	КонецЦикла;
	
	ВсегоOnLine = "В сети: " + Строка(ВсегоВСети) + " из " + Строка(Всего);
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОкноЧата(Кому)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрСведенийЧ_СообщенияЧата.ИдентификаторСообщения,
	               |	РегистрСведенийЧ_СообщенияЧата.Автор,
	               |	РегистрСведенийЧ_СообщенияЧата.Кому,
	               |	РегистрСведенийЧ_СообщенияЧата.Прочитано,
	               |	РегистрСведенийЧ_СообщенияЧата.ДатаВремя КАК ДатаВремя,
	               |	РегистрСведенийЧ_СообщенияЧата.НомерСообщения,
	               |	РегистрСведенийЧ_СообщенияЧата.Оформление,
	               |	РегистрСведенийЧ_СообщенияЧата.Текст,
	               |	ВЫБОР
	               |		КОГДА РегистрСведенийЧ_СообщенияЧата.Автор = &Автор
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ РегистрСведенийЧ_СообщенияЧата.Прочитано
	               |	КОНЕЦ КАК Доставлено
	               |ИЗ
	               |	РегистрСведений.Ч_СообщенияЧата КАК РегистрСведенийЧ_СообщенияЧата
	               |ГДЕ
	               |	(РегистрСведенийЧ_СообщенияЧата.Кому = &Кому
	               |				И РегистрСведенийЧ_СообщенияЧата.Автор В (&Автор)
	               |			ИЛИ РегистрСведенийЧ_СообщенияЧата.Кому = &Автор
	               |				И РегистрСведенийЧ_СообщенияЧата.Автор В (&Кому))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаВремя
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Кому", Кому);
	Запрос.УстановитьПараметр("Автор", ПараметрыСеанса.ТекущийПользователь);
	//Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Для каждого ТекСтрока Из Выборка Цикл
		ОтобрСтр = СписокТЗ.НайтиСтроки(Новый Структура("ИдентификаторСообщения", Строка(ТекСтрока.ИдентификаторСообщения))); 
		Если НЕ ОтобрСтр.Количество() Тогда
			ИД = ИД + 1;
			НовСтр = СписокТЗ.Вставить(Выборка.Индекс(ТекСтрока));
			ЗаполнитьЗначенияСвойств(НовСтр, ТекСтрока);
		Иначе
			ЗаполнитьЗначенияСвойств(ОтобрСтр[0], ТекСтрока);
		КонецЕсли;
	КонецЦикла;  
	Элементы.Список.Обновить();
	КолЗаписей = Выборка.Количество();
	Если КолЗаписей И СдвигатьВнизЧат Тогда
		Элементы.Список.ТекущаяСтрока = ИД - 1;
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокАктивных()
	СеансыИнформационнойБазы = ПолучитьСеансыИнформационнойБазы();
	СписокАктивных.Очистить();
	Для Каждого СеансИБ Из СеансыИнформационнойБазы Цикл
		СписокАктивных.Добавить(СеансИБ.Пользователь.Имя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсплывающееОкно()
	
	
	Если НЕ Трей = Неопределено Тогда
		ТекЗапись = ПолучитьПоследнююЗапись();
		Если НЕ ТекЗапись = Неопределено Тогда
			//Трей.МигатьВТрее = Истина;
			//Трей.Заголовок = "Новое сообщение!";
			//Трей.Мигать(Истина);
			//Трей.ВсплывающееСообщение(ТекЗапись.Текст, "От " + Строка(ТекЗапись.Автор) + " " + Формат(ТекЗапись.ДатаВремя, "ДЛФ=T"), 2, Строка(ТекЗапись.ИдентификаторСообщения));
			
			Заголовок = Формат(ТекЗапись.ДатаВремя, "ДЛФ=T") + "
			|Сообщение чата 1С от 
			|"+ Строка(ТекЗапись.Автор);
			Текст = ТекЗапись.Текст;
			ИмяФайлаКартинки=""; // пусто - из ресурса ВК
			ВремяПоказа=10;
			Трей.Оповещение(Заголовок,Текст,ИмяФайлаКартинки,ВремяПоказа);
			
		КонецЕсли;
	КонецЕсли;

	//ОбновитьСпискиСервер();
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююЗапись()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ч_СообщенияЧата.Текст,
	|	Ч_СообщенияЧата.ДатаВремя,
	|	Ч_СообщенияЧата.ИдентификаторСообщения,
	|	Ч_СообщенияЧата.Автор,
	|	Ч_СообщенияЧата.Кому
	|ИЗ
	|	РегистрСведений.Ч_СообщенияЧата КАК Ч_СообщенияЧата
	|ГДЕ
	|	Ч_СообщенияЧата.Кому = &Кому
	|	И Ч_СообщенияЧата.Показано = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Кому", ПараметрыСеанса.ТекущийПользователь);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = РегистрыСведений.Ч_СообщенияЧата.СоздатьМенеджерЗаписи();
		НоваяЗапись.ИдентификаторСообщения = Выборка.ИдентификаторСообщения;
		НоваяЗапись.Автор = Выборка.Автор;
		НоваяЗапись.Кому = Выборка.Кому;
		НоваяЗапись.Прочитать();
		Если НоваяЗапись.Выбран() Тогда
			НоваяЗапись.Показано = Истина;	
			НоваяЗапись.Записать();
		КонецЕсли;
		Возврат Новый Структура("Текст, Автор, ДатаВремя, ИдентификаторСообщения", Выборка.Текст, Выборка.Автор, Выборка.ДатаВремя, Выборка.ИдентификаторСообщения);
	КонецЦикла;



КонецФункции // ()

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ТекИндексСтроки = СписокТЗ.Индекс(СписокТЗ.НайтиПоИдентификатору(Элементы.Список.ТекущаяСтрока));
		Если КолЗаписей - 1 = ТекИндексСтроки Тогда
			СдвигатьВнизЧат = Истина;
		Иначе
			СдвигатьВнизЧат = ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элементы.СписокПользователей.ТекущиеДанные.Пользователь);
КонецПроцедуры







