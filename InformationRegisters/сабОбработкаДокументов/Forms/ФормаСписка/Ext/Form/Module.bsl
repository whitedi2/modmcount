
&НаСервереБезКонтекста
Процедура ОбработатьДокументыБУНаСервере(ТекДокументСтруктура, СтруктураВозврата = Неопределено)
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ = &ТипДокументаБУ";
	
	Запрос.УстановитьПараметр("ТипДокументаБУ", ТекДокументСтруктура.Ссылка.Метаданные().Имя);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ЕстьСоответствие = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипДокументаБУ = "РеализацияТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Реализация");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_ПоступлениеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПоступлениеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПоступлениеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеСРасчетногоСчета"  И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если ТипЗнч(ТекДокументСтруктура.Ссылка.ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ЗначениеЗаполнено(ТекДокументСтруктура.Ссылка.ДокументОснование)
				И ЗначениеЗаполнено(ТекДокументСтруктура.Ссылка.ДокументОснование.Заявка) Тогда
				
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка.ДокументОснование);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");
					СтруктураВозврата.Вставить("Ссылка", ТекДокументСтруктура.Ссылка.ДокументОснование);
				КонецЕсли; 
				
			Иначе
				
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
				КонецЕсли;
				
			КонецЕсли; 
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеНаРасчетныйСчет" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РасходныйКассовыйОрдер" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПриходныйКассовыйОрдер" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеТоваров" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_СписаниеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОприходованиеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ОприходованиеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ОприходованиеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ОприходованиеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПередачаТоваров" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_СписаниеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;

		Если Выборка.ТипДокументаБУ = "АвансовыйОтчет" И Выборка.ТипДокументаУУ = "УЧ_АвансовыйОтчет" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_АвансовыйОтчет.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_АвансовыйОтчет");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ВозвратТоваровОтПокупателя" И Выборка.ТипДокументаУУ = "УЧ_Возврат" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Возврат.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Возврат");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ВозвратТоваровПоставщику" И Выборка.ТипДокументаУУ = "УЧ_ВозвратТоваровПоставщику" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВозвратТоваровПоставщику.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВозвратТоваровПоставщику");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
						
		Если Выборка.ТипДокументаБУ = "КорректировкаПоступления" И Выборка.ТипДокументаУУ = "УЧ_КорректировкаПоступления" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_КорректировкаПоступления.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_КорректировкаПоступления");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "КорректировкаРеализации" И Выборка.ТипДокументаУУ = "УЧ_КорректировкаРеализации" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_КорректировкаРеализации.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_КорректировкаРеализации");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ТребованиеНакладная" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеМатериаловВПроизводство" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеМатериаловВПроизводство.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеМатериаловВПроизводство");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОтчетПроизводстваЗаСмену" И Выборка.ТипДокументаУУ = "УЧ_ВыпускПродукции" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВыпускПродукции.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВыпускПродукции");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;

		Если Выборка.ТипДокументаБУ = "ОтчетОРозничныхПродажах" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Реализация");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РозничнаяПродажа" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Реализация");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПеремещениеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаУУ = "Исключено" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Операция.СоздатьДокумент();
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Предприятие = ТекДокументСтруктура.Ссылка.Организация.Предприятие;
				НоваяОперация.Организация = ТекДокументСтруктура.Ссылка.Организация;
				НоваяОперация.Дата = Выборка.Период;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Сообщить("Тип документа добавлен в исключения");
			КонецЕсли;

			ЕстьСоответствие = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьСоответствие Тогда
		
		Если СтруктураВозврата = Неопределено Тогда
			НоваяОперация = Документы.УЧ_Операция.СоздатьДокумент();
			НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
			НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
			НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Операция");	
		КонецЕсли;
		
		ЕстьСоответствие = Истина;
	КонецЕсли;
	
	Если СтруктураВозврата = Неопределено Тогда
		НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
		НаборЗаписей.ДокументБУ = ТекДокументСтруктура.Ссылка;
		НаборЗаписей.ДокументУУ = НоваяОперация.Ссылка;
		НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
		НаборЗаписей.ДатаОбработки = ТекущаяДата();
		НаборЗаписей.Записать();
	КонецЕсли; 
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНеобработанныеДокументы()
	
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	|ИЗ
	|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	|ГДЕ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СписокНеобработанных.ТекстЗапроса;
	Запрос.УстановитьПараметр("Дата", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	МассивСтруктур = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивСтруктур.Добавить(Новый Структура("Ссылка", ТекСтрока.Ссылка)); 
	КонецЦикла; 
	Возврат МассивСтруктур;
КонецФункции // ()

&НаСервере
Функция ПолучитьНеобработанныеДокументыРозница()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	|ИЗ
	|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	|ГДЕ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СписокРозничныеПродажи.ТекстЗапроса;
	Запрос.УстановитьПараметр("Дата", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	МассивСтруктур = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивСтруктур.Добавить(Новый Структура("Ссылка", ТекСтрока.Ссылка)); 
	КонецЦикла; 
	Возврат МассивСтруктур;
КонецФункции // ()


&НаКлиенте
Процедура ОбработатьДокументыБУ(Команда)
	
	Если Команда.Имя = "ОбработатьВыделенныеДокументыБУ" Тогда
		ДокументыКОбработке = Новый Массив;
		Для каждого ТекСтрока Из Элементы.СписокНеобработанных.ВыделенныеСтроки Цикл
			ДокументыКОбработке.Добавить(Новый Структура("Ссылка", ТекСтрока));		
		КонецЦикла; 
	Иначе	
		ДокументыКОбработке = ПолучитьНеобработанныеДокументы();
	КонецЕсли;
	
	счСтроки = 0;
	ВремяНачала = ТекущаяДата();
	ЧислоСтрок  = ДокументыКОбработке.Количество();
	
	Для каждого ТекОбр Из ДокументыКОбработке Цикл
		счСтроки = счСтроки + 1;
		СкоростьЗагрузки = ?(ТекущаяДата() - ВремяНачала = 0, 0, Окр(счСтроки / (ТекущаяДата() - ВремяНачала), 2));
		ОсталосьВремени = Окр((ТекущаяДата() - ВремяНачала) / счСтроки * (ЧислоСтрок - счСтроки) / 60, 2);
		
		Если счСтроки / 100 = Окр(счСтроки / 100, 0) ИЛИ СкоростьЗагрузки < 20 ИЛИ ЧислоСтрок < 100 Тогда
			Состояние("Обработка..." + " Осталось " + Строка(ОсталосьВремени) + " мин." + " Скорость " + Строка(СкоростьЗагрузки) + " стр/сек",
			счСтроки / ЧислоСтрок * 100, "" +  Строка(ТекОбр.Ссылка) +
			" (" + Строка(счСтроки) + "/" + Строка(ЧислоСтрок) + ")" );
		КонецЕсли;
		ОбработкаПрерыванияПользователя();
		
		Попытка
			ОбработатьДокументыБУНаСервере(ТекОбр);	
		Исключение
			Сообщить(ОписаниеОшибки());
			Прервать;	
		КонецПопытки;
		
	КонецЦикла;
	
	Элементы.СписокНеобработанных.Обновить();
	Если Элементы.РозничныеПродажи.Видимость Тогда
		Элементы.СписокРозничныеПродажи.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаВводаОстатков = Дата('00010101');
	ТекСтрока = Справочники.сабМониторВнедрения.НайтиПоНаименованию("Дата остатков", Истина);
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		ДатаВводаОстатков = ТекСтрока.Значение;
	КонецЕсли;
	
	СписокНеобработанных.ТекстЗапроса = "ВЫБРАТЬ
	|	ЖурналДокументовЖурналОпераций.Дата КАК Дата,
	|	ЖурналДокументовЖурналОпераций.Номер КАК Номер,
	|	ЖурналДокументовЖурналОпераций.Организация КАК Организация,
	|	ЖурналДокументовЖурналОпераций.Информация КАК Информация,
	|	ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|	ЖурналДокументовЖурналОпераций.ВидОперации КАК ВидОперации,
	|	ЖурналДокументовЖурналОпераций.Комментарий КАК Комментарий,
	|	ЖурналДокументовЖурналОпераций.Тип КАК Тип,
	|	сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Ссылка,
	|	Хозрасчетный.Регистратор КАК Регистратор
	|ИЗ
	|	ЖурналДокументов.ЖурналОпераций КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = Хозрасчетный.Регистратор
	|			И (Хозрасчетный.НомерСтроки = 1)
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И НЕ Хозрасчетный.Регистратор ЕСТЬ NULL
	|	И НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов)
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И ЖурналДокументовЖурналОпераций.ПометкаУдаления = Ложь
	|	И (ЖурналДокументовЖурналОпераций.Проведен = Истина ИЛИ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) = Тип(Документ.ОперацияБух))
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))";
	
	СписокИзмененные.Параметры.УстановитьЗначениеПараметра("Дата", ДатаВводаОстатков);
	СписокНеобработанных.Параметры.УстановитьЗначениеПараметра("Дата", ДатаВводаОстатков);
	
	СписокРозничныеПродажи.ТекстЗапроса = "ВЫБРАТЬ
	|	ЖурналДокументовЖурналОпераций.Дата КАК Дата,
	|	ЖурналДокументовЖурналОпераций.Номер КАК Номер,
	|	ЖурналДокументовЖурналОпераций.Организация КАК Организация,
	|	"""" КАК Информация,
	|	ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|	ЖурналДокументовЖурналОпераций.ВидОперации КАК ВидОперации,
	|	ЖурналДокументовЖурналОпераций.Комментарий КАК Комментарий,
	|	ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) КАК Тип,
	|	сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Ссылка,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.РозничнаяПродажа КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И ЖурналДокументовЖурналОпераций.ПометкаУдаления = Ложь
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))";
	
	СписокРозничныеПродажи.Параметры.УстановитьЗначениеПараметра("Дата", ДатаВводаОстатков);

	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	|ИЗ
	|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	|ГДЕ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));	
	КонецЦикла;
	СписокНеобработанных.Параметры.УстановитьЗначениеПараметра("МассивИсклТипов", МассивИсклТипов);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОсновании(Команда)
	
	Если Элементы.Группа1.ТекущаяСтраница = Элементы.РозничныеПродажи Тогда
		ДокументыКОбработке = Новый Массив;
		Для каждого ТекСтрока Из Элементы.СписокРозничныеПродажи.ВыделенныеСтроки Цикл
			ДокументыКОбработке.Добавить(Новый Структура("Ссылка", ТекСтрока));		
		КонецЦикла; 
	Иначе	
		ДокументыКОбработке = Новый Массив;
		Для каждого ТекСтрока Из Элементы.СписокНеобработанных.ВыделенныеСтроки Цикл
			ДокументыКОбработке.Добавить(Новый Структура("Ссылка", ТекСтрока));		
		КонецЦикла; 
	КонецЕсли;
	
	Для каждого ТекОбр Из ДокументыКОбработке Цикл
		
		БухСсылка = ТекОбр.Ссылка;
		
		СтруктураДанных = Новый Структура;
		ОбработатьДокументыБУНаСервере(ТекОбр, СтруктураДанных);
		Если СтруктураДанных.Свойство("Ссылка") Тогда
			ТекОбр.Ссылка = СтруктураДанных.Ссылка;
		КонецЕсли;
		
		Если НЕ СтруктураДанных.Количество() Тогда
			Прервать;		
		КонецЕсли;
		
		ДопПараметр = Новый Структура("ДокументБУ", БухСсылка); 
		ТекФормаБП = ПолучитьФорму("Документ." + СтруктураДанных.ИмяФормы +".ФормаОбъекта", Новый Структура("Основание", ТекОбр.Ссылка));
		ТекФормаБП.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
		ДопПараметр.Вставить("ОбъектУУ", ТекФормаБП);
		Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончания", ЭтотОбъект, ДопПараметр);
		ТекФормаБП.ОписаниеОповещенияОЗакрытии = Оп;
		
		//рекв ДокументБУ
		КлючУникальности   = Новый УникальныйИдентификатор;
		СтруктураРеквизита = Новый Структура("ДокументБУРекв", КлючУникальности);
		ЗаполнитьЗначенияСвойств(СтруктураРеквизита, ТекФормаБП);
		Если СтруктураРеквизита["ДокументБУРекв"] <> КлючУникальности Тогда
			ТекФормаБП.ДокументБУРекв = БухСсылка;		
		КонецЕсли;
		
		ТекФормаБП.Открыть();
		Прервать;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеОкончания(Результат, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Параметры.ОбъектУУ.Объект.Ссылка) Тогда
		Параметры.Вставить("ДокументУУ", Параметры.ОбъектУУ.Объект.Ссылка);
		Параметры.ОбъектУУ = Неопределено;
		СоздатьЗаписьРегистра(Параметры);
		Элементы.СписокНеобработанных.Обновить();
		Если Элементы.РозничныеПродажи.Видимость Тогда
			Элементы.СписокРозничныеПродажи.Обновить();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


&НаСервереБезКонтекста
Процедура СоздатьЗаписьРегистра(Параметры)
	
	НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	НаборЗаписей.ДокументБУ = Параметры.ДокументБУ;
	НаборЗаписей.ДокументУУ = Параметры.ДокументУУ;
	НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
	НаборЗаписей.ДатаОбработки = ТекущаяДата();
	НаборЗаписей.Записать();

КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПровереноНаСервере(Документ)
	НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументБУ.Установить(Документ);
	НаборЗаписей.Прочитать();
	Для каждого ТекСТрока Из НаборЗаписей Цикл
		ТекСТрока.Модифицирован = Ложь;
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры


&НаКлиенте
Процедура Проверено(Команда)
	ПровереноНаСервере(Элементы.СписокИзмененные.ТекущаяСтрока);
	Элементы.СписокИзмененные.Обновить();
КонецПроцедуры


&НаКлиенте
Процедура СписокИзмененныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СписокИзмененныеДокументУУ" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,Элементы.СписокИзмененные.ТекущиеДанные.ДокументУУ);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВсеДокументыБУРозница(Команда)
	
	Если Команда.Имя = "ОбработатьВыделенныеДокументыБУРозница" Тогда
		ДокументыКОбработке = Новый Массив;
		Для каждого ТекСтрока Из Элементы.СписокРозничныеПродажи.ВыделенныеСтроки Цикл
			ДокументыКОбработке.Добавить(Новый Структура("Ссылка", ТекСтрока));		
		КонецЦикла; 
	Иначе	
		ДокументыКОбработке = ПолучитьНеобработанныеДокументыРозница();
	КонецЕсли;
	
	счСтроки = 0;
	ВремяНачала = ТекущаяДата();
	ЧислоСтрок  = ДокументыКОбработке.Количество();
	
	Для каждого ТекОбр Из ДокументыКОбработке Цикл
		счСтроки = счСтроки + 1;
		СкоростьЗагрузки = ?(ТекущаяДата() - ВремяНачала = 0, 0, Окр(счСтроки / (ТекущаяДата() - ВремяНачала), 2));
		ОсталосьВремени = Окр((ТекущаяДата() - ВремяНачала) / счСтроки * (ЧислоСтрок - счСтроки) / 60, 2);
		
		Если счСтроки / 100 = Окр(счСтроки / 100, 0) ИЛИ СкоростьЗагрузки < 20 ИЛИ ЧислоСтрок < 100 Тогда
			Состояние("Обработка..." + " Осталось " + Строка(ОсталосьВремени) + " мин." + " Скорость " + Строка(СкоростьЗагрузки) + " стр/сек",
			счСтроки / ЧислоСтрок * 100, "" +  Строка(ТекОбр.Ссылка) +
			" (" + Строка(счСтроки) + "/" + Строка(ЧислоСтрок) + ")" );
		КонецЕсли;
		ОбработкаПрерыванияПользователя();
		
		Попытка
			ОбработатьДокументыБУНаСервере(ТекОбр);	
		Исключение
			Сообщить(ОписаниеОшибки());
			Прервать;	
		КонецПопытки;
		
	КонецЦикла;
	
	Элементы.СписокРозничныеПродажи.Обновить();
	
КонецПроцедуры


