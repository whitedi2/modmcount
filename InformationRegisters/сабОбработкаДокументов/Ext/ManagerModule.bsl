Функция ПолучитьНеобработанныеДокументы(ВыбратьПервые = Неопределено, ТолькоСАвтопроведением = Ложь) Экспорт
	
	ДатаВводаОстатков = Дата('00010101');
	ТекСтрока = Справочники.сабМониторВнедрения.НайтиПоНаименованию("Дата остатков", Истина);
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		ДатаВводаОстатков = ТекСтрока.Значение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	(сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	ИЛИ ВЫБОР
	               |			КОГДА &ТолькоСАвтопроведением
	               |				ТОГДА сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ИСТИНА
	               |			ИНАЧЕ Ложь
	               |		КОНЕЦ ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только УУ-БУ"")";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		Если НЕ Строка(ТекСтрока) = "ПрочиеДокументы" Тогда
			МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));
		Иначе //исключаем все прочие документы
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
			|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
			|ИЗ
			|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
			|ГДЕ
			|	НЕ сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ И
			|	сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = Ложь";
			
			Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
			Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
			
			Результат = Запрос.Выполнить();
			ВыборкаДляАвтопроведения = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
			МассивВклТипов = Новый Массив;
			Для каждого ТекСтрока Из ВыборкаДляАвтопроведения Цикл
				МассивВклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));		
			КонецЦикла;
			
			Набор = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
			МассРег = Набор.Отбор.Регистратор.ТипЗначения.Типы();
			Для каждого ТекТип Из МассРег Цикл
				Если МассивВклТипов.Найти(ТекТип) = Неопределено Тогда
					МассивИсклТипов.Добавить(ТекТип);				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ,
	               |	сабСоответствиеТиповДокументов.ВидОперацииБУ КАК ВидОперацииБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	НЕ сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	И ВЫБОР
	               |			КОГДА &ТолькоСАвтопроведением
	               |				ТОГДА сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ И (сабСоответствиеТиповДокументов.НаправлениеОбмена = """" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Любое"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Нет"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только БУ-УУ"") ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	МассивВклВидовОпераций = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ВидОперацииБУ) Тогда
			МассивВклВидовОпераций.Добавить(ТекСтрока.ВидОперацииБУ);	
		ИначеЕсли ТекСтрока.ТипДокументаБУ = "ПоступлениеТоваровУслуг" Тогда
			Для каждого ТекВид Из Перечисления.ВидыОперацийПоступлениеТоваровУслуг Цикл
				МассивВклВидовОпераций.Добавить(ТекВид);
			КонецЦикла;
		ИначеЕсли ТекСтрока.ТипДокументаБУ = "РеализацияТоваровУслуг" Тогда
			Для каждого ТекВид Из Перечисления.ВидыОперацийРеализацияТоваров Цикл
				МассивВклВидовОпераций.Добавить(ТекВид);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаНеобработанных(ВыбратьПервые);
	Запрос.УстановитьПараметр("Дата", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	Запрос.УстановитьПараметр("МассивВклВидовОпераций", МассивВклВидовОпераций);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	МассивСтруктур = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивСтруктур.Добавить(Новый Структура("Ссылка", ТекСтрока.Ссылка)); 
	КонецЦикла; 
	
	Возврат МассивСтруктур;
	
КонецФункции // ()

Функция ПолучитьНеобработанныеДокументыУУ(ФоноваяОбработка = Неопределено, ТолькоСАвтопроведением = Ложь) Экспорт
	
	ДатаВводаОстатков = Дата('00010101');
	ТекСтрока = Справочники.сабМониторВнедрения.НайтиПоНаименованию("Дата остатков", Истина);
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		ДатаВводаОстатков = ТекСтрока.Значение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	(сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	ИЛИ ВЫБОР
	               |			КОГДА &ТолькоСАвтопроведением
	               |				ТОГДА сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ИСТИНА
	               |			ИНАЧЕ Ложь
	               |		КОНЕЦ ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только БУ-УУ"")";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		Если НЕ Строка(ТекСтрока) = "ПрочиеДокументы" Тогда
			МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));
		Иначе //исключаем все прочие документы
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
			               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
			               |ИЗ
			               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
			               |ГДЕ
			               |	НЕ сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
			               |	И сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ЛОЖЬ
			               |	И (сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Любое""
			               |			ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только УУ-БУ"")";
			
			Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
			Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
			
			Результат = Запрос.Выполнить();
			ВыборкаДляАвтопроведения = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаУУ");
			МассивВклТипов = Новый Массив;
			Для каждого ТекСтрока Из ВыборкаДляАвтопроведения Цикл
				МассивВклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));		
			КонецЦикла;
			
			Набор = РегистрыБухгалтерии.Учетный.СоздатьНаборЗаписей();
			МассРег = Набор.Отбор.Регистратор.ТипЗначения.Типы();
			Для каждого ТекТип Из МассРег Цикл
				Если МассивВклТипов.Найти(ТекТип) = Неопределено Тогда
					МассивИсклТипов.Добавить(ТекТип);				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ,
	               |	сабСоответствиеТиповДокументов.ВидОперацииБУ КАК ВидОперацииБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	НЕ сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	И ВЫБОР
	               |			КОГДА &ТолькоСАвтопроведением
	               |				ТОГДА сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ И (сабСоответствиеТиповДокументов.НаправлениеОбмена = """" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Любое"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Нет"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только УУ-БУ"") ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	МассивВклВидовОпераций = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ВидОперацииБУ) Тогда
			МассивВклВидовОпераций.Добавить(ТекСтрока.ВидОперацииБУ);	
		ИначеЕсли ТекСтрока.ТипДокументаБУ = "ПоступлениеТоваровУслуг" Тогда
			Для каждого ТекВид Из Перечисления.ВидыОперацийПоступлениеТоваровУслуг Цикл
				МассивВклВидовОпераций.Добавить(ТекВид);
			КонецЦикла;
		ИначеЕсли ТекСтрока.ТипДокументаБУ = "РеализацияТоваровУслуг" Тогда
			Для каждого ТекВид Из Перечисления.ВидыОперацийРеализацияТоваров Цикл
				МассивВклВидовОпераций.Добавить(ТекВид);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаНеобработанныхУУ(ФоноваяОбработка);
	Запрос.УстановитьПараметр("Дата", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	Запрос.УстановитьПараметр("МассивВклВидовОпераций", МассивВклВидовОпераций);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	МассивСтруктур = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивСтруктур.Добавить(Новый Структура("Ссылка", ТекСтрока.Ссылка)); 
	КонецЦикла; 
	
	Возврат МассивСтруктур;
	
КонецФункции

Функция ПолучитьНеобработанныеДокументыРозница(ВыбратьПервые = Неопределено) Экспорт
	
	ДатаВводаОстатков = Дата('00010101');
	ТекСтрока = Справочники.сабМониторВнедрения.НайтиПоНаименованию("Дата остатков", Истина);
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		ДатаВводаОстатков = ТекСтрока.Значение;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	(сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	ИЛИ сабСоответствиеТиповДокументов.ТипДокументаБУ = &ТипДокументаБУ)
	               |	И сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ИСТИНА";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТипДокументаБУ", "РозничнаяПродажа");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаНеобработанныхРозница(ВыбратьПервые);
	Запрос.УстановитьПараметр("Дата", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	МассивСтруктур = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		МассивСтруктур.Добавить(Новый Структура("Ссылка", ТекСтрока.Ссылка)); 
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции // ()

Процедура ОбработатьДокументыБУНаСервере(ТекДокументСтруктура, СтруктураВозврата = Неопределено) Экспорт
	
	//НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ,
	               |	сабСоответствиеТиповДокументов.ВидОперацииБУ КАК ВидОперацииБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ = &ТипДокументаБУ
	               |	И (сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Нет"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = """" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Любое""
	               |			ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только БУ-УУ"")";
	
	Запрос.УстановитьПараметр("ТипДокументаБУ", ТекДокументСтруктура.Ссылка.Метаданные().Имя);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ЕстьСоответствие = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЕстьСоответствие Тогда
			Прервать;		
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РеализацияТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			СоздаватьДокументТипа = Ложь;
			Если ЗначениеЗаполнено(Выборка.ВидОперацииБУ) Тогда
				Если Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
					СоздаватьДокументТипа = Истина;	
				КонецЕсли;
			Иначе
				СоздаватьДокументТипа = Истина;
			КонецЕсли;
			
			Если СоздаватьДокументТипа Тогда
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка); 
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Реализация");	
				КонецЕсли;
				
				ЕстьСоответствие = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_ПоступлениеТоваров" Тогда
			
			СоздаватьДокументТипа = Ложь;
			Если ЗначениеЗаполнено(Выборка.ВидОперацииБУ) Тогда
				Если Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
					СоздаватьДокументТипа = Истина;	
				КонецЕсли;
			Иначе
				СоздаватьДокументТипа = Истина;
			КонецЕсли;
			
			Если СоздаватьДокументТипа Тогда
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_ПоступлениеТоваров.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПоступлениеТоваров");	
				КонецЕсли;
				
				ЕстьСоответствие = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеСРасчетногоСчета"  И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			//Если ТипЗнч(ТекДокументСтруктура.Ссылка.ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ЗначениеЗаполнено(ТекДокументСтруктура.Ссылка.ДокументОснование)
			//	И ЗначениеЗаполнено(ТекДокументСтруктура.Ссылка.ДокументОснование.Заявка) Тогда
			//	
			//	Если СтруктураВозврата = Неопределено Тогда
			//		НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
			//		НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка.ДокументОснование);
			//		НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
			//		НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
			//		НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			//	Иначе
			//		СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");
			//		СтруктураВозврата.Вставить("Ссылка", ТекДокументСтруктура.Ссылка.ДокументОснование);
			//	КонецЕсли; 
			//	
			//Иначе
				
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
				КонецЕсли;
				
			//КонецЕсли; 
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеНаРасчетныйСчет" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РасходныйКассовыйОрдер" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПриходныйКассовыйОрдер" И Выборка.ТипДокументаУУ = "УЧ_ДвижениеДС" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ДвижениеДС.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ДвижениеДС");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеТоваров" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_СписаниеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОприходованиеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ОприходованиеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ОприходованиеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ОприходованиеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПередачаТоваров" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" И Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_СписаниеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПередачаТоваров" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеМатериаловВПроизводство" И Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеМатериаловВПроизводство.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеМатериаловВПроизводство");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "АвансовыйОтчет" И Выборка.ТипДокументаУУ = "УЧ_АвансовыйОтчет" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_АвансовыйОтчет.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_АвансовыйОтчет");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ВозвратТоваровОтПокупателя" И Выборка.ТипДокументаУУ = "УЧ_Возврат" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Возврат.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка); 
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Возврат");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ВозвратТоваровПоставщику" И Выборка.ТипДокументаУУ = "УЧ_ВозвратТоваровПоставщику" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВозвратТоваровПоставщику.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВозвратТоваровПоставщику");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "КорректировкаПоступления" И Выборка.ТипДокументаУУ = "УЧ_КорректировкаПоступления" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_КорректировкаПоступления.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_КорректировкаПоступления");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "КорректировкаРеализации" И Выборка.ТипДокументаУУ = "УЧ_КорректировкаРеализации" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_КорректировкаРеализации.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_КорректировкаРеализации");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ТребованиеНакладная" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеМатериаловВПроизводство" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеМатериаловВПроизводство.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеМатериаловВПроизводство");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПередачаМатериаловВЭксплуатацию" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеМатериаловВПроизводство" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеМатериаловВПроизводство.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеМатериаловВПроизводство");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеМатериаловИзЭксплуатации" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_СписаниеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОтчетПроизводстваЗаСмену" И Выборка.ТипДокументаУУ = "УЧ_ВыпускПродукции" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВыпускПродукции.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВыпускПродукции");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеИзПереработки" И Выборка.ТипДокументаУУ = "УЧ_ВыпускПродукции" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВыпускПродукции.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВыпускПродукции");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОтчетОРозничныхПродажах" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Реализация");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РозничнаяПродажа" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			СоздаватьДокументТипа = Ложь;
			Если ЗначениеЗаполнено(Выборка.ВидОперацииБУ) Тогда
				Если Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
					СоздаватьДокументТипа = Истина;	
				КонецЕсли;
			Иначе
				СоздаватьДокументТипа = Истина;
			КонецЕсли;
			
			Если СоздаватьДокументТипа Тогда
				
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_Реализация.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", Выборка.ТипДокументаУУ);	
				КонецЕсли;
				
				ЕстьСоответствие = Истина;
				
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РозничнаяПродажа" И Выборка.ТипДокументаУУ = "УЧ_Возврат" Тогда
			
			СоздаватьДокументТипа = Ложь;
			Если ЗначениеЗаполнено(Выборка.ВидОперацииБУ) Тогда
				Если Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Тогда
					СоздаватьДокументТипа = Истина;	
				КонецЕсли;
			Иначе
				СоздаватьДокументТипа = Истина;
			КонецЕсли;
			
			Если СоздаватьДокументТипа Тогда
				
				Если СтруктураВозврата = Неопределено Тогда
					НоваяОперация = Документы.УЧ_Возврат.СоздатьДокумент();
					НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
					НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
					НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
					НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					СтруктураВозврата.Вставить("ИмяФормы", Выборка.ТипДокументаУУ);	
				КонецЕсли;
				
				ЕстьСоответствие = Истина;
				
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПеремещениеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ПеремещениеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ПеремещениеТоваров");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "НачислениеЗарплаты" И Выборка.ТипДокументаУУ = "УЧ_НачислениеЗП" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_НачислениеЗП.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_НачислениеЗП");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОтражениеЗарплатыВБухучете" И Выборка.ТипДокументаУУ = "УЧ_НачислениеЗП" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_НачислениеЗП.СоздатьДокумент();

				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_НачислениеЗП");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если (Выборка.ТипДокументаБУ = "ВедомостьНаВыплатуЗарплаты"
			ИЛИ Выборка.ТипДокументаБУ = "ВедомостьНаВыплатуЗарплатыВБанк" 
			ИЛИ Выборка.ТипДокументаБУ = "ВедомостьНаВыплатуЗарплатыВКассу") И Выборка.ТипДокументаУУ = "УЧ_ВыплатаЗП" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВыплатаЗП.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВыплатаЗП");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "КомплектацияНоменклатуры" И Выборка.ТипДокументаУУ = "УЧ_ВыпускПродукции" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_ВыпускПродукции.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_ВыпускПродукции");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		//Если Выборка.ТипДокументаУУ = "Исключено" И (Выборка.ВидОперацииБУ = ТекДокументСтруктура.Ссылка.ВидОперации Или Не ЗначениеЗаполнено(Выборка.ВидОперацииБУ)) Тогда
			
			//Если СтруктураВозврата = Неопределено Тогда
			//	НоваяОперация = Документы.УЧ_Операция.СоздатьДокумент();
			//	НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
			//	НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
			//	НоваяОперация.Предприятие = ТекДокументСтруктура.Ссылка.Организация.Предприятие;
			//	НоваяОперация.Организация = ТекДокументСтруктура.Ссылка.Организация;
			//	НоваяОперация.Дата = Выборка.Период;
			//	НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			//Иначе
				//Сообщить("Тип документа добавлен в исключения");
			//КонецЕсли;
			
			//ЕстьСоответствие = Истина;
		//КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьСоответствие Тогда
		
		СоздаватьДокументТипа = Ложь;
		
		Если Метаданные.РегистрыСведений.сабОбработкаДокументов.Измерения.ДокументБУ.Тип.СодержитТип(ТипЗнч(ТекДокументСтруктура.Ссылка)) Тогда
			СоздаватьДокументТипа = Истина;
		Иначе
			СоздаватьДокументТипа = Ложь;
			Сообщить("Не задано соответствие для документа: "+ТекДокументСтруктура.Ссылка+". Документ не может быть обработан!");
		КонецЕсли;
		
		Если СоздаватьДокументТипа Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.УЧ_Операция.СоздатьДокумент();
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Операция");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураВозврата = Неопределено Тогда
		НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
		НаборЗаписей.ДокументБУ = ТекДокументСтруктура.Ссылка;
		НаборЗаписей.ДокументУУ = НоваяОперация.Ссылка;
		НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
		НаборЗаписей.ДатаОбработки = ТекущаяДата();
		НаборЗаписей.Записать();
	КонецЕсли; 
	
	//ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ОбработатьДокументыУУНаСервере(ТекДокументСтруктура, СтруктураВозврата = Неопределено) Экспорт
	
	//НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	               |	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ,
	               |	сабСоответствиеТиповДокументов.ВидОперацииБУ КАК ВидОперацииБУ
	               |ИЗ
	               |	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	               |ГДЕ
	               |	сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	               |	И (сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Нет"" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = """" ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Любое""
	               |			ИЛИ сабСоответствиеТиповДокументов.НаправлениеОбмена = ""Только УУ-БУ"")";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", ТекДокументСтруктура.Ссылка.Метаданные().Имя);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ЕстьСоответствие = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЕстьСоответствие Тогда
			Прервать;		
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "РеализацияТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_Реализация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка); 
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "РеализацияТоваровУслуг");
				СтруктураВозврата.Вставить("ВидОперации", Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия);
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПоступлениеТоваровУслуг" И Выборка.ТипДокументаУУ = "УЧ_ПоступлениеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "ПоступлениеТоваровУслуг");
				СтруктураВозврата.Вставить("ВидОперации", Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия);
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "СписаниеТоваров" И Выборка.ТипДокументаУУ = "УЧ_СписаниеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.СписаниеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "СписаниеТоваров");
				СтруктураВозврата.Вставить("ВидОперации", Перечисления.ВидыОперацийСписаниеТоваров.СписаниеСоСклада);
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОприходованиеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ОприходованиеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.ОприходованиеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "ОприходованиеТоваров");
				СтруктураВозврата.Вставить("ВидОперации", "");
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ПеремещениеТоваров" И Выборка.ТипДокументаУУ = "УЧ_ПеремещениеТоваров" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.ПеремещениеТоваров.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "ПеремещениеТоваров");
				СтруктураВозврата.Вставить("ВидОперации", Перечисления.ВидыОперацийПеремещениеТоваров.ПередачаМеждуСкладами);
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ОтчетПроизводстваЗаСмену" И Выборка.ТипДокументаУУ = "УЧ_ВыпускПродукции" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.ОтчетПроизводстваЗаСмену.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "ОтчетПроизводстваЗаСмену");
				СтруктураВозврата.Вставить("ВидОперации", Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену);	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
		Если Выборка.ТипДокументаБУ = "ИнвентаризацияТоваровНаСкладе" И Выборка.ТипДокументаУУ = "УЧ_Инвентаризация" Тогда
			
			Если СтруктураВозврата = Неопределено Тогда
				НоваяОперация = Документы.ИнвентаризацияТоваровНаСкладе.СоздатьДокумент();
				НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
				НоваяОперация.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
				НоваяОперация.ДополнительныеСвойства.Вставить("ДокументУУ", ТекДокументСтруктура.Ссылка);
				НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
				НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				СтруктураВозврата.Вставить("ИмяФормы", "ИнвентаризацияТоваровНаСкладе");
				СтруктураВозврата.Вставить("ВидОперации", "");	
			КонецЕсли;
			
			ЕстьСоответствие = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьСоответствие Тогда
		
		Если СтруктураВозврата = Неопределено Тогда
			НоваяОперация = Документы.УЧ_Операция.СоздатьДокумент();
			НоваяОперация.ДополнительныеСвойства.Вставить("ДокументБУ", ТекДокументСтруктура.Ссылка);
			НоваяОперация.Заполнить(ТекДокументСтруктура.Ссылка);
			НоваяОперация.Дата = ТекДокументСтруктура.Ссылка.Дата;
			НоваяОперация.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			СтруктураВозврата.Вставить("ИмяФормы", "УЧ_Операция");
			СтруктураВозврата.Вставить("ВидОперации", "");
		КонецЕсли;
		
		ЕстьСоответствие = Истина;
	КонецЕсли;
	
	Если СтруктураВозврата = Неопределено Тогда
		НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
		НаборЗаписей.ДокументУУ = ТекДокументСтруктура.Ссылка;
		НаборЗаписей.ДокументБУ = НоваяОперация.Ссылка;
		НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
		НаборЗаписей.ДатаОбработки = ТекущаяДата();
		НаборЗаписей.Записать();
	КонецЕсли; 
	
	//ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ТекстЗапросаНеобработанных(ВыбратьПервые = Неопределено) Экспорт
	//выбрать первые используется только в фоновом задании
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|ВЫБОР
	|	КОГДА сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL
	|		ТОГДА 1
	|	ИНАЧЕ 0
	|КОНЕЦ КАК НомерКартинки,
	|	ЖурналДокументовЖурналОпераций.Дата КАК Дата,
	|	ЖурналДокументовЖурналОпераций.Номер КАК Номер,
	|	ЖурналДокументовЖурналОпераций.Организация КАК Организация,
	|	ЖурналДокументовЖурналОпераций.Информация КАК Информация,
	|	ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|	ЖурналДокументовЖурналОпераций.ВидОперации КАК ВидОперации,
	|	ЖурналДокументовЖурналОпераций.Комментарий КАК Комментарий,
	|	ЖурналДокументовЖурналОпераций.Тип КАК Тип,
	|	сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Ссылка,
	|	Хозрасчетный.Регистратор КАК Регистратор
	|ИЗ
	|	ЖурналДокументов.ЖурналОпераций КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = Хозрасчетный.Регистратор
	|			И (Хозрасчетный.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И (НЕ Хозрасчетный.Регистратор ЕСТЬ NULL ИЛИ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) = Тип(Документ.ПоступлениеНаРасчетныйСчет))
	|	И (НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов) ИЛИ ЖурналДокументовЖурналОпераций.ВидОперации В(&МассивВклВидовОпераций))
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И ЖурналДокументовЖурналОпераций.ПометкаУдаления = Ложь"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
	|	И (ЖурналДокументовЖурналОпераций.Проведен = Истина ИЛИ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) = Тип(Документ.ОперацияБух) ИЛИ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) = Тип(Документ.РегламентнаяОперация))
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))" 
	 + ?(ВыбратьПервые = Неопределено, "", "
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	
КонецФункции // ()

Функция ТекстЗапросаНеобработанныхУУ(ФоноваяОбработка = Неопределено) Экспорт
	//выбрать первые используется только в фоновом задании
	
	Возврат "ВЫБРАТЬ
	        |	УЧ_ПеремещениеТоваров.Дата КАК Дата,
	        |	УЧ_ПеремещениеТоваров.Номер КАК Номер,
	        |	УЧ_ПеремещениеТоваров.Организация КАК Организация,
	        |	"""" КАК Информация,
	        |	УЧ_ПеремещениеТоваров.СуммаИтог КАК СуммаДокумента,
	        |	УЧ_ПеремещениеТоваров.ВидОперации КАК ВидОперации,
	        |	УЧ_ПеремещениеТоваров.Комментарий КАК Комментарий,
	        |	ТИП(Документ.УЧ_ПеремещениеТоваров) КАК Тип,
	        |	сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ КАК ДокументБУ,
	        |	УЧ_ПеремещениеТоваров.Ссылка КАК Ссылка,
	        |	Учетный.Регистратор КАК Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ КАК ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПеремещениеТоваров КАК УЧ_ПеремещениеТоваров
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_ПеремещениеТоваров.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_ПеремещениеТоваров.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И (НЕ ТипЗначения(УЧ_ПеремещениеТоваров.Ссылка) В (&МассивИсклТипов) ИЛИ УЧ_ПеремещениеТоваров.ВидОперации В(&МассивВклВидовОпераций))
	        |	И УЧ_ПеремещениеТоваров.Дата >= &Дата
	        |	И УЧ_ПеремещениеТоваров.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_ПеремещениеТоваров.Проведен = ИСТИНА
	        |	И (УЧ_ПеремещениеТоваров.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
					|" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_ПоступлениеТоваров.Дата,
	        |	УЧ_ПоступлениеТоваров.Номер,
	        |	УЧ_ПоступлениеТоваров.Организация,
	        |	"""",
	        |	УЧ_ПоступлениеТоваров.СуммаИтог,
	        |	УЧ_ПоступлениеТоваров.ВидОперации,
	        |	УЧ_ПоступлениеТоваров.Комментарий,
	        |	ТИП(Документ.УЧ_ПоступлениеТоваров),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_ПоступлениеТоваров.Ссылка,
	        |	Учетный.Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПоступлениеТоваров КАК УЧ_ПоступлениеТоваров
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_ПоступлениеТоваров.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_ПоступлениеТоваров.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И (НЕ ТипЗначения(УЧ_ПоступлениеТоваров.Ссылка) В (&МассивИсклТипов) ИЛИ УЧ_ПоступлениеТоваров.ВидОперации В(&МассивВклВидовОпераций))
	        |	И УЧ_ПоступлениеТоваров.Дата >= &Дата
	        |	И УЧ_ПоступлениеТоваров.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_ПоступлениеТоваров.Проведен = ИСТИНА
	        |	И (УЧ_ПоступлениеТоваров.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
					|" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_Реализация.Дата,
	        |	УЧ_Реализация.Номер,
	        |	УЧ_Реализация.Организация,
	        |	"""",
	        |	УЧ_Реализация.СуммаИтог,
	        |	УЧ_Реализация.ВидОперации,
	        |	УЧ_Реализация.Комментарий,
	        |	ТИП(Документ.УЧ_Реализация),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_Реализация.Ссылка,
	        |	Учетный.Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_Реализация.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_Реализация.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И (НЕ ТипЗначения(УЧ_Реализация.Ссылка) В (&МассивИсклТипов) ИЛИ УЧ_Реализация.ВидОперации В(&МассивВклВидовОпераций))
	        |	И УЧ_Реализация.Дата >= &Дата
	        |	И УЧ_Реализация.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_Реализация.Проведен = ИСТИНА
	        |	И (УЧ_Реализация.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
	        |" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_СписаниеТоваров.Дата,
	        |	УЧ_СписаниеТоваров.Номер,
	        |	УЧ_СписаниеТоваров.Организация,
	        |	"""",
	        |	УЧ_СписаниеТоваров.СуммаДокумента,
	        |	УЧ_СписаниеТоваров.ВидОперации,
	        |	УЧ_СписаниеТоваров.Комментарий,
	        |	ТИП(Документ.УЧ_СписаниеТоваров),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_СписаниеТоваров.Ссылка,
	        |	Учетный.Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_СписаниеТоваров КАК УЧ_СписаниеТоваров
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_СписаниеТоваров.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_СписаниеТоваров.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И (НЕ ТипЗначения(УЧ_СписаниеТоваров.Ссылка) В (&МассивИсклТипов) ИЛИ УЧ_СписаниеТоваров.ВидОперации В(&МассивВклВидовОпераций))
	        |	И УЧ_СписаниеТоваров.Дата >= &Дата
	        |	И УЧ_СписаниеТоваров.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_СписаниеТоваров.Проведен = ИСТИНА
	        |	И (УЧ_СписаниеТоваров.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
	        |" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_ОприходованиеТоваров.Дата,
	        |	УЧ_ОприходованиеТоваров.Номер,
	        |	УЧ_ОприходованиеТоваров.Организация,
	        |	"""",
	        |	УЧ_ОприходованиеТоваров.СуммаДокумента,
	        |	УЧ_ОприходованиеТоваров.ВидОперации,
	        |	УЧ_ОприходованиеТоваров.Комментарий,
	        |	ТИП(Документ.УЧ_ОприходованиеТоваров),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_ОприходованиеТоваров.Ссылка,
	        |	Учетный.Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_ОприходованиеТоваров КАК УЧ_ОприходованиеТоваров
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_ОприходованиеТоваров.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_ОприходованиеТоваров.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И НЕ ТИПЗНАЧЕНИЯ(УЧ_ОприходованиеТоваров.Ссылка) В (&МассивИсклТипов)
	        |	И УЧ_ОприходованиеТоваров.Дата >= &Дата
	        |	И УЧ_ОприходованиеТоваров.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_ОприходованиеТоваров.Проведен = ИСТИНА
	        |	И (УЧ_ОприходованиеТоваров.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
	        |" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_ВыпускПродукции.Дата,
	        |	УЧ_ВыпускПродукции.Номер,
	        |	УЧ_ВыпускПродукции.Организация,
	        |	"""",
	        |	УЧ_ВыпускПродукции.СуммаДокумента,
	        |	УЧ_ВыпускПродукции.ВидОперации,
	        |	УЧ_ВыпускПродукции.Комментарий,
	        |	ТИП(Документ.УЧ_ВыпускПродукции),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_ВыпускПродукции.Ссылка,
	        |	Учетный.Регистратор,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_ВыпускПродукции КАК УЧ_ВыпускПродукции
	        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
	        |			ПО УЧ_ВыпускПродукции.Ссылка = Учетный.Регистратор
	        |				И (Учетный.НомерСтроки = 1)
	        |		ПО (УЧ_ВыпускПродукции.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ Учетный.Регистратор ЕСТЬ NULL
	        |	И (НЕ ТипЗначения(УЧ_ВыпускПродукции.Ссылка) В (&МассивИсклТипов) ИЛИ УЧ_ВыпускПродукции.ВидОперации В(&МассивВклВидовОпераций))
	        |	И УЧ_ВыпускПродукции.Дата >= &Дата
	        |	И УЧ_ВыпускПродукции.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_ВыпускПродукции.Проведен = ИСТИНА
	        |	И (УЧ_ВыпускПродукции.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
					|" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
					|
			|ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	УЧ_Инвентаризация.Дата,
	        |	УЧ_Инвентаризация.Номер,
	        |	УЧ_Инвентаризация.Организация,
	        |	"""",
	        |	УЧ_Инвентаризация.СуммаДокумента,
	        |	УЧ_Инвентаризация.ВидОперации,
	        |	УЧ_Инвентаризация.Комментарий,
	        |	ТИП(Документ.УЧ_Инвентаризация),
	        |	сабСоответствиеДокументов.ДокументУУ,
	        |	сабСоответствиеДокументов.ДокументБУ,
	        |	УЧ_Инвентаризация.Ссылка,
	        |	УЧ_Инвентаризация.Ссылка,
	        |	сабСоответствиеДокументов.ПервичныйДокументУУ
	        |ИЗ
	        |	РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	        |		ПРАВОЕ СОЕДИНЕНИЕ Документ.УЧ_Инвентаризация КАК УЧ_Инвентаризация
	        |		ПО (УЧ_Инвентаризация.Ссылка = сабСоответствиеДокументов.ДокументУУ)
	        |ГДЕ
	        |	сабСоответствиеДокументов.ДокументБУ ЕСТЬ NULL
	        |	И НЕ ТИПЗНАЧЕНИЯ(УЧ_Инвентаризация.Ссылка) В (&МассивИсклТипов)
	        |	И УЧ_Инвентаризация.Дата >= &Дата
	        |	И УЧ_Инвентаризация.ПометкаУдаления = ЛОЖЬ
	        |	И УЧ_Инвентаризация.Проведен = ИСТИНА
	        |	И (УЧ_Инвентаризация.Организация В
	        |			(ВЫБРАТЬ
	        |				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	        |			ИЗ
	        |				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	        |			ГДЕ
	        |				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)))
					|" + ?(ФоноваяОбработка = Неопределено, "", "И сабСоответствиеДокументов.ПервичныйДокументУУ = ИСТИНА") + "
					|";
	
	
КонецФункции

Функция ТекстЗапросаНеобработанныхРозница(ВыбратьПервые = Неопределено) Экспорт
	//выбрать первые используется только в фоновом задании
	
	Возврат "ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|	ЖурналДокументовЖурналОпераций.Дата КАК Дата,
	|	ЖурналДокументовЖурналОпераций.Номер КАК Номер,
	|	ЖурналДокументовЖурналОпераций.Организация КАК Организация,
	|	"""" КАК Информация,
	|	ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|	ЖурналДокументовЖурналОпераций.ВидОперации КАК ВидОперации,
	|	ЖурналДокументовЖурналОпераций.Комментарий КАК Комментарий,
	|	ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) КАК Тип,
	|	сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Ссылка,
	|	ЖурналДокументовЖурналОпераций.Ссылка КАК Регистратор,
	|ВЫБОР
	|	КОГДА ЖурналДокументовЖурналОпераций.Проведен
	|		ТОГДА 1
	|	КОГДА ЖурналДокументовЖурналОпераций.ПометкаУдаления
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Документ.РозничнаяПродажа КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов)
	|	И ЖурналДокументовЖурналОпераций.ПометкаУдаления = Ложь"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|	ЖурналДокументовЖурналОпераций.Дата,
	|	ЖурналДокументовЖурналОпераций.Номер,
	|	ЖурналДокументовЖурналОпераций.Организация,
	|	"""" КАК Информация,
	|	ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|	Неопределено,
	|	ЖурналДокументовЖурналОпераций.Комментарий,
	|	ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка),
	|	сабСоответствиеДокументов.ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|ВЫБОР
	|	КОГДА ЖурналДокументовЖурналОпераций.Проведен
	|		ТОГДА 1
	|	КОГДА ЖурналДокументовЖурналОпераций.ПометкаУдаления
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплаты КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов)
	|	И ЖурналДокументовЖурналОпераций.ПометкаУдаления = Ложь"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|	ЖурналДокументовЖурналОпераций.Дата,
	|	ЖурналДокументовЖурналОпераций.Номер,
	|	ЖурналДокументовЖурналОпераций.Организация,
	|	"""",
	|	ЖурналДокументовЖурналОпераций.СуммаПоДокументу,
	|	Неопределено,
	|	ЖурналДокументовЖурналОпераций.Комментарий,
	|	ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка),
	|	сабСоответствиеДокументов.ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|ВЫБОР
	|	КОГДА ЖурналДокументовЖурналОпераций.Проведен
	|		ТОГДА 1
	|	КОГДА ЖурналДокументовЖурналОпераций.ПометкаУдаления
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов)
	|	И ЖурналДокументовЖурналОпераций.Проведен = Истина"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|	ЖурналДокументовЖурналОпераций.Дата,
	|	ЖурналДокументовЖурналОпераций.Номер,
	|	ЖурналДокументовЖурналОпераций.Организация,
	|	"""",
	|	ЖурналДокументовЖурналОпераций.СуммаПоДокументу,
	|	Неопределено,
	|	ЖурналДокументовЖурналОпераций.Комментарий,
	|	ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка),
	|	сабСоответствиеДокументов.ДокументУУ,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|	ЖурналДокументовЖурналОпераций.Ссылка,
	|ВЫБОР
	|	КОГДА ЖурналДокументовЖурналОпераций.Проведен
	|		ТОГДА 1
	|	КОГДА ЖурналДокументовЖурналОпераций.ПометкаУдаления
	|		ТОГДА 3
	|	ИНАЧЕ 0
	|КОНЕЦ
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ЖурналДокументовЖурналОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|ГДЕ
	|	сабСоответствиеДокументов.ДокументУУ ЕСТЬ NULL
	|	И ЖурналДокументовЖурналОпераций.Дата >= &Дата
	|	И НЕ ТипЗначения(ЖурналДокументовЖурналОпераций.Ссылка) В (&МассивИсклТипов)
	|	И ЖурналДокументовЖурналОпераций.Проведен = Истина"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
	|	И ЖурналДокументовЖурналОпераций.Организация В
	|			(ВЫБРАТЬ
	|				сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|			ГДЕ
	|				НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка))" 
	 + ?(ВыбратьПервые = Неопределено, "", "
	 |УПОРЯДОЧИТЬ ПО
	|	Дата
	|АВТОУПОРЯДОЧИВАНИЕ");
	
КонецФункции // ()

Функция ТекстЗапросаИзмененные(ВыбратьПервые = Неопределено) Экспорт
	
	Возврат "ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	|ЖурналДокументовЖурналОпераций.Дата КАК Дата,
	|ЖурналДокументовЖурналОпераций.Номер КАК Номер,
	|ЖурналДокументовЖурналОпераций.Организация КАК Организация,
	|ЖурналДокументовЖурналОпераций.Информация КАК Информация,
	|ЖурналДокументовЖурналОпераций.СуммаДокумента КАК СуммаДокумента,
	|ЖурналДокументовЖурналОпераций.ВидОперации КАК ВидОперации,
	|ЖурналДокументовЖурналОпераций.Комментарий КАК Комментарий,
	|ЖурналДокументовЖурналОпераций.Тип КАК Тип,
	|сабСоответствиеДокументов.ДокументУУ КАК ДокументУУ,
	|ЖурналДокументовЖурналОпераций.Ссылка КАК Ссылка
	|ИЗ
	|ЖурналДокументов.ЖурналОпераций КАК ЖурналДокументовЖурналОпераций
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабСоответствиеДокументов
	|	ПО ЖурналДокументовЖурналОпераций.Ссылка = сабСоответствиеДокументов.ДокументБУ
	|		И (сабСоответствиеДокументов.Модифицирован = ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
	|		ПО ЖурналДокументовЖурналОпераций.Ссылка = сабДокументОшибкаФоновогоПроведения.ДокументБУ
	|	ГДЕ
	|ЖурналДокументовЖурналОпераций.Дата >= &Дата"
	+ ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL");
	
КонецФункции // ()

Функция ПолучитьИзмененныеДокументы(ВыбратьПервые, ТолькоСАвтопроведением = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
	|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
	|ИЗ
	|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
	|ГДЕ
	|	сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ
	|	ИЛИ ВЫБОР
	|			КОГДА &ТолькоСАвтопроведением
	|				ТОГДА сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = ИСТИНА
	|			ИНАЧЕ Ложь
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
	Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
	
	МассивИсклТипов = Новый Массив;
	Для каждого ТекСтрока Из Выборка Цикл
		Если НЕ Строка(ТекСтрока) = "ПрочиеДокументы" Тогда
			МассивИсклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));
		Иначе //исключаем все прочие документы
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеТиповДокументов.ТипДокументаУУ КАК ТипДокументаУУ,
			|	сабСоответствиеТиповДокументов.ТипДокументаБУ КАК ТипДокументаБУ
			|ИЗ
			|	РегистрСведений.сабСоответствиеТиповДокументов КАК сабСоответствиеТиповДокументов
			|ГДЕ
			|	НЕ сабСоответствиеТиповДокументов.ТипДокументаУУ = &ТипДокументаУУ И
			|	сабСоответствиеТиповДокументов.НеИспользоватьАвтопроведение = Ложь";
			
			Запрос.УстановитьПараметр("ТипДокументаУУ", "Исключено");
			Запрос.УстановитьПараметр("ТолькоСАвтопроведением", ТолькоСАвтопроведением);
			
			Результат = Запрос.Выполнить();
			ВыборкаДляАвтопроведения = Результат.Выгрузить().ВыгрузитьКолонку("ТипДокументаБУ");
			МассивВклТипов = Новый Массив;
			Для каждого ТекСтрока Из ВыборкаДляАвтопроведения Цикл
				МассивВклТипов.Добавить(Тип("ДокументСсылка." + Строка(ТекСтрока)));		
			КонецЦикла;
			
			Набор = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
			МассРег = Набор.Отбор.Регистратор.ТипЗначения.Типы();
			Для каждого ТекТип Из МассРег Цикл
				Если МассивВклТипов.Найти(ТекТип) = Неопределено Тогда
					МассивИсклТипов.Добавить(ТекТип);				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ " + ?(ВыбратьПервые = Неопределено, "", "ПЕРВЫЕ " + Формат(ВыбратьПервые, "ЧРГ=''")) + "
	               |	сабОбработкаДокументов.ДокументБУ КАК ДокументБУ,
	               |	сабОбработкаДокументов.ДокументУУ КАК ДокументУУ,
	               |	сабОбработкаДокументов.Модифицирован КАК Модифицирован,
	               |	сабОбработкаДокументов.Автор КАК Автор,
	               |	сабОбработкаДокументов.ДатаОбработки КАК ДатаОбработки,
	               |	сабОбработкаДокументов.Комментарий КАК Комментарий,
	               |	сабОбработкаДокументов.ДокументБУ.Дата КАК ДокументБУДата
	               |ИЗ
				   |	РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДокументОшибкаФоновогоПроведения КАК сабДокументОшибкаФоновогоПроведения
				   |		ПО сабОбработкаДокументов.ДокументБУ = сабДокументОшибкаФоновогоПроведения.ДокументБУ
				   
				   |ГДЕ
				   |	сабОбработкаДокументов.Модифицирован = ИСТИНА
				   |	И НЕ сабОбработкаДокументов.АвтообновленияЗаблокированы = ИСТИНА
				   |	И НЕ сабОбработкаДокументов.ПервичныйДокументУУ = ИСТИНА
				   |	И НЕ ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) В (&МассивИсклТипов)"
				   + ?(ВыбратьПервые = Неопределено, "", " И сабДокументОшибкаФоновогоПроведения.ДокументБУ ЕСТЬ NULL") + "
				   |
				   |УПОРЯДОЧИТЬ ПО
	               |	ДокументБУДата
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("МассивИсклТипов", МассивИсклТипов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Возврат Выборка;
	
	
КонецФункции // ()

Процедура ПропуститьДокументыБУНаСервере(ТекДокументСтруктура, СтруктураВозврата = Неопределено) Экспорт
		
	НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	НаборЗаписей.ДокументБУ = ТекДокументСтруктура.Ссылка;
	НаборЗаписей.ДокументУУ = Неопределено;
	НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
	НаборЗаписей.ДатаОбработки = ТекущаяДата();
	НаборЗаписей.Записать();
		
КонецПроцедуры

Процедура ПропуститьДокументыУУНаСервере(ТекДокументСтруктура, СтруктураВозврата = Неопределено) Экспорт
		
	НаборЗаписей = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	НаборЗаписей.ДокументУУ = ТекДокументСтруктура.Ссылка;
	НаборЗаписей.ДокументБУ = Неопределено;
	НаборЗаписей.Автор = ПараметрыСеанса.ТекущийПользователь;
	НаборЗаписей.ДатаОбработки = ТекущаяДата();
	НаборЗаписей.Записать();
		
КонецПроцедуры
