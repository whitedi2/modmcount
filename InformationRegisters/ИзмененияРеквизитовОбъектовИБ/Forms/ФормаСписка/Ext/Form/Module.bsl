
&НаКлиенте
Процедура НастроитьОбъектыдляРегистрации(Команда)

	ОткрытьФорму("РегистрСведений.ОбъектыДляРегистрацииИзмененийИБ.Форма.ФормаНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура АрхивацияУдаление(Команда)
	
	ОткрытьФорму("РегистрСведений.ИзмененияРеквизитовОбъектовИБ.Форма.ФормаАрхивацииИУдаления");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПользовательскийОтбор = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПользовательскийОтбор.Элементы.Очистить();
	
	//ПользовательскийПорядок = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки);
	//ПользовательскийПорядок.Элементы.Очистить();
	//ЭлементПорядка = ПользовательскийПорядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	//ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
	//ЭлементПорядка.Использование = Истина;
	
	Если Параметры.Свойство("Объект") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Объект", Параметры.Объект);
		СписокГруппировка.Параметры.УстановитьЗначениеПараметра("Объект", Параметры.Объект);
		Заголовок = "История изменений: " + Строка(Параметры.Объект);
		АвтоЗаголовок = Ложь;
		ОбъектСсылка = Параметры.Объект;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено);
		СписокГруппировка.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено);
	КонецЕсли;
	
	Элементы.СписокГруппировка.Видимость = ЗначениеЗаполнено(ОбъектСсылка);

	//Элементы.Список.Видимость = Ложь;
	//Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Очистить();
	//ПользовательскийОтбор = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	//ПользовательскийОтбор.Элементы.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПользовательскийПорядок = Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки);
	//ПользовательскийПорядок.Элементы.Очистить();
	//ЭлементПорядка = ПользовательскийПорядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	//ЭлементПорядка.Поле = Новый ПолеКомпоновкиДанных("Период");
	//ЭлементПорядка.Использование = Истина;

	//ПодключитьОбработчикОжидания("ОтобразитьСписок",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСписок()
	//Элементы.Список.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокГруппировкаПриАктивизацииСтроки(Элемент)
	Список.Отбор.Элементы.Очистить();
	Если Элементы.СписокГруппировка.ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	ДанныеСтроки = Элементы.СписокГруппировка.ДанныеСтроки(Элементы.СписокГруппировка.ТекущаяСтрока);
	Если ДанныеСтроки.Пользователь = "Все пользователи" Тогда
		Возврат;	
	КонецЕсли;
	НовыйОтбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = ДанныеСтроки.Объект;
	НовыйОтбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Период");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = ДанныеСтроки.Период;
	НовыйОтбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Пользователь");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = ДанныеСтроки.Пользователь;
КонецПроцедуры

