
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Штрихкод");
	ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = Штрихкод;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Отбор.Свойство("Владелец") Тогда
		
		ПросмотрДанныхПоНоменклатуре = ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура");
		Элементы.Характеристика.Видимость = ПросмотрДанныхПоНоменклатуре;
		Элементы.Упаковка.Видимость = ПросмотрДанныхПоНоменклатуре;
		
		Если ПросмотрДанныхПоНоменклатуре Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Номенклатура'");
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Информационные карты'");
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Номер подарочного сертификата'");
		КонецЕсли;
		
		Элементы.ГруппаОтбор.Видимость = Ложь;
				
		Если ПросмотрДанныхПоНоменклатуре Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			ТекстЗаголовка = НСтр("ru = 'Штрихкоды номенклатуры (%Владелец%)'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			Заголовок     = ТекстЗаголовка
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			Если Параметры.Отбор.Владелец.ВидКарты = Перечисления.ВидыИнформационныхКарт.Магнитная Тогда
				ТекстЗаголовка = НСтр("ru = 'Для элемента: ""%Владелец%"" штрихкоды не используются'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
				Элементы.Список.ТолькоПросмотр = Истина;
			Иначе
				ТекстЗаголовка = НСтр("ru = 'Штрихкоды карты (%Владелец%)'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			КонецЕсли;
			Заголовок     = ТекстЗаголовка;
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			Если Параметры.Отбор.Владелец.Владелец.ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Магнитный Тогда				
				ТекстЗаголовка = НСтр("ru = 'Для элемента: ""%Владелец%"" штрихкоды не используются'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
				Элементы.Список.ТолькоПросмотр = Истина;
			Иначе
				ТекстЗаголовка = НСтр("ru = 'Штрихкоды номеров подарочных сертификатов (%Владелец%)'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			КонецЕсли;
			Заголовок     = ТекстЗаголовка;
		КонецЕсли;
		
	КонецЕсли;
	
	ПодключаемоеОборудованиеРТВызовСервера.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
		
	Если ЗначениеЗаполнено(Параметры.ТипВладельца) Тогда
		
		ТипВладельца = Параметры.ТипВладельца;
		
	ИначеЕсли Параметры.Отбор.Свойство("Владелец") Тогда
		
		ПросмотрДанныхПоНоменклатуре = ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура");
					
		Если ПросмотрДанныхПоНоменклатуре Тогда
			ТипВладельца = "Номенклатура";
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			ТипВладельца = "ИнформационнаяКарта";
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			ТипВладельца = "СерийныйНомер";
		Иначе 
			ТипВладельца = "Все";				
		КонецЕсли;	        
		
	Иначе 		
		
		ТипВладельца = Настройки.Получить("ТипВладельца");
		
	КонецЕсли;	

	
	Если ПустаяСтрока(ТипВладельца) Тогда
		ТипВладельца = Элементы.ОтборТипВладельца.СписокВыбора[0].Значение;
	КонецЕсли;
	
	ЗначениеОтбора = ПолучитьЗначениеОтбора(ТипВладельца);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ТипВладельца",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеОтбора <> Тип("Неопределено"));	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриИзменении" элемента формы "ОтборТипВладельцаПриИзменении". 
//
&НаКлиенте
Процедура ОтборТипВладельцаПриИзменении(Элемент)
	
	ЗначениеОтбора = ПолучитьЗначениеОтбора(ТипВладельца);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ТипВладельца",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеОтбора <> Тип("Неопределено"));	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОчиститьОтбор(Команда)
	
	Список.Отбор.Элементы.Очистить();
	ТипВладельца = "";
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗначениеОтбора(ЗначениеВладельца)
	
	Если ЗначениеЗаполнено(ЗначениеВладельца) Тогда
		
		Если ЗначениеВладельца = "Все" Тогда
			ЗначениеОтбора = Тип("Неопределено");
		ИначеЕсли ЗначениеВладельца = "Номенклатура" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.Номенклатура");
		ИначеЕсли ЗначениеВладельца = "ИнформационнаяКарта" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.ИнформационныеКарты");
		ИначеЕсли ЗначениеВладельца = "СерийныйНомер" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.СерийныеНомера");
		КонецЕсли;	
		
	Иначе
		
		ЗначениеОтбора = Тип("Неопределено");
		
	КонецЕсли;
	
	Возврат ЗначениеОтбора;
	
КонецФункции

#КонецОбласти
