
&НаКлиенте
Перем ЧтениеHTML;

&НаКлиенте
Перем ПостроительDOM;

&НаКлиенте
Перем sh;//Script.Shell

&НаКлиенте
Перем ПутьКСкриптуПаузы;

&НаКлиенте
Перем ПрерватьОбработку;

&НаКлиенте
Перем МассивСтрокОтчета;

&НаКлиенте
Перем ОтчетСформирован;


&НаКлиенте
Перем НомерТекСсылкиНаПодробности;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	

КонецПроцедуры

  

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	КонецПериода="";
	НачалоПериода="";
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьБлокиПоКлассу(Узел, Тэг, ИмяКласса)
	
	МассивДат = Новый Массив;
	МассивКурсов = Новый Массив;
	СписокЭлементов = Узел.ПолучитьЭлементыПоИмени(Тэг);
	
	Для Каждого Элемент Из СписокЭлементов Цикл
		АтрибутКласс = Элемент.ПолучитьАтрибут("class");
		Если АтрибутКласс <> Неопределено Тогда
			Если АтрибутКласс = ИмяКласса Тогда
				
				ЭлДата = Элемент.ТекстовоеСодержимое;
				Год = Прав(ЭлДата,4);
				День = Лев(ЭлДата,2);
				Месяц = Сред(ЭлДата,4,2);
				
				 ДатаТип = Дата(Год, Месяц ,День);			
			     МассивДат.Добавить(ДатаТип);	
			КонецЕсли;	
		Иначе	
			Если АтрибутКласс <> ("text-success")  И
				 АтрибутКласс <> ("text-danger")   Тогда
				МассивКурсов.Добавить(Элемент.ТекстовоеСодержимое);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	Данные = Новый Соответствие;
	
	Н = МассивДат.Количество();
	К = 0;
	
	Пока К  <= Н-1 Цикл
		
		Данные.Вставить(МассивДат[К],МассивКурсов[К]);
		К = К + 1;
		
	КонецЦикла;	
	
	Возврат Данные;
	
КонецФункции


	&НаКлиенте
	Процедура ПарситьДанные(Запрос, МассивСтрокОтчета, Валюта, КодВалюты)
		
		
		Состояние("Чтение с сайта" );
		


			    ХТТП = новый HTTPСоединение("bank24.su");
                ИмяФайла = ПолучитьИмяВременногоФайла();
                ОтветСервера = ХТТП.Получить(СтрЗаменить(Запрос, "http://bank24.su", ""), ИмяФайла, Новый Соответствие);
				 ЧтениеHTML.ОткрытьФайл(ИмяФайла, "UTF-8");
				 ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
				  
				  
			Данные = ПолучитьБлокиПоКлассу(ДокументHTML, "td", "table__cell--non-numeric");
		
			Если Данные.Количество() = 0 Тогда
			  Сообщить("Нет Данных");	
			  ПрочитатьТекстСтраницыHTML(ДокументHTML, Запрос);
			
		  КонецЕсли;
		  
		  
			     
				 ДатаТек = ПериодВыгрузки.ДатаНачала;

				 
						Пока ДатаТек <=  ПериодВыгрузки.ДатаОкончания Цикл
				
				Если  Данные.Получить(ДатаТек) <> Неопределено Тогда

				
				ЗаписьВРегистр(Валюта,Дата(ДатаТек),Данные.Получить(ДатаТек));
			     КонецЕсли;
                ДатаТек = ДобавитьДень(ДатаТек);    
	        КонецЦикла;
		
				
    КонецПроцедуры
	
&НаКлиенте
Функция ДобавитьДень(Дата)
    Возврат КонецДня(Дата)+1;
КонецФункции	



&НаСервере
Функция  СписокПеребораВалют()
 		Массив1 = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Валюты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	Валюты.ПометкаУдаления <> 1";
	
	РезультатЗапроса = Запрос.Выполнить();
		
    	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Массив1.Добавить(Выборка.Ссылка);
	КонецЦикла;	
	Возврат Массив1;
	
КонецФункции	
	

&НаКлиенте
Процедура ЗагрузитьКроссКурсы(Команда)
МассивВалют = СписокПеребораВалют();
		
	Для Каждого ЭлВалюта Из МассивВалют  Цикл
		Запрос = "http://bank24.su/currency/rates/europe/+";
		
		Если Строка(ЭлВалюта) <>"EUR" Тогда
			КодВалюты = НРег(БюджетныйНаСервере.ВернутьРеквизит(ЭлВалюта, "Наименование"));
			Запрос = СтрЗаменить(Запрос, "+", КодВалюты + "/archive/");	
			ЧтениеHTML = Новый ЧтениеHTML;
			ПостроительDOM = Новый ПостроительDOM;
			
			МассивСсылокНаПодробности = Новый Массив;
			
			МассивСтрокОтчета = Новый Массив;
						
			
			ПарситьДанные(Запрос, МассивСтрокОтчета, ЭлВалюта, КодВалюты);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлВалюта1 Из МассивВалют Цикл
		
		Для Каждого ЭлВалюта2 Из МассивВалют Цикл
			
			Если Элвалюта1<>ЭлВалюта2 Тогда
				ЗаписьВРегистрКросскурса(ЭлВалюта1, ЭлВалюта2, ПериодВыгрузки);    
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Сообщить("Загрузка курсов завершена!");
	ПолныйСписок = Истина;
	ПолныйСписокПриИзменении(Неопределено);
	
КонецПроцедуры

	
&НаСервереБезКонтекста
Процедура ЗаписьВРегистрКросскурса(Валюта1, Валюта2, ПериодВыгрузки)
	
	ТЗ_КурсовВалюты1 = ПолучитьКурсыИзРегистра(Валюта1, ПериодВыгрузки);
	ТЗ_КурсовВалюты2 = ПолучитьКурсыИзРегистра(Валюта2, ПериодВыгрузки); 
	
	Для Каждого ТекЭлемент Из ТЗ_КурсовВалюты1 Цикл
		
		СтрокаТек = ТЗ_КурсовВалюты2.Найти(ТекЭлемент.Период,"Период");
		
		Если СтрокаТек <> Неопределено Тогда
			
			Курс = ТекЭлемент.Курс/СтрокаТек.Курс;
			Дата = ТекЭлемент.Период;
			
			НоваяЗапись = РегистрыСведений.КроссКурсыВалют.СоздатьМенеджерЗаписи();
			НоваяЗапись.Валюта1 = Валюта1;
			НоваяЗапись.Валюта2 = Валюта2;
			НоваяЗапись.Период = Дата;
			НоваяЗапись.Курс = Курс;
			НоваяЗапись.Записать();
			
			НоваяЗапись = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
			НоваяЗапись.Валюта = Валюта1;
			НоваяЗапись.БазоваяВалюта = Валюта2;
			НоваяЗапись.Период = Дата;
			НоваяЗапись.Курс = Курс;
			НоваяЗапись.Записать();
		
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры			
	
	
&НаСервереБезКонтекста
Функция  ПолучитьКурсыИзРегистра(Валюта, Период)
	
	EUR = Справочники.Валюты.НайтиПоНаименованию("EUR");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КроссКурсыВалют.Курс КАК Курс,
		|	КроссКурсыВалют.Период КАК Период,
		|	КроссКурсыВалют.Валюта1 КАК Валюта1,
		|	КроссКурсыВалют.Валюта2 КАК Валюта2
		|ИЗ
		|	РегистрСведений.КроссКурсыВалют КАК КроссКурсыВалют
		|ГДЕ
		|	КроссКурсыВалют.Валюта1 = &Валюта
		|	И КроссКурсыВалют.Валюта2 = &EUR
		|	И КроссКурсыВалют.Период >= &ДатаНачала
		|	И КроссКурсыВалют.Период <= &ДатаОкончания";
	
	Запрос.УстановитьПараметр("EUR", EUR);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции	
	
&НаСервере
Процедура ЗаписьВРегистр(Валюта, Дата, Курс);

	 Если Валюта.Наименование = "RUB" Тогда      
         НоваяЗапись = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
         НоваяЗапись.Валюта = Справочники.Валюты.НайтиПоНаименованию("EUR");
		 НоваяЗапись.БазоваяВалюта = УЧ_Сервер.НациональнаяВалюта();
         НоваяЗапись.Период = Дата;
         НоваяЗапись.Курс = Курс;
	     НоваяЗапись.Кратность = 1;
         НоваяЗапись.Записать();
		 
		 НоваяЗапись = РегистрыСведений.КроссКурсыВалют.СоздатьМенеджерЗаписи();
         НоваяЗапись.Валюта1 = Валюта;
		 НоваяЗапись.Валюта2 = Справочники.Валюты.НайтиПоНаименованию("EUR");
         НоваяЗапись.Период = Дата;
         НоваяЗапись.Курс = 1 / Курс;
		 НоваяЗапись.Записать();
		 
		 НоваяЗапись = РегистрыСведений.КроссКурсыВалют.СоздатьМенеджерЗаписи();
         НоваяЗапись.Валюта1 = Справочники.Валюты.НайтиПоНаименованию("EUR");
		 НоваяЗапись.Валюта2 = Валюта;
         НоваяЗапись.Период = Дата;
         НоваяЗапись.Курс = Курс;
		 НоваяЗапись.Записать();
	Иначе	 
		 
		 НоваяЗапись = РегистрыСведений.КроссКурсыВалют.СоздатьМенеджерЗаписи();
         НоваяЗапись.Валюта1 = Справочники.Валюты.НайтиПоНаименованию("EUR");
		 НоваяЗапись.Валюта2 = Валюта;
         НоваяЗапись.Период = Дата;
         НоваяЗапись.Курс = Курс;
		 НоваяЗапись.Записать();
               
         НоваяЗапись = РегистрыСведений.КроссКурсыВалют.СоздатьМенеджерЗаписи();
         НоваяЗапись.Валюта1 = Валюта;
		 НоваяЗапись.Валюта2 = Справочники.Валюты.НайтиПоНаименованию("EUR");
         НоваяЗапись.Период = Дата;
         НоваяЗапись.Курс = 1 / Курс;
		 НоваяЗапись.Записать();
		                       		 
	 КонецЕсли;	 
	 
КонецПроцедуры	
	
	
	&НаКлиенте
	
Процедура ПрочитатьТекстСтраницыHTML(Узел, Запрос)
		
		Сервер = "bank24.su";			
		Соединение = Новый HTTPСоединение(Сервер);			
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("host", Сервер);   		
		Запрос_ = Новый HTTPЗапрос(СтрЗаменить(Запрос, "http://bank24.su", ""), Заголовки);
		Ответ = Соединение.Получить(Запрос_);
		Если Ответ.КодСостояния = 200 Тогда
			ТекстСтраницы = Ответ.ПолучитьТелоКакСтроку();
			Если Найти(ТекстСтраницы, "Forbidden") > 0 Тогда
				КлиентЗаблокирован = Истина;
			КонецЕсли;
		ИначеЕсли Ответ.КодСостояния = 403 Тогда 
			КлиентЗаблокирован = Истина;
		Иначе
			Сообщить("Сервер вернул код: " + Ответ.КодСостояния);
		КонецЕсли;
		
	КонецПроцедуры

&НаКлиенте
	Процедура ПолеХТМЛДокументСформирован(Элемент)
		// Вставить содержимое обработчика.
		Сообщить("Успешно");
	КонецПроцедуры
	


&НаКлиенте
Процедура ПолныйСписокПриИзменении(Элемент)
	
	ИзменитьСписокНаСервере();
	Элементы.Список.Обновить();
	 
КонецПроцедуры

&НаСервере
Процедура ИзменитьСписокНаСервере()
	
	Если ПолныйСписок Тогда
		Список.ОсновнаяТаблица = "РегистрСведений.КроссКурсыВалют";
	Иначе
		Список.ОсновнаяТаблица = "РегистрСведений.КроссКурсыВалют.СрезПоследних";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Период1ПриИзменении(Элемент)
	Если ТекущаяДата() < ПериодВыгрузки.ДатаОкончания Тогда
		
		
		ПериодВыгрузки.ДатаОкончания = ТекущаяДата();
		
		
	КонецЕсли;
	
	
	
	
	
КонецПроцедуры
