
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//Список.Параметры.УстановитьЗначениеПараметра("ДоступныеНаправления", ПараметрыСеанса.ДоступныеНаправления);
	Список.Параметры.УстановитьЗначениеПараметра("РольАдминаДоступна", БюджетныйНаСервере.РольАдминаДоступнаСервер());
	Список.Параметры.УстановитьЗначениеПараметра("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	сабБПКлиентСервер.ДобавитьДеревоМаршрута(Элементы, Команды, ТекущаяСтрокаГруппы, МаршрутДерево, Справочники.МаршрутыДвиженияЗаявок.ПустаяСсылка(), УсловноеОформление, Новый Структура("КнопкиУправления, ДопУсловияВидимость, ТолькоПросмотр", Ложь, Ложь, Истина) );
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если НЕ Элементы.Список.ТекущаяСтрока = Неопределено И ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СправочникСсылка.МаршрутыДвиженияЗаявок") Тогда
		//заполнение маршрута с группировками
		ЗаполнитьСложныйМаршрут(Элементы.Список.ТекущаяСтрока);
		сабБПКлиентСервер.РазвернутьГруппировкиДерева(Элементы, МаршрутДерево);
	Иначе
		Тек = МаршрутДерево.ПолучитьЭлементы();
		Тек.Очистить();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСложныйМаршрут(ТекАвтоМар)
	
	сабБПКлиентСервер.ЗаполнитьМаршрутДеревоИзПлоскогоМаршрута(ТекАвтоМар, МаршрутДерево, ТипЗнч(ТекАвтоМар));
	
КонецПроцедуры

