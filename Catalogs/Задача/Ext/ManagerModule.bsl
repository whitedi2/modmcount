
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Ключ") И (БПСервер.ТекПользовательИсполнительЗадачи(Параметры.Ключ) ИЛИ НЕ ПараметрыСеанса.ДоступныеПользователи.Найти(Параметры.Ключ.Автор) = Неопределено) Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "Справочник.Задача.Форма.ФормаЗадачи";
		ТекЗадача = Параметры.Ключ;
		ТекЗаявка = ТекЗадача.Заявка;
		БПСервер.СнятьПометкуНовая(ТекЗадача);
		
		Если НЕ ЗначениеЗаполнено(ТекЗаявка) Тогда
			Если НЕ ТекЗадача.Выполнена Тогда
				ВыбраннаяФорма = "Справочник.Задача.Форма.ФормаЗадачиОбщая";
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если ТекЗадача.Выполнена Тогда
			Возврат;		
		КонецЕсли;
		
		Попытка
			ТекИмяФорма = "";
			ТекПараметры = Неопределено;
			Если ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.БП_Поручение") Тогда //если открываем поручение (документ)
				ИмяФормыПоручения = УзнатьФорму(ТекЗаявка, ТекЗадача);
				ТекИмяФорма = ИмяФормыПоручения;
				ТекПараметры = Новый Структура("Ключ", ТекЗадача);
			ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.Контрагенты") И ЛЕВ(ТекЗадача.Описание, 4) = "ИНН:" Тогда
				ТекИмяФорма = "Справочник.Контрагенты.Форма.ФормаБПСогласования";
				ТекПараметры = Новый Структура("Ключ", ТекЗадача);
			ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.БП_Оповещение") Тогда
				ТекИмяФорма = "Документ.БП_Оповещение.Форма.ФормаИсполнения";
				ТекПараметры = Новый Структура("Ключ", ТекЗадача);
			ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.сабОтпускаСотрудников") Тогда
				ИмяФормыОтпуска = УзнатьФормуОтпуска(ТекЗадача, ТекЗаявка);
				ТекИмяФорма = ИмяФормыОтпуска;
				ТекПараметры = Новый Структура("Ключ", ТекЗаявка);
			//ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.ОпознаваниеПлатежей") Тогда
			//	ПараметрыФормыОтпуска = ОпределитьФормуСогласования(ТекЗадача);
			//	ТекИмяФорма = ПараметрыФормыОтпуска.ТекФорма;
			//	ТекПараметры = ПараметрыФормыОтпуска;
				//ИначеЕсли ТипЗнч(Элементы.Список.ТекущиеДанные.Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаДоставку") Тогда
				//	ПараметрыФормыДоставки = ОпределитьФормуДоставки(ТекЗадача);
				//	ТекИмяФорма = ПараметрыФормыДоставки.ТекФорма;
				//	ТекПараметры = ПараметрыФормыДоставки;
			ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.Должности") Или ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.Номенклатура") Или
				ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.Контрагенты") Или ТипЗнч(ТекЗаявка) = Тип("СправочникСсылка.Организации") Тогда
				ТекИмяФорма = "ОбщаяФорма.ФормаПроверкиОбъектовБД";
				ТекПараметры = Новый Структура("Ключ", ТекЗадача);
			Иначе
				//если открыываем БП
				
				//ПараметрыФормы = ОпределитьНужнуюФорму(ТекЗадача);
				//ИмяФормыВыполненияСправочники = "";
				//Результат = ПараметрыФормы.Свойство("ИмяФормы", ИмяФормыВыполненияСправочники);
				//Если Результат Тогда
				//	ТекИмяФорма = ИмяФормыВыполненияСправочники;
				//	ТекПараметры = ПараметрыФормы.ПараметрыФормы;
				//КонецЕсли;
				// используем универсальную форму!!!
				
				ТекИмяФорма = "Справочник.Задача.Форма.ФормаУниверсальнаяНовая";
				
			Конецесли;
			
			ВыбраннаяФорма = ТекИмяФорма;
			
			//ТекФорма = ПолучитьФорму(ТекИмяФорма, ТекПараметры);
			////ТекФорма.Объект.Новая = Ложь;
			////ТекФорма.Записать();
			//ТекФорма.Открыть();
			//ТекФорма.ОбновитьОтображениеДанных();
			
		Исключение
			Сообщить("Ошибка открытия. Обратитесь к администратору");
		КонецПопытки;
		//Иначе
		//	Если БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		//		ВыбраннаяФорма = "Справочник.Задача.Форма.СписокМоихЗадач1"; 
		//		
		//	
		//	КонецЕсли;
	ИначеЕсли  ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Основание") Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "Справочник.Задача.Форма.ФормаЗадачиОбщая";	
	КонецЕсли;
КонецПроцедуры

Функция УзнатьФорму(Поручение, ТекЗадача)
	
	ТекМассивПользователей = ПараметрыСеанса.ДоступныеПользователи;
	ИмяФормыПоручения = "Документ.БП_Поручение.Форма.ФормаИсполнения";		
	//ИмяФормыПоручения = "Документ.БП_Поручение.Форма.ФормаКонтроля";
	//Для каждого ТекИсполнитель Из Поручение.СписокИсполнителей Цикл
	Если НЕ ТекМассивПользователей.Найти(Поручение.Автор) = Неопределено Тогда
		Если НЕ (не ТекМассивПользователей.Найти(ТекЗадача.Автор) = Неопределено И БПСервер.ТекПользовательИсполнительЗадачи(ТекЗадача)) Тогда //в случае если автор сам ставит себе Справочники
			ИмяФормыПоручения = "Документ.БП_Поручение.Форма.ФормаКонтроля";
		КонецЕсли;
		//ИмяФормыПоручения = "Документ.БП_Поручение.Форма.ФормаИсполнения";		
		//Прервать;
	КонецЕсли;	
	//КонецЦикла; 
	Возврат ИмяФормыПоручения;
	
КонецФункции // ()

Функция УзнатьФормуОтпуска(Задача, Отпуск)
	ТекМассивПользователей = ПараметрыСеанса.ДоступныеПользователи;
	ИмяФормыОтпуска = "Справочник.сабОтпускаСотрудников.Форма.ФормаЗамещающего";
	Если Задача.Исполнитель = Отпуск.Пользователь Тогда
		ИмяФормыОтпуска = "Справочник.сабОтпускаСотрудников.Форма.ФормаЭлемента";	
	КонецЕсли;
	Для каждого ТекСогласователь Из Отпуск.ДопСогласование Цикл
		Если НЕ ТекМассивПользователей.Найти(ТекСогласователь.СубъектСогласования) = Неопределено И НЕ ТекСогласователь.Согласовано Тогда// И НЕ ТекСогласователь.Пройден Тогда
			ИмяФормыОтпуска = "Справочник.сабОтпускаСотрудников.Форма.ФормаСогласования";		
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	Возврат ИмяФормыОтпуска;
КонецФункции // ()

Функция ОпределитьФормуСогласования(ТекСтрока)
	МассивПользователей = ПараметрыСеанса.ДоступныеПользователи;
	ТекФорма = "Справочник.ОпознаваниеПлатежей.ФормаОбъекта";
	ТекКлюч = ТекСтрока.Заявка;
	Если НЕ МассивПользователей.Найти(ТекСтрока.Исполнитель) = Неопределено ИЛИ (МассивПользователей.Найти(ТекСтрока.Заявка.Опознаватель) = Неопределено И НЕ МассивПользователей.Найти(ТекСтрока.Исполнитель) = Неопределено) Тогда
		ТекФорма = "Справочник.ОпознаваниеПлатежей.Форма.ФормаСогласования";
	КонецЕсли;
	Возврат Новый Структура("Ключ, ТекЗадача, ТекФорма", ТекКлюч, ТекСтрока, ТекФорма); 
КонецФункции // ()

Функция ОпределитьНужнуюФорму(ЗадачаСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.БизнесПроцесс,
	|	Таблица.ТочкаМаршрута,
	|	Таблица.Должность,
	|	БП_ДелегированиеЗадач.Замещающий КАК Исполнитель
	|ИЗ
	|	Справочник.Задача КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БП_ДелегированиеЗадач КАК БП_ДелегированиеЗадач
	|		ПО Таблица.Ссылка = БП_ДелегированиеЗадач.Задача
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ЗадачаСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Реквизиты = Новый Структура("БизнесПроцесс,ТочкаМаршрута");
	ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	
	Если Реквизиты.БизнесПроцесс = Неопределено ИЛИ Реквизиты.БизнесПроцесс.Пустая() Тогда
		Возврат Новый Структура();
	КонецЕсли;
	
	ТипБизнесПроцесса = Метаданные.НайтиПоТипу(ТипЗнч(Реквизиты.БизнесПроцесс));
	
	ПараметрыФормы = Справочники[ТипБизнесПроцесса.Имя].ФормаВыполненияСправочники(ЗадачаСсылка,
	Реквизиты.ТочкаМаршрута, Выборка);
	Возврат ПараметрыФормы;
	
КонецФункции

