
&НаКлиенте
Процедура ЦеныПоставщикаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ГруппаЗаданияЦен.Видимость = (Не Объект.ЦенаПоставщика И Не Объект.ЦенаРеализацииНаКонтрагента);
	Элементы.ГруппаНаценкаНаБазовыйВид.Видимость = (Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.НаценкаНаДругойВидЦен") Или Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.НаценкаНаЦенуПоступления"));
	Элементы.ВидЗаданияЦеныПоДаннымИБ.Видимость = (Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.ЗаполнятьПоДаннымИБ"));
	Элементы.Поставщик.Видимость = (Объект.ЦенаПоставщика Или Объект.ЦенаРеализацииНаКонтрагента);
	Элементы.РасширенныеНастройки.Видимость = Объект.РасширеннаяНастройкаНаценки;
	Элементы.Наценка.Видимость = Не (Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.Вручную"));
	Элементы.РасширеннаяНастройкаНаценки.Видимость = Не (Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.Вручную"));
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.Вручную");
	КонецЕсли;	
	
	УстановитьВидимость();
		
КонецПроцедуры

&НаКлиенте
Процедура СпособЗаданияЦеныПриИзменении(Элемент)
	
	Объект.РасширеннаяНастройкаНаценки = Ложь;
	
	УстановитьВидимость();
	
	Если Объект.СпособЗаданияЦены = ПредопределенноеЗначение("Перечисление.СпособыЗаданияЦен.НаценкаНаЦенуПоступления") Тогда
		Объект.БазовыйВидЦены = ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаПоступления");
	КонецЕсли;
	
	Объект.Наценка = 0;
		
КонецПроцедуры

&НаКлиенте
Процедура РасширеннаяНастройкаНаценкиПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	Если Объект.РасширеннаяНастройкаНаценки = Ложь Тогда
		Объект.РасширенныеНастройки.Очистить();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомГруппами(Команда)
	
	Перезаполнять = Истина;
	
	Если Объект.РасширенныеНастройки.Количество() > 0 Тогда
		Ответ = Вопрос("Таблица настроек не пуста, очистить перед заполнением?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Перезаполнять = Истина;
			Объект.РасширенныеНастройки.Очистить();
		Иначе
			Перезаполнять = Ложь;
		КонецЕсли;
	КонецЕсли;	
	
	Если Перезаполнять = Ложь Тогда
		Возврат;
	КонецЕсли;
		
	ВыборЗаполнения = ОткрытьФормуМодально("Справочник.ВидыЦен.Форма.ФормаОтбораНомГрупп");
	
	Если Не ВыборЗаполнения = Неопределено Тогда
		ЗаполнитьНомГруппыНаСервере(ВыборЗаполнения);	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьНомГруппыНаСервере(Уровень)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа
	|	И ВЫБОР
	|			КОГДА &Уровень = ""Иерархия 1 уровня""
	|				ТОГДА Номенклатура.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			КОГДА &Уровень = ""Иерархия 2 уровня""
	|				ТОГДА Номенклатура.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			КОГДА &Уровень = ""Иерархия 3 уровня""
	|				ТОГДА Номенклатура.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			КОГДА &Уровень = ""Иерархия 4 уровня""
	|				ТОГДА Номенклатура.Родитель.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	Запрос.УстановитьПараметр("Уровень", Уровень);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаРасширений = Объект.РасширенныеНастройки.Добавить();
		СтрокаРасширений.Номенклатура = Выборка.Ссылка;
	КонецЦикла;	
	
КонецПроцедуры