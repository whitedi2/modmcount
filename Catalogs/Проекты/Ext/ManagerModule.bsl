
Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Справочники.Проекты.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Проекты.ДатаНачала,
	|	Проекты.Код КАК Код,
	|	Проекты.Наименование,
	|	Проекты.СрокВыполнения,
	|	МИНИМУМ(Проекты.ДатаНачала) КАК МинДата,
	|	МАКСИМУМ(Проекты.СрокВыполнения) КАК МаксДата,
	|	РАЗНОСТЬДАТ(Проекты.ДатаОкончания, Проекты.ДатаНачала, ДЕНЬ) КАК РазностьДат,
	|	Проекты.Ссылка
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	(Проекты.Ссылка В ИЕРАРХИИ (&Ссылка)
	|			ИЛИ Проекты.Ссылка.Родитель В (&Ссылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	Проекты.ДатаНачала,
	|	Проекты.Код,
	|	Проекты.Наименование,
	|	Проекты.СрокВыполнения,
	|	РАЗНОСТЬДАТ(Проекты.ДатаОкончания, Проекты.ДатаНачала, ДЕНЬ),
	|	Проекты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МинДата = Ссылка[0].ДатаНачала;
	МаксДата = Ссылка[0].СрокВыполнения;
	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок|Колонка0");
	ОбластьЗаголовокКолонка = Макет.ПолучитьОбласть("Заголовок|Колонка");
	ОбластьЗаголовокКолонка2 = Макет.ПолучитьОбласть("Заголовок|Колонка2");
	ОбластьЗаголовокКолонка4 = Макет.ПолучитьОбласть("Заголовок|Колонка4");	
	
	
	МассивШапок = Новый Массив;
	МассивШапок.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка0"));
	МассивШапок.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка0"));
	МассивШапок.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка0"));
	МассивШапок.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка0"));
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка"));
	МассивКолонок.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка"));
	МассивКолонок.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка"));
	МассивКолонок.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка"));
	
	МассивКолонок1 = Новый Массив;
	МассивКолонок1.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка1"));
	МассивКолонок1.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка1"));
	МассивКолонок1.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка1"));
	МассивКолонок1.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка1"));
	
	МассивКолонок2 = Новый Массив;
	МассивКолонок2.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка2"));
	МассивКолонок2.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка2"));
	МассивКолонок2.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка2"));
	МассивКолонок2.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка2"));
	
	МассивКолонок3 = Новый Массив;
	МассивКолонок3.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка3"));
	МассивКолонок3.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка3"));
	МассивКолонок3.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка3"));
	МассивКолонок3.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка3"));
	
	МассивКолонок4 = Новый Массив;
	МассивКолонок4.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка4"));
	МассивКолонок4.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка4"));
	МассивКолонок4.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка4"));
	МассивКолонок4.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка4"));
	
	МассивКолонок5 = Новый Массив;
	МассивКолонок5.Добавить(Макет.ПолучитьОбласть("Шапка|Колонка5"));
	МассивКолонок5.Добавить(Макет.ПолучитьОбласть("Шапка1|Колонка5"));
	МассивКолонок5.Добавить(Макет.ПолучитьОбласть("Шапка2|Колонка5"));
	МассивКолонок5.Добавить(Макет.ПолучитьОбласть("Шапка3|Колонка5"));
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КалендарныеГрафики.ДеньВключенВГрафик,
	               |	КалендарныеГрафики.ДатаГрафика
	               |ИЗ
	               |	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	               |ГДЕ
	               |	КалендарныеГрафики.ДатаГрафика >= &ДатаГрафикаНачало
	               |	И КалендарныеГрафики.ДатаГрафика <= &ДатаГрафикаКонец";
	
	Запрос.УстановитьПараметр("ДатаГрафикаНачало", МинДата);
	Запрос.УстановитьПараметр("ДатаГрафикаКонец", МаксДата);
	
	РезультатПод = Запрос.Выполнить();
	ВыборкаПод = РезультатПод.Выгрузить();
	
	
	ТабДок.Вывести(ОбластьЗаголовок);
	Для ТекКолонка = 0 По Окр((МаксДата - МинДата)/60/60/24,0) Цикл
		ТекДатаЦикла = МинДата + ТекКолонка*60*60*24;
		
		Рабочий = Истина;
		НайтиДень = ВыборкаПод.НайтиСтроки(Новый Структура("ДатаГрафика", НачалоДня(ТекДатаЦикла)));
		Для каждого НайденныйДень Из НайтиДень Цикл
			Рабочий = НайденныйДень.ДеньВключенВГрафик;			
		КонецЦикла;
		
		Текущий = (НачалоДня(ТекДатаЦикла) = НачалоДня(ТекущаяДата()));
		
		ОбластьЗаголовокКолонка.Параметры.ДатаКолонки = МинДата + ТекКолонка*60*60*24;
		
		Если Текущий Тогда
			ОбластьЗаголовокКолонка2.Параметры.ДатаКолонки = МинДата + ТекКолонка*60*60*24;
			ТабДок.Присоединить(ОбластьЗаголовокКолонка2);
		ИначеЕсли НЕ Рабочий Тогда
			ОбластьЗаголовокКолонка4.Параметры.ДатаКолонки = МинДата + ТекКолонка*60*60*24;
			ТабДок.Присоединить(ОбластьЗаголовокКолонка4);
		Иначе
			ОбластьЗаголовокКолонка.Параметры.ДатаКолонки = МинДата + ТекКолонка*60*60*24;
			ТабДок.Присоединить(ОбластьЗаголовокКолонка);
		КонецЕсли;
		
	КонецЦикла; 
	
	
	ВставлятьРазделительСтраниц = Ложь;
	ТабДок.НачатьАвтоГруппировкуСтрок();
	Пока Выборка.Следующий() Цикл
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		ТекУровень = Выборка.Ссылка.Уровень();
		
		
		МассивШапок[ТекУровень].Параметры.Заполнить(Выборка);
		ТабДок.Вывести(МассивШапок[ТекУровень], ТекУровень);
		Для ТекКолонка = 0 По Окр((МаксДата - МинДата)/60/60/24,0) Цикл
			
			ТекДатаЦикла = МинДата + ТекКолонка*60*60*24;
			
			Рабочий = Истина;
			НайтиДень = ВыборкаПод.НайтиСтроки(Новый Структура("ДатаГрафика", НачалоДня(ТекДатаЦикла)));
			Для каждого НайденныйДень Из НайтиДень Цикл
				Рабочий = НайденныйДень.ДеньВключенВГрафик;			
			КонецЦикла;
			
			Текущий = (НачалоДня(ТекДатаЦикла) = НачалоДня(ТекущаяДата()));
			
			Если ТекДатаЦикла >= Выборка.ДатаНачала И ТекДатаЦикла <= Выборка.СрокВыполнения Тогда
				Если Текущий Тогда
					ТабДок.Присоединить(МассивКолонок3[ТекУровень], ТекУровень);
				ИначеЕсли НЕ Рабочий Тогда	
					ТабДок.Присоединить(МассивКолонок5[ТекУровень], ТекУровень);
				Иначе
					ТабДок.Присоединить(МассивКолонок1[ТекУровень], ТекУровень);
				КонецЕсли;
			Иначе
				Если Текущий Тогда
					ТабДок.Присоединить(МассивКолонок2[ТекУровень], ТекУровень);
				ИначеЕсли НЕ Рабочий Тогда	
					ТабДок.Присоединить(МассивКолонок4[ТекУровень], ТекУровень);
				Иначе
					ТабДок.Присоединить(МассивКолонок[ТекУровень], ТекУровень);
				КонецЕсли;
			КонецЕсли;
			//МассивКолонок[ТекУровень].Параметры.Заполнить(Выборка);
		КонецЦикла; 
		
	КонецЦикла;
	ВставлятьРазделительСтраниц = Истина;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	//}}
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
КонецПроцедуры
