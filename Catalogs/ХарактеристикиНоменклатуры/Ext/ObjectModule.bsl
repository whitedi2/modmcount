#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// В обработчике события "ПередЗаписью" объекта выполняется:
// - проверка корректности указания владельца с учетом поля "ИспользованиеХарактеристик" у владельца.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоНовый() Тогда

		СтруктураРеквизитов = Новый Структура;
		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
			СтруктураРеквизитов.Вставить("ИспользованиеХарактеристик", "ВидНоменклатуры.ИспользованиеХарактеристик");
		Иначе // Если владелец-тип справочник ВидыНоменклатуры.
			СтруктураРеквизитов.Вставить("ИспользованиеХарактеристик", "ИспользованиеХарактеристик");
		КонецЕсли;

		ЗначенияРеквизитовВИБ = ОбщегоНазначенияРТ.ПолучитьЗначенияРеквизитовОбъекта(Владелец, СтруктураРеквизитов);

		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда

			ПроверитьКорректностьВариантаВеденияДополнительныхДанныхПоНоменклатуре(Отказ,
				ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик,
				Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры);
		Иначе // Если владелец-тип справочник ВидыНоменклатуры.

			ПроверитьКорректностьВариантаВеденияДополнительныхДанныхПоНоменклатуре(Отказ,
				ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик,
				Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры);
		КонецЕсли;

	КонецЕсли;
	
	//подписка на событие
	БюджетныйНаСервере.ПередЗаписиЭлементовСправочниковПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры // ПередЗаписью()

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Характеристика = &Характеристика");
	
	Запрос.УстановитьПараметр("Характеристика", Ссылка);	
	Выборка = Запрос.Выполнить().Выбрать();             	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Штрихкод.Значение = Выборка.Штрихкод;
		НаборЗаписей.Отбор.Штрихкод.Использование = Истина;
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры // ПередУдалением()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ЗапрашиваемыеРеквизиты = Новый Структура;
	ЗапрашиваемыеРеквизиты.Вставить("ОсобенностьУчета");
	
	РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, ЗапрашиваемыеРеквизиты);
	
	Если РеквизитыОбъекта.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ
		И ЗначениеЗаполнено(КиЗГИСМGTIN)
		И Не МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(КиЗГИСМGTIN) Тогда
		ТекстСообщения = НСтр("ru = 'Указан некорректный GTIN.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "КиЗГИСМGTIN", "Объект", Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура проверяет соответствие переданного варианта ведения дополнительных данных по номенклатуре
// и корректного значения.
//
// Параметры:
//  Отказ              - Флаг отказа. Устанавливается, если проверка не пройдена.
//  ТекущееЗначение    - Текущее значение варианта ведения дополнительных данных по номенклатуре.
//  КорректноеЗначение - Корректное значение варианта ведения дополнительных данных по номенклатуре.
//
Процедура ПроверитьКорректностьВариантаВеденияДополнительныхДанныхПоНоменклатуре(Отказ, 
																				 ТекущееЗначение,
																				 КорректноеЗначение)

	Если ТекущееЗначение <> КорректноеЗначение Тогда

		ТекстСообщения = НСтр("ru = 'Для номенклатуры %Владелец% установлен признак использования характеристик %ТекущееЗначение%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Владелец%", Строка(Владелец));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТекущееЗначение%", Строка(ТекущееЗначение));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Владелец",, Отказ);

	КонецЕсли;

КонецПроцедуры // ПроверитьКорректностьВариантаВеденияДополнительныхДанныхПоНоменклатуре()

#КонецОбласти

#КонецЕсли
