&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
	ИзмененияВДоговоре.Параметры.УстановитьЗначениеПараметра("Объект", Объект.Ссылка);
	ЗаполнитьСписокФорматируемыхДоков();
		
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Раздел");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Пункт");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Преамбула");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Город");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Сторона1");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Сторона2");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Сторона1Подвал");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("Сторона2Подвал");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("ПодписьПодвалСторона1");
	Элементы.СодержаниеДоговораТипРаздела.СписокВыбора.Добавить("ПодписьПодвалСторона2");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидШаблонаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПередатьФорматируемыйТекст" И Параметр.ВладелецУИД = ЭтаФорма.УникальныйИдентификатор Тогда
		//ЗаписатьНаСервереБезКонтекста(Параметр, Элементы.СодержаниеДоговора.ТекущаяСтрока);
		//ЭтаФорма.Прочитать();
		ОбновитьФорматируемыйДокументВСписке(Параметр, Элементы.СодержаниеДоговора.ТекущаяСтрока);
		СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
		сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для каждого ТекСтрока Из ТекущийОбъект.СодержаниеДоговора Цикл
		ТекСтрока.ТекстФорматированный = Новый ХранилищеЗначения(СписокФорматируемыхДоков[ТекущийОбъект.СодержаниеДоговора.Индекс(ТекСтрока)].Значение, Новый СжатиеДанных(9));	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзШаблона(Команда)
	ТекШаблон = ОткрытьФормуМодально("Справочник.Д_ШаблоныДоговоров.ФормаВыбора");
	Если НЕ ТекШаблон = Неопределено Тогда
		СкопироватьШаблон(ТекШаблон);
		Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьШаблон(ТекШаблон)
	ЗагрузитьИзШаблонаСервер(ТекШаблон);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзШаблонаСервер(ТекШаблон)
	ТекОбъект = Объект.Ссылка.ПолучитьОбъект();
	ТекОбъект.СодержаниеДоговора.Загрузить(ТекШаблон.СодержаниеДоговора.Выгрузить());
	ТекстДоговора = "";
	//СформироватьHTML(ТекстДоговора, ТекШаблон, Истина);
	ТекОбъект.ТекстДоговора = ТекстДоговора;
	ТекОбъект.ШапкаДоговора = ТекШаблон.ШапкаДоговора;
	ТекОбъект.Преамбула = ТекШаблон.Преамбула;
	СформироватьПеременные(ТекОбъект);
	ТекОбъект.Записать();
КонецПроцедуры

&НаСервере
Процедура СформироватьПеременные(ТекОбъект = Неопределено)
	Если ТекОбъект = Неопределено Тогда
		ТекОбъект = Объект;
	КонецЕсли;
	
	Для каждого ТекСтрока Из ТекОбъект.СодержаниеДоговора Цикл
		МассивИменПеременных = ПолучитьИменаПеременныхИзТекста(ТекСтрока.Текст);
		Для каждого ИмяПеременной Из МассивИменПеременных Цикл
			Если НЕ ТекОбъект.СоответствиеПеременных.НайтиСтроки(Новый Структура("ИмяПеременной", ИмяПеременной)).Количество()  Тогда
				НоваяСтрокаПеременная = ТекОбъект.СоответствиеПеременных.Добавить();	
				НоваяСтрокаПеременная.ИмяПеременной = ИмяПеременной;
			КонецЕсли;
		КонецЦикла; 		
	КонецЦикла; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИменаПеременныхИзТекста(Текст)
	МассивИменПеременных = Новый Массив;
	Для ИндексСимволаНачало = 1 по СтрДлина(Текст) Цикл
		Если Сред(Текст, ИндексСимволаНачало, 1) = "#" Тогда
			ИндексСимволаКонец = ИндексСимволаНачало + 1;
			ТекСимвол = Сред(Текст, ИндексСимволаКонец, 1);
			Пока НЕ ТекСимвол = "#" И ИндексСимволаКонец <= СтрДлина(Текст) Цикл
				ТекСимвол = Сред(Текст, ИндексСимволаКонец, 1);
				ИндексСимволаКонец = ИндексСимволаКонец + 1;
			КонецЦикла;
			Если НЕ ИндексСимволаНачало + 1 = ИндексСимволаКонец Тогда
				ИмяПеременной = СреД(Текст, ИндексСимволаНачало, ИндексСимволаКонец - ИндексСимволаНачало);
				Если МассивИменПеременных.Найти(ИмяПеременной) = Неопределено Тогда
					МассивИменПеременных.Добавить(ИмяПеременной);
				КонецЕсли;
			КонецЕсли;
			ИндексСимволаНачало = ИндексСимволаКонец;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИменПеременных;
	
КонецФункции

&НаКлиенте
Функция ПолучитьИменаПеременныхИзТекстаНаКлиенте(Текст)
	МассивИменПеременных = Новый Массив;
	Для ИндексСимволаНачало = 1 по СтрДлина(Текст) Цикл
		Если Сред(Текст, ИндексСимволаНачало, 1) = "#" Тогда
			ИндексСимволаКонец = ИндексСимволаНачало + 1;
			ТекСимвол = Сред(Текст, ИндексСимволаКонец, 1);
			Пока НЕ ТекСимвол = "#" И ИндексСимволаКонец <= СтрДлина(Текст) Цикл
				ТекСимвол = Сред(Текст, ИндексСимволаКонец, 1);
				ИндексСимволаКонец = ИндексСимволаКонец + 1;
			КонецЦикла;
			Если НЕ ИндексСимволаНачало + 1 = ИндексСимволаКонец Тогда
				ИмяПеременной = СреД(Текст, ИндексСимволаНачало, ИндексСимволаКонец - ИндексСимволаНачало);
				Если МассивИменПеременных.Найти(ИмяПеременной) = Неопределено Тогда
					МассивИменПеременных.Добавить(ИмяПеременной);
				КонецЕсли;
			КонецЕсли;
			ИндексСимволаНачало = ИндексСимволаКонец;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИменПеременных;
	
КонецФункции


&НаСервереБезКонтекста
Процедура СформироватьHTML(НовостиHTML, Выборка, СоответствиеПеременных, РеквизитыШапки, ЗагрузкаШаблона = Ложь)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	*
	//|ИЗ
	//|	" + ?(ЗагрузкаШаблона,"Справочник.Д_ШаблоныДоговоров.СодержаниеДоговора", "Справочник.ДоговорыКонтрагентов.СодержаниеДоговора") + " КАК Д_ШаблоныДоговоровСодержаниеДоговора
	//|ГДЕ
	//|	Д_ШаблоныДоговоровСодержаниеДоговора.Ссылка = &Ссылка
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерСтроки";
	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выгрузить();
	
	//СоответствиеПеременных = Новый Соответствие;
	//Если Тип(Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
	//	Для каждого ТекСтрока Из Ссылка.СоответствиеПеременных Цикл
	//		СоответствиеПеременных.Вставить(ТекСтрока.ИмяПеременной, ТекСтрока.ЗначениеПеременной);		
	//	КонецЦикла; 
	//КонецЕсли;
	
	НовостиHTML = "<HTML><HEAD>
	|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type><LINK rel=stylesheet type=text/css href=""__STYLE__""><BASE href=""v8config://26d610bd-8712-4000-956d-0edbe58646d8/mdobject/idcf715f2f-493b-44cc-8c21-3424f7d402ea/8eb4fad1-1fa6-403e-970f-2c12dbb43e23"">
	|<META name=GENERATOR content=""MSHTML 11.00.9600.17041""></HEAD>
	|<BODY><font face=""Times New Roman, Tahoma, Geneva, sans-serif""><style>p {text-indent: 20px;}</style>";
	
	
	НовостиHTML = НовостиHTML + "<script type=""text/javascript"">function message() {window.scroll(0,100000);}</script>";
	НовостиHTML = НовостиHTML +  "
	|<table style=""width: 18cm; font-size: 10pt""><tbody>";
	
	НовостиHTML = НовостиHTML + "<tr>
	|<th style=""width: 50%""></th>
	|<th style=""width: 50%""></th>
	|</tr>";
	
	
	НовостиHTML = НовостиHTML  + "<tr><td   colspan=""2"" style=""width: 100%;text-align: center; margin-bottom: 1em ""><b>" + РеквизитыШапки.Наименование + " №</b></td></tr>";
	//НовостиHTML = НовостиHTML + "</tbody></table>";
	
	//НовостиHTML = НовостиHTML +  "
	//|<table style=""width: 17.5cm; font-size: 12pt; margin-bottom: 1em ""><tbody>";	
	НовостиHTML = НовостиHTML  + "<tr><td style=""width: 50%;text-align: left; "">#ГородДоговора#</td>";
	НовостиHTML = НовостиHTML  + "<td style=""width: 50%;text-align: right; "">" + Формат(РеквизитыШапки.ДатаДоговора, "ДФ='дд ММММ гггг'") + "</td></tr>";
	//НовостиHTML = НовостиHTML + "</tbody></table>";
	
	//НовостиHTML = НовостиHTML +  "
	//|<table style=""width: 17.5cm; font-size: 12pt""><tbody>";
	//НовостиHTML = НовостиHTML  + "<tr><td style=""width: 100%;text-align: justify; ""><p>" + РеквизитыШапки.Преамбула + "</p></td></tr>";
	
	НовостьВывода = 0;
	
	СодержаниеПодвал1 = "";
	СодержаниеПодвал2 = "";
	ПодписьПодвалСторона1 = "";
	ПодписьПодвалСторона2 = "";
	
	Для каждого ТекСтрокаШаблона Из Выборка Цикл
		
		ЭтоПодвал = ТекСтрокаШаблона.ТипРаздела = "Сторона1Подвал" ИЛИ ТекСтрокаШаблона.ТипРаздела = "Сторона2Подвал" ИЛИ ТекСтрокаШаблона.Номер = "ПодписьПодвалСторона1" ИЛИ ТекСтрокаШаблона.Номер = "ПодписьПодвалСторона2";
		
		Содержание = "";
		
		НачалоСодержания = Найти(ТекСтрокаШаблона.ТекстHTML, "<body>");
		КонецСодержания = Найти(ТекСтрокаШаблона.ТекстHTML, "</body>");
		Содержание = Сред(ТекСтрокаШаблона.ТекстHTML, НачалоСодержания + 7, КонецСодержания-НачалоСодержания-8);
		Если Содержание = "" Тогда
			Содержание = ТекСтрокаШаблона.Текст;		
		КонецЕсли; 
		
		//присваеваем значения переменным
		Для каждого ТекСтрокаСоотв Из СоответствиеПеременных Цикл
			
			Содержание = СтрЗаменить(Содержание, ТекСтрокаСоотв.ИмяПеременной, ТекСтрокаСоотв.ЗначениеПеременной);
			
		КонецЦикла;
	
		
		//добавляем номер пункта
		
		Если НЕ ЭтоПодвал Тогда
			Для ТекСимвИндекс = 1 по СтрДлина(Содержание) Цикл
				ТекСимв = Сред(Содержание, ТекСимвИндекс, 1);
				Если ТекСимв = "<" Тогда //ищем закрытую скобку
					Пока НЕ ТекСимв = ">" И ТекСимвИндекс <= СтрДлина(Содержание) Цикл
						ТекСимвИндекс = ТекСимвИндекс + 1;						
						ТекСимв = Сред(Содержание, ТекСимвИндекс, 1);
					КонецЦикла;
				Иначе //нашли какой-то текст наконец-то
					Содержание = Сред(Содержание,1 , ТекСимвИндекс - 1) + ТекСтрокаШаблона.Номер + " " + Сред(Содержание, ТекСимвИндекс, СтрДлина(Содержание) - ТекСимвИндекс + 1);
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		
		
		//Для Счетчик = 1 По СтрЧислоСтрок(ТекСтрокаШаблона.Текст) Цикл
		//	ТекСтрока = СтрПолучитьСтроку(ТекСтрокаШаблона.Текст, Счетчик);
		//	Содержание = Содержание + ТекСтрока + "<br>";
		//КонецЦикла;
		
		//СсылкаАвтор = ПолучитьНавигационнуюСсылку(ТекНовость.Автор);
		
		//заменяем несколько <p></p> на <br>. Абзац д.б. один
		ТекИндексСимвола = 1;
		КоличествоТэговР = 0;
		ЕстьТэг = Ложь;
		Пока ТекИндексСимвола <= СтрДлина(Содержание) Цикл
			Если Сред(Содержание, ТекИндексСимвола, 2) = "<p" Тогда //нашли начало тэга
				ЕстьТэг = Истина;
				КоличествоТэговР = КоличествоТэговР + 1;
				Если КоличествоТэговР > 1 Тогда //первый тэг <p> пропускаем
					ТекИндексСимвола2 = ТекИндексСимвола;
					Пока ТекИндексСимвола2 <= СтрДлина(Содержание) Цикл
						Если Сред(Содержание, ТекИндексСимвола2, 1) = ">" Тогда // нашли конец
							Содержание = Сред(Содержание, 1, ТекИндексСимвола - 1) + Сред(Содержание, ТекИндексСимвола2 + 1, СтрДлина(Содержание) - ТекИндексСимвола2);
							ТекИндексСимвола = ТекИндексСимвола2 - 1;
							Прервать;
						КонецЕсли;
						ТекИндексСимвола2 = ТекИндексСимвола2 + 1;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			ТекИндексСимвола = ТекИндексСимвола + 1;
		КонецЦикла;
		Содержание = СтрЗаменить(Содержание, "</p>", "<br>
		|");
		Содержание = ?(ЕстьТэг, "", "<p>") + Содержание + "</p>";
		
		
		
		Если ТекСтрокаШаблона.ТипРаздела = "Раздел" Тогда
			Содержание = СтрЗаменить(Содержание, "p style='", "p style='margin-top: 0.5em; margin-bottom: 1em; text-align: center;");
			Содержание = СтрЗаменить(Содержание, "<p>", "<p style='margin-top: 0.5em; margin-bottom: 1em; text-align: center;'>");
			НовостиHTML = НовостиHTML  + "<tr><td  colspan=""2"" style=""width: 100%;text-align: center;"">" + Содержание + "</td></tr>";
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "Пункт" Тогда
			Содержание = СтрЗаменить(Содержание, "p style='", "p style='text-align: justify;");
			Содержание = СтрЗаменить(Содержание, "<p>", "<p style='text-align: justify;'>");
			НовостиHTML = НовостиHTML  + "<tr><td  colspan=""2"" style=""width: 100%;text-align: justify;"">" + Содержание + "</td></tr>";
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "Сторона1Подвал" Тогда
			СодержаниеПодвал1 = Содержание;	
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "Сторона2Подвал" Тогда
			СодержаниеПодвал2 = Содержание;
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "ПодписьПодвалСторона1" Тогда
			ПодписьПодвалСторона1 = Содержание;
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "ПодписьПодвалСторона2" Тогда
			ПодписьПодвалСторона2 = Содержание;
		ИначеЕсли ТекСтрокаШаблона.ТипРаздела = "Город" Тогда
			НовостиHTML = СтрЗаменить(НовостиHTML, "#ГородДоговора#", Содержание);	
		Иначе
			//Если ЭтоПодвал Тогда
			//	НовостиHTML = НовостиHTML  + "<tr><td style=""width: 100%;text-align: left;"">" + Содержание + "</td></tr>";
			//Иначе
			НовостиHTML = НовостиHTML  + "<tr><td colspan=""2"" style=""width: 100%;text-align: justify;"">" + Содержание + "</td></tr>";
			//КонецЕсли;
			
			
		КонецЕсли;
		
		//НовостиHTML = НовостиHTML  + "<td style=""width: 10px;text-align: center;""><A href=v8object:" + ТекСтрокаШаблона.Номер + ">Редактировать пункт</A></td></tr>";
		
		
	КонецЦикла;
	
	//стороны подвал
	//НовостиHTML = НовостиHTML +  "
	//|<table style=""width: 17.5cm; font-size: 12pt; margin-bottom: 1em ""><tbody>";	
	НовостиHTML = НовостиHTML  + "<tr><td valign=""top"" style=""width: 50%;text-align: left; "">" + СодержаниеПодвал1 + "</td>";
	НовостиHTML = НовостиHTML  + "<td valign=""top"" style=""width: 50%;text-align: left; "">" + СодержаниеПодвал2 + "</td></tr>";
	
	НовостиHTML = НовостиHTML  + "<tr><td valign=""top"" style=""width: 50%;text-align: left; "">" + ПодписьПодвалСторона1 + "</td>";
	НовостиHTML = НовостиHTML  + "<td valign=""top"" style=""width: 50%;text-align: left; "">" + ПодписьПодвалСторона2 + "</td></tr>";
	//НовостиHTML = НовостиHTML + "</tbody></table>";

	
	НовостиHTML = НовостиHTML + "</tbody></table>";
	НовостиHTML = НовостиHTML + "<a name = ""forScroll""></a>";
	НовостиHTML = НовостиHTML + "</font></BODY></HTML>";
	
	//НовостиHTML = СтрЗаменить(НовостиHTML, "<span>", "");
	//НовостиHTML = СтрЗаменить(НовостиHTML, "</span>", "");
	//НовостиHTML = "";
КонецПроцедуры

&НаКлиенте
Процедура ТекстДоговораФДПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	БюджетныйНаКлиенте.ПриНажатииHTML(Элемент, ДанныеСобытия, СтандартнаяОбработка);
	Если Лев(ДанныеСобытия.Href, 9) = "v8object:" Тогда
		//НомерНовости = Сред(ДанныеСобытия.Href, 10);
		//Новость = НайтиНовостьПоКоду(НомерНовости);
		//ОткрытьФорму("Документ.Новости.Форма.ФормаКомментариев", Новый Структура("Ключ", Новость));
	ИначеЕсли Лев(ДанныеСобытия.Href, 11) = "v8newspage:" Тогда
		//БПСервер.ЗаполнитьНовости(Объект.ТекстДоговора, Число(Сред(ДанныеСобытия.Href, 12)));
	ИначеЕсли Найти(ДанныеСобытия.Href, "e1cib") Или Найти(ДанныеСобытия.Href, "http://") Тогда //остальные клики
		ПерейтиПоНавигационнойСсылке(Прав(ДанныеСобытия.Href, СтрДлина(ДанныеСобытия.Href) - Найти(ДанныеСобытия.Href, "e1cib") + 1));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораТекстНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Редактировать("");
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	//Если Не ЗначениеЗаполнено(Объект.Ссылка) ИЛИ Модифицированность Тогда
	//	Если НЕ Вопрос("Перед редактированием данные должны быть записаны. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да  Тогда
	//		Возврат;	
	//	Иначе
	//		Записать();
	//	КонецЕсли;
	//КонецЕсли;
	Если НЕ Элементы.СодержаниеДоговора.ТекущиеДанные = Неопределено Тогда
		ИндексСтроки = Объект.СодержаниеДоговора.Индекс(Объект.СодержаниеДоговора.НайтиПоИдентификатору(Элементы.СодержаниеДоговора.ТекущаяСтрока));
		ТекФорматируемыйТекстХранилище = СписокФорматируемыхДоков[ИндексСтроки].Значение;
		ОткрытьФорму("Справочник.Д_ШаблоныДоговоров.Форма.ФормаФорматирования", Новый Структура("Текст, ХранилищеТекста, ИндексСтроки, ВладелецУИД", Элементы.СодержаниеДоговора.ТекущиеДанные.Текст, ТекФорматируемыйТекстХранилище, ИндексСтроки, ЭтаФорма.УникальныйИдентификатор));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьФорматированныйДокумент(ИндексСтроки)
	
	Возврат Объект.Ссылка.СодержаниеДоговора[ИндексСтроки].ТекстФорматированный;
	
КонецФункции // ()

&НаКлиенте
Процедура СодержаниеДоговораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СодержаниеДоговораТекст" Тогда
		СтандартнаяОбработка = Ложь;
		Редактировать("");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорматируемыйДокументВСписке(Параметр, ТекСтрока)
	ИндексСтроки = Объект.СодержаниеДоговора.Индекс(Объект.СодержаниеДоговора.НайтиПоИдентификатору(ТекСтрока));
	СписокФорматируемыхДоков[ИндексСтроки].Значение = Параметр.ФорматируемыйТекст;
	Объект.СодержаниеДоговора[ИндексСтроки].Текст = Параметр.ФорматируемыйТекст.ПолучитьТекст();

	Объект.СодержаниеДоговора[ИндексСтроки].ТекстHTML = "";
	СтруктураКартинок = Новый Структура;
	СписокФорматируемыхДоков[ИндексСтроки].Значение.ПолучитьHTML(Объект.СодержаниеДоговора[ИндексСтроки].ТекстHTML, СтруктураКартинок);
	
	//Выгрузка картинок и корректировка ХТМЛ
	Для Каждого ТекКартинка Из СтруктураКартинок Цикл
		ФорматТекущейКартинки = Строка(ТекКартинка.Значение.Формат());
		Если Не ФорматТекущейКартинки = ФорматКартинки.НеизвестныйФормат Тогда
			ФорматТекущейКартинкиСтрока = Строка(ФорматТекущейКартинки);
			Объект.СодержаниеДоговора[ИндексСтроки].ТекстHTML = СтрЗаменить(Объект.СодержаниеДоговора[ИндексСтроки].ТекстHTML,ТекКартинка.Ключ,ТекКартинка.Ключ+ "." + ФорматТекущейКартинкиСтрока);
		КонецЕсли;
	КонецЦикла;

	
	
КонецПроцедуры


&НаСервере
Процедура ЗаписатьНаСервереБезКонтекста(Параметр, ТекСтрока)
	ИндексСтроки = Объект.СодержаниеДоговора.Индекс(Объект.СодержаниеДоговора.НайтиПоИдентификатору(ТекСтрока));
	ТекОбъект = Объект.Ссылка.ПолучитьОбъект();
	ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстФорматированный = Новый ХранилищеЗначения(Параметр.ФорматируемыйТекст, Новый СжатиеДанных(9));
	ТекОбъект.СодержаниеДоговора[ИндексСтроки].Текст = Параметр.ФорматируемыйТекст.ПолучитьТекст();
	
	
	ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстHTML = "";
	СтруктураКартинок = Новый Структура;
	ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстФорматированный.Получить().ПолучитьHTML(ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстHTML, СтруктураКартинок);
	
	//Выгрузка картинок и корректировка ХТМЛ
	Для Каждого ТекКартинка Из СтруктураКартинок Цикл
		ФорматТекущейКартинки = Строка(ТекКартинка.Значение.Формат());
		Если Не ФорматТекущейКартинки = ФорматКартинки.НеизвестныйФормат Тогда
			ФорматТекущейКартинкиСтрока = Строка(ФорматТекущейКартинки);
			ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстHTML = СтрЗаменить(ТекОбъект.СодержаниеДоговора[ИндексСтроки].ТекстHTML,ТекКартинка.Ключ,ТекКартинка.Ключ+ "." + ФорматТекущейКартинкиСтрока);
		КонецЕсли;
	КонецЦикла;
	
	
	ТекОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПеременные(Команда)
	Если Объект.ВидШаблона = "Шаблон по файлу" Тогда
		ПолучитьПеременныеИзФайла();	
	Иначе
		СформироватьПеременные();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПеременныеИзФайла()
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаИДвоичныеДанные(Объект.ФайлДоговора);
	ВремФайлИмя = ПолучитьимяВременногоФайла();
	ДанныеФайла.ДвоичныеДанные.Записать(ВремФайлИмя);
	
	Wk = Новый COMОбъект("Word.Application"); 
	Wk.Documents.Open(ВремФайлИмя); 
	Документ = Wk.ActiveDocument(); 
	Для н = 1 по Документ.Paragraphs.Count Цикл
		Текст=СокрЛП(Строка(Документ.Paragraphs(н).Range.Text));
		
		//удаляем спецсимволы
		Для ТекИндекс = 1 По СтрДлина(Текст) Цикл
			Если КодСимвола(Сред(Текст, ТекИндекс, 1)) < 10 Тогда			
				Текст = СтрЗаменить(Текст, Символ(КодСимвола(Сред(Текст, ТекИндекс, 1))), "");	
			КонецЕсли;		
		КонецЦикла; 
		
		Если ЗначениеЗаполнено(Текст) Тогда //если что-то есть
			МассивИменПеременных = ПолучитьИменаПеременныхИзТекстаНаКлиенте(Текст);
			Для каждого ИмяПеременной Из МассивИменПеременных Цикл
				Если НЕ Объект.СоответствиеПеременных.НайтиСтроки(Новый Структура("ИмяПеременной", ИмяПеременной)).Количество()  Тогда
					НоваяСтрокаПеременная = Объект.СоответствиеПеременных.Добавить();	
					НоваяСтрокаПеременная.ИмяПеременной = ИмяПеременной;
				КонецЕсли;
			КонецЦикла; 		
		КонецЕсли;
		//Сообщить(Текст);
	КонецЦикла;
	//Документ.DisplayAlerts = Ложь;
	Документ.Close();
	Wk.DisplayAlerts = Ложь;
	Wk.Quit();
	
КонецПроцедуры


&НаКлиенте
Процедура СоответствиеПеременныхЗначениеПеременнойПриИзменении(Элемент)
	ТекстДоговора = "";
	//СформироватьHTMLПоТабличнойЧасти(ТекстДоговора);
	Объект.ТекстДоговора	= ТекстДоговора;
	
	Если НЕ Элемент = Неопределено Тогда
		Элементы.СоответствиеПеременных.ТекущиеДанные.Расшифровка = "";
		Элементы.СоответствиеПеременных.ТекущиеДанные.ЭтаПредопределеннаяПеременная = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьHTMLПоТабличнойЧасти(ТекстДоговора)
	
	РеквизитыШапки = Новый Структура("Код, ДатаДоговора, Преамбула, ГородДоговора, Наименование", "", "", "", "", Объект.Наименование);
	
	Соответствия = Объект.СоответствиеПеременных.Выгрузить();
	ПредопределенныеСоответствия = ЗаполнитьСоответствия();
	Для каждого ТекСтрока Из Соответствия Цикл
		Если НЕ ПредопределенныеСоответствия.Получить(ТекСтрока.ЗначениеПеременной) = Неопределено Тогда
			ТекСтрока.ЗначениеПеременной = ПредопределенныеСоответствия.Получить(ТекСтрока.ЗначениеПеременной);			
		КонецЕсли;
	КонецЦикла; 
	
	СформироватьHTML(ТекстДоговора, Объект.СодержаниеДоговора.Выгрузить(), Соответствия, РеквизитыШапки);
	
	//Объект.ТекстДоговора = ТекстДоговора;
	

КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораПередУдалением(Элемент, Отказ)
	МассивУдаленных = Новый Массив;
	Для каждого ТекСтрока Из Элемент.ВыделенныеСтроки Цикл
		МассивУдаленных.Добавить(СписокФорматируемыхДоков[Объект.СодержаниеДоговора.Индекс(Объект.СодержаниеДоговора.НайтиПоИдентификатору(ТекСтрока))]);
	КонецЦикла; 
	
	Для каждого ТекЭл Из МассивУдаленных Цикл
		СписокФорматируемыхДоков.Удалить(ТекЭл);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	СписокФорматируемыхДоков.Добавить(Новый ФорматированныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеПеременныхЗначениеПеременнойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СоответствияРеквизитов = ЗаполнитьСоответствия();
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Ввести вручную...");
	Для каждого ТекСтрокаСоотв Из СоответствияРеквизитов Цикл
		СписокВыбора.Добавить(ТекСтрокаСоотв.Ключ);
	КонецЦикла;
	
	ТекЗнач = ВыбратьИзСписка(СписокВыбора);
	Если Не ТекЗнач = Неопределено Тогда
		Если НЕ ТекЗнач.Значение = "Ввести вручную..." Тогда
			СтандартнаяОбработка = Ложь;
			Элементы.СоответствиеПеременных.ТекущиеДанные.ЗначениеПеременной = ТекЗнач.Значение;
			Элементы.СоответствиеПеременных.ТекущиеДанные.Расшифровка = СоответствияРеквизитов[ТекЗнач.Значение];
			Элементы.СоответствиеПеременных.ТекущиеДанные.ЭтаПредопределеннаяПеременная = Истина;
			Модифицированность = Истина;
			СоответствиеПеременныхЗначениеПеременнойПриИзменении(Неопределено);
		Иначе
			Элементы.СоответствиеПеременных.ТекущиеДанные.Расшифровка = "";
			Элементы.СоответствиеПеременных.ТекущиеДанные.ЭтаПредопределеннаяПеременная = Ложь;	
		КонецЕсли;
	Иначе
		СтандартнаяОбработка = Ложь;	
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСоответствия()
	Соотв = Новый Соответствие;
	
	//Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СведенияОИсполнителе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Справочники.Организации.ПустаяСсылка(), ТекущаяДата());
		Соотв.Вставить("Наименование юр лица", ?(ЗначениеЗаполнено(СведенияОИсполнителе.ПолноеНаименование), СведенияОИсполнителе.ПолноеНаименование, СведенияОИсполнителе.Представление));
		Соотв.Вставить("ИНН юр лица", СведенияОИсполнителе.ИНН);
		Соотв.Вставить("КПП юр лица", СведенияОИсполнителе.КПП);
		Соотв.Вставить("Адрес юр лица", СведенияОИсполнителе.ЮридическийАдрес);
		Соотв.Вставить("Р/сч юр лица", СведенияОИсполнителе.НомерСчета);
		Соотв.Вставить("Банк юр лица", Строка(СведенияОИсполнителе.Банк));
		Соотв.Вставить("К/с банка юр лица", СведенияОИсполнителе.КоррСчет);
		Соотв.Вставить("БИК банка юр лица", СведенияОИсполнителе.БИК);
		Соотв.Вставить("Директор юр лица", "");
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		СведенияОЗаказчике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Справочники.Контрагенты.ПустаяСсылка(), ТекущаяДата());	
		Соотв.Вставить("Наименование контрагента", ?(ЗначениеЗаполнено(СведенияОЗаказчике.ПолноеНаименование), СведенияОЗаказчике.ПолноеНаименование, СведенияОЗаказчике.Представление));
		Соотв.Вставить("ИНН контрагента", СведенияОЗаказчике.ИНН);
		Соотв.Вставить("КПП контрагента", СведенияОЗаказчике.КПП);
		Соотв.Вставить("Адрес контрагента", СведенияОЗаказчике.ЮридическийАдрес);
		Соотв.Вставить("Р/сч контрагента", СведенияОЗаказчике.НомерСчета);
		Соотв.Вставить("Банк контрагента", Строка(СведенияОЗаказчике.Банк));
		Соотв.Вставить("К/с банка контрагента", СведенияОЗаказчике.КоррСчет);
		Соотв.Вставить("БИК банка контрагента", СведенияОЗаказчике.БИК);
		Соотв.Вставить("Директор контрагента", "");
	//КонецЕсли;
	//Соотв.Вставить("Директор контрагента", Строка(Объект.Организация.Директор));
	
	
	Возврат Соотв;
КонецФункции

&НаКлиенте
Процедура ОчиститьФормат(Команда)
	ИндексСтроки = Объект.СодержаниеДоговора.Индекс(Объект.СодержаниеДоговора.НайтиПоИдентификатору(Элементы.СодержаниеДоговора.ТекущаяСтрока));
	ФорматируемыйДок = Новый ФорматированныйДокумент;
	ФорматируемыйДок.Вставить(ФорматируемыйДок.ПолучитьЗакладкуНачала(), Элементы.СодержаниеДоговора.ТекущиеДанные.Текст);
	СписокФорматируемыхДоков[ИндексСтроки].Значение = ФорматируемыйДок;
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораНомерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//СписокВыбора = Новый СписокЗначений;
	//СписокВыбора.Добавить("Сторона1");
	//СписокВыбора.Добавить("Сторона2");
	//СписокВыбора.Добавить("ПодвалСторона1");
	//СписокВыбора.Добавить("ПодвалСторона2");
	//ТекЗнач = ВыбратьИзСписка(СписокВыбора);
	//Если НЕ ТекЗнач = Неопределено Тогда
	//	Элементы.СодержаниеДоговора.ТекущиеДанные.Номер = ТекЗнач.Значение;
	//	Модифицированность = Истина;
	//КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВWord(Команда)
	//Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	//Диалог.Фильтр = "Формат MS Word (*.doc;*.doc)|*.docx;*.docx|";
	//Если Диалог.Выбрать() Тогда
	//	ПутьКФайлу = Диалог.ПолноеИмяФайла;
	//Иначе
	//	Возврат;
	//КонецЕсли;
	 ПутьКФайлу = КаталогВременныхФайлов() + "resume.html";
	Элементы.ТекстДоговораФД.Документ.ExecCommand("SaveAs", Истина,ПутьКФайлу);
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	ТекФорма = ПолучитьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаПредварительногоПросмотра");
	СформироватьHTMLПоТабличнойЧасти(ТекФорма.ТекстДоговора);
	ТекФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзWord(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Формат MS Word (*.doc;*.docx)|*.doc;*.docx|";
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	Wk = Новый COMОбъект("Word.Application"); 
	Wk.Documents.Open(ПутьКФайлу); 
	Документ = Wk.ActiveDocument();
	
	НомерРаздела = 0;
	НомерПункта = 0;
	НайденПредметДоговора = Ложь;
	
	Для н = 1 по Документ.Paragraphs.Count Цикл
		Текст=СокрЛП(Строка(Документ.Paragraphs(н).Range.Text));
		
		//удаляем спецсимволы
		Для ТекИндекс = 1 По СтрДлина(Текст) Цикл
			Если КодСимвола(Сред(Текст, ТекИндекс, 1)) < 10 Тогда			
				Текст = СтрЗаменить(Текст, Символ(КодСимвола(Сред(Текст, ТекИндекс, 1))), "");
			ИначеЕсли КодСимвола(Сред(Текст, ТекИндекс, 1)) = 10 ИЛИ КодСимвола(Сред(Текст, ТекИндекс, 1)) = 11 Тогда
				Текст = СтрЗаменить(Текст, Символ(КодСимвола(Сред(Текст, ТекИндекс, 1))), Символы.ПС);	
			КонецЕсли;		
		КонецЦикла; 
		
		Если ЗначениеЗаполнено(Текст) Тогда //если что-то есть
			Если СтрДлина(Текст) < 8 Тогда //подозрение что это нумерация
				ТекПункт = КодСимвола(Текст);
			Иначе
				НоваяСтрока = Объект.СодержаниеДоговора.Добавить();
				Если ЗначениеЗаполнено(ТекПункт) Тогда
					НоваяСтрока.Номер = ТекПункт;
					ТекПункт = "";
				КонецЕсли;
				НоваяСтрока.Текст = Текст;
				НоваяСтрока.ТипРаздела = ?(СтрДлина(Текст) < 60, "Раздел", "Пункт");
				
				Если СтрНайти(НРег(НоваяСтрока.Текст), "предмет договора") Тогда
					НайденПредметДоговора = Истина;				
				КонецЕсли;
				
				Если НайденПредметДоговора Тогда
					Если НоваяСтрока.ТипРаздела = "Раздел" Тогда
						НомерРаздела = НомерРаздела + 1;
						НомерПункта = 0;
					ИначеЕсли НоваяСтрока.ТипРаздела = "Пункт" Тогда
						НомерПункта = НомерПункта + 1;
					КонецЕсли;
				КонецЕсли;
				ЕстьНомер = Ложь;
				Для ТекСимв = 1 По Мин(СтрДлина(Текст), 10)  Цикл
					Если Сред(Текст, ТекСимв, 1) = "." Тогда //нашли первую точку в 10 символах, значит это номер раздела
						Для ТекСимв2 = ТекСимв + 1 По Мин(СтрДлина(Текст), 10) Цикл
							Если Сред(Текст, ТекСимв2, 1)= " " Тогда
								НоваяСтрока.Номер = Сред(Текст, 1, ТекСимв2 - 1);
								НоваяСтрока.Текст = Сред(Текст, ТекСимв2, СтрДлина(Текст));
								ЕстьНомер = Истина;
							КонецЕсли;							
						КонецЦикла;  
					КонецЕсли;
				КонецЦикла;
				Если НЕ ЕстьНомер И НайденПредметДоговора Тогда
					Если НоваяСтрока.ТипРаздела = "Раздел" Тогда
						НоваяСтрока.Номер = Строка(НомерРаздела) + ".";
					ИначеЕсли НоваяСтрока.ТипРаздела = "Пункт" Тогда
						НоваяСтрока.Номер = Строка(НомерРаздела) + "." + Строка(НомерПункта) + ".";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//Сообщить(Текст);
	КонецЦикла;
	//Документ.DisplayAlerts = Ложь;
	Документ.Close();
	Wk.DisplayAlerts = Ложь;
	Wk.Quit();
	ЗаполнитьСписокФорматируемыхДоковНовых();
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
КонецПроцедуры

&НаКлиенте
Процедура ОбъединитьСтроки(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ЗаполнитьСписокФорматируемыхДоковНовых();
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
	СформироватьПеременные();
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуШаблонаДоговораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Формат MS Word (*.doc;*.docx)|*.doc;*.docx|";
	Если Диалог.Выбрать() Тогда
		ВыбратьИЗагрузитьШаблонДоговора = Диалог.ПолноеИмяФайла;
		Объект.СоответствиеПеременных.Очистить();
	Иначе
		Возврат;
	КонецЕсли;
	Wk = Новый COMОбъект("Word.Application"); 
	Wk.Documents.Open(ВыбратьИЗагрузитьШаблонДоговора); 
	Документ = Wk.ActiveDocument(); 
	Для н = 1 по Документ.Paragraphs.Count Цикл
		Текст=СокрЛП(Строка(Документ.Paragraphs(н).Range.Text));
		
		//удаляем спецсимволы
		Для ТекИндекс = 1 По СтрДлина(Текст) Цикл
			Если КодСимвола(Сред(Текст, ТекИндекс, 1)) < 10 Тогда			
				Текст = СтрЗаменить(Текст, Символ(КодСимвола(Сред(Текст, ТекИндекс, 1))), "");	
			КонецЕсли;		
		КонецЦикла; 
		
		Если ЗначениеЗаполнено(Текст) Тогда //если что-то есть
			МассивИменПеременных = ПолучитьИменаПеременныхИзТекстаНаКлиенте(Текст);
			Для каждого ИмяПеременной Из МассивИменПеременных Цикл
				Если НЕ Объект.СоответствиеПеременных.НайтиСтроки(Новый Структура("ИмяПеременной", ИмяПеременной)).Количество()  Тогда
					НоваяСтрокаПеременная = Объект.СоответствиеПеременных.Добавить();	
					НоваяСтрокаПеременная.ИмяПеременной = ИмяПеременной;
				КонецЕсли;
			КонецЦикла; 		
		КонецЕсли;
		//Сообщить(Текст);
	КонецЦикла;
	//Документ.DisplayAlerts = Ложь;
	Документ.Close();
	Wk.DisplayAlerts = Ложь;
	Wk.Quit();
	


КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьЗначения(Команда)
	Попытка
		Wk = Новый COMОбъект("Word.Application"); 
		Wk.Documents.Open(ВыбратьИЗагрузитьШаблонДоговора); 
		Документ = Wk.ActiveDocument(); 
		Для каждого ТекПеременная Из Объект.СоответствиеПеременных Цикл
			Документ.Content.Find.Execute(ТекПеременная.ИмяПеременной,,,,,,,,,ТекПеременная.ЗначениеПеременной,2)
		КонецЦикла;
		Документ.Save();
		Документ.Close();
		Wk.DisplayAlerts = Ложь;
		Wk.Quit();
		Сообщить("Замена переменных выполнена!");
	Исключение
		
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокЗн = Новый СписокЗначений;
	СписокЗн.Добавить("Договор аренды");
	СписокЗн.Добавить("Договор займа");
	СписокЗн.Добавить("Договор купли-продажи");
	СписокЗн.Добавить("Договор о полной материальной ответственности");
	СписокЗн.Добавить("Договор поставки");
	СписокЗн.Добавить("Договор услуг");
	СписокЗн.Добавить("Договор перевозки");
	СписокЗн.Добавить("Договор подряда");
	СписокЗн.Добавить("Договор финансовой аренды(лизинга)");
	СписокЗн.Добавить("Договор страхования");
	СписокЗн.Добавить("Договор хранения");
	
	ВыбранноеЗначение = ВыбратьИзМеню(СписокЗн, Элемент);
	Если НЕ ВыбранноеЗначение = Неопределено Тогда
		Объект.Наименование = ВыбранноеЗначение.Значение;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокФорматируемыхДоков()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Для каждого ТекСтрока Из Объект.Ссылка.ПолучитьОбъект().СодержаниеДоговора Цикл
			ЗначХранилища = ТекСтрока.ТекстФорматированный.Получить();
			СписокФорматируемыхДоков.Добавить(ЗначХранилища);
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокФорматируемыхДоковНовых()
	Для каждого ТекСтрока Из Объект.СодержаниеДоговора Цикл
		ЗначХранилища = Новый ФорматированныйДокумент;
		ЗначХранилища.Вставить(ЗначХранилища.ПолучитьЗакладкуНачала(), ТекСтрока.Текст);
		СписокФорматируемыхДоков.Добавить(ЗначХранилища);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасшифровкиСоответствий()
	СоответствияРеквизитов = ЗаполнитьСоответствия();
	Для каждого ТекСтрока Из Объект.СоответствиеПеременных Цикл
		Если НЕ СоответствияРеквизитов[ТекСтрока.ЗначениеПеременной] = Неопределено Тогда
			ТекСтрока.Расшифровка = СоответствияРеквизитов[ТекСтрока.ЗначениеПеременной];
			ТекСтрока.ЭтаПредопределеннаяПеременная = Истина;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеДоговораПослеУдаления(Элемент)
	ЗаполнитьСписокФорматируемыхДоковНовых();
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
КонецПроцедуры

&НаКлиенте
Процедура ВидШаблонаПриИзменении(Элемент)
	ПоФайлу = Объект.ВидШаблона = "Шаблон по файлу";
	Элементы.СодержаниеДоговора.Видимость = Не ПоФайлу;
	Элементы.ФайлДоговора.Видимость = ПоФайлу;
	Элементы.ТекстДоговораФД.Видимость = НЕ ПоФайлу;
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеПеременныхПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СформироватьHTMLПоТабличнойЧасти(Объект.ТекстДоговора);
КонецПроцедуры


