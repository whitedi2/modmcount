
&НаКлиенте
Процедура Принять(Команда)
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		ПринятьСервер(Истина);
		ОповеститьОбИзменении(Тип("СправочникСсылка.Задача"));
		Оповестить("ОбновитьСписокЗадач");
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПринятьСервер(РезультатЗамещения)
	
	//согласовываем либо отменяем
	ДоступныеПользователи = БПСервер.ПолучитьМассивПользователей();
	ТекОбъект = Ссылка.ПолучитьОбъект();
	Для каждого ТекСтрока Из ТекОбъект.ДопСогласование Цикл
		Если НЕ ДоступныеПользователи.Найти(ТекСтрока.СубъектСогласования) = Неопределено Тогда
			ТекСтрока.Пройден = Истина;
			ТекСтрока.Согласовано = РезультатЗамещения;
			ТекСтрока.КомментарииПользователя = Комментарий;
			
			//выполняем задачу
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Задача.Ссылка
			|ИЗ
			|	Справочник.Задача КАК Задача
			|ГДЕ
			|	Задача.Заявка = &Заявка
			|	И Задача.Исполнитель = &Исполнитель";
			
			Запрос.УстановитьПараметр("Заявка", Ссылка);
			Запрос.УстановитьПараметр("Исполнитель", ТекСтрока.СубъектСогласования);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				БПСервер.ВыполнитьЗадачу(Выборка.Ссылка,0, ?(РезультатЗамещения, "Да", "Нет"), Комментарий);	
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ТекОбъект.Записать();
	
	//если все согласовали, создаем задачу замещающему либо отпускнику(в случае отказа)
	Если РезультатЗамещения Тогда
		ОтобранныеСтроки = ТекОбъект.ДопСогласование.НайтиСтроки(Новый Структура("Согласовано", Ложь));
		Если НЕ ОтобранныеСтроки.Количество() И Не Ссылка.ОтпускникОтсутствуетВБазе Тогда
			Задача = Задачи.Задача.СоздатьЭлемент();		
			Задача.Заявка = Ссылка;
			Задача.Дата = ТекущаяДата();
			Задача.Наименование = "Принять обязанности отпускника: " + Строка(Пользователь);
			Задача.Автор = БюджетныйНаСервере.ПолучитьПользователя();
			Задача.Описание = Примечания;
			Задача.Комментарии = Комментарий;
			Задача.Исполнитель = Замещающий;
			Задача.Записать();
		Иначе
			Для Каждого ОтобраннаяСтрока Из ОтобранныеСтроки Цикл
				Задача = Задачи.Задача.СоздатьЭлемент();		
				Задача.Заявка = Ссылка;
				Задача.Дата = ТекущаяДата();
				Задача.Наименование = "Согласовать отпуск " + Строка(Пользователь);
				Задача.Автор = БюджетныйНаСервере.ПолучитьПользователя();
				Задача.Описание = Примечания;
				Задача.Комментарии = Комментарий;
				Задача.Исполнитель = ОтобраннаяСтрока.СубъектСогласования;
				Задача.Записать();
				Прервать;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Задача = Задачи.Задача.СоздатьЭлемент();		
		Задача.Заявка = Ссылка;
		Задача.Дата = ТекущаяДата();
		Задача.Наименование = "Отпуск отклонен пользователем " + Строка(БюджетныйНаСервере.ПолучитьПользователя()) + ". Причина: " + Комментарий;
		Задача.Автор = БюджетныйНаСервере.ПолучитьПользователя();
		Задача.Описание = Примечания;
		Задача.Комментарии = Комментарий;
		Задача.Исполнитель = Ссылка.Автор;
		Задача.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		ПринятьСервер(Ложь);
		ОповеститьОбИзменении(Тип("СправочникСсылка.Задача"));
		Оповестить("ОбновитьСписокЗадач");
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураДанных = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Заявка, "Пользователь, Замещающий, ДатаНачала, ДатаОкончания, Примечания");
	
	Пользователь = СтруктураДанных.Пользователь;
	Замещающий = СтруктураДанных.Замещающий;
	ДатаНачала = СтруктураДанных.ДатаНачала;
	ДатаОкончания = СтруктураДанных.ДатаОкончания;
	Примечания = СтруктураДанных.Примечания;
	Ссылка = Объект.Заявка;
	
КонецПроцедуры





