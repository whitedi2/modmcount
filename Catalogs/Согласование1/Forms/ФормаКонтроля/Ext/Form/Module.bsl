        	
&НаСервере
Процедура ВыполненоСервер(ПроверкаУспешно, ВставлятьКомм)
	
	НачатьТранзакцию();
	
	//добавляем комментарии в историю переписки
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	Если ВставлятьКомм Тогда
		Объект.Комментарии = Строка(ТекущаяДата()) + ": " + ПараметрыСеанса.ТекущийПользователь + " проверил заявку:
		|" + Комментарий;
		БП.Комментарии = БП.Комментарии + ?(ПустаяСтрока(БП.Комментарии), "", "
		|") + Объект.Комментарии;
	КонецЕсли;
	
	БП.СогласованоДействие3 = ПроверкаУспешно;
	
	ТЗ = ДопСогласование.Выгрузить();
	ТЗПервоначальное = ДопСогласованиеПервоначальное.Выгрузить();
	БП.ДопСогласование.Загрузить(ТЗ);
	
	//добавляем
	
	Если НЕ ВставлятьКомм Тогда // если заявка отменена
		СтруктураПоиска = Новый Структура("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		МассивСтрок = БП.ДопСогласование.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() Тогда //если отменяет один из рецензентов
			Для каждого ТекСтрока Из МассивСтрок Цикл
				ТекСтрока.Пройден = 0;
				ТекСтрока.Согласовано = 0;
				ТекСтрока.ДатаВыполнения = ТекущаяДата();
				ТекСтрока.Комментарии = "Отменил(а) заявку. " + Строка(Комментарий);
				Комментарий = "Отменил(а) заявку. " +  Комментарий;
				ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			КонецЦикла;
		Иначе //если отменяет не рецензент
			Комментарий = "Отменил(а) заявку. " +  Комментарий;
		КонецЕсли;
	Иначе // если заявка согласована(или нет) ОФК
		БП.ПроверенОФК = Истина;
		БП.СогласованОФК = ПроверкаУспешно;
		БП.КомментарииОФК = Комментарий;	
		БП.ПользовательОФК = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	

	БП.Записать();
	
	БПСервер.ВыполнитьЗадачу(Объект.Ссылка, 0, ?(ПроверкаУспешно, "Да.", "Нет."), Комментарий);
	
	//БПСервер.ИзменитьСостояниеДокумента(Объект.Заявка, 1 - ПроверкаУспешно);
	
	//поиск отмененных позиций
	БПСервер.ОповеститьПользователяОбОтмененныхПозициях(Объект.Заявка);
	
	//Оповестим автора об изменении маршрута бизнес-процесса
	БПСервер.СообщитьОбИзмененииМаршрута(Объект, ТЗ, ТЗПервоначальное);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаСогласована(Команда)
	УдалениеПустых();
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
		Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("согласовать данную заявку") Тогда
		Возврат;
	КонецЕсли;
	//Если Записать() Тогда
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		//ВыполненоСервер(1, 1);
		БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ОбновитьСписокЗадач");
		Закрыть();
	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	ТЗ = БП.ДопСогласование.Выгрузить();
	ДопСогласование.Загрузить(ТЗ);
	ДопСогласованиеПервоначальное.Загрузить(ТЗ);
	
	//МассивПользователей = БПСервер.ПолучитьМассивПользователей();
	Если НЕ БПСервер.ТекПользовательИсполнительЗадачи(Объект.Ссылка) Тогда
		Элементы.ЗаявкаСогласована.Видимость = 0;
		Элементы.НаДоработку.Видимость = 0;
		//Элементы.Группа9.Видимость = Ложь;
	Иначе
		Элементы.ОтменаЗаявки.Видимость = 0;
	КонецЕсли;
	
	Объект.Комментарии = БП.Комментарии;
	АвторДокумента = Объект.Заявка.Автор;
	
	//Элементы.ЗадачаЗадачаУстановитьСрокВыполнения.Видимость = Не Объект.ВРаботе;
	сабОбщегоНазначения.ОбновитьКоличествоПрикрепленныхФайловСервер(ЭтаФорма);
	
	
	//ТЧ = БюджетныйНаСервере.ПроверкаНаличияВерхов(Объект.Ссылка);
	//
	//Если ТЧ.Количество() Тогда
	//	Элементы.ДопДанные.Видимость = Истина;	
	//	ДопДанные.Загрузить(ТЧ);
	//КонецЕсли;
	
	Элементы.Редактировать.Видимость = ПроверкаСтроительнойЗаявки();
	
	РезультатПоЛимитам = Документы.Д_ЗаявкаНаОплату.РасчитатьЛимиты(Объект.Заявка);
	Превышение = Ложь;
	ВыборкаПоЛимитам = РезультатПоЛимитам.Выбрать();
	Пока ВыборкаПоЛимитам.Следующий() Цикл
		Если ВыборкаПоЛимитам.ОсталосьПоСтатье < 0 Тогда 
			Превышение = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	Перерасход = ?(Превышение, "Есть перерасход по статьям заявки!", "Перерасхода по статьям заявки нет.") + " (Сцен.: " + Строка(БюджетныйНаСервере.ПолучитьАктуальныйСценарий(ТекущаяДата())) + ")";
	
	Если Превышение Тогда
		Элементы.Перерасход.ЦветТекста = Новый Цвет(255, 0, 0);
	Иначе
		Элементы.Перерасход.ЦветТекста = Новый Цвет(51, 153, 102);	
	КонецЕсли;
	
	БПСервер.ЗаписатьДействиеПользователяВЛог(Объект.Ссылка, "ПриОткрытии");
	
КонецПроцедуры


&НаКлиенте
Процедура УдалениеПустых()
	СписокУдаленных = новый Массив;
	Для каждого ТекСтрока Из ДопСогласование Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.СубъектСогласования) Тогда
			СписокУдаленных.Добавить(ТекСтрока);		
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекУдаленнаяСтрока Из СписокУдаленных Цикл
		ДопСогласование.Удалить(ТекУдаленнаяСтрока);	
	КонецЦикла; 
	

КонецПроцедуры

&НаКлиенте
Процедура НаДоработку(Команда)
	УдалениеПустых();
	
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
	    Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("отправить на доработку данную заявку") Тогда
		Возврат;
	КонецЕсли;
	
	//Если ПустаяСтрока(Комментарий) И НЕ ВвестиСтроку(Комментарий, "Причина возврата заявки на доработку:") Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если ПустаяСтрока(Комментарий) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(Объект,  "Не указана причина возврата на доработку",,, "Комментарий", Истина);
		Возврат;
	КонецЕсли;
	
	//Если Записать() Тогда
		Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
			//ВыполненоСервер(0, 1);
			БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			Закрыть();
		КонецЕсли;
	//КонецЕсли;
	
	// оповестить о доработке
	БПСервер.ОповеститьОДоработке(Объект.БизнесПроцесс, Объект.Исполнитель, Комментарий);
	
КонецПроцедуры


&НаКлиенте
Процедура ОтменаЗаявки(Команда)
	УдалениеПустых();
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
	    Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("отменить согласование по данной заявке") Тогда
		Возврат;
	КонецЕсли;
	//Если Записать() Тогда
		Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
			//ВыполненоСервер(0, 0);
			БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			Закрыть();
		КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередУдалением(Элемент, Отказ)
		ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
		Если ТекСтрока.Согласовано Тогда
			Предупреждение("Невозможно удалить строку, т.к. субъект " + Строка(ТекСтрока.СубъектСогласования) + " уже согласовал заявку.");
			Отказ = Истина;
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВернутьДФК(Номер)
	Если Номер Тогда
		Возврат Справочники.Пользователи.РуководительДКФ;
	Иначе
		Возврат Справочники.Пользователи.ЗамРуководителяДКФ;	
	КонецЕсли;
КонецФункции // ()


&НаКлиенте
Процедура ДобавитьФин(Номер)
	СтруктураПоиска = Новый Структура("СубъектСогласования", ВернутьДФК(Номер));
	Если НЕ ДопСогласование.НайтиСтроки(СтруктураПоиска).Количество() Тогда
		НоваяСтрока = ДопСогласование.Добавить();
		НоваяСтрока.СубъектСогласования = ВернутьДФК(Номер);
		НоваяСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя();
	КонецЕсли;
КонецПроцедуры
 


&НаКлиенте
Процедура СогласованиеЗам(Команда)
	ДобавитьФин(0);
КонецПроцедуры


&НаКлиенте
Процедура СогласованиеФинДир(Команда)
	ДобавитьФин(1);
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередНачаломИзменения(Элемент, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	Если ТекСтрока.Пройден ИЛИ НЕ ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя() И НЕ ПустаяСтрока(ТекСтрока.СубъектСогласования) Тогда
		Предупреждение("Невозможно редактирование строки.");		
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеСубъектСогласованияПриИзменении(Элемент)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя(); 
КонецПроцедуры


&НаКлиенте
Процедура КонтрольДДС(Команда)
	БюджетныйНаКлиенте.УниверсальноеВыполнениеКоманды(Объект.Заявка, "Документ.Д_ЗаявкаНаОплату.Команда.ПроверкаСоответствияБюджету");
КонецПроцедуры

&НаСервере
Процедура Печать(ТабДок, ПараметрКоманды)
	Документы.Д_ЗаявкаНаОплату.ПроверкаСоответствия(ТабДок, ПараметрКоманды);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//не нашёл где бы они использовались в этой процедуре
	//РеквизитыЗаявки = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Заявка, "Файл, Автор");
		
	ЭтаФорма.ЗаблокироватьДанныеФормыДляРедактирования();
		
КонецПроцедуры


&НаКлиенте
Процедура ПечатьЗаявки(Команда)
		
	БюджетныйНаКлиенте.УниверсальноеВыполнениеКоманды(Объект.Заявка, "");
	
КонецПроцедуры


&НаСервере
Процедура Печать2(ТабДок, ПараметрКоманды)
	Документы.Д_ЗаявкаНаОплату.Печать(ТабДок, ПараметрКоманды);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ОткрытьФорму("Справочник.Файлы.ФормаОбъекта", Новый Структура("Ключ", БюджетныйНаСервере.ВернутьРеквизит(Объект.Заявка, "Файл"))); 
КонецПроцедуры

&НаКлиенте
Процедура ДопСогласованиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование Тогда
		Отказ = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоКазне(Команда)
	Форма = ПолучитьФорму("Отчет.Д_СоответствиеЛимитамКазны.Форма"); ;
	ДанныеФормы = Форма.Отчет;
	ЗаполнитьНаСервере(ДанныеФормы, Объект.Заявка);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Отчет);
	Форма.СкомпоноватьРезультат();
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ТекОбъект, ТекЗаявка)
	ТекОбъект.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	ТекОбъект.Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	ТекОбъект.ТекЗаявка = ТекЗаявка;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытьФормуСправочники" Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруРеквизитовФормы()
	Возврат БПСервер.ПолучитьСтруктуруРеквизитовФормы(ЭтаФорма);
КонецФункции

&НаКлиенте
Процедура ОткрытьРеестрДоговоренностей(Команда)
	ОткрытьФорму("РегистрСведений.КС_РеестрДоговоренностей.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	ОткрытьФорму("Документ.Д_ЗаявкаНаОплату.Форма.ФормаРедактированиеПлательщикаЗаявки", Новый Структура("СсылкаНаЗаявку", Объект.Заявка));
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСтроительнойЗаявки()
	
	//Если ПараметрыСеанса.ТекущийПользователь = Константы.СотрудникОФКСтройка.Получить() Тогда
	//	Если Объект.ТочкаМаршрута = Перечисления.Согласование1ТочкиМаршрута.Действие3 Тогда
	//		Возврат Истина;
	//	КонецЕсли;	
	//КонецЕсли;	
	
	ВОзврат Ложь;
	
КонецФункции	

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	БПСервер.ЗаписатьДействиеПользователяВЛог(Объект.Ссылка, "ПослеЗаписи");
КонецПроцедуры
