Процедура Действие1ПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, Отказ)
	Для каждого Задача Из ФормируемыеСправочники Цикл
        Задача.Заявка = Заявка;
		Задача.Предприятие = Предприятие;
		Задача.Автор = ПараметрыСеанса.ТекущийПользователь;
		Задача.Описание = Описание;
    КонецЦикла;
КонецПроцедуры

Процедура Действие1ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Задача = Справочники.Задача.СоздатьЭлемент();		
	Задача.Заявка = Заявка;
	Задача.Дата = ТекущаяДата();
	Задача.Предприятие = Предприятие;
	Задача.Наименование = "Доработать Внутренний документ";
	
	Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
	Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
	
	Задача.Автор = ПараметрыСеанса.ТекущийПользователь;
	Задача.Описание = Описание;
	Задача.Исполнитель = Автор;
		
	Задача.Записать();
	ФормируемыеСправочники.Добавить(Задача);
	
КонецПроцедуры

Процедура Действие2ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Для каждого РольПользователь Из ДопСогласование  Цикл
		Если РольПользователь.Пройден Тогда
			Продолжить;		
		КонецЕсли;
		
		Если РольПользователь.СубъектСогласования.Пустая() Тогда
			Продолжить;		
		КонецЕсли;
		
		Если ТочкаМаршрутаБизнесПроцесса = Перечисления.Согласование2ТочкиМаршрута.Действие2 Тогда
			Если РольПользователь.РезультирующееСогласование Тогда
				Продолжить;			
			КонецЕсли;
		КонецЕсли;
		
		Задача = Справочники.Задача.СоздатьЭлемент();		
		Задача.Заявка = Заявка;
		Задача.Дата = ТекущаяДата();
		Задача.Предприятие = Предприятие;
		Задача.Наименование = "Утвердить Внутренний документ";
		
		Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
		Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
		
		Задача.Автор = ПараметрыСеанса.ТекущийПользователь;
		Задача.Описание = Описание;
		//Сообщить(ТипЗнч(РольПользователь));
		Если ТипЗнч(РольПользователь.СубъектСогласования) = Тип("СправочникСсылка.Пользователи") Тогда
			Задача.Исполнитель = РольПользователь.СубъектСогласования;
		Иначе
			//дивизионер и директор закреплены за предприятиями, другие должности нет
			Если РольПользователь.СубъектСогласования = Справочники.Д_Должности.Дивизионер ИЛИ РольПользователь.СубъектСогласования = Справочники.Д_Должности.Директор Тогда
				Задача.Исполнитель = Предприятие[РольПользователь.СубъектСогласования.Наименование];
			Иначе
				Задача.Должность = РольПользователь.СубъектСогласования;			
			КонецЕсли;			
		КонецЕсли;
				
		Задача.Записать();
		ФормируемыеСправочники.Добавить(Задача);
		
		Прервать;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбходЗавершенПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого Пользователь Из ДопСогласование Цикл
		Если НЕ Пользователь.РезультирующееСогласование Тогда
			Если НЕ Пользователь.Пройден Тогда
				Результат = Ложь;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	Результат = Истина;
КонецПроцедуры

Процедура СогласованоДействие3ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = СогласованоДействие3;
КонецПроцедуры

Процедура СогласованоДействие2ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = СогласованоДействие4;
КонецПроцедуры

Процедура Согласование1ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого ТекСтрока Из ДопСогласование Цикл
		Если НЕ ТекСтрока.РезультирующееСогласование Тогда
			Если НЕ ТекСтрока.Пройден ИЛИ НЕ ТекСтрока.Согласовано Тогда
				Результат = Истина;
				Возврат;
			КонецЕсли;		
		КонецЕсли;
	КонецЦикла; 
	Результат = Ложь;
КонецПроцедуры

Процедура Согласование2ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого ТекСтрока Из ДопСогласование Цикл
		//Если БПСервер.ФинДирекция(ТекСтрока.СубъектСогласования) Тогда
			Если НЕ ТекСтрока.Пройден ИЛИ НЕ ТекСтрока.Согласовано Тогда
				Результат = Истина;
				Возврат;
			КонецЕсли;		
		//КонецЕсли;
	КонецЦикла; 
	Результат = Ложь;
КонецПроцедуры

Процедура ОбработкаРезультатаСогласованияОбработка(ТочкаМаршрутаБизнесПроцесса)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОбходЗавершен2ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого Пользователь Из ДопСогласование Цикл
		//Если БПСервер.ФинДирекция(Пользователь.СубъектСогласования) Тогда
			Если НЕ Пользователь.Пройден Тогда
				Результат = Ложь;
				Возврат;
			КонецЕсли;	
		//КонецЕсли;
	КонецЦикла;	
	Результат = Истина;
КонецПроцедуры

Процедура Условие1ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого Пользователь Из ДопСогласование Цикл
		Если НЕ Пользователь.РезультирующееСогласование Тогда
			Если Пользователь.Пройден И НЕ Пользователь.Согласовано Тогда
				Результат = Ложь;
				Возврат;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	Результат = Истина;
КонецПроцедуры

Процедура Условие2ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Для каждого Пользователь Из ДопСогласование Цикл
		//Если БПСервер.ФинДирекция(Пользователь.СубъектСогласования) Тогда
			Если Пользователь.Пройден И НЕ Пользователь.Согласовано Тогда
				Результат = Ложь;
				Возврат;
			КонецЕсли;	
		//КонецЕсли;
	КонецЦикла;	
	Результат = Истина;
КонецПроцедуры

Процедура Действие5ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//определяем исполнителя оплаты
	
	Плательщик = Автор;
	
	Задача = Справочники.Задача.СоздатьЭлемент();		
	Задача.Заявка = Заявка;
	Задача.Дата = ТекущаяДата();
	Задача.Предприятие = Предприятие;
	Задача.Наименование = "Ознакомиться с результатом утверждения Внутреннего документа";
	
	Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
	Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
	
	Задача.Автор = ПараметрыСеанса.ТекущийПользователь;
	Задача.Описание = Описание;
	Если ТипЗнч(Плательщик) = Тип("СправочникСсылка.Пользователи") Тогда
		Задача.Исполнитель = Плательщик;
	Иначе
		Задача.Должность = Плательщик;
	КонецЕсли;
	
	Задача.Записать();
	ФормируемыеСправочники.Добавить(Задача);
	
	
	//делаем рассылку адресатам
	Для каждого ТекАдресат Из Адресаты Цикл
		Если Не ТекАдресат.СразуПослеСтарта Тогда
			БПСервер.СоздатьОповещение(ТекАдресат.СубъектСогласования, "Утвержденная " + Строка(Заявка) + " доступна для просмотра в списке служебных записок.", "Утверждена " + Строка(Заявка), Заявка);	
		КонецЕсли;	
	КонецЦикла; 
		
КонецПроцедуры

Процедура Действие3ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//суперБОБ на финансиста офиса
	ФинансистыОфиса = новый Массив;
	ФинансистыОфиса.Добавить(Справочники.Пользователи.НайтиПоНаименованию("Финансист Офис", Истина));
	ФинансистыОфиса.Добавить(Справочники.Пользователи.НайтиПоНаименованию("Финансист Офис2", Истина));
	ФинансистыОфиса.Добавить(Справочники.Пользователи.НайтиПоНаименованию("Финансист Офис3", Истина));
	ЕстьФинансистОфиса = Ложь;
	Для каждого ТекСтрока Из ДопСогласование Цикл
		Если НЕ ФинансистыОфиса.Найти(ТекСтрока.СубъектСогласования) = Неопределено И ТекСтрока.Согласовано Тогда
			ЕстьФинансистОфиса = Истина;
			Прервать;	
		КонецЕсли;
	КонецЦикла;
	//конец суперБОБА
	
	//09.10.12. добавил прямое условие. затем нужно как-то обыграть
	Если Строка(Заявка.Предприятие) = "АТП" ИЛИ Строка(Заявка.Предприятие) = "Зернотрейд" ИЛИ Строка(Заявка.Предприятие) = "Становое" ИЛИ Заявка.Предприятие.НеКонтролироватьОФК Тогда
		ПроверенОФК = Истина;
		СогласованОФК = Истина;
		КомментарииОФК = "авто";	
		ПользовательОФК = Справочники.Пользователи.НайтиПоНаименованию("Система", Истина);
		СогласованоДействие3 = Истина;
	ИначеЕсли ЕстьФинансистОфиса Тогда
		ПроверенОФК = Истина;
		СогласованОФК = Истина;
		КомментарииОФК = "проверено финансистом офиса";	
		ПользовательОФК = ТекСтрока.СубъектСогласования;
		СогласованоДействие3 = Истина;
	Иначе
		Задача = Справочники.Задача.СоздатьЭлемент();		
		Задача.Заявка = Заявка;
		Задача.Дата = ТекущаяДата();
		Задача.Предприятие = Предприятие;
		Задача.Наименование = "Проверить Внутренний документ";
		
		Задача.БизнесПроцесс  = ЭтотОбъект.Ссылка;
		Задача.ТочкаМаршрута  = ТочкаМаршрутаБизнесПроцесса;
		
		Задача.Автор = ПараметрыСеанса.ТекущийПользователь;
		Задача.Описание = Описание;
		Задача.Исполнитель = Константы.СотрудникОФК.Получить();
		
		Задача.Записать();
		ФормируемыеСправочники.Добавить(Задача);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СогласованоДействие4ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = СогласованоДействие4;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Для каждого ТекСтрока Из ДопСогласование Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.СубъектСогласования) Тогда
			Сообщить("В ТЧ Согласования найдено пустое значение!");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтрока Из Адресаты Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.СубъектСогласования) Тогда
			Сообщить("В ТЧ Ознакомление найдено пустое значение!");
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого ТекПользователь Из ДопСогласование Цикл
		//Если НЕ ТекПользователь.СубъектСогласования = Константы.РуководительУС.Получить() Тогда
			ТекПользователь.РезультирующееСогласование = ТекПользователь.СубъектСогласования.РезультирующееСогласование;
		//КонецЕсли;
	КонецЦикла;
	
	БПСервер.БППередЗаписьюПередЗаписью1(ЭтотОбъект, Ложь);
	
КонецПроцедуры

Процедура Действие6ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеСправочники, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Для каждого ТекАдресат Из Адресаты Цикл
		Если НЕ ТекАдресат.СубъектСогласования = Автор И ТекАдресат.СразуПослеСтарта Тогда
			Задача = БПСервер.НоваяЗадача(
			ТекАдресат.СубъектСогласования, 
			?(ДопСогласование.Количество(), "Ознакомиться с предварительным запуском ", "Ознакомиться с предварительным запуском ") + Строка(Заявка.Метаданные().Синоним), 
			Ссылка, 
			ТочкаМаршрутаБизнесПроцесса);
			ФормируемыеСправочники.Добавить(Задача);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	Заявка.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	БПСервер.БППриЗаписиПриЗаписи(ЭтотОбъект, Ложь);
КонецПроцедуры








