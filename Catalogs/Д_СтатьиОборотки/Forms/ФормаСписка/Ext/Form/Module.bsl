&НаКлиенте
Процедура ПроверитьСчета(Команда)
	ПроверитьСчетаСервер();
КонецПроцедуры

&НаСервере
Процедура ПроверитьСчетаСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Учетный.Ссылка
	               |ИЗ
	               |	ПланСчетов.Учетный КАК Учетный
	               |ГДЕ
	               |	Учетный.НеОтражаетсяВБалансе = ЛОЖЬ
	               |	И Учетный.ПометкаУдаления = ЛОЖЬ
	               |	И НЕ Учетный.Ссылка В
	               |				(ВЫБРАТЬ
	               |					СтатьиУчетногоБалансаСчета.Счет
	               |				ИЗ
	               |					Справочник.Д_СтатьиОборотки.Счета КАК СтатьиУчетногоБалансаСчета)
	               |	И Учетный.ЗапретитьИспользоватьВПроводках = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Учетный.Код
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Результат = Запрос.Выполнить();
	ТЗ = Результат.Выгрузить();
	
	Если ТЗ.Количество() Тогда 
		Сообщить("В балансе не отражены следующие счета: ");
	КонецЕсли;
	
	Для Каждого Строка Из ТЗ Цикл 
		Сообщить(Строка.Ссылка);		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьРаспределениеСчетовНаСервере()
	
	//проверка для управленческого баланса
	СоответствияВидовСчета = Новый Соответствие;
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.Дебет, Перечисления.УЧ_ВидОстаткаПоСчету.Кредит);
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.Кредит, Перечисления.УЧ_ВидОстаткаПоСчету.Дебет);		
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.ДебетРазвернутый, Перечисления.УЧ_ВидОстаткаПоСчету.КредитРазвернутый);
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.КредитРазвернутый, Перечисления.УЧ_ВидОстаткаПоСчету.ДебетРазвернутый);
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.ДебетСвернутыйСубконто1, Перечисления.УЧ_ВидОстаткаПоСчету.КредитСвернутыйСубконто1);
	СоответствияВидовСчета.Вставить(Перечисления.УЧ_ВидОстаткаПоСчету.КредитСвернутыйСубконто1, Перечисления.УЧ_ВидОстаткаПоСчету.ДебетСвернутыйСубконто1);		
	
	МассивСтруктур = Новый Массив;
	МассивСтруктур.Добавить(Новый Структура("Дебет, Кредит", "Дебет", "Кредит")); 
	МассивСтруктур.Добавить(Новый Структура("Дебет, Кредит", "ДебетРазвернутый", "КредитРазвернутый")); 
	МассивСтруктур.Добавить(Новый Структура("Дебет, Кредит", "ДебетСвернутыйСубконто1", "КредитСвернутыйСубконто1")); 
	
	Для каждого ТекСтру Из МассивСтруктур Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Д_СтатьиОбороткиСчета.Счет КАК Счет,
		|	Д_СтатьиОбороткиСчета.ВидОстатка КАК ВидОстатка
		|ПОМЕСТИТЬ Дебет
		|ИЗ
		|	Справочник.Д_СтатьиОборотки.Счета КАК Д_СтатьиОбороткиСчета
		|ГДЕ
		|	Д_СтатьиОбороткиСчета.ВидОстатка = ЗНАЧЕНИЕ(Перечисление.УЧ_ВидОстаткаПоСчету." + ТекСтру.Дебет + ")
		|	И Д_СтатьиОбороткиСчета.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Д_СтатьиОборотки.СтатьиУчетногоБаланса))
		|	И Д_СтатьиОбороткиСчета.Ссылка.ЭтоГруппа = ЛОЖЬ
		|	И Д_СтатьиОбороткиСчета.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Д_СтатьиОбороткиСчета.Счет КАК Счет,
		|	Д_СтатьиОбороткиСчета.ВидОстатка КАК ВидОстатка
		|ПОМЕСТИТЬ Кредит
		|ИЗ
		|	Справочник.Д_СтатьиОборотки.Счета КАК Д_СтатьиОбороткиСчета
		|ГДЕ
		|	Д_СтатьиОбороткиСчета.ВидОстатка = ЗНАЧЕНИЕ(Перечисление.УЧ_ВидОстаткаПоСчету." + ТекСтру.Кредит + ")
		|	И Д_СтатьиОбороткиСчета.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Д_СтатьиОборотки.СтатьиУчетногоБаланса))
		|	И Д_СтатьиОбороткиСчета.Ссылка.ЭтоГруппа = ЛОЖЬ
		|	И Д_СтатьиОбороткиСчета.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Дебет.Счет КАК СчетДт,
		|	Кредит.Счет КАК СчетКт,
		|	КОЛИЧЕСТВО(Дебет.Счет) КАК ПроверкаДт,
		|	КОЛИЧЕСТВО(Кредит.Счет) КАК ПроверкаКт,
		|	Дебет.ВидОстатка КАК ВидОстаткаДт,
		|	Кредит.ВидОстатка КАК ВидОстаткаКт
		|ИЗ
		|	Дебет КАК Дебет
		|		ПОЛНОЕ СОЕДИНЕНИЕ Кредит КАК Кредит
		|		ПО Дебет.Счет = Кредит.Счет
		|
		|СГРУППИРОВАТЬ ПО
		|	Дебет.Счет,
		|	Кредит.Счет,
		|	Дебет.ВидОстатка,
		|	Кредит.ВидОстатка";
		
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ПроверкаДт = 0 Тогда
				Сообщить("Ошибка. По счету " + Строка(Выборка.СчетКт) + " не указан вид остатка " + Строка(СоответствияВидовСчета.Получить(Выборка.ВидОстаткаКт)) + "!");
			ИначеЕсли Выборка.ПроверкаДт > 10 Тогда
				Сообщить("Ошибка. По счету " + Строка(Выборка.СчетКт) + " указано более 1 вида остатка " + Строка(СоответствияВидовСчета.Получить(Выборка.ВидОстаткаКт)) + "!");
			КонецЕсли;
			Если Выборка.ПроверкаКт = 0 Тогда
				Сообщить("Ошибка. По счету " + Строка(Выборка.СчетДт) + " не указан вид остатка " + Строка(СоответствияВидовСчета.Получить(Выборка.ВидОстаткаДт)) + "!");
			ИначеЕсли Выборка.ПроверкаКт > 1 Тогда
				Сообщить("Ошибка. По счету " + Строка(Выборка.СчетДт) + " указано более 1 вида остатка " + Строка(СоответствияВидовСчета.Получить(Выборка.ВидОстаткаДт)) + "!");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; 
	
	//проверка для управленческого баланса на дубли
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_СтатьиОбороткиСчета.Счет КАК Счет,
	|	Д_СтатьиОбороткиСчета.ВидОстатка КАК ВидОстатка,
	|	СУММА(1) КАК ПроверкаДубля
	|ИЗ
	|	Справочник.Д_СтатьиОборотки.Счета КАК Д_СтатьиОбороткиСчета
	|ГДЕ
	|	Д_СтатьиОбороткиСчета.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Д_СтатьиОборотки.СтатьиУчетногоБаланса))
	|	И Д_СтатьиОбороткиСчета.Ссылка.ЭтоГруппа = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Д_СтатьиОбороткиСчета.Счет,
	|	Д_СтатьиОбороткиСчета.ВидОстатка";
	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сообщить("Ошибка. По счету " + Строка(Выборка.Счет) + " обнаружен дубль вида остатка " + Строка(Выборка.ВидОстатка) + "!");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРаспределениеСчетов(Команда)
	ПроверитьРаспределениеСчетовНаСервере();
КонецПроцедуры
