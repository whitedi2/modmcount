
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		//Если Не Параметры.Отбор.Владелец.ИспользоватьСерииНоменклатуры Тогда
		//	СообщениеПользователю = НСтр("ru = 'Учет серий по данной номенклатуре не ведется'");
		//	ОбщегоНазначения.СообщитьПользователю(СообщениеПользователю, , , , Отказ);
		//	Возврат;
		//КонецЕсли;
		
		СсылкаВладелец = Параметры.Отбор.Владелец;
		
		ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = 'Серии номенклатуры %1'"), СсылкаВладелец);
		
		//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПроизводства", "Видимость", СсылкаВладелец.ИспользоватьДатуПроизводстваСерии);
		//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГоденДо", "Видимость", СсылкаВладелец.ИспользоватьСрокГодностиСерии);
		
		//ТочностьУказанияСрокаГодностиСерии = СсылкаВладелец.ТочностьУказанияСрокаГодностиСерии;
		
		//Если ЗначениеЗаполнено(ТочностьУказанияСрокаГодностиСерии) Тогда
		//	Если ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
		//		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПроизводства", "Формат", "ДФ=дд.ММ.гггг");
		//		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГоденДо", "Формат", "ДФ=дд.ММ.гггг");
		//	Иначе
		//		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПроизводства", "Формат", "ДФ='дд.ММ.гггг ЧЧ:мм'");
		//		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГоденДо", "Формат", "ДФ='дд.ММ.гггг ЧЧ:мм'");
		//	КонецЕсли;
		//Иначе
		//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПроизводства", "Формат", "ДФ=дд.ММ.гггг");
		//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГоденДо", "Формат", "ДФ=дд.ММ.гггг");
		//КонецЕсли;
	Номенкалатура = Неопределено;	
	ИначеЕсли Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
		ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = 'Серии номенклатуры %1'"), Параметры.ТекущаяСтрока.Владелец); 
		//ПЕ+
		Номенклатура = Параметры.ТекущаяСтрока.Владелец;
		//ПЕ-
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказатьПроданные") Тогда
		ПоказатьПроданные = Параметры.ПоказатьПроданные;
	Иначе
		ПоказатьПроданные = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПодборДляОплаты") Тогда
		ПодборДляОплаты = Параметры.ПодборДляОплаты;
		Элементы.ПоказатьПроданные.Видимость = Не ПодборДляОплаты;
	КонецЕсли;
	
	Дата = ТекущаяДата();                             
	Предприятие = Неопределено;
	Склад = Неопределено; 
	
	//ПЕ+
	Если Параметры.Свойство("ЗаказКлиента") Тогда
		Если ЗначениеЗаполнено(Параметры.ЗаказКлиента) Тогда
			Предприятие = Параметры.ЗаказКлиента.Предприятие;
			Склад = Параметры.ЗаказКлиента.Склад;  
		КонецЕсли;
	КонецЕсли; 
	
	Если Параметры.Свойство("ДатаОтгрузки") Тогда
		Если ЗначениеЗаполнено(Параметры.ДатаОтгрузки) Тогда
			Дата = КонецДня(Параметры.ДатаОтгрузки);
		КонецЕсли;
	КонецЕсли;
	СчетТовары = ПланыСчетов.Учетный.НайтиПоКоду("41");
	МассивСубконто = Новый Массив;
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйВидыСубконто.ВидСубконто КАК ВидСубконто
		|ИЗ
		|	ПланСчетов.Учетный.ВидыСубконто КАК УчетныйВидыСубконто
		|ГДЕ
		|	УчетныйВидыСубконто.Ссылка.Код = &Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	УчетныйВидыСубконто.НомерСтроки";
	
	Запрос.УстановитьПараметр("Код", "41");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивСубконто.Добавить(ВыборкаДетальныеЗаписи.ВидСубконто); 
	КонецЦикла; 
	//ПЕ-
     
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьПроданные", ПоказатьПроданные);
	//Список.Параметры.УстановитьЗначениеПараметра("ПодборДляОплаты", ПодборДляОплаты);
	Список.Параметры.УстановитьЗначениеПараметра("Дата", Дата);
	Список.Параметры.УстановитьЗначениеПараметра("Предприятие", Предприятие);
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Склад);
	//ПЕ+
	Список.Параметры.УстановитьЗначениеПараметра("МассивСубконто", МассивСубконто);
	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Номенклатура);	
	//ПЕ-
	//Элементы.Продан.Видимость = ПоказатьПроданные;
	
	ПоказатьПроданные = Ложь;
	Элементы.Продан.Видимость = ПоказатьПроданные;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроданныеПриИзменении(Элемент)
	
	Элементы.Продан.Видимость = ПоказатьПроданные;
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьПроданные", ПоказатьПроданные);
	
КонецПроцедуры

#КонецОбласти
