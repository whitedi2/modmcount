
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаголовокПоказателей = "Финансовые показатели";
	ЗаголовокДинамика = "Динамика";
	ЗаголовокНорматив = "Норматив";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабФинансовыеПоказатели.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.сабФинансовыеПоказатели КАК сабФинансовыеПоказатели
	               |ГДЕ
	               |	сабФинансовыеПоказатели.ЭтоГруппа = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	сабФинансовыеПоказатели.Порядок
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоздатьЭлементГруппу(Элементы.Группа7, Строка(Выборка.Ссылка));	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабФинансовыеПоказатели.Ссылка КАК Ссылка,
	               |	сабФинансовыеПоказатели.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.сабФинансовыеПоказатели КАК сабФинансовыеПоказатели
	               |ГДЕ
	               |	сабФинансовыеПоказатели.ЭтоГруппа = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	сабФинансовыеПоказатели.Порядок
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоздатьЭлементыГруппы(Строка(Выборка.Родитель), Строка(Выборка.Ссылка));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементГруппу(Родитель, ИмяГруппы)
	
	ЗагодовокГруппы = ИмяГруппы;
	ИмяГруппы = СтрЗаменить(ИмяГруппы, " ", "");
	
	НоваяКнопка0 = Элементы.Найти("ГруппаФормы" + ИмяГруппы);
	Если НоваяКнопка0 = Неопределено Тогда
		НоваяКнопка0 = Элементы.Добавить("ГруппаФормы" + ИмяГруппы, Тип("ГруппаФормы"), Родитель);
	КонецЕсли;
	НоваяКнопка0.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяКнопка0.Заголовок = ЗагодовокГруппы;
	НоваяКнопка0.ОтображатьЗаголовок = Истина;
	НоваяКнопка0.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НоваяКнопка0.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка0.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	НоваяКнопка0.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
	НоваяКнопка0.ШрифтЗаголовка = Новый Шрифт(,,Истина);
	НоваяКнопка0.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	НоваяКнопка = Элементы.Найти("ГруппаФормы1" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ГруппаФормы1" + ИмяГруппы, Тип("ГруппаФормы"), НоваяКнопка0);
	КонецЕсли;
	НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//НоваяКнопка.Заголовок = ЗагодовокГруппы;
	НоваяКнопка.ОтображатьЗаголовок = Ложь;
	НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка.Ширина = 30;
	НоваяКнопка.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	НоваяКнопка = Элементы.Найти("ГруппаФормы2" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ГруппаФормы2" + ИмяГруппы, Тип("ГруппаФормы"), НоваяКнопка0);
	КонецЕсли;
	НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//НоваяКнопка.Заголовок = ИмяГруппы;
	НоваяКнопка.ОтображатьЗаголовок = Ложь;
	НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка.Ширина = 20;
	НоваяКнопка.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	НоваяКнопка = Элементы.Найти("ГруппаФормы3" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ГруппаФормы3" + ИмяГруппы, Тип("ГруппаФормы"), НоваяКнопка0);
	КонецЕсли;
	НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//НоваяКнопка.Заголовок = ИмяГруппы;
	НоваяКнопка.ОтображатьЗаголовок = Ложь;
	НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка.Ширина = 20;
	НоваяКнопка.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	НоваяКнопка = Элементы.Найти("ГруппаФормы4" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ГруппаФормы4" + ИмяГруппы, Тип("ГруппаФормы"), НоваяКнопка0);
	КонецЕсли;
	НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//НоваяКнопка.Заголовок = ИмяГруппы;
	НоваяКнопка.ОтображатьЗаголовок = Ложь;
	НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка.Ширина = 10;
	НоваяКнопка.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;
	
	НоваяКнопка = Элементы.Найти("ГруппаФормы5" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ГруппаФормы5" + ИмяГруппы, Тип("ГруппаФормы"), НоваяКнопка0);
	КонецЕсли;
	НоваяКнопка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	//НоваяКнопка.Заголовок = ИмяГруппы;
	НоваяКнопка.ОтображатьЗаголовок = Ложь;
	НоваяКнопка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяКнопка.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяКнопка.Ширина = 10;
	НоваяКнопка.ВертикальныйИнтервал = ИнтервалМеждуЭлементамиФормы.Половинный;

	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыГруппы(ИмяГруппы, ИмяЭлемента)
	
	ЗагодовокЭлемента = ИмяЭлемента;
	ИмяГруппы = СтрЗаменить(ИмяГруппы, " ", "");
	ИмяГруппы = СтрЗаменить(ИмяГруппы, ".", "");
	ИмяГруппы = СтрЗаменить(ИмяГруппы, ",", "");
	ИмяЭлемента = СтрЗаменить(ИмяЭлемента, " ", "");
	ИмяЭлемента = СтрЗаменить(ИмяЭлемента, ".", "");
	ИмяЭлемента = СтрЗаменить(ИмяЭлемента, ",", "");
	
	ДобавляемыеРеквизиты = Новый Массив; 
	Реквизит = Новый РеквизитФормы("Реквизит1" + ИмяЭлемента, Новый ОписаниеТипов("Строка")); 
	ДобавляемыеРеквизиты.Добавить(Реквизит); 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	НоваяКнопка = Элементы.Найти("ПолеФормы1" + ИмяЭлемента);
	Родитель = Элементы.Найти("ГруппаФормы1" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ПолеФормы1" + ИмяЭлемента, Тип("ПолеФормы"),Родитель);
		НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		//НоваяКнопка.Заголовок = ЗагодовокЭлемента;
		НоваяКнопка.ПутьКДанным  = "Реквизит1" + ИмяЭлемента;
		ЭтотОбъект["Реквизит1" + ИмяЭлемента] = ЗагодовокЭлемента;
		//НоваяКнопка.Гиперссылка = Истина;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив; 
	Реквизит = Новый РеквизитФормы("Реквизит2" + ИмяЭлемента, Новый ОписаниеТипов("Строка")); 
	ДобавляемыеРеквизиты.Добавить(Реквизит); 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	НоваяКнопка = Элементы.Найти("ПолеФормы2" + ИмяЭлемента);
	Родитель = Элементы.Найти("ГруппаФормы2" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ПолеФормы2" + ИмяЭлемента, Тип("ПолеФормы"),Родитель);
		НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НоваяКнопка.Заголовок = ЗагодовокЭлемента;
		НоваяКнопка.ПутьКДанным  = "Реквизит2" + ИмяЭлемента;
		//ЭтотОбъект["Реквизит" + ИмяКоманды] = ВидОперации.Комментарий;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив; 
	Реквизит = Новый РеквизитФормы("Реквизит3" + ИмяЭлемента, Новый ОписаниеТипов("Строка")); 
	ДобавляемыеРеквизиты.Добавить(Реквизит); 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	НоваяКнопка = Элементы.Найти("ПолеФормы3" + ИмяЭлемента);
	Родитель = Элементы.Найти("ГруппаФормы3" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ПолеФормы3" + ИмяЭлемента, Тип("ПолеФормы"),Родитель);
		НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НоваяКнопка.ПутьКДанным  = "Реквизит3" + ИмяЭлемента;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив; 
	Реквизит = Новый РеквизитФормы("Реквизит4" + ИмяЭлемента, Новый ОписаниеТипов("Строка")); 
	ДобавляемыеРеквизиты.Добавить(Реквизит); 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	НоваяКнопка = Элементы.Найти("ПолеФормы4" + ИмяЭлемента);
	Родитель = Элементы.Найти("ГруппаФормы4" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ПолеФормы4" + ИмяЭлемента, Тип("ПолеФормы"),Родитель);
		НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НоваяКнопка.ПутьКДанным  = "Реквизит4" + ИмяЭлемента;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив; 
	Реквизит = Новый РеквизитФормы("Реквизит5" + ИмяЭлемента, Новый ОписаниеТипов("Строка")); 
	ДобавляемыеРеквизиты.Добавить(Реквизит); 
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	НоваяКнопка = Элементы.Найти("ПолеФормы5" + ИмяЭлемента);
	Родитель = Элементы.Найти("ГруппаФормы5" + ИмяГруппы);
	Если НоваяКнопка = Неопределено Тогда
		НоваяКнопка = Элементы.Добавить("ПолеФормы5" + ИмяЭлемента, Тип("ПолеФормы"),Родитель);
		НоваяКнопка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НоваяКнопка.ПутьКДанным  = "Реквизит5" + ИмяЭлемента;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабФинансовыеПоказатели.Ссылка КАК Показатель,
	               |	СУММА(ЕСТЬNULL(сабЗначенияФинПоказателей.Значение, 0)) КАК ЗначениеСумм,
	               |	СРЕДНЕЕ(ЕСТЬNULL(сабЗначенияФинПоказателей.Значение, 0)) КАК ЗначениеСред,
	               |	сабФинансовыеПоказатели.ПоказыватьНаФорме КАК ПоказыватьНаФорме,
	               |	сабФинансовыеПоказатели.РасчетПромежуточныхЗначений КАК РасчетПромежуточныхЗначений,
	               |	сабФинансовыеПоказатели.НормаЗнак КАК НормаЗнак,
	               |	сабФинансовыеПоказатели.НормаЧисло КАК НормаЧисло
	               |ИЗ
	               |	Справочник.сабФинансовыеПоказатели КАК сабФинансовыеПоказатели
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабЗначенияФинПоказателей КАК сабЗначенияФинПоказателей
	               |		ПО сабФинансовыеПоказатели.Ссылка = сабЗначенияФинПоказателей.Показатель
	               |			И (сабЗначенияФинПоказателей.Период МЕЖДУ &ДатаНачала И &ДатаОкончания)
	               |			И (сабЗначенияФинПоказателей.Сценарий = &Сценарий)
	               |			И (сабЗначенияФинПоказателей.Предприятие = &Предприятие)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сабФинансовыеПоказатели.Ссылка,
	               |	сабФинансовыеПоказатели.ПоказыватьНаФорме,
	               |	сабФинансовыеПоказатели.РасчетПромежуточныхЗначений";
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий1);
	Запрос.УстановитьПараметр("ДатаНачала", Период1.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период1.ДатаОкончания);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Суммовой = Перечисления.сабСуммСред.Сумма;
	Пока Выборка.Следующий() Цикл
		ИмяРеква = Строка(Выборка.Показатель);
		ИмяРеква = СтрЗаменить(ИмяРеква, " ", "");
		ЕстьРеквизит = НЕ ЭтаФорма.Элементы.Найти("ПолеФормы2" + Строка(ИмяРеква)) = Неопределено;
		Если ЕстьРеквизит Тогда
			Если Выборка.РасчетПромежуточныхЗначений = Суммовой Тогда
				ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)] = Выборка.ЗначениеСумм;
			Иначе
				ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)] = Выборка.ЗначениеСред;
			КонецЕсли;
			
			Если Выборка.НормаЗнак = ">" Тогда
				Если Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)]) < Выборка.НормаЧисло Тогда	
					ЭтаФорма.Элементы.Найти("ПолеФормы2" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(255,0,0);
				КонецЕсли;
			ИначеЕсли Выборка.НормаЗнак = "<" Тогда
				Если Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)]) > Выборка.НормаЧисло Тогда	
					ЭтаФорма.Элементы.Найти("ПолеФормы2" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(255,0,0);				
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабФинансовыеПоказатели.Ссылка КАК Показатель,
	               |	СУММА(ЕСТЬNULL(сабЗначенияФинПоказателей.Значение, 0)) КАК ЗначениеСумм,
	               |	СРЕДНЕЕ(ЕСТЬNULL(сабЗначенияФинПоказателей.Значение, 0)) КАК ЗначениеСред,
	               |	сабФинансовыеПоказатели.ПоказыватьНаФорме КАК ПоказыватьНаФорме,
	               |	сабФинансовыеПоказатели.РасчетПромежуточныхЗначений КАК РасчетПромежуточныхЗначений,
	               |	сабФинансовыеПоказатели.НормаЗнак КАК НормаЗнак,
	               |	сабФинансовыеПоказатели.НормаЧисло КАК НормаЧисло
	               |ИЗ
	               |	Справочник.сабФинансовыеПоказатели КАК сабФинансовыеПоказатели
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабЗначенияФинПоказателей КАК сабЗначенияФинПоказателей
	               |		ПО сабФинансовыеПоказатели.Ссылка = сабЗначенияФинПоказателей.Показатель
	               |			И (сабЗначенияФинПоказателей.Период МЕЖДУ &ДатаНачала И &ДатаОкончания)
	               |			И (сабЗначенияФинПоказателей.Сценарий = &Сценарий)
	               |			И (сабЗначенияФинПоказателей.Предприятие = &Предприятие)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сабФинансовыеПоказатели.Ссылка,
	               |	сабФинансовыеПоказатели.ПоказыватьНаФорме,
	               |	сабФинансовыеПоказатели.РасчетПромежуточныхЗначений";
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий2);
	Запрос.УстановитьПараметр("ДатаНачала", Период2.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период2.ДатаОкончания);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Суммовой = Перечисления.сабСуммСред.Сумма;
	Пока Выборка.Следующий() Цикл
		ИмяРеква = Строка(Выборка.Показатель);
		ИмяРеква = СтрЗаменить(ИмяРеква, " ", "");
		ЕстьРеквизит = НЕ ЭтаФорма.Элементы.Найти("ПолеФормы3" + Строка(ИмяРеква)) = Неопределено;
		Если ЕстьРеквизит Тогда
			Если Выборка.РасчетПромежуточныхЗначений = Суммовой Тогда
				ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)] = Выборка.ЗначениеСумм;
			Иначе
				ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)] = Выборка.ЗначениеСред;
			КонецЕсли;
			
			Если Выборка.НормаЗнак = ">" Тогда
				Если Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) < Выборка.НормаЧисло Тогда	
					ЭтаФорма.Элементы.Найти("ПолеФормы3" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(255,0,0);
				КонецЕсли;
			ИначеЕсли Выборка.НормаЗнак = "<" Тогда
				Если Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) > Выборка.НормаЧисло Тогда	
					ЭтаФорма.Элементы.Найти("ПолеФормы3" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(255,0,0);				
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ИмяРеква = Строка(Выборка.Показатель);
		ИмяРеква = СтрЗаменить(ИмяРеква, " ", "");
		ЕстьРеквизит = НЕ ЭтаФорма.Элементы.Найти("ПолеФормы4" + Строка(ИмяРеква)) = Неопределено;
		Если ЕстьРеквизит Тогда
			Если Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) > 0 Тогда
				ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)] = ?(Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]), 
				Формат((Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) - Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)])) / Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) * 100, "ЧДЦ=2"), ?(Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)]), 100, 0));
			Иначе
				ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)] = ?(Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]), 
				Формат((Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) - Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)])) / -Число(ЭтотОбъект["Реквизит3" + Строка(ИмяРеква)]) * 100, "ЧДЦ=2"), ?(Число(ЭтотОбъект["Реквизит2" + Строка(ИмяРеква)]), 100, 0));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)]) Тогда
				ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)] = 0;			
			КонецЕсли;
			Если Число(ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)]) > 0 Тогда
				ЭтаФорма.Элементы.Найти("ПолеФормы4" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(51,153,102);
			ИначеЕсли Число(ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)]) < 0 Тогда	
				ЭтаФорма.Элементы.Найти("ПолеФормы4" + Строка(ИмяРеква)).ЦветТекста = Новый Цвет(255,0,0);
			КонецЕсли;
			ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)] = ЭтотОбъект["Реквизит4" + Строка(ИмяРеква)] + "%";
		КонецЕсли;
		
		ИмяРеква = Строка(Выборка.Показатель);
		ИмяРеква = СтрЗаменить(ИмяРеква, " ", "");
		ЕстьРеквизит = НЕ ЭтаФорма.Элементы.Найти("ПолеФормы5" + Строка(ИмяРеква)) = Неопределено;
		Если ЕстьРеквизит Тогда
			ЭтотОбъект["Реквизит5" + Строка(ИмяРеква)] = Строка(Выборка.НормаЗнак) + Строка(Формат(Выборка.НормаЧисло, "ЧДЦ=2"));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сценарий1ПриИзменении(Элемент)
	ЗаполнитьДанные();
	ЗаполнитьДиаграммы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Период1) Тогда
		Период1.Вариант = ВариантСтандартногоПериода.ПрошлыйМесяц;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Период2) Тогда
		Период2.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сценарий1) Тогда
		Сценарий1 = СценарийФакт();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сценарий2) Тогда
		Сценарий2 = СценарийФакт();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПоказательДиаграммы1) Тогда
		ПоказательДиаграммы1 = ПоказательВыручка();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПоказательДиаграммы2) Тогда
		ПоказательДиаграммы2 = ПоказательПрибыль();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПоказательДиаграммы3) Тогда
		ПоказательДиаграммы3 = ПоказательРентабельность();	
	КонецЕсли;

	ЗаполнитьРеквизитыФормы();
	ЗаполнитьДанные();
	ЗаполнитьДиаграммы();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СценарийФакт()
	Возврат Справочники.СценарииПланирования.СценарийФакт();	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПоказательВыручка()
	Возврат Справочники.сабФинансовыеПоказатели.НайтиПоНаименованию("Выручка", Истина);	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПоказательПрибыль()
	Возврат Справочники.сабФинансовыеПоказатели.НайтиПоНаименованию("Прибыль", Истина);	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПоказательРентабельность()
	Возврат Справочники.сабФинансовыеПоказатели.НайтиПоНаименованию("Рентабельность продаж", Истина);	
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьДиаграммы()
	
	Суммовой = Перечисления.сабСуммСред.Сумма;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(сабЗначенияФинПоказателей.Значение) КАК ЗначениеСумм,
	               |	НАЧАЛОПЕРИОДА(сабЗначенияФинПоказателей.Период, МЕСЯЦ) КАК Период,
	               |	СРЕДНЕЕ(сабЗначенияФинПоказателей.Значение) КАК ЗначениеСред,
	               |	сабЗначенияФинПоказателей.Показатель.РасчетПромежуточныхЗначений КАК ПоказательРасчетПромежуточныхЗначений,
	               |	сабЗначенияФинПоказателей.Показатель КАК Показатель
	               |ИЗ
	               |	РегистрСведений.сабЗначенияФинПоказателей КАК сабЗначенияФинПоказателей
	               |ГДЕ
	               |	сабЗначенияФинПоказателей.Сценарий = &Сценарий1
	               |	И сабЗначенияФинПоказателей.Показатель В (&Показатель1, &Показатель2, &Показатель3)
	               |	И сабЗначенияФинПоказателей.Период >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекДата, МЕСЯЦ, -6), МЕСЯЦ)
	               |	И сабЗначенияФинПоказателей.Предприятие = &Предприятие
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сабЗначенияФинПоказателей.Показатель.РасчетПромежуточныхЗначений,
	               |	НАЧАЛОПЕРИОДА(сабЗначенияФинПоказателей.Период, МЕСЯЦ),
	               |	сабЗначенияФинПоказателей.Показатель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Сценарий1", Сценарий1);
	Запрос.УстановитьПараметр("Показатель1", ПоказательДиаграммы1);
	Запрос.УстановитьПараметр("Показатель2", ПоказательДиаграммы2);
	Запрос.УстановитьПараметр("Показатель3", ПоказательДиаграммы3);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Диаграмма1.Очистить();
	Диаграмма1.АвтоТранспонирование = Ложь;
	Диаграмма1.Обновление 			= Ложь;
	
	Диаграмма2.Очистить();
	Диаграмма2.АвтоТранспонирование = Ложь;
	Диаграмма2.Обновление 			= Ложь;

	Диаграмма3.Очистить();
	Диаграмма3.АвтоТранспонирование = Ложь;
	Диаграмма3.Обновление 			= Ложь;

	Диаграмма1.Серии.Добавить(ПоказательДиаграммы1);
	Диаграмма2.Серии.Добавить(ПоказательДиаграммы2);
	Диаграмма3.Серии.Добавить(ПоказательДиаграммы3);
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.Показатель = ПоказательДиаграммы1 Тогда
			Точка = Диаграмма1.УстановитьТочку(Формат(ТекСтрока.Период,"ДФ='ММММ гггг'"));
			Диаграмма1.УстановитьЗначение(Точка
			, Диаграмма1.Серии[0]
			, ?(Суммовой = ТекСтрока.ПоказательРасчетПромежуточныхЗначений, ТекСтрока.ЗначениеСумм, ТекСтрока.ЗначениеСред)
			, Неопределено
			, ПоказательДиаграммы1);
		ИначеЕсли ТекСтрока.Показатель = ПоказательДиаграммы2 Тогда
			Точка = Диаграмма2.УстановитьТочку(Формат(ТекСтрока.Период,"ДФ='ММММ гггг'"));
			Диаграмма2.УстановитьЗначение(Точка
			, Диаграмма2.Серии[0]
			, ?(Суммовой = ТекСтрока.ПоказательРасчетПромежуточныхЗначений, ТекСтрока.ЗначениеСумм, ТекСтрока.ЗначениеСред)
			, Неопределено
			, ПоказательДиаграммы2);
			
		ИначеЕсли ТекСтрока.Показатель = ПоказательДиаграммы3 Тогда
			Точка = Диаграмма3.УстановитьТочку(Формат(ТекСтрока.Период,"ДФ='ММММ гггг'"));
			Диаграмма3.УстановитьЗначение(Точка
			, Диаграмма3.Серии[0]
			, ?(Суммовой = ТекСтрока.ПоказательРасчетПромежуточныхЗначений, ТекСтрока.ЗначениеСумм, ТекСтрока.ЗначениеСред)
			, Неопределено
			, ПоказательДиаграммы3);
		КонецЕсли;
		
	КонецЦикла;
	
	//Диаграмма1.ОбластьЗаголовка.Текст 	= ПоказательДиаграммы1;
	Диаграмма1.АвтоТранспонирование 	= Истина;
	Диаграмма1.Обновление		= Истина;
	
	//Диаграмма2.ОбластьЗаголовка.Текст 	= ПоказательДиаграммы2;
	Диаграмма2.АвтоТранспонирование 	= Истина;
	Диаграмма2.Обновление		= Истина;
	
	//Диаграмма3.ОбластьЗаголовка.Текст 	= ПоказательДиаграммы3;
	Диаграмма3.АвтоТранспонирование 	= Истина;
	Диаграмма3.Обновление		= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказательДиаграммы1ПриИзменении(Элемент)
	ЗаполнитьДиаграммы();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере(Сценарий1, Период1, Предприятие);
	ОбновитьНаСервере(Сценарий2, Период2, Предприятие);
	
	ЗаполнитьДанные();
	ЗаполнитьДиаграммы();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьНаСервере(Сценарий1, Период1, Предприятие)
	
	Справочники.сабФинансовыеПоказатели.ОбновитьНаСервере(Сценарий1, Период1, Предприятие);	
		
КонецПроцедуры


&НаКлиенте
Процедура Настройка(Команда)
	ОткрытьФорму("Справочник.сабФинансовыеПоказатели.Форма.ФормаСписка");
КонецПроцедуры

