
&НаСервере
Процедура УУ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Группа = Элементы.Добавить(
	"УпрГруппа",
	Тип("ГруппаФормы"),
	ЭтаФорма);
	
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Поведение  = ПоведениеОбычнойГруппы.Свертываемая;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	Группа.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Группа.Заголовок = "Реквизиты (Управленка):";
	
	ПолеВвода = Элементы.Добавить("Вес", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Вес";
	
	ПолеВвода = Элементы.Добавить("ВесНетто", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.ВесНетто";
	
	ПолеВвода = Элементы.Добавить("Объем", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Объем";
	
	ПолеВвода = Элементы.Добавить("Кратность", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Кратность";
	
	ПолеВвода = Элементы.Добавить("МинимальнаяПартия", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.МинимальнаяПартия";
	
	ПолеВвода = Элементы.Добавить("СрокГодности", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.СрокГодности";
	
	ПолеВвода = Элементы.Добавить("Весовой", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеФлажка;
	ПолеВвода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	ПолеВвода.ПутьКДанным = "Объект.Весовой";
	
КонецПроцедуры

&НаКлиенте
Процедура УУ_ПриОткрытииПосле(Отказ)
	
	ОграничениеПрав = Бюджетныйнасервере.СправочникНайтиПоНаименованию("сабМониторВнедрения", "ОграничениеПравРедактированияКлючевыхСправочников", Истина);
	
	Если ЗначениеЗаполнено(ОграничениеПрав) И БюджетныйНаСервере.ВернутьРеквизит(ОграничениеПрав, "Значение") = "Да" Тогда
		
		Если Не БюджетныйНаСервере.РольДоступнаСервер("АдминистраторСистемы") Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УУ_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	
	КонтролироватьУникальностьАртикулов = НайтиКонтролироватьУникальностьАртикулов();
	Если КонтролироватьУникальностьАртикулов = Неопределено ИЛИ КонтролироватьУникальностьАртикулов = ЛОЖЬ Тогда
	Иначе
		Если СокрЛП(Объект.Артикул) <> "" Тогда
			
			ЕстьДубль = ПоискАртикула(СокрЛП(Объект.Артикул));
			
			Если ЕстьДубль Тогда
				Оповещение = Новый ОписаниеОповещения();
				ПоказатьПредупреждение(Оповещение, "Указанный артикул уже используется. Введите другой.");
				Отказ = ЕстьДубль;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиКонтролироватьУникальностьАртикулов()
	Возврат Справочники.сабМониторВнедрения.НайтиПоНаименованию("КонтролироватьУникальностьАртикулов", Истина).Значение;
КонецФункции

&НаСервере
Функция ПоискАртикула(Артикул)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Артикул КАК Артикул
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	СОКРЛП(Номенклатура.Артикул) = &Артикул
	|	И Номенклатура.Ссылка <> &ЭтаСсылка";
	
	Запрос.УстановитьПараметр("Артикул", Артикул);
	Запрос.УстановитьПараметр("ЭтаСсылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Истина;			
	КонецЦикла;
	Возврат Ложь;
КонецФункции
