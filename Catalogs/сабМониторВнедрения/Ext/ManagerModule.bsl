Функция ПолучитьЗначениеНастройки(ИмяНастройки) Экспорт
	
	ТекЗначение = Справочники.сабМониторВнедрения.НайтиПоНаименованию(ИмяНастройки, Истина);
	
	Если Не ЗначениеЗаполнено(ТекЗначение) Тогда 
		Возврат ПолучитьЗначениеНастройкиКонстанты(ИмяНастройки);
	Иначе 
		Возврат ТекЗначение.Значение;	
	КонецЕсли;

КонецФункции

Функция ПолучитьЗначениеНастройкиКонстанты(ИмяНастройки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Если Метаданные.Константы.Найти("сабБронированиеТоваровВЗаказах") = Неопределено Тогда	
		Возврат Ложь;
	Иначе
		Если Метаданные.Константы.Найти(ИмяНастройки) = Неопределено Тогда	
			Возврат Ложь;
		Иначе
			Возврат Константы[ИмяНастройки].Получить();
		КонецЕсли;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);  
	
КонецФункции 

Функция ПолучитьСтруктуруНастроек(ИменаНастроек) Экспорт
	
	Если ТипЗнч(ИменаНастроек) = Тип("Строка") Тогда
		МассивНастроек = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаНастроек);
	Иначе
		МассивНастроек = ИменаНастроек;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабМониторВнедрения.Значение КАК Значение,
	|	сабМониторВнедрения.Наименование КАК Наименование
	|ИЗ
	|	Справочник.сабМониторВнедрения КАК сабМониторВнедрения
	|ГДЕ
	|	сабМониторВнедрения.Наименование В(&Наименования)";
	
	Запрос.УстановитьПараметр("Наименования", МассивНастроек);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруНастроек = Новый Структура;
	Для каждого ТекНастройка Из МассивНастроек Цикл
		ЕстьНастройка = Ложь;
		Пока Выборка.Следующий() Цикл
			Если ТекНастройка = Выборка.Наименование Тогда
				СтруНастроек.Вставить(ТекНастройка, Выборка.Значение);
				ЕстьНастройка = Истина;			
			КонецЕсли;
		КонецЦикла;
		Если Не ЕстьНастройка Тогда
			СтруНастроек.Вставить(ТекНастройка, Ложь); //если не найдена настройка в справочнике настроек
		КонецЕсли;	
	КонецЦикла;
	Возврат СтруНастроек;
	
КонецФункции
