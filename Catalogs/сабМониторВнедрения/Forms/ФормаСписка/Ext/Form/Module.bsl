
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеЛицензии = РегистрыСведений.сабСоответствияОрганизацийПредприятиям.ПроверитьУстановкуКлюча();
	//КлючУстановлен = Ложь;
	
	Если НЕ ДанныеЛицензии.КлючЛицензии Тогда
		Элементы.Группа23.Видимость = Истина;
		Элементы.Группа5.Видимость = Ложь;
		Элементы.Группа1.Видимость = Ложь;
		Элементы.Группа8.Видимость = Ложь;
	Иначе	
		Элементы.Группа23.Видимость = Ложь;
		Элементы.Группа5.Видимость = Истина;
		Элементы.Группа1.Видимость = Истина;
		Элементы.Группа8.Видимость = Истина;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЛицензии);
		Элементы.ПробныйПериод.Видимость = ДанныеЛицензии.Свойство("Ограничение") И ЗначениеЗаполнено(ДанныеЛицензии.Ограничение);		
		Элементы.Группа10.Видимость = Элементы.ПробныйПериод.Видимость;
		
		Элементы.Декорация5.Видимость = Ложь;
		//Элементы.Декорация6.Видимость = Ложь;
		Элементы.УстановитьИПерезапустить.Видимость = Ложь;
		Элементы.СписокИзменений.Видимость = Ложь;
		Элементы.Перезапустить1С.Видимость = Ложь;
		
		Расширение = Метаданные.Справочники.сабМониторВнедрения.РасширениеКонфигурации();
		Результат = Новый Структура;
		ТекущаяВерсия = Расширение.Версия;
		
		ЗаполнитьКомандыНастроек();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "Наименование" Тогда
		Если Элементы.Список.ТекущиеДанные.Наименование = "1. Настройка технических данных" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма1", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "2. Настройка констант" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма1", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "2. Настройка структуры предприятия" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма2", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "3. Настройки соответствия документов" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма3", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "4. Настройка соответствия плана счетов" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма4", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "6. Настройка документооборота" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма5", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "5. Ввод остатков на начало" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма5", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));		
		ИначеЕсли Элементы.Список.ТекущиеДанные.Наименование = "6. Начало работы" Тогда
			ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма", Новый Структура("Ключ", Элементы.Список.ТекущаяСтрока));		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	СтандартнаяОбработка = Ложь;
	Если Элементы.Список.ТекущиеДанные.Код = 0 Тогда
		ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма0");		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКлюч(Команда)
	Если Не ЗначениеЗаполнено(КлючПрограммы) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен ключ программы.";
		Сообщение.Поле = "КлючПрограммы";
		//Сообщение.УстановитьДанные();
		Сообщение.Сообщить();	
		Возврат;	
	КонецЕсли;
	ВвестиКлючНаСервере(КлючПрограммы);
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКлючЛицензии(Команда)
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВвестиКлючЛицензииЗавершение", ЭтотОбъект, Новый Структура("КлючПрограммы", КлючПрограммы)), КлючПрограммы, "Введите ключ лицензии");
КонецПроцедуры

&НаКлиенте
Процедура ВвестиКлючЛицензииЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	Ключ = ?(Строка = Неопределено, ДополнительныеПараметры.КлючПрограммы, Строка);
	
	Если НЕ Ключ = "" Тогда
		ВвестиКлючНаСервере(Ключ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВвестиКлючНаСервере(Ключ, Пробный = Ложь)
	
	Ответ = РегистрыСведений.сабСоответствияОрганизацийПредприятиям.ВвестиКлючНаСервере(Ключ, Пробный);
	
	Если НЕ СтрНайти(Ответ, "Ключ лицензии успешно установлен.") Тогда
		Сообщить(Ответ);
		Возврат;
	КонецЕсли;
	
	Сообщить("Ключ лицензии успешно установлен.");
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьПробныйПериод(Команда)
	ВвестиКлючНаСервере("", Истина);
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.ФормаСписка1");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЭлементНастройки(Наименование)

	Возврат Справочники.сабМониторВнедрения.НайтиПоНаименованию(Наименование, Истина);

КонецФункции // ()

&НаСервере
Процедура ЗаполнитьКомандыНастроек()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправочниксабМониторВнедрения.Ссылка КАК Ссылка,
	               |	СправочниксабМониторВнедрения.ПометкаУдаления КАК ПометкаУдаления,
	               |	СправочниксабМониторВнедрения.Код КАК Код,
	               |	СправочниксабМониторВнедрения.Наименование КАК Наименование,
	               |	СправочниксабМониторВнедрения.Выполнено КАК Выполнено,
	               |	СправочниксабМониторВнедрения.Описание КАК Описание,
	               |	СправочниксабМониторВнедрения.Комментарии КАК Комментарии,
	               |	СправочниксабМониторВнедрения.Заполнено КАК Заполнено,
	               |	СправочниксабМониторВнедрения.Значение КАК Значение,
	               |	СправочниксабМониторВнедрения.ТипСтроки КАК ТипСтроки,
	               |	СправочниксабМониторВнедрения.Предопределенный КАК Предопределенный,
	               |	СправочниксабМониторВнедрения.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	               |ИЗ
	               |	Справочник.сабМониторВнедрения КАК СправочниксабМониторВнедрения
	               |ГДЕ
	               |	СправочниксабМониторВнедрения.ТипСтроки = ""Пункт""
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код
	               |АВТОУПОРЯДОЧИВАНИЕ";
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИндексРеква = 1;
	Пока Выборка.Следующий() Цикл
		ЭтотОбъект["Реквизит" + Строка(ИндексРеква)] = Выборка.Наименование;
		Элементы["Реквизит" + Строка(ИндексРеква)].Подсказка = Выборка.Описание;
		Элементы["ДекорацияГалка" + Строка(ИндексРеква)].Видимость = Выборка.Выполнено;
		Элементы["ДекорацияГалкаВык" + Строка(ИндексРеква)].Видимость = НЕ Выборка.Выполнено;
		ИндексРеква = ИндексРеква + 1;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Реквизит1Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ИндексКоманды = СтрЗаменить(Элемент.Имя, "Реквизит", "");
	ТекЭл = ПолучитьЭлементНастройки(ЭтотОбъект[Элемент.Имя]);
	ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма" + Строка(ИндексКоманды), Новый Структура("Ключ", ТекЭл));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьСтатусыНастроек" Тогда
		Для ИндексРеква = 1 По 6 Цикл
			Если ЭтотОбъект["Реквизит" + Строка(ИндексРеква)] = Параметр.Наименование Тогда
				Элементы["ДекорацияГалка" + Строка(ИндексРеква)].Видимость = Параметр.Выполнено;
				Элементы["ДекорацияГалкаВык" + Строка(ИндексРеква)].Видимость = НЕ Параметр.Выполнено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


#Область Обновление

&НаКлиенте
Процедура СкачатьНовуюВерсию(Команда)
	ПодключитьОбработчикОжидания("_ОбновитьСостояниеНаКлиенте", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние(Команда)

	_ОбновитьСостояниеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОбновление(Команда)

	Установлено = _УстановитьОбновление();	
	Если Установлено Тогда
		ЗавершитьРаботуСистемы(Ложь, Истина);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Перезапустить1С(Команда)

	ЗавершитьРаботуСистемы(Ложь, Истина);

КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура _ОбновитьСостояниеНаКлиенте()

	_ОбновитьСостояниеНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура _ОбновитьСостояниеНаСервере()
	
	Элементы.Декорация5.Видимость = Истина;
	
	Обсуживание = Справочники.сабМониторВнедрения.СоздатьЭлемент();
	АктуальнаяВерсия = Новый ФиксированнаяСтруктура(Обсуживание.ПолучитьАктивнуюВерсию());	
	УстановленнаяВерсия = Новый ФиксированнаяСтруктура(Обсуживание.ПолучитьУстановленнуюВерсию());
	Если ПоследняяВерсия = Неопределено Тогда
		ПоследняяВерсия = Обсуживание.ПолучитьПоследнююВерсию();	
	КонецЕсли;

	_ОбновитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура _ОбновитьФормуНаСервере()
	
	НужнаПерезагрузка = УстановленнаяВерсия.Версия <> АктуальнаяВерсия.Версия;
	НужнаУстановка = ПоследняяВерсия <> Неопределено И ПоследняяВерсия.Версия <> УстановленнаяВерсия.Версия;	
	
	Элементы.Декорация5.Видимость = Ложь;
	Элементы.СкачатьНовуюВерсию.Видимость = Ложь;
	
	Если НужнаПерезагрузка Тогда	
		Элементы.Перезапустить1С.Видимость = Истина;
		Элементы.Декорация6.Заголовок = "Необходимо перезапустить текущий сеанс 1С";
	ИначеЕсли НужнаУстановка Тогда
		Элементы.УстановитьИПерезапустить.Видимость = Истина;
		Элементы.СписокИзменений.Видимость = Истина;
		Элементы.Декорация6.Заголовок = "Доступна версия " + Строка(ПоследняяВерсия.Версия);
	Иначе
		Элементы.Декорация6.Заголовок = "У вас установлена актуальная версия модуля";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция _УстановитьОбновление() 

	Обсуживание = Справочники.сабМониторВнедрения.СоздатьЭлемент();
    Возврат Обсуживание.УстановитьВерсию(ПоследняяВерсия.Версия);
		
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура РасширенныеНастройкиДоступа(Команда)
	ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.Форма8");
КонецПроцедуры

&НаКлиенте
Процедура СписокИзменений(Команда)
	Оповещение = Новый ОписаниеОповещения();
	ПоказатьПредупреждение(Оповещение, СписокИзмененийСервер());
КонецПроцедуры

&НаСервере
Функция СписокИзмененийСервер()
	Обслуживание = Справочники.сабМониторВнедрения.СоздатьЭлемент();
	Возврат Обслуживание.ПолучитьПоследнююВерсию().СписокИзменений;
КонецФункции


