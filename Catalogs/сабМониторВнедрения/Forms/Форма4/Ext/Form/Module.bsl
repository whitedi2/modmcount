
&НаСервере
Процедура ВыполнитьАвтозаполение()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("000");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("00");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.08");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.09");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
		НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.К");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("02.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("02.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("02.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("07");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("08.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("08.01.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("08.04");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("08.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("08.04");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("08.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("08.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.03.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.03.2");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.04");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.04");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.05");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.05");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.06");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.06");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.05");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.07");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.08");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.05");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.09");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.09");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();

	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.10");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.09");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.11.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.09");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.11.2");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.09");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("11");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("11");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("20.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("20");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("20.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("20");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("21");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("10.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("23");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("25");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("25");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("25");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("26");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("25");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("40");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("40");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();

	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.04");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();

	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.11");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.12");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.К");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("41");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("43");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("43");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("44");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("44");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("50.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("50.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("51");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("51.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("52");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("51.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("57.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("57.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты и организации", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внутренние договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("57.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("57.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("57.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("57.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("60.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("60.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("62.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("62.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("66.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("66.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("66.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("66.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("66.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("66.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("66.04");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("66.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("67.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("67.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("67.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("67.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("67.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("67.03");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("67.04");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("67.04");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.03");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.04.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.04.2");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.10");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("68.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();

	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.2");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.3");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.4");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.5");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.6");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.02.7");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.03.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.03.2");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.04");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
		
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("69.11");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("69");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("70");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("70");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидНачисленийОплатыТрудаПоСтатье255НК;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Виды начислений оплаты труда", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("71.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("71.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("73.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("73.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("76.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	НоваяЗапись.СубконтоБУ2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина);
	НоваяЗапись.СубконтоУУ2 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина);
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("80.09");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("75.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("75.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("75.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("75.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("75.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Учредители;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("84.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("84");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.01.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("90.01");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("90.02");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.09");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("90.09");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.01");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("91");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Прочие доходы и расходы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("91");
	НоваяЗапись.СубконтоБУ1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Прочие доходы и расходы", Истина);
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	//НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	//НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.09");
	//НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("00");
	//НоваяЗапись.СубконтоБУ1 = Неопределено;
	//НоваяЗапись.СубконтоБУ2 = Неопределено;
	//НоваяЗапись.СубконтоБУ3 = Неопределено;
	//НоваяЗапись.СубконтоУУ1 = Неопределено;
	//НоваяЗапись.СубконтоУУ2 = Неопределено;
	//НоваяЗапись.СубконтоУУ3 = Неопределено;
	//НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("94");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("94");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
	НоваяЗапись.СчетБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("99.01.1");
	НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.НайтиПоКоду("99");
	НоваяЗапись.СубконтоБУ1 = Неопределено;
	НоваяЗапись.СубконтоБУ2 = Неопределено;
	НоваяЗапись.СубконтоБУ3 = Неопределено;
	НоваяЗапись.СубконтоУУ1 = Неопределено;
	НоваяЗапись.СубконтоУУ2 = Неопределено;
	НоваяЗапись.СубконтоУУ3 = Неопределено;
	НоваяЗапись.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтруктуруПредприятия(Команда)
	ОткрытьФорму("РегистрСведений.сабСоответствиеСчетовИСубконто.ФормаСписка",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура Автонастройка(Команда)
	ВыполнитьАвтозаполение();
	ДополнитьЗаписи();
	ПроверкаНаПустыеЗаписи();
	//Объект.Выполнено = Истина;
КонецПроцедуры

&НаСервере
Процедура ДополнитьЗаписи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ПОМЕСТИТЬ ВтСчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты КАК ХозрасчетныйОбороты
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.КорСчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты КАК ХозрасчетныйОбороты
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтСчета.Счет КАК Счет
	|ИЗ
	|	ВтСчета КАК ВтСчета
	|ГДЕ
	|	ВтСчета.Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	
	|УПОРЯДОЧИТЬ ПО
	|	ВтСчета.Счет.Код";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Набор = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьНаборЗаписей();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Набор.Отбор.СчетБУ.Установить(ВыборкаДетальныеЗаписи.Счет);
		Набор.Прочитать();
		Если Набор.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = РегистрыСведений.сабСоответствиеСчетовИСубконто.СоздатьМенеджерЗаписи();
		НоваяЗапись.СчетБУ = ВыборкаДетальныеЗаписи.Счет;
		НоваяЗапись.СчетУУ = ПланыСчетов.Учетный.ПустаяСсылка();
		НоваяЗапись.СубконтоБУ1 = Неопределено;
		НоваяЗапись.СубконтоБУ2 = Неопределено;
		НоваяЗапись.СубконтоБУ3 = Неопределено;
		НоваяЗапись.СубконтоУУ1 = Неопределено;
		НоваяЗапись.СубконтоУУ2 = Неопределено;
		НоваяЗапись.СубконтоУУ3 = Неопределено;
		НоваяЗапись.Записать();
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаНаПустыеЗаписи()
	Если ПустыеЗаписиСуществуют() Тогда
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуСОтборомПоПустомуСчетуУУ",ЭтотОбъект);
		ПоказатьПредупреждение(Оповещение,"Внимание! Автоматическая настройка сопоставила не все счета. Нажмите ""ОК"" и сопоставьте счета вручную.",,);
	КонецЕсли;
	//Объект.Выполнено = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСОтборомПоПустомуСчетуУУ(Результат) Экспорт 
	Объект.Выполнено = Ложь;
	
	стрОтбор = Новый Структура("СчетУУ", ПланыСчетовУчетныйПустаяСсылка());
	ПараметрыФормы = Новый Структура("Отбор", стрОтбор);
	ОткрытьФорму ("РегистрСведений.сабСоответствиеСчетовИСубконто.ФормаСписка", ПараметрыФормы);
КонецПроцедуры

&НаСервере
Функция ПланыСчетовУчетныйПустаяСсылка()
	Возврат ПланыСчетов.Учетный.ПустаяСсылка();
КонецФункции

&НаСервере
Функция ПустыеЗаписиСуществуют()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	сабСоответствиеСчетовИСубконто.СчетБУ КАК СчетБУ,
		|	сабСоответствиеСчетовИСубконто.СчетУУ КАК СчетУУ
		|ИЗ
		|	РегистрСведений.сабСоответствиеСчетовИСубконто КАК сабСоответствиеСчетовИСубконто
		|ГДЕ
		|	сабСоответствиеСчетовИСубконто.СчетУУ = &СчетУУ";
	
	Запрос.УстановитьПараметр("СчетУУ", ПланыСчетов.Учетный.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗРезультатЗапроса = РезультатЗапроса.Выгрузить();
	
	Если ТЗРезультатЗапроса.Количество() > 0 Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьСтатусыНастроек", Новый Структура("Ссылка, Наименование, Выполнено", Объект.Ссылка, Объект.Наименование, Объект.Выполнено));
КонецПроцедуры


&НаКлиенте
Процедура ВыполненоПриИзменении(Элемент)
	Если Объект.Выполнено Тогда
		ПроверкаНаПустыеЗаписи();
	КонецЕсли;		
КонецПроцедуры

