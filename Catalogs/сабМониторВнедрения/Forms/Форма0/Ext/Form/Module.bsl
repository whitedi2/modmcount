
&НаКлиенте
Процедура Автозаполнение(Команда)
	ВыполнитьАвтозаполение();
	Объект.Выполнено = Истина;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьАвтозаполение()
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	
	//субконто
	ЗаполнитьСубконто();
	
	//план счетов
	ЗаполнитьПланСчетовУчетный();
	
	//план счетов
	ЗаполнитьПланСчетовБюджетный();
	
	//общее заполнение
	БюджетныйНаСервере.НачальноеЗаполнениеИБ();
	
	//учетная политика
	Если Не ЗначениеЗаполнено(Справочники.УчетныеПолитики.НайтиПоНаименованию("Общая", Истина)) Тогда
		УчетнаяПолитикаУмолч = Справочники.УчетныеПолитики.СоздатьЭлемент();
		УчетнаяПолитикаУмолч.Наименование = "Общая";
		УчетнаяПолитикаУмолч.КорСчетПоУмолчанию = ПланыСчетов.Учетный.НайтиПоКоду("76.01");
		УчетнаяПолитикаУмолч.СтатьяВНХПоступление = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Внутреннее перемещение денежных средств", Истина);
		УчетнаяПолитикаУмолч.СтатьяВНХОплата = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Внутреннее перемещение денежных средств", Истина);
		УчетнаяПолитикаУмолч.Записать();
	КонецЕсли;
	
	//сценарий
	Если НЕ ЗначениеЗаполнено(Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина)) Тогда
		УчетнаяПолитикаУмолч = Справочники.СценарииПланирования.СоздатьЭлемент();
		УчетнаяПолитикаУмолч.Наименование = "Факт";
		УчетнаяПолитикаУмолч.Записать();
	КонецЕсли;
	
	//ставки НДС
	ЗаполнитьСтавкиНДС();
	
	//кассы
	ЗаполнитьКассы();
	
	//статьи затрат
	Если Объект.Настройка1 Тогда
		ЗаполнитьСтатьиЗатрат();
	КонецЕсли;
	
	//статьи ДДС
	Если Объект.Настройка2 Тогда
		ЗаполнитьСтатьиДДС();
	КонецЕсли;
	
	//фин.показатели
	сабОбщегоНазначенияБУХ.АвтозаполнениеПоказателейНаСервере();
	
	ЗафиксироватьТранзакцию();
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура СоздатьГруппуСтатейЗатрат(Наименование, Код, РодительСтатьи)
	
	ТекСтатья = Справочники.СтатьиЗатрат.НайтиПоНаименованию(Наименование, Истина);
	Если Не ЗначениеЗаполнено(ТекСтатья) Тогда
		ОбРодирель = Справочники.СтатьиЗатрат.СоздатьГруппу();
	Иначе
		ОбРодирель = ТекСтатья.ПолучитьОбъект();
	КонецЕсли;
	ОбРодирель.Наименование = Наименование;
	ОбРодирель.Код = Код;
	ОбРодирель.Записать();
	
	РодительСтатьи = ОбРодирель.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСтатьюЗатрат(Наименование, Код, РодительСтатьи, ВидРасходовНУ = Неопределено, СоздаватьНовый = Истина)

	Если ВидРасходовНУ = Неопределено Тогда
		ВидРасходовНУ = Перечисления.ВидыРасходовНУ.ПрочиеРасходы;
	КонецЕсли;
	ТекСтатья = Справочники.СтатьиЗатрат.НайтиПоНаименованию(Наименование, Истина);
	Если Не ЗначениеЗаполнено(ТекСтатья) Тогда
		Если НЕ СоздаватьНовый Тогда
			Возврат;		
		КонецЕсли;
		Об = Справочники.СтатьиЗатрат.СоздатьЭлемент();
	Иначе
		Об = ТекСтатья.ПолучитьОбъект();
	КонецЕсли;
	Об.Наименование = Наименование;
	Об.Код = Код;
	Об.Родитель = РодительСтатьи;
	Если Не Об.Предопределенный Тогда
		Об.ВидРасходовНУ = ВидРасходовНУ;
	КонецЕсли;
	Об.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьиЗатрат()
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Выручка", "1000.", ОбРодирель);
	СоздатьСтатьюЗатрат("Выручка от реализации", "1000.01", ОбРодирель);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Затраты основные", "2011.", ОбРодирель);
	СоздатьСтатьюЗатрат("Затраты на основное сырье", "2011.01", ОбРодирель, Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	СоздатьСтатьюЗатрат("Затраты на вспомогательные материалы", "2011.02", ОбРодирель, Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Газ, электроэнергия и прочая энергетика", "2050.", ОбРодирель);
	СоздатьСтатьюЗатрат("Газ, мазут, пар потребление", "2050.01", ОбРодирель);
	СоздатьСтатьюЗатрат("Электроэнергия потребление", "2050.02", ОбРодирель);

	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Общепроизводственные расходы", "2060.", ОбРодирель);
	СоздатьСтатьюЗатрат("Содержание и ремонт зданий и сооружений", "2060.01", ОбРодирель, Перечисления.ВидыРасходовНУ.РемонтОсновныхСредств);
	СоздатьСтатьюЗатрат("Содержание и ремонт оборудования", "2060.02", ОбРодирель, Перечисления.ВидыРасходовНУ.РемонтОсновныхСредств);
	СоздатьСтатьюЗатрат("Содержание ж/д и автотранспорта, ГСМ", "2060.03", ОбРодирель);
	СоздатьСтатьюЗатрат("Аренда офисов, складов", "2060.04", ОбРодирель);
	СоздатьСтатьюЗатрат("Расходы по оформлению тех. документации", "2060.05", ОбРодирель);
	СоздатьСтатьюЗатрат("Малоценное оборудование и запасы", "2060.06", ОбРодирель, Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Заработная плата", "2070.", ОбРодирель);
	СоздатьСтатьюЗатрат("Оплата труда", "2070.01", ОбРодирель, Перечисления.ВидыРасходовНУ.ОплатаТруда);
	СоздатьСтатьюЗатрат("Оплата труда дополнительная", "2070.02", ОбРодирель, Перечисления.ВидыРасходовНУ.ОплатаТруда);
	СоздатьСтатьюЗатрат("Страховые взносы", "2070.03", ОбРодирель, Перечисления.ВидыРасходовНУ.СтраховыеВзносы);
	СоздатьСтатьюЗатрат("НДФЛ на зарплату", "2070.04", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	СоздатьСтатьюЗатрат("Премии", "2070.05", ОбРодирель, Перечисления.ВидыРасходовНУ.ОплатаТруда);
	СоздатьСтатьюЗатрат("Оплата больничного", "2070.06", ОбРодирель);
	СоздатьСтатьюЗатрат("Оплата труда (ЕНВД)", "2070.07", ОбРодирель,,Ложь);
	СоздатьСтатьюЗатрат("Страховые взносы (ЕНВД)", "2070.08", ОбРодирель, Перечисления.ВидыРасходовНУ.СтраховыеВзносы, Ложь);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Общехозяйственные расходы", "2080.", ОбРодирель);
	СоздатьСтатьюЗатрат("Хозяйственные расходы", "2080.01", ОбРодирель);
	СоздатьСтатьюЗатрат("Канцтовары, литература", "2080.02", ОбРодирель);
	СоздатьСтатьюЗатрат("Питание сотрудников", "2080.03", ОбРодирель);
	СоздатьСтатьюЗатрат("Командировочные и затраты на проживание сотрудников", "2080.04", ОбРодирель, Перечисления.ВидыРасходовНУ.КомандировочныеРасходы);
	СоздатьСтатьюЗатрат("Охрана, пожарная сигнализация", "2080.05", ОбРодирель);
	СоздатьСтатьюЗатрат("Представительские расходы", "2080.06", ОбРодирель, Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Услуги сторонних организаций", "2090.", ОбРодирель);
	СоздатьСтатьюЗатрат("Аудиторские услуги", "2090.01", ОбРодирель);
	СоздатьСтатьюЗатрат("Услуги связи, Интернет", "2090.02", ОбРодирель);
	СоздатьСтатьюЗатрат("Юридические, нотариальные и страховые услуги", "2090.03", ОбРодирель);
	СоздатьСтатьюЗатрат("Банковские расходы", "2090.04", ОбРодирель);
	СоздатьСтатьюЗатрат("Услуги обучения сотрудников", "2090.05", ОбРодирель);
	СоздатьСтатьюЗатрат("Компьютерное сопровождение", "2090.06", ОбРодирель);
	СоздатьСтатьюЗатрат("Услуги разработки ПО", "2090.07", ОбРодирель);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Налоги", "2120.", ОбРодирель);
	СоздатьСтатьюЗатрат("Налог на имущество", "2120.01", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	СоздатьСтатьюЗатрат("Земельный налог", "2120.02", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	СоздатьСтатьюЗатрат("Пени и штрафы по налогам", "2120.03", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	СоздатьСтатьюЗатрат("Налог УСН", "2120.04", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	СоздатьСтатьюЗатрат("Прочие налоги и сборы", "2120.05", ОбРодирель, Перечисления.ВидыРасходовНУ.НалогиИСборы);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Затраты по реализации", "2133.", ОбРодирель);
	СоздатьСтатьюЗатрат("Агентское возраграждение", "2133.01", ОбРодирель);
	СоздатьСтатьюЗатрат("Бонусы коммерсантам", "2133.02", ОбРодирель);
	СоздатьСтатьюЗатрат("Реклама и маркетинговые исследования", "2133.03", ОбРодирель);
	СоздатьСтатьюЗатрат("Транспортные услуги", "2133.04", ОбРодирель, Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	СоздатьСтатьюЗатрат("Акциз", "2133.05", ОбРодирель);
	СоздатьСтатьюЗатрат("НДС", "2133.06", ОбРодирель);
	СоздатьСтатьюЗатрат("Прочие коммерческие расходы", "2133.07", ОбРодирель);
	СоздатьСтатьюЗатрат("Услуги комиссионеров", "2133.08", ОбРодирель);
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейЗатрат("Прочие расходы", "2140.", ОбРодирель);
	СоздатьСтатьюЗатрат("Амортизационная премия", "2140.01", ОбРодирель, Перечисления.ВидыРасходовНУ.АмортизационнаяПремия);
	СоздатьСтатьюЗатрат("Амортизация", "2140.02", ОбРодирель, Перечисления.ВидыРасходовНУ.Амортизация, Ложь);
	СоздатьСтатьюЗатрат("Проценты по кредитам", "2140.03", ОбРодирель);
	СоздатьСтатьюЗатрат("Списание материалов", "2140.04", ОбРодирель, Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	СоздатьСтатьюЗатрат("Списание НДС", "2140.05", ОбРодирель);
	СоздатьСтатьюЗатрат("Торговый сбор", "2140.06", ОбРодирель, Перечисления.ВидыРасходовНУ.ТорговыйСбор);
	СоздатьСтатьюЗатрат("Прочие затраты", "2140.07", ОбРодирель);
	СоздатьСтатьюЗатрат("Списание НДС (ЕНВД)", "2140.08", ОбРодирель,,Ложь);
	
КонецПроцедуры


&НаСервере
Процедура СоздатьГруппуСтатейДДС(Наименование, Код, РодительСтатьи)
	
	ТекСтатья = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(Наименование, Истина);
	Если Не ЗначениеЗаполнено(ТекСтатья) Тогда
		ОбРодирель = Справочники.СтатьиДвиженияДенежныхСредств.СоздатьГруппу();
	Иначе
		ОбРодирель = ТекСтатья.ПолучитьОбъект();
	КонецЕсли;
	ОбРодирель.Наименование = Наименование;
	ОбРодирель.Код = Код;
	ОбРодирель.Родитель = РодительСтатьи;
	ОбРодирель.Записать();
	
	РодительСтатьи = ОбРодирель.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСтатьюДДС(Наименование, Код, ВидДвиженияДенежныхСредств = Неопределено, ВидДвиженияУУ = Неопределено, РодительСтатьи, ЭтоДоход = Ложь)

	Если ВидДвиженияДенежныхСредств = Неопределено Тогда
		ВидДвиженияДенежныхСредств = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
	КонецЕсли;
	Если ВидДвиженияУУ = Неопределено Тогда
		ВидДвиженияУУ = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
	КонецЕсли;
	
	Если Наименование = "Выручка от реализации основной продукции и услуг" Тогда
		ТекСтатья = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Оплата от покупателей", Истина);
		Если Не ЗначениеЗаполнено(ТекСтатья) Тогда
			ТекСтатья = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(Наименование, Истина);
		КонецЕсли;
	Иначе	
		ТекСтатья = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(Наименование, Истина);
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ТекСтатья) Тогда
		Об = Справочники.СтатьиДвиженияДенежныхСредств.СоздатьЭлемент();
	Иначе
		Об = ТекСтатья.ПолучитьОбъект();
	КонецЕсли;
	Об.Наименование = Наименование;
	Об.Код = Код;
	Об.Родитель = РодительСтатьи;
	Если Не Об.Предопределенный Тогда
		Об.ВидДвиженияДенежныхСредств = ВидДвиженияДенежныхСредств;	
	КонецЕсли;
	Об.ВидДеятельности = ВидДвиженияУУ;
	Об.Доход = ЭтоДоход;
	Об.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьиДДС()
	
	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейДДС("Доходы", "1000.", ОбРодирель);
	ОбРодирель1 = ОбРодирель;
	СоздатьГруппуСтатейДДС("Выручка от реализации", "1100.", ОбРодирель);
	СоздатьСтатьюДДС("Выручка от реализации основной продукции и услуг", "1100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Выручка от реализации товаров", "1100.02",
		Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Выручка от прочей реализации", "1100.03",
		Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Оплата от факторинговой компании", "1100.04",
		Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Розничная выручка", "1100.05",
		Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Приход ВНХ/ВГО", "5100.", ОбРодирель);
	СоздатьСтатьюДДС("Поступления в рамках перемещения между источниками", "5100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоФинансовойДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ВХП,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;	
	СоздатьГруппуСтатейДДС("Займы, поступления", "7100.", ОбРодирель);
	СоздатьСтатьюДДС("Займы полученные", "7100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями,
		Перечисления.саб_Фин_ВидыДеятельности.Займы,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Поступления от погашения займов", "7100.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям,
		Перечисления.саб_Фин_ВидыДеятельности.Займы,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Проценты по займам полученные", "7100.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям,
		Перечисления.саб_Фин_ВидыДеятельности.Займы,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Прочие доходы", "1500.", ОбРодирель);
	СоздатьСтатьюДДС("Прочие поступления", "1500.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Возврат от поставщиков", "1500.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);
	СоздатьСтатьюДДС("Возврат подотчетных сумм", "1500.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель, Истина);

	ОбРодирель = ОбРодирель1;	
	СоздатьСтатьюДДС("Получение кредитов и займов", "1600.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;	
	СоздатьСтатьюДДС("Поступления от учредителей", "1700.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступлениеДенежныхВкладовСобственников,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;	
	СоздатьСтатьюДДС("Курсовые разницы (доход)", "1800.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоФинансовойДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;	
	СоздатьСтатьюДДС("Поступления от реализации ОС", "3100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоИнвестиционнойДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ИД,
		ОбРодирель, Истина);
		
	ОбРодирель = ОбРодирель1;	
	СоздатьСтатьюДДС("Доход от продажи долей, акций", "4100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПродажиАкцийДругихОрганизаций,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель, Истина);

	ОбРодирель = Неопределено;
	СоздатьГруппуСтатейДДС("Расходы", "2000.", ОбРодирель);
	ОбРодирель1 = ОбРодирель;
	СоздатьГруппуСтатейДДС("Основное сырье и товары", "2011.", ОбРодирель);
	ОбРодирель2 = ОбРодирель;
	СоздатьСтатьюДДС("Закупка основного сырья", "2011.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Закупка товаров для перепродажи", "2011.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Оплата поставщикам (подрядчикам)", "2011.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Затраты на вспомогательные материалы", "2030.", ОбРодирель);
	СоздатьСтатьюДДС("Закупка вспомогательного сырья", "2030.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);

	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Расходы на газ, энергетику", "2050.", ОбРодирель);
	СоздатьСтатьюДДС("Газ, пар, прочее топливо для отопления", "2050.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Расходы на энергетику", "2050.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Общепроизводственные расходы", "2060.", ОбРодирель);
	СоздатьСтатьюДДС("Расходы на содержание зданий и сооружений", "2060.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Расходы на содержание оборудования", "2060.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Аренда офисов, складов", "2060.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Расходы на текущее содержание автотранспорта", "2060.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Расходы по оформлению техдокументации, сертификации, лицензирования", "2060.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Малоценное оборудование и запасы", "2060.06",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Заработная плата, взносы, НДФЛ", "2070.", ОбРодирель);
	СоздатьСтатьюДДС("Выплата заработной платы", "2070.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Выплата заработной платы дополнительно", "2070.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Страховые взносы", "2070.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("НДФЛ с зарплаты", "2070.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Премии", "2070.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Общехозяйственные расходы", "2080.", ОбРодирель);
	СоздатьСтатьюДДС("Хозяйственные расходы", "2080.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Канцтовары, литература", "2080.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Питание сотрудников", "2080.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Командировочные, оплата за проживание сотрудников", "2080.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Охрана и пожарная сигнализация", "2080.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Представительские расходы", "2080.06",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Услуги сторонних организаций", "2100.", ОбРодирель);
	СоздатьСтатьюДДС("Аудиторские и консалтинговые услуги", "2100.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Услуги связи, Интернет", "2100.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Юридические и нотариальные", "2100.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Расходы на услуги банков", "2100.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Обучение сотрудников", "2100.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Компьютерное сопровождение", "2100.06",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Услуги разработки ПО", "2100.07",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Прочие услуги", "2100.08",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Проценты по кредитам", "2110.", ОбРодирель);
	СоздатьСтатьюДДС("Выплата процентов по кредитам и займам", "2110.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Проценты по прочим кредитам", "2110.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);

	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Налоги", "2120.", ОбРодирель);
	СоздатьСтатьюДДС("Налог на имущество", "2120.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Земельный налог", "2120.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Пени и штрафы по налогам", "2120.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Налог УСН", "2120.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Прочие налоги и сборы", "2120.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Налог на прибыль", "2120.06",
		Перечисления.ВидыДвиженийДенежныхСредств.НалогНаПрибыль,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("НДФЛ с дивидендов", "2120.07",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Коммерческие расходы", "2133.", ОбРодирель);
	СоздатьСтатьюДДС("Агентское вознаграждение", "2133.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Бонусы коммерсантам", "2133.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Транспортые расходы по реализации", "2133.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Прочие коммерческие расходы", "2133.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Реклама и маркетинговые исследования", "2133.05",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Акциз", "2133.06",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("НДС", "2133.07",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Прочие управленческие расходы", "2210.", ОбРодирель);
	СоздатьСтатьюДДС("Представительские расходы (свыше лимита)", "2210.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Возврат покупателям", "2210.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Выдача подотчетных сумм", "2210.03",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
	СоздатьСтатьюДДС("Прочие расходы", "2210.04",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ТД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Погашение кредитов и займов", "2220.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПогашениеЗаймовИКредитов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Выкуп долей, акций", "4300.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеАкцийДругихОрганизаций,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Выплата дивидендов", "4400.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Рентные платежи", "4600.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Расход ВНХ/ВГО", "5200.", ОбРодирель);
	СоздатьСтатьюДДС("Расходы в рамках перемещения между источниками", "5200.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ВХП,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьГруппуСтатейДДС("Выплаты по займам", "7200.", ОбРодирель);
	СоздатьСтатьюДДС("Возврат займов полученных", "7200.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПогашениеЗаймовИКредитов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
	СоздатьСтатьюДДС("Предоставление займов", "7200.02",
		Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеДолговыхЦенныхБумагПредоставлениеЗаймов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Курсовые разницы (расход)", "1900.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендов,
		Перечисления.саб_Фин_ВидыДеятельности.ФД,
		ОбРодирель);

	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Приобретение ОС", "3200.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоИнвестиционнойДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ИД,
		ОбРодирель); 
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Кап. ремонт зданий и оборудования", "3300.01",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоИнвестиционнойДеятельности,
		Перечисления.саб_Фин_ВидыДеятельности.ИД,
		ОбРодирель);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Неклассифицировано", "0000.00",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		,
		);
		
	ОбРодирель = ОбРодирель1;
	СоздатьСтатьюДДС("Неклассифицировано", "0000.00",
		Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности,
		,
		); 
			

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкиНДС()
	
	Если Не ЗначениеЗаполнено(Справочники.СтавкиНДС.НайтиПоНаименованию("10%", Истина)) Тогда
		Об = Справочники.СтавкиНДС.СоздатьЭлемент();
		Об.Наименование = "10%";
		Об.Ставка = 10;
		Об.Записать();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Справочники.СтавкиНДС.НайтиПоНаименованию("18%(до 2019)", Истина)) Тогда
		Об = Справочники.СтавкиНДС.СоздатьЭлемент();
		Об.Наименование = "18%(до 2019)";
		Об.Ставка = 18;
		Об.Записать();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Справочники.СтавкиНДС.НайтиПоНаименованию("20%", Истина)) Тогда
		Об = Справочники.СтавкиНДС.СоздатьЭлемент();
		Об.Наименование = "20%";
		Об.Ставка = 20;
		Об.Записать();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Справочники.СтавкиНДС.НайтиПоНаименованию("Без НДС", Истина)) Тогда
		Об = Справочники.СтавкиНДС.СоздатьЭлемент();
		Об.Наименование = "Без НДС";
		об.НеОблагается = Истина;
		Об.Записать();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Справочники.СтавкиНДС.НайтиПоНаименованию("Произвольная", Истина)) Тогда
		Об = Справочники.СтавкиНДС.СоздатьЭлемент();
		Об.Наименование = "Произвольная";
		Об.Записать();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКассы()
	
	Если Не ЗначениеЗаполнено(Справочники.Кассы.НайтиПоНаименованию("Касса", Истина)) Тогда
		Об = Справочники.Кассы.СоздатьЭлемент();
		Об.Наименование = "Касса";
		Об.ВидИсточника = Перечисления.ГД_ВидыИсточников.Касса;
		Об.СчетУчета = ПланыСчетов.Учетный.НайтиПоКоду("50.01");
		Об.ВалютаДенежныхСредств = Справочники.Валюты.НайтиПоКоду("643");
		Об.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСубконто()
	
	СоздатьСубконто("Банковские счета", "СправочникСсылка.БанковскиеСчета");
	СоздатьСубконто("Ведомости", "ДокументСсылка.УЧ_ВыплатаЗП");
	СоздатьСубконто("Виды начислений оплаты труда", "СправочникСсылка.ВидыНачисленийОплатыТруда");
	СоздатьСубконто("Внеоборотные активы", "СправочникСсылка.ОбъектыСтроительства");
	СоздатьСубконто("Внутренние договоры", "СправочникСсылка.ВнутренниеДоговоры");
	СоздатьСубконто("Договоры", "СправочникСсылка.ДоговорыКонтрагентов");
	Типы = Новый Массив;
	Типы.Добавить("ДокументСсылка.УЧ_ДвижениеДС");
	Типы.Добавить("ДокументСсылка.УЧ_КорректировкаРеализации");
	Типы.Добавить("ДокументСсылка.УЧ_ПоступлениеТоваров");
	Типы.Добавить("ДокументСсылка.УЧ_Реализация");
	СоздатьСубконто("Документ", Типы);
	СоздатьСубконто("Заказы клиентов", "ДокументСсылка.ЗаказКлиента");
	СоздатьСубконто("Заказы поставщикам", "ДокументСсылка.ЗаказПоставщику");
	Типы = Новый Массив;
	Типы.Добавить("ДокументСсылка.Д_ЗаявкаНаОтгрузку");
	Типы.Добавить("СправочникСсылка.ДоговорыКонтрагентов");
	Типы.Добавить("СправочникСсылка.Контрагенты");
	СоздатьСубконто("Заявка на отгрузку / Контрагент", Типы);
	Типы = Новый Массив;
	Типы.Добавить("СправочникСсылка.Кассы");
	Типы.Добавить("СправочникСсылка.БанковскиеСчета");
	СоздатьСубконто("Источники финансирования", Типы);
	СоздатьСубконто("Кассы", "СправочникСсылка.Кассы");
	СоздатьСубконто("Ключи аналитики бюджетов", "СправочникСсылка.КлючиАналитикиБюджетов");
	СоздатьСубконто("Контрагенты", "СправочникСсылка.Контрагенты");
	Типы = Новый Массив;
	Типы.Добавить("СправочникСсылка.СтатьиДвиженияДенежныхСредств");
	//Типы.Добавить("СправочникСсылка.СтатьиДоходовРасходов");
	Типы.Добавить("Строка");
	Типы.Добавить("СправочникСсылка.Контрагенты");
	Типы.Добавить("СправочникСсылка.СтатьиЗатрат");
	СоздатьСубконто("Контрагенты бюджет", Типы);
	Типы = Новый Массив;
	Типы.Добавить("СправочникСсылка.Организации");
	Типы.Добавить("СправочникСсылка.Контрагенты");
	СоздатьСубконто("Контрагенты и организации", Типы);
	СоздатьСубконто("Кредиты и займы", "СправочникСсылка.ДоговорыКредитовИДепозитов");
	СоздатьСубконто("Материалы", "СправочникСсылка.Номенклатура");
	Типы = Новый Массив;
	Типы.Добавить("ПеречислениеСсылка.ВидыПлатежейВГосБюджет");
	Типы.Добавить("СправочникСсылка.СтатьиЗатрат");
	Типы.Добавить("Строка");
	СоздатьСубконто("Налоги бюджет", Типы);
	СоздатьСубконто("Виды налогов и сборов", "ПеречислениеСсылка.ВидыПлатежейВГосБюджет");
	СоздатьСубконто("Налоги и сборы", "СправочникСсылка.ВидыНалоговИПлатежейВБюджет");
	СоздатьСубконто("Номенклатура", "СправочникСсылка.Номенклатура");
	СоздатьСубконто("Организации", "СправочникСсылка.Организации");
	СоздатьСубконто("Основные средства", "СправочникСсылка.ОсновныеСредства");
	СоздатьСубконто("Подразделения", "СправочникСсылка.СтруктураПредприятия");
	СоздатьСубконто("Предприятия", "СправочникСсылка.Предприятия");
	СоздатьСубконто("Предприятия холдинга", "СправочникСсылка.сабПредприятияХолдинга");
	СоздатьСубконто("Представительские расходы", "СправочникСсылка.ПредставительскиеРасходы");
	СоздатьСубконто("Проекты", "СправочникСсылка.Проекты");
	СоздатьСубконто("Доходы будущих периодов", "СправочникСсылка.ДоходыБудущихПериодов");
	СоздатьСубконто("Расходы будущих периодов", "СправочникСсылка.РасходыБудущихПериодов");
	СоздатьСубконто("Склады", "СправочникСсылка.Склады");
	Типы = Новый Массив;
	Типы.Добавить("СправочникСсылка.Сотрудники");
	Типы.Добавить("СправочникСсылка.ФизическиеЛица");
	СоздатьСубконто("Сотрудники", Типы);
	СоздатьСубконто("Статьи ДДС", "СправочникСсылка.СтатьиДвиженияДенежныхСредств");
	//СоздатьСубконто("Статьи доходов и расходов", "СправочникСсылка.СтатьиДоходовРасходов");
	СоздатьСубконто("Статьи затрат", "СправочникСсылка.СтатьиЗатрат");
	СоздатьСубконто("Статьи оборотного баланса", "СправочникСсылка.Д_СтатьиОборотки");
	Типы = Новый Массив;
	Типы.Добавить("СправочникСсылка.Учредители");
	Типы.Добавить("СправочникСсылка.ФизическиеЛица");
	//Типы.Добавить("СправочникСсылка.Контрагенты");
	СоздатьСубконто("Учредители", Типы);
	СоздатьСубконто("Фонды", "СправочникСсылка.Фонды");
	СоздатьСубконто("Ценные бумаги", "СправочникСсылка.ЦенныеБумаги");
	СоздатьСубконто("Прочие доходы и расходы", "СправочникСсылка.ПрочиеДоходыИРасходы");

КонецПроцедуры

&НаСервере
Процедура СоздатьСубконто(Наименование, Типы)
	
	Если Не ЗначениеЗаполнено(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию(Наименование, Истина)) Тогда
		Об = ПланыВидовХарактеристик.ВидыСубконто.СоздатьЭлемент();	
	Иначе
		//Об = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию(Наименование, Истина).ПолучитьОбъект();
		Возврат;
	КонецЕсли;
	
	Массив = Новый Массив;
	Если ТипЗнч(Типы) = Тип("Массив") Тогда
		Для каждого ТекТип Из Типы Цикл
			Массив.Добавить(Тип(ТекТип));
		КонецЦикла; 
	Иначе
		Массив.Добавить(Тип(Типы));
	КонецЕсли;
	ОписаниеТиповС = Новый ОписаниеТипов(Массив);
	
	Об.Наименование = Наименование;
	Об.ТипЗначения = ОписаниеТиповС;
	Об.Записать();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПланСчетовУчетный()
	
	СоздатьУчетныйСчет("00",
	"Вспомогательный",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("001",
	"ОС арендованные, на отв. хранении",
	ВидСчета.Активный,
	Истина,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("002",
	"ТМЦ на отв. хранении, неликвиды",
	ВидСчета.Активный,
	Истина,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("004",
	"ТМЦ, списаные за баланс",
	ВидСчета.Активный,
	Истина,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("005",
	"Списанная деб. задолженность",
	ВидСчета.АктивноПассивный,
	Истина,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("006",
	"Списанная кред. задолженность",
	ВидСчета.АктивноПассивный,
	Истина,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);

	СоздатьУчетныйСчет("01",
	"Основные средства",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("02",
	"Амортизация основных средств",
	ВидСчета.Пассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("08",
	"Вложения во внеоборотные активы",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("08.03",
	"Строительство/ремонт объектов основных средств",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("08"));
	
	СоздатьУчетныйСчет("08.04",
	"Приобретение объектов основных средств",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("08"));
	
	СоздатьУчетныйСчет("10",
	"Материалы",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("10.01",
	"Сырье и материалы",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.02",
	"Вспомогательное сырье",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.03",
	"Топливо",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.04",
	"Тара и тарные материалы",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.05",
	"ТМЦ для текущей деятельности",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.06",
	"ТМЦ для инвестиционной деятельности",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.07",
	"ТМЦ для продажи (неликвиды)",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("10.09",
	"Инвентарь и хозяйственные принадлежности",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("10"));
	
	СоздатьУчетныйСчет("20",
	"Основное производство",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("25",
	"Общепроизводственные расходы",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("40",
	"Выпуск продукции",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("41",
	"Товары на складах",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("43",
	"Готовая продукция",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("44",
	"Расходы на продажу",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("45",
	"Товары в пути",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("50",
	"Касса",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кассы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	Неопределено);
	
	СоздатьУчетныйСчет("50.01",
	"Касса организации",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кассы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("50"));
	
	СоздатьУчетныйСчет("50.02",
	"Касса организации (в валюте)",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Истина,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кассы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("50"));
	
	//СоздатьУчетныйСчет("50.03",
	//"Касса магазина",
	//ВидСчета.Активный,
	//Ложь,
	//Ложь,
	//Ложь,
	//Ложь,
	//ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	//ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кассы", Истина),
	//ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	//Истина,
	//Ложь,
	//Истина,
	//ПланыСчетов.Учетный.НайтиПоКоду("50"));
	
	СоздатьУчетныйСчет("51",
	"Расчетные счета",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	Неопределено);
	
	СоздатьУчетныйСчет("51.01",
	"Расчетные счета",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("51"));
	
	СоздатьУчетныйСчет("51.02",
	"Валютные счета",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Истина,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("51"));
	
	СоздатьУчетныйСчет("51.09",
	"Виртуальные расчетные счета",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Банковские счета", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ключи аналитики бюджетов", Истина),
	Истина,
	Ложь,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("51"));
	
	СоздатьУчетныйСчет("55",
	"Казна",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("55.01",
	"Казна",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина),
	Истина,
	Истина,
	Истина,
	ПланыСчетов.Учетный.НайтиПоКоду("55"));
	
	СоздатьУчетныйСчет("55.02",
	"Казна неденежная",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	Неопределено,
	Неопределено,
	Истина,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("55"));
	
	СоздатьУчетныйСчет("57",
	"Переводы в пути",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("57.01",
	"Переводы в пути",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("57"));
	
	СоздатьУчетныйСчет("57.03",
	"Продажи по платежным картам",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("57"));
	
	СоздатьУчетныйСчет("58",
	"Финансовые вложения",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("58.01",
	"Долговые ценные бумаги",
	ВидСчета.АктивноПассивный,
	Ложь,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ценные бумаги", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("58"));
	
	СоздатьУчетныйСчет("58.02",
	"Предоставленные займы",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("58"));
	
	СоздатьУчетныйСчет("58.03",
	"Проценты по предоставленным займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("58"));
	
	СоздатьУчетныйСчет("60",
	"Расчеты с поставщиками и подрядчиками",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("60.01",
	"Поставщики основного сырья",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("60"));
	
	СоздатьУчетныйСчет("60.02",
	"Поставщики вспомогательного сырья",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("60"));
	
	СоздатьУчетныйСчет("60.03",
	"Поставщики услуг",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("60"));
	
	СоздатьУчетныйСчет("60.04",
	"Поставщики МБП",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("60"));
	
	СоздатьУчетныйСчет("60.05",
	"Поставщики инвестиций",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("60"));
	
	СоздатьУчетныйСчет("62",
	"Расчеты с покупателями и заказчиками",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("62.01",
	"Расчеты с покупателями основной продукции",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("62"));
	
	СоздатьУчетныйСчет("62.02",
	"Расчеты с покупателями побочной продукции",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("62"));
	
	СоздатьУчетныйСчет("62.03",
	"Расчеты с прочими покупателями",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("62"));
	
	СоздатьУчетныйСчет("66",
	"Расчеты по краткосрочным кредитам и займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("66.01",
	"Краткосрочные кредиты и займы",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("66"));
	
	СоздатьУчетныйСчет("66.02",
	"Проценты по краткосрочным кредитам и займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("66"));
	
	СоздатьУчетныйСчет("67",
	"Расчеты по долгосрочным кредитам и займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("67.01",
	"Кредиты",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("67"));
	
	СоздатьУчетныйСчет("67.02",
	"Проценты по кредитам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("67"));
	
	СоздатьУчетныйСчет("67.03",
	"Займы",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("67"));
	
	СоздатьУчетныйСчет("67.04",
	"Проценты по займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Кредиты и займы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("67"));
	
	СоздатьУчетныйСчет("68",
	"Расчеты по налогам и сборам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Организации", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("68.01",
	"Расчеты по налогам и сборам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Организации", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("68"));
	
	СоздатьУчетныйСчет("68.02",
	"НДФЛ при исполнении обязанностей налогового агента",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Организации", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("68"));
	
	СоздатьУчетныйСчет("68.03",
	"Расчеты по налогам на основные средства",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Организации", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина),
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("68"));
	
	СоздатьУчетныйСчет("69",
	"Расчеты по социальному страхованию и обеспечению",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Налоги и сборы", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Организации", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудника", Истина),
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("70",
	"Расчеты по оплате труда",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Виды начислений оплаты труда", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Ведомости", Истина),
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("71",
	"Расчеты с подотчетными лицами",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("71.01",
	"Подотчет касса",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("71"));
	
	СоздатьУчетныйСчет("71.02",
	"Подотчет управленческая касса",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("71"));

	СоздатьУчетныйСчет("73",
	"Расчеты с персоналом по прочим операциям",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("73.01",
	"Расчеты по предоставленным займам",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("73"));
	
	СоздатьУчетныйСчет("73.02",
	"Расчеты по возмещению материального ущерба",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("73"));
	
	СоздатьУчетныйСчет("73.03",
	"Расчеты по прочим операциям",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Сотрудники", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("73"));
	
	СоздатьУчетныйСчет("75",
	"Расчеты с учредителями",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("75.01",
	"Расчеты по вкладам в уставный капитал",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("75"));
	
	СоздатьУчетныйСчет("75.02",
	"Расчеты по выплате доходов",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("75"));
	
	СоздатьУчетныйСчет("76",
	"Расчеты с разными дебиторами и кредиторами",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("76.01",
	"Прочие расчеты с разными дебиторами и кредиторами",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("76"));
	
	СоздатьУчетныйСчет("79",
	"Внутрихозяйственные расчеты",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внутренние договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("79.01",
	"Внутрихозяйственные денежные взаиморасчеты",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внутренние договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("79"));
	
	СоздатьУчетныйСчет("79.02",
	"Внутрихозяйственные товарные взаиморасчеты",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внутренние договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("79"));
	
	СоздатьУчетныйСчет("79.03",
	"Внутрихозяйственные с внешними предприятиями",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внутренние договоры", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("79"));
	
	СоздатьУчетныйСчет("82",
	"Резервный капитал",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Фонды", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("83",
	"Добавочный капитал",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учрелители", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("84",
	"Нераспределенная прибыль (непокрытый убыток)",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("90",
	"Продажи",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("90.01",
	"Выручка от реализации",
	ВидСчета.АктивноПассивный,
	Ложь,
	Истина,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("90.02",
	"Себестоимость",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("90.03",
	"Расходы по реализации",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("90.04",
	"Реализация материалов",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("90.05",
	"Реализация основных средств",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("90.09",
	"Прибыль/убыток от продаж",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	ПланыСчетов.Учетный.НайтиПоКоду("90"));
	
	СоздатьУчетныйСчет("91",
	"Прочие доходы и расходы",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Прочие доходы и расходы", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("94",
	"Недостачи и потери от порчи ценностей",
	ВидСчета.Активный,
	Ложь,
	Истина,
	Ложь,
	Истина,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("97",
	"Расходы будущих периодов",
	ВидСчета.Активный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Расходы будущих периодов", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("98",
	"Доходы будущих периодов",
	ВидСчета.Пассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Доходы будущих периодов", Истина),
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("99",
	"Прибыли и убытки",
	ВидСчета.АктивноПассивный,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("ВСП",
	"Служебный",
	ВидСчета.АктивноПассивный,
	Истина,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Неопределено,
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("КАЗ",
	"Расчеты между предприятиями",
	ВидСчета.АктивноПассивный,
	Истина,
	Ложь,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина),
	Ложь,
	Ложь,
	Ложь,
	Неопределено);
	
	СоздатьУчетныйСчет("НЗВ",
	"Незавершенное производство",
	ВидСчета.АктивноПассивный,
	Истина,
	Истина,
	Ложь,
	Ложь,
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина),
	ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина),
	Неопределено,
	Ложь,
	Ложь,
	Ложь,
	Неопределено);	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьУчетныйСчет(Код, Наименование, Вид, Забалансовый, Количественнй, Валютный, УчетПоПодразделениям, Субконто1, Субконто2, Субконто3, Субконто1Оборотное, Субконто2Оборотное, Субконто3Оборотное, Родитель = Неопределено)
	
	Если Родитель = Неопределено Тогда
		Родитель = ПланыСчетов.Учетный.ПустаяСсылка();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПланыСчетов.Учетный.НайтиПоКоду(Код)) Тогда
		Об = ПланыСчетов.Учетный.СоздатьСчет();
		Об.Код = Код;
		Об.Наименование = Наименование;
		Об.Вид = Вид;
		Об.Забалансовый = Забалансовый;
		Об.Количественный = Количественнй;
		Об.Валютный = Валютный;
		Об.УчетПоПодразделениям = УчетПоПодразделениям;
		Об.Родитель = Родитель;
		Если ЗначениеЗаполнено(Субконто1) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто1;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто1Оборотное;
		КонецЕсли;
		Если ЗначениеЗаполнено(Субконто2) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто2;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто2Оборотное;
		КонецЕсли;
		Если ЗначениеЗаполнено(Субконто3) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто3;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто3Оборотное;
		КонецЕсли;
		Об.Записать();
	
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПланСчетовБюджетный()

	

КонецПроцедуры

&НаСервере
Процедура СоздатьБюджетныйСчет(Код, Наименование, Вид, Забалансовый, Количественнй, Валютный, УчетПоПодразделениям, Субконто1, Субконто2, Субконто3, Субконто1Оборотное, Субконто2Оборотное, Субконто3Оборотное, Родитель = Неопределено)
	
	Если Родитель = Неопределено Тогда
		Родитель = ПланыСчетов.Учетный.ПустаяСсылка();	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПланыСчетов.Учетный.НайтиПоКоду(Код)) Тогда
		Об = ПланыСчетов.Учетный.СоздатьСчет();
		Об.Код = Код;
		Об.Наименование = Наименование;
		Об.Вид = Вид;
		Об.Забалансовый = Забалансовый;
		Об.Количественный = Количественнй;
		Об.Валютный = Валютный;
		Об.УчетПоПодразделениям = УчетПоПодразделениям;
		Об.Родитель = Родитель;
		Если ЗначениеЗаполнено(Субконто1) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто1;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто1Оборотное;
		КонецЕсли;
		Если ЗначениеЗаполнено(Субконто2) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто2;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто2Оборотное;
		КонецЕсли;
		Если ЗначениеЗаполнено(Субконто3) Тогда
			ОбСтрока = Об.ВидыСубконто.Добавить();
			ОбСтрока.ВидСубконто = Субконто3;
			//ОбСтрока.Валютный = Истина;
			//ОбСтрока.Количественный = Истина;
			//ОбСтрока.Крахмал = Истина;
			ОбСтрока.ТолькоОбороты = Субконто3Оборотное;
		КонецЕсли;
		Об.Записать();
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыСубконто(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.ВидыСубконто.ФормаСписка",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправленческийПланСчетов(Команда)
	ОткрытьФорму("ПланСчетов.Учетный.ФормаСписка",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбразецЗатрат(Команда)
	ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.ФормаПримерЗатрат");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбразецДДС(Команда)
	ОткрытьФорму("Справочник.сабМониторВнедрения.Форма.ФормаПримерДДС");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатьиЗатрат(Команда)
	ОткрытьФорму("Справочник.СтатьиЗатрат.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатьиДДС(Команда)
	ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаСписка");
КонецПроцедуры



