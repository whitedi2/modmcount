Функция ФормаВыполненияСправочники(ЗадачаСсылка, ТочкаМаршрутаСсылка, Выборка) Экспорт
	
	Если ТочкаМаршрутаСсылка = Перечисления.УтверждениеБюджетаТочкиМаршрута.Действие1 Тогда 
		ИмяФормы = "Справочник.УтверждениеБюджета.Форма.ФормаПодготовки";
		
	ИначеЕсли ТочкаМаршрутаСсылка = Перечисления.УтверждениеБюджетаТочкиМаршрута.Действие5 Тогда 
		ИмяФормы = "Справочник.УтверждениеБюджета.Форма.ФормаОплаты";
	Иначе
		ИмяФормы = "Справочник.УтверждениеБюджета.Форма.ФормаСогласования";		
	КонецЕсли;	
		
	Результат = Новый Структура;
	Результат.Вставить("ПараметрыФормы", Новый Структура("Ключ, ТочкаМаршрута, Исполнитель, Должность",
			ЗадачаСсылка, ТочкаМаршрутаСсылка.Имя, Выборка.Исполнитель, Выборка.Должность));
	Результат.Вставить("ИмяФормы", ИмяФормы);
	Возврат Результат;
	
КонецФункции

Функция ИмяФормыВыполненияСправочники(ТочкаМаршрутаСсылка, Заявка = Неопределено) Экспорт
	
	Если ТочкаМаршрутаСсылка = Перечисления.УтверждениеБюджетаТочкиМаршрута.Действие1 Тогда 
		Возврат "ФормаПодготовки";	
	ИначеЕсли ТочкаМаршрутаСсылка = Перечисления.СогласованиеОбщееТочкиМаршрута.Действие5 Тогда 
		Возврат "ФормаОплаты";
	Иначе	
		Возврат "ФормаСогласования";		
	КонецЕсли;	
	
КонецФункции

Процедура ОтчетОВыполнении(ТабДок, Ссылка, ИмяБП) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	
	
	Макет = Справочники.СогласованиеОбщее.ПолучитьМакет("ВыполненныеСправочники");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТекБП.Ссылка КАК БизнесПроцесс,
	|	ТекБП.ТипБюджета КАК ТипБюджета,
	|	ТекБП.ДатаНачала КАК ДатаНачала,
	|	ТекБП.ДатаЗавершения,
	|	ТекБП.Представление,
	|	ТекБП.Описание,
	|	ВЫБОР
	|		КОГДА ТекБП.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ТекБП.ДатаНачала, &ТекДата, МИНУТА) / 60
	|		ИНАЧЕ РАЗНОСТЬДАТ(ТекБП.ДатаНачала, ТекБП.ДатаЗавершения, МИНУТА) / 60
	|	КОНЕЦ КАК ДлительностьЧас,
	|	ВЫБОР
	|		КОГДА ТекБП.Завершен = ЛОЖЬ
	|			ТОГДА ""(в процессе)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВПроцессе,
	|	ВЫБОР
	|		КОГДА ТекБП.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ТекБП.ДатаНачала, &ТекДата, МИНУТА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ТекБП.ДатаНачала, ТекБП.ДатаЗавершения, МИНУТА)
	|	КОНЕЦ КАК ДлительностьМин,
	|	ТекБП.Заявка
	|ИЗ
	|	БизнесПроцесс." + ИмяБП + " КАК ТекБП
	|ГДЕ
	|	ТекБП.Ссылка В(&Заявка)";
	Запрос.Параметры.Вставить("Заявка", Ссылка);
	Запрос.Параметры.Вставить("ТекДата", ТекущаяДата());
	Результат = Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Задача.Наименование КАК Задача,
	               |	Задача.ДатаНачала КАК ДатаНачала,
	               |	Задача.ДатаИсполнения,
	               |	ВЫБОР
	               |		КОГДА Задача.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	               |			ТОГДА Задача.Должность
	               |		ИНАЧЕ Задача.Исполнитель
	               |	КОНЕЦ КАК Исполнитель,
	               |	Задача.Комментарии,
	               |	ВЫБОР
	               |		КОГДА Задача.Выполнена = ЛОЖЬ
	               |			ТОГДА РАЗНОСТЬДАТ(Задача.ДатаНачала, &ТекДата, МИНУТА) / 60
	               |		ИНАЧЕ РАЗНОСТЬДАТ(Задача.ДатаНачала, Задача.ДатаИсполнения, МИНУТА) / 60
	               |	КОНЕЦ КАК ДлительностьЧас,
	               |	ВЫБОР
	               |		КОГДА Задача.Выполнена = ЛОЖЬ
	               |			ТОГДА ""(в процессе)""
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ВПроцессе,
	               |	ВЫБОР
	               |		КОГДА Задача.Выполнена = ЛОЖЬ
	               |			ТОГДА РАЗНОСТЬДАТ(Задача.ДатаНачала, &ТекДата, МИНУТА)
	               |		ИНАЧЕ РАЗНОСТЬДАТ(Задача.ДатаНачала, Задача.ДатаИсполнения, МИНУТА)
	               |	КОНЕЦ КАК ДлительностьМин,
	               |	Задача.РезультатВыполнения,
	               |	Задача.Заявка,
	               |	Задача.БизнесПроцесс,
	               |	Задача.Пользователь
	               |ИЗ
	               |	Справочник.Задача КАК Задача
	               |ГДЕ
	               |	Задача.БизнесПроцесс В(&Заявка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаНачала";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатСправочники = Запрос.Выполнить();
	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаявкаБезналШапка = Макет.ПолучитьОбласть("ЗаявкаБезналШапка");
	ОбластьЗаявкаБезнал = Макет.ПолучитьОбласть("ЗаявкаБезнал");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Для каждого ТекСсылка Из Ссылка Цикл
		НомерСтроки = 0;
		СтруктураОтбора = Новый Структура("БизнесПроцесс", ТекСсылка); 
		Выборка = Результат.Выбрать();
		Пока Выборка.НайтиСледующий(СтруктураОтбора) Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбластьЗаголовок.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьЗаголовок);
			
			Шапка.Параметры.Заполнить(Выборка);
			Шапка.Параметры.БизнесПроцесс = Выборка.Представление + " (" + Строка(Выборка.ТипБюджета) + ")";
			Шапка.Параметры.ДлительностьЧас = Цел(Выборка.ДлительностьЧас);
			Шапка.Параметры.ДлительностьМин = Окр((Выборка.ДлительностьЧас - Цел(Выборка.ДлительностьЧас)) * 60, 0);
			
			ТабДок.Вывести(Шапка, Выборка.Уровень());
			
			ТабДок.Вывести(ОбластьЗаявкаБезналШапка);
			
			СуммаВсего = 0;
			ВыборкаСправочники = РезультатСправочники.Выбрать();
			Пока ВыборкаСправочники.НайтиСледующий(СтруктураОтбора) Цикл
				НомерСтроки = НомерСтроки + 1;
				ОбластьЗаявкаБезнал.Параметры.Заполнить(ВыборкаСправочники);
				ОбластьЗаявкаБезнал.Параметры.ДлительностьЧас = Цел(ВыборкаСправочники.ДлительностьЧас);
				
				ОбластьЗаявкаБезнал.Параметры.ДлительностьМин = Окр((ВыборкаСправочники.ДлительностьЧас - Цел(ВыборкаСправочники.ДлительностьЧас)) * 60, 0);
				ОбластьЗаявкаБезнал.Параметры.НомерСтроки = НомерСтроки;
				ТабДок.Вывести(ОбластьЗаявкаБезнал, ВыборкаСправочники.Уровень());
			КонецЦикла;
			
			//ТабДок.Вывести(ОбластьИтого);
			ВставлятьРазделительСтраниц = Истина;
		КонецЦикла;
	КонецЦикла; 
	
	//}}
КонецПроцедуры

