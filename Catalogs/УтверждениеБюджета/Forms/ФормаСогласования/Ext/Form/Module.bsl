&НаСервере
Процедура ВыполненоСервер(ПроверкаУспешно, ВставлятьКомм)
	
	НачатьТранзакцию();
	
	//добавляем комментарии в историю переписки
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	Если ВставлятьКомм Тогда
		Объект.Комментарии = Строка(ТекущаяДата()) + ": " + ПараметрыСеанса.ТекущийПользователь + ?(ПроверкаУспешно, "", " не") + " утвердил(а) бюджет:
		|" + Комментарий;
		БП.Комментарии = БП.Комментарии + ?(ПустаяСтрока(БП.Комментарии), "", "
		|") + Объект.Комментарии;
	КонецЕсли;
	
	ТЗ = ДопСогласование.Выгрузить();
	БП.ДопСогласование.Загрузить(ТЗ);
	
	НаДоработке = 0;
	
	Если ВставлятьКомм Тогда // если заявка согласована или нет
		ДоступныеПользователи = БПСервер.ПолучитьМассивПользователей();
		ЕстьДоступКзаявке = Ложь;
		Для каждого ТекСтрока Из БП.ДопСогласование Цикл
			Если НЕ ДоступныеПользователи.Найти(ТекСтрока.СубъектСогласования) = Неопределено Тогда
				Если ТекСтрока.Пройден Тогда
					Продолжить;
				КонецЕсли;	
				ТекСтрока.Пройден = 1;
				ТекСтрока.Согласовано = ПроверкаУспешно;
				ТекСтрока.ДатаВыполнения = ТекущаяДата();
				ТекСтрока.Комментарии = Комментарий;
				ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				НаДоработке = 1 - ПроверкаУспешно;
				ЕстьДоступКзаявке = Истина;
				Прервать;		
			КонецЕсли;	
		КонецЦикла;
		Если НЕ ЕстьДоступКзаявке Тогда
			Сообщить("Вы не можете утвердить данный бюджет, т.к. вас нет в маршруте утверждения.");
			Возврат;			
		КонецЕсли;
	Иначе //если заявка отменена
		СтруктураПоиска = Новый Структура("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		МассивСтрок = БП.ДопСогласование.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() Тогда //если отменяет один из рецензентов
			Для каждого ТекСтрока Из МассивСтрок Цикл
				ТекСтрока.Пройден = 0;
				ТекСтрока.Согласовано = 0;
				ТекСтрока.ДатаВыполнения = ТекущаяДата();
				ТекСтрока.Комментарии = "Отменил(а) бюджет. " + Строка(Комментарий);
				Комментарий = "Отменил(а) бюджет. " +  Комментарий;
				ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			КонецЦикла;
		Иначе //если отменяет не рецензент
			Для каждого ТекСтрока Из БП.ДопСогласование Цикл
				Если НЕ ТекСтрока.Пройден Тогда
					ТекСтрока.Пройден = 1;
					ТекСтрока.Комментарии =  "Отменил(а) бюджет. " + Строка(Комментарий);
					Комментарий = "Отменил(а) бюджет. " +  Комментарий;
					НаДоработке = 1;
					//ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
					Прервать;
				КонецЕсли;			
			КонецЦикла; 		
		КонецЕсли;
	КонецЕсли;
		
	
	БП.Записать();
	БПСервер.ВыполнитьЗадачу(Объект.Ссылка,0, ?(ПроверкаУспешно, "Да.", "Нет."), Комментарий);
	
	Если НаДоработке Тогда
		//Заявка = Объект.Заявка.ПолучитьОбъект();
		//ИменаСтроки = Новый Массив;
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатратСтарый Тогда
		//	ИменаСтроки.Добавить("ОбъемПроизводства");
		//	ИменаСтроки.Добавить("БюджетСебестоимости");
		//	ИменаСтроки.Добавить("ЗатратыНаПРостой2");
		//	ИменаСтроки.Добавить("Затраты");
		//	ИменаСтроки.Добавить("ПР");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗакупок Тогда
		//	ИменаСтроки.Добавить("ДвижениеСырья");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетИнвестиций Тогда
		//	ИменаСтроки.Добавить("Инвестиции");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПродаж Тогда
		//	ИменаСтроки.Добавить("БюджетПродаж");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда
		//	ИменаСтроки.Добавить("ЗатратыКП");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводства Тогда
		//	ИменаСтроки.Добавить("ОбъемПроизводства");
		//КонецЕсли;
		//
		//Если БП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат Тогда
		//	ИменаСтроки.Добавить("БюджетСебестоимости");
		//	ИменаСтроки.Добавить("ЗатратыНаПРостой2");
		//	ИменаСтроки.Добавить("Затраты");
		//	ИменаСтроки.Добавить("ПР");
		//КонецЕсли;
		//
		//
		//Для каждого ТекИмя Из ИменаСтроки Цикл
		//	ВыбранныеСтроки = Заявка.ДоступностьТЧ.НайтиСтроки(Новый Структура("ИмяТЧ", ТекИмя));
		//	Для каждого ТекСтрока Из ВыбранныеСтроки Цикл
		//		ТекСтрока.ДоступностьОграничена = Ложь;					
		//	КонецЦикла; 
		//КонецЦикла; 
		//
		//Заявка.Записать();
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаСогласована(Команда)
	
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
	    Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("утвердить бюджет") Тогда
		Возврат;
	КонецЕсли;
	//Если Записать() Тогда
		Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
			ВыполненоСервер(1, 1);
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			Закрыть();
			БюджетныйНаКлиенте.ПоместитьОтчетДляСогласователейВоВременноеХранилище(Объект.БизнесПроцесс);
		КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	ТЗ = БП.ДопСогласование.Выгрузить();
	ДопСогласование.Загрузить(ТЗ);
	
	
	//ТочкаМаршрута = "Действие2";
	//Должность = ТекущаяДолжность;
	//Результат = Параметры.Свойство("Должность", Должность);
	
	Если НЕ БПСервер.ТекПользовательИсполнительЗадачи(Объект.Ссылка) Тогда
		Элементы.ЗаявкаСогласована.Видимость = 0;
		Элементы.НаДоработку.Видимость = 0;
	Иначе
		Элементы.ОтменаЗаявки.Видимость = 0;
	КонецЕсли;
	//Результат = Параметры.Свойство("ТочкаМаршрута", ТочкаМаршрута);
	Объект.Комментарии = Объект.БизнесПроцесс.ПолучитьОбъект().Комментарии;
КонецПроцедуры


&НаКлиенте
Процедура НаДоработку(Команда)
	
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
	    Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("отправить на доработку бюджет") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Комментарий) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(Объект,  "Не указана причина возврата на доработку",,, "Комментарий", Истина);
		Возврат;
	КонецЕсли;
	
	//Если Записать() Тогда
		Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
			ВыполненоСервер(0, 1);
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			ОповеститьНачальникаБюджетнойСлужбыОбОтмене(" отправлен на доработку");
			Закрыть();
		КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОтменаЗаявки(Команда)
	
	Если БюджетныйНаКлиенте.ЗадачаВыполнена(Объект) Тогда
	    Возврат;	
	КонецЕсли;
	
	Если НЕ БюджетныйНаКлиенте.СогласоватьБизнесПроцесс("отменить утверждение по данному бюджету") Тогда
		Возврат;
	КонецЕсли;
	//Если Записать() Тогда
		Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
			ВыполненоСервер(0, 0);
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			// оповещаем начальника бо ою отмете
			ОповеститьНачальникаБюджетнойСлужбыОбОтмене(" отменен");
			Закрыть();
		КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДопСогласованиеПередНачаломИзменения(Элемент, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	Если ТекСтрока.Пройден ИЛИ НЕ ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя() И НЕ ПустаяСтрока(ТекСтрока.СубъектСогласования) Тогда
		Предупреждение("Невозможно редактирование строки.");		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередУдалением(Элемент, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	Если ТекСтрока.Согласовано Тогда
		Предупреждение("Невозможно удалить строку, т.к. субъект " + Строка(ТекСтрока.СубъектСогласования) + " уже утвердил бюджет.");
		Отказ = Истина;
	ИначеЕсли НЕ ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя() Тогда
		//Если ПустаяСтрока(ТекСтрока.Автор) Тогда
		//	Предупреждение("Невозможно удалить строку, т.к. тип СЗ требует согласование с указанным рецензентом.");		
		//Иначе
		//	Предупреждение("Невозможно удалить строку, т.к. ее добавил пользователь " + ТекСтрока.Автор  + ".");		
		//КонецЕсли;		
		//Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя(); 
КонецПроцедуры

&НаСервере
Функция Финансист()
	//Если ПараметрыСеанса.ТекущийПользователь.Должность = Справочники.Д_Должности.Финансист Тогда
	//	Возврат Истина;
	//Иначе
		Возврат Ложь;	
	//КонецЕсли; 
КонецФункции // ()


&НаКлиенте
Процедура ЗаявкаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТипБюджета = БюджетныйНаСервере.ВернутьРеквизит(Объект.БизнесПроцесс, "ТипБюджета");
	Печать(ТабДок, Объект.БизнесПроцесс, ТипБюджета);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Истина;
	ТабДок.ОтображатьГруппировки = Истина;
	ТабДок.АвтоМасштаб = Истина;
	ФормаПечати = ПолучитьФорму("Документ.Д_Бюджет.Форма.ФормаПечатиЗатрат");
	ФормаПечати.ТабДок = ТабДок;
	ФормаПечати.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура Печать(ТабДок, ПараметрКоманды, ТипБюджета)
	Документы.Д_Бюджет.Печать(ТабДок, ПараметрКоманды, ТипБюджета);//ПараметрКоманды);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекФайл = БюджетныйНаСервере.ВернутьРеквизит(Объект.Заявка, "Файл");
	Если НЕ ПустаяСтрока(ТекФайл) Тогда
		Элементы.ОткрытьФайл.Видимость = Истина;	
	КонецЕсли;
	// временно 240114
	//ОбщегоНазначенияКлиентСервер.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	ЭтаФорма.ЗаблокироватьДанныеФормыДляРедактирования();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ОткрытьФорму("Справочник.Файлы.ФормаОбъекта", Новый Структура("Ключ", БюджетныйНаСервере.ВернутьРеквизит(Объект.Заявка, "Файл"))); 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьНачальникаБюджетнойСлужбыОбОтмене(ТекстДействия)
	
	НачБО = ""; //нужно исправить!!!
	БПСервер.СоздатьОповещение(НачБО, Строка(Объект.Заявка) + ТекстДействия + " пользователем " + Строка(Объект.Исполнитель) + ". Причина: " + Комментарий, Строка(Объект.Заявка) + ТекстДействия + " пользователем " + Строка(Объект.Исполнитель), Объект.Гиперссылка,, ПредопределенноеЗначение("Справочник.Пользователи.Система"), Объект.Заявка);
	
КонецПроцедуры