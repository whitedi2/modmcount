
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ТипЗнч(Объект.Заявка) = Тип("ДокументСсылка.Д_БюджетПрочихПроектов") Тогда
		Объект.ТипБюджета = ПредопределенноеЗначение("Перечисление.Д_ТипыБюджетов.БюджетТекущихЗатрат");
	КонецЕсли;
	
	
	Если НЕ Объект.ДопСогласование.Количество() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран маршрут!";
		Сообщение.Поле = "Объект.ДопСогласование";
		Сообщение.Сообщить(); 
		Отказ = Истина;	
		Возврат;
	КонецЕсли;
	
	Если НЕ ПоискБП(Объект.Заявка, Объект.ТипБюджета) = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Согласование данного типа бюджета уже запущено!";
		Сообщение.Поле = "Объект.ТипБюджета";
		Сообщение.Сообщить(); 
		Отказ = Истина;	
		Возврат;
	КонецЕсли;
	
	
	Если НЕ Объект.Ссылка.Пустая() И Объект.Стартован И Модифицированность И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		Предупреждение("Запись без старта бизнес-процесса невозможна.");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДопСогласованиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ВыбранныйМаршрут = ОткрытьФормуМодально("Справочник.Д_МаршрутыЗаявки.ФормаВыбора");
	Если НЕ ВыбранныйМаршрут = Неопределено Тогда
		ДобавитьМаршрут(ВыбранныйМаршрут);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьМаршрут(ВыбранныйМаршрут)
	
	Для каждого ТекСтрока Из ВыбранныйМаршрут.МаршрутЗаявки Цикл
		НоваяСтрока = Объект.ДопСогласование.Добавить();	
		НоваяСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя();;
		Если ТипЗнч(ТекСтрока.СубъектСогласования) = Тип("СправочникСсылка.Пользователи") Тогда
			НоваяСтрока.СубъектСогласования = ТекСтрока.СубъектСогласования;
		Иначе
			//Если ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Директор ИЛИ ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Дивизионер Тогда
			//	Если ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Директор Тогда
			//		Должность = "Директор";
			//	Иначе
			//		Должность = "Дивизионер";				
			//	КонецЕсли;
			//	НоваяСтрока.СубъектСогласования = Объект.Предприятие[Должность];
			//	Если ПустаяСтрока(НоваяСтрока.СубъектСогласования) Тогда
			//		Объект.ДопСогласование.Удалить(НоваяСтрока);					
			//	КонецЕсли;
			//КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеБП()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УтверждениеБюджета.Ссылка
	|ИЗ
	|	Справочник.УтверждениеБюджета КАК УтверждениеБюджета
	|ГДЕ
	|	УтверждениеБюджета.Заявка = &Заявка
	|	И УтверждениеБюджета.ТипБюджета = &ТипБюджета";
	
	Запрос.УстановитьПараметр("Заявка", Объект.Заявка);
	Запрос.УстановитьПараметр("Заявка", Объект.ТипБюджета);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() Тогда
		Сообщить("По данному основанию уже есть запущеный бизнес-процесс. Старт невозможен.");
	КонецЕсли;
	Возврат Выборка.Количество();
КонецФункции // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, Объект.Стартован, Истина);
	ЗаполнитьТипыБюджетов();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ТипБюджета = ПолучитьТипБюджета(Объект.ТипБюджета);
	//Если ВладелецФормы = Неопределено Тогда
	//	Если ТипБюджета = "БюджетЗатрат" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("БюджетСебестоимости");
	//		ИменаСтроки.Добавить("ЗатратыНаПРостой2");
	//		ИменаСтроки.Добавить("ПР");
	//		ИменаСтроки.Добавить("Затраты");
	//	ИначеЕсли ТипБюджета = "БюджетЗакупок" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("ДвижениеСырья");
	//	ИначеЕсли ТипБюджета = "БюджетИнвестиций" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("Инвестиции");
	//	ИначеЕсли ТипБюджета = "БюджетПродаж" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("БюджетПродаж");
	//	ИначеЕсли ТипБюджета = "КорректировкиБюджета" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("ЗатратыКП");
	//	ИначеЕсли ТипБюджета = "БюджетПроизводства" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("ОбъемПроизводства");
	//	ИначеЕсли ТипБюджета = "БюджетЗатратСтарый" Тогда
	//		ИменаСтроки = Новый Массив;
	//		ИменаСтроки.Добавить("БюджетСебестоимости");
	//		ИменаСтроки.Добавить("ЗатратыНаПРостой2");
	//		ИменаСтроки.Добавить("ПР");
	//		ИменаСтроки.Добавить("Затраты");
	//		ИменаСтроки.Добавить("ОбъемПроизводства");
	//	КонецЕсли;
	//	
	//	ЗаблокироватьТЧЗаявки(Объект.Заявка, ИменаСтроки);
	//Иначе
	
		Оповестить("Блокировка", Новый Структура("ТипБюджета, Ссылка", ТипБюджета, Объект.Заявка), ВладелецФормы);  
		Оповестить("ОбновитьСписокЗадач");
				
		БюджетныйНаКлиенте.ПоместитьОтчетДляСогласователейВоВременноеХранилище(Объект.Ссылка);
		
		ЗаписатьСсылкиВОперативныхБюджетах(Объект.Ссылка, Объект.Заявка);
	//КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьСсылкиВОперативныхБюджетах(Утверждение, Бюджет)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_БюджетПрочихПроектовЗатраты.Бюджет,
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка,
	|	Д_БюджетПрочихПроектовЗатраты.НомерСтроки
	|ИЗ
	|	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
	|ГДЕ
	|	Д_БюджетПрочихПроектовЗатраты.Бюджет = &Бюджет
	|	И Д_БюджетПрочихПроектовЗатраты.БизнесПроцесс = ЗНАЧЕНИЕ(Справочник.УтверждениеБюджета.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	ДокументыОперБюджетов = Результат.Выгрузить();
	ДокументыОперБюджетов.Свернуть("Ссылка");
	ДокументыОперБюджетов.ВыгрузитьКолонку("Ссылка");
	
	Для каждого ТекДокумент Из ДокументыОперБюджетов Цикл
		ТекДокументОбъект = ТекДокумент.Ссылка.ПолучитьОбъект();
		ОтобранныеСтроки = Выборка.НайтиСтроки(Новый Структура("Ссылка", ТекДокумент.Ссылка));
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			ТекДокументОбъект.Затраты[ТекСтрока.НомерСтроки - 1].БизнесПроцесс = Утверждение;		
		КонецЦикла; 
		ТекДокументОбъект.Записать();	
	КонецЦикла; 
	
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаблокироватьТЧЗаявки(Заявка, ИменаСтроки)
	ЗаявкаОб = Заявка.ПолучитьОбъект();
	Для каждого ТекСтрока Из ИменаСтроки Цикл
		
		НайденнаяСтрока = ЗаявкаОб.ДоступностьТЧ.НайтиСтроки(Новый Структура("ИмяТЧ", ТекСтрока));
		Если НайденнаяСтрока.Количество()  Тогда
			НайденнаяСтрока[0].ДоступностьОграничена = Истина;
		Иначе
			НоваяСтрока = ЗаявкаОб.ДоступностьТЧ.Добавить();
			НоваяСтрока.ИмяТЧ = ТекСтрока;
			НоваяСтрока.ДоступностьОграничена = Истина;	
		КонецЕсли;
		
	КонецЦикла; 
	ЗаявкаОб.Записать();			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипБюджета(ТипПеречисление)
	
	Возврат ТипПеречисление.Метаданные().ЗначенияПеречисления[Перечисления.Д_ТипыБюджетов.Индекс(ТипПеречисление)].Имя;
	
	
КонецФункции // ()


&НаСервере
Процедура ЗаписатьОснование(ТекЗаявка)
КонецПроцедуры


&НаКлиенте
Процедура ЗаявкаНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПодборПользователя(Команда)
	ОткрытьФормумодально("Справочник.Пользователи.ФормаВыбора", Новый Структура("РежимВыбора, РасширенныйПодбор, ЗакрыватьПриВыборе", Истина, Истина, Ложь),Элементы.ДопСогласование); 
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Элементы.ТипБюджета.СписокВыбора.НайтиПоЗначению(Объект.ТипБюджета) = Неопределено Тогда
		Элементы.ТипБюджета.СписокВыбора.Добавить(Объект.ТипБюджета);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПоискБП(Ссылка, ТипБюджета)
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УтверждениеБюджета.Ссылка
	               |ИЗ
	               |	Справочник.УтверждениеБюджета КАК УтверждениеБюджета
	               |ГДЕ
	               |	УтверждениеБюджета.Заявка = &Заявка
	               |	И УтверждениеБюджета.ТипБюджета = &ТипБюджета
	               |	И УтверждениеБюджета.ПометкаУдаления = ЛОЖЬ
	               |	И УтверждениеБюджета.Ссылка <> &ТекБП";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	Запрос.УстановитьПараметр("ТекБП", Объект.Ссылка);
	Если ТипЗнч(ТипБюджета) = Тип("Строка") Тогда
		Запрос.УстановитьПараметр("ТипБюджета", Перечисления.Д_ТипыБюджетов[ТипБюджета]);
	Иначе	
		Запрос.УстановитьПараметр("ТипБюджета", ТипБюджета);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьТипыБюджетов()
	
	Если ТипЗнч(Объект.Заявка) = Тип("ДокументСсылка.Д_Бюджет") Тогда
		Если Месяц(Объект.Заявка.Сценарий.АктуальнаяДата) = Месяц(Объект.Заявка.Сценарий.ДатаКонца) Тогда
			ЭтоКорректировочныйБюджет = Истина;
		Иначе
			ЭтоКорректировочныйБюджет = Ложь;
		КонецЕсли;
		
		Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетПроизводства);
		Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетЗакупок);
		Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетПродаж);
		
		Если ЭтоКорректировочныйБюджет Тогда
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.КорректировкиБюджета);
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций);
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов);
		Иначе
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетТекущихЗатрат);
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетИнвестиций);
			Элементы.ТипБюджета.СписокВыбора.Добавить(Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ТипБюджета) И Элементы.ТипБюджета.СписокВыбора.НайтиПоЗначению(Объект.ТипБюджета) = Неопределено Тогда
			Элементы.ТипБюджета.СписокВыбора.Добавить(Объект.ТипБюджета);
		КонецЕсли;
	Иначе
		Элементы.ТипБюджета.Видимость = Ложь;	
	КонецЕсли;
	
	
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ТипБюджетаПриИзменении(Элемент)
	
	Ответ = Вопрос("Заполнить маршрут из автомаршрута?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ДопСогласование.Очистить();
		ТипБюджетаПриИзмененииНаСервере();
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ТипБюджетаПриИзмененииНаСервере()

	БПСервер.ДобавитьРецензентовВМаршрут(Объект, "ДопСогласование", Объект.Заявка, Объект.Предприятие, , Объект.ТипБюджета);
	
КонецПроцедуры

&НаКлиенте
Процедура ДопСогласованиеСубъектСогласованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", Новый Структура("ПредприятиеДляКонтроля", Объект.Предприятие), Элемент);
	
КонецПроцедуры



