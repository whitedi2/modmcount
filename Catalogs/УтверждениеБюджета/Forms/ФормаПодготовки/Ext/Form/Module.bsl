&НаСервере
Процедура ВыполненоСервер()
	
	НачатьТранзакцию();
	
	//добавляем комментарии в историю переписки
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	Объект.Комментарии = Строка(ТекущаяДата()) + ": " + ПараметрыСеанса.ТекущийПользователь + " отправил(а) заявку на отгрузку:
		|" + Комментарий;
	БП.Комментарии = БП.Комментарии + ?(ПустаяСтрока(БП.Комментарии), "", "
		|") + Объект.Комментарии;
	
	
	//делаем несогласованных непройденными при повторном согласовании	
	Для каждого ТекСтрока Из ДопСогласование Цикл
		Если ТекСтрока.Пройден И НЕ текСтрока.Согласовано Тогда
			ТекСтрока.Пройден = 0;		
		КонецЕсли;	
	КонецЦикла; 
	ТЗ = ДопСогласование.Выгрузить();
	БП.ДопСогласование.Загрузить(ТЗ);
	БП.ОснованиеЗаблокирован = Истина;
	БП.Записать();
	
	БПСервер.ВыполнитьЗадачу(Объект.Ссылка, 0, "", Комментарий);

	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьИЗакрыть(Команда)
	Если НЕ ДопСогласование.Количество() Тогда
		Предупреждение("Не выбран маршрут заявки!");
		Элементы.Группа2.ТекущаяСтраница = Элементы.Группа4;
	Иначе
		//Если Записать() Тогда
			Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
				ВыполненоСервер();
				ОповеститьОбИзменении(Объект.Ссылка);
				Оповестить("ОбновитьСписокЗадач");
				Закрыть();
				БюджетныйНаКлиенте.ПоместитьОтчетДляСогласователейВоВременноеХранилище(Объект.БизнесПроцесс);
			КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	ТЗ = БП.ДопСогласование.Выгрузить();
	ДопСогласование.Загрузить(ТЗ);
	
	Для каждого ТекСтрока Из ДопСогласование Цикл
		ТекСтрока.ТипАдресации = ТипЗнч(ТекСтрока.СубъектСогласования);	
	КонецЦикла;
	
	Если НЕ БПСервер.ТекПользовательИсполнительЗадачи(Объект.Ссылка) Тогда
		Элементы.ФормаОтправитьИЗакрыть.Видимость = 0;
	КонецЕсли;
	
	
	Объект.Комментарии = БП.Комментарии;
	//МаршрутЗаявки = БП.МаршрутЗаявки;
	
	СписокРолей.Добавить("Учетчик");
	СписокРолей.Добавить("КомДиректор");
	СписокРолей.Добавить("ГлавныйКомДиректор");
	СписокРолей.Добавить("ДопСогласование");
	
	Элементы.РазрешитьРедактирование.Видимость = Объект.БизнесПроцесс.ОснованиеЗаблокирован;	
	
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередУдалением(Элемент, Отказ)
		ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
		Если ТекСтрока.Согласовано Тогда
			Предупреждение("Невозможно удалить строку, т.к. субъект " + Строка(ТекСтрока.СубъектСогласования) + " уже согласовал заявку.");
			Отказ = Истина;
		ИначеЕсли НЕ ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя() Тогда
			//Если ПустаяСтрока(ТекСтрока.Автор) Тогда
			//	Предупреждение("Невозможно удалить строку, т.к. тип СЗ требует согласование с указанным рецензентом.");		
			//Иначе
			//	Предупреждение("Невозможно удалить строку, т.к. ее добавил пользователь " + ТекСтрока.Автор  + ".");		
			//КонецЕсли;		
			//Отказ = Истина;
		КонецЕсли;
КонецПроцедуры

 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Элементы.РазрешитьРедактирование.Видимость = БюджетныйНаСервере.ВернутьРеквизит(Объект.Заявка, "Доступность");
	//Тексты = "Внимание! Данный бизнес-процесс не предусматривает автоматическую отправку на проверку ОФК.";
	Если СЗНаДоработке() Тогда
		Элементы.ЗаявкаОплачена.Доступность = Истина;
		//Элементы.ЗаявкаОплачена.Видимость = Истина;
	КонецЕсли;
	сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	ЭтаФорма.ЗаблокироватьДанныеФормыДляРедактирования();		
	
КонецПроцедуры

&НаСервере
Функция СЗНаДоработке()
	Возврат Объект.ТочкаМаршрута = Перечисления.УтверждениеБюджетаТочкиМаршрута.Действие1;	
КонецФункции // ()

&НаСервере
Процедура ОтменитьСогласования()
	Для каждого ТекСтрока Из ДопСогласование Цикл
		ТекСтрока.Пройден = 0;	
		ТекСтрока.Согласовано = 0;
	КонецЦикла; 
КонецПроцедуры

Процедура ЗаписатьИзм()
	БП = Объект.БизнесПроцесс.ПолучитьОбъект();
	ТЗ = ДопСогласование.Выгрузить();
	БП.ДопСогласование.Загрузить(ТЗ);
	БП.ОснованиеЗаблокирован = Ложь;
	БП.Записать();
КонецПроцедуры
 
&НаКлиенте
Процедура РазрешитьРедактирование(Команда)
	Если Вопрос("Разрешение редактирования заявки на отгрузку автоматически отменяет все согласования по ней.
		|Вы уверены, что хотите редактировать заявку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		ОтменитьСогласования();
		ЗаписатьИзм();
		ПриСозданииНаСервере(Ложь, Истина);
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ДопСогласованиеПередНачаломИзменения(Элемент, Отказ)
	//ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	//Если ТекСтрока.Пройден ИЛИ НЕ ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя() И НЕ ПустаяСтрока(ТекСтрока.СубъектСогласования) Тогда
	//	Предупреждение("Невозможно редактирование строки.");		
	//	Отказ = Истина;
	//КонецЕсли;
КонецПроцедуры

 

&НаКлиенте
Процедура ДопСогласованиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтрока = Элементы.ДопСогласование.ТекущиеДанные;
	ТекСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя();
КонецПроцедуры

&НаСервере
Процедура ДобавитьМаршрут(ВыбранныйМаршрут)
	
	Для каждого ТекСтрока Из ВыбранныйМаршрут.МаршрутЗаявки Цикл
		НоваяСтрока = ДопСогласование.Добавить();	
	    НоваяСтрока.Автор = БюджетныйНаСервере.ПолучитьПользователя();;
		Если ТипЗнч(ТекСтрока.СубъектСогласования) = Тип("СправочникСсылка.Пользователи") Тогда
			НоваяСтрока.СубъектСогласования = ТекСтрока.СубъектСогласования;
		Иначе
			Если ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Директор ИЛИ ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Дивизионер Тогда
				Если ТекСтрока.СубъектСогласования = Справочники.Д_Должности.Директор Тогда
					Должность = "Директор";
				Иначе
					Должность = "Дивизионер";				
				КонецЕсли;
				НоваяСтрока.СубъектСогласования = Объект.Предприятие[Должность];
				Если ПустаяСтрока(НоваяСтрока.СубъектСогласования) Тогда
					ДопСогласование.Удалить(НоваяСтрока);					
				КонецЕсли;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
  


&НаКлиенте
Процедура Подбор(Команда)
	ВыбранныйМаршрут = ОткрытьФормуМодально("Справочник.Д_МаршрутыЗаявки.ФормаВыбора");
	Если НЕ ВыбранныйМаршрут = Неопределено Тогда
		ДобавитьМаршрут(ВыбранныйМаршрут);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаСогласована(Команда)
	
	Объект.Комментарии = "Не утверждена";
	Объект.Выполнена = Истина;
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		//ВыполненоСервер(Истина, Истина, Объект.Исполнитель);
		БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ОбновитьСписокЗадач");
		Закрыть();
	КонецЕсли;
	
	БПСервер.ЗаписатьДействиеПользователяВЛог(Объект.Ссылка, "ОзнакомитьсяИЗавершитьБП");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруРеквизитовФормы()
	Возврат БПСервер.ПолучитьСтруктуруРеквизитовФормы(ЭтаФорма);
КонецФункции

&НаКлиенте
Процедура ДопСогласованиеРольНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элементы.ДопСогласование.ТекущиеДанные.Роль = ВыбратьИзСписка(СписокРолей, Элемент);
КонецПроцедуры

