
&НаСервере
Функция ПараметрыРасшифровки(Расшифровка)
	
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	ДР = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	Эл = ДР.Элементы.Получить(Расшифровка);
	ИмяПоля = Эл.ПолучитьПоля()[0].Поле;   
	Строка = Эл.ПолучитьРодителей()[0];
	Статья = Строка.ПолучитьПоля()[0].Значение;
	ВидДеятельности = Строка.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ТипЗнч(ВидДеятельности) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств")  Тогда
		ВидДеятельности = ""
	КонецЕсли;
	
	ПериодОтчета = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	ДатаНачалаОтчета = ПериодОтчета.ДатаНачала;
	ДатаКонцаОтчета = ПериодОтчета.ДатаОкончания;
	
	ДенежныеСчета = Новый Массив;
	Предприятие = Новый Массив;
		
	Если ИмяПоля = "План" ИЛИ ИмяПоля = "ПланМес"  ИЛИ ИмяПоля = "ПланКорр" ИЛИ ИмяПоля = "Факт" ИЛИ ИмяПоля = "ИтогПланСтКорр" ИЛИ ИмяПоля = "ИтогПланСтМес" ИЛИ ИмяПоля = "ИтогПланСт" ИЛИ ИмяПоля = "ИтогФактСт"   Тогда
		Попытка
			Столбец = Эл.ПолучитьРодителей()[1];
			Подразделение_Предприятие = Столбец.ПолучитьПоля()[0].Значение;
			//подразделение
			Если ТипЗнч(Подразделение_Предприятие.ссылка) = Тип("СправочникСсылка.СтруктураПредприятия")  Тогда
				Подразделение = Подразделение_Предприятие;
				Предприятие.Добавить(Подразделение.Владелец);
			КонецЕсли; 
			//предприятие
			Если ТипЗнч(Подразделение_Предприятие.ссылка) = Тип("СправочникСсылка.Предприятия")  Тогда
				Предприятие.Добавить(Подразделение_Предприятие);
				Подразделение = Ложь;
			КонецЕсли; 
		Исключение
			// итоги
			Подразделение_Предприятие = Неопределено;
			
			// 28.01.13
			Предприятие = БюджетныйНаСервере.ПолучитьПредприятия();
			КолЭлементов = Предприятие.Количество();
			
			Для ОбрИнд = 1 По КолЭлементов Цикл
				Если ЗначениеЗаполнено(Предприятие[КолЭлементов - ОбрИнд]) = Ложь Тогда 
					Предприятие.Удалить(Предприятие.Найти(Предприятие[КолЭлементов - ОбрИнд]))
				КонецЕсли;					
			КонецЦикла;
			
			Предприятие.Добавить(Справочники.Предприятия.ПустаяСсылка());
			
			Подразделение = Ложь;
			
		КонецПопытки;	
		
		// 28.01.13 добавляем отбор по предприятию в структуру расшифровки
		ОтборПредприятий = Неопределено;
		Если ОбъектОтчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование Тогда
			ОтборПредприятий = ОбъектОтчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1];
		КонецЕсли;
		
 		Если ИмяПоля = "Факт" ИЛИ ИмяПоля = "ИтогФактСт"  Тогда
			
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5002());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5102());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ЛицевыеСчета);
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ЛицевыеСчетаВал);
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ДепозитныеСчета);
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный._51_10);
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5501());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ВиртуальныйРасчетныйСчет);
			
			Если ТипЗнч(Предприятие.Найти(Константы.сабПредприятиеКазна.Получить())) = Тип("Число") Тогда
				
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.Касса);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.КассаВалюта);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.Кассы);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.КорреспондентскиеСчета);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.КорреспондентскийСчет);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.КорреспондентскийСчетВалюта);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.ДепозитныйСчет);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.ДепозитныйСчетВалюта);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.Векселя);
                ДенежныеСчета.Добавить(ПланыСчетов.Казна.КассаВекселя);
				ДенежныеСчета.Добавить(ПланыСчетов.Казна.КассаВекселяВалюта);
				
			КонецЕсли;
			
			Сценарий1 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
			
		Иначе
			
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
			ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());	
			
			Сценарий1 = Новый Массив;
			
			Если ИмяПоля = "План" ИЛИ ИмяПоля = "ИтогПланСт" Тогда
				
				АктуальныеСцКВ = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета,, "Кв");
				
				Для Каждого Элемент Из АктуальныеСцКВ Цикл
					Сценарий1.Добавить(Элемент);
				КонецЦикла;
				
			КонецЕсли; 
			
			Если ИмяПоля = "ПланМес" ИЛИ ИмяПоля = "ИтогПланСтМес" Тогда
				
				АктуальныеСцМес = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, ДатаКонцаОтчета, "Мес");
				
				Для Каждого Элемент Из АктуальныеСцМес Цикл
					Сценарий1.Добавить(Элемент);
				КонецЦикла;
				
			КонецЕсли; 
			
			Если ИмяПоля = "ПланКорр" ИЛИ ИмяПоля = "ИтогПланСтКорр" Тогда
								
				АктуальныеСцМес = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, ДатаКонцаОтчета, "Мес");
				
				Для Каждого Элемент Из АктуальныеСцМес Цикл
					Сценарий1.Добавить(Элемент);
				КонецЦикла;
				
				Сценарий1.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
				
			КонецЕсли;    
			
		КонецЕсли; 
		
		
	КонецЕсли;
	
	СтруктураРасшифровки = Новый Структура;
	
	СтруктураРасшифровки.Вставить("Отчет", "Отчеты.Д_Расшифровка");
	СтруктураРасшифровки.Вставить("Счет", ДенежныеСчета);
	СтруктураРасшифровки.Вставить("Сценарий1", Сценарий1);
	
	// 07.02.13
	СтруктураРасшифровки.Вставить("Субконто1", Статья);
	СтруктураРасшифровки.Вставить("Субконто2", Ложь);
	
	Если ТипЗнч(Предприятие.Найти(Константы.сабПредприятиеКазна.Получить())) = Тип("Число") Тогда
		СтруктураРасшифровки.Вставить("Субконто2", Статья);
	КонецЕсли;
	
	СтруктураРасшифровки.Вставить("Дата1", 	ДатаНачалаОтчета);
	СтруктураРасшифровки.Вставить("Дата2", ДатаКонцаОтчета);
	СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
	СтруктураРасшифровки.Вставить("Предприятие", Предприятие);
	СтруктураРасшифровки.Вставить("Подразделение", Подразделение);
	
	//28.01.13
	СтруктураРасшифровки.Вставить("ОтборПредприятий", ОтборПредприятий);
	
	Возврат СтруктураРасшифровки;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПередачи = ПараметрыРасшифровки(Расшифровка);
	
	МассивСчетов = Новый Массив;
	Если НЕ ТипЗнч(ПараметрыПередачи.Счет) = Тип("Массив") Тогда
		МассивСчетов.Добавить(ПараметрыПередачи.Счет);
	Иначе
		МассивСчетов = ПараметрыПередачи.Счет;	
	КонецЕсли;
	
	СписокСценариев = Новый СписокЗначений;
	Если НЕ ТипЗнч(ПараметрыПередачи.Сценарий1) = Тип("Массив") Тогда
		СписокСценариев.Добавить(ПараметрыПередачи.Сценарий1);
	Иначе
		СписокСценариев.ЗагрузитьЗначения(ПараметрыПередачи.Сценарий1);
	КонецЕсли;
	
	МассивСценариев = СписокСценариев.ВыгрузитьЗначения();
	
	Если ТипЗнч(ПараметрыПередачи.Предприятие) = Тип("Массив") Тогда
		МассивПредприятий = ПараметрыПередачи.Предприятие;
	Иначе
		МассивПредприятий = Новый Массив;
		МассивПредприятий.Добавить(ПараметрыПередачи.Предприятие);
	КонецЕсли;
		
	Если НЕ ПараметрыПередачи.Свойство("Субконто2") Тогда
		ПараметрыПередачи.Вставить("Субконто2", Неопределено);
	КонецЕсли; 
	
	////
	Кол = МассивПредприятий.Количество();
	
	//Для ОбрИнд = 1 По Кол Цикл
	//	Если ЗначениеЗаполнено(МассивПредприятий[Кол - ОбрИнд]) = Ложь Тогда
	//		МассивПредприятий.Удалить(МассивПредприятий.Найти(МассивПредприятий[Кол - ОбрИнд]));
	//	КонецЕсли;
	//КонецЦикла;
	
	ФормаПечати = ПолучитьФорму("Отчет.Д_Расшифровка_СКД.Форма");
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение = Новый СписокЗначений;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ЗагрузитьЗначения(МассивСценариев);
	
	// 24.01.13 передаем массив отобранных предприятий в расшифровку
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение = Новый СписокЗначений;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение.ЗагрузитьЗначения(МассивПредприятий);	

	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Значение = ПараметрыПередачи.Подразделение;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Значение = Новый СписокЗначений;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Значение.ЗагрузитьЗначения(МассивСчетов);
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Значение.ДатаНачала = ПараметрыПередачи.Дата1;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Значение.ДатаОкончания = ПараметрыПередачи.Дата2;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование = Истина;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Значение = ПараметрыПередачи.Субконто1;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[6].Использование = Истина;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[6].Значение = ПараметрыПередачи.Субконто2;
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[7].Использование = Истина;	
	ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[7].Значение = Истина;
	
	// 28.01.13
	Если ПараметрыПередачи.ОтборПредприятий <> Неопределено Тогда 
		ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].ПравоеЗначение = ПараметрыПередачи.ОтборПредприятий.ПравоеЗначение;
		ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].ВидСравнения =  ПараметрыПередачи.ОтборПредприятий.ВидСравнения;
		ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].Использование = ПараметрыПередачи.ОтборПредприятий.Использование;
	Иначе
		ФормаПечати.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].Использование = Ложь;
	КонецЕсли;	
		
	ФормаПечати.СкомпоноватьРезультат();
	ФормаПечати.Открыть();
	
	//БюджетныйНаКлиенте.РасшифроватьСумму(Элемент, ПараметрыПередачи, Истина);	
	
	// закомментировано 08.02.2012
	
	//Если ПараметрыПередачи.ПланФакт = "Факт" ИЛИ ПараметрыПередачи.ПланФакт = "ИтогФактСт" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаФакт.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "ПланМес"  ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСтМес" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПланМес.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "ПланКорр"   ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСтКорр" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПланКорр.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "План"  ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСт" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПлан.Форма",,,Истина);
	//КонецЕсли;
	//	
	//
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение = ДатаНачалаОтчета;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Использование = Истина;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение = ДатаКонцаОтчета;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование = Истина;
	//Если   ПараметрыПередачи.Подразделение = "Итоги" Тогда
	//	Если Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование = Ложь  Тогда
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Ложь;
	//	Иначе
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ПравоеЗначение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ПравоеЗначение;
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ВидСравнения =  Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ВидСравнения;
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Истина;
	//	КонецЕсли;
	//Иначе
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ПравоеЗначение = ПараметрыПередачи.Подразделение;
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ВидСравнения =  ВидСравненияКомпоновкиДанных.Равно;
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Истина;
	//КонецЕсли;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Использование = Ложь;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].ПравоеЗначение = ПараметрыПередачи.Статья;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Использование = Истина;
	//Если  ПараметрыПередачи.ВидДеятельности = "" Тогда
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование = Ложь;
	//Иначе
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].ПравоеЗначение = ПараметрыПередачи.ВидДеятельности;
	// 	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование = Истина;
	//КонецЕсли;
	//Карточка.СкомпоноватьРезультат();
	//Карточка.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	ЭтаФорма.СкомпоноватьРезультат();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры
