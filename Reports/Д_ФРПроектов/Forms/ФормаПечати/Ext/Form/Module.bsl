
&НаСервере
Функция ОпределитьКвартал(НомерМесяца)
	Если НомерМесяца / 3 <= 1 Тогда
		Возврат 1;
	ИначеЕсли НомерМесяца / 3 > 1 И НомерМесяца / 3 <= 2 Тогда 
		Возврат 2;
	ИначеЕсли  НомерМесяца / 3 > 2 И НомерМесяца / 3 <= 3 Тогда
		Возврат 3;
	ИначеЕсли НомерМесяца / 3 > 3 И НомерМесяца / 3 <= 4 Тогда
		Возврат 4;	
	КонецЕсли; 
КонецФункции // ()

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Отчет.Предприятие.ЗаполнитьПометки(1);
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Отчет.Предприятие.ЗаполнитьПометки(0);
КонецПроцедуры

&НаСервере
Функция ПолучитьСценарий(НомерСценария)
	Если НомерСценария = 1 тогда
		возврат Константы.Д_СценарийПланаПервоначальный.Получить();
	иначе
		возврат Справочники.СценарииПланирования.Факт;
	конецесли;
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьТаблицуДеятельность(ВидОтчета, Отчет)
	
	
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(Отчет.Сценарий1 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(Отчет.Сценарий2 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(Отчет.Сценарий1 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	Регистр2 = ?(Отчет.Сценарий2 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	Для Кол = 1 По 300 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Попытка
	    ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_ФРПроектов");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_ФРПроектов;
	КонецПопытки;
	
	Если НЕ ПустаяСтрока(Отчет.Сценарий1) и  НЕ ПустаяСтрока(Отчет.Сценарий2) Тогда
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетДеятельности");
	иначе
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетДеятельности");
	КонецЕсли; 
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|СтолбецНачало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбца");
	
	Результат.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Интервал = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, 1, 
	?(Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, Месяц(Отчет.Период.ДатаНачала),?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(Отчет.Период.ДатаНачала)), Год(Отчет.Период.ДатаНачала)));
	
	КонецПериода = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, Месяц(Отчет.Период.ДатаОкончания),?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(Отчет.Период.ДатаОкончания)), Год(Отчет.Период.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	
	
	ПредприятияМассив = Новый Массив;
	Для каждого Т Из Отчет.Предприятие Цикл
		Если Т.Пометка Тогда
			ПредприятияМассив.Добавить(Т.Значение);
		КонецЕсли;
		
	КонецЦикла; 
	
	//Предпр = Т.Значение;
	ДатаНач = Отчет.Период.ДатаНачала;
	ДатаКон = Отчет.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	СчетчикНоменклатур = 0;
	КоэффициентОтступа = 0;
	
		//90.3
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
		               |	" + КлючПериод + "(ДанныеСценарий1.Период) КАК Период,
		               |	ДанныеСценарий1.Субконто2 КАК Статья,
		               |	ДанныеСценарий1.Субконто2.Родитель КАК Родитель1,
		               |	ВЫБОР
		               |		КОГДА ДанныеСценарий1.Предприятия.Родитель = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)
		               |			ТОГДА ДанныеСценарий1.Предприятия
		               |		ИНАЧЕ ДанныеСценарий1.Предприятия.Родитель
		               |	КОНЕЦ КАК Предприятие,
		               |	ДанныеСценарий1.Подразделение КАК Деятельность
		               |ПОМЕСТИТЬ Данные
		               |ИЗ
		               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			" + КлючПериод + ",
		               |			Счет = &Счет,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СценарийПлана = &Сценарий1,
		               |			,
		               |			) КАК ДанныеСценарий1
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СтатьиЗатрат.Ссылка КАК Статья,
		               |	СтатьиЗатрат.ЭтоГруппа,
		               |	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
		               |	ЕСТЬNULL(Данные.Период, 0) КАК Период,
		               |	Данные.Предприятие,
		               |	Данные.Деятельность КАК Деятельность
		               |ИЗ
		               |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
		               |		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
		               |				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	СтатьиЗатрат.Код";
	
	Запрос.УстановитьПараметр("Предприятия", ПредприятияМассив);
	Запрос.УстановитьПараметр("Сценарий1", Отчет.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", Отчет.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.РасходыПоРеал);
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.РасходыПоРеал);
	РезультатЗатраты = Запрос.Выполнить();
	
	//91 счет
	Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	" + КлючПериод + "(Прочие1.Период) КАК Период,
		               |	Прочие1.Субконто1 КАК Статья,
		               |	-ЕСТЬNULL(Прочие1.СуммаОборот, 0) КАК Сумма1,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Предприятия.Родитель = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)
		               |			ТОГДА Прочие1.Предприятия
		               |		ИНАЧЕ Прочие1.Предприятия.Родитель
		               |	КОНЕЦ КАК Предприятие,
		               |	Прочие1.Подразделение КАК Деятельность
		               |ИЗ
		               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			" + КлючПериод + ",
		               |			Счет = &СчетДт2,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СценарийПлана = &Сценарий1,
		               |			,
		               |			) КАК Прочие1
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Статья";
		
	
	Запрос.УстановитьПараметр("Предприятия", ПредприятияМассив);
	Запрос.УстановитьПараметр("Сценарий1", Отчет.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", Отчет.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("СчетДт2", ПланСчетов1.ДоходыИРасходы);
	Запрос.УстановитьПараметр("СчетДт3", ПланСчетов2.ДоходыИРасходы);
	РезультатПрочиеЗатраты = Запрос.Выполнить();
	
	//очищаем массив и присваиваем числовой тип
	ТекущиеЗатраты1 = Новый Массив(300);
	ПрочиеЗатраты1 = Новый Массив(300);
	УслугиУК = Новый Массив(300);
	Деятельность = Новый Массив;
	Для т = 0 По 299 Цикл
		ТекущиеЗатраты1[т] = 0;
		ПрочиеЗатраты1[т] = 0;
		УслугиУК[т] = 0;
	КонецЦикла;
	
	УслугиУКГруппа = Справочники.СтатьиЗатрат.УслугиУКГруппа;
	УслугиУКЭлем = Справочники.СтатьиЗатрат.УслугиУК;
	
	Деятельность.Добавить("Итого:");
	
	Для каждого Предприятие  Из ПредприятияМассив Цикл
		
		//опрос 90.3
		СтруктураПоиска = Новый Структура("Предприятие", Предприятие);
		Выборка = РезультатЗатраты.Выбрать();
		Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка("Ном") + строка("Объем производства");
			НоваяСтрока[3] = Выборка.Предприятие;
			НоваяСтрока[4] = "Объем производства " + Строка("Ном");
			
			ВидДеятельности = ?(ПустаяСтрока(Выборка.Деятельность), "Общий", Строка(Выборка.Деятельность));
			СчетчикМесяцев = Деятельность.Найти(ВидДеятельности);
			Если СчетчикМесяцев = Неопределено Тогда				
				Деятельность.Добавить(ВидДеятельности);
				СчетчикМесяцев = Деятельность.Количество();
			иначе
				СчетчикМесяцев = СчетчикМесяцев + 1;
			КонецЕсли;
			
			Если НЕ Выборка.Статья = УслугиУКГруппа И НЕ Выборка.Статья.ПринадлежитЭлементу(УслугиУКГруппа) Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 1 - Выборка.ЭтоГруппа;
				
				Если НЕ Выборка.ЭтоГруппа Тогда
					ТекущиеЗатраты1[СчетчикМесяцев] = ТекущиеЗатраты1[СчетчикМесяцев] + Выборка.Сумма1; 
					ТекущиеЗатраты1[1] = ТекущиеЗатраты1[1] + Выборка.Сумма1; 
				КонецЕсли;
				
				
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка(Выборка.Статья);
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = Выборка.Статья;
				НоваяСтрока[11] = Выборка.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2 + 9] = Выборка.Сумма1;
			Иначе
				Если Выборка.Статья = УслугиУКГруппа Тогда
					УслугиУК[СчетчикМесяцев] = УслугиУК[СчетчикМесяцев] + Выборка.Сумма1; 
					УслугиУК[1] = УслугиУК[1] + Выборка.Сумма1;

					
				
				КонецЕсли; 
			КонецЕсли;
			
			
		КонецЦикла;
		
		//итого по тек.деятельности
		
		Для СчетчикМесяцев = 1 По Деятельность.Количество() Цикл
			Если ТекущиеЗатраты1[СчетчикМесяцев] Тогда
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 0;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка("Прибыль по текущей деятельности");
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = "Прибыль по текущей деятельности";
				НоваяСтрока[СчетчикМесяцев * 2 + 9] = ТекущиеЗатраты1[СчетчикМесяцев];
			КонецЕсли;
			
		КонецЦикла;
		
		//итого по тек.деятельности с учетом хозрасчета
		
		Для СчетчикМесяцев = 1 По Деятельность.Количество() Цикл
			Если ТекущиеЗатраты1[СчетчикМесяцев] ИЛИ УслугиУК[СчетчикМесяцев] Тогда
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 1;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка(УслугиУКЭлем);
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = УслугиУКЭлем;
				НоваяСтрока[СчетчикМесяцев * 2 + 9] = УслугиУК[СчетчикМесяцев];
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 0;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка("Прибыль по основной деятельности");
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = "Прибыль по основной деятельности";
				НоваяСтрока[СчетчикМесяцев * 2 + 9] = ТекущиеЗатраты1[СчетчикМесяцев] + УслугиУК[СчетчикМесяцев];
			КонецЕсли;
			
		КонецЦикла;
		
		//опрос 91
		СтруктураПоиска = Новый Структура("Предприятие", Предприятие);
		Выборка = РезультатПрочиеЗатраты.Выбрать();
		Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
			
			ВидДеятельности = ?(ПустаяСтрока(Выборка.Деятельность), "Общий", Строка(Выборка.Деятельность));
			СчетчикМесяцев = Деятельность.Найти(ВидДеятельности);
			Если СчетчикМесяцев = Неопределено Тогда				
				Деятельность.Добавить(ВидДеятельности);
				СчетчикМесяцев = Деятельность.Количество();
			иначе
				СчетчикМесяцев = СчетчикМесяцев + 1;
			КонецЕсли;
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1;	
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Выборка.Предприятие) + Строка(Выборка.Статья);
			НоваяСтрока[3] = Выборка.Предприятие;
			НоваяСтрока[4] = Выборка.Статья;
			НоваяСтрока[11] = Выборка.Сумма1;
			НоваяСтрока[СчетчикМесяцев * 2 + 9] = Выборка.Сумма1;
			ПрочиеЗатраты1[СчетчикМесяцев] = ПрочиеЗатраты1[СчетчикМесяцев] + Выборка.Сумма1;
			ПрочиеЗатраты1[1] = ПрочиеЗатраты1[1] + Выборка.Сумма1;
			
		КонецЦикла;
		
		Для СчетчикМесяцев = 1 По Деятельность.Количество() Цикл
			Если ПрочиеЗатраты1[СчетчикМесяцев] ИЛИ ТекущиеЗатраты1[СчетчикМесяцев] ИЛИ УслугиУК[СчетчикМесяцев] Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 0;	
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Выборка.Предприятие) + "ИТОГО ФИНАНСОВЫЙ РЕЗУЛЬТАТ";
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = "ИТОГО ФИНАНСОВЫЙ РЕЗУЛЬТАТ";
				НоваяСтрока[СчетчикМесяцев * 2 + 9] = ПрочиеЗатраты1[СчетчикМесяцев] + ТекущиеЗатраты1[СчетчикМесяцев] + УслугиУК[СчетчикМесяцев];
			КонецЕсли;
		КонецЦикла;
		
		
	КонецЦикла;
	
	
	
	//сворачиваем таблицу значений и выводим на печать		
	ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение", НаборИмен);
	
	Результат.НачатьАвтогруппировкуСтрок();
	Для Строчка = 0 По ТЗ.Количество()-1 Цикл
		
		Если Лев(ТЗ[Строчка][4], 18) = "Объем производства" Тогда // выводим шапку
			
			//ОбластьШапка.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 20, СтрДлина(ТЗ[Строчка][4]));
			ОбластьШапка.Параметры.Предприятие = ТЗ[Строчка][3];
			ОбластьШапка.Параметры.Месяц = ПредставлениеПериода(Отчет.Период.ДатаНачала, Отчет.Период.ДатаОкончания);;
			ОбластьШапка.Параметры.Сценарий1 = Отчет.Сценарий1;
			Результат.Вывести(ОбластьШапка);
			Период = 0;
			Для Колонка = 1 По Деятельность.Количество() Цикл
				ОбластьШапкаСтолбцы.Параметры.Деятельность = Деятельность[Колонка - 1];	
				Результат.Присоединить(ОбластьШапкаСтолбцы);
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		//получаем шрифт
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|СтолбецНачало");
		ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбца");			
		
		//получаем данные
		ОбластьДанные.Параметры.Статья = ТЗ[Строчка][4];
		
		
		Результат.Вывести(ОбластьДанные, строка(ТЗ[Строчка][0]));
		Период = 0;
		Для Колонка = 1 По Деятельность.Количество() Цикл
			Период = Период + 1;
			
			ОбластьДанныеСтолбцы.Параметры.Сумма1 =  ТЗ[Строчка][Колонка * 2 + 4];
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Отчет", "Отчеты.Д_Расшифровка");
			СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ЗатратыНаПрво);
			СтруктураРасшифровки.Вставить("Предприятие", ТЗ[Строчка][3]);
			СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][4]);
			СтруктураРасшифровки.Вставить("Субконто2", Деятельность[Колонка - 1]);
			СтруктураРасшифровки.Вставить("Дата1", Отчет.Период.ДатаНачала);
			СтруктураРасшифровки.Вставить("Дата2", Отчет.Период.ДатаОкончания);
			СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
			СтруктураРасшифровки.Вставить("Сценарий1", Отчет.Сценарий1);
			
			ОбластьДанныеСтолбцы.Параметры.Расшифровка = СтруктураРасшифровки;
			
			Результат.Присоединить(ОбластьДанныеСтолбцы, строка(ТЗ[Строчка][0]));
			
			//Колонка = Колонка + 1;
		КонецЦикла;
	КонецЦикла;
	Результат.ЗакончитьАвтогруппировкуСтрок();
	
	
	//таблицу на экран
	Результат.ОтображатьСетку = Ложь;
	Результат.Защита = Ложь;
	Результат.ТолькоПросмотр = Истина;
	Результат.ОтображатьЗаголовки = Ложь;
	Результат.Показать();
	Элементы.Результат.Видимость = Истина;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицу(ВидОтчета, Отчет)
	
	Результат.ОтображатьСетку = Ложь;
	Результат.Защита = Ложь;
	Результат.ТолькоПросмотр = Истина;
	Результат.ОтображатьЗаголовки = Истина;
	Результат.ОтображатьГруппировки = Истина;
	Результат.ОриентацияСтраницы = ?(ОриентацияСтр = "Портрет", ОриентацияСтраницы.Портрет, ОриентацияСтраницы.Ландшафт);
	Результат.АвтоМасштаб = Ложь;
	Результат.МасштабПечати = 100;
	
	Результат.Очистить();
	ШиринаСтраницы = ?(ОриентацияСтр = "Портрет", 65.875, 86.625);
	
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(Отчет.Сценарий1 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(Отчет.Сценарий2 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(Отчет.Сценарий1 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	Регистр2 = ?(Отчет.Сценарий2 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	Для Кол = 1 По 100 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Попытка
	    ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_ФРПроектов");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_ФРПроектов;
	КонецПопытки;

	ДваСценария = Ложь;
	
	Если НЕ ПустаяСтрока(Отчет.Сценарий1) и  НЕ ПустаяСтрока(Отчет.Сценарий2) Тогда
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетПланФактПечать");
		ДваСценария = Истина;
	иначе
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетПечать");
	КонецЕсли; 
		
	Интервал = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, 1, 
	?(Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, Месяц(Отчет.Период.ДатаНачала),?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(Отчет.Период.ДатаНачала)), Год(Отчет.Период.ДатаНачала)));
	
	КонецПериода = ?(Отчет.Помесячно = Перечисления.Д_Интервал.Помесячно, Месяц(Отчет.Период.ДатаОкончания),?(
	Отчет.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(Отчет.Период.ДатаОкончания)), Год(Отчет.Период.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	
	
	ПредприятияМассив = Новый Массив;
	Для каждого Т Из Отчет.Предприятие Цикл
		Если Т.Пометка Тогда
			ПредприятияМассив.Добавить(Т.Значение);
		КонецЕсли;
		
	КонецЦикла; 
	
	//Предпр = Т.Значение;
	ДатаНач = Отчет.Период.ДатаНачала;
	ДатаКон = Отчет.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	СчетчикНоменклатур = 0;
	КоэффициентОтступа = 0;
	
	Если Отчет.ВидОтчета = 1 ИЛИ Отчет.ВидОтчета = 0 Тогда
		//90.3
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
		|	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
		|	ВЫБОР
		|		КОГДА " + КлючПериод + "(ДанныеСценарий1.Период) ЕСТЬ NULL 
		|			ТОГДА " + КлючПериод + "(ДанныеСценарий2.Период)
		|		ИНАЧЕ " + КлючПериод + "(ДанныеСценарий1.Период)
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Субконто2
		|		ИНАЧЕ ДанныеСценарий1.Субконто2
		|	КОНЕЦ КАК Статья,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Субконто2.Родитель
		|		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
		|	КОНЕЦ КАК Родитель1,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Предприятия
		|		ИНАЧЕ ДанныеСценарий1.Предприятия
		|	КОНЕЦ КАК Предприятие
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		|			&Дата1,
		|			&Дата2,
		|			" + КлючПериод + ",
		|			Счет = &Счет,
		|			,
		|			Предприятия В ИЕРАРХИИ (&Предприятия)
		|				И СценарийПлана = &Сценарий1,
		|			,
		|			) КАК ДанныеСценарий1
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
		|				&Дата1,
		|				&Дата2,
		|				" + КлючПериод + ",
		|				Счет = &Счет2,
		|				,
		|				Предприятия В ИЕРАРХИИ (&Предприятия)
		|					И СценарийПлана = &Сценарий2,
		|				,
		|				) КАК ДанныеСценарий2
		|		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
		|			И (" + КлючПериод + "(ДанныеСценарий1.Период) = " + КлючПериод + "(ДанныеСценарий2.Период))
		|			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
		|			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиЗатрат.Ссылка КАК Статья,
		|	СтатьиЗатрат.ЭтоГруппа,
		|	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
		|	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
		|	ЕСТЬNULL(Данные.Период, 0) КАК Период,
		|	Данные.Предприятие
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
		|		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
		|				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
	ИначеЕсли Отчет.ВидОтчета = 2 тогда
		
		//90.3
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
		|	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
		|	ВЫБОР
		|		КОГДА " + КлючПериод + "(ДанныеСценарий1.Период) ЕСТЬ NULL 
		|			ТОГДА " + КлючПериод + "(ДанныеСценарий2.Период)
		|		ИНАЧЕ " + КлючПериод + "(ДанныеСценарий1.Период)
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Субконто2
		|		ИНАЧЕ ДанныеСценарий1.Субконто2
		|	КОНЕЦ КАК Статья,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Субконто2.Родитель
		|		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
		|	КОНЕЦ КАК Родитель1,
		|	ВЫБОР
		|		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
		|			ТОГДА ДанныеСценарий2.Предприятия
		|		ИНАЧЕ ДанныеСценарий1.Предприятия
		|	КОНЕЦ КАК Предприятие,
		|	ВЫБОР
		|		КОГДА БюджетныйДвиженияССубконто1.Содержание ЕСТЬ NULL 
		|			ТОГДА БюджетныйДвиженияССубконто2.Содержание
		|		ИНАЧЕ БюджетныйДвиженияССубконто1.Содержание
		|	КОНЕЦ КАК Содержание
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		|			&Дата1,
		|			&Дата2,
		|			Запись,
		|			Счет = &Счет,
		|			,
		|			Предприятия В ИЕРАРХИИ (&Предприятия)
		|				И СценарийПлана = &Сценарий1,
		|			,
		|			) КАК ДанныеСценарий1
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
		|				&Дата1,
		|				&Дата2,
		|				Запись,
		|				Счет = &Счет2,
		|				,
		|				Предприятия В ИЕРАРХИИ (&Предприятия)
		|					И СценарийПлана = &Сценарий2,
		|				,
		|				) КАК ДанныеСценарий2
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр1 + ".ДвиженияССубконто(
		|					&Дата1,
		|					&Дата2,
		|					Предприятия В ИЕРАРХИИ (&Предприятия)
		|						И СценарийПлана = &Сценарий2,
		|					,
		|					) КАК БюджетныйДвиженияССубконто2
		|			ПО ДанныеСценарий2.Регистратор = БюджетныйДвиженияССубконто2.Регистратор
		|				И ДанныеСценарий2.НомерСтроки = БюджетныйДвиженияССубконто2.НомерСтроки
		|		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
		|			И (" + КлючПериод + "(ДанныеСценарий1.Период) = " + КлючПериод + "(ДанныеСценарий2.Период))
		|			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
		|			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".ДвиженияССубконто(
		|				&Дата1,
		|				&Дата2,
		|				Предприятия В ИЕРАРХИИ (&Предприятия)
		|					И СценарийПлана = &Сценарий1,
		|				,
		|				) КАК БюджетныйДвиженияССубконто1
		|		ПО ДанныеСценарий1.Регистратор = БюджетныйДвиженияССубконто1.Регистратор
		|			И ДанныеСценарий1.НомерСтроки = БюджетныйДвиженияССубконто1.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиЗатрат.Ссылка КАК Статья,
		|	СтатьиЗатрат.ЭтоГруппа,
		|	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
		|	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
		|	ЕСТЬNULL(Данные.Период, 0) КАК Период,
		|	Данные.Предприятие,
		|	Данные.Содержание
		|ИЗ
		|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
		|		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
		|				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиЗатрат.Код";
	ИначеЕсли Отчет.ВидОтчета = 3 Тогда
		
	ИначеЕсли Отчет.ВидОтчета = 4 тогда
		
		//90.3
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
		               |	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
		               |	ВЫБОР
		               |		КОГДА МЕСЯЦ(ДанныеСценарий1.Период) ЕСТЬ NULL 
		               |			ТОГДА МЕСЯЦ(ДанныеСценарий2.Период)
		               |		ИНАЧЕ МЕСЯЦ(ДанныеСценарий1.Период)
		               |	КОНЕЦ КАК Период,
		               |	ВЫБОР
		               |		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
		               |			ТОГДА ДанныеСценарий2.Субконто2
		               |		ИНАЧЕ ДанныеСценарий1.Субконто2
		               |	КОНЕЦ КАК Статья,
		               |	ВЫБОР
		               |		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
		               |			ТОГДА ДанныеСценарий2.Субконто2.Родитель
		               |		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
		               |	КОНЕЦ КАК Родитель1,
		               |	ВЫБОР
		               |		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
		               |			ТОГДА ДанныеСценарий2.Предприятия
		               |		ИНАЧЕ ДанныеСценарий1.Предприятия
		               |	КОНЕЦ КАК Предприятие,
		               |	ВЫБОР
		               |		КОГДА БюджетныйДвиженияССубконто1.Содержание ЕСТЬ NULL 
		               |			ТОГДА БюджетныйДвиженияССубконто2.Содержание
		               |		ИНАЧЕ БюджетныйДвиженияССубконто1.Содержание
		               |	КОНЕЦ КАК Содержание,
		               |	ВЫБОР
		               |		КОГДА ДанныеСценарий1.Подразделение ЕСТЬ NULL 
		               |			ТОГДА ДанныеСценарий2.Подразделение
		               |		ИНАЧЕ ДанныеСценарий1.Подразделение
		               |	КОНЕЦ КАК Подразделение
		               |ПОМЕСТИТЬ Данные
		               |ИЗ
		               |	РегистрБухгалтерии.Бюджетный.Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			Запись,
		               |			Счет = &Счет,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СценарийПлана = &Сценарий1,
		               |			,
		               |			) КАК ДанныеСценарий1
		               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.Обороты(
		               |				&Дата1,
		               |				&Дата2,
		               |				Запись,
		               |				Счет = &Счет2,
		               |				,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий2,
		               |				,
		               |				) КАК ДанныеСценарий2
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.ДвиженияССубконто(
		               |					&Дата1,
		               |					&Дата2,
		               |					Предприятия В ИЕРАРХИИ (&Предприятия)
		               |						И СценарийПлана = &Сценарий2,
		               |					,
		               |					) КАК БюджетныйДвиженияССубконто2
		               |			ПО ДанныеСценарий2.Регистратор = БюджетныйДвиженияССубконто2.Регистратор
		               |				И ДанныеСценарий2.НомерСтроки = БюджетныйДвиженияССубконто2.НомерСтроки
		               |		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
		               |			И (МЕСЯЦ(ДанныеСценарий1.Период) = МЕСЯЦ(ДанныеСценарий2.Период))
		               |			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
		               |			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.ДвиженияССубконто(
		               |				&Дата1,
		               |				&Дата2,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий1,
		               |				,
		               |				) КАК БюджетныйДвиженияССубконто1
		               |		ПО ДанныеСценарий1.Регистратор = БюджетныйДвиженияССубконто1.Регистратор
		               |			И ДанныеСценарий1.НомерСтроки = БюджетныйДвиженияССубконто1.НомерСтроки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СтатьиЗатрат.Ссылка КАК Статья,
		               |	СтатьиЗатрат.ЭтоГруппа,
		               |	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
		               |	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
		               |	ЕСТЬNULL(Данные.Период, 0) КАК Период,
		               |	Данные.Предприятие,
		               |	Данные.Содержание
		               |ИЗ
		               |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
		               |		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
		               |				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	СтатьиЗатрат.Код";
		
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятия", ПредприятияМассив);
	Запрос.УстановитьПараметр("Сценарий1", Отчет.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", Отчет.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.РасходыПоРеал);
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.РасходыПоРеал);
	РезультатЗатраты = Запрос.Выполнить();
	
	//91 счет
	Запрос = Новый Запрос;
	Если Отчет.ВидОтчета = 1 ИЛИ Отчет.ВидОтчета = 0 Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА " + КлючПериод + "(Прочие1.Период) ЕСТЬ NULL 
		|			ТОГДА " + КлючПериод + "(Прочие2.Период)
		|		ИНАЧЕ " + КлючПериод + "(Прочие1.Период)
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА Прочие1.Субконто1 ЕСТЬ NULL 
		|			ТОГДА Прочие2.Субконто1
		|		ИНАЧЕ Прочие1.Субконто1
		|	КОНЕЦ КАК Статья,
		|	-ЕСТЬNULL(Прочие1.СуммаОборот, 0) КАК Сумма1,
		|	-ЕСТЬNULL(Прочие2.СуммаОборот, 0) КАК Сумма2,
		|	ВЫБОР
		|		КОГДА Прочие1.Предприятия ЕСТЬ NULL 
		|			ТОГДА Прочие2.Предприятия
		|		ИНАЧЕ Прочие1.Предприятия
		|	КОНЕЦ КАК Предприятие,
		|	ВЫБОР
		|		КОГДА Прочие1.Субконто2 ЕСТЬ NULL 
		|			ТОГДА Прочие2.Субконто2
		|		ИНАЧЕ Прочие1.Субконто2
		|	КОНЕЦ КАК Деятельность,
		|	ВЫБОР
		|		КОГДА Прочие1.КорСубконто1 ЕСТЬ NULL 
		|			ТОГДА Прочие2.КорСубконто1
		|		ИНАЧЕ Прочие1.КорСубконто1
		|	КОНЕЦ КАК Статья25,
		|	ВЫБОР
		|		КОГДА Прочие1.КорСубконто1 ЕСТЬ NULL 
		|			ТОГДА Прочие2.КорСубконто1.Код
		|		ИНАЧЕ Прочие1.КорСубконто1.Код
		|	КОНЕЦ КАК Статья25Код,
		|	ВЫБОР
		|		КОГДА Прочие1.КорСубконто1.Родитель ЕСТЬ NULL 
		|			ТОГДА Прочие2.КорСубконто1.Родитель
		|		ИНАЧЕ Прочие1.КорСубконто1.Родитель
		|	КОНЕЦ КАК КорРодитель,
		|	ВЫБОР
		|		КОГДА Прочие1.КорСчет ЕСТЬ NULL 
		|			ТОГДА Прочие2.КорСчет
		|		ИНАЧЕ Прочие1.КорСчет
		|	КОНЕЦ КАК КорСчет
		|ИЗ
		|	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		|			&Дата1,
		|			&Дата2,
		|			" + КлючПериод + ",
		|			Счет = &СчетДт2,
		|			,
		|			Предприятия В ИЕРАРХИИ (&Предприятия)
		|				И СценарийПлана = &Сценарий1,
        |			,
		|			) КАК Прочие1
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
		|				&Дата1,
		|				&Дата2,
		|				" + КлючПериод + ",
		|				Счет = &СчетДт3,
		|				,
		|				Предприятия В ИЕРАРХИИ (&Предприятия)
		|					И СценарийПлана = &Сценарий2,
		|			,
		|				) КАК Прочие2
		|		ПО (" + КлючПериод + "(Прочие1.Период) = " + КлючПериод + "(Прочие2.Период))
		|			И Прочие1.Субконто1 = Прочие2.Субконто1
		|			И Прочие1.Предприятия = Прочие2.Предприятия
		|			И Прочие1.Субконто2 = Прочие2.Субконто2
		|
		|УПОРЯДОЧИТЬ ПО
		|	Статья,Статья25Код";
		
	ИначеЕсли Отчет.ВидОтчета = 2 тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА " + КлючПериод + "(Прочие1.Период) ЕСТЬ NULL 
		               |			ТОГДА " + КлючПериод + "(Прочие2.Период)
		               |		ИНАЧЕ " + КлючПериод + "(Прочие1.Период)
		               |	КОНЕЦ КАК Период,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Субконто1 ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Субконто1
		               |		ИНАЧЕ Прочие1.Субконто1
		               |	КОНЕЦ КАК Статья,
		               |	-ЕСТЬNULL(Прочие1.СуммаОборот, 0) КАК Сумма1,
		               |	-ЕСТЬNULL(Прочие2.СуммаОборот, 0) КАК Сумма2,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Предприятия ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Предприятия
		               |		ИНАЧЕ Прочие1.Предприятия
		               |	КОНЕЦ КАК Предприятие,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Субконто2 ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Субконто2
		               |		ИНАЧЕ Прочие1.Субконто2
		               |	КОНЕЦ КАК Деятельность,
		               |	ВЫБОР
		               |		КОГДА БюджетныйДвиженияССубконто1.Содержание ЕСТЬ NULL 
		               |			ТОГДА БюджетныйДвиженияССубконто2.Содержание
		               |		ИНАЧЕ БюджетныйДвиженияССубконто1.Содержание
		               |	КОНЕЦ КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			Запись,
		               |			Счет = &СчетДт2,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СценарийПлана = &Сценарий1,
		               |			,
		               |			) КАК Прочие1
		               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
		               |				&Дата1,
		               |				&Дата2,
		               |				Запись,
		               |				Счет = &СчетДт3,
		               |				,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий2,
		               |				,
		               |				) КАК Прочие2
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр1 + ".ДвиженияССубконто(
		               |					&Дата1,
		               |					&Дата2,
		               |					Предприятия В ИЕРАРХИИ (&Предприятия)
		               |						И СценарийПлана = &Сценарий2,
		               |					,
		               |					) КАК БюджетныйДвиженияССубконто2
		               |			ПО Прочие2.Регистратор = БюджетныйДвиженияССубконто2.Регистратор
		               |				И Прочие2.НомерСтроки = БюджетныйДвиженияССубконто2.НомерСтроки
		               |		ПО (" + КлючПериод + "(Прочие1.Период) = " + КлючПериод + "(Прочие2.Период))
		               |			И Прочие1.Субконто1 = Прочие2.Субконто1
		               |			И Прочие1.Предприятия = Прочие2.Предприятия
		               |			И Прочие1.Субконто2 = Прочие2.Субконто2
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".ДвиженияССубконто(
		               |				&Дата1,
		               |				&Дата2,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий1,
		               |				,
		               |				) КАК БюджетныйДвиженияССубконто1
		               |		ПО Прочие1.Регистратор = БюджетныйДвиженияССубконто1.Регистратор
		               |			И Прочие1.НомерСтроки = БюджетныйДвиженияССубконто1.НомерСтроки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Статья";
	ИначеЕсли Отчет.ВидОтчета = 3 Тогда
		
	ИначеЕсли Отчет.ВидОтчета = 4 тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА МЕСЯЦ(Прочие1.Период) ЕСТЬ NULL 
		               |			ТОГДА МЕСЯЦ(Прочие2.Период)
		               |		ИНАЧЕ МЕСЯЦ(Прочие1.Период)
		               |	КОНЕЦ КАК Период,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Субконто1 ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Субконто1
		               |		ИНАЧЕ Прочие1.Субконто1
		               |	КОНЕЦ КАК Статья,
		               |	-ЕСТЬNULL(Прочие1.СуммаОборот, 0) КАК Сумма1,
		               |	-ЕСТЬNULL(Прочие2.СуммаОборот, 0) КАК Сумма2,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Предприятия ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Предприятия
		               |		ИНАЧЕ Прочие1.Предприятия
		               |	КОНЕЦ КАК Предприятие,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Субконто2 ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Субконто2
		               |		ИНАЧЕ Прочие1.Субконто2
		               |	КОНЕЦ КАК Деятельность,
		               |	ВЫБОР
		               |		КОГДА БюджетныйДвиженияССубконто1.Содержание ЕСТЬ NULL 
		               |			ТОГДА БюджетныйДвиженияССубконто2.Содержание
		               |		ИНАЧЕ БюджетныйДвиженияССубконто1.Содержание
		               |	КОНЕЦ КАК Содержание,
		               |	ВЫБОР
		               |		КОГДА Прочие1.Подразделение ЕСТЬ NULL 
		               |			ТОГДА Прочие2.Подразделение
		               |		ИНАЧЕ Прочие1.Подразделение
		               |	КОНЕЦ КАК Поле1
		               |ИЗ
		               |	РегистрБухгалтерии.Бюджетный.Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			Запись,
		               |			Счет = &СчетДт2,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СценарийПлана = &Сценарий1,
		               |			,
		               |			) КАК Прочие1
		               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.Обороты(
		               |				&Дата1,
		               |				&Дата2,
		               |				Запись,
		               |				Счет = &СчетДт3,
		               |				,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий2,
		               |				,
		               |				) КАК Прочие2
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.ДвиженияССубконто(
		               |					&Дата1,
		               |					&Дата2,
		               |					Предприятия В ИЕРАРХИИ (&Предприятия)
		               |						И СценарийПлана = &Сценарий2,
		               |					,
		               |					) КАК БюджетныйДвиженияССубконто2
		               |			ПО Прочие2.Регистратор = БюджетныйДвиженияССубконто2.Регистратор
		               |				И Прочие2.НомерСтроки = БюджетныйДвиженияССубконто2.НомерСтроки
		               |		ПО (МЕСЯЦ(Прочие1.Период) = МЕСЯЦ(Прочие2.Период))
		               |			И Прочие1.Субконто1 = Прочие2.Субконто1
		               |			И Прочие1.Предприятия = Прочие2.Предприятия
		               |			И Прочие1.Субконто2 = Прочие2.Субконто2
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.ДвиженияССубконто(
		               |				&Дата1,
		               |				&Дата2,
		               |				Предприятия В ИЕРАРХИИ (&Предприятия)
		               |					И СценарийПлана = &Сценарий1,
		               |				,
		               |				) КАК БюджетныйДвиженияССубконто1
		               |		ПО Прочие1.Регистратор = БюджетныйДвиженияССубконто1.Регистратор
		               |			И Прочие1.НомерСтроки = БюджетныйДвиженияССубконто1.НомерСтроки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Статья";	
	КонецЕсли;
	
	
	
	Запрос.УстановитьПараметр("Предприятия", ПредприятияМассив);
	Запрос.УстановитьПараметр("Сценарий1", Отчет.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", Отчет.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("СчетДт2", ПланСчетов1.ДоходыИРасходы);
	Запрос.УстановитьПараметр("СчетДт3", ПланСчетов2.ДоходыИРасходы);
	РезультатПрочиеЗатраты = Запрос.Выполнить();
	
	
	
	
	
	Для каждого Предприятие  Из ПредприятияМассив Цикл
		
		//очищаем массив и присваиваем числовой тип
		ТекущиеЗатраты1 = Новый Массив(50);
		ТекущиеЗатраты2 = Новый Массив(50);
		ПрочиеЗатраты1 = Новый Массив(50);
		ПрочиеЗатраты2 = Новый Массив(50);
		Для т = 0 По 49 Цикл
			ТекущиеЗатраты1[т] = 0;
			ТекущиеЗатраты2[т] = 0;
			ПрочиеЗатраты1[т] = 0;
			ПрочиеЗатраты2[т] = 0;
		КонецЦикла;
		
		//опрос 90.3
		СтруктураПоиска = Новый Структура("Предприятие", Предприятие);
		Выборка = РезультатЗатраты.Выбрать();
		Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка("Ном") + строка("Объем производства");
			НоваяСтрока[3] = Выборка.Предприятие;
			НоваяСтрока[4] = "Объем производства " + Строка("Ном");
			
			СчетчикМесяцев = Выборка.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(Отчет.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1 - Выборка.ЭтоГруппа;
			
			Если НЕ Выборка.ЭтоГруппа Тогда
				ТекущиеЗатраты1[СчетчикМесяцев] = ТекущиеЗатраты1[СчетчикМесяцев] + Выборка.Сумма1; 
				ТекущиеЗатраты2[СчетчикМесяцев] = ТекущиеЗатраты2[СчетчикМесяцев] + Выборка.Сумма2;									
			КонецЕсли;
			
			
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка("Ном") + строка(Выборка.Статья);
			НоваяСтрока[3] = Выборка.Предприятие;
			НоваяСтрока[4] = Выборка.Статья;
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;
			
			Если НЕ Выборка.ЭтоГруппа И Отчет.ВидОтчета = 2 Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 4;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка(Выборка.Статья);
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = Выборка.Содержание;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;
			КонецЕсли;
		КонецЦикла;
		
		//итого по тек.деятельности
		
		Для СчетчикМесяцев = 1 По ВсегоПериодов Цикл
			Если ТекущиеЗатраты1[СчетчикМесяцев] ИЛИ ТекущиеЗатраты2[СчетчикМесяцев] Тогда
				КоэффициентОтступа = ?(ПустаяСтрока(Отчет.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 0; // 29.10.12
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка("Прибыль по основной деятельности");
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = "Прибыль по основной деятельности";
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекущиеЗатраты1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекущиеЗатраты2[СчетчикМесяцев];
			КонецЕсли;
			
		КонецЦикла;
		
		//опрос 91
		СтруктураПоиска = Новый Структура("Предприятие", Предприятие);
		Выборка = РезультатПрочиеЗатраты.Выбрать();
		Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
			
			СчетчикМесяцев = Выборка.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(Отчет.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1;	
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Выборка.Предприятие) + Строка(Выборка.Статья);
			НоваяСтрока[3] = Выборка.Предприятие;
			НоваяСтрока[4] = Выборка.Статья;
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;
			ПрочиеЗатраты1[СчетчикМесяцев] = ПрочиеЗатраты1[СчетчикМесяцев] + Выборка.Сумма1;
			ПрочиеЗатраты2[СчетчикМесяцев] = ПрочиеЗатраты2[СчетчикМесяцев] + Выборка.Сумма2;
			
			Если Отчет.ВидОтчета = 2 Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 4;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка("Ном") + строка(Выборка.Статья);
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = Выборка.Содержание;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;
			КонецЕсли;
			
			Если Выборка.Статья = Справочники.СтатьиДоходовРасходов.Простой ИЛИ Выборка.Статья = Справочники.СтатьиДоходовРасходов.ПереносОстатков Тогда
				//КорСтатьи
				НоваяСтрокаГ = ТЗ.Добавить();
				НоваяСтрокаГ[0] = 2;	
				НоваяСтрокаГ[1] = 0;
				НоваяСтрокаГ[3] = Выборка.Предприятие;
				Если Выборка.КорСчет = ПланыСчетов.Учетный.Счет25() ИЛИ Выборка.КорСчет = ПланыСчетов.Учетный.Счет25() Тогда
					НоваяСтрокаГ[2] = Строка(Выборка.Предприятие) + Строка(Выборка.КорРодитель);
					НоваяСтрокаГ[4] = Выборка.КорРодитель;
					НоваяСтрока = ТЗ.Добавить();
					НоваяСтрока[0] = 4;	
					НоваяСтрока[1] = 0;
					НоваяСтрока[2] = Строка(Выборка.Предприятие) + Строка(Выборка.Статья25);
					НоваяСтрока[3] = Выборка.Предприятие;
					НоваяСтрока[4] = Выборка.Статья25;
					НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
					НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;
					ПрочиеЗатраты1[СчетчикМесяцев] = ПрочиеЗатраты1[СчетчикМесяцев] + Выборка.Сумма1;
					ПрочиеЗатраты2[СчетчикМесяцев] = ПрочиеЗатраты2[СчетчикМесяцев] + Выборка.Сумма2;
				Иначе
					НоваяСтрокаГ[2] = Строка(Выборка.Предприятие) + "ПРОЧИЕ";
					НоваяСтрокаГ[4] = "ПРОЧИЕ";
				КонецЕсли;
				НоваяСтрокаГ[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = - Выборка.Сумма1;
				НоваяСтрокаГ[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = - Выборка.Сумма2;				
			КонецЕсли;
		КонецЦикла;
		
		Для СчетчикМесяцев = 1 По ВсегоПериодов Цикл
			КоэффициентОтступа = ?(ПустаяСтрока(Отчет.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			Если ПрочиеЗатраты1[СчетчикМесяцев] ИЛИ ПрочиеЗатраты2[СчетчикМесяцев] ИЛИ ТекущиеЗатраты1[СчетчикМесяцев] ИЛИ ТекущиеЗатраты2[СчетчикМесяцев] Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 0; // 29.10.12	
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Выборка.Предприятие) + "ИТОГО ФИНАНСОВЫЙ РЕЗУЛЬТАТ";
				НоваяСтрока[3] = Выборка.Предприятие;
				НоваяСтрока[4] = "ИТОГО ФИНАНСОВЫЙ РЕЗУЛЬТАТ";
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ПрочиеЗатраты1[СчетчикМесяцев] + ТекущиеЗатраты1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ПрочиеЗатраты2[СчетчикМесяцев] + ТекущиеЗатраты2[СчетчикМесяцев];
			КонецЕсли;
		КонецЦикла;
				
	КонецЦикла;
		
	
	//сворачиваем таблицу значений и выводим на печать		
	ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение", НаборИмен);
	
	Результат.НачатьАвтогруппировкуСтрок();
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|СтолбецНачало");
	ОбластьШапкаСтолбцыСц1 = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбцаСц1");
	
	Если ДваСценария Тогда
		ОбластьШапкаСтолбцыСц2 = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбцаСц2");
        ОбластьШапкаСтолбцыОткл = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбцаОткл");
	КонецЕсли;
	
	Для Строчка = 0 По ТЗ.Количество()-1 Цикл
		
		Если Лев(ТЗ[Строчка][4], 18) = "Объем производства" Тогда // выводим шапку
			
			//ОбластьШапка.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 20, СтрДлина(ТЗ[Строчка][4]));
			ОбластьШапка.Параметры.Предприятие = ТЗ[Строчка][3];
			ОбластьШапка.Параметры.Месяц = ПредставлениеПериода(Отчет.Период.ДатаНачала, Отчет.Период.ДатаОкончания);
			Результат.Вывести(ОбластьШапка);
			Период = 0;
			ОбщаяШиринаКолонок = 0;
			ОбщаяШиринаКолонок = ОбщаяШиринаКолонок + ОбластьШапка.ТекущаяОбласть.ШиринаКолонки;

			Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(Отчет.Сценарий2), 1, 2) Цикл
				
				Период = Период + Интервал;
				ОбластьШапкаСтолбцыСц1.Параметры.Сценарий1 = Отчет.Сценарий1;
				
				Если ВсегоПериодов > 1 Тогда
					ОбластьШапкаСтолбцыСц1.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - Интервал)), КонецМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - 1)));	
					Если ДваСценария Тогда
						ОбластьШапкаСтолбцыСц2.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - Интервал)), КонецМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - 1)));
						ОбластьШапкаСтолбцыОткл.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - Интервал)), КонецМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - 1)));
					КонецЕсли;
				Иначе
					ОбластьШапкаСтолбцыСц1.Параметры.Месяц = ПредставлениеПериода(Отчет.Период.ДатаНачала, Отчет.Период.ДатаОкончания);	
					Если ДваСценария Тогда
						ОбластьШапкаСтолбцыСц2.Параметры.Месяц = ПредставлениеПериода(Отчет.Период.ДатаНачала, Отчет.Период.ДатаОкончания);
						ОбластьШапкаСтолбцыОткл.Параметры.Месяц = ПредставлениеПериода(Отчет.Период.ДатаНачала, Отчет.Период.ДатаОкончания);
					КонецЕсли;
				КонецЕсли; 
				
				Если ДваСценария Тогда
					ОбластьШапкаСтолбцыСц2.Параметры.Сценарий2 = Отчет.Сценарий2;
					Колонка = Колонка + 1;
				КонецЕсли;
				
				ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьШапкаСтолбцыСц1, ОбластьШапка, 0, Истина);
				
				Если ДваСценария Тогда
					ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьШапкаСтолбцыСц2, ОбластьШапка, 0, Истина);
					ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьШапкаСтолбцыОткл, ОбластьШапка, 0, Истина);
				КонецЕсли;
				
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		//получаем шрифт
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|СтолбецНачало");
		ОбластьДанныеСтолбцыСц1 = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбцаСц1");		
		
		Если ДваСценария Тогда
			ОбластьДанныеСтолбцыСц2 = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбцаСц2");
			ОбластьДанныеСтолбцыОткл = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбцаОткл");
		КонецЕсли;
		
		//получаем данные
		ОбластьДанные.Параметры.Статья = ТЗ[Строчка][4];
				
		Результат.Вывести(ОбластьДанные, строка(ТЗ[Строчка][0]));
		
		Период = 0;
		ОбщаяШиринаКолонок = 0;
		ОбщаяШиринаКолонок = ОбщаяШиринаКолонок + ОбластьШапка.ТекущаяОбласть.ШиринаКолонки;
		
		Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(Отчет.Сценарий2), 1, 2) Цикл
			
			Период = Период + Интервал;
			ОбластьДанныеСтолбцыСц1.Параметры.Сумма1 =  ТЗ[Строчка][Колонка * 2 + 4];
			
			Если ДваСценария Тогда
				ОбластьДанныеСтолбцыСц2.Параметры.Сумма2 = ТЗ[Строчка][Колонка * 2 + 6];
				ОбластьДанныеСтолбцыОткл.Параметры.Сумма3 = ОбластьДанныеСтолбцыСц2.Параметры.Сумма2 - ОбластьДанныеСтолбцыСц1.Параметры.Сумма1;
				Колонка = Колонка + 1;
			КонецЕсли;
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Отчет", "Отчеты.Д_Расшифровка");
			СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ЗатратыНаПрво);
			СтруктураРасшифровки.Вставить("Предприятие", ТЗ[Строчка][3]);
			СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][4]);
			СтруктураРасшифровки.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - Интервал)), Отчет.Период.ДатаНачала));
			СтруктураРасшифровки.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - 1)), Отчет.Период.ДатаОкончания));
			СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
			СтруктураРасшифровки.Вставить("Сценарий1", Отчет.Сценарий1);
			
			ОбластьДанныеСтолбцыСц1.Параметры.Расшифровка = СтруктураРасшифровки;
			Если НЕ ПустаяСтрока(Отчет.Сценарий2)  Тогда
				СтруктураРасшифровки2 = Новый Структура;
				СтруктураРасшифровки2.Вставить("Отчет", "Отчеты.Д_Расшифровка");
				СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ЗатратыНаПрво);
				СтруктураРасшифровки2.Вставить("Предприятие", ТЗ[Строчка][3]);
				СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][4]);
				СтруктураРасшифровки2.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - Интервал)), Отчет.Период.ДатаНачала));
				СтруктураРасшифровки2.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(Отчет.Период.ДатаНачала, Период - 1)), Отчет.Период.ДатаОкончания));
				СтруктураРасшифровки2.Вставить("ВидимостьШапки", 0);
				СтруктураРасшифровки2.Вставить("Сценарий1", Отчет.Сценарий2);
				ОбластьДанныеСтолбцыСц2.Параметры.Расшифровка2 = СтруктураРасшифровки2;
			КонецЕсли;
			
			ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьДанныеСтолбцыСц1, ОбластьДанные, строка(ТЗ[Строчка][0]), Истина);
				
			Если ДваСценария Тогда
				ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьДанныеСтолбцыСц2, ОбластьДанные, строка(ТЗ[Строчка][0]),  Истина);
				ОбщаяШиринаКолонок = ВывестиПоШиринеСтраницы(Результат, ШиринаСтраницы, ОбщаяШиринаКолонок, ОбластьДанныеСтолбцыОткл, ОбластьДанные, строка(ТЗ[Строчка][0]),  Истина);
			КонецЕсли;
						
			//Колонка = Колонка + 1;
		КонецЦикла;
	КонецЦикла;
	Результат.ЗакончитьАвтогруппировкуСтрок();
		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТаблицу(Команда)
	ЗаполнитьТаблицу(1, Отчет);
КонецПроцедуры

&НаСервере
Процедура Расшифровать(Расшифровка)
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Отчет.Д_Расшифровка.Форма.ФормаОтчета", Расшифровка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНастройки(Команда)
	Элементы.Группа.Видимость = 1 - Элементы.Группа.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура Сценарий1ПриИзменении(Элемент)
	Отчет.Период.ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ПолучитьПериодСценария(Отчет.Сценарий1).Дата1 + 60 * 60 * 24);
	Отчет.Период.ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ПолучитьПериодСценария(Отчет.Сценарий1).Дата2);
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьПериод(Команда)
	Элементы.Период.Видимость = 1 - Элементы.Период.Видимость;	
КонецПроцедуры

&НаСервере
Функция ПолучитьСценарийФакта()
	возврат Справочники.СценарииПланирования.Факт;
КонецФункции // ()

&НаКлиенте
Процедура Сценарий2ПриИзменении(Элемент)
	Если НЕ Отчет.Сценарий2 = ПолучитьСценарийФакта() Тогда
		Отчет.Период.ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ПолучитьПериодСценария(Отчет.Сценарий2).Дата1 + 60 * 60 * 24);
		Отчет.Период.ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ПолучитьПериодСценария(Отчет.Сценарий2).Дата2);
	КонецЕсли;
	Если ПустаяСтрока(Отчет.Сценарий2) Тогда
		Сценарий1ПриИзменении(0);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОтчетаПриИзменении(Элемент)
	Если Отчет.ВидОтчета = 3 Тогда
		Элементы.Предприятие.МножественныйВыбор = Ложь;
		Отчет.Сценарий2 = "";
	Иначе
		Элементы.Предприятие.МножественныйВыбор = Истина;
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("Сценарий1", ЭтаФорма.ВладелецФормы.Отчет.Сценарий1);
	СтруктураНастроек.Вставить("Сценарий2", ЭтаФорма.ВладелецФормы.Отчет.Сценарий2);
	СтруктураНастроек.Вставить("Предприятие", ЭтаФорма.ВладелецФормы.Отчет.Предприятие);
	СтруктураНастроек.Вставить("Период", ЭтаФорма.ВладелецФормы.Отчет.Период);
	СтруктураНастроек.Вставить("Помесячно", ЭтаФорма.ВладелецФормы.Отчет.Помесячно);
	СтруктураНастроек.Вставить("ВидОтчета", ЭтаФорма.ВладелецФормы.Отчет.ВидОтчета);
	ОриентацияСтр = "Портрет";
	
	Напечатать(СтруктураНастроек);
		
КонецПроцедуры

 &НаСервере
Процедура Напечатать(Отчет)
						
	Если Отчет.ВидОтчета = 3 Тогда
		ЗаполнитьТаблицуДеятельность(1, Отчет);
	Иначе
		ЗаполнитьТаблицу(1, Отчет);
	КонецЕсли;
					
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВывестиПоШиринеСтраницы(ТабДок, ШиринаСтраницы, ШиринаКолонок, Область, ОбластьСтатьи, Уровень, Открыта)
	
	ШиринаКолонок = ШиринаКолонок + Область.ТекущаяОбласть.ШиринаКолонки;
		
	Если ШиринаКолонок > ШиринаСтраницы Тогда
			
			ТабДок.ВывестиВертикальныйРазделительСтраниц();
			ТабДок.Присоединить(ОбластьСтатьи, Уровень,, Открыта);
			ТабДок.Присоединить(Область, Уровень,, Открыта);
			ШиринаКолонок = ОбластьСтатьи.ТекущаяОбласть.ШиринаКолонки + Область.ТекущаяОбласть.ШиринаКолонки;
		
		Иначе
			
			ТабДок.Присоединить(Область, Уровень,, Открыта);
			
		КонецЕсли;
	
	
	Возврат ШиринаКолонок;
	
КонецФункции

&НаКлиенте
Процедура ОриентацияСтрПриИзменении(Элемент)
		
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("Сценарий1", ЭтаФорма.ВладелецФормы.Отчет.Сценарий1);
	СтруктураНастроек.Вставить("Сценарий2", ЭтаФорма.ВладелецФормы.Отчет.Сценарий2);
	СтруктураНастроек.Вставить("Предприятие", ЭтаФорма.ВладелецФормы.Отчет.Предприятие);
	СтруктураНастроек.Вставить("Период", ЭтаФорма.ВладелецФормы.Отчет.Период);
	СтруктураНастроек.Вставить("Помесячно", ЭтаФорма.ВладелецФормы.Отчет.Помесячно);
	СтруктураНастроек.Вставить("ВидОтчета", ЭтаФорма.ВладелецФормы.Отчет.ВидОтчета);
	
	Напечатать(СтруктураНастроек);
	
КонецПроцедуры

