Перем НаборПоказателей Экспорт;
Перем ИмяМакетПроводок;
Перем мТекущийНаборПоказателей;

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеКомпоновкиМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки",
							Истина, Истина, Истина, Истина);
							
КонецФункции
	
Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина, ОбъектОтчет) Экспорт 
	
	Возврат "Карточка счета " + Счет + СтандартныеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ОбъектОтчет.НачалоПериода, ОбъектОтчет.КонецПериода);
	
КонецФункции

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, Схема = Неопределено, ВыводитьПолностью = Истина) Экспорт
	
	УправленческийУчетПовтИсп.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, Схема, ВыводитьПолностью); 
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(Схема, ОбъектОтчет) Экспорт
	
	//ТекНастройки = ОбъектОтчет.КомпоновщикНастроек;
	//
	//Если ТипЗнч(ОбъектОтчет) = Тип("Структура") Тогда
	//	КомпоновщикНастроекПроизвольный = Новый КомпоновщикНастроекКомпоновкиДанных;
	//	КомпоновщикНастроекПроизвольный.ЗагрузитьНастройки(ТекНастройки);
	//Иначе	
		КомпоновщикНастроекПроизвольный = ОбъектОтчет.КомпоновщикНастроек;
	//КонецЕсли; 
	
	//КомпоновщикНастроекПроизвольный.Настройки.Структура.Очистить();
	//КомпоновщикНастроекПроизвольный.Настройки.Выбор.Элементы.Очистить();
	
	
	Если ЗначениеЗаполнено(ОбъектОтчет.Счет) Тогда
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "Счет", ОбъектОтчет.Счет);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОбъектОтчет.НачалоПериода) Тогда
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "НачалоПериода", НачалоДня(ОбъектОтчет.НачалоПериода));
	Иначе
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(ОбъектОтчет.КонецПериода) Тогда
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "КонецПериода", КонецДня(ОбъектОтчет.КонецПериода));
	Иначе
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ЭквивалентнаяВалюта", ?(ЗначениеЗаполнено(ОбъектОтчет.ЭквивалентнаяВалюта), ОбъектОтчет.ЭквивалентнаяВалюта, УЧ_Сервер.НациональнаяВалюта()));
	ДатаКон = ?(ЗначениеЗаполнено(ОбъектОтчет.КонецПериода), ОбъектОтчет.КонецПериода, ТекущаяДата());
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ДатаКурса", ДатаКон);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ВключенПривилегированныйРежим", ОбъектОтчет.ВключенПривилегированныйРежим);
	
	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Структура[0].Отбор, "ПериодГруппировки",,ВидСравненияКомпоновкиДанных.Заполнено);
	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Структура[0].Структура[0].Отбор, "Регистратор",,ВидСравненияКомпоновкиДанных.Заполнено);
	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный.Настройки.Структура[1].Структура[0].Отбор, "Регистратор",,ВидСравненияКомпоновкиДанных.Заполнено);

	СтандартныеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Структура[0], "ВыводитьОтбор", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Структура[0].Структура[0], "ВыводитьОтбор", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекПроизвольный.Настройки.Структура[1].Структура[0], "ВыводитьОтбор", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);

	Если ОбъектОтчет.Периодичность = 0 Тогда
		КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Использование = Ложь;
		КомпоновщикНастроекПроизвольный.Настройки.Структура[1].Использование = Истина;
	Иначе
		КомпоновщикНастроекПроизвольный.Настройки.Структура[0].Использование = Истина;
		КомпоновщикНастроекПроизвольный.Настройки.Структура[1].Использование = Ложь;
	КонецЕсли;
	
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "Периодичность", ОбъектОтчет.Периодичность);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ПС", Символы.ПС);
	
	Если ЗначениеЗаполнено(ОбъектОтчет.Подразделение) Тогда
		СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный, "Подразделение", ОбъектОтчет.Подразделение,,, Истина);
	КонецЕсли;
	
	ЛинияСплошная = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	ТекущийНаборПоказателей = "" + ОбъектОтчет.ПоказательБУ + ОбъектОтчет.ПоказательВалютнаяСумма + ОбъектОтчет.ПоказательКоличество + ОбъектОтчет.ПоказательКрахмал + ОбъектОтчет.ПоказательЦена + ОбъектОтчет.ПоказательКурс;
		
	//Если ТекущийНаборПоказателей <> мТекущийНаборПоказателей Тогда
		
		МассивМакетов = Новый Массив;
		МассивМакетов.Добавить("ПериодГруппировкиЗаголовок"); 
		МассивМакетов.Добавить("ОбщиеИтогиЗаголовок");
		МассивМакетов.Добавить("ОбщиеИтогиПодвал");
		МассивМакетов.Добавить("ПроводкиЗаголовок");	
			
		Для Каждого ЭлементМакет Из МассивМакетов Цикл
			Схема.Макеты[ЭлементМакет].Макет = УправленческийУчетПовтИсп.ПолучитьКопиюОписанияМакета(Схема.Макеты[ЭлементМакет + "Образец"].Макет);
			ОписаниеМакета = Схема.Макеты[ЭлементМакет].Макет;
			
			МассивСтрокДляУдаления = Новый Массив;
			Индекс = 0;
			Для Каждого ЭлементМассива Из ОбъектОтчет.НаборПоказателей Цикл
				Если Не ОбъектОтчет["Показатель" + ?(ТипЗнч(ЭлементМассива) = Тип("КлючИЗначение"), ЭлементМассива.Ключ, ЭлементМассива)] Тогда 
					МассивСтрокДляУдаления.Добавить(ОписаниеМакета[Индекс]);
				КонецЕсли;
				Индекс = Индекс + 1;
			КонецЦикла;	
			
			Для Каждого Строка Из МассивСтрокДляУдаления Цикл
				ОписаниеМакета.Удалить(Строка);
			КонецЦикла;
			
			КоличествоСтрок = ОписаниеМакета.Количество();
			
			// Обвести область
			Если КоличествоСтрок > 0 Тогда
				Для Индекс = 0 По 12 Цикл
					ПоследняяСтрока = ?(ЭлементМакет = "ОбщиеИтогиПодвал" И Индекс < 4, 0, КоличествоСтрок - 1);
					ПараметрГраницы = СтандартныеОтчетыКлиентСервер.ПолучитьПараметр(ОписаниеМакета[0].Ячейки[Индекс].Оформление.Элементы, "СтильГраницы");
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ПараметрГраницы.ЗначенияВложенныхПараметров, "СтильГраницы.Сверху", ЛинияСплошная);
					ПараметрГраницы = СтандартныеОтчетыКлиентСервер.ПолучитьПараметр(ОписаниеМакета[ПоследняяСтрока].Ячейки[Индекс].Оформление.Элементы, "СтильГраницы");
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ПараметрГраницы.ЗначенияВложенныхПараметров, "СтильГраницы.Снизу", ЛинияСплошная);	
				КонецЦикла;
			КонецЕсли;
			
			Для Индекс = 1 По КоличествоСтрок - 1 Цикл
				ОписаниеМакета[Индекс].Ячейки[0].Элементы.Очистить();	
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[0].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[0].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[1].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[1].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[1].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[2].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[2].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[2].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[3].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[3].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[3].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				Если ЭлементМакет = "ПроводкиЗаголовок" Тогда
					ОписаниеМакета[Индекс].Ячейки[5].Элементы.Очистить();
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[5].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[5].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
					ОписаниеМакета[Индекс].Ячейки[8].Элементы.Очистить();
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[8].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[8].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		мТекущийНаборПоказателей = ТекущийНаборПоказателей;
	//КонецЕсли;
	
	Если Не ОбъектОтчет.ПоказательБУ Тогда
		//Если ТипЗнч(ОбъектОтчет) = Тип("Структура") Тогда
		//	ГруппаОтборов = ОбъектОтчет.КомпоновщикНастроекОтбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		//Иначе	
			ГруппаОтборов = КомпоновщикНастроекПроизвольный.Настройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		//КонецЕсли; 
		ГруппаОтборов.Использование = Истина;
		ГруппаОтборов.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		Для Каждого ЭлементМассива2 Из ОбъектОтчет.НаборПоказателей Цикл
			ЭлементМассива = ?(ТипЗнч(ЭлементМассива2) = Тип("КлючИЗначение"), ЭлементМассива2.Ключ, ЭлементМассива2);
			Если ЭлементМассива <> "БУ" И ОбъектОтчет["Показатель" + ЭлементМассива] Тогда
				СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, ЭлементМассива + "Дт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
				СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, ЭлементМассива + "Кт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектОтчет.Организация) Тогда
		НовыйОтбор = СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный, "Организация", ОбъектОтчет.Организация,,, Истина);
		НовыйОтбор.Представление = "###ОтборПоОрганизации###"; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектОтчет.СценарийПлана) Тогда
		НовыйОтбор = СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный, "СценарийПлана", ОбъектОтчет.СценарийПлана,,, Истина);
		НовыйОтбор.Представление = "###ОтборПоСценариюПлана###"; 
	КонецЕсли;

	
	Если ТипЗнч(ОбъектОтчет) = Тип("Структура") Тогда
		ОбъектОтчет.КомпоновщикНастроек = КомпоновщикНастроекПроизвольный;
	КонецЕсли; 	
	
КонецПроцедуры
					
Процедура ПослеКомпоновкиМакета(МакетКомпоновки, ОбъектОтчет) Экспорт
	
	КоличествоПоказателей = УправленческийУчетПовтИсп.КоличествоПоказателей(ОбъектОтчет);
	
	// Если показатель один, то удалим столбик "Показатель"
	Если КоличествоПоказателей = 1 Тогда
		Для Каждого Макет Из МакетКомпоновки.Макеты Цикл
			Для Каждого СтрокаМакета Из Макет.Макет Цикл
				Если СтрокаМакета.Ячейки.Количество() > 4 Тогда
					СтрокаМакета.Ячейки.Удалить(СтрокаМакета.Ячейки[4]);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	МакетПроводки = УправленческийУчетПовтИсп.ПолучитьМакетГруппировкиПоПолюГруппировки(МакетКомпоновки, "Проводки", Истина);
	
	Если МакетПроводки.Количество() = 1 Тогда
		МакетПроводки = МакетПроводки[0];
		ИмяМакетПроводок = МакетПроводки.Имя;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(Результат, ОбъектОтчет) Экспорт
	
	//считаем текущее сальдо расчетным методом
	КоличествоПоказателей = 0;
	Если ОбъектОтчет.ПоказательБУ Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	Если ОбъектОтчет.ПоказательКоличество Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	Если ОбъектОтчет.ПоказательКрахмал Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	Если ОбъектОтчет.ПоказательВалютнаяСумма Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	Если ОбъектОтчет.ПоказательЦена Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	Если ОбъектОтчет.ПоказательКурс Тогда
		КоличествоПоказателей = КоличествоПоказателей + 1;
	КонецЕсли;
	
	ТолькоВалюта = ОбъектОтчет.ПоказательВалютнаяСумма И КоличествоПоказателей = 1;
	Смещение = ?(КоличествоПоказателей > 1, 1, 0);
	ТекСтолбецДт = 6;
	ТекСтолбецКт = 9;
	ТекСтолбецПризнак = 11;
	ТекСтолбецСумма = 12;
	
	ТекЗначение = Результат.Область("R1C1").Текст;
	ТекСальдо = Новый Массив(5);
	Префикс = Новый Массив(5);
	ТекСтрока = 1;
	НачинатьОбсчет = Ложь;
	КоличествоПустыхСтрокПодряд = 0;
	Пока КоличествоПустыхСтрокПодряд < 10 Цикл  // НЕ ТекЗначение = "Обороты за период и сальдо на конец" И
		Если ТекЗначение = "Сальдо на начало" Тогда
			Для Индекс = 0 По КоличествоПоказателей - 1 Цикл
				Попытка
					ТекСальдо[Индекс] = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецСумма + Смещение, "ЧГ=0")).Текст);
				Исключение
					ТекСальдо[Индекс] = 0;
				КонецПопытки;
				
				Если ОбъектОтчет.Счет.Вид = ВидСчета.Пассивный Тогда
					ТекСальдо[Индекс] = -ТекСальдо[Индекс];
				Иначе
					ТекСальдо[Индекс] = ?(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецПризнак + Смещение, "ЧГ=0")).Текст = "Д", ТекСальдо[Индекс], -ТекСальдо[Индекс]);
				КонецЕсли;
			КонецЦикла;
			КоличествоПустыхСтрокПодряд = 0;
			НачинатьОбсчет = Истина;
		ИначеЕсли НЕ ПустаяСтрока(ТекЗначение) И НачинатьОбсчет Тогда
			Для Индекс = 0 По КоличествоПоказателей - 1 Цикл
				ПоказательДляРассчетаЦен = Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C5").Текст;
				Попытка
					ЗначениеДт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецДт + ?(ПоказательДляРассчетаЦен = "Вал." ИЛИ ТолькоВалюта, Смещение + 1, Смещение), "ЧГ=0")).Текст);
				Исключение
					ЗначениеДт = 0;
				КонецПопытки;
				
				Попытка
					ЗначениеКт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецКт + ?(ПоказательДляРассчетаЦен = "Вал." ИЛИ ТолькоВалюта, Смещение + 1, Смещение), "ЧГ=0")).Текст);
				Исключение
					ЗначениеКт = 0;
				КонецПопытки;
				ТекСальдо[Индекс] = ТекСальдо[Индекс] + ЗначениеДт - ЗначениеКт;
				//{
				Если ПоказательДляРассчетаЦен = "УУ" Тогда
					СуммаРасч = ТекСальдо[Индекс];
				ИначеЕсли ПоказательДляРассчетаЦен = "Кол." Тогда
					КоличествоРасч = ТекСальдо[Индекс];
				ИначеЕсли ПоказательДляРассчетаЦен = "Вал." Тогда
					СуммаВал = ТекСальдо[Индекс];
				ИначеЕсли ПоказательДляРассчетаЦен = "Цена" Тогда
					Попытка
						ТекСальдо[Индекс] = ?(КоличествоРасч = 0, 0, СуммаРасч / КоличествоРасч);
					Исключение
						ТекСальдо[Индекс] = 0;
					КонецПопытки;	
				ИначеЕсли ПоказательДляРассчетаЦен = "Курс" Тогда
					Попытка
						ТекСальдо[Индекс] = ?(СуммаВал = 0, 0, СуммаРасч / СуммаВал);
					Исключение
						ТекСальдо[Индекс] = 0;
					КонецПопытки;	
				КонецЕсли;	
				Если ТекЗначение = "Обороты за период и сальдо на конец" Тогда
					Если ПоказательДляРассчетаЦен = "УУ" Тогда
						Попытка 
							СуммаОборотРасчДт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецДт, "ЧГ=0")).Текст);
							СуммаОборотРасчКт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецКт, "ЧГ=0")).Текст);
						Исключение
							СуммаОборотРасчДт = 0;
							СуммаОборотРасчКт = 0;
						КонецПопытки;	
					ИначеЕсли ПоказательДляРассчетаЦен = "Кол." Тогда
						Попытка 
							КоличествоОборотРасчДт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецДт, "ЧГ=0")).Текст);
							КоличествоОборотРасчКт = Число(Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецКт, "ЧГ=0")).Текст);
						Исключение
							КоличествоОборотРасчДт = 0;
							КоличествоОборотРасчКт = 0;
						КонецПопытки;	
					ИначеЕсли ПоказательДляРассчетаЦен = "Цена" Тогда
						Попытка
							Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецДт, "ЧГ=0")).Текст = ?(КоличествоОборотРасчДт = 0, 0, СуммаОборотРасчДт / КоличествоОборотРасчДт);
							Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецКт, "ЧГ=0")).Текст = ?(КоличествоОборотРасчКт = 0, 0, СуммаОборотРасчКт / КоличествоОборотРасчКт);
						Исключение
							Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецДт, "ЧГ=0")).Текст = 0;
							Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецКт, "ЧГ=0")).Текст = 0;
						КонецПопытки;	
					КонецЕсли;
				КонецЕсли;	
				//}
				
				Если ОбъектОтчет.Счет.Вид = ВидСчета.Активный Тогда
					Префикс[Индекс] = "Д";
					Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецСумма + Смещение, "ЧГ=0")).Текст = ТекСальдо[Индекс];
				ИначеЕсли ОбъектОтчет.Счет.Вид = ВидСчета.Пассивный Тогда
					Префикс[Индекс] = "К";
					Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецСумма + Смещение, "ЧГ=0")).Текст = -ТекСальдо[Индекс];
				Иначе
					Префикс[Индекс] = ?(ТекСальдо[Индекс]>=0, "Д", "К");
					Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецСумма + Смещение, "ЧГ=0")).Текст = ?(ТекСальдо[Индекс]>=0, ТекСальдо[Индекс], -ТекСальдо[Индекс]);
				КонецЕсли;
				Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецПризнак + Смещение, "ЧГ=0")).Текст = Префикс[Индекс];
				Результат.Область("R" + Формат(ТекСтрока + Индекс, "ЧГ=0") + "C" + Формат(ТекСтолбецСумма + Смещение, "ЧГ=0")).ВыделятьОтрицательные = Истина;
			КонецЦикла;
			КоличествоПустыхСтрокПодряд = 0;
		ИначеЕсли ПустаяСтрока(ТекЗначение) Тогда
			КоличествоПустыхСтрокПодряд = КоличествоПустыхСтрокПодряд + 1;	
		КонецЕсли;
		
		ТекСтрока = ТекСтрока + 1;	
		ТекЗначение = Результат.Область("R" + Формат(ТекСтрока, "ЧГ=0") + "C1").Текст;
	КонецЦикла;
	//закончили считать тек сальдо
	
	
	УправленческийУчетПовтИсп.ОбработкаРезультатаОтчета(ОбъектОтчет, Результат);

	Если Результат.Области.Найти("Заголовок") = Неопределено Тогда
		Результат.ФиксацияСверху = 2;
	Иначе
		Результат.ФиксацияСверху = Результат.Области.Заголовок.Низ + 2;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправленческийУчетПовтИсп.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

НаборПоказателей = Новый Массив;
НаборПоказателей.Добавить("БУ");
НаборПоказателей.Добавить("ВалютнаяСумма");
НаборПоказателей.Добавить("Количество");
НаборПоказателей.Добавить("Крахмал");
НаборПоказателей.Добавить("Цена");
НаборПоказателей.Добавить("Курс");
//НаборПоказателей.Добавить("ВР");