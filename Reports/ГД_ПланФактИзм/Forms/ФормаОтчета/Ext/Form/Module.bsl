
&НаСервере
Функция ПараметрыРасшифровки(Расшифровка)
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	ДР = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	Эл = ДР.Элементы.Получить(Расшифровка);
	ИмяПоля = Эл.ПолучитьПоля()[0].Поле;   
	Строка = Эл.ПолучитьРодителей()[0];
	Статья = Строка.ПолучитьПоля()[0].Значение;
	ВидДеятельности = Строка.ПолучитьРодителей()[0].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ТипЗнч(ВидДеятельности) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств")  Тогда
		ВидДеятельности = ""
	КонецЕсли;
	
	ДенежныеСчета = Новый Массив;
	
	ПериодОтчета = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	ДатаНачалаОтчета = ПериодОтчета.ДатаНачала;
	ДатаКонцаОтчета = ПериодОтчета.ДатаОкончания;
	
	//Если ИмяПоля = "План" ИЛИ ИмяПоля = "ПланМес"  ИЛИ ИмяПоля = "ПланКорр" ИЛИ ИмяПоля = "Факт"  Тогда
	//			
	//	Попытка
	//		Столбец = Эл.ПолучитьРодителей()[1];
	//		Подразделение = Столбец.ПолучитьПоля()[0].Значение;
	//	Исключение
	//		Подразделение = "Итоги";
	//	КонецПопытки;	
	//				
	//	Подразделение = "Итоги";
	//КонецЕсли;
	
	Если ИмяПоля = "План" ИЛИ ИмяПоля = "ПланМес"  ИЛИ ИмяПоля = "ПланКорр" ИЛИ ИмяПоля = "Факт" ИЛИ ИмяПоля = "ИтогПланСтКорр" ИЛИ ИмяПоля = "ИтогПланСтМес" ИЛИ ИмяПоля = "ИтогПланСт" ИЛИ ИмяПоля = "ИтогФактСт"   
		Тогда
		
			Если ИмяПоля = "Факт" ИЛИ ИмяПоля = "ИтогФактСт"  
				Тогда
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5002());
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5102());
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ЛицевыеСчета);
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ДепозитныеСчета);
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5501());
				    ДенежныеСчета.Добавить(ПланыСчетов.Учетный.ВиртуальныйРасчетныйСчет);
					Сценарий1 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
				Иначе
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
					ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());	
				
					Сценарий1 = Новый Массив;
					
					Если ИмяПоля = "План" ИЛИ ИмяПоля = "ИтогПланСт" Тогда
						
						АктуальныеСцКВ = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, "Кв");
			
						Для Каждого Элемент Из АктуальныеСцКВ Цикл
							Сценарий1.Добавить(Элемент);
						КонецЦикла;
						
					КонецЕсли; 
					
					Если ИмяПоля = "ПланМес" ИЛИ ИмяПоля = "ИтогПланСтМес" Тогда

						АктуальныеСцМес = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, "Мес");
			
						Для Каждого Элемент Из АктуальныеСцМес Цикл
							Сценарий1.Добавить(Элемент);
						КонецЦикла;
						
					КонецЕсли; 
					
					Если ИмяПоля = "ПланКорр" ИЛИ ИмяПоля = "ИтогПланСтКорр" Тогда
						
						АктуальныеСцКВ = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, "Кв");
			
						Для Каждого Элемент Из АктуальныеСцКВ Цикл
							Сценарий1.Добавить(Элемент);
						КонецЦикла;
						
						АктуальныеСцМес = БюджетныйНаСервере.СписокАктуальныхСценариев(ДатаНачалаОтчета, "Мес");
			
						Для Каждого Элемент Из АктуальныеСцМес Цикл
							Сценарий1.Добавить(Элемент);
						КонецЦикла;
						
						Сценарий1.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
						
					КонецЕсли;  
					
			КонецЕсли; 
	
			Попытка
				Столбец = Эл.ПолучитьРодителей()[1];
				Подразделение_Предприятие = Столбец.ПолучитьПоля()[0].Значение;
				//подразделение
				Если ТипЗнч(Подразделение_Предприятие.ссылка) = Тип("СправочникСсылка.СтруктураПредприятия")  Тогда
					Подразделение = Подразделение_Предприятие;
			    	Предприятие =  Подразделение.Владелец;
				КонецЕсли; 
				//предприятие
				Если ТипЗнч(Подразделение_Предприятие.ссылка) = Тип("СправочникСсылка.Предприятия")  Тогда
					Предприятие = Подразделение_Предприятие;
			    	Подразделение = Неопределено;
				КонецЕсли; 
			Исключение
				Подразделение_Предприятие = Неопределено;
				Предприятие = БюджетныйНаСервере.ПолучитьПредприятия();
			    Подразделение = Неопределено;
			КонецПопытки;	
						
	КонецЕсли;
		 
	СтруктураРасшифровки = Новый Структура;
	
	СтруктураРасшифровки.Вставить("Отчет", "Отчеты.Д_Расшифровка");
	СтруктураРасшифровки.Вставить("Счет", ДенежныеСчета);
	СтруктураРасшифровки.Вставить("Сценарий1", Сценарий1);
	СтруктураРасшифровки.Вставить("Субконто1", Статья);
	СтруктураРасшифровки.Вставить("Дата1", 	ДатаНачалаОтчета);
	СтруктураРасшифровки.Вставить("Дата2", ДатаКонцаОтчета);
	СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
	СтруктураРасшифровки.Вставить("Предприятие", Предприятие);
	СтруктураРасшифровки.Вставить("Подразделение", Подразделение);
	//СтруктураРасшифровки.Вставить("Взаиморасчеты", Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Значение);		
	//ОбластьДанныеСтолбцы.Параметры.Расшифровка = СтруктураРасшифровки;
	
	Возврат СтруктураРасшифровки;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
    ПараметрыПередачи = ПараметрыРасшифровки(Расшифровка);
	
	БюджетныйНаКлиенте.РасшифроватьСумму(Элемент, ПараметрыПередачи);	

	// закомментировано 08.02.2012
	
	//Если ПараметрыПередачи.ПланФакт = "Факт" ИЛИ ПараметрыПередачи.ПланФакт = "ИтогФактСт" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаФакт.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "ПланМес"  ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСтМес" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПланМес.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "ПланКорр"   ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСтКорр" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПланКорр.Форма",,,Истина);
	//ИначеЕсли ПараметрыПередачи.ПланФакт = "План"  ИЛИ ПараметрыПередачи.ПланФакт = "ИтогПланСт" Тогда
	//	Карточка = ПолучитьФорму("Отчет.ГД_РасшифровкаПлан.Форма",,,Истина);
	//КонецЕсли;
	//	
	//
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение = ДатаНачалаОтчета;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Использование = Истина;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение = ДатаКонцаОтчета;
	////Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование = Истина;
	//Если   ПараметрыПередачи.Подразделение = "Итоги" Тогда
	//	Если Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование = Ложь  Тогда
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Ложь;
	//	Иначе
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ПравоеЗначение = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ПравоеЗначение;
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ВидСравнения =  Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].ВидСравнения;
	//		Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Истина;
	//	КонецЕсли;
	//Иначе
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ПравоеЗначение = ПараметрыПередачи.Подразделение;
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].ВидСравнения =  ВидСравненияКомпоновкиДанных.Равно;
	//	Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование = Истина;
	//КонецЕсли;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Использование = Ложь;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].ПравоеЗначение = ПараметрыПередачи.Статья;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	//Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Использование = Истина;
	//Если  ПараметрыПередачи.ВидДеятельности = "" Тогда
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование = Ложь;
	//Иначе
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].ПравоеЗначение = ПараметрыПередачи.ВидДеятельности;
	// 	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	 Карточка.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование = Истина;
	//КонецЕсли;
	//Карточка.СкомпоноватьРезультат();
	//Карточка.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	ЭтаФорма.СкомпоноватьРезультат();
КонецПроцедуры
