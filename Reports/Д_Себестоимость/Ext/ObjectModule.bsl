
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	ДокументРезультат.Очистить();
	
	ПараметрКоманды = ПолучитьПараметрыКоманды();	
	
	Если Не ЗначениеЗаполнено(ПараметрКоманды.Предприятие) Тогда
		Сообщить("Укажите предприятия.");
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	//ПараметрКоманды.Вставить("Номенклатура", Номенклатура);
	
	//МассивПредприятий = Новый Массив;
	//Для каждого ТекПредприятие Из Предприятие Цикл
	//	Если ТекПредприятие.Пометка Тогда
	//		МассивПредприятий.Добавить(ТекПредприятие.Значение);
	//	КонецЕсли;
	//КонецЦикла; 
	//ПараметрКоманды.Вставить("Предприятие", Предприятие);
	
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[9].Использование И  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[9].Значение = Истина Тогда
		ТЗ = ЗаполнитьТаблицуГоризонтальныйВид(ДокументРезультат, ПараметрКоманды)
	Иначе
		ЗаполнитьТаблицу(ДокументРезультат, ПараметрКоманды);
	КонецЕсли;	
		
	ДокументРезультат.ОтображатьСетку = Ложь;
	ДокументРезультат.Защита = Ложь;
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.ОтображатьЗаголовки = Истина;
	ДокументРезультат.ОтображатьГруппировки = Истина;
	ДокументРезультат.АвтоМасштаб = Истина;

		
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры


Функция ОпределитьКвартал(НомерМесяца)
	
	Если НомерМесяца / 3 <= 1 Тогда
		Возврат 1;
	ИначеЕсли НомерМесяца / 3 > 1 И НомерМесяца / 3 <= 2 Тогда 
		Возврат 2;
	ИначеЕсли  НомерМесяца / 3 > 2 И НомерМесяца / 3 <= 3 Тогда
		Возврат 3;
	ИначеЕсли НомерМесяца / 3 > 3 И НомерМесяца / 3 <= 4 Тогда
		Возврат 4;	
	КонецЕсли; 
	
КонецФункции // ()


Функция ДобавитьЗатратыНаПростой(ТЗ, Регистр1, Регистр2, ПланСчетов1, ПланСчетов2, ДатаНач,
	
	ДатаКон, СписокПредприятий, СчетчикМесяцев, КоэффициентОтступа, НачалоПериода, ВсегоПериодов, КлючПериод, ПараметрКоманды)
	Простой = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
	|	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
	|	ВЫБОР
	|		КОГДА " + КлючПериод + "(ДанныеСценарий1.Период) ЕСТЬ NULL 
	|			ТОГДА " + КлючПериод + "(ДанныеСценарий2.Период)
	|		ИНАЧЕ " + КлючПериод + "(ДанныеСценарий1.Период)
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеСценарий1.Субконто1 ЕСТЬ NULL 
	|			ТОГДА ДанныеСценарий2.Субконто1
	|		ИНАЧЕ ДанныеСценарий1.Субконто1
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА ДанныеСценарий1.Субконто1.Родитель ЕСТЬ NULL 
	|			ТОГДА ДанныеСценарий2.Субконто1.Родитель
	|		ИНАЧЕ ДанныеСценарий1.Субконто1.Родитель
	|	КОНЕЦ КАК Родитель1,
	|	ВЫБОР
	|		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
	|			ТОГДА ДанныеСценарий2.Предприятия
	|		ИНАЧЕ ДанныеСценарий1.Предприятия
	|	КОНЕЦ КАК Предприятия
	|ПОМЕСТИТЬ Затраты
	|ИЗ
	|	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	|			&Дата1,
	|			&Дата2,
	|			" + КлючПериод + ",
	|			Счет = &Счет,
	|			,
	|			Предприятия В ИЕРАРХИИ (&Предприятия)
	|				И СценарийПлана В (&Сценарий1),
	|			КорСчет В ИЕРАРХИИ (&КорСчет),
	|			) КАК ДанныеСценарий1
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	|				&Дата1,
	|				&Дата2,
	|				" + КлючПериод + ",
	|				Счет = &Счет2,
	|				,
	|				Предприятия В ИЕРАРХИИ (&Предприятия)
	|					И СценарийПлана = &Сценарий2,
	|				КорСчет В ИЕРАРХИИ (&КорСчет2),
	|				) КАК ДанныеСценарий2
	|		ПО ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
	|			И (" + КлючПериод + "(ДанныеСценарий1.Период) = " + КлючПериод + "(ДанныеСценарий2.Период))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Статья,
	|	ЕСТЬNULL(Затраты.Сумма1, 0) КАК Сумма1,
	|	ЕСТЬNULL(Затраты.Сумма2, 0) КАК Сумма2,
	|	ЕСТЬNULL(Затраты.Период, 0) КАК Период,
	|	СтатьиЗатрат.ЭтоГруппа,
	|	Затраты.Предприятия
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|		ЛЕВОЕ СОЕДИНЕНИЕ Затраты КАК Затраты
	|		ПО (СтатьиЗатрат.Ссылка = Затраты.Статья
	|				ИЛИ СтатьиЗатрат.Ссылка = Затраты.Родитель1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьиЗатрат.Код";
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", ПараметрКоманды.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("25"));
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("91"));
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.НайтиПоКоду("25"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("91"));
	//Запрос.УстановитьПараметр("ЗатратыРеализация", Справочники.ИздержкиОбращения.ЗатратыРеализация);
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ЗаполнитьТаблицу(ТабДок, ПараметрКоманды) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт(), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.СценарийФакт(), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт(), "Учетный", "Учетный");
	Регистр2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.СценарийФакт(), "Учетный", "Учетный");
	
	// вывод предприятий по алфавиту
	ТЗ_ПредприятияСорт = Новый ТаблицаЗначений;
	ТЗ_ПредприятияСорт.Колонки.Добавить("Предпр");
	
	Для Каждого Эл Из ПараметрКоманды.Предприятие Цикл
		
		НСтр = ТЗ_ПредприятияСорт.Добавить();
		НСтр.Предпр = Эл;
		
	КонецЦикла;
	
	ТЗ_ПредприятияСорт.Сортировать("Предпр Возр");
	
	ПараметрКоманды.Предприятие.Очистить();
	
	Для Каждого Стр Из ТЗ_ПредприятияСорт Цикл
		ПараметрКоманды.Предприятие.Добавить(Стр.Предпр);
	КонецЦикла;
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	
	Для Кол = 1 По 100 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Попытка
	    ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_Себестоимость");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_Себестоимость;
	КонецПопытки;
	
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий1) и  НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетПланФакт");
	иначе
		Макет = ЭтотОбъект2.ПолучитьМакет("Макет");
	КонецЕсли; 
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|СтолбецНачало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбца");
	ОбластьОбъем = Макет.ПолучитьОбласть("ШапкаОбъем|СтолбецНачало");
	//ОбластьОбъемСтолбцы = Макет.ПолучитьОбласть("ШапкаОбъем|ДанныеСтолбца");
	ОбластьКрасота = Макет.ПолучитьОбласть("Строка5|СтолбецНачало");
	ОбластьКрасотаСтолбцы = Макет.ПолучитьОбласть("Строка5|ДанныеСтолбца");
	
	Если ПараметрКоманды.Знака2 Тогда
		Уч = "Уч";
	Иначе
		Уч = "";	
	КонецЕсли;
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Интервал = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, 1, 
	?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ПараметрКоманды.Период.ДатаНачала),?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ПараметрКоманды.Период.ДатаНачала)), Год(ПараметрКоманды.Период.ДатаНачала)));
	
	КонецПериода = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ПараметрКоманды.Период.ДатаОкончания),?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ПараметрКоманды.Период.ДатаОкончания)), Год(ПараметрКоманды.Период.ДатаОкончания)));
	
	
	Если КонецПериода < НачалоПериода Тогда
		НачалоПериода = НачалоПериода - 12;	
	КонецЕсли;
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	СписокПредприятий = ПараметрКоманды.Предприятие;
	
	//Для каждого Т Из ПараметрКоманды.Предприятие Цикл
	//	Если Т.Пометка Тогда
	//		СписокПредприятий.Добавить(Т.Значение);
	//	КонецЕсли; 
	//КонецЦикла;
	
	
	//Предпр = Т.Значение;
	ДатаНач = ПараметрКоманды.Период.ДатаНачала;
	ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	КоэффициентОтступа = 0;
	
	Если ПустаяСтрока(ПараметрКоманды.Номенклатура) И ТипЗнч(ПараметрКоманды.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		УсловиеКорНоменклатура = "Истина";
		УсловиеНоменклатура = "Истина";
	ИначеЕсли ПараметрКоманды.Номенклатура = Неопределено Тогда
		УсловиеКорНоменклатура = "КорСубконто1.ТипНоменклатуры = &ТипНоменклатуры";
		УсловиеНоменклатура = "Субконто1.ТипНоменклатуры = &ТипНоменклатуры";
	Иначе
		УсловиеКорНоменклатура = "КорСубконто1 В ИЕРАРХИИ (&Номенклатура)";
		УсловиеНоменклатура = "Субконто1 В ИЕРАРХИИ (&Номенклатура)";
	КонецЕсли;	
	
	//считаем переменные затраты и НЗВ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Данные.Материал ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Материал
	               |		ИНАЧЕ Данные.Материал
	               |	КОНЕЦ КАК Материал,
	               |	ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0) КАК Сумма1,
	               |	ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) КАК Количество1,
	               |	ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0) КАК Сумма2,
	               |	ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА Данные.Номенклатура ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Номенклатура
	               |		ИНАЧЕ Данные.Номенклатура
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА Данные.Период ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Период
	               |		ИНАЧЕ Данные.Период
	               |	КОНЕЦ КАК Период,
	               |	ВЫБОР
	               |		КОГДА Данные.СтатьяЗатрат ЕСТЬ NULL 
	               |			ТОГДА НЗВ.СтатьяЗатрат
	               |		ИНАЧЕ Данные.СтатьяЗатрат
	               |	КОНЕЦ КАК СтатьяЗатрат,
	               |	ВЫБОР
	               |		КОГДА Данные.Предприятия ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Предприятия
	               |		ИНАЧЕ Данные.Предприятия
	               |	КОНЕЦ КАК Предприятия,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0)) / (ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена1,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0)) / (ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена2,
	               |	Неопределено КАК МатериалФерменты
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Субконто1
	               |			ИНАЧЕ Сценарий1.Субконто1
	               |		КОНЕЦ КАК Материал,
	               |		-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК Сумма1,
	               |		-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК Количество1,
	               |		-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК Сумма2,
	               |		-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК Количество2,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто1
	               |			ИНАЧЕ Сценарий1.КорСубконто1
	               |		КОНЕЦ КАК Номенклатура,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Предприятия
	               |			ИНАЧЕ Сценарий1.Предприятия
	               |		КОНЕЦ КАК Предприятия,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто2 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто2
	               |			ИНАЧЕ Сценарий1.КорСубконто2
	               |		КОНЕЦ КАК СтатьяЗатрат,
	               |		ВЫБОР
	               |			КОГДА " + КлючПериод + "(Сценарий1.Период) ЕСТЬ NULL 
	               |				ТОГДА " + КлючПериод + "(Сценарий2.Период)
	               |			ИНАЧЕ " + КлючПериод + "(Сценарий1.Период)
	               |		КОНЕЦ КАК Период
	               |	ИЗ
	               |		РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				" + КлючПериод + ",
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана В (&Сценарий1)
	               |					И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И КорСубконто2 В (&ОсновноеСырье)
	               |					И " + УсловиеКорНоменклатура + ",
	               |				КорСчет В (&КорСчет),
	               |				) КАК Сценарий1
	               |			ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
	               |					" + КлючПериод + ",
	               |					Счет В (&Счет2),
	               |					,
	               |					СценарийПлана = &Сценарий2
	               |						И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И КорСубконто2 В (&ОсновноеСырье)
	               |						И " + УсловиеКорНоменклатура + ",
	               |					КорСчет В (&КорСчет2),
	               |					) КАК Сценарий2
	               |			ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |				И (" + КлючПериод + "(Сценарий1.Период) = " + КлючПериод + "(Сценарий2.Период))
	               |				И Сценарий1.Предприятия = Сценарий2.Предприятия
	               |				И Сценарий1.КорСубконто1 = Сценарий2.КорСубконто1
	               |				И Сценарий1.КорСубконто2 = Сценарий2.КорСубконто2) КАК Данные
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто1
	               |				ИНАЧЕ Сценарий1.Субконто1
	               |			КОНЕЦ КАК Номенклатура,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто2 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто2
	               |				ИНАЧЕ Сценарий1.Субконто2
	               |			КОНЕЦ КАК Материал,
	               |			-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК СуммаНЗВ1,
	               |			-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК КоличествоНЗВ1,
	               |			-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК СуммаНЗВ2,
	               |			-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК КоличествоНЗВ2,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Предприятия
	               |				ИНАЧЕ Сценарий1.Предприятия
	               |			КОНЕЦ КАК Предприятия,
	               |			ВЫБОР
	               |				КОГДА " + КлючПериод + "(Сценарий1.Период) ЕСТЬ NULL 
	               |					ТОГДА " + КлючПериод + "(Сценарий2.Период)
	               |				ИНАЧЕ " + КлючПериод + "(Сценарий1.Период)
	               |			КОНЕЦ КАК Период,
	               |			ВЫБОР
	               |				КОГДА (ВЫБОР
	               |						КОГДА Сценарий1.Субконто2.Счет10 ЕСТЬ NULL 
	               |							ТОГДА Сценарий2.Субконто2.Счет10
	               |						ИНАЧЕ Сценарий1.Субконто2.Счет10
	               |					КОНЕЦ).Код = ""10.02""
	               |					ТОГДА &ВспСырье
	               |				ИНАЧЕ &ОснСырье
	               |			КОНЕЦ КАК СтатьяЗатрат
	               |		ИЗ
	               |			РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
	               |					" + КлючПериод + ",
	               |					Счет В (&НЗВ),
	               |					,
	               |					Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И СценарийПлана В (&Сценарий1),
	               |					НЕ КорСчет В (&НЗВ),
	               |					) КАК Сценарий1
	               |				ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |						&Дата1,
	               |						&Дата2,
	               |						" + КлючПериод + ",
	               |						Счет В (&НЗВ2),
	               |						,
	               |						Предприятия В ИЕРАРХИИ (&Предприятия)
	               |							И СценарийПлана = &Сценарий2,
	               |						НЕ КорСчет В (&НЗВ2),
	               |						) КАК Сценарий2
	               |				ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |					И Сценарий1.Субконто2 = Сценарий2.Субконто2
	               |					И Сценарий1.Предприятия = Сценарий2.Предприятия
	               |					И (" + КлючПериод + "(Сценарий1.Период) = " + КлючПериод + "(Сценарий2.Период))) КАК НЗВ
	               |		ПО Данные.Предприятия = НЗВ.Предприятия
	               |			И Данные.Номенклатура = НЗВ.Номенклатура
	               |			И Данные.Период = НЗВ.Период
	               |			И Данные.Материал = НЗВ.Материал
	               |			И Данные.СтатьяЗатрат = НЗВ.СтатьяЗатрат
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СтатьяЗатрат,
	               |	МатериалФерменты,
	               |	Материал";
				   
		
	МассивОснЗатрат = Новый Массив;
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"));
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"));
	
	МассивСчетов1 = Новый Массив;
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.01"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.012"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.02"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.03"));
	
	МассивСчетов2 = Новый Массив;
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.01"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.012"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.02"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.03"));
	
	
	МассивСценариев1 = Новый Массив;
	МассивСценариев1.Добавить(ПараметрКоманды.Сценарий1);
	
	Если ПараметрКоманды.Корректировки И ПараметрКоманды.Сценарий1 <> Справочники.СценарииПланирования.СценарийФакт() Тогда
		//МассивСценариев1.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("ОснСырье", Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"));
	Запрос.УстановитьПараметр("ВспСырье", Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"));
	Запрос.УстановитьПараметр("Счет", МассивСчетов1);
	Запрос.УстановитьПараметр("Счет2", МассивСчетов2);
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("НЗВ", ПланСчетов1.НайтиПоКоду("НЗВ"));
	Запрос.УстановитьПараметр("НЗВ2", ПланСчетов2.НайтиПоКоду("НЗВ"));
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОсновноеСырье", МассивОснЗатрат);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатСырье = Запрос.Выполнить();
	ВыборкаСырье = РезультатСырье.Выбрать();
	
	
	//запрос на производимые номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Объем1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА Объем2.Субконто1
	               |		ИНАЧЕ Объем1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(Объем1.КоличествоОборотДт, 0) КАК Объем1,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) КАК Объем2,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) - ЕСТЬNULL(Объем1.КоличествоОборот, 0) КАК Объем3,
	               |	ВЫБОР
	               |		КОГДА " + КлючПериод + "(Объем1.Период) ЕСТЬ NULL 
	               |			ТОГДА " + КлючПериод + "(Объем2.Период)
	               |		ИНАЧЕ " + КлючПериод + "(Объем1.Период)
	               |	КОНЕЦ КАК Период,
	               |	ВЫБОР
	               |		КОГДА Объем1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА Объем2.Предприятия
	               |		ИНАЧЕ Объем1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			" + КлючПериод + ",
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В(&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК Объем1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				" + КлючПериод + ",
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК Объем2
	               |		ПО Объем1.Субконто1 = Объем2.Субконто1
	               |			И (" + КлючПериод + "(Объем1.Период) = " + КлючПериод + "(Объем2.Период))
	               |			И Объем1.Предприятия = Объем2.Предприятия
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Предприятия";
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатОбъемы = Запрос.Выполнить();
	
	
	//запрос по сценарию1 на расчет себестоимости
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
	               |	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
	               |	ВЫБОР
	               |		КОГДА " + КлючПериод + "(ДанныеСценарий1.Период) ЕСТЬ NULL 
	               |			ТОГДА " + КлючПериод + "(ДанныеСценарий2.Период)
	               |		ИНАЧЕ " + КлючПериод + "(ДанныеСценарий1.Период)
	               |	КОНЕЦ КАК Период,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2
	               |	КОНЕЦ КАК Статья,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2.Родитель
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
	               |	КОНЕЦ КАК Родитель1,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто1
	               |		ИНАЧЕ ДанныеСценарий1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Предприятия
	               |		ИНАЧЕ ДанныеСценарий1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			" + КлючПериод + ",
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В (&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК ДанныеСценарий1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				" + КлючПериод + ",
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК ДанныеСценарий2
	               |		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
	               |			И (" + КлючПериод + "(ДанныеСценарий1.Период) = " + КлючПериод + "(ДанныеСценарий2.Период))
	               |			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
	               |			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	                |	СтатьиЗатрат.Ссылка КАК Статья,
	                |	СтатьиЗатрат.ЭтоГруппа,
	                |	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
	                |	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
	                |	ЕСТЬNULL(Данные.Период, 0) КАК Период,
	                |	Данные.Номенклатура КАК Номенклатура,
	                |	Данные.Предприятия,
	                |	ВЫБОР
	                |		КОГДА СтатьиЗатрат.Ссылка В ИЕРАРХИИ (&ПрочиеРасходы)
	                |			ТОГДА ""ПрочиеЗатраты""
	                |		ИНАЧЕ ""ПроизводственныеЗатраты""
	                |	КОНЕЦ КАК ПризнакСтатьи
	                |ИЗ
	                |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
	                |		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
	                |				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	СтатьиЗатрат.Код,
	                |	Номенклатура";
	
	
	ЛишниеГруппыСтатей = Новый Массив;
	//ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.ЗатратыРеализация);
	//ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.УслугиУКГруппа);
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("40"));
	//Запрос.УстановитьПараметр("НаправлениеДеятельности", Справочники.НаправленияДеятельности.Строительное);
	Запрос.УстановитьПараметр("ПрочиеРасходы", Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);

	РезультатЗатраты = Запрос.Выполнить();
	//ВыборкаЗатраты = РезультатЗатраты.Выбрать();
	
	//считаем остатки готовой продукции на складе
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Субконто1
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК Сумма1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК Количество1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.СуммаНачальныйОстаток, 0) КАК Сумма2,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.КоличествоНачальныйОстаток, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Предприятия ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Предприятия
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Предприятия
	               |	КОНЕЦ КАК Предприятия,
	               |	ВЫБОР
	               |		КОГДА " + КлючПериод + "(БюджетныйОстаткиИОбороты.Период) ЕСТЬ NULL 
	               |			ТОГДА " + КлючПериод + "(БюджетныйОстаткиИОбороты1.Период)
	               |		ИНАЧЕ " + КлючПериод + "(БюджетныйОстаткиИОбороты.Период)
	               |	КОНЕЦ КАК Период
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".ОстаткиИОбороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			" + КлючПериод + ",
	               |			,
	               |			Счет В (&Счет),
	               |			,
	               |			СценарийПлана В(&Сценарий1)
	               |				И предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".ОстаткиИОбороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				" + КлючПериод + ",
	               |				,
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана = &Сценарий2
	               |					И предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты1
	               |		ПО БюджетныйОстаткиИОбороты.Субконто1 = БюджетныйОстаткиИОбороты1.Субконто1
	               |			И БюджетныйОстаткиИОбороты.Предприятия = БюджетныйОстаткиИОбороты1.Предприятия
	               |			И (" + КлючПериод + "(БюджетныйОстаткиИОбороты.Период) = " + КлючПериод + "(БюджетныйОстаткиИОбороты1.Период))";
	
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	
	РезультатОстатки = Запрос.Выполнить();
	//ВыборкаОстатки = РезультатОстатки.Выбрать();
	
	
	ВыборкаПростой = Ложь;
	
	//ВыборкаПростой = ДобавитьЗатратыНаПростой(ТЗ, Регистр1, Регистр2, ПланСчетов1,ПланСчетов2, 
	//	ДатаНач, ДатаКон, СписокПредприятий, СчетчикМесяцев, КоэффициентОтступа, НачалоПериода, ВсегоПериодов, КлючПериод, ПараметрКоманды);
	
	
	Для каждого Предпр Из СписокПредприятий Цикл
		
		ПереньНоменклатур = Новый Массив; //массив с неповторяющейся номенклатурой
		СчетчикНоменклатур = 0;
		
		//заполняем объемы
		ВыборкаОбъемы = РезультатОбъемы.Выбрать();
		СтруктураПоиска = Новый Структура("Предприятия", Предпр); 
		
		Пока ВыборкаОбъемы.НайтиСледующий(СтруктураПоиска) Цикл
			
			Если ПереньНоменклатур.Найти(ВыборкаОбъемы.Номенклатура) = Неопределено Тогда
				ПереньНоменклатур.Добавить(ВыборкаОбъемы.Номенклатура);
				СчетчикНоменклатур = СчетчикНоменклатур + 1;
			КонецЕсли;
			
		КонецЦикла;
		
		
		//ВыборкаОбъемы = РезультатОбъемы.Выбрать();
		Для каждого Номенклатура Из ПереньНоменклатур Цикл
			Вторичка = ?(ПустаяСтрока(Номенклатура), Истина, Номенклатура.ВторичнаяПереработка);
			
			Объем1 = Новый Массив(60);
			Объем2 = Новый Массив(60);
			ОстатокЦена1 = Новый Массив(60);
			ОстатокЦена2 = Новый Массив(60);
			ОстатокКол1 = Новый Массив(60);
			ОстатокКол2 = Новый Массив(60);
			
			Для т = 0 По 49 Цикл
				Объем1[т] = 0;
				Объем2[т] = 0;
				ОстатокЦена1[т] = 0;
				ОстатокЦена2[т] = 0;
				ОстатокКол1[т] = 0;
				ОстатокКол2[т] = 0;
			КонецЦикла;
			
			//вывод остатков ГП для Учета;
			СтруктураВыбораОбъемы = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);
			ВыборкаОстатки = РезультатОстатки.Выгрузить();
			
			ВыборкаОбъемы = РезультатОбъемы.Выбрать();
			
			Пока ВыборкаОбъемы.НайтиСледующий(СтруктураВыбораОбъемы) Цикл
				
				Если ВыборкаОстатки.Найти(ВыборкаОбъемы.Номенклатура, "Номенклатура") = Неопределено Тогда
					НоваяСтрока = ВыборкаОстатки.Добавить();
					НоваяСтрока.Номенклатура = ВыборкаОбъемы.Номенклатура;
					НоваяСтрока.Предприятия = ВыборкаОбъемы.Предприятия;
					НоваяСтрока.Количество1 = 0;
					НоваяСтрока.Количество2 = 0;
					НоваяСтрока.Сумма1 = 0;
					НоваяСтрока.Сумма2 = 0;
					НоваяСтрока.Период = ВыборкаОбъемы.Период;
				КонецЕсли;
				
			КонецЦикла;
			
			ОтобранныеСтроки = ВыборкаОстатки.НайтиСтроки(СтруктураВыбораОбъемы);
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				ВыбПер = ?(КонецПериода<ТекСтрока.Период, ТекСтрока.Период - 12, ТекСтрока.Период);
				
				СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);


				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 3;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка("Остаток на начало");
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "Остаток на начало " + Строка(Номенклатура) + ":";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрока.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрока.Сумма2;
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 2;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка("Количество");
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "Количество";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрока.Количество1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрока.Количество2;
				
				ОстатокЦ1 = ?(ТекСтрока.Количество1, ТекСтрока.Сумма1 / ТекСтрока.Количество1, 0);
				ОстатокЦ2 = ?(ТекСтрока.Количество2, ТекСтрока.Сумма2 / ТекСтрока.Количество2, 0);
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 2;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка("Цена");
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "Цена";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ОстатокЦ1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ОстатокЦ2;
				
				ОстатокЦена1[СчетчикМесяцев] = ОстатокЦ1;
				ОстатокЦена2[СчетчикМесяцев] = ОстатокЦ2;
				
				ОстатокКол1[СчетчикМесяцев] = ТекСтрока.Количество1;
				ОстатокКол2[СчетчикМесяцев] = ТекСтрока.Количество2;
				
				
			КонецЦикла;
			
			
			//вывод объемов производства;
			//СтруктураВыбораОбъемы = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);
			ВыборкаОбъемы = РезультатОбъемы.Выбрать();
			
			Пока ВыборкаОбъемы.НайтиСледующий(СтруктураВыбораОбъемы) Цикл
				ВыбПер = ?(КонецПериода<ВыборкаОбъемы.Период, ВыборкаОбъемы.Период - 12, ВыборкаОбъемы.Период);
				
				СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 1;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка("Объем производства");
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "Объем производства " + Строка(Номенклатура) + ?(Вторичка, " (Вторичка)", "");
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ВыборкаОбъемы.Объем1;
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ВыборкаОбъемы.Объем2;
				
				Объем1[СчетчикМесяцев] = ВыборкаОбъемы.Объем1;
				Объем2[СчетчикМесяцев] = ВыборкаОбъемы.Объем2;
			КонецЦикла;
			
			
			
			
			//очищаем массив и присваиваем числовой тип
			Сырье1 = Новый Массив(50);
			Сырье2 = Новый Массив(50);
			Переработка1 = Новый Массив(50);
			Переработка2 = Новый Массив(50);
			
			// 09.01.2018 #ПрочаяПереработка это те статьи, которые входят в "ИТОГО", но не входят в переработку {
			ПрочаяПереработка1 = Новый Массив(50);
			ПрочаяПереработка2 = Новый Массив(50);
			//}
			
			Итого1 = Новый Массив(50);
			Итого2 = Новый Массив(50);
			
			Для т = 0 По 49 Цикл
				Сырье1[т] = 0;
				Сырье2[т] = 0;
				Переработка1[т] = 0;
				Переработка2[т] = 0;
				
				// #ПрочаяПереработка {
				ПрочаяПереработка1[т] = 0;
				ПрочаяПереработка2[т] = 0;
				//}
				
				Итого1[т] = 0;
				Итого2[т] = 0;
			КонецЦикла;
			
			//Номенклатура2.Добавить(ВыборкаОбъемы.Номенклатура);
			Выборка = РезультатЗатраты.Выбрать();
			
			Если ПараметрКоманды.Прочие Тогда
				СтруктураПоиска = Новый Структура("Номенклатура, Предприятия, ПризнакСтатьи", Номенклатура, Предпр, "ПроизводственныеЗатраты");	
			Иначе
				СтруктураПоиска = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);	
			КонецЕсли;
			
			Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
				ВыбПер = ?(КонецПериода<Выборка.Период, Выборка.Период - 12, Выборка.Период);
				
				СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				//расшифровка по основному сырью
				Прочие = Ложь;
				
				Если Выборка.ПризнакСтатьи = "ПрочиеЗатраты" Тогда
					Прочие = Истина;				
				КонецЕсли;
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = ?(Выборка.ЭтоГруппа, 0, ?(Прочие, 1, 6));
				
				Если НЕ Выборка.ЭтоГруппа Тогда
					// #ПрочаяПереработка {
					СтатьяНеВходитВПереработку = сабОбщегоНазначения.ПолучитьЗначениеСвойства(Выборка.Статья, "Исключить из расчета переработки в отчете по себестоимости");
					
					Если Не ЗначениеЗаполнено(СтатьяНеВходитВПереработку) Тогда
						СтатьяНеВходитВПереработку = Ложь;
					КонецЕсли;
					//}
					
					Если Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") ИЛИ
						Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
						Сырье1[СчетчикМесяцев] = Сырье1[СчетчикМесяцев] + Выборка.Сумма1;
						Сырье2[СчетчикМесяцев] = Сырье2[СчетчикМесяцев] + Выборка.Сумма2;
						НоваяСтрока[0] = 0;
					// #ПрочаяПереработка {	
					ИначеЕсли СтатьяНеВходитВПереработку Тогда
						ПрочаяПереработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + Выборка.Сумма1; 
						ПрочаяПереработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + Выборка.Сумма2;	
					//}
					Иначе
						Переработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + Выборка.Сумма1; 
						Переработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + Выборка.Сумма2;									
					КонецЕсли;
					
				КонецЕсли;
				
				
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка(Выборка.Статья);
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = Выборка.Статья;
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], Выборка.Сумма1 / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Выборка.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], Выборка.Сумма2 / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Выборка.Сумма2;
				
				//расшифровка по основному сырью
				Всп = Ложь;
			
				Если Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
					Всп = Истина;				
				КонецЕсли;
				
				
				
				Если Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") ИЛИ Всп ИЛИ Прочие Тогда
					
					ВыборкаСырье = РезультатСырье.Выбрать();
					СтруктураПоискаСтатьи = Новый Структура("Номенклатура, Период, Предприятия, СтатьяЗатрат", Номенклатура, Выборка.Период, Предпр, Выборка.Статья);	

					Пока ВыборкаСырье.НайтиСледующий(СтруктураПоискаСтатьи) цикл
						
						Если Всп Тогда
							НоваяСтрока = ТЗ.Добавить();
							НоваяСтрока[0] = 8;
							НоваяСтрока[1] = 0;
							НоваяСтрока[2] = Строка(Номенклатура) + строка(ВыборкаСырье.МатериалФерменты);
							НоваяСтрока[3] = Предпр;
							НоваяСтрока[4] = ВыборкаСырье.МатериалФерменты;
							НоваяСтрока[5] = Номенклатура;
							НоваяСтрока[6] = Вторичка;
							НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ВыборкаСырье.Сумма1 / Объем1[СчетчикМесяцев], 0);
							НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ВыборкаСырье.Сумма1;
							НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ВыборкаСырье.Сумма2 / Объем2[СчетчикМесяцев], 0);
							НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ВыборкаСырье.Сумма2;							
						КонецЕсли;
						
						
						
						НоваяСтрока = ТЗ.Добавить();
						НоваяСтрока[0] = ?(Всп, 9, 1);
						НоваяСтрока[1] = 2;
						НоваяСтрока[2] = Строка(Номенклатура) + строка(ВыборкаСырье.Материал);
						НоваяСтрока[3] = Предпр;
						
						Если ПустаяСтрока(ПараметрКоманды.Сценарий2) И ВсегоПериодов = 1 Тогда //выводим кол*цена в строчках
							
							Если ВыборкаСырье.Количество1 Тогда
								НоваяСтрока[4] = Строка(ВыборкаСырье.Материал) + " (К.- " + Строка(Формат(ВыборкаСырье.Количество1, "ЧДЦ=2")) 
								+ "; Ц.- " + Строка(Формат(ВыборкаСырье.Цена1, "ЧДЦ=2")) + ")";
							Иначе
								НоваяСтрока[4] = Строка(ВыборкаСырье.Материал);							
							КонецЕсли;
							
							НоваяСтрока[5] = Номенклатура;
							НоваяСтрока[6] = Вторичка;
							НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ВыборкаСырье.Сумма1 / Объем1[СчетчикМесяцев], 0);
							НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ВыборкаСырье.Сумма1;
							НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ВыборкаСырье.Сумма2 / Объем2[СчетчикМесяцев], 0);
							НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ВыборкаСырье.Сумма2;
						Иначе
							НоваяСтрока[4] = Строка(ВыборкаСырье.Материал) + " (количество*цена)";
							НоваяСтрока[5] = Номенклатура;
							НоваяСтрока[6] = Вторичка;
							НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ВыборкаСырье.Количество1;
							НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ?(ВыборкаСырье.Количество1, ВыборкаСырье.Цена1, ВыборкаСырье.Сумма1);
							НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ВыборкаСырье.Количество2;
							НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ?(ВыборкаСырье.Количество2, ВыборкаСырье.Цена2, ВыборкаСырье.Сумма2);						
							
							
						КонецЕсли;
						
						
					КонецЦикла;
					
					
				КонецЕсли;
				
			КонецЦикла;
			
			//выводим Итоги
			СтруктураВыбораОбъемы = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);
			ВыборкаОбъемы = РезультатОбъемы.Выбрать();
			
			Пока ВыборкаОбъемы.НайтиСледующий(СтруктураВыбораОбъемы) Цикл
				
				ВыбПер = ?(КонецПериода<ВыборкаОбъемы.Период, ВыборкаОбъемы.Период - 12, ВыборкаОбъемы.Период);
				
				СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 7;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + "ИТОГО:";
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "ИТОГО:";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				// #ПрочаяПереработка {
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев] + ПрочаяПереработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев] + ПрочаяПереработка1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев] + ПрочаяПереработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев] + ПрочаяПереработка2[СчетчикМесяцев];
				//}
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 7;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + "  переработка";
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "  переработка";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Переработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Переработка1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Переработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Переработка2[СчетчикМесяцев];
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 7;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + "  затраты на сырье";
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "  затраты на сырье";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Сырье1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] =  Сырье2[СчетчикМесяцев];
				
				
				
			КонецЦикла;
			
			
			//считаем прочиеЗатраты
			Если ПараметрКоманды.Прочие Тогда
				Выборка = РезультатЗатраты.Выбрать();
				СтруктураПоиска = Новый Структура("Номенклатура, Предприятия, ПризнакСтатьи", Номенклатура, Предпр, "ПрочиеЗатраты");	
				
				Пока Выборка.НайтиСледующий(СтруктураПоиска) цикл
					ВыбПер = ?(КонецПериода<Выборка.Период, Выборка.Период - 12, Выборка.Период);
					
					СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
					КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
					
					НоваяСтрока = ТЗ.Добавить();
					НоваяСтрока[0] = 1 - Выборка.ЭтоГруппа;
					
					Если НЕ Выборка.ЭтоГруппа Тогда
						
						Если Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") ИЛИ
							Выборка.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
							Сырье1[СчетчикМесяцев] = Сырье1[СчетчикМесяцев] + Выборка.Сумма1;
							Сырье2[СчетчикМесяцев] = Сырье2[СчетчикМесяцев] + Выборка.Сумма2;
							НоваяСтрока[0] = 0;
						иначе
							Переработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + Выборка.Сумма1; 
							Переработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + Выборка.Сумма2;									
						КонецЕсли;
						
					КонецЕсли;
					
					
					НоваяСтрока[1] = 0;
					НоваяСтрока[2] = Строка(Номенклатура) + строка(Выборка.Статья);
					НоваяСтрока[3] = Предпр;
					НоваяСтрока[4] = Выборка.Статья;
					НоваяСтрока[5] = Номенклатура;
					НоваяСтрока[6] = Вторичка;
					НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], Выборка.Сумма1 / Объем1[СчетчикМесяцев], 0);
					НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Выборка.Сумма1;
					НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], Выборка.Сумма2 / Объем2[СчетчикМесяцев], 0);
					НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Выборка.Сумма2;
					
					
				КонецЦикла;
				
				//выводим Итоги ПОЛНЫЕ
				СтруктураВыбораОбъемы = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);
				ВыборкаОбъемы = РезультатОбъемы.Выбрать();
				
				Пока ВыборкаОбъемы.НайтиСледующий(СтруктураВыбораОбъемы) Цикл
					
					ВыбПер = ?(КонецПериода<ВыборкаОбъемы.Период, ВыборкаОбъемы.Период - 12, ВыборкаОбъемы.Период);
					
					СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
					КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
					
					НоваяСтрока = ТЗ.Добавить();
					НоваяСтрока[0] = 7;
					НоваяСтрока[1] = 0;
					НоваяСтрока[2] = Строка(Номенклатура) + "ИТОГО ПОЛНАЯ СЕБЕСТОИМОСТЬ:";
					НоваяСтрока[3] = Предпр;
					НоваяСтрока[4] = "ИТОГО ПОЛНАЯ СЕБЕСТОИМОСТЬ:";
					НоваяСтрока[5] = Номенклатура;
					НоваяСтрока[6] = Вторичка;
					// #ПрочаяПереработка {
					НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев] + ПрочаяПереработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
					НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев] + ПрочаяПереработка1[СчетчикМесяцев];
					НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев] + ПрочаяПереработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
					НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев] + ПрочаяПереработка2[СчетчикМесяцев];
					//}					
				КонецЦикла;
				
			Конецесли;
			
			//выводим Итоги
			СтруктураВыбораОбъемы = Новый Структура("Номенклатура, Предприятия", Номенклатура, Предпр);
			ВыборкаОбъемы = РезультатОбъемы.Выбрать();
			
			Пока ВыборкаОбъемы.НайтиСледующий(СтруктураВыбораОбъемы) Цикл
				
				ВыбПер = ?(КонецПериода<ВыборкаОбъемы.Период, ВыборкаОбъемы.Период - 12, ВыборкаОбъемы.Период);
				
				СчетчикМесяцев = ВыбПер - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 4;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + " Средняя себестоимость:";
				НоваяСтрока[3] = Предпр;
				НоваяСтрока[4] = "Средняя себестоимость:";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				// #ПрочаяПереработка {
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(ОстатокКол1[СчетчикМесяцев] + Объем1[СчетчикМесяцев], (ОстатокКол1[СчетчикМесяцев] * ОстатокЦена1[СчетчикМесяцев] + Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев] + ПрочаяПереработка1[СчетчикМесяцев]) / (ОстатокКол1[СчетчикМесяцев] + Объем1[СчетчикМесяцев]), 0);
				//НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = (ОстатокКол1[СчетчикМесяцев] * ОстатокЦена1[СчетчикМесяцев] + Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев]);
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(ОстатокКол2[СчетчикМесяцев] + Объем2[СчетчикМесяцев], (ОстатокКол2[СчетчикМесяцев] * ОстатокЦена2[СчетчикМесяцев] + Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев] + ПрочаяПереработка2[СчетчикМесяцев]) / (ОстатокКол2[СчетчикМесяцев] + Объем2[СчетчикМесяцев]), 0);
				//НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = (ОстатокКол2[СчетчикМесяцев] * ОстатокЦена2[СчетчикМесяцев] + Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев]);;
				//}
			Конеццикла;
			
		КонецЦикла;
		
		////считаем затраты на простой на 91 счете
		//Простой = 0;
		//Сум1 = 0;
		//Сум2 = 0;
		//СтруктураПоиска = Новый Структура("Предприятия", Предпр);
		//Выборка = ВыборкаПростой.Выбрать();
		//Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
		//	Если НЕ ПустаяСтрока(Выборка.Сумма1) Тогда
		//		Сум1 = Сум1 + Выборка.Сумма1;
		//	КонецЕсли; 
		//	
		//	Если НЕ ПустаяСтрока(Выборка.Сумма2) Тогда
		//		Сум2 = Сум2 + Выборка.Сумма2;
		//	КонецЕсли; 
		//конеццикла;
		//
		//Сырье1 = Новый Массив(50);
		//Сырье2 = Новый Массив(50);
		//Переработка1 = Новый Массив(50);
		//Переработка2 = Новый Массив(50);
		//
		//Для т = 0 По 49 Цикл
		//	Сырье1[т] = 0;
		//	Сырье2[т] = 0;
		//	Переработка1[т] = 0;
		//	Переработка2[т] = 0;
		//КонецЦикла;
		//
		//Если Сум1 или Сум2 Тогда
		//	Простой = 1;
		//	Выборка = ВыборкаПростой.Выбрать();
		//	Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
		//		СчетчикМесяцев = Выборка.Период - НачалоПериода + 1;
		//		КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
		//		
		//		НоваяСтрока = ТЗ.Добавить();
		//		НоваяСтрока[0] = 1;
		//		НоваяСтрока[1] = 0;
		//		НоваяСтрока[2] = "(ПРОСТОЙ)" + строка("Объем производства");
		//		НоваяСтрока[3] = Предпр;
		//		НоваяСтрока[4] = "Объем производства (ПРОСТОЙ)";
		//		
		//		Если Выборка.Период Тогда
		//			
		//			НоваяСтрока = ТЗ.Добавить();
		//			Если НЕ Выборка.ЭтоГруппа Тогда
		//				Если Выборка.Статья = Справочники.ИздержкиОбращения.ЗатратыОсн ИЛИ
		//					Выборка.Статья = Справочники.ИздержкиОбращения.ЗатратыВсп Тогда
		//					Сырье1[СчетчикМесяцев] = Сырье1[СчетчикМесяцев] + Выборка.Сумма1;
		//					Сырье2[СчетчикМесяцев] = Сырье2[СчетчикМесяцев] + Выборка.Сумма2;
		//				иначе
		//					Переработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + Выборка.Сумма1; 
		//					Переработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + Выборка.Сумма2;
		//				КонецЕсли;
		//			КонецЕсли;
		//			
		//			
		//			НоваяСтрока[0] = 1 - Выборка.ЭтоГруппа;
		//			
		//			Если НЕ Выборка.ЭтоГруппа И (Выборка.Статья = Справочники.ИздержкиОбращения.ЗатратыОсн ИЛИ
		//				Выборка.Статья = Справочники.ИздержкиОбращения.ЗатратыВсп) Тогда
		//				НоваяСтрока[0] = 0;
		//			КонецЕсли;
		//			
		//			
		//			НоваяСтрока[1] = 0;
		//			НоваяСтрока[2] = "(ПРОСТОЙ)" + строка(Выборка.Статья);
		//			НоваяСтрока[3] = Предпр;
		//			НоваяСтрока[4] = Выборка.Статья;
		//			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Выборка.Сумма1;
		//			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Выборка.Сумма2;
		//			
		//		КонецЕсли;
		//		
		//		
		//	КонецЦикла;
		//	
		//	Для СчетчикМесяцев = 1 По ВсегоПериодов Цикл
		//		КоэффициентОтступа = ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
		//		
		//		//выводим Итоги
		//		НоваяСтрока = ТЗ.Добавить();
		//		НоваяСтрока[0] = 0;
		//		НоваяСтрока[1] = 0;
		//		НоваяСтрока[2] = "(ПРОСТОЙ)" + "ИТОГО:";
		//		НоваяСтрока[3] = Предпр;
		//		НоваяСтрока[4] = "ИТОГО:";
		//		НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев];
		//		НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев];
		//		
		//		НоваяСтрока = ТЗ.Добавить();
		//		НоваяСтрока[0] = 0;
		//		НоваяСтрока[1] = 0;
		//		НоваяСтрока[2] = "(ПРОСТОЙ)" + "  переработка";
		//		НоваяСтрока[3] = Предпр;
		//		НоваяСтрока[4] = "  переработка";
		//		НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Переработка1[СчетчикМесяцев];
		//		НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Переработка2[СчетчикМесяцев];
		//	КонецЦикла;
		//	
		//	
		//КонецЕсли;
		
		Простой = 0;
		
		//выводим всего по предприятию
		Если СчетчикНоменклатур + Простой > 1  Тогда
			//ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение", НаборИмен);
			Т32 = ТЗ.Скопировать();
			Т32.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение, Резерв1, Резерв2, Резерв3, Резерв4, Резерв5", НаборИмен);;
			//считаем итого объем
			ОбъемВсего = Новый Массив(1000);
			ОстаткиВсего = Новый Массив(1000);
			СуммаОстаткиВсего = Новый Массив(1000);
			
			Для Строчка = 0 По Т32.Количество()-1 Цикл
				
				Если Т32[Строчка][6] Тогда
					Продолжить;				
				КонецЕсли;
				
				Если Т32[Строчка][3] = Предпр И НЕ Т32[Строчка][1] Тогда
					
					Если Лев(Т32[Строчка][4], 18) = "Объем производства" Тогда
						
						Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
							ОбъемВсего[Колонка] =  ?(ОбъемВсего[Колонка] = Неопределено, 0, ОбъемВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
						конеццикла;
						
					конецесли;
					
					Если Лев(Т32[Строчка][4], 17) = "Остаток на начало" Тогда
						
						Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
							СуммаОстаткиВсего[Колонка] =  ?(СуммаОстаткиВсего[Колонка] = Неопределено, 0, СуммаОстаткиВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
						конеццикла;
						
					конецесли;
					
					Если Лев(Т32[Строчка][4], 10) = "Количество" Тогда
						
						Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
							ОстаткиВсего[Колонка] =  ?(ОстаткиВсего[Колонка] = Неопределено, 0, ОстаткиВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
						конеццикла;
						
					конецесли;
					
				КонецЕсли; 
				
			конеццикла;
			
			Для Строчка = 0 По Т32.Количество()-1 Цикл
				
				Если Т32[Строчка][6] Тогда
					Продолжить;				
				КонецЕсли;
				
				// 13.11.2012
				//Если Строчка > 0 И Лев(Т32[Строчка].Значение, 17) <> "Остаток на начало" И Т32[Строчка - 1].Значение = "Средняя себестоимость:" Тогда
				//	Продолжить;
				//КонецЕсли;
				
				Если Т32[Строчка][3] = Предпр И НЕ Т32[Строчка][1] Тогда
					НоваяСтрока = ТЗ.Добавить();
					НоваяСтрока[0] = Т32[Строчка][0];
					НоваяСтрока[1] = Т32[Строчка][1];				
					НоваяСтрока[2] = "всего-всего  переработка";
					НоваяСтрока[3] = Т32[Строчка][3];
					
					СуммаЕд = Истина;
					
					Если Лев(Т32[Строчка][4], 18) = "Объем производства" Тогда
						НоваяСтрока[4] = "Объем производства (ВСЕГО)";
					иначеЕсли Лев(Т32[Строчка][4], 17) = "Остаток на начало" Тогда
						НоваяСтрока[4] = "Остаток на начало (ВСЕГО)";
						СуммаЕд = Ложь;
					Иначе
						НоваяСтрока[4] = Т32[Строчка][4];
					конецесли;
					
					Если Лев(Т32[Строчка][4], 10) = "Количество" ИЛИ Лев(Т32[Строчка][4], 4) = "Цена" Тогда
						СуммаЕд = Ложь;
					КонецЕсли;
					
					Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
						НоваяСтрока[Колонка - 1] = ?(ОбъемВсего[Колонка], ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]) / ОбъемВсего[Колонка], 0);
						НоваяСтрока[Колонка] =  Т32[Строчка][Колонка];
						
						Если Лев(Т32[Строчка][4], 4) = "Цена" Тогда
							НоваяСтрока[Колонка] =  ?(СчетчикНоменклатур, ?(ОстаткиВсего[Колонка], СуммаОстаткиВсего[Колонка] / ОстаткиВсего[Колонка], 0) / СчетчикНоменклатур, 0);
						КонецЕсли;
						
						НоваяСтрока[Колонка - 1] = ?(СуммаЕд, НоваяСтрока[Колонка - 1], 0);
						Колонка = Колонка + 1;
					конеццикла;
					
				КонецЕсли; 
				
			конеццикла;
			
		КонецЕсли;
		
		
	КонецЦикла; 
	
	
	//КонецЦикла;
	
	
	ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение, Резерв1, Резерв2", НаборИмен);
	
	// 13.11.2012 правильный порядок статей затрат после свертки таблицы
	
	Для Каждого Предпр Из ПараметрКоманды.Предприятие Цикл
		
		ТЗ_Сорт = ТЗ.СкопироватьКолонки();
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Признак", "всего-всего  переработка");
		СтруктураПоиска.Вставить("Предприятие", Предпр);
		СтруктураПоиска.Вставить("Значение", "Остаток на начало (ВСЕГО)");
		
		СтрокаНач = ТЗ.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокаНач.Количество() Тогда
			
			ИндексНачСтроки = ТЗ.Индекс(СтрокаНач[0]);
			ИндексКон = ИндексНачСтроки;
			
			Пока ТЗ[ИндексКон].Резерв1 = Неопределено Цикл
				ИндексКон = ИндексКон + 1;
				
				Если ИндексКон = ТЗ.Количество() Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;	
			
			Если ИндексКон <> ИндексНачСтроки Тогда
				Инд = ИндексКон - 1;
			КонецЕсли;	
				
			Пока Инд <> ИндексНачСтроки Цикл
				
				НСтр = ТЗ_Сорт.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ[Инд]);
				ТЗ.Удалить(Инд);
				Инд = Инд - 1;
				
			КонецЦикла;
			
			Если Инд = ИндексНачСтроки Тогда
				
				НСтр = ТЗ_Сорт.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ[Инд]);
				ТЗ[Инд].Значение = "вставка";
				
			КонецЕсли;
			
			ТЗ_Сорт2 = ТЗ_Сорт.СкопироватьКолонки();
			
			Если ТЗ_Сорт.Найти("Остаток на начало (ВСЕГО)", "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти("Остаток на начало (ВСЕГО)", "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти("Остаток на начало (ВСЕГО)", "Значение")));
			КонецЕсли;
			
			Если ТЗ_Сорт.Найти("Количество", "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти("Количество", "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти("Количество", "Значение")));
			КонецЕсли;

			Если ТЗ_Сорт.Найти("Цена", "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти("Цена", "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти("Цена", "Значение")));
			КонецЕсли;
			
			Если ТЗ_Сорт.Найти("Объем производства (ВСЕГО)", "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти("Объем производства (ВСЕГО)", "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти("Объем производства (ВСЕГО)", "Значение")));
			КонецЕсли;
			
			Если ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"), "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"), "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"), "Значение")));
			КонецЕсли;

			Если ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"), "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"), "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"), "Значение")));
			КонецЕсли;

			Если ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.Ферменты, "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.Ферменты, "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.Ферменты, "Значение")));
			КонецЕсли;

			Если ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ВспомогательноеСырье, "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ВспомогательноеСырье, "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ВспомогательноеСырье, "Значение")));
			КонецЕсли;
			
			Если ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ПустаяСсылка(), "Значение") <> Неопределено Тогда	
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ПустаяСсылка(), "Значение"));
				ТЗ_Сорт.Удалить(ТЗ_Сорт.Индекс(ТЗ_Сорт.Найти(Перечисления.Д_Ферменты.ПустаяСсылка(), "Значение")));
			КонецЕсли;
			
			КолвоСтрок = ТЗ_Сорт.Количество();
			ТЗ_Сорт_Итоги = ТЗ_Сорт.СкопироватьКолонки();
			ТЗ_Сорт.Колонки.Добавить("КодСтатьи");
			
			Для ОбрИнд = 1 По КолвоСтрок Цикл
				
				Если ТипЗнч(ТЗ_Сорт[КолвоСтрок - ОбрИнд].Значение) = Тип("Строка") Тогда
					НСтр = ТЗ_Сорт_Итоги.Добавить();
					ЗаполнитьЗначенияСвойств(НСтр, ТЗ_Сорт[КолвоСтрок - ОбрИнд]);
					ТЗ_Сорт.Удалить(КолвоСтрок - ОбрИнд)    
				Иначе
					ТЗ_Сорт[КолвоСтрок - ОбрИнд].КодСтатьи = ТЗ_Сорт[КолвоСтрок - ОбрИнд].Значение.Код 
				КонецЕсли;
				
			КонецЦикла;
			
			ТЗ_Сорт.Сортировать("КодСтатьи Возр");
			ТЗ_Сорт.Колонки.Удалить("КодСтатьи");
			
			Для Каждого Строка Из ТЗ_Сорт Цикл
				
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, Строка);
				
			КонецЦикла;
			
			Инд1 = ТЗ_Сорт_Итоги.Колонки.Индекс(ТЗ_Сорт_Итоги.Колонки.Колонка1);
			
			Пока Инд1 < ТЗ_Сорт_Итоги.Колонки.Количество() - 1 Цикл
			
				ТЗ_Сорт_Итоги[ТЗ_Сорт_Итоги.Количество() - 1][Инд1] = ТЗ_Сорт_Итоги[0][Инд1];
				ТЗ_Сорт_Итоги[ТЗ_Сорт_Итоги.Количество() - 1][Инд1 + 2] = ТЗ_Сорт_Итоги[0][Инд1 + 2];
				
				Инд1 = Инд1 + 4;
				
			КонецЦикла;
			
			Для Каждого Строка Из ТЗ_Сорт_Итоги Цикл
				
				НСтр = ТЗ_Сорт2.Добавить();
				ЗаполнитьЗначенияСвойств(НСтр, Строка);
				
			КонецЦикла;
			
			СтруктураПоискаВставки = Новый Структура;
			СтруктураПоискаВставки.Вставить("Предприятие", Предпр);
			СтруктураПоискаВставки.Вставить("Признак", "всего-всего  переработка");
			СтруктураПоискаВставки.Вставить("Значение", "вставка");
			
			Если ТЗ.НайтиСтроки(СтруктураПоискаВставки).Количество() Тогда
				
				ИндексВставки = ТЗ.Индекс(ТЗ.НайтиСтроки(СтруктураПоискаВставки)[0]);
				ТЗ.Удалить(ТЗ.Индекс(ТЗ.НайтиСтроки(СтруктураПоискаВставки)[0]));
				
				Для Каждого Строка Из ТЗ_Сорт2 Цикл
				
					НСтр = ТЗ.Вставить(ИндексВставки);
					ЗаполнитьЗначенияСвойств(НСтр, Строка);
					ИндексВставки = ИндексВставки + 1;
				
				КонецЦикла;
				
			КонецЕсли;
						
		КонецЕсли;
		
	КонецЦикла;
	
	// квартал помесячно год поквартально 
	ТекПериод = ПараметрКоманды.Период;
	ТекИнтервал = ПараметрКоманды.Интервал;
	ИнтервалМеньше = БюджетныйНаСервере.ИнтервалМеньшеПериода(ТекПериод, ТекИнтервал);
		
	ТабДок.НачатьАвтогруппировкуСтрок();	
	
	Для Строчка = 0 По ТЗ.Количество()-1 Цикл
		
		
		//вывод шапки + остатки
		Если Лев(ТЗ[Строчка][4], 17) = "Остаток на начало" Тогда // выводим шапку
			
			//ОбластьШапка.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 19, СтрДлина(ТЗ[Строчка][4]));
			ОбластьШапка.Параметры.Предприятие = ТЗ[Строчка][3];
			ОбластьШапка.Параметры.Месяц = ПредставлениеПериода(ПараметрКоманды.Период.ДатаНачала, ПараметрКоманды.Период.ДатаОкончания);;
			
			ТабДок.Вывести(ОбластьШапка, 0);
			Период = 0;
			
			Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
				Период = Период + Интервал;
				ОбластьШапкаСтолбцы.Параметры.Сценарий1 = Строка(ПараметрКоманды.Сценарий1) + ?(ПараметрКоманды.Корректировки, " с корректировками", "");
				
				Если ВсегоПериодов > 1 Тогда
					ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - Интервал)), КонецМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - 1)));	
				иначе
					ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(ПараметрКоманды.Период.ДатаНачала, ПараметрКоманды.Период.ДатаОкончания);	
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
					ОбластьШапкаСтолбцы.Параметры.Сценарий2 = ПараметрКоманды.Сценарий2;
					Колонка = Колонка + 1;
				КонецЕсли;
				
				
				ТабДок.Присоединить(ОбластьШапкаСтолбцы, 0);
			КонецЦикла;
			
			Если ИнтервалМеньше Тогда
				
				ОбластьШапкаСтолбцы.Параметры.Месяц = "Итого";
				ОбластьШапкаСтолбцы.Параметры.Сценарий1 = Строка(ПараметрКоманды.Сценарий1) + ?(ПараметрКоманды.Корректировки, " с корректировками", "");
				
				Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
					ОбластьШапкаСтолбцы.Параметры.Сценарий2 = ПараметрКоманды.Сценарий2;
				КонецЕсли;
				
                ТабДок.Присоединить(ОбластьШапкаСтолбцы, 0);

			КонецЕсли;
			
		Конецесли;
		
		
		ОбластьОбъемСтолбцы = Макет.ПолучитьОбласть("ШапкаОбъем|ДанныеСтолбца" + Уч);
		
		//вывод шапки объем пр-ва
		Если Лев(ТЗ[Строчка][4], 18) = "Объем производства" Тогда // выводим шапку
			
			ОбластьОбъем.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 19, СтрДлина(ТЗ[Строчка][4]));
			ТабДок.Вывести(ОбластьОбъем, 0);
			
			ИтогоОбъем1 = 0;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
				ИтогоОбъем2 = 0;
			КонецЕсли;
			
			Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл				
				ОбластьОбъемСтолбцы.Параметры.Объем1 = ТЗ[Строчка][Колонка * 2 + 6];
				ИтогоОбъем1 = ИтогоОбъем1 + ТЗ[Строчка][Колонка * 2 + 6];
				
				Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
					//ОбластьОбъемСтолбцы.Параметры.Сценарий2 = ПараметрКоманды.Сценарий2;
					ОбластьОбъемСтолбцы.Параметры.Объем2 = ТЗ[Строчка][Колонка * 2 + 8];
					ИтогоОбъем2 = ИтогоОбъем2 + ТЗ[Строчка][Колонка * 2 + 8];
					ОбластьОбъемСтолбцы.Параметры.Объем3 = ОбластьОбъемСтолбцы.Параметры.Объем2 - ОбластьОбъемСтолбцы.Параметры.Объем1;
					Колонка = Колонка + 1;
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьОбъемСтолбцы, 0);
			КонецЦикла;
			
			Если ИнтервалМеньше Тогда
				
				ОбластьОбъемСтолбцы.Параметры.Объем1 = ИтогоОбъем1;
				
				Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
                	ОбластьОбъемСтолбцы.Параметры.Объем2 = ИтогоОбъем2;
					ОбластьОбъемСтолбцы.Параметры.Объем3 = ИтогоОбъем2 - ИтогоОбъем1;
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьОбъемСтолбцы, 0);
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;
		
		
		
		//получаем шрифт
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|СтолбецНачало");
		
		ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбца" + Уч);
		
		
		
		//получаем данные
		ОбластьДанные.Параметры.Статья = ТЗ[Строчка][4];
		
		Уровень = ?(ТЗ[Строчка][0], 1, 0);
		
		Если ТЗ[Строчка][0] = 3 ИЛИ ТЗ[Строчка][0] = 4 ИЛИ ТЗ[Строчка][0] = 7 Тогда
			Уровень = 0;	
		КонецЕсли;
		
		ВидимостьОбласти = ?(ТЗ[Строчка][0] > 1, Ложь, Истина);
		
		//Если ТЗ[Строчка][0] = 6 Тогда
		//	Уровень = 1;
		//	ВидимостьОбласти = Истина;
		//КонецЕсли;
		
		Если ТЗ[Строчка][0] = 8 Тогда
			Уровень = 1;
			ВидимостьОбласти = Истина;
		КонецЕсли;

		
		Если ТЗ[Строчка][0] = 9 Тогда
			Уровень = 2;
			ВидимостьОбласти = Ложь;
		КонецЕсли;
		
		Если НЕ ВидимостьОбласти Тогда
			ИмяОбласти = "Остатки ГП на начало";
		КонецЕсли;
		
		Если ТЗ[Строчка][0] = 4 Тогда
			ИмяОбласти = "Средняя себестоимость";
		КонецЕсли;
		
		Если ТЗ[Строчка][0] = 6 Тогда
			ИмяОбласти = "Расшифровка затрат";
		КонецЕсли;
		
		Если НЕ рольдоступна("сабУчетчик") И (ТЗ[Строчка][0] = 3 ИЛИ ТЗ[Строчка][0] = 2 ИЛИ ТЗ[Строчка][0] = 4) Тогда
			Уровень = 2;
		КонецЕсли;

		
		// di 15.05.13 не выводить остатки
		Если ПараметрКоманды.СкрыватьОстатки Тогда
			
			Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" ИЛИ Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" ИЛИ Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьДанные, Уровень, ИмяОбласти, ВидимостьОбласти);		
		
		ИтогоСумма1 = 0;
		ИтогоСумма11 = 0;
		ИтогоКол1 = 0;
		ИтогоЦена1 = 0;
		ИтогоОстНач1 = 0;
		ИтогоОбщСумма1 = 0;
		ИтогоЦенаКол1 = 0;
		
		Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
			ИтогоСумма2 = 0;
			ИтогоСумма21 = 0; 
			ИтогоКол2 = 0;
			ИтогоЦена2 = 0;
			ИтогоОстНач2 = 0;
			ИтогоОбщСумма2 = 0;
			ИтогоЦенаКол2 = 0;
		КонецЕсли;
		
		Период = 0;
		
		Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
			Период = Период + Интервал;
			
			Если Лев(ОбластьДанные.Параметры.Статья, 21) = "Средняя себестоимость" И ТЗ[Строчка].Резерв1 = Неопределено Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма11 = ВычислитьСреднююСебестоимостьНоменклатур(ТЗ[Строчка].Предприятие, Колонка * 2 + 6, ТЗ);
			Иначе	
				ОбластьДанныеСтолбцы.Параметры.Сумма11 =  ТЗ[Строчка][Колонка * 2 + 5];
			КонецЕсли;
				
			ИтогоСумма11 = ИтогоСумма11 + ТЗ[Строчка][Колонка * 2 + 5];	
			
			Если Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
				ИтогоЦенаКол1 = ИтогоЦенаКол1 + (ТЗ[Строчка][Колонка * 2 + 5]*ТЗ[Строчка][Колонка * 2 + 6]); 
			КонецЕсли;
			
			ОбластьДанныеСтолбцы.Параметры.Сумма1 =  ТЗ[Строчка][Колонка * 2 + 6];
				
				
			Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" Тогда 
				ИтогоКол1 = ТЗ[Строчка][8];
			ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
				ИтогоЦена1 = ТЗ[Строчка][8];
			ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" Тогда
				ИтогоОстНач1 = ТЗ[Строчка][8];
			ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 6) = "ИТОГО:" Тогда
				ИтогоОбщСумма1 = ИтогоОбщСумма1 + ТЗ[Строчка][Колонка * 2 + 6];
				ИтогоСумма1 = ИтогоСумма1 + ТЗ[Строчка][Колонка * 2 + 6];
			Иначе
				ИтогоСумма1 = ИтогоСумма1 + ТЗ[Строчка][Колонка * 2 + 6];
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
							
				Если Лев(ОбластьДанные.Параметры.Статья, 21) = "Средняя себестоимость" И ТЗ[Строчка].Резерв1 = Неопределено Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма21 = ВычислитьСреднююСебестоимостьНоменклатур(ТЗ[Строчка].Предприятие, Колонка * 2 + 8, ТЗ);
                Иначе
					ОбластьДанныеСтолбцы.Параметры.Сумма21 = ТЗ[Строчка][Колонка * 2 + 7];
				КонецЕсли;	
				
				ИтогоСумма21 = ИтогоСумма21 + ТЗ[Строчка][Колонка * 2 + 7];
				
				Если Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
					ИтогоЦенаКол2 = ИтогоЦенаКол2 + (ТЗ[Строчка][Колонка * 2 + 7]*ТЗ[Строчка][Колонка * 2 + 8]); 
				КонецЕсли;
				
				ОбластьДанныеСтолбцы.Параметры.Сумма2 = ТЗ[Строчка][Колонка * 2 + 8];
								
				Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" Тогда 
					ИтогоКол2 = ТЗ[Строчка][10];
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
					ИтогоЦена2 = ТЗ[Строчка][10];
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" Тогда
					ИтогоОстНач2 = ТЗ[Строчка][10];
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 6) = "ИТОГО:" Тогда
					ИтогоОбщСумма2 = ИтогоОбщСумма2 + ТЗ[Строчка][Колонка * 2 + 8];
					ИтогоСумма2 = ИтогоСумма2 + ТЗ[Строчка][Колонка * 2 + 8];
				Иначе
					ИтогоСумма2 = ИтогоСумма2 + ТЗ[Строчка][Колонка * 2 + 8];
				КонецЕсли;
				
				ОбластьДанныеСтолбцы.Параметры.Сумма31 = ОбластьДанныеСтолбцы.Параметры.Сумма21 - ОбластьДанныеСтолбцы.Параметры.Сумма11;
				ОбластьДанныеСтолбцы.Параметры.Сумма3 = ОбластьДанныеСтолбцы.Параметры.Сумма2 - ОбластьДанныеСтолбцы.Параметры.Сумма1;
				Колонка = Колонка + 1;
			КонецЕсли;
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("ПараметрКоманды", "ПараметрКоманды.Д_Расшифровка");
			
			Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
				СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ЗатратыНаПрво);
				СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][4]);
			Иначе
				СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ОсновноеПрво);
				СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][5]);
				СтруктураРасшифровки.Вставить("Субконто2", ТЗ[Строчка][4]);				
			КонецЕсли;
			
			СтруктураРасшифровки.Вставить("Предприятие", ТЗ[Строчка][3]);
			СтруктураРасшифровки.Вставить("Подразделение", "");
			СтруктураРасшифровки.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - Интервал)), ПараметрКоманды.Период.ДатаНачала));
			СтруктураРасшифровки.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - 1)), ПараметрКоманды.Период.ДатаОкончания));
			СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
			СтруктураРасшифровки.Вставить("Сценарий1", МассивСценариев1);
			
			ОбластьДанныеСтолбцы.Параметры.Расшифровка = СтруктураРасшифровки;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
				СтруктураРасшифровки2 = Новый Структура;
				СтруктураРасшифровки2.Вставить("ПараметрКоманды", "ПараметрКоманды.Д_Расшифровка");
				
				Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
					СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ЗатратыНаПрво);
					СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][4]);
				Иначе
					СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ОсновноеПрво);				
					СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][5]);
					СтруктураРасшифровки2.Вставить("Субконто2", ТЗ[Строчка][4]);
				КонецЕсли;
				
				СтруктураРасшифровки2.Вставить("Предприятие", ТЗ[Строчка][3]);
				СтруктураРасшифровки2.Вставить("Подразделение", "");
				СтруктураРасшифровки2.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - Интервал)), ПараметрКоманды.Период.ДатаНачала));
				СтруктураРасшифровки2.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(ПараметрКоманды.Период.ДатаНачала, Период - 1)), ПараметрКоманды.Период.ДатаОкончания));
				СтруктураРасшифровки2.Вставить("ВидимостьШапки", 0);
				СтруктураРасшифровки2.Вставить("Сценарий1", ПараметрКоманды.Сценарий2);
				ОбластьДанныеСтолбцы.Параметры.Расшифровка2 = СтруктураРасшифровки2;
			КонецЕсли;
			
			ТабДок.Присоединить(ОбластьДанныеСтолбцы, Уровень, ИмяОбласти, ВидимостьОбласти);
			
			//Колонка = Колонка + 1;
		КонецЦикла;
		
		Если ИнтервалМеньше Тогда
						
			Если Лев(ОбластьДанные.Параметры.Статья, 21) = "Средняя себестоимость" Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма11 = ВычислитьИтоговуюСреднююСебестоимость(ТЗ[Строчка].Предприятие, ТЗ[Строчка].Резерв1, ПараметрКоманды.Сценарий1, ТЗ, ВсегоПериодов, ПараметрКоманды);
			ИначеЕсли Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма11 = ИтогоСумма11;
			Иначе	
				ОбластьДанныеСтолбцы.Параметры.Сумма11 = ?(ЗначениеЗаполнено(ИтогоОбъем1) = Ложь, ИтогоСумма11, ИтогоСумма1/ИтогоОбъем1);
			КонецЕсли;	
				
			Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" Тогда 
				ОбластьДанныеСтолбцы.Параметры.Сумма1 = ИтогоКол1;
			ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма1 = ИтогоЦена1;
			ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма1 = ИтогоОстНач1;	 
			ИначеЕсли Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма1 = ?(ИтогоСумма11 = 0, 0, ИтогоЦенаКол1/ИтогоСумма11);
			Иначе
				ОбластьДанныеСтолбцы.Параметры.Сумма1 = ИтогоСумма1;
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
				
				Если Лев(ОбластьДанные.Параметры.Статья, 21) = "Средняя себестоимость" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма21 = ВычислитьИтоговуюСреднююСебестоимость(ТЗ[Строчка].Предприятие, ТЗ[Строчка].Резерв1, ПараметрКоманды.Сценарий2, ТЗ, ВсегоПериодов, ПараметрКоманды);
				ИначеЕсли	Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма21 = ИтогоСумма21;
				Иначе
					ОбластьДанныеСтолбцы.Параметры.Сумма21 = ?(ЗначениеЗаполнено(ИтогоОбъем2) = Ложь, ИтогоСумма21, ИтогоСумма2/ИтогоОбъем2);
				КонецЕсли;	
					
				Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" Тогда 
					ОбластьДанныеСтолбцы.Параметры.Сумма2 = ИтогоКол2;
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма2 = ИтогоЦена2;
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма2 = ИтогоОстНач2;
				ИначеЕсли Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма2 = ?(ИтогоСумма21 = 0, 0, ИтогоЦенаКол2/ИтогоСумма21);
				Иначе
					ОбластьДанныеСтолбцы.Параметры.Сумма2 = ИтогоСумма2;				
				КонецЕсли;	
				
				Если Лев(ОбластьДанные.Параметры.Статья, 21) = "Средняя себестоимость" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма31 = ВычислитьИтоговуюСреднююСебестоимость(ТЗ[Строчка].Предприятие, ТЗ[Строчка].Резерв1, ПараметрКоманды.Сценарий2, ТЗ, ВсегоПериодов, ПараметрКоманды) - ВычислитьИтоговуюСреднююСебестоимость(ТЗ[Строчка].Предприятие, ТЗ[Строчка].Резерв1, ПараметрКоманды.Сценарий1, ТЗ, ВсегоПериодов, ПараметрКоманды); 
				ИначеЕсли Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма31 = ИтогоСумма21 - ИтогоСумма11;
				Иначе
					ОбластьДанныеСтолбцы.Параметры.Сумма31 =  ?(ЗначениеЗаполнено(ИтогоОбъем2) = Ложь, ИтогоСумма21, ИтогоСумма2/ИтогоОбъем2) - ?(ЗначениеЗаполнено(ИтогоОбъем1) = Ложь, ИтогоСумма11, ИтогоСумма1/ИтогоОбъем1);
				КонецЕсли;	
					
				Если Лев(ОбластьДанные.Параметры.Статья, 17) = "Количество" Тогда 
					ОбластьДанныеСтолбцы.Параметры.Сумма3 = ИтогоКол2 - ИтогоКол1;
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Цена" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма3 = ИтогоЦена2 - ИтогоЦена1;
				ИначеЕсли Лев(ОбластьДанные.Параметры.Статья, 17) = "Остаток на начало" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма3 = ИтогоОстНач2 - ИтогоОстНач1;	
				ИначеЕсли Прав(ОбластьДанные.Параметры.Статья, 17) = "(количество*цена)" Тогда
					ОбластьДанныеСтолбцы.Параметры.Сумма3 = ?(ИтогоСумма21 = 0, 0, ИтогоЦенаКол2/ИтогоСумма21) - ?(ИтогоСумма11 = 0, 0, ИтогоЦенаКол1/ИтогоСумма11);
				Иначе				
					ОбластьДанныеСтолбцы.Параметры.Сумма3 = ИтогоСумма2 - ИтогоСумма1;
				КонецЕсли;
				
			КонецЕсли;
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("ПараметрКоманды", "ПараметрКоманды.Д_Расшифровка");
			
			Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
				СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ЗатратыНаПрво);
				СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][4]);
			Иначе
				СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ОсновноеПрво);
				СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][5]);
				СтруктураРасшифровки.Вставить("Субконто2", ТЗ[Строчка][4]);				
			КонецЕсли;
			
			СтруктураРасшифровки.Вставить("Предприятие", ТЗ[Строчка][3]);
			СтруктураРасшифровки.Вставить("Подразделение", "");
			СтруктураРасшифровки.Вставить("Дата1", ПараметрКоманды.Период.ДатаНачала);
			СтруктураРасшифровки.Вставить("Дата2", ПараметрКоманды.Период.ДатаОкончания);
			СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
			СтруктураРасшифровки.Вставить("Сценарий1", МассивСценариев1);
			
			ОбластьДанныеСтолбцы.Параметры.Расшифровка = СтруктураРасшифровки;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
				СтруктураРасшифровки2 = Новый Структура;
				СтруктураРасшифровки2.Вставить("ПараметрКоманды", "ПараметрКоманды.Д_Расшифровка");
				
				Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
					СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ЗатратыНаПрво);
					СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][4]);
				Иначе
					СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ОсновноеПрво);				
					СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][5]);
					СтруктураРасшифровки2.Вставить("Субконто2", ТЗ[Строчка][4]);
				КонецЕсли;
				
				СтруктураРасшифровки2.Вставить("Предприятие", ТЗ[Строчка][3]);
				СтруктураРасшифровки2.Вставить("Подразделение", "");
				СтруктураРасшифровки2.Вставить("Дата1", ПараметрКоманды.Период.ДатаНачала);
				СтруктураРасшифровки2.Вставить("Дата2", ПараметрКоманды.Период.ДатаОкончания);
				СтруктураРасшифровки2.Вставить("ВидимостьШапки", 0);
				СтруктураРасшифровки2.Вставить("Сценарий1", ПараметрКоманды.Сценарий2);
				ОбластьДанныеСтолбцы.Параметры.Расшифровка2 = СтруктураРасшифровки2;
			КонецЕсли;
			
			ТабДок.Присоединить(ОбластьДанныеСтолбцы, Уровень, ИмяОбласти, ВидимостьОбласти);
	
		КонецЕсли;
		
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Вывести(ОбластьКрасота);
	//
	//Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
	//	ТабДок.Присоединить(ОбластьКрасотаСтолбцы);	
	//КонецЦикла;	
		
КонецПроцедуры

Функция ЗаполнитьТаблицуГоризонтальныйВид(ТабДок, ПараметрКоманды) Экспорт
		
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт(), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.СценарийФакт(), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт(), "Учетный", "Учетный");
	Регистр2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.СценарийФакт(), "Учетный", "Учетный");
	
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	
	Для Кол = 1 По 100 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Попытка
	    ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_Себестоимость");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_Себестоимость;
	КонецПопытки;
	
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий1) и  НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
		
		ДваСценария = Истина;
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетПланФактГоризонтальный");
		
	иначе
		
		ДваСценария = Ложь;
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетГоризонтальный");
		
	КонецЕсли; 
		
	Если ПараметрКоманды.Знака2 Тогда
		Уч = "Уч";
	Иначе
		Уч = "";	
	КонецЕсли;
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
		
	Интервал = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, 1, 
	?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ПараметрКоманды.Период.ДатаНачала;	
	КонецПериода = ПараметрКоманды.Период.ДатаОкончания;
		
	ВсегоПериодов = 1;
	
	СписокПредприятий = ПараметрКоманды.Предприятие;
		
	ДатаНач = ПараметрКоманды.Период.ДатаНачала;
	ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	КоэффициентОтступа = 0;
	
	Если ПустаяСтрока(ПараметрКоманды.Номенклатура) И ТипЗнч(ПараметрКоманды.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		УсловиеКорНоменклатура = "Истина";
		УсловиеНоменклатура = "Истина";
	ИначеЕсли ПараметрКоманды.Номенклатура = Неопределено Тогда
		УсловиеКорНоменклатура = "КорСубконто1.ТипНоменклатуры = &ТипНоменклатуры";
		УсловиеНоменклатура = "Субконто1.ТипНоменклатуры = &ТипНоменклатуры";
	Иначе
		УсловиеКорНоменклатура = "КорСубконто1 В ИЕРАРХИИ (&Номенклатура)";
		УсловиеНоменклатура = "Субконто1 В ИЕРАРХИИ (&Номенклатура)";
	КонецЕсли;
	
	
	//считаем переменные затраты и НЗВ
	Запрос = Новый Запрос;
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Данные.Материал ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Материал
	               |		ИНАЧЕ Данные.Материал
	               |	КОНЕЦ КАК Материал,
	               |	ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0) КАК Сумма1,
	               |	ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) КАК Количество1,
	               |	ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0) КАК Сумма2,
	               |	ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА Данные.Номенклатура ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Номенклатура
	               |		ИНАЧЕ Данные.Номенклатура
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА Данные.СтатьяЗатрат ЕСТЬ NULL 
	               |			ТОГДА НЗВ.СтатьяЗатрат
	               |		ИНАЧЕ Данные.СтатьяЗатрат
	               |	КОНЕЦ КАК СтатьяЗатрат,
	               |	ВЫБОР
	               |		КОГДА Данные.Предприятия ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Предприятия
	               |		ИНАЧЕ Данные.Предприятия
	               |	КОНЕЦ КАК Предприятия,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0)) / (ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена1,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0)) / (ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена2,
	               |	Неопределено КАК МатериалФерменты
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Субконто1
	               |			ИНАЧЕ Сценарий1.Субконто1
	               |		КОНЕЦ КАК Материал,
	               |		-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК Сумма1,
	               |		-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК Количество1,
	               |		-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК Сумма2,
	               |		-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК Количество2,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто1
	               |			ИНАЧЕ Сценарий1.КорСубконто1
	               |		КОНЕЦ КАК Номенклатура,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Предприятия
	               |			ИНАЧЕ Сценарий1.Предприятия
	               |		КОНЕЦ КАК Предприятия,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто2 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто2
	               |			ИНАЧЕ Сценарий1.КорСубконто2
	               |		КОНЕЦ КАК СтатьяЗатрат
	               |	ИЗ
	               |		РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
				   |                ,
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана В (&Сценарий1)
	               |					И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И КорСубконто2 В (&ОсновноеСырье)
	               |					И " + УсловиеКорНоменклатура + ",
	               |				КорСчет В (&КорСчет),
	               |				) КАК Сценарий1
	               |			ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
				   |                    ,
	               |					Счет В (&Счет2),
	               |					,
	               |					СценарийПлана = &Сценарий2
	               |						И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И КорСубконто2 В (&ОсновноеСырье)
	               |						И " + УсловиеКорНоменклатура + ",
	               |					КорСчет В (&КорСчет2),
	               |					) КАК Сценарий2
	               |			ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |				И Сценарий1.Предприятия = Сценарий2.Предприятия
	               |				И Сценарий1.КорСубконто1 = Сценарий2.КорСубконто1
	               |				И Сценарий1.КорСубконто2 = Сценарий2.КорСубконто2) КАК Данные
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто1
	               |				ИНАЧЕ Сценарий1.Субконто1
	               |			КОНЕЦ КАК Номенклатура,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто2 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто2
	               |				ИНАЧЕ Сценарий1.Субконто2
	               |			КОНЕЦ КАК Материал,
	               |			-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК СуммаНЗВ1,
	               |			-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК КоличествоНЗВ1,
	               |			-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК СуммаНЗВ2,
	               |			-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК КоличествоНЗВ2,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Предприятия
	               |				ИНАЧЕ Сценарий1.Предприятия
	               |			КОНЕЦ КАК Предприятия,
	               |			ВЫБОР
	               |				КОГДА (ВЫБОР
	               |						КОГДА Сценарий1.Субконто2.Счет10 ЕСТЬ NULL 
	               |							ТОГДА Сценарий2.Субконто2.Счет10
	               |						ИНАЧЕ Сценарий1.Субконто2.Счет10
	               |					КОНЕЦ).Код = ""10.02""
	               |					ТОГДА &ВспСырье
	               |				ИНАЧЕ &ОснСырье
	               |			КОНЕЦ КАК СтатьяЗатрат
	               |		ИЗ
	               |			РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
				   |                    ,
	               |					Счет В (&НЗВ),
	               |					,
	               |					Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И СценарийПлана В (&Сценарий1),
	               |					,
	               |					) КАК Сценарий1
	               |				ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |						&Дата1,
	               |						&Дата2,
				   |                        ,
	               |						Счет В (&НЗВ2),
	               |						,
	               |						Предприятия В ИЕРАРХИИ (&Предприятия)
	               |							И СценарийПлана = &Сценарий2,
	               |						,
	               |						) КАК Сценарий2
	               |				ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |					И Сценарий1.Субконто2 = Сценарий2.Субконто2
	               |					И Сценарий1.Предприятия = Сценарий2.Предприятия) КАК НЗВ
	               |		ПО Данные.Предприятия = НЗВ.Предприятия
	               |			И Данные.Номенклатура = НЗВ.Номенклатура
	               |			И Данные.Материал = НЗВ.Материал
	               |			И Данные.СтатьяЗатрат = НЗВ.СтатьяЗатрат
	               |
	               |УПОРЯДОЧИТЬ ПО
				   //|	СтатьяЗатрат,
	               |	МатериалФерменты,
	               |	Материал";
				   
		
	МассивОснЗатрат = Новый Массив;
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"));
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"));
	
	МассивСчетов1 = Новый Массив;
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.01"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.012"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.02"));
	МассивСчетов1.Добавить(ПланСчетов1.НайтиПоКоду("10.03"));
	
	МассивСчетов2 = Новый Массив;
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.01"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.012"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.02"));
	МассивСчетов2.Добавить(ПланСчетов2.НайтиПоКоду("10.03"));
	
	
	МассивСценариев1 = Новый Массив;
	МассивСценариев1.Добавить(ПараметрКоманды.Сценарий1);
	
	Если ПараметрКоманды.Корректировки И ПараметрКоманды.Сценарий1 <> Справочники.СценарииПланирования.СценарийФакт() Тогда	
		//МассивСценариев1.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("ОснСырье", Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01"));
	Запрос.УстановитьПараметр("ВспСырье", Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02"));
	Запрос.УстановитьПараметр("Счет", МассивСчетов1);
	Запрос.УстановитьПараметр("Счет2", МассивСчетов2);
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("НЗВ", ПланСчетов1.НайтиПоКоду("НЗВ"));
	Запрос.УстановитьПараметр("НЗВ2", ПланСчетов2.НайтиПоКоду("НЗВ"));
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОсновноеСырье", МассивОснЗатрат);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатСырье = Запрос.Выполнить();
	ВыборкаСырье = РезультатСырье.Выбрать();
	
	
	//запрос на производимые номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Объем1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА Объем2.Субконто1
	               |		ИНАЧЕ Объем1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(Объем1.КоличествоОборотДт, 0) КАК Объем1,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) КАК Объем2,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) - ЕСТЬNULL(Объем1.КоличествоОборот, 0) КАК Объем3,
	               |	ВЫБОР
	               |		КОГДА Объем1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА Объем2.Предприятия
	               |		ИНАЧЕ Объем1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В(&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК Объем1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК Объем2
	               |		ПО Объем1.Субконто1 = Объем2.Субконто1
	               |			И Объем1.Предприятия = Объем2.Предприятия
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Предприятия";
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатОбъемы = Запрос.Выполнить();
	
	
	//запрос по сценарию1 на расчет себестоимости
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
	               |	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2
	               |	КОНЕЦ КАК Статья,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2.Родитель
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
	               |	КОНЕЦ КАК Родитель1,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто1
	               |		ИНАЧЕ ДанныеСценарий1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Предприятия
	               |		ИНАЧЕ ДанныеСценарий1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В (&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК ДанныеСценарий1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК ДанныеСценарий2
	               |		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
	               |			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
	               |			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	                |	СтатьиЗатрат.Ссылка КАК Статья,
	                |	СтатьиЗатрат.ЭтоГруппа,
	                |	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
	                |	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
	                |	Данные.Номенклатура КАК Номенклатура,
	                |	Данные.Предприятия,
	                |	ВЫБОР
	                |		КОГДА СтатьиЗатрат.Ссылка В ИЕРАРХИИ (&ПрочиеРасходы)
	                |			ТОГДА ""ПрочиеЗатраты""
	                |		ИНАЧЕ ""ПроизводственныеЗатраты""
	                |	КОНЕЦ КАК ПризнакСтатьи
	                |ИЗ
	                |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
	                |		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
	                |				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	СтатьиЗатрат.Код,
	                |	Номенклатура";
	
	
	ЛишниеГруппыСтатей = Новый Массив;
	//ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.ЗатратыРеализация);
	//ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.УслугиУКГруппа);
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.НайтиПоКоду("40"));
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.НайтиПоКоду("20"));
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.НайтиПоКоду("40"));
	//Запрос.УстановитьПараметр("НаправлениеДеятельности", Справочники.НаправленияДеятельности.Строительное);
	Запрос.УстановитьПараметр("ПрочиеРасходы", Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);


	
	РезультатЗатраты = Запрос.Выполнить();
	//ВыборкаЗатраты = РезультатЗатраты.Выбрать();
	
	//считаем остатки готовой продукции на складе
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Субконто1
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК Сумма1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК Количество1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.СуммаНачальныйОстаток, 0) КАК Сумма2,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.КоличествоНачальныйОстаток, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Предприятия ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Предприятия
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".ОстаткиИОбороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			,
	               |			Счет В (&Счет),
	               |			,
	               |			СценарийПлана В(&Сценарий1)
	               |				И предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".ОстаткиИОбороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				,
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана = &Сценарий2
	               |					И предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты1
	               |		ПО БюджетныйОстаткиИОбороты.Субконто1 = БюджетныйОстаткиИОбороты1.Субконто1
	               |			И БюджетныйОстаткиИОбороты.Предприятия = БюджетныйОстаткиИОбороты1.Предприятия";
	
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.НайтиПоКоду("43"));
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.сабТипыНоменклатуры.ОсновнаяПродукция);
	
	РезультатОстатки = Запрос.Выполнить();
	ТЗ_Остатки = РезультатОстатки.Выгрузить(); // 19.02.13 di вывод начальных остатков
	
	
	ВыборкаПростой = Ложь;
	
	ЗапросВсеСтатьи = Новый Запрос;
	ЗапросВсеСтатьи.Текст = "ВЫБРАТЬ
	                        |	СтатьиЗатрат.Ссылка,
	                        |	СтатьиЗатрат.Родитель
	                        |ИЗ
	                        |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	                        |ГДЕ
	                        |	СтатьиЗатрат.ПометкаУдаления = ЛОЖЬ
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	СтатьиЗатрат.Код";
							
	ТЗ_ВсеСтатьи = ЗапросВсеСтатьи.Выполнить().Выгрузить();
	
	ТЗ_Сырье = РезультатСырье.Выгрузить();
	ТЗ_Сырье.Сортировать("Материал Возр, МатериалФерменты Возр");
	
	ТЗ_Затраты = РезультатЗатраты.Выгрузить();
	
	// получили запросами все необходимые данные	
	// формируем общую таблицу, которая будет выводиться (ТЗ)
	
	ТЗ_Объемы = РезультатОбъемы.Выгрузить();
	ТЗ_Объемы.Сортировать("Предприятия Возр");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Добавить(); // сценарий
	ТЗ.Добавить(); // предприятие, номенклатура
	ТЗ.Добавить(); // остаток на начало сумма
	ТЗ.Добавить(); // остаток на начало количество
	ТЗ.Добавить(); // остаток на начало цена
	ТЗ.Добавить(); // объем
	ТЗ.Колонки.Добавить("СтатьиЗатрат"); // колонка статей затрат
	
	// выводим объемы производства и остатки на начало (19.02.13)
	
	Для ИндСтр = 0 По ТЗ_Объемы.Количество() - 1 Цикл
		
		ТекПредприятие = ТЗ_Объемы[ИндСтр].Предприятия;
		ИтогОбъем1 = 0;
		ИтогОбъем2 = 0;
		ИтогОбъем3 = 0;
		
		//19.02.13
		ИтогКолОст1 = 0;
		ИтогКолОст2 = 0;
		ИтогКолОстОткл = 0;
		ИтогСуммаОст1 = 0;
		ИтогСуммаОст2 = 0;
		ИтогСуммаОстОткл = 0;
		//
		
		ВыведеноРаз = 0;
		
		Пока ТЗ_Объемы[ИндСтр].Предприятия = ТекПредприятие Цикл 
			
			// остатки 19.02.13
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Предприятия", ТЗ_Объемы[ИндСтр].Предприятия);
			СтруктураПоиска.Вставить("Номенклатура", ТЗ_Объемы[ИндСтр].Номенклатура);
			
			МассивОстатков = ТЗ_Остатки.НайтиСтроки(СтруктураПоиска);			
			СтрокаОстатков = Неопределено;
			
			Если МассивОстатков.Количество() Тогда
				СтрокаОстатков = МассивОстатков[0];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц1";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц1";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма1;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество1;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);	
				Иначе
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;
				
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем1;	
			КонецЕсли;
			
			// не суммируем вторичку (объем)			
			Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда			
				ИтогОбъем1 = ИтогОбъем1 + ТЗ_Объемы[ИндСтр].Объем1;				
			КонецЕсли;	
			
			// не суммируем вторичку (остатки)
			Если СтрокаОстатков <> Неопределено Тогда
				
				Если СтрокаОстатков.Номенклатура.ВторичнаяПереработка = Ложь Тогда							
					ИтогКолОст1 = ИтогКолОст1 + СтрокаОстатков.Количество1;
					ИтогСуммаОст1 = ИтогСуммаОст1 + СтрокаОстатков.Сумма1;				
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц2";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц2";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0);	
				Иначе
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;
				
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем2;	
			КонецЕсли;
			
			// не суммируем вторичку (объем)			
			Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда			
				ИтогОбъем2 = ИтогОбъем2 + ТЗ_Объемы[ИндСтр].Объем2;				
			КонецЕсли;
			
			// не суммируем вторичку (остатки)		
			Если СтрокаОстатков <> Неопределено Тогда
				
				Если СтрокаОстатков.Номенклатура.ВторичнаяПереработка = Ложь Тогда			
					ИтогКолОст2 = ИтогКолОст2 + СтрокаОстатков.Количество2;
					ИтогСуммаОст2 = ИтогСуммаОст2 + СтрокаОстатков.Сумма2;					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДваСценария Тогда
				
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Откл";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Откл";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
            	ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0) - ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
				Иначе	
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;	
					
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем3;		
			
				// не суммируем вторичку	(объем)			
				Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда				
					ИтогОбъем3 = ИтогОбъем3 + ТЗ_Объемы[ИндСтр].Объем3;					
				КонецЕсли;
				
                // не суммируем вторичку	(остатки)	
				Если СтрокаОстатков <> Неопределено Тогда
					
					Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда				
						ИтогКолОстОткл = ИтогКолОстОткл + (СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1);
						ИтогСуммаОстОткл = ИтогСуммаОстОткл + (СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1);						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;	
			
			ВыведеноРаз = ВыведеноРаз + 1;
			
			Если ИндСтр = ТЗ_Объемы.Количество() - 1 Тогда
				Прервать
			Иначе
				ИндСтр = ИндСтр + 1
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВыведеноРаз > 1 Тогда
		
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда				
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Сц1";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Сц1";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОст1;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст1;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОст1 <> 0, ИтогСуммаОст1 / ИтогКолОст1, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем1;					 		
			КонецЕсли;
						
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда				
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Сц2";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Сц2";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОст2;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст2;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОст2 <> 0, ИтогСуммаОст2 / ИтогКолОст2, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем2;					 						
			КонецЕсли;
			
			Если ДваСценария Тогда
			
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Откл";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Откл";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
            	ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОстОткл;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст2;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОстОткл <> 0, ИтогСуммаОстОткл / ИтогКолОстОткл, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем3;				
				
			КонецЕсли;
				
		КонецЕсли;
		
		Если ИндСтр = ТЗ_Объемы.Количество() - 1 Тогда
			
			ЕстьВТаблице = Ложь;
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				Если ТЗ[1][ИндКол] = ТЗ_Объемы[ИндСтр].Предприятия Тогда
					ЕстьВТаблице = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЕстьВТаблице Тогда
								
				Прервать;
				
			Иначе
				
				// остатки 19.02.13
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Предприятия", ТЗ_Объемы[ИндСтр].Предприятия);
				СтруктураПоиска.Вставить("Номенклатура", ТЗ_Объемы[ИндСтр].Номенклатура);
			
				МассивОстатков = ТЗ_Остатки.НайтиСтроки(СтруктураПоиска);			
				СтрокаОстатков = Неопределено;
			
				Если МассивОстатков.Количество() Тогда
					СтрокаОстатков = МассивОстатков[0];
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц1";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц1";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
					ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма1;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество1;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;	
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем1;	
				КонецЕсли;
			
				Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц2";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц2";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
					ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем2;	
				КонецЕсли;
			
			
				Если ДваСценария Тогда
				
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Откл";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Откл";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
            		ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0) - ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;	
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем3;		
							
				КонецЕсли;	
				
				Прервать;
				
			КонецЕсли;
			
		Иначе
			
			ИндСтр = ИндСтр - 1;
			
		КонецЕсли;	
			
	КонецЦикла;
		
	// выводим сырье
	
	ТЗ_Материалы = ТЗ_Сырье.Скопировать();
	
	СтрокаЗатратыСырьеОбщ = ТЗ.Добавить();
	СтрокаЗатратыСырьеОбщ.СтатьиЗатрат = Справочники.СтатьиЗатрат.ЗатратыОсн;
	
	СтрокаЗатратыСырьеВсп = ТЗ.Добавить();
	СтрокаЗатратыСырьеВсп.СтатьиЗатрат = Справочники.СтатьиЗатрат.ЗатратыВсп;
	
	СтрокаЗатратыВспомогательноеСырье = ТЗ.Добавить();
	СтрокаЗатратыВспомогательноеСырье.СтатьиЗатрат = Перечисления.Д_Ферменты.ВспомогательноеСырье;
	
	СтрокаЗатратыФерменты = ТЗ.Добавить();
	СтрокаЗатратыФерменты.СтатьиЗатрат = Перечисления.Д_Ферменты.Ферменты;	
	
	ТЗ_СырьеГрупп = ТЗ_Сырье.Скопировать();
	ТЗ_СырьеГрупп.Свернуть("Материал, СтатьяЗатрат, МатериалФерменты");
	
	// общие суммы для верхних группировок
	СуммаОснСырье1 = 0;
	СуммаВспМатериалы1 = 0;
	СуммаФерменты1 = 0;
	СуммаВспСырье1 = 0;
	СуммаОснСырье2 = 0;
	СуммаВспМатериалы2 = 0;
	СуммаФерменты2 = 0;
	СуммаВспСырье2 = 0;
	
	// проставляем суммы "затраты на основное сырье" и "затраты на вспомогательные материалы"
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 1]) = Ложь Тогда
			ТЗ[6][ИндКол + 1] = 0;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 1]) = Ложь Тогда
			ТЗ[7][ИндКол + 1] = 0;
		КонецЕсли;
		
		Если ДваСценария Тогда
		
			Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 3]) = Ложь Тогда
				ТЗ[6][ИндКол + 3] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 5]) = Ложь Тогда
				ТЗ[6][ИндКол + 5] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 3]) = Ложь Тогда
				ТЗ[7][ИндКол + 3] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 5]) = Ложь Тогда
				ТЗ[7][ИндКол + 5] = 0;
			КонецЕсли;
			
		КонецЕсли;			
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Предприятия", ТЗ[1][ИндКол]);
		СтруктураПоиска.Вставить("Номенклатура", ТЗ[1][ИндКол + 1]);
		
		НайденныеСтроки = ТЗ_Затраты.НайтиСтроки(СтруктураПоиска);
		
		Если ДваСценария Тогда
		
			Для Каждого Элемент Из НайденныеСтроки Цикл
			
				Если Элемент.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") Тогда
				
					ТЗ[6][ИндКол + 1] = ТЗ[6][ИндКол + 1] + Элемент.Сумма1;
					ТЗ[6][ИндКол + 3] = ТЗ[6][ИндКол + 3] + Элемент.Сумма2;
					ТЗ[6][ИндКол + 5] = ТЗ[6][ИндКол + 5] + (Элемент.Сумма2 - Элемент.Сумма1);
				
				ИначеЕсли Элемент.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
				
					ТЗ[7][ИндКол + 1] = ТЗ[7][ИндКол + 1] + Элемент.Сумма1;
					ТЗ[7][ИндКол + 3] = ТЗ[7][ИндКол + 3] + Элемент.Сумма2;
					ТЗ[7][ИндКол + 5] = ТЗ[7][ИндКол + 5] + (Элемент.Сумма2 - Элемент.Сумма1)
				
				Иначе
				
					Прервать;
				
				КонецЕсли;
			
			КонецЦикла;
		
			ИндКол = ИндКол + 5
			
		Иначе
			
			Для Каждого Элемент Из НайденныеСтроки Цикл
			
				Если Элемент.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") Тогда
				
					ТЗ[6][ИндКол + 1] = ТЗ[6][ИндКол + 1] + Элемент.Сумма1 + Элемент.Сумма2; 
				
				ИначеЕсли Элемент.Статья = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
				
					ТЗ[7][ИндКол + 1] = ТЗ[7][ИндКол + 1] + Элемент.Сумма1 + Элемент.Сумма2; 
				
				Иначе
				
					Прервать;
				
				КонецЕсли;
			
			КонецЦикла;
		
			ИндКол = ИндКол + 1
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для ИндСтр = 0 По ТЗ_СырьеГрупп.Количество() - 1 Цикл
					         
		// затраты на основное сырье
			
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Материал", ТЗ_СырьеГрупп[ИндСтр].Материал);
		СтруктураПоиска.Вставить("СтатьяЗатрат",  ТЗ_СырьеГрупп[ИндСтр].СтатьяЗатрат);
			
		МассивНайденных = ТЗ_Сырье.НайтиСтроки(СтруктураПоиска);
		СтрокаСырья = ТЗ.Добавить();
		СтрокаСырья.СтатьиЗатрат = СтруктураПоиска.Материал;
			
		Для Каждого Элемент Из МассивНайденных Цикл
			
			Если ДваСценария Тогда
			
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
									
					Если ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий1 Тогда
						
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество1;             // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена1;                 // сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;	
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + (Элемент.Цена1*Элемент.Количество1); 
						
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;											
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] + (Элемент.Цена1*Элемент.Количество1); 
							
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
																						
						КонецЕсли;
																	
					ИначеЕсли ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий2 Тогда
            	
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество2;             // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена2;                 // сумма
					
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 2] = Элемент.Количество2 - Элемент.Количество1;             // отклонение на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 3] = Элемент.Цена2 - Элемент.Цена1;                               // отклонение сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] = 0;
							КонецЕсли;
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + (Элемент.Цена2*Элемент.Количество2);
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] + (Элемент.Цена2*Элемент.Количество2 - Элемент.Цена1*Элемент.Количество1);
																								
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3]= 0;
							КонецЕсли;
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] +  (Элемент.Цена2*Элемент.Количество2);
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3] + (Элемент.Цена2*Элемент.Количество2 - Элемент.Цена1*Элемент.Количество1);
																		
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 3] = 0;
							КонецЕсли;
																								
						КонецЕсли;
														
					КонецЕсли;
				
				КонецЦикла;
				
			//один сценарий
			
			Иначе
				
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
									
					Если ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура Тогда
						
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество1 + Элемент.Количество2;    // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена1 + Элемент.Цена2;                 // сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;	
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + Элемент.Цена1* Элемент.Количество1 + Элемент.Цена2* Элемент.Количество2;
						
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;		
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] + Элемент.Цена1* Элемент.Количество1 + Элемент.Цена2* Элемент.Количество2;
						
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
																						
						КонецЕсли;
																															
					КонецЕсли;
				
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЦикла;
		
	
	// выводим статьи затрат
		
	ТЗ_ЗатратыГрупп = ТЗ_Затраты.Скопировать();
	ТЗ_ЗатратыГрупп.Свернуть("Статья, ЭтоГруппа");
	
	Для ИндСтрГр = 2 По ТЗ_ЗатратыГрупп.Количество() - 1 Цикл
		
		ТекСтатья = ТЗ_ЗатратыГрупп[ИндСтрГр].Статья;
		
		Если ТекСтатья.ЭтоГруппа = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаГруппыЗатрат = ТЗ.Добавить();
		СтрокаГруппыЗатрат[0] = ТекСтатья;		
		ИндексГрупп = ТЗ.Индекс(СтрокаГруппыЗатрат);	
		
		Для ИндСтр = 2 По ТЗ_Затраты.Количество() - 1 Цикл
			
			Если ТЗ_Затраты[ИндСтр].Статья.Родитель = ТекСтатья Тогда
				
				Если ТЗ.Найти(ТЗ_Затраты[ИндСтр].Статья) = Неопределено Тогда
									
					СтрокаСтатьиЗатрат = ТЗ.Добавить();
					СтрокаСтатьиЗатрат.СтатьиЗатрат = ТЗ_Затраты[ИндСтр].Статья;
					ИндексН = ТЗ.Индекс(СтрокаСтатьиЗатрат);
					
				Иначе
					
					ИндексН = ТЗ.Индекс(ТЗ.Найти(ТЗ_Затраты[ИндСтр].Статья));
					
				КонецЕсли;
				
				Если ДваСценария Тогда
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
								
						Если ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий1 Тогда
						
                        	// сумма сценарий1
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма1;
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма1;
						
						ИначеЕсли ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий2 Тогда
												
	                   		// сумма сценарий2
					   		// сумма отклонение
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 3]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 3] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 3]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 3] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма2;  
							ТЗ[ИндексН][ИндКол + 3] = ТЗ_Затраты[ИндСтр].Сумма2 - ТЗ_Затраты[ИндСтр].Сумма1;  
						
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма2;
							ТЗ[ИндексГрупп][ИндКол + 3] = ТЗ[ИндексГрупп][ИндКол + 3] + (ТЗ_Затраты[ИндСтр].Сумма2 - ТЗ_Затраты[ИндСтр].Сумма1); 
										
						КонецЕсли;
					
					КонецЦикла;	
					
				Иначе
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
								
						Если ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура Тогда
						
                        	// сумма
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма1 + ТЗ_Затраты[ИндСтр].Сумма2;
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма1 + ТЗ_Затраты[ИндСтр].Сумма2;
																
						КонецЕсли;
					
					КонецЦикла;	
					
				КонецЕсли;
								
			Иначе
				
				Продолжить;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// выводим на единицу
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		Для ИндСтр = 6 По ТЗ.Количество() - 1 Цикл
		
			Если ТипЗнч(ТЗ[1][ИндКол]) <> Тип("СправочникСсылка.Предприятия") Тогда
			
				Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
					ТЗ[ИндСтр][ИндКол] = 0;
				КонецЕсли;
			
				Продолжить;
			
			КонецЕсли;
		
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[5][ИндКол]) = Ложь Тогда
				ТЗ[5][ИндКол] = 0;
			КонецЕсли;
		
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол + 1]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол + 1] = 0;
			КонецЕсли;
		
			ТЗ[ИндСтр][ИндКол] = ТЗ[ИндСтр][ИндКол] + ?(ТЗ[5][ИндКол] > 0, ТЗ[ИндСтр][ИндКол + 1] / ТЗ[5][ИндКол], 0);	
			
			Если ДваСценария Тогда
			
				Если ЗначениеЗаполнено(ТЗ[0][ИндКол]) = Ложь И ТипЗнч(ТЗ[1][ИндКол]) = Тип("СправочникСсылка.Предприятия") Тогда
			
					ТЗ[ИндСтр][ИндКол] = ТЗ[ИндСтр][ИндКол - 2] - ТЗ[ИндСтр][ИндКол - 4];
			
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
					
	// обнуляем все незаполненные ячейки таблицы	
	Для ИндСтр = 2 По ТЗ.Количество() - 1 Цикл
		
		Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
			
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол] = 0;
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЦикла;

	
	// суммируем ТЗ, получаем всего по предприятиям и общие итоги	
	
	ПросуммироватьТаблицу(ТЗ, ПараметрКоманды, ДваСценария);
	 	
	// выводим ТЗ
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	// область шапка
	ОбластьШапкаСтатьи = Макет.ПолучитьОбласть("Шапка|СтатьиЗатрат");
	ОбластьШапкаСценарий1 = Макет.ПолучитьОбласть("Шапка|Сценарий1"+Уч);
	
	// остаток 
	ОбластьОстатокГрСтатьи = Макет.ПолучитьОбласть("ОстатокГр|СтатьиЗатрат");
	ОбластьОстатокГрСценарий1 = Макет.ПолучитьОбласть("ОстатокГр|Сценарий1"+Уч);
	ОбластьОстатокСтатьи = Макет.ПолучитьОбласть("Остаток|СтатьиЗатрат");
	ОбластьОстатокСценарий1 = Макет.ПолучитьОбласть("Остаток|Сценарий1"+Уч);
	
	// объем
	ОбластьОбъемСтатьи = Макет.ПолучитьОбласть("Объем|СтатьиЗатрат");
	ОбластьОбъемСценарий1 = Макет.ПолучитьОбласть("Объем|Сценарий1"+Уч);
	
	ОбластьШапкаДанныеГрупп = Макет.ПолучитьОбласть("ДанныеГрупп|СтатьиЗатрат");
	ОбластьШапкаДанные = Макет.ПолучитьОбласть("Данные|СтатьиЗатрат");
	ОбластьДанныеГруппСц1 = Макет.ПолучитьОбласть("ДанныеГрупп|Сценарий1"+Уч);
	ОбластьДанныеСц1 = Макет.ПолучитьОбласть("Данные|Сценарий1"+Уч);
	ОбластьШапкаПереработка = Макет.ПолучитьОбласть("ИтогПереработка|СтатьиЗатрат");
	ОбластьШапкаСырье = Макет.ПолучитьОбласть("ИтогСырье|СтатьиЗатрат");
	ОбластьШапкаИтог = Макет.ПолучитьОбласть("Итог|СтатьиЗатрат");
	ОбластьШапкаИтогСеб = Макет.ПолучитьОбласть("ИтогСеб|СтатьиЗатрат");
	ОбластьДанныеПереработкаСц1 = Макет.ПолучитьОбласть("ИтогПереработка|Сценарий1"+Уч);
	ОбластьДанныеСырьеСц1 = Макет.ПолучитьОбласть("ИтогСырье|Сценарий1"+Уч);
	ОбластьДанныеИтогСц1 = Макет.ПолучитьОбласть("Итог|Сценарий1"+Уч);
	ОбластьДанныеИтогСебСц1 = Макет.ПолучитьОбласть("ИтогСеб|Сценарий1"+Уч);
	
	Если ДваСценария Тогда
		
		// область шапка
		ОбластьШапкаСценарий2 = Макет.ПолучитьОбласть("Шапка|Сценарий2"+Уч);
		ОбластьШапкаОтклонение = Макет.ПолучитьОбласть("Шапка|Отклонение"+Уч);
		
		// остаток
		ОбластьОстатокГрСценарий2 = Макет.ПолучитьОбласть("ОстатокГр|Сценарий2"+Уч);
		ОбластьОстатокГрОтклонение = Макет.ПолучитьОбласть("ОстатокГр|Отклонение"+Уч);
		ОбластьОстатокСценарий2 = Макет.ПолучитьОбласть("Остаток|Сценарий2"+Уч);
		ОбластьОстатокОтклонение = Макет.ПолучитьОбласть("Остаток|Отклонение"+Уч);
		
		//объем
        ОбластьОбъемСценарий2 = Макет.ПолучитьОбласть("Объем|Сценарий2"+Уч);
		ОбластьОбъемОтклонение = Макет.ПолучитьОбласть("Объем|Отклонение"+Уч);
		
        ОбластьДанныеГруппСц2 = Макет.ПолучитьОбласть("ДанныеГрупп|Сценарий2"+Уч);
		ОбластьДанныеГруппОткл = Макет.ПолучитьОбласть("ДанныеГрупп|Отклонение"+Уч);
        ОбластьДанныеСц2 = Макет.ПолучитьОбласть("Данные|Сценарий2"+Уч);
		ОбластьДанныеОткл = Макет.ПолучитьОбласть("Данные|Отклонение"+Уч);
		ОбластьДанныеПереработкаСц2 = Макет.ПолучитьОбласть("ИтогПереработка|Сценарий2"+Уч);
		ОбластьДанныеПереработкаОткл = Макет.ПолучитьОбласть("ИтогПереработка|Отклонение"+Уч);
        ОбластьДанныеСырьеСц2 = Макет.ПолучитьОбласть("ИтогСырье|Сценарий2"+Уч);
		ОбластьДанныеСырьеОткл = Макет.ПолучитьОбласть("ИтогСырье|Отклонение"+Уч);
		ОбластьДанныеИтогСц2 = Макет.ПолучитьОбласть("Итог|Сценарий2"+Уч);
		ОбластьДанныеИтогОткл = Макет.ПолучитьОбласть("Итог|Отклонение"+Уч);
	    ОбластьДанныеИтогСебСц2 = Макет.ПолучитьОбласть("ИтогСеб|Сценарий2"+Уч);
		ОбластьДанныеИтогСебОткл = Макет.ПолучитьОбласть("ИтогСеб|Отклонение"+Уч);
		
	КонецЕсли;
	
	ОбластьШапкаСтатьи.Параметры.Период = ПараметрКоманды.Период;
	ТабДок.Вывести(ОбластьШапкаСтатьи);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		// шапка 
		ОбластьШапкаСценарий1.Параметры.Сценарий1 = ПараметрКоманды.Сценарий1;
		ОбластьШапкаСценарий1.Параметры.Предприятие = ТЗ[1][ИндКол];
		ОбластьШапкаСценарий1.Параметры.Номенклатура = ТЗ[1][ИндКол + 1];
				
		ТабДок.Присоединить(ОбластьШапкаСценарий1);

		Если ДваСценария Тогда
				
			// шапка 
			ОбластьШапкаСценарий2.Параметры.Сценарий2 = ПараметрКоманды.Сценарий2;
			ОбластьШапкаСценарий2.Параметры.Предприятие = ТЗ[1][ИндКол + 2];
			ОбластьШапкаСценарий2.Параметры.Номенклатура = ТЗ[1][ИндКол + 3];
				
			ТабДок.Присоединить(ОбластьШапкаСценарий2);
					
			// шапка 
			ОбластьШапкаОтклонение.Параметры.Предприятие = ТЗ[1][ИндКол + 4];
			ОбластьШапкаОтклонение.Параметры.Номенклатура = ТЗ[1][ИндКол + 5];
			
			ТабДок.Присоединить(ОбластьШапкаОтклонение);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	// di 15.05.13 скрывать остатки
	
	Если Не ПараметрКоманды.СкрыватьОстатки Тогда
	
		ТабДок.Вывести(ОбластьОстатокГрСтатьи, 1,,Ложь);
	
		Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
			// остаток гр
			ОбластьОстатокГрСценарий1.Параметры.НачОст1Гр = ТЗ[2][ИндКол + 1];
			ТабДок.Присоединить(ОбластьОстатокГрСценарий1, 1,, Ложь);
		
			Если ДваСценария Тогда
				
				ОбластьОстатокГрСценарий2.Параметры.НачОст2Гр = ТЗ[2][ИндКол + 3];
				ТабДок.Присоединить(ОбластьОстатокГрСценарий2, 1,, Ложь);
				
				ОбластьОстатокГрОтклонение.Параметры.НачОстОтклГр = ТЗ[2][ИндКол + 5];
				ТабДок.Присоединить(ОбластьОстатокГрОтклонение, 1,, Ложь);
			
				ИндКол = ИндКол + 5;
			
			Иначе
			
				ИндКол = ИндКол + 1;
			
			КонецЕсли;	
		
		КонецЦикла;
	
		ТабДок.Вывести(ОбластьОстатокСтатьи, 2,, Ложь);
	
		Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
			// остаток
			ОбластьОстатокСценарий1.Параметры.НачОст1Кол = ТЗ[3][ИндКол + 1];
			ОбластьОстатокСценарий1.Параметры.НачОст1Цена = ТЗ[4][ИндКол + 1];
			ТабДок.Присоединить(ОбластьОстатокСценарий1, 2,, Ложь);
				
			Если ДваСценария Тогда
					
				ОбластьОстатокСценарий2.Параметры.НачОст2Кол = ТЗ[3][ИндКол + 3];
				ОбластьОстатокСценарий2.Параметры.НачОст2Цена = ТЗ[4][ИндКол + 3];
				ТабДок.Присоединить(ОбластьОстатокСценарий2, 2,, Ложь);
				
				ОбластьОстатокОтклонение.Параметры.НачОстОтклКол = ТЗ[3][ИндКол + 5];
				ОбластьОстатокОтклонение.Параметры.НачОстОтклЦена = ТЗ[4][ИндКол + 5];
				ТабДок.Присоединить(ОбластьОстатокОтклонение, 2,, Ложь);
			
				ИндКол = ИндКол + 5;
			
			Иначе
			
				ИндКол = ИндКол + 1;
			
			КонецЕсли;	
		
		КонецЦикла;
	
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьОбъемСтатьи, 1);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
		// объем
		ОбластьОбъемСценарий1.Параметры.Объем1 = ТЗ[5][ИндКол];
		ТабДок.Присоединить(ОбластьОбъемСценарий1);
		
		Если ДваСценария Тогда
				
			ОбластьОбъемСценарий2.Параметры.Объем2 = ТЗ[5][ИндКол + 2];
			ТабДок.Присоединить(ОбластьОбъемСценарий2);
			
			ОбластьОбъемОтклонение.Параметры.ОбъемОткл = ТЗ[5][ИндКол + 4];
			ТабДок.Присоединить(ОбластьОбъемОтклонение);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	// выводим сырье и материалы
	
	Для ИндСтр = 6 По ТЗ.Количество() - 4 Цикл
				
		Если ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") Тогда  
			
			ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
			ТабДок.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
				ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
				ТабДок.Присоединить(ОбластьДанныеГруппСц1, 1);
				
				Если ДваСценария Тогда
				
					ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
					ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
					ТабДок.Присоединить(ОбластьДанныеГруппСц2, 1);
				
					ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
					ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
					ТабДок.Присоединить(ОбластьДанныеГруппОткл, 1);
				
					ИндКол = ИндКол + 5
					
				Иначе
					
					ИндКол = ИндКол + 1
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
				Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
					Если ЗначениеЗаполнено(ТЗ[ИндСтрДет][0].Ферменты) = Ложь Тогда
						ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
						ТабДок.Вывести(ОбластьШапкаДанные, 2,,Ложь);
						
						Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
							ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
							ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
							ТабДок.Присоединить(ОбластьДанныеСц1, 2);
							
							Если ДваСценария Тогда
							
								ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
								ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
								ТабДок.Присоединить(ОбластьДанныеСц2, 2);
				            	
								ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
								ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
								ТабДок.Присоединить(ОбластьДанныеОткл, 2);
							
								ИндКол = ИндКол + 5;
								
							Иначе
								
								ИндКол = ИндКол + 1
								
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;				
				КонецЕсли;
			
			КонецЦикла;
			
		ИначеЕсли ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
			
			ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
			ТабДок.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
				ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
				ТабДок.Присоединить(ОбластьДанныеГруппСц1, 1);
				
				Если ДваСценария Тогда
				
					ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
					ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
					ТабДок.Присоединить(ОбластьДанныеГруппСц2, 1);
				
					ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
					ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
					ТабДок.Присоединить(ОбластьДанныеГруппОткл, 1);
				
					ИндКол = ИндКол + 5;
					
				Иначе
					
					ИндКол = ИндКол + 1;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для ИндСтр1 = 3 По ТЗ.Количество() - 4 Цикл
			
				Если ТЗ[ИндСтр1][0] = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
				
					ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр1][0];
					ТабДок.Вывести(ОбластьШапкаДанныеГрупп, 2,,Ложь);
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
						ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр1][ИндКол];
						ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр1][ИндКол + 1];
				
						ТабДок.Присоединить(ОбластьДанныеГруппСц1, 2);
				
						Если ДваСценария Тогда
						
							ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр1][ИндКол + 2];
							ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр1][ИндКол + 3];
				
							ТабДок.Присоединить(ОбластьДанныеГруппСц2, 2);
				
							ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр1][ИндКол + 4];
							ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр1][ИндКол + 5];
				
							ТабДок.Присоединить(ОбластьДанныеГруппОткл, 2);
						
							ИндКол = ИндКол + 5;
							
						Иначе
							
							ИндКол = ИндКол + 1;
							
						КонецЕсли;
				
					КонецЦикла;
		
					Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
						Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
							Если ТЗ[ИндСтрДет][0].Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
								ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
								ТабДок.Вывести(ОбластьШапкаДанные, 3,,Ложь);
								
								Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
									ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
									ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
									ТабДок.Присоединить(ОбластьДанныеСц1, 3);
									
									Если ДваСценария Тогда
									
										ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
										ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
										ТабДок.Присоединить(ОбластьДанныеСц2, 3);
				
										ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
										ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
										ТабДок.Присоединить(ОбластьДанныеОткл, 3);
							
										ИндКол = ИндКол + 5;
										
									Иначе
										
										ИндКол = ИндКол + 1;
										
									КонецЕсли;
							
								КонецЦикла;
								
							КонецЕсли;				
						КонецЕсли;
			
					КонецЦикла;
			
				ИначеЕсли ТЗ[ИндСтр1][0] = Перечисления.Д_Ферменты.Ферменты Тогда
		
					ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр1][0];
					ТабДок.Вывести(ОбластьШапкаДанныеГрупп, 2,,Ложь);
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
						ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр1][ИндКол];
						ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр1][ИндКол + 1];
				
						ТабДок.Присоединить(ОбластьДанныеГруппСц1, 2);
						
						Если ДваСценария Тогда
						
							ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр1][ИндКол + 2];
							ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр1][ИндКол + 3];
				
							ТабДок.Присоединить(ОбластьДанныеГруппСц2, 2);
				
							ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр1][ИндКол + 4];
							ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр1][ИндКол + 5];
				
							ТабДок.Присоединить(ОбластьДанныеГруппОткл, 2);
						
							ИндКол = ИндКол + 5;
							
						Иначе
							
							ИндКол = ИндКол + 1;
							
						КонецЕсли;
				
					КонецЦикла;
			
					Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
						Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
							Если ТЗ[ИндСтрДет][0].Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
								ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
								ТабДок.Вывести(ОбластьШапкаДанные, 3,,Ложь);		
								
								Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
									ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
									ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
									ТабДок.Присоединить(ОбластьДанныеСц1, 3);
									
									Если ДваСценария Тогда
									
										ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
										ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
										ТабДок.Присоединить(ОбластьДанныеСц2, 3);
				
										ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
										ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
										ТабДок.Присоединить(ОбластьДанныеОткл, 3);
							
										ИндКол = ИндКол + 5;
										
									Иначе
										
										ИндКол = ИндКол + 1;
										
									КонецЕсли;
							
								КонецЦикла;
								
							КонецЕсли;				
						КонецЕсли;
				
					КонецЦикла;
					
				КонецЕсли;
			
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ТЗ[ИндСтр][0]) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			
			Если ТЗ[ИндСтр][0].ЭтоГруппа Тогда
				
				ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
				ТабДок.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
					
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
					ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
					ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
					ТабДок.Присоединить(ОбластьДанныеГруппСц1, 1);
					
					Если ДваСценария Тогда
					
						ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
						ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
						ТабДок.Присоединить(ОбластьДанныеГруппСц2, 1);
				
						ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
						ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
						ТабДок.Присоединить(ОбластьДанныеГруппОткл, 1);
						
						ИндКол = ИндКол + 5;
						
					Иначе
						
						ИндКол = ИндКол + 1;
						
					КонецЕсли;
				
				КонецЦикла;
				
			Иначе
				
				ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтр][0];
				ТабДок.Вывести(ОбластьШапкаДанные, 2,,Ложь);		
				
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
					ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтр][ИндКол];
					ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтр][ИндКол + 1];
				
					ТабДок.Присоединить(ОбластьДанныеСц1, 2);
					
					Если ДваСценария Тогда
					
						ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтр][ИндКол + 2];
						ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтр][ИндКол + 3];
				
						ТабДок.Присоединить(ОбластьДанныеСц2, 2);
				
						ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтр][ИндКол + 4];
						ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтр][ИндКол + 5];
				
						ТабДок.Присоединить(ОбластьДанныеОткл, 2);
							
						ИндКол = ИндКол + 5;
						
					Иначе
						
						ИндКол = ИндКол + 1;
						
					КонецЕсли;
							
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// ИТОГО
	ТабДок.Вывести(ОбластьШапкаИтог, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеИтогСц1.Параметры.Итог11 = ТЗ[ТЗ.Количество() - 4][ИндКол];
		ОбластьДанныеИтогСц1.Параметры.Итог1 = ТЗ[ТЗ.Количество() - 4][ИндКол + 1];
				
		ТабДок.Присоединить(ОбластьДанныеИтогСц1, 1);
		
		Если ДваСценария Тогда
				
			ОбластьДанныеИтогСц2.Параметры.Итог21 = ТЗ[ТЗ.Количество() - 4][ИндКол + 2];
			ОбластьДанныеИтогСц2.Параметры.Итог2 = ТЗ[ТЗ.Количество() - 4][ИндКол + 3];
				
			ТабДок.Присоединить(ОбластьДанныеИтогСц2, 1);
				
			ОбластьДанныеИтогОткл.Параметры.ИтогОткл1 = ТЗ[ТЗ.Количество() - 4][ИндКол + 4];
			ОбластьДанныеИтогОткл.Параметры.ИтогОткл = ТЗ[ТЗ.Количество() - 4][ИндКол + 5];
				
			ТабДок.Присоединить(ОбластьДанныеИтогОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
	
	// переработка
	ТабДок.Вывести(ОбластьШапкаПереработка, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеПереработкаСц1.Параметры.Переработка11 = ТЗ[ТЗ.Количество() - 3][ИндКол];
		ОбластьДанныеПереработкаСц1.Параметры.Переработка1 = ТЗ[ТЗ.Количество() - 3][ИндКол + 1];
				
		ТабДок.Присоединить(ОбластьДанныеПереработкаСц1, 1);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеПереработкаСц2.Параметры.Переработка21 = ТЗ[ТЗ.Количество() - 3][ИндКол + 2];
			ОбластьДанныеПереработкаСц2.Параметры.Переработка2 = ТЗ[ТЗ.Количество() - 3][ИндКол + 3];
				
			ТабДок.Присоединить(ОбластьДанныеПереработкаСц2, 1);
				
			ОбластьДанныеПереработкаОткл.Параметры.ПереработкаОткл1 = ТЗ[ТЗ.Количество() - 3][ИндКол + 4];
			ОбластьДанныеПереработкаОткл.Параметры.ПереработкаОткл = ТЗ[ТЗ.Количество() - 3][ИндКол + 5];
				
			ТабДок.Присоединить(ОбластьДанныеПереработкаОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
				
    // затраты на сырье
	ТабДок.Вывести(ОбластьШапкаСырье, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеСырьеСц1.Параметры.Сырье11 = ТЗ[ТЗ.Количество() - 2][ИндКол];
		ОбластьДанныеСырьеСц1.Параметры.Сырье1 = ТЗ[ТЗ.Количество() - 2][ИндКол + 1];
				
		ТабДок.Присоединить(ОбластьДанныеСырьеСц1, 1);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеСырьеСц2.Параметры.Сырье21 = ТЗ[ТЗ.Количество() - 2][ИндКол + 2];
			ОбластьДанныеСырьеСц2.Параметры.Сырье2 = ТЗ[ТЗ.Количество() - 2][ИндКол + 3];
				
			ТабДок.Присоединить(ОбластьДанныеСырьеСц2, 1);
				
			ОбластьДанныеСырьеОткл.Параметры.СырьеОткл1 = ТЗ[ТЗ.Количество() - 2][ИндКол + 4];
			ОбластьДанныеСырьеОткл.Параметры.СырьеОткл = ТЗ[ТЗ.Количество() - 2][ИндКол + 5];
				
			ТабДок.Присоединить(ОбластьДанныеСырьеОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
				
    // итог себ
	ТабДок.Вывести(ОбластьШапкаИтогСеб, 2,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеИтогСебСц1.Параметры.Себ11 = ТЗ[ТЗ.Количество() - 1][ИндКол];				
		ТабДок.Присоединить(ОбластьДанныеИтогСебСц1, 2);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеИтогСебСц2.Параметры.Себ21 = ТЗ[ТЗ.Количество() - 1][ИндКол + 2];	
			ТабДок.Присоединить(ОбластьДанныеИтогСебСц2, 2);
				
			ОбластьДанныеИтогСебОткл.Параметры.СебОткл1 = ТЗ[ТЗ.Количество() - 1][ИндКол + 2] - ТЗ[ТЗ.Количество() - 1][ИндКол];		
			ТабДок.Присоединить(ОбластьДанныеИтогСебОткл, 2);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;

				
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ТЗ;
		
КонецФункции

Функция ОбработатьПредприятия(СписокПредприятий, ПараметрКоманды, ДатаНач, ДатаКон, ПланСчетов1, ПланСчетов2)
	
	Если НЕ ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт() И НЕ ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.СценарийФакт() Тогда
		Возврат Новый Структура("ЗакрытыеПредприятия, ОткрытыеПредприятия", СписокПредприятий, Новый Массив);	
	КонецЕсли;
	
	Если НЕ ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.СценарийФакт() Тогда
		ТекСценарий = ПараметрКоманды.Сценарий2;
	Иначе
		ТекСценарий = ПараметрКоманды.Сценарий1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Данные1.Предприятия,
	               |	Данные1.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Счет В (&Счета),
	               |			,
	               |			СценарийПлана = &Сценарий
	               |				И Предприятия В ИЕРАРХИИ (&Предприятия),
	               |			,
	               |			) КАК Данные1";
	
	
	МассивСчетов1 = Новый Массив;
	МассивСчетов1.Добавить(ПланСчетов1.ЗатратыНаПрво);
	МассивСчетов1.Добавить(ПланСчетов1.ВыпускПродукции);
	МассивСчетов2 = Новый Массив;
	МассивСчетов2.Добавить(ПланСчетов2.ЗатратыНаПрво);
	МассивСчетов2.Добавить(ПланСчетов2.ВыпускПродукции);
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий", ТекСценарий);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счета", МассивСчетов1);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ЗакрытыеПредприятия = Новый Массив;
	ОткрытыеПредприятия = Новый Массив;
	
	Для каждого ТекПп Из СписокПредприятий Цикл
		СтруктураПоиска = Новый Структура("Предприятия", ТекПп);
		
		Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
			ОткрытыеПредприятия.Добавить(ТекПп);
		Иначе
			ЗакрытыеПредприятия.Добавить(ТекПп);
		КонецЕсли;
		
	КонецЦикла; 
	
    Возврат Новый Структура("ЗакрытыеПредприятия, ОткрытыеПредприятия", ЗакрытыеПредприятия, ОткрытыеПредприятия);
	

КонецФункции // ()

Процедура ПросуммироватьТаблицу(ТЗ, ПараметрКоманды, ДваСценария)
	
	// 23.11.12 убираем затраты по реализации и Услуги УК
	
	ГруппыИсключения = Новый Массив;
	ГруппыИсключения.Добавить(Справочники.СтатьиЗатрат.ПустаяСсылка());
	
	КолСтрок = ТЗ.Количество();
	ПослСтр = КолСтрок - 1;
	
	Пока ГруппыИсключения.Найти(ТЗ[ПослСтр].СтатьиЗатрат.Родитель) = Неопределено  Цикл
		
		ПослСтр = ПослСтр - 1;
		
	КонецЦикла;
	
	Для ОбрИнд = 0 По ПослСтр Цикл
		
		Если НЕ ГруппыИсключения.Найти(ТЗ[ПослСтр - ОбрИнд].СтатьиЗатрат.Родитель) = Неопределено ИЛИ НЕ ГруппыИсключения.Найти(ТЗ[ПослСтр - ОбрИнд].СтатьиЗатрат) = Неопределено Тогда
			ТЗ.Удалить(ПослСтр - ОбрИнд)
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// закомментированно di 19.02.13 (не убирать услуги ук)
	//СтрУслугиУКГр = ТЗ.Найти(Справочники.ИздержкиОбращения.УслугиУКГруппа, "СтатьиЗатрат");
	//ТЗ.Удалить(ТЗ.Индекс(СтрУслугиУКГр));
	//
	//СтрУслугиУК = ТЗ.Найти(Справочники.ИздержкиОбращения.УслугиУК, "СтатьиЗатрат");
	//ТЗ.Удалить(ТЗ.Индекс(СтрУслугиУК));
	//
	
	// суммируем по горизонтали для получения итогов по предприятиям	
	
	Для ИндСтр = 6 По ТЗ.Количество() - 1 Цикл
						
		Для Каждого ТекПредприятие Из ПараметрКоманды.Предприятие Цикл
			
			СуммаСц1 = 0;
			
			Если ДваСценария Тогда			
				СуммаСц2 = 0;
				СуммаОткл = 0; 
			КонецЕсли;
			
			Для ИндексПредпр = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				Если ТЗ[1][ИндексПредпр] <> ТекПредприятие Тогда
					Если ДваСценария Тогда
						ИндексПредпр = ИндексПредпр + 5;
					Иначе
						ИндексПредпр = ИндексПредпр + 1;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				
				Если ТЗ[1][ИндексПредпр + 1] = "ВСЕГО" Тогда
					
					ИндексВсего = ИндексПредпр;
								
					ТЗ[ИндСтр][ИндексВсего] = ТЗ[ИндСтр][ИндексВсего] + ?(ТЗ[5][ИндексВсего] <> 0, СуммаСц1/ТЗ[5][ИндексВсего], 0);					
					ТЗ[ИндСтр][ИндексВсего + 1] = ТЗ[ИндСтр][ИндексВсего + 1] + СуммаСц1;				
					
					Если ДваСценария Тогда
						ТЗ[ИндСтр][ИндексВсего + 2] = ТЗ[ИндСтр][ИндексВсего + 2] + ?(ТЗ[5][ИндексВсего + 2] <> 0, СуммаСц2/ТЗ[5][ИндексВсего + 2], 0);					
						ТЗ[ИндСтр][ИндексВсего + 3] = ТЗ[ИндСтр][ИндексВсего + 3] + СуммаСц2;
						ТЗ[ИндСтр][ИндексВсего + 4] = ТЗ[ИндСтр][ИндексВсего + 2] - ТЗ[ИндСтр][ИндексВсего];  					
						ТЗ[ИндСтр][ИндексВсего + 5] = ТЗ[ИндСтр][ИндексВсего + 5] + СуммаОткл;
					КонецЕсли;
						
					Прервать;
					
				КонецЕсли;
				
				// не суммируем вторичку
				
				Если ТЗ[1][ИндексПредпр + 1].ВторичнаяПереработка = Ложь Тогда 
				
					СуммаСц1 = СуммаСц1 + ТЗ[ИндСтр][ИндексПредпр + 1];
					
				КонецЕсли;
								
				Если ДваСценария Тогда
					
					Если ТЗ[1][ИндексПредпр + 1].ВторичнаяПереработка = Ложь Тогда 
					
						СуммаСц2 = СуммаСц2 + ТЗ[ИндСтр][ИндексПредпр + 3];
						СуммаОткл = СуммаОткл + ТЗ[ИндСтр][ИндексПредпр + 5]; 			
						
					КонецЕсли;	
					
					ИндексПредпр = ИндексПредпр + 5;
				Иначе
					ИндексПредпр = ИндексПредпр + 1;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
				
	КонецЦикла;
	
	// суммируем по вертикали, получаем ИТОГО, переработка, затраты на сырье, средняя себестоимость
	
	Строка_ИТОГО = ТЗ.Добавить();
	Строка_ИТОГО.СтатьиЗатрат = "ИТОГО:";
	ИндИтого = ТЗ.Индекс(Строка_ИТОГО);
	
	Строка_Переработка = ТЗ.Добавить();
	Строка_Переработка.СтатьиЗатрат = "переработка:";
	ИндПереработка = ТЗ.Индекс(Строка_Переработка);
	
	Строка_Сырье = ТЗ.Добавить();
	Строка_Сырье.СтатьиЗатрат = "затраты на сырье";
	ИндСырье = ТЗ.Индекс(Строка_Сырье);
	
	Строка_СредСеб = ТЗ.Добавить();
	Строка_СредСеб.СтатьиЗатрат = "Средняя себестоимость";
	ИндСредСеб = ТЗ.Индекс(Строка_СредСеб);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		// #ПрочаяСебестоимость {
		СуммаПрочейПереработки = 0;
		//}
		
		Для ИндСтр = 6 По ТЗ.Количество() - 5 Цикл
			
			Если ЗначениеЗаполнено(ТЗ[ИндИтого][ИндКол]) = Ложь Тогда
				ТЗ[ИндИтого][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[ИндСырье][ИндКол]) = Ложь Тогда
				ТЗ[ИндСырье][ИндКол] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[ИндПереработка][ИндКол]) = Ложь Тогда
				ТЗ[ИндПереработка][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[ИндСредСеб][ИндКол]) = Ложь Тогда
				ТЗ[ИндСредСеб][ИндКол] = 0;
			КонецЕсли;
			
			Если ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.01") ИЛИ ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.НайтиПоКоду("2011.02") Тогда
								
				ТЗ[ИндСырье][ИндКол] = ТЗ[ИндСырье][ИндКол] + ТЗ[ИндСтр][ИндКол];
				
			ИначеЕсли ТипЗнч(ТЗ[ИндСтр][0]) = Тип("СправочникСсылка.СтатьиЗатрат") И ТЗ[ИндСтр][0].ЭтоГруппа = Ложь Тогда
				
				// #ПрочаяПереработка {
				СтатьяНеВходитВПереработку = сабОбщегоНазначения.ПолучитьЗначениеСвойства(ТЗ[ИндСтр][0], "Исключить из расчета переработки в отчете по себестоимости");
				
				Если Не ЗначениеЗаполнено(СтатьяНеВходитВПереработку) Тогда
					СтатьяНеВходитВПереработку = Ложь;
				КонецЕсли;
				
				Если СтатьяНеВходитВПереработку Тогда
					СуммаПрочейПереработки = СуммаПрочейПереработки + ТЗ[ИндСтр][ИндКол];
				Иначе
					ТЗ[ИндПереработка][ИндКол] = ТЗ[ИндПереработка][ИндКол] + ТЗ[ИндСтр][ИндКол];
				КонецЕсли;
				//}
			КонецЕсли;
			
			ТЗ[ИндИтого][ИндКол] = ТЗ[ИндСырье][ИндКол] + ТЗ[ИндПереработка][ИндКол] + СуммаПрочейПереработки;
			
			// если номер колонки нечетный, то на единицу, если четный сумма
			Если ИндКол > 0 И ИндКол%2 = 0 Тогда
				ТЗ[ИндСредСеб][ИндКол - 1] = ?((ТЗ[3][ИндКол] + ТЗ[5][ИндКол - 1]) <> 0, (ТЗ[ИндИтого][ИндКол] + ТЗ[2][ИндКол]) / (ТЗ[3][ИндКол] + ТЗ[5][ИндКол - 1]), 0);
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
		
	// сдвигаем строку с ферментами на одну позицию вверх	
	СтрФерменты = ТЗ.Найти(Перечисления.Д_Ферменты.Ферменты, "СтатьиЗатрат");
	ТЗ.Сдвинуть(СтрФерменты, -1);
		
КонецПроцедуры

Функция ПолучитьПараметрыКоманды() Экспорт
	
	ПараметрКоманды = Новый Структура;
	
	ТекПредприятия = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	
	Если ТипЗнч(ТекПредприятия) = Тип("СправочникСсылка.Предприятия") Тогда
		МассивПредприятий = Новый Массив;
		МассивПредприятий.Добавить(ТекПредприятия);
	ИначеЕсли ТипЗнч(ТекПредприятия) = Тип("СписокЗначений") Тогда
		МассивПредприятий = ТекПредприятия.ВыгрузитьЗначения();
	КонецЕсли;
	
	ПараметрКоманды.Вставить("Предприятие", МассивПредприятий);
	ПараметрКоманды.Вставить("Сценарий1", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение);
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Использование Тогда
		ПараметрКоманды.Вставить("Сценарий2", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Значение);
	Иначе
		ПараметрКоманды.Вставить("Сценарий2", Справочники.СценарииПланирования.ПустаяСсылка());		
	КонецЕсли;
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Использование Тогда
		ПараметрКоманды.Вставить("Номенклатура",  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Значение);
	Иначе
		ПараметрКоманды.Вставить("Номенклатура",  Неопределено);
	КонецЕсли;
		
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Использование Тогда
		ПараметрКоманды.Вставить("Интервал", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Значение);
	Иначе
		ПараметрКоманды.Вставить("Интервал", Перечисления.Д_Интервал.Нет);	
	КонецЕсли;
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[6].Использование Тогда
		ПараметрКоманды.Вставить("Прочие", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[6].Значение);
	Иначе
		ПараметрКоманды.Вставить("Прочие", Ложь);
	КонецЕсли;
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[7].Использование Тогда
		ПараметрКоманды.Вставить("знака2", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[7].Значение);
	Иначе
		ПараметрКоманды.Вставить("знака2", Ложь);	
	КонецЕсли;
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].Использование Тогда
		ПараметрКоманды.Вставить("Корректировки", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[8].Значение);
	Иначе
		ПараметрКоманды.Вставить("Корректировки", Ложь);	
	КонецЕсли;
		
	ПараметрКоманды.Вставить("Период",  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Значение);
	
	// di 15.05.13 скрывать остатки
	ПараметрКоманды.Вставить("СкрыватьОстатки",  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[10].Значение);
    ПараметрКоманды.Вставить("Интервал", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[5].Значение);
	
	Возврат ПараметрКоманды;
	
КонецФункции

Функция ВычислитьИтоговуюСреднююСебестоимость(Предприятие, Номенклатура, Сценарий, ТЗ, ВсегоПериодов, ПараметрКоманды)
	
	СС = 0;
	
	Строки = ТЗ.НайтиСтроки(Новый Структура("Предприятие, Резерв1, ", Предприятие, Номенклатура));
	
	ОстНачСумм = 0;
	ИмяОстНач = "Остаток на начало " + ?(Номенклатура = Неопределено, "(ВСЕГО)", Номенклатура.Наименование + ":");
	ИндОстНач = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОстНач Тогда
			ИндОстНач = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
		
	Если Не ИндОстНач = Неопределено Тогда
					
		Если Сценарий = ПараметрКоманды.Сценарий1 Тогда
			ОстНачСумм = ОстНачСумм + Строки[ИндОстНач][8];
		Иначе
			ОстНачСумм = ОстНачСумм + Строки[ИндОстНач][10];
		КонецЕсли;
			
	КонецЕсли;
	
	ОстНачКол = 0;
	ИмяОстНачКол = "Количество";
	ИндОстНачКол = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОстНачКол Тогда
			ИндОстНачКол = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОстНачКол = Неопределено Тогда
					
		Если Сценарий = ПараметрКоманды.Сценарий1 Тогда
			ОстНачКол = ОстНачКол + Строки[ИндОстНачКол][8];
		Иначе
			ОстНачКол = ОстНачКол + Строки[ИндОстНачКол][10];
		КонецЕсли;
								
	КонецЕсли;

	Объем = 0;
	ИмяОбъем = "Объем производства " + ?(Номенклатура = Неопределено, "(ВСЕГО)", Номенклатура.Наименование + ?(Номенклатура.ВторичнаяПереработка, " (Вторичка)", ""));
	ИндОбъем = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОбъем Тогда
			ИндОбъем = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОбъем = Неопределено Тогда
		
		Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
			
			Если Сценарий = ПараметрКоманды.Сценарий1 Тогда
				Объем = Объем + Строки[ИндОбъем][Колонка * 2 + 6];
			Иначе
				Объем = Объем + Строки[ИндОбъем][Колонка * 2 + 8];
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
				Колонка = Колонка + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	ОбщСумма = 0;
	ИмяОбщСумма = "ИТОГО:";
	ИндОбщСумма = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОбщСумма Тогда
			ИндОбщСумма = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОбщСумма = Неопределено Тогда
		
		Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), 1, 2) Цикл
			
			Если Сценарий = ПараметрКоманды.Сценарий1 Тогда
				ОбщСумма = ОбщСумма + Строки[ИндОбщСумма][Колонка * 2 + 6];
			Иначе
				ОбщСумма = ОбщСумма + Строки[ИндОбщСумма][Колонка * 2 + 8];
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2)  Тогда
				Колонка = Колонка + 1;
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЕсли;

	Если ОстНачКол = 0 Тогда
		СС = ?(Объем = 0, 0, (ОбщСумма + ОстНачСумм) / Объем);
	ИначеЕсли Объем = 0 Тогда
		СС = ?(ОстНачКол = 0, 0, (ОбщСумма + ОстНачСумм) / ОстНачКол);
	Иначе
		СС = ?((Объем + ОстНачКол) = 0, 0, (ОбщСумма + ОстНачСумм) / (Объем + ОстНачКол));
	КонецЕсли;
	
	Возврат СС;
	
КонецФункции

Функция ВычислитьСреднююСебестоимостьНоменклатур(Предприятие, ТекКолонка, ТЗ)
		
	СС = 0;
	
	Строки = ТЗ.НайтиСтроки(Новый Структура("Предприятие, Резерв1, ", Предприятие, Неопределено));
	
	ОстНачСумм = 0;
	ИмяОстНач = "Остаток на начало (ВСЕГО)";
	ИндОстНач = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОстНач Тогда
			ИндОстНач = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
		
	Если Не ИндОстНач = Неопределено Тогда				
		ОстНачСумм = ОстНачСумм + Строки[ИндОстНач][ТекКолонка];		
	КонецЕсли;
	
	ОстНачКол = 0;
	ИмяОстНачКол = "Количество";
	ИндОстНачКол = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОстНачКол Тогда
			ИндОстНачКол = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОстНачКол = Неопределено Тогда
		ОстНачКол = ОстНачКол + Строки[ИндОстНачКол][ТекКолонка];								
	КонецЕсли;

	Объем = 0;
	ИмяОбъем = "Объем производства (ВСЕГО)";
	ИндОбъем = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОбъем Тогда
			ИндОбъем = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОбъем = Неопределено Тогда					
		Объем = Объем + Строки[ИндОбъем][ТекКолонка];		
	КонецЕсли;

	ОбщСумма = 0;
	ИмяОбщСумма = "ИТОГО:";
	ИндОбщСумма = Неопределено;
	
	Для ИндЭл = 0 По Строки.Количество() - 1 Цикл
		
		Если Строки[ИндЭл].Значение = ИмяОбщСумма Тогда
			ИндОбщСумма = ИндЭл;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИндОбщСумма = Неопределено Тогда
		ОбщСумма = ОбщСумма + Строки[ИндОбщСумма][ТекКолонка];		
	КонецЕсли;

	Если ОстНачКол = 0 Тогда
		СС = ?(Объем = 0, 0, (ОбщСумма + ОстНачСумм) / Объем);
	ИначеЕсли Объем = 0 Тогда
		СС = ?(ОстНачКол = 0, 0, (ОбщСумма + ОстНачСумм) / ОстНачКол);
	Иначе
		СС = ?((Объем + ОстНачКол) = 0, 0, (ОбщСумма + ОстНачСумм) / (Объем + ОстНачКол));
	КонецЕсли;
	
	Возврат СС;
	
КонецФункции
