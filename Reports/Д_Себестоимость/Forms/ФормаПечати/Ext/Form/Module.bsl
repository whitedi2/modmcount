
&НаКлиенте
Процедура Печать(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СписокТекущихНастроек = Новый Массив;
	
	Для Каждого Эл Из ЭтаФорма.ВладелецФормы.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		СписокТекущихНастроек.Добавить(Эл.Значение);
	КонецЦикла;
	
	ПараметрКоманды = ПолучитьПараметрыКоманды(СписокТекущихНастроек);
	
	Напечатать(ПараметрКоманды);
		
КонецПроцедуры

 &НаСервере
Процедура Напечатать(ПараметрКоманды)
	 			
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.Факт, ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	Регистр2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.Факт, "Учетный", "Бюджетный");
	
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	Для Кол = 1 По 100 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Попытка
	    ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_Себестоимость");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_Себестоимость;
	КонецПопытки;
	
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий1) и  НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
		
		ДваСценария = Истина;
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетПланФактГоризонтальный");
		
	иначе
		
		ДваСценария = Ложь;
		Макет = ЭтотОбъект2.ПолучитьМакет("МакетГоризонтальный");
		
	КонецЕсли; 
		
	Если ПараметрКоманды.Знака2 Тогда
		Уч = "Уч";
	Иначе
		Уч = "";	
	КонецЕсли;
	
	Результат.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
		
	Интервал = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, 1, 
	?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ПараметрКоманды.Период.ДатаНачала;	
	КонецПериода = ПараметрКоманды.Период.ДатаОкончания;
		
	ВсегоПериодов = 1;
	
	СписокПредприятий = ПараметрКоманды.Предприятие;
		
	ДатаНач = ПараметрКоманды.Период.ДатаНачала;
	ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	КоэффициентОтступа = 0;
	
	Если ПустаяСтрока(ПараметрКоманды.Номенклатура) И ТипЗнч(ПараметрКоманды.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		УсловиеКорНоменклатура = "Истина";
		УсловиеНоменклатура = "Истина";
	ИначеЕсли ПараметрКоманды.Номенклатура = Неопределено Тогда
		УсловиеКорНоменклатура = "КорСубконто1.ТипНоменклатуры = &ТипНоменклатуры";
		УсловиеНоменклатура = "Субконто1.ТипНоменклатуры = &ТипНоменклатуры";
	Иначе
		УсловиеКорНоменклатура = "КорСубконто1 В ИЕРАРХИИ (&Номенклатура)";
		УсловиеНоменклатура = "Субконто1 В ИЕРАРХИИ (&Номенклатура)";
	КонецЕсли;
	
	
	//считаем переменные затраты и НЗВ
	Запрос = Новый Запрос;
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Данные.Материал ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Материал
	               |		ИНАЧЕ Данные.Материал
	               |	КОНЕЦ КАК Материал,
	               |	ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0) КАК Сумма1,
	               |	ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) КАК Количество1,
	               |	ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0) КАК Сумма2,
	               |	ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА Данные.Номенклатура ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Номенклатура
	               |		ИНАЧЕ Данные.Номенклатура
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА Данные.СтатьяЗатрат ЕСТЬ NULL 
	               |			ТОГДА НЗВ.СтатьяЗатрат
	               |		ИНАЧЕ Данные.СтатьяЗатрат
	               |	КОНЕЦ КАК СтатьяЗатрат,
	               |	ВЫБОР
	               |		КОГДА Данные.Предприятия ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Предприятия
	               |		ИНАЧЕ Данные.Предприятия
	               |	КОНЕЦ КАК Предприятия,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма1, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ1, 0)) / (ЕСТЬNULL(Данные.Количество1, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ1, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена1,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА (НЕ ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0) = 0)
	               |				ТОГДА (ЕСТЬNULL(Данные.Сумма2, 0) + ЕСТЬNULL(НЗВ.СуммаНЗВ2, 0)) / (ЕСТЬNULL(Данные.Количество2, 0) + ЕСТЬNULL(НЗВ.КоличествоНЗВ2, 0))
	               |			ИНАЧЕ 0
	               |		КОНЕЦ, 0) КАК Цена2,
	               |	ВЫБОР
	               |		КОГДА Данные.Материал.Ферменты ЕСТЬ NULL 
	               |			ТОГДА НЗВ.Материал.Ферменты
	               |		ИНАЧЕ Данные.Материал.Ферменты
	               |	КОНЕЦ КАК МатериалФерменты
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Субконто1
	               |			ИНАЧЕ Сценарий1.Субконто1
	               |		КОНЕЦ КАК Материал,
	               |		-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК Сумма1,
	               |		-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК Количество1,
	               |		-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК Сумма2,
	               |		-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК Количество2,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто1 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто1
	               |			ИНАЧЕ Сценарий1.КорСубконто1
	               |		КОНЕЦ КАК Номенклатура,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.Предприятия
	               |			ИНАЧЕ Сценарий1.Предприятия
	               |		КОНЕЦ КАК Предприятия,
	               |		ВЫБОР
	               |			КОГДА Сценарий1.КорСубконто2 ЕСТЬ NULL 
	               |				ТОГДА Сценарий2.КорСубконто2
	               |			ИНАЧЕ Сценарий1.КорСубконто2
	               |		КОНЕЦ КАК СтатьяЗатрат
	               |	ИЗ
	               |		РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
				   |                ,
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана В (&Сценарий1)
	               |					И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И КорСубконто2 В (&ОсновноеСырье)
	               |					И " + УсловиеКорНоменклатура + ",
	               |				КорСчет В (&КорСчет),
	               |				) КАК Сценарий1
	               |			ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
				   |                    ,
	               |					Счет В (&Счет2),
	               |					,
	               |					СценарийПлана = &Сценарий2
	               |						И Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И КорСубконто2 В (&ОсновноеСырье)
	               |						И " + УсловиеКорНоменклатура + ",
	               |					КорСчет В (&КорСчет2),
	               |					) КАК Сценарий2
	               |			ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |				И Сценарий1.Предприятия = Сценарий2.Предприятия
	               |				И Сценарий1.КорСубконто1 = Сценарий2.КорСубконто1
	               |				И Сценарий1.КорСубконто2 = Сценарий2.КорСубконто2) КАК Данные
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто1 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто1
	               |				ИНАЧЕ Сценарий1.Субконто1
	               |			КОНЕЦ КАК Номенклатура,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Субконто2 ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Субконто2
	               |				ИНАЧЕ Сценарий1.Субконто2
	               |			КОНЕЦ КАК Материал,
	               |			-ЕСТЬNULL(Сценарий1.СуммаОборот, 0) КАК СуммаНЗВ1,
	               |			-ЕСТЬNULL(Сценарий1.КоличествоОборот, 0) КАК КоличествоНЗВ1,
	               |			-ЕСТЬNULL(Сценарий2.СуммаОборот, 0) КАК СуммаНЗВ2,
	               |			-ЕСТЬNULL(Сценарий2.КоличествоОборот, 0) КАК КоличествоНЗВ2,
	               |			ВЫБОР
	               |				КОГДА Сценарий1.Предприятия ЕСТЬ NULL 
	               |					ТОГДА Сценарий2.Предприятия
	               |				ИНАЧЕ Сценарий1.Предприятия
	               |			КОНЕЦ КАК Предприятия,
	               |			ВЫБОР
	               |				КОГДА ВЫБОР
	               |						КОГДА Сценарий1.Субконто2.Счет10 ЕСТЬ NULL 
	               |							ТОГДА Сценарий2.Субконто2.Счет10
	               |						ИНАЧЕ Сценарий1.Субконто2.Счет10
	               |					КОНЕЦ = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВспомСырье)
	               |					ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ЗатратыВсп)
	               |				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ЗатратыОсн)
	               |			КОНЕЦ КАК СтатьяЗатрат
	               |		ИЗ
	               |			РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |					&Дата1,
	               |					&Дата2,
				   |                    ,
	               |					Счет В (&НЗВ),
	               |					,
	               |					Предприятия В ИЕРАРХИИ (&Предприятия)
	               |						И СценарийПлана В (&Сценарий1),
	               |					,
	               |					) КАК Сценарий1
	               |				ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |						&Дата1,
	               |						&Дата2,
				   |                        ,
	               |						Счет В (&НЗВ2),
	               |						,
	               |						Предприятия В ИЕРАРХИИ (&Предприятия)
	               |							И СценарийПлана = &Сценарий2,
	               |						,
	               |						) КАК Сценарий2
	               |				ПО Сценарий1.Субконто1 = Сценарий2.Субконто1
	               |					И Сценарий1.Субконто2 = Сценарий2.Субконто2
	               |					И Сценарий1.Предприятия = Сценарий2.Предприятия) КАК НЗВ
	               |		ПО Данные.Предприятия = НЗВ.Предприятия
	               |			И Данные.Номенклатура = НЗВ.Номенклатура
	               |			И Данные.Материал = НЗВ.Материал
	               |			И Данные.СтатьяЗатрат = НЗВ.СтатьяЗатрат
	               |
	               |УПОРЯДОЧИТЬ ПО
				   //|	СтатьяЗатрат,
	               |	МатериалФерменты,
	               |	Материал";
				   
		
	МассивОснЗатрат = Новый Массив;
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.ЗатратыОсн);
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.ЗатратыВсп);
	
	МассивСчетов1 = Новый Массив;
	МассивСчетов1.Добавить(ПланСчетов1.ОсновноеСырье);
	МассивСчетов1.Добавить(ПланСчетов1.ВспомСырье);
	МассивСчетов1.Добавить(ПланСчетов1.Тара);
	
	МассивСчетов2 = Новый Массив;
	МассивСчетов2.Добавить(ПланСчетов2.ОсновноеСырье);
	МассивСчетов2.Добавить(ПланСчетов2.ВспомСырье);
	МассивСчетов2.Добавить(ПланСчетов2.Тара);
	
	
	МассивСценариев1 = Новый Массив;
	МассивСценариев1.Добавить(ПараметрКоманды.Сценарий1);
	Если ПараметрКоманды.Корректировки Тогда
		
		МассивСценариев1.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	//ПланыСчетов.Учетный.ВспомСырье
	Запрос.УстановитьПараметр("Счет", МассивСчетов1);
	Запрос.УстановитьПараметр("Счет2", МассивСчетов2);
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.ОсновноеПрво);
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.ОсновноеПрво);
	Запрос.УстановитьПараметр("НЗВ", ПланСчетов1.НезавершенноеПроизводство);
	Запрос.УстановитьПараметр("НЗВ2", ПланСчетов2.НезавершенноеПроизводство);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОсновноеСырье", МассивОснЗатрат);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатСырье = Запрос.Выполнить();
	ВыборкаСырье = РезультатСырье.Выбрать();
	
	
	//запрос на производимые номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Объем1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА Объем2.Субконто1
	               |		ИНАЧЕ Объем1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(Объем1.КоличествоОборотДт, 0) КАК Объем1,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) КАК Объем2,
	               |	ЕСТЬNULL(Объем2.КоличествоОборот, 0) - ЕСТЬNULL(Объем1.КоличествоОборот, 0) КАК Объем3,
	               |	ВЫБОР
	               |		КОГДА Объем1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА Объем2.Предприятия
	               |		ИНАЧЕ Объем1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В(&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК Объем1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК Объем2
	               |		ПО Объем1.Субконто1 = Объем2.Субконто1
	               |			И Объем1.Предприятия = Объем2.Предприятия
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Предприятия";
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.ГотоваяПродукция);
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.ВыпускПродукции);
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.ГотоваяПродукция);
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.ВыпускПродукции);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	
	РезультатОбъемы = Запрос.Выполнить();
	
	
	//запрос по сценарию1 на расчет себестоимости
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
	               |	-ЕСТЬNULL(ДанныеСценарий2.СуммаОборот, 0) КАК Сумма2,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2
	               |	КОНЕЦ КАК Статья,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто2.Родитель ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто2.Родитель
	               |		ИНАЧЕ ДанныеСценарий1.Субконто2.Родитель
	               |	КОНЕЦ КАК Родитель1,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Субконто1
	               |		ИНАЧЕ ДанныеСценарий1.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ДанныеСценарий1.Предприятия ЕСТЬ NULL 
	               |			ТОГДА ДанныеСценарий2.Предприятия
	               |		ИНАЧЕ ДанныеСценарий1.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			Счет = &Счет,
	               |			,
	               |			Предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И СценарийПлана В (&Сценарий1)
	               |				И " + УсловиеНоменклатура + ",
	               |			КорСчет = &КорСчет,
	               |			) КАК ДанныеСценарий1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".Обороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				Счет = &Счет2,
	               |				,
	               |				Предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И СценарийПлана = &Сценарий2
	               |					И " + УсловиеНоменклатура + ",
	               |				КорСчет = &КорСчет2,
	               |				) КАК ДанныеСценарий2
	               |		ПО ДанныеСценарий1.Субконто2 = ДанныеСценарий2.Субконто2
	               |			И ДанныеСценарий1.Субконто1 = ДанныеСценарий2.Субконто1
	               |			И ДанныеСценарий1.Предприятия = ДанныеСценарий2.Предприятия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтатьиЗатрат.Ссылка КАК Статья,
	               |	СтатьиЗатрат.ЭтоГруппа,
	               |	ЕСТЬNULL(Данные.Сумма1, 0) КАК Сумма1,
	               |	ЕСТЬNULL(Данные.Сумма2, 0) КАК Сумма2,
	               |	Данные.Номенклатура КАК Номенклатура,
	               |	Данные.Предприятия,
	               |	ВЫБОР
	               |		КОГДА СтатьиЗатрат.Ссылка В ИЕРАРХИИ (&ПрочиеРасходы)
	               |			ТОГДА ""ПрочиеЗатраты""
	               |		ИНАЧЕ ""ПроизводственныеЗатраты""
	               |	КОНЕЦ КАК ПризнакСтатьи
	               |ИЗ
	               |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
	               |		ПО (СтатьиЗатрат.Ссылка = Данные.Статья
	               |				ИЛИ СтатьиЗатрат.Ссылка = Данные.Родитель1)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СтатьиЗатрат.Код,
	               |	Номенклатура";
	
	
	ЛишниеГруппыСтатей = Новый Массив;
	ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.ЗатратыРеализация);
	ЛишниеГруппыСтатей.Добавить(Справочники.СтатьиЗатрат.УслугиУКГруппа);
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.ОсновноеПрво);
	Запрос.УстановитьПараметр("КорСчет", ПланСчетов1.ВыпускПродукции);
	Запрос.УстановитьПараметр("Счет2", ПланСчетов2.ОсновноеПрво);
	Запрос.УстановитьПараметр("КорСчет2", ПланСчетов2.ВыпускПродукции);
	Запрос.УстановитьПараметр("Ссылка", ЛишниеГруппыСтатей);
	Запрос.УстановитьПараметр("ПрочиеРасходы", Справочники.СтатьиЗатрат.ПрочиеРасходы);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);


	
	РезультатЗатраты = Запрос.Выполнить();
	//ВыборкаЗатраты = РезультатЗатраты.Выбрать();
	
	//считаем остатки готовой продукции на складе
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Субконто1 ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Субконто1
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Субконто1
	               |	КОНЕЦ КАК Номенклатура,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК Сумма1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК Количество1,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.СуммаНачальныйОстаток, 0) КАК Сумма2,
	               |	ЕСТЬNULL(БюджетныйОстаткиИОбороты1.КоличествоНачальныйОстаток, 0) КАК Количество2,
	               |	ВЫБОР
	               |		КОГДА БюджетныйОстаткиИОбороты.Предприятия ЕСТЬ NULL 
	               |			ТОГДА БюджетныйОстаткиИОбороты1.Предприятия
	               |		ИНАЧЕ БюджетныйОстаткиИОбороты.Предприятия
	               |	КОНЕЦ КАК Предприятия
	               |ИЗ
	               |	РегистрБухгалтерии." + Регистр1 + ".ОстаткиИОбороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			,
	               |			,
	               |			Счет В (&Счет),
	               |			,
	               |			СценарийПлана В(&Сценарий1)
	               |				И предприятия В ИЕРАРХИИ (&Предприятия)
	               |				И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии." + Регистр2 + ".ОстаткиИОбороты(
	               |				&Дата1,
	               |				&Дата2,
	               |				,
	               |				,
	               |				Счет В (&Счет),
	               |				,
	               |				СценарийПлана = &Сценарий2
	               |					И предприятия В ИЕРАРХИИ (&Предприятия)
	               |					И " + УсловиеНоменклатура + ") КАК БюджетныйОстаткиИОбороты1
	               |		ПО БюджетныйОстаткиИОбороты.Субконто1 = БюджетныйОстаткиИОбороты1.Субконто1
	               |			И БюджетныйОстаткиИОбороты.Предприятия = БюджетныйОстаткиИОбороты1.Предприятия";
	
	
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Сценарий1", МассивСценариев1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет", ПланСчетов1.ГотоваяПродукция);
	Запрос.УстановитьПараметр("ОтборНоменклатуры", 1 - ПустаяСтрока(ПараметрКоманды.Номенклатура));
	Запрос.УстановитьПараметр("Номенклатура", ПараметрКоманды.Номенклатура);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
	
	РезультатОстатки = Запрос.Выполнить();
	ТЗ_Остатки = РезультатОстатки.Выгрузить(); // 19.02.13 di вывод начальных остатков
	
	
	ВыборкаПростой = Ложь;
	
	ЗапросВсеСтатьи = Новый Запрос;
	ЗапросВсеСтатьи.Текст = "ВЫБРАТЬ
	                        |	СтатьиЗатрат.Ссылка,
	                        |	СтатьиЗатрат.Родитель
	                        |ИЗ
	                        |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	                        |ГДЕ
	                        |	СтатьиЗатрат.ПометкаУдаления = ЛОЖЬ
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	СтатьиЗатрат.Код";
							
	ТЗ_ВсеСтатьи = ЗапросВсеСтатьи.Выполнить().Выгрузить();
	
	ТЗ_Сырье = РезультатСырье.Выгрузить();
	ТЗ_Сырье.Сортировать("Материал Возр, МатериалФерменты Возр");
	
	ТЗ_Затраты = РезультатЗатраты.Выгрузить();
	
	// получили запросами все необходимые данные	
	// формируем общую таблицу, которая будет выводиться (ТЗ)
	
	ТЗ_Объемы = РезультатОбъемы.Выгрузить();
	ТЗ_Объемы.Сортировать("Предприятия Возр");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Добавить(); // сценарий
	ТЗ.Добавить(); // предприятие, номенклатура
	ТЗ.Добавить(); // остаток на начало сумма
	ТЗ.Добавить(); // остаток на начало количество
	ТЗ.Добавить(); // остаток на начало цена
	ТЗ.Добавить(); // объем
	ТЗ.Колонки.Добавить("СтатьиЗатрат"); // колонка статей затрат
	
	// выводим объемы производства и остатки на начало (19.02.13)
	
	Для ИндСтр = 0 По ТЗ_Объемы.Количество() - 1 Цикл
		
		ТекПредприятие = ТЗ_Объемы[ИндСтр].Предприятия;
		ИтогОбъем1 = 0;
		ИтогОбъем2 = 0;
		ИтогОбъем3 = 0;
		
		//19.02.13
		ИтогКолОст1 = 0;
		ИтогКолОст2 = 0;
		ИтогКолОстОткл = 0;
		ИтогСуммаОст1 = 0;
		ИтогСуммаОст2 = 0;
		ИтогСуммаОстОткл = 0;
		//
		
		ВыведеноРаз = 0;
		
		Пока ТЗ_Объемы[ИндСтр].Предприятия = ТекПредприятие Цикл 
			
			// остатки 19.02.13
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Предприятия", ТЗ_Объемы[ИндСтр].Предприятия);
			СтруктураПоиска.Вставить("Номенклатура", ТЗ_Объемы[ИндСтр].Номенклатура);
			
			МассивОстатков = ТЗ_Остатки.НайтиСтроки(СтруктураПоиска);			
			СтрокаОстатков = Неопределено;
			
			Если МассивОстатков.Количество() Тогда
				СтрокаОстатков = МассивОстатков[0];
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц1";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц1";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма1;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество1;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);	
				Иначе
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;
				
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем1;	
			КонецЕсли;
			
			// не суммируем вторичку (объем)			
			Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда			
				ИтогОбъем1 = ИтогОбъем1 + ТЗ_Объемы[ИндСтр].Объем1;				
			КонецЕсли;	
			
			// не суммируем вторичку (остатки)
			Если СтрокаОстатков <> Неопределено Тогда
				Если СтрокаОстатков.Номенклатура.ВторичнаяПереработка = Ложь Тогда							
					ИтогКолОст1 = ИтогКолОст1 + СтрокаОстатков.Количество1;
					ИтогСуммаОст1 = ИтогСуммаОст1 + СтрокаОстатков.Сумма1;				
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц2";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц2";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0);	
				Иначе
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;
				
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем2;	
			КонецЕсли;
			
			// не суммируем вторичку (объем)			
			Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда			
				ИтогОбъем2 = ИтогОбъем2 + ТЗ_Объемы[ИндСтр].Объем2;				
			КонецЕсли;
			
			// не суммируем вторичку (остатки)		
			Если СтрокаОстатков <> Неопределено Тогда
				Если СтрокаОстатков.Номенклатура.ВторичнаяПереработка = Ложь Тогда			
					ИтогКолОст2 = ИтогКолОст2 + СтрокаОстатков.Количество2;
					ИтогСуммаОст2 = ИтогСуммаОст2 + СтрокаОстатков.Сумма2;					
				КонецЕсли;
			КонецЕсли;
			
			Если ДваСценария Тогда
				
				ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Откл";
				ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Откл";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
            	ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
				
				Если СтрокаОстатков <> Неопределено Тогда
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0) - ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
				Иначе	
					ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
				КонецЕсли;	
					
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем3;		
			
				// не суммируем вторичку	(объем)			
				Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда				
					ИтогОбъем3 = ИтогОбъем3 + ТЗ_Объемы[ИндСтр].Объем3;					
				КонецЕсли;
				
                // не суммируем вторичку	(остатки)	
				Если СтрокаОстатков <> Неопределено Тогда
					Если ТЗ_Объемы[ИндСтр].Номенклатура.ВторичнаяПереработка = Ложь Тогда				
						ИтогКолОстОткл = ИтогКолОстОткл + (СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1);
						ИтогСуммаОстОткл = ИтогСуммаОстОткл + (СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1);						
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;	
			
			ВыведеноРаз = ВыведеноРаз + 1;
			
			Если ИндСтр = ТЗ_Объемы.Количество() - 1 Тогда
				Прервать
			Иначе
				ИндСтр = ИндСтр + 1
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВыведеноРаз > 1 Тогда
		
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда				
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Сц1";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Сц1";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОст1;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст1;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОст1 <> 0, ИтогСуммаОст1 / ИтогКолОст1, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем1;					 		
			КонецЕсли;
						
			Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда				
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Сц2";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Сц2";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
				ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОст2;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст2;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОст2 <> 0, ИтогСуммаОст2 / ИтогКолОст2, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем2;					 						
			КонецЕсли;
			
			Если ДваСценария Тогда
			
				ИмяТекКолонки1 = ТекПредприятие.Наименование +"_Общ1_Откл";
				ИмяТекКолонки2 = ТекПредприятие.Наименование +"_Общ2_Откл";
				ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
				ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);				
            	ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТекПредприятие;
				ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = "ВСЕГО";
				ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогСуммаОстОткл;
				ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = ИтогКолОст2;
				ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(ИтогКолОстОткл <> 0, ИтогСуммаОстОткл / ИтогКолОстОткл, 0);
				ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ИтогОбъем3;				
				
			КонецЕсли;
				
		КонецЕсли;
		
		Если ИндСтр = ТЗ_Объемы.Количество() - 1 Тогда
			
			ЕстьВТаблице = Ложь;
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				Если ТЗ[1][ИндКол] = ТЗ_Объемы[ИндСтр].Предприятия Тогда
					ЕстьВТаблице = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЕстьВТаблице Тогда
								
				Прервать;
				
			Иначе
				
				// остатки 19.02.13
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Предприятия", ТЗ_Объемы[ИндСтр].Предприятия);
				СтруктураПоиска.Вставить("Номенклатура", ТЗ_Объемы[ИндСтр].Номенклатура);
			
				МассивОстатков = ТЗ_Остатки.НайтиСтроки(СтруктураПоиска);			
				СтрокаОстатков = Неопределено;
			
				Если МассивОстатков.Количество() Тогда
					СтрокаОстатков = МассивОстатков[0];
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий1) Тогда
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц1";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц1";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
					ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий1;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма1;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество1;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;	
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем1;	
				КонецЕсли;
			
				Если ЗначениеЗаполнено(ПараметрКоманды.Сценарий2) Тогда
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Сц2";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Сц2";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
					ТЗ[0][ТЗ.Колонки.Индекс(ТекКолонка1)] = ПараметрКоманды.Сценарий2;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем2;	
				КонецЕсли;
			
			
				Если ДваСценария Тогда
				
					ИмяТекКолонки1 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_1_Откл";
					ИмяТекКолонки2 = ТЗ_Объемы[ИндСтр].Предприятия.Наименование +ТЗ.Колонки.Количество()+"_2_Откл";
					ТекКолонка1 = ТЗ.Колонки.Добавить(ИмяТекКолонки1);
					ТекКолонка2 = ТЗ.Колонки.Добавить(ИмяТекКолонки2);
            		ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Предприятия;
					ТЗ[1][ТЗ.Колонки.Индекс(ТекКолонка2)] = ТЗ_Объемы[ИндСтр].Номенклатура;
					
					Если СтрокаОстатков <> Неопределено Тогда
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Сумма2 - СтрокаОстатков.Сумма1;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = СтрокаОстатков.Количество2 - СтрокаОстатков.Количество1;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = ?(СтрокаОстатков.Количество2 <> 0, СтрокаОстатков.Сумма2 / СтрокаОстатков.Количество2, 0) - ?(СтрокаОстатков.Количество1 <> 0, СтрокаОстатков.Сумма1 / СтрокаОстатков.Количество1, 0);
					Иначе
						ТЗ[2][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[3][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
						ТЗ[4][ТЗ.Колонки.Индекс(ТекКолонка2)] = 0;
					КонецЕсли;	
					
					ТЗ[5][ТЗ.Колонки.Индекс(ТекКолонка1)] = ТЗ_Объемы[ИндСтр].Объем3;		
							
				КонецЕсли;	
				
				Прервать;
				
			КонецЕсли;
			
		Иначе
			
			ИндСтр = ИндСтр - 1;
			
		КонецЕсли;	
			
	КонецЦикла;
		
	// выводим сырье
	
	ТЗ_Материалы = ТЗ_Сырье.Скопировать();
	
	СтрокаЗатратыСырьеОбщ = ТЗ.Добавить();
	СтрокаЗатратыСырьеОбщ.СтатьиЗатрат = Справочники.СтатьиЗатрат.ЗатратыОсн;
	
	СтрокаЗатратыСырьеВсп = ТЗ.Добавить();
	СтрокаЗатратыСырьеВсп.СтатьиЗатрат = Справочники.СтатьиЗатрат.ЗатратыВсп;
	
	СтрокаЗатратыВспомогательноеСырье = ТЗ.Добавить();
	СтрокаЗатратыВспомогательноеСырье.СтатьиЗатрат = Перечисления.Д_Ферменты.ВспомогательноеСырье;
	
	СтрокаЗатратыФерменты = ТЗ.Добавить();
	СтрокаЗатратыФерменты.СтатьиЗатрат = Перечисления.Д_Ферменты.Ферменты;	
	
	ТЗ_СырьеГрупп = ТЗ_Сырье.Скопировать();
	ТЗ_СырьеГрупп.Свернуть("Материал, СтатьяЗатрат, МатериалФерменты");
	
	// общие суммы для верхних группировок
	СуммаОснСырье1 = 0;
	СуммаВспМатериалы1 = 0;
	СуммаФерменты1 = 0;
	СуммаВспСырье1 = 0;
	СуммаОснСырье2 = 0;
	СуммаВспМатериалы2 = 0;
	СуммаФерменты2 = 0;
	СуммаВспСырье2 = 0;
	
	// проставляем суммы "затраты на основное сырье" и "затраты на вспомогательные материалы"
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 1]) = Ложь Тогда
			ТЗ[6][ИндКол + 1] = 0;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 1]) = Ложь Тогда
			ТЗ[7][ИндКол + 1] = 0;
		КонецЕсли;
		
		Если ДваСценария Тогда
		
			Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 3]) = Ложь Тогда
				ТЗ[6][ИндКол + 3] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[6][ИндКол + 5]) = Ложь Тогда
				ТЗ[6][ИндКол + 5] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 3]) = Ложь Тогда
				ТЗ[7][ИндКол + 3] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[7][ИндКол + 5]) = Ложь Тогда
				ТЗ[7][ИндКол + 5] = 0;
			КонецЕсли;
			
		КонецЕсли;			
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Предприятия", ТЗ[1][ИндКол]);
		СтруктураПоиска.Вставить("Номенклатура", ТЗ[1][ИндКол + 1]);
		
		НайденныеСтроки = ТЗ_Затраты.НайтиСтроки(СтруктураПоиска);
		
		Если ДваСценария Тогда
		
			Для Каждого Элемент Из НайденныеСтроки Цикл
			
				Если Элемент.Статья = Справочники.СтатьиЗатрат.ЗатратыОсн Тогда
				
					ТЗ[6][ИндКол + 1] = ТЗ[6][ИндКол + 1] + Элемент.Сумма1;
					ТЗ[6][ИндКол + 3] = ТЗ[6][ИндКол + 3] + Элемент.Сумма2;
					ТЗ[6][ИндКол + 5] = ТЗ[6][ИндКол + 5] + (Элемент.Сумма2 - Элемент.Сумма1);
				
				ИначеЕсли Элемент.Статья = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
				
					ТЗ[7][ИндКол + 1] = ТЗ[7][ИндКол + 1] + Элемент.Сумма1;
					ТЗ[7][ИндКол + 3] = ТЗ[7][ИндКол + 3] + Элемент.Сумма2;
					ТЗ[7][ИндКол + 5] = ТЗ[7][ИндКол + 5] + (Элемент.Сумма2 - Элемент.Сумма1)
				
				Иначе
				
					Прервать;
				
				КонецЕсли;
			
			КонецЦикла;
		
			ИндКол = ИндКол + 5
			
		Иначе
			
			Для Каждого Элемент Из НайденныеСтроки Цикл
			
				Если Элемент.Статья = Справочники.СтатьиЗатрат.ЗатратыОсн Тогда
				
					ТЗ[6][ИндКол + 1] = ТЗ[6][ИндКол + 1] + Элемент.Сумма1 + Элемент.Сумма2; 
				
				ИначеЕсли Элемент.Статья = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
				
					ТЗ[7][ИндКол + 1] = ТЗ[7][ИндКол + 1] + Элемент.Сумма1 + Элемент.Сумма2; 
				
				Иначе
				
					Прервать;
				
				КонецЕсли;
			
			КонецЦикла;
		
			ИндКол = ИндКол + 1
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для ИндСтр = 0 По ТЗ_СырьеГрупп.Количество() - 1 Цикл
					         
		// затраты на основное сырье
			
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Материал", ТЗ_СырьеГрупп[ИндСтр].Материал);
		СтруктураПоиска.Вставить("СтатьяЗатрат",  ТЗ_СырьеГрупп[ИндСтр].СтатьяЗатрат);
			
		МассивНайденных = ТЗ_Сырье.НайтиСтроки(СтруктураПоиска);
		СтрокаСырья = ТЗ.Добавить();
		СтрокаСырья.СтатьиЗатрат = СтруктураПоиска.Материал;
			
		Для Каждого Элемент Из МассивНайденных Цикл
			
			Если ДваСценария Тогда
			
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
									
					Если ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий1 Тогда
						
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество1;             // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена1;                 // сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;	
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + (Элемент.Цена1*Элемент.Количество1); 
						
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;											
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] + (Элемент.Цена1*Элемент.Количество1); 
							
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
																						
						КонецЕсли;
																	
					ИначеЕсли ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий2 Тогда
            	
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество2;             // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена2;                 // сумма
					
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 2] = Элемент.Количество2 - Элемент.Количество1;             // отклонение на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 3] = Элемент.Цена2 - Элемент.Цена1;                               // отклонение сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] = 0;
							КонецЕсли;
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + (Элемент.Цена2*Элемент.Количество2);
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 3] + (Элемент.Цена2*Элемент.Количество2 - Элемент.Цена1*Элемент.Количество1);
																								
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3]= 0;
							КонецЕсли;
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] +  (Элемент.Цена2*Элемент.Количество2);
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 3] + (Элемент.Цена2*Элемент.Количество2 - Элемент.Цена1*Элемент.Количество1);
																		
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 3]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 3] = 0;
							КонецЕсли;
																								
						КонецЕсли;
														
					КонецЕсли;
				
				КонецЦикла;
				
			//один сценарий
			
			Иначе
				
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
									
					Если ТЗ[1][ИндКол] = Элемент.Предприятия И ТЗ[1][ИндКол + 1] = Элемент.Номенклатура Тогда
						
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол] = Элемент.Количество1 + Элемент.Количество2;    // на ед.
						ТЗ[ТЗ.Индекс(СтрокаСырья)][ИндКол + 1] = Элемент.Цена1 + Элемент.Цена2;                 // сумма
					
						Если СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = 0;
							КонецЕсли;	
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыВспомогательноеСырье)][ИндКол + 1] + Элемент.Цена1* Элемент.Количество1 + Элемент.Цена2* Элемент.Количество2;
						
						ИначеЕсли СтруктураПоиска.Материал.Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
												
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = 0;
							КонецЕсли;		
							
							ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] = ТЗ[ТЗ.Индекс(СтрокаЗатратыФерменты)][ИндКол + 1] + Элемент.Цена1* Элемент.Количество1 + Элемент.Цена2* Элемент.Количество2;
						
						Иначе
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1]) = Ложь Тогда
								ТЗ[ТЗ.Индекс(СтрокаЗатратыСырьеОбщ)][ИндКол + 1] = 0;
							КонецЕсли;
																						
						КонецЕсли;
																															
					КонецЕсли;
				
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЦикла;
		
	
	// выводим статьи затрат
		
	ТЗ_ЗатратыГрупп = ТЗ_Затраты.Скопировать();
	ТЗ_ЗатратыГрупп.Свернуть("Статья, ЭтоГруппа");
	
	Для ИндСтрГр = 2 По ТЗ_ЗатратыГрупп.Количество() - 1 Цикл
		
		ТекСтатья = ТЗ_ЗатратыГрупп[ИндСтрГр].Статья;
		
		Если ТекСтатья.ЭтоГруппа = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаГруппыЗатрат = ТЗ.Добавить();
		СтрокаГруппыЗатрат[0] = ТекСтатья;		
		ИндексГрупп = ТЗ.Индекс(СтрокаГруппыЗатрат);	
		
		Для ИндСтр = 2 По ТЗ_Затраты.Количество() - 1 Цикл
			
			Если ТЗ_Затраты[ИндСтр].Статья.Родитель = ТекСтатья Тогда
				
				Если ТЗ.Найти(ТЗ_Затраты[ИндСтр].Статья) = Неопределено Тогда
									
					СтрокаСтатьиЗатрат = ТЗ.Добавить();
					СтрокаСтатьиЗатрат.СтатьиЗатрат = ТЗ_Затраты[ИндСтр].Статья;
					ИндексН = ТЗ.Индекс(СтрокаСтатьиЗатрат);
					
				Иначе
					
					ИндексН = ТЗ.Индекс(ТЗ.Найти(ТЗ_Затраты[ИндСтр].Статья));
					
				КонецЕсли;
				
				Если ДваСценария Тогда
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
								
						Если ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий1 Тогда
						
                        	// сумма сценарий1
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма1;
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма1;
						
						ИначеЕсли ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура И ТЗ[0][ИндКол] = ПараметрКоманды.Сценарий2 Тогда
												
	                   		// сумма сценарий2
					   		// сумма отклонение
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 3]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 3] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 3]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 3] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма2;  
							ТЗ[ИндексН][ИндКол + 3] = ТЗ_Затраты[ИндСтр].Сумма2 - ТЗ_Затраты[ИндСтр].Сумма1;  
						
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма2;
							ТЗ[ИндексГрупп][ИндКол + 3] = ТЗ[ИндексГрупп][ИндКол + 3] + (ТЗ_Затраты[ИндСтр].Сумма2 - ТЗ_Затраты[ИндСтр].Сумма1); 
										
						КонецЕсли;
					
					КонецЦикла;	
					
				Иначе
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
								
						Если ТЗ[1][ИндКол] = ТЗ_Затраты[ИндСтр].Предприятия И ТЗ[1][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Номенклатура Тогда
						
                        	// сумма
						
							Если ЗначениеЗаполнено(ТЗ[ИндексН][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексН][ИндКол + 1] = 0;
							КонецЕсли;
						
							Если ЗначениеЗаполнено(ТЗ[ИндексГрупп][ИндКол + 1]) = Ложь Тогда
								ТЗ[ИндексГрупп][ИндКол + 1] = 0;
							КонецЕсли;
						
							ТЗ[ИндексН][ИндКол + 1] = ТЗ_Затраты[ИндСтр].Сумма1 + ТЗ_Затраты[ИндСтр].Сумма2;
							ТЗ[ИндексГрупп][ИндКол + 1] = ТЗ[ИндексГрупп][ИндКол + 1] + ТЗ_Затраты[ИндСтр].Сумма1 + ТЗ_Затраты[ИндСтр].Сумма2;
																
						КонецЕсли;
					
					КонецЦикла;	
					
				КонецЕсли;
								
			Иначе
				
				Продолжить;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// выводим на единицу
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		Для ИндСтр = 6 По ТЗ.Количество() - 1 Цикл
		
			Если ТипЗнч(ТЗ[1][ИндКол]) <> Тип("СправочникСсылка.Предприятия") Тогда
			
				Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
					ТЗ[ИндСтр][ИндКол] = 0;
				КонецЕсли;
			
				Продолжить;
			
			КонецЕсли;
		
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[5][ИндКол]) = Ложь Тогда
				ТЗ[5][ИндКол] = 0;
			КонецЕсли;
		
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол + 1]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол + 1] = 0;
			КонецЕсли;
		
			ТЗ[ИндСтр][ИндКол] = ТЗ[ИндСтр][ИндКол] + ?(ТЗ[5][ИндКол] > 0, ТЗ[ИндСтр][ИндКол + 1] / ТЗ[5][ИндКол], 0);	
			
			Если ДваСценария Тогда
			
				Если ЗначениеЗаполнено(ТЗ[0][ИндКол]) = Ложь И ТипЗнч(ТЗ[1][ИндКол]) = Тип("СправочникСсылка.Предприятия") Тогда
			
					ТЗ[ИндСтр][ИндКол] = ТЗ[ИндСтр][ИндКол - 2] - ТЗ[ИндСтр][ИндКол - 4];
			
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
					
	// обнуляем все незаполненные ячейки таблицы	
	Для ИндСтр = 2 По ТЗ.Количество() - 1 Цикл
		
		Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
			
			Если ЗначениеЗаполнено(ТЗ[ИндСтр][ИндКол]) = Ложь Тогда
				ТЗ[ИндСтр][ИндКол] = 0;
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЦикла;

	
	// суммируем ТЗ, получаем всего по предприятиям и общие итоги	
	
	ПросуммироватьТаблицу(ТЗ, ПараметрКоманды, ДваСценария);
	 	
	// выводим ТЗ
	
	Результат.НачатьАвтогруппировкуСтрок();
	
	// область шапка
	ОбластьШапкаСтатьи = Макет.ПолучитьОбласть("Шапка|СтатьиЗатрат");
	ОбластьШапкаСценарий1 = Макет.ПолучитьОбласть("Шапка|Сценарий1"+Уч);
	
	// остаток 
	ОбластьОстатокГрСтатьи = Макет.ПолучитьОбласть("ОстатокГр|СтатьиЗатрат");
	ОбластьОстатокГрСценарий1 = Макет.ПолучитьОбласть("ОстатокГр|Сценарий1"+Уч);
	ОбластьОстатокСтатьи = Макет.ПолучитьОбласть("Остаток|СтатьиЗатрат");
	ОбластьОстатокСценарий1 = Макет.ПолучитьОбласть("Остаток|Сценарий1"+Уч);
	
	// объем
	ОбластьОбъемСтатьи = Макет.ПолучитьОбласть("Объем|СтатьиЗатрат");
	ОбластьОбъемСценарий1 = Макет.ПолучитьОбласть("Объем|Сценарий1"+Уч);
	
	ОбластьШапкаДанныеГрупп = Макет.ПолучитьОбласть("ДанныеГрупп|СтатьиЗатрат");
	ОбластьШапкаДанные = Макет.ПолучитьОбласть("Данные|СтатьиЗатрат");
	ОбластьДанныеГруппСц1 = Макет.ПолучитьОбласть("ДанныеГрупп|Сценарий1"+Уч);
	ОбластьДанныеСц1 = Макет.ПолучитьОбласть("Данные|Сценарий1"+Уч);
	ОбластьШапкаПереработка = Макет.ПолучитьОбласть("ИтогПереработка|СтатьиЗатрат");
	ОбластьШапкаСырье = Макет.ПолучитьОбласть("ИтогСырье|СтатьиЗатрат");
	ОбластьШапкаИтог = Макет.ПолучитьОбласть("Итог|СтатьиЗатрат");
	ОбластьШапкаИтогСеб = Макет.ПолучитьОбласть("ИтогСеб|СтатьиЗатрат");
	ОбластьДанныеПереработкаСц1 = Макет.ПолучитьОбласть("ИтогПереработка|Сценарий1"+Уч);
	ОбластьДанныеСырьеСц1 = Макет.ПолучитьОбласть("ИтогСырье|Сценарий1"+Уч);
	ОбластьДанныеИтогСц1 = Макет.ПолучитьОбласть("Итог|Сценарий1"+Уч);
	ОбластьДанныеИтогСебСц1 = Макет.ПолучитьОбласть("ИтогСеб|Сценарий1"+Уч);
	
	Если ДваСценария Тогда
		
		// область шапка
		ОбластьШапкаСценарий2 = Макет.ПолучитьОбласть("Шапка|Сценарий2"+Уч);
		ОбластьШапкаОтклонение = Макет.ПолучитьОбласть("Шапка|Отклонение"+Уч);
		
		// остаток
		ОбластьОстатокГрСценарий2 = Макет.ПолучитьОбласть("ОстатокГр|Сценарий2"+Уч);
		ОбластьОстатокГрОтклонение = Макет.ПолучитьОбласть("ОстатокГр|Отклонение"+Уч);
		ОбластьОстатокСценарий2 = Макет.ПолучитьОбласть("Остаток|Сценарий2"+Уч);
		ОбластьОстатокОтклонение = Макет.ПолучитьОбласть("Остаток|Отклонение"+Уч);
		
		//объем
        ОбластьОбъемСценарий2 = Макет.ПолучитьОбласть("Объем|Сценарий2"+Уч);
		ОбластьОбъемОтклонение = Макет.ПолучитьОбласть("Объем|Отклонение"+Уч);
		
        ОбластьДанныеГруппСц2 = Макет.ПолучитьОбласть("ДанныеГрупп|Сценарий2"+Уч);
		ОбластьДанныеГруппОткл = Макет.ПолучитьОбласть("ДанныеГрупп|Отклонение"+Уч);
        ОбластьДанныеСц2 = Макет.ПолучитьОбласть("Данные|Сценарий2"+Уч);
		ОбластьДанныеОткл = Макет.ПолучитьОбласть("Данные|Отклонение"+Уч);
		ОбластьДанныеПереработкаСц2 = Макет.ПолучитьОбласть("ИтогПереработка|Сценарий2"+Уч);
		ОбластьДанныеПереработкаОткл = Макет.ПолучитьОбласть("ИтогПереработка|Отклонение"+Уч);
        ОбластьДанныеСырьеСц2 = Макет.ПолучитьОбласть("ИтогСырье|Сценарий2"+Уч);
		ОбластьДанныеСырьеОткл = Макет.ПолучитьОбласть("ИтогСырье|Отклонение"+Уч);
		ОбластьДанныеИтогСц2 = Макет.ПолучитьОбласть("Итог|Сценарий2"+Уч);
		ОбластьДанныеИтогОткл = Макет.ПолучитьОбласть("Итог|Отклонение"+Уч);
	    ОбластьДанныеИтогСебСц2 = Макет.ПолучитьОбласть("ИтогСеб|Сценарий2"+Уч);
		ОбластьДанныеИтогСебОткл = Макет.ПолучитьОбласть("ИтогСеб|Отклонение"+Уч);
		
	КонецЕсли;
	
	ОбластьШапкаСтатьи.Параметры.Период = ПараметрКоманды.Период;
	Результат.Вывести(ОбластьШапкаСтатьи);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		// шапка 
		ОбластьШапкаСценарий1.Параметры.Сценарий1 = ПараметрКоманды.Сценарий1;
		ОбластьШапкаСценарий1.Параметры.Предприятие = ТЗ[1][ИндКол];
		ОбластьШапкаСценарий1.Параметры.Номенклатура = ТЗ[1][ИндКол + 1];
				
		Результат.Присоединить(ОбластьШапкаСценарий1);

		Если ДваСценария Тогда
				
			// шапка 
			ОбластьШапкаСценарий2.Параметры.Сценарий2 = ПараметрКоманды.Сценарий2;
			ОбластьШапкаСценарий2.Параметры.Предприятие = ТЗ[1][ИндКол + 2];
			ОбластьШапкаСценарий2.Параметры.Номенклатура = ТЗ[1][ИндКол + 3];
				
			Результат.Присоединить(ОбластьШапкаСценарий2);
					
			// шапка 
			ОбластьШапкаОтклонение.Параметры.Предприятие = ТЗ[1][ИндКол + 4];
			ОбластьШапкаОтклонение.Параметры.Номенклатура = ТЗ[1][ИндКол + 5];
			
			Результат.Присоединить(ОбластьШапкаОтклонение);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Результат.Вывести(ОбластьОстатокГрСтатьи, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		// остаток гр
		ОбластьОстатокГрСценарий1.Параметры.НачОст1Гр = ТЗ[2][ИндКол + 1];
		Результат.Присоединить(ОбластьОстатокГрСценарий1, 1,, Ложь);
		
		Если ДваСценария Тогда
				
			ОбластьОстатокГрСценарий2.Параметры.НачОст2Гр = ТЗ[2][ИндКол + 3];
			Результат.Присоединить(ОбластьОстатокГрСценарий2, 1,, Ложь);
				
			ОбластьОстатокГрОтклонение.Параметры.НачОстОтклГр = ТЗ[2][ИндКол + 5];
			Результат.Присоединить(ОбластьОстатокГрОтклонение, 1,, Ложь);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Результат.Вывести(ОбластьОстатокСтатьи, 2,, Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
		// остаток
		ОбластьОстатокСценарий1.Параметры.НачОст1Кол = ТЗ[3][ИндКол + 1];
		ОбластьОстатокСценарий1.Параметры.НачОст1Цена = ТЗ[4][ИндКол + 1];
		Результат.Присоединить(ОбластьОстатокСценарий1, 2,, Ложь);
				
		Если ДваСценария Тогда
					
			ОбластьОстатокСценарий2.Параметры.НачОст2Кол = ТЗ[3][ИндКол + 3];
			ОбластьОстатокСценарий2.Параметры.НачОст2Цена = ТЗ[4][ИндКол + 3];
			Результат.Присоединить(ОбластьОстатокСценарий2, 2,, Ложь);
				
			ОбластьОстатокОтклонение.Параметры.НачОстОтклКол = ТЗ[3][ИндКол + 5];
			ОбластьОстатокОтклонение.Параметры.НачОстОтклЦена = ТЗ[4][ИндКол + 5];
			Результат.Присоединить(ОбластьОстатокОтклонение, 2,, Ложь);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Результат.Вывести(ОбластьОбъемСтатьи, 1);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
		// объем
		ОбластьОбъемСценарий1.Параметры.Объем1 = ТЗ[5][ИндКол];
		Результат.Присоединить(ОбластьОбъемСценарий1);
		
		Если ДваСценария Тогда
				
			ОбластьОбъемСценарий2.Параметры.Объем2 = ТЗ[5][ИндКол + 2];
			Результат.Присоединить(ОбластьОбъемСценарий2);
			
			ОбластьОбъемОтклонение.Параметры.ОбъемОткл = ТЗ[5][ИндКол + 4];
			Результат.Присоединить(ОбластьОбъемОтклонение);
			
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	// выводим сырье и материалы
	
	Для ИндСтр = 6 По ТЗ.Количество() - 4 Цикл
				
		Если ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.ЗатратыОсн Тогда  
			
			ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
			Результат.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
				ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
				Результат.Присоединить(ОбластьДанныеГруппСц1, 1);
				
				Если ДваСценария Тогда
				
					ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
					ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
					Результат.Присоединить(ОбластьДанныеГруппСц2, 1);
				
					ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
					ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
					Результат.Присоединить(ОбластьДанныеГруппОткл, 1);
				
					ИндКол = ИндКол + 5
					
				Иначе
					
					ИндКол = ИндКол + 1
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
				Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
					Если ЗначениеЗаполнено(ТЗ[ИндСтрДет][0].Ферменты) = Ложь Тогда
						ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
						Результат.Вывести(ОбластьШапкаДанные, 2,,Ложь);
						
						Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
							ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
							ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
							Результат.Присоединить(ОбластьДанныеСц1, 2);
							
							Если ДваСценария Тогда
							
								ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
								ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
								Результат.Присоединить(ОбластьДанныеСц2, 2);
				            	
								ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
								ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
								Результат.Присоединить(ОбластьДанныеОткл, 2);
							
								ИндКол = ИндКол + 5;
								
							Иначе
								
								ИндКол = ИндКол + 1
								
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;				
				КонецЕсли;
			
			КонецЦикла;
			
		ИначеЕсли ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
			
			ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
			Результат.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
			
			Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
				ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
				Результат.Присоединить(ОбластьДанныеГруппСц1, 1);
				
				Если ДваСценария Тогда
				
					ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
					ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
					Результат.Присоединить(ОбластьДанныеГруппСц2, 1);
				
					ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
					ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
					Результат.Присоединить(ОбластьДанныеГруппОткл, 1);
				
					ИндКол = ИндКол + 5;
					
				Иначе
					
					ИндКол = ИндКол + 1;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для ИндСтр1 = 3 По ТЗ.Количество() - 4 Цикл
			
				Если ТЗ[ИндСтр1][0] = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
				
					ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр1][0];
					Результат.Вывести(ОбластьШапкаДанныеГрупп, 2,,Ложь);
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
						ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр1][ИндКол];
						ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр1][ИндКол + 1];
				
						Результат.Присоединить(ОбластьДанныеГруппСц1, 2);
				
						Если ДваСценария Тогда
						
							ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр1][ИндКол + 2];
							ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр1][ИндКол + 3];
				
							Результат.Присоединить(ОбластьДанныеГруппСц2, 2);
				
							ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр1][ИндКол + 4];
							ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр1][ИндКол + 5];
				
							Результат.Присоединить(ОбластьДанныеГруппОткл, 2);
						
							ИндКол = ИндКол + 5;
							
						Иначе
							
							ИндКол = ИндКол + 1;
							
						КонецЕсли;
				
					КонецЦикла;
		
					Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
						Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
							Если ТЗ[ИндСтрДет][0].Ферменты = Перечисления.Д_Ферменты.ВспомогательноеСырье Тогда
								ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
								Результат.Вывести(ОбластьШапкаДанные, 3,,Ложь);
								
								Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
									ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
									ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
									Результат.Присоединить(ОбластьДанныеСц1, 3);
									
									Если ДваСценария Тогда
									
										ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
										ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
										Результат.Присоединить(ОбластьДанныеСц2, 3);
				
										ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
										ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
										Результат.Присоединить(ОбластьДанныеОткл, 3);
							
										ИндКол = ИндКол + 5;
										
									Иначе
										
										ИндКол = ИндКол + 1;
										
									КонецЕсли;
							
								КонецЦикла;
								
							КонецЕсли;				
						КонецЕсли;
			
					КонецЦикла;
			
				ИначеЕсли ТЗ[ИндСтр1][0] = Перечисления.Д_Ферменты.Ферменты Тогда
		
					ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр1][0];
					Результат.Вывести(ОбластьШапкаДанныеГрупп, 2,,Ложь);
					
					Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
						ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр1][ИндКол];
						ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр1][ИндКол + 1];
				
						Результат.Присоединить(ОбластьДанныеГруппСц1, 2);
						
						Если ДваСценария Тогда
						
							ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр1][ИндКол + 2];
							ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр1][ИндКол + 3];
				
							Результат.Присоединить(ОбластьДанныеГруппСц2, 2);
				
							ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр1][ИндКол + 4];
							ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр1][ИндКол + 5];
				
							Результат.Присоединить(ОбластьДанныеГруппОткл, 2);
						
							ИндКол = ИндКол + 5;
							
						Иначе
							
							ИндКол = ИндКол + 1;
							
						КонецЕсли;
				
					КонецЦикла;
			
					Для ИндСтрДет = 3 По ТЗ.Количество() - 4 Цикл
			
						Если ТипЗнч(ТЗ[ИндСтрДет][0]) = Тип("СправочникСсылка.Номенклатура") Тогда				
							Если ТЗ[ИндСтрДет][0].Ферменты = Перечисления.Д_Ферменты.Ферменты Тогда
								ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтрДет][0].Наименование + " (количество*цена)";
								Результат.Вывести(ОбластьШапкаДанные, 3,,Ложь);		
								
								Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
									ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтрДет][ИндКол];
									ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтрДет][ИндКол + 1];
				
									Результат.Присоединить(ОбластьДанныеСц1, 3);
									
									Если ДваСценария Тогда
									
										ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтрДет][ИндКол + 2];
										ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтрДет][ИндКол + 3];
				
										Результат.Присоединить(ОбластьДанныеСц2, 3);
				
										ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтрДет][ИндКол + 4];
										ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтрДет][ИндКол + 5];
				
										Результат.Присоединить(ОбластьДанныеОткл, 3);
							
										ИндКол = ИндКол + 5;
										
									Иначе
										
										ИндКол = ИндКол + 1;
										
									КонецЕсли;
							
								КонецЦикла;
								
							КонецЕсли;				
						КонецЕсли;
				
					КонецЦикла;
					
				КонецЕсли;
			
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(ТЗ[ИндСтр][0]) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			
			Если ТЗ[ИндСтр][0].ЭтоГруппа Тогда
				
				ОбластьШапкаДанныеГрупп.Параметры.СтатьяРодитель = ТЗ[ИндСтр][0];
				Результат.Вывести(ОбластьШапкаДанныеГрупп, 1,,Ложь);
					
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
					ОбластьДанныеГруппСц1.Параметры.Сумма11Гр = ТЗ[ИндСтр][ИндКол];
					ОбластьДанныеГруппСц1.Параметры.Сумма1Гр = ТЗ[ИндСтр][ИндКол + 1];
				
					Результат.Присоединить(ОбластьДанныеГруппСц1, 1);
					
					Если ДваСценария Тогда
					
						ОбластьДанныеГруппСц2.Параметры.Сумма21Гр = ТЗ[ИндСтр][ИндКол + 2];
						ОбластьДанныеГруппСц2.Параметры.Сумма2Гр = ТЗ[ИндСтр][ИндКол + 3];
				
						Результат.Присоединить(ОбластьДанныеГруппСц2, 1);
				
						ОбластьДанныеГруппОткл.Параметры.СуммаОткл1Гр = ТЗ[ИндСтр][ИндКол + 4];
						ОбластьДанныеГруппОткл.Параметры.СуммаОтклГр = ТЗ[ИндСтр][ИндКол + 5];
				
						Результат.Присоединить(ОбластьДанныеГруппОткл, 1);
						
						ИндКол = ИндКол + 5;
						
					Иначе
						
						ИндКол = ИндКол + 1;
						
					КонецЕсли;
				
				КонецЦикла;
				
			Иначе
				
				ОбластьШапкаДанные.Параметры.Статья = ТЗ[ИндСтр][0];
				Результат.Вывести(ОбластьШапкаДанные, 2,,Ложь);		
				
				Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
					ОбластьДанныеСц1.Параметры.Сумма11 = ТЗ[ИндСтр][ИндКол];
					ОбластьДанныеСц1.Параметры.Сумма1 = ТЗ[ИндСтр][ИндКол + 1];
				
					Результат.Присоединить(ОбластьДанныеСц1, 2);
					
					Если ДваСценария Тогда
					
						ОбластьДанныеСц2.Параметры.Сумма21 = ТЗ[ИндСтр][ИндКол + 2];
						ОбластьДанныеСц2.Параметры.Сумма2 = ТЗ[ИндСтр][ИндКол + 3];
				
						Результат.Присоединить(ОбластьДанныеСц2, 2);
				
						ОбластьДанныеОткл.Параметры.СуммаОткл1 = ТЗ[ИндСтр][ИндКол + 4];
						ОбластьДанныеОткл.Параметры.СуммаОткл = ТЗ[ИндСтр][ИндКол + 5];
				
						Результат.Присоединить(ОбластьДанныеОткл, 2);
							
						ИндКол = ИндКол + 5;
						
					Иначе
						
						ИндКол = ИндКол + 1;
						
					КонецЕсли;
							
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// ИТОГО
	Результат.Вывести(ОбластьШапкаИтог, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеИтогСц1.Параметры.Итог11 = ТЗ[ТЗ.Количество() - 4][ИндКол];
		ОбластьДанныеИтогСц1.Параметры.Итог1 = ТЗ[ТЗ.Количество() - 4][ИндКол + 1];
				
		Результат.Присоединить(ОбластьДанныеИтогСц1, 1);
		
		Если ДваСценария Тогда
				
			ОбластьДанныеИтогСц2.Параметры.Итог21 = ТЗ[ТЗ.Количество() - 4][ИндКол + 2];
			ОбластьДанныеИтогСц2.Параметры.Итог2 = ТЗ[ТЗ.Количество() - 4][ИндКол + 3];
				
			Результат.Присоединить(ОбластьДанныеИтогСц2, 1);
				
			ОбластьДанныеИтогОткл.Параметры.ИтогОткл1 = ТЗ[ТЗ.Количество() - 4][ИндКол + 4];
			ОбластьДанныеИтогОткл.Параметры.ИтогОткл = ТЗ[ТЗ.Количество() - 4][ИндКол + 5];
				
			Результат.Присоединить(ОбластьДанныеИтогОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
	
	// переработка
	Результат.Вывести(ОбластьШапкаПереработка, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеПереработкаСц1.Параметры.Переработка11 = ТЗ[ТЗ.Количество() - 3][ИндКол];
		ОбластьДанныеПереработкаСц1.Параметры.Переработка1 = ТЗ[ТЗ.Количество() - 3][ИндКол + 1];
				
		Результат.Присоединить(ОбластьДанныеПереработкаСц1, 1);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеПереработкаСц2.Параметры.Переработка21 = ТЗ[ТЗ.Количество() - 3][ИндКол + 2];
			ОбластьДанныеПереработкаСц2.Параметры.Переработка2 = ТЗ[ТЗ.Количество() - 3][ИндКол + 3];
				
			Результат.Присоединить(ОбластьДанныеПереработкаСц2, 1);
				
			ОбластьДанныеПереработкаОткл.Параметры.ПереработкаОткл1 = ТЗ[ТЗ.Количество() - 3][ИндКол + 4];
			ОбластьДанныеПереработкаОткл.Параметры.ПереработкаОткл = ТЗ[ТЗ.Количество() - 3][ИндКол + 5];
				
			Результат.Присоединить(ОбластьДанныеПереработкаОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
				
    // затраты на сырье
	Результат.Вывести(ОбластьШапкаСырье, 1,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеСырьеСц1.Параметры.Сырье11 = ТЗ[ТЗ.Количество() - 2][ИндКол];
		ОбластьДанныеСырьеСц1.Параметры.Сырье1 = ТЗ[ТЗ.Количество() - 2][ИндКол + 1];
				
		Результат.Присоединить(ОбластьДанныеСырьеСц1, 1);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеСырьеСц2.Параметры.Сырье21 = ТЗ[ТЗ.Количество() - 2][ИндКол + 2];
			ОбластьДанныеСырьеСц2.Параметры.Сырье2 = ТЗ[ТЗ.Количество() - 2][ИндКол + 3];
				
			Результат.Присоединить(ОбластьДанныеСырьеСц2, 1);
				
			ОбластьДанныеСырьеОткл.Параметры.СырьеОткл1 = ТЗ[ТЗ.Количество() - 2][ИндКол + 4];
			ОбластьДанныеСырьеОткл.Параметры.СырьеОткл = ТЗ[ТЗ.Количество() - 2][ИндКол + 5];
				
			Результат.Присоединить(ОбластьДанныеСырьеОткл, 1);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;
				
    // итог себ
	Результат.Вывести(ОбластьШапкаИтогСеб, 2,,Ложь);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
							
		ОбластьДанныеИтогСебСц1.Параметры.Себ11 = ТЗ[ТЗ.Количество() - 1][ИндКол];				
		Результат.Присоединить(ОбластьДанныеИтогСебСц1, 2);
		
		Если ДваСценария Тогда
		
			ОбластьДанныеИтогСебСц2.Параметры.Себ21 = ТЗ[ТЗ.Количество() - 1][ИндКол + 2];	
			Результат.Присоединить(ОбластьДанныеИтогСебСц2, 2);
				
			ОбластьДанныеИтогСебОткл.Параметры.СебОткл1 = ТЗ[ТЗ.Количество() - 1][ИндКол + 2] - ТЗ[ТЗ.Количество() - 1][ИндКол];		
			Результат.Присоединить(ОбластьДанныеИтогСебОткл, 2);
							
			ИндКол = ИндКол + 5;
			
		Иначе
			
			ИндКол = ИндКол + 1;
			
		КонецЕсли;
							
	КонецЦикла;

				
	Результат.ЗакончитьАвтогруппировкуСтрок();

	Результат.ОтображатьСетку = Ложь;
	Результат.Защита = Ложь;
	Результат.ТолькоПросмотр = Истина;
	Результат.ОтображатьЗаголовки = Истина;
	Результат.ОтображатьГруппировки = Истина;
	Результат.АвтоМасштаб = Истина;
	
КонецПроцедуры

Процедура ПросуммироватьТаблицу(ТЗ, ПараметрКоманды, ДваСценария)
	
	// 23.11.12 убираем затраты по реализации и Услуги УК
	
	КолСтрок = ТЗ.Количество();
	ПослСтр = КолСтрок - 1;
	
	Пока ТЗ[ПослСтр].СтатьиЗатрат.Родитель <> Справочники.СтатьиЗатрат.ЗатратыРеализация Цикл
		
		ПослСтр = ПослСтр - 1;
		
	КонецЦикла;
	
	Для ОбрИнд = 0 По ПослСтр Цикл
		
		Если ТЗ[ПослСтр - ОбрИнд].СтатьиЗатрат.Родитель = Справочники.СтатьиЗатрат.ЗатратыРеализация ИЛИ ТЗ[ПослСтр - ОбрИнд].СтатьиЗатрат = Справочники.СтатьиЗатрат.ЗатратыРеализация Тогда
			ТЗ.Удалить(ПослСтр - ОбрИнд)
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// закомментированно di 19.02.13 (не убирать услуги ук)
	//СтрУслугиУКГр = ТЗ.Найти(Справочники.ИздержкиОбращения.УслугиУКГруппа, "СтатьиЗатрат");
	//ТЗ.Удалить(ТЗ.Индекс(СтрУслугиУКГр));
	//
	//СтрУслугиУК = ТЗ.Найти(Справочники.ИздержкиОбращения.УслугиУК, "СтатьиЗатрат");
	//ТЗ.Удалить(ТЗ.Индекс(СтрУслугиУК));
	//
	
	// суммируем по горизонтали для получения итогов по предприятиям	
	
	Для ИндСтр = 6 По ТЗ.Количество() - 1 Цикл
						
		Для Каждого ТекПредприятие Из ПараметрКоманды.Предприятие Цикл
			
			СуммаСц1 = 0;
			
			Если ДваСценария Тогда			
				СуммаСц2 = 0;
				СуммаОткл = 0; 
			КонецЕсли;
			
			Для ИндексПредпр = 1 По ТЗ.Колонки.Количество() - 1 Цикл
				
				Если ТЗ[1][ИндексПредпр] <> ТекПредприятие Тогда
					Если ДваСценария Тогда
						ИндексПредпр = ИндексПредпр + 5;
					Иначе
						ИндексПредпр = ИндексПредпр + 1;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				
				Если ТЗ[1][ИндексПредпр + 1] = "ВСЕГО" Тогда
					
					ИндексВсего = ИндексПредпр;
								
					ТЗ[ИндСтр][ИндексВсего] = ТЗ[ИндСтр][ИндексВсего] + ?(ТЗ[5][ИндексВсего] <> 0, СуммаСц1/ТЗ[5][ИндексВсего], 0);					
					ТЗ[ИндСтр][ИндексВсего + 1] = ТЗ[ИндСтр][ИндексВсего + 1] + СуммаСц1;				
					
					Если ДваСценария Тогда
						ТЗ[ИндСтр][ИндексВсего + 2] = ТЗ[ИндСтр][ИндексВсего + 2] + ?(ТЗ[5][ИндексВсего + 2] <> 0, СуммаСц2/ТЗ[5][ИндексВсего + 2], 0);					
						ТЗ[ИндСтр][ИндексВсего + 3] = ТЗ[ИндСтр][ИндексВсего + 3] + СуммаСц2;
						ТЗ[ИндСтр][ИндексВсего + 4] = ТЗ[ИндСтр][ИндексВсего + 2] - ТЗ[ИндСтр][ИндексВсего];  					
						ТЗ[ИндСтр][ИндексВсего + 5] = ТЗ[ИндСтр][ИндексВсего + 5] + СуммаОткл;
					КонецЕсли;
						
					Прервать;
					
				КонецЕсли;
				
				// не суммируем вторичку
				
				Если ТЗ[1][ИндексПредпр + 1].ВторичнаяПереработка = Ложь Тогда 
				
					СуммаСц1 = СуммаСц1 + ТЗ[ИндСтр][ИндексПредпр + 1];
					
				КонецЕсли;
								
				Если ДваСценария Тогда
					
					Если ТЗ[1][ИндексПредпр + 1].ВторичнаяПереработка = Ложь Тогда 
					
						СуммаСц2 = СуммаСц2 + ТЗ[ИндСтр][ИндексПредпр + 3];
						СуммаОткл = СуммаОткл + ТЗ[ИндСтр][ИндексПредпр + 5]; 			
						
					КонецЕсли;	
					
					ИндексПредпр = ИндексПредпр + 5;
				Иначе
					ИндексПредпр = ИндексПредпр + 1;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
				
	КонецЦикла;
	
	// суммируем по вертикали, получаем ИТОГО, переработка, затраты на сырье, средняя себестоимость
	
	Строка_ИТОГО = ТЗ.Добавить();
	Строка_ИТОГО.СтатьиЗатрат = "ИТОГО:";
	ИндИтого = ТЗ.Индекс(Строка_ИТОГО);
	
	Строка_Переработка = ТЗ.Добавить();
	Строка_Переработка.СтатьиЗатрат = "переработка:";
	ИндПереработка = ТЗ.Индекс(Строка_Переработка);
	
	Строка_Сырье = ТЗ.Добавить();
	Строка_Сырье.СтатьиЗатрат = "затраты на сырье";
	ИндСырье = ТЗ.Индекс(Строка_Сырье);
	
	Строка_СредСеб = ТЗ.Добавить();
	Строка_СредСеб.СтатьиЗатрат = "Средняя себестоимость";
	ИндСредСеб = ТЗ.Индекс(Строка_СредСеб);
	
	Для ИндКол = 1 По ТЗ.Колонки.Количество() - 1 Цикл
		
		Для ИндСтр = 6 По ТЗ.Количество() - 5 Цикл
			
			Если ЗначениеЗаполнено(ТЗ[ИндИтого][ИндКол]) = Ложь Тогда
				ТЗ[ИндИтого][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[ИндСырье][ИндКол]) = Ложь Тогда
				ТЗ[ИндСырье][ИндКол] = 0;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТЗ[ИндПереработка][ИндКол]) = Ложь Тогда
				ТЗ[ИндПереработка][ИндКол] = 0;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТЗ[ИндСредСеб][ИндКол]) = Ложь Тогда
				ТЗ[ИндСредСеб][ИндКол] = 0;
			КонецЕсли;
			
			Если ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.ЗатратыОсн ИЛИ ТЗ[ИндСтр][0] = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
								
				ТЗ[ИндСырье][ИндКол] = ТЗ[ИндСырье][ИндКол] + ТЗ[ИндСтр][ИндКол];
				
			ИначеЕсли ТипЗнч(ТЗ[ИндСтр][0]) = Тип("СправочникСсылка.СтатьиЗатрат") И ТЗ[ИндСтр][0].ЭтоГруппа = Ложь Тогда
								
				ТЗ[ИндПереработка][ИндКол] = ТЗ[ИндПереработка][ИндКол] + ТЗ[ИндСтр][ИндКол];
				
			КонецЕсли;
			
			ТЗ[ИндИтого][ИндКол] = ТЗ[ИндСырье][ИндКол] + ТЗ[ИндПереработка][ИндКол];
			
			// если номер колонки нечетный, то на единицу, если четный сумма
			Если ИндКол > 0 И ИндКол%2 = 0 Тогда
				ТЗ[ИндСредСеб][ИндКол - 1] = ?((ТЗ[3][ИндКол] + ТЗ[5][ИндКол - 1]) <> 0, (ТЗ[ИндИтого][ИндКол] + ТЗ[2][ИндКол]) / (ТЗ[3][ИндКол] + ТЗ[5][ИндКол - 1]), 0);
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
		
	// сдвигаем строку с ферментами на одну позицию вверх	
	СтрФерменты = ТЗ.Найти(Перечисления.Д_Ферменты.Ферменты, "СтатьиЗатрат");
	ТЗ.Сдвинуть(СтрФерменты, -1);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыКоманды(ТекущиеНастройки)
	
	ПараметрКоманды = Новый Структура;
	
	ТекПредприятия = ТекущиеНастройки.Элементы[0].Значение;
	Если ТипЗнч(ТекПредприятия) = Тип("СправочникСсылка.Предприятия") Тогда
		МассивПредприятий = Новый Массив;
		МассивПредприятий.Добавить(ТекПредприятия);
	ИначеЕсли ТипЗнч(ТекПредприятия) = Тип("СписокЗначений") Тогда
		МассивПредприятий = ТекПредприятия.ВыгрузитьЗначения();
	КонецЕсли;
	
	ПараметрКоманды.Вставить("Предприятие", МассивПредприятий);
	ПараметрКоманды.Вставить("Сценарий1", ТекущиеНастройки.Элементы[1].Значение);
	Если ТекущиеНастройки.Элементы[2].Использование Тогда
		ПараметрКоманды.Вставить("Сценарий2", ТекущиеНастройки.Элементы[2].Значение);
	Иначе
		ПараметрКоманды.Вставить("Сценарий2", Справочники.СценарииПланирования.ПустаяСсылка());		
	КонецЕсли;
	Если ТекущиеНастройки.Элементы[3].Использование Тогда
		ПараметрКоманды.Вставить("Номенклатура",  ТекущиеНастройки.Элементы[3].Значение);
	Иначе
		ПараметрКоманды.Вставить("Номенклатура",  Неопределено);
	КонецЕсли;
		
	Если ТекущиеНастройки.Элементы[5].Использование Тогда
		ПараметрКоманды.Вставить("Интервал", ТекущиеНастройки.Элементы[5].Значение);
	Иначе
		ПараметрКоманды.Вставить("Интервал", Перечисления.Д_Интервал.Нет);	
	КонецЕсли;
	Если ТекущиеНастройки.Элементы[6].Использование Тогда
		ПараметрКоманды.Вставить("Прочие", ТекущиеНастройки.Элементы[6].Значение);
	Иначе
		ПараметрКоманды.Вставить("Прочие", Ложь);
	КонецЕсли;
	Если ТекущиеНастройки.Элементы[7].Использование Тогда
		ПараметрКоманды.Вставить("знака2", ТекущиеНастройки.Элементы[7].Значение);
	Иначе
		ПараметрКоманды.Вставить("знака2", Ложь);	
	КонецЕсли;
	Если ТекущиеНастройки.Элементы[8].Использование Тогда
		ПараметрКоманды.Вставить("Корректировки", ТекущиеНастройки.Элементы[8].Значение);
	Иначе
		ПараметрКоманды.Вставить("Корректировки", Ложь);	
	КонецЕсли;
		
	ПараметрКоманды.Вставить("Период",  ТекущиеНастройки.Элементы[4].Значение);

	Возврат ПараметрКоманды;
	
КонецФункции

