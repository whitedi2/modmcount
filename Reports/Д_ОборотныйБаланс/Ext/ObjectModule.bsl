
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	ДокументРезультат.Очистить();
	
	ПараметрКоманды = Новый Структура;
	
	ПараметрКоманды.Вставить("Сценарий1", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение);
	ПараметрКоманды.Вставить("Сценарий2", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение);
	ПараметрКоманды.Вставить("Период",  КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].Значение);
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Использование Тогда
		ПараметрКоманды.Вставить("Сводный", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[3].Значение);
	Иначе
		ПараметрКоманды.Вставить("Сводный", Ложь);
	КонецЕсли;
	
	ПараметрКоманды.Вставить("Интервал", ?(КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Получить(5).Использование , КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Получить(5).Значение, Неопределено));
	//ПараметрКоманды.Вставить("Интервал", Перечисления.Д_Интервал.Нет);
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Использование Тогда
		ПараметрКоманды.Вставить("ВидСХ", КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[4].Значение);
	Иначе
		ПараметрКоманды.Вставить("ВидСХ", Ложь);
	КонецЕсли;

	
	
	
	МассивПредприятий = Новый Массив;
	Для каждого ТекПредприятие Из Предприятие Цикл
		Если ТекПредприятие.Пометка Тогда
			МассивПредприятий.Добавить(ТекПредприятие.Значение);
		КонецЕсли;
	КонецЦикла; 
	ПараметрКоманды.Вставить("Предприятие", Предприятие);
		
	
	ЗаполнитьТаблицу(ДокументРезультат, ПараметрКоманды);
	
	ДокументРезультат.ОтображатьСетку = Ложь;
	ДокументРезультат.Защита = Ложь;
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.ОтображатьЗаголовки = Истина;
	ДокументРезультат.ОтображатьГруппировки = Истина;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ЗаполнитьПараметрыРасшифровкиТаблицы(Таблица, ПризнакБаланса, ТекСц, ДатаНач, ДатаКон)
	
	ПС = ?(ТекСц = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ТекущийПериод = Новый СтандартныйПериод(ДатаНач, ДатаКон);
	
	Если ПризнакБаланса = "Актив" Тогда
		
		// внеоборотные активы
		МассивСчетаВнеоб = Новый Массив;
		МассивСчетаВнеоб.Добавить(ПС.ОсновныеСредства);
		МассивСчетаВнеоб.Добавить(ПС.ПриобретениеОС);
		МассивСчетаВнеоб.Добавить(ПС.РемонтОС);
		МассивСчетаВнеоб.Добавить(ТекСц);	
		МассивСчетаВнеоб.Добавить(ТекущийПериод);	
		Таблица.Параметры.СчетаВнеОб = МассивСчетаВнеоб;
		
		// осн сыре + ДЗ
		МассивСчетов1060_1 = Новый Массив;
		МассивСчетов1060_1.Добавить(ПС.ОсновноеСырье);
		
		Если ПС = ПланыСчетов.Учетный Тогда
			
			Счет10_10_1 = ПС.НайтиПоНаименованию("Зерно");
			
			Если ЗначениеЗаполнено(Счет10_10_1) Тогда
				МассивСчетов1060_1.Добавить(Счет10_10_1);
			КонецЕсли;
			
			Счет10_10_2 = ПС.НайтиПоНаименованию("Доп. затраты по зерну");
			
			Если ЗначениеЗаполнено(Счет10_10_2) Тогда
				МассивСчетов1060_1.Добавить(Счет10_10_2);
			КонецЕсли;

			Счет10_10_3 = ПС.НайтиПоНаименованию("Разновес");
			
			Если ЗначениеЗаполнено(Счет10_10_3) Тогда
				МассивСчетов1060_1.Добавить(Счет10_10_3);
			КонецЕсли;
			
		ИначеЕсли ПС = ПланыСчетов.Учетный Тогда
			
			МассивСчетов1060_1.Добавить(ПС.Зерно);
			МассивСчетов1060_1.Добавить(ПС.ДопЗатраты);
			МассивСчетов1060_1.Добавить(ПС.Разновес);
			
		КонецЕсли;
			
		МассивСчетов1060_1.Добавить(ПС.ПоставщикиОсн);
		МассивСчетов1060_1.Добавить(ТекСц);	
		МассивСчетов1060_1.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счета1060_1 = МассивСчетов1060_1;
		
		// вспом сырье + ДЗ
		МассивСчетов1060_2 = Новый Массив;
		МассивСчетов1060_2.Добавить(ПС.ВспомСырье);
		Счет10_011 = ПС.НайтиПоНаименованию("Сырье (осн. и всп. материалы)");
		Если ЗначениеЗаполнено(Счет10_011) Тогда
			МассивСчетов1060_2.Добавить(Счет10_011);
		КонецЕсли;
		Счет10_08 = ПС.НайтиПоНаименованию("Материалы, переданные в переработку на сторону");
		Если ЗначениеЗаполнено(Счет10_08) Тогда
			МассивСчетов1060_2.Добавить(Счет10_08);
		КонецЕсли;
		Счет10_09 = ПС.НайтиПоНаименованию("Прочие материалы");
		Если ЗначениеЗаполнено(Счет10_09) Тогда
			МассивСчетов1060_2.Добавить(Счет10_09);
		КонецЕсли;
		Счет10_11 = ПС.НайтиПоНаименованию("Спецодежда, спецоснастка на складе");
		Если ЗначениеЗаполнено(Счет10_11) Тогда
			МассивСчетов1060_2.Добавить(Счет10_11);
		КонецЕсли;
		Счет10_12 = ПС.НайтиПоНаименованию("Опалубка");
		Если ЗначениеЗаполнено(Счет10_12) Тогда
			МассивСчетов1060_2.Добавить(Счет10_12);
		КонецЕсли;
		МассивСчетов1060_2.Добавить(ПС.ПоставщикиВсп);
		МассивСчетов1060_2.Добавить(ТекСц);	
		МассивСчетов1060_2.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счета1060_2 = МассивСчетов1060_2;
		
		// текущие запасы + ДЗ
		МассивСчетов1060_3 = Новый Массив;
		МассивСчетов1060_3.Добавить(ПС.ГСМ);
		МассивСчетов1060_3.Добавить(ПС.Тара);
		МассивСчетов1060_3.Добавить(ПС.ТМЦТекущ);
		
		МассивСчетов1060_3.Добавить(ПС.ПоставщикиМБП);
		МассивСчетов1060_3.Добавить(ТекСц);
		МассивСчетов1060_3.Добавить(ТекущийПериод);
		Таблица.Параметры.Счета1060_3 = МассивСчетов1060_3;
		
		// неликвиды
		МассивСчетов1060_7 = Новый Массив;
		МассивСчетов1060_7.Добавить(ПС.ТМЦНеликвиды);
		МассивСчетов1060_7.Добавить(ТекСц);	
		МассивСчетов1060_7.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счета1060_7 = МассивСчетов1060_7;
		
		// инвестиционные запасы + ДЗ
		МассивСчетов1060_6 = Новый Массив;
		МассивСчетов1060_6.Добавить(ПС.ТМЦИнв);
		МассивСчетов1060_6.Добавить(ПС.ПоставщикиИнв);
		МассивСчетов1060_6.Добавить(ПС.ПриобретениеОС);
		МассивСчетов1060_6.Добавить(ПС.РемонтОС);
		МассивСчетов1060_6.Добавить(ТекСц);	
		МассивСчетов1060_6.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счета1060_6 = МассивСчетов1060_6;
		
		// нзв
		МассивСчет20 = Новый Массив;
		МассивСчет20.Добавить(ПС.ОсновноеПрво);
		МассивСчет20.Добавить(ТекСц);
		МассивСчет20.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет20 = МассивСчет20;       
		
		// товары
		МассивСчет41 = Новый Массив;
		МассивСчет41.Добавить(ПС.Товары);
		Счет41_02 = ПС.НайтиПоНаименованию("Корректировка себестоимости товаров");
		Если ЗначениеЗаполнено(Счет41_02) Тогда
			МассивСчет41.Добавить(Счет41_02);
		КонецЕсли;
		Счет41_03 = ПС.НайтиПоНаименованию("Самостоятельные части объекта");
		Если ЗначениеЗаполнено(Счет41_03) Тогда
			МассивСчет41.Добавить(Счет41_03);
		КонецЕсли;
		Счет41_04 = ПС.НайтиПоНаименованию("Наценка на КМ");
		Если ЗначениеЗаполнено(Счет41_04) Тогда
			МассивСчет41.Добавить(Счет41_04);
		КонецЕсли;
		МассивСчет41.Добавить(ТекСц);	
		МассивСчет41.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счет41 = МассивСчет41;

		// ГП
		МассивСчет43 = Новый Массив;
		МассивСчет43.Добавить(ПС.ГотоваяПродукция);
		МассивСчет43.Добавить(ТекСц);	
		МассивСчет43.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счет43 = МассивСчет43;
		
		// денежные счета
		МассивДС = Новый Массив;
		МассивДС.Добавить(ПС.Касса);
		МассивДС.Добавить(ПС.РасчетныйСчет);
		Если ПС = ПланыСчетов.Учетный Тогда
			МассивДС.Добавить(ПС.КассаОрганизации);
			МассивДС.Добавить(ПС.КассаОрганизацииВал);
			//МассивДС.Добавить(ПС.ЛицевыеСчета);
			//МассивДС.Добавить(ПС.ЛицевыеСчетаВал);
			//МассивДС.Добавить(ПС.ДепозитныеСчета);
			МассивДС.Добавить(ПС.ВиртуальныйРасчетныйСчет);
		КонецЕсли;
		МассивДС.Добавить(ТекСц);	
		МассивДС.Добавить(ТекущийПериод);	
		Таблица.Параметры.ДенежныеСчета = МассивДС;
		
		// запасы
		МассивЗапасы = Новый Массив;
		МассивЗапасы.Добавить(ПС.ОсновноеСырье);
		МассивЗапасы.Добавить(ПС.ПоставщикиОсн);
		МассивЗапасы.Добавить(ПС.ВспомСырье);
		МассивЗапасы.Добавить(ПС.ПоставщикиВсп);
		МассивЗапасы.Добавить(ПС.ГСМ);
		МассивЗапасы.Добавить(ПС.Тара);
		МассивЗапасы.Добавить(ПС.ТМЦТекущ);
		Если ЗначениеЗаполнено(Счет10_011) Тогда
			МассивЗапасы.Добавить(Счет10_011);
		КонецЕсли;
		Если ЗначениеЗаполнено(Счет10_08) Тогда
			МассивЗапасы.Добавить(Счет10_08);
		КонецЕсли;
		Если ЗначениеЗаполнено(Счет10_09) Тогда
			МассивЗапасы.Добавить(Счет10_09);
		КонецЕсли;
		Если ЗначениеЗаполнено(Счет10_11) Тогда
			МассивЗапасы.Добавить(Счет10_11);
		КонецЕсли;
		Если ЗначениеЗаполнено(Счет10_12) Тогда
			МассивЗапасы.Добавить(Счет10_12);
		КонецЕсли;
		МассивЗапасы.Добавить(ПС.ПоставщикиМБП);
		МассивЗапасы.Добавить(ПС.ТМЦНеликвиды);
		Счет60_6 = ПС.НайтиПоНаименованию("Поставщики прочие");
		Если ЗначениеЗаполнено(Счет60_6) Тогда
			МассивЗапасы.Добавить(Счет60_6);
		КонецЕсли;
		МассивЗапасы.Добавить(ПС.ТМЦИнв);
		МассивЗапасы.Добавить(ПС.ПоставщикиИнв);
		МассивЗапасы.Добавить(ПС.ПриобретениеОС);
		МассивЗапасы.Добавить(ПС.РемонтОС);
		МассивЗапасы.Добавить(ПС.ОсновноеПрво);
		МассивЗапасы.Добавить(ПС.ГотоваяПродукция);
		МассивЗапасы.Добавить(ТекСц);
		МассивЗапасы.Добавить(ТекущийПериод);
		Таблица.Параметры.Запасы = МассивЗапасы;
		
		// ДЗ покупателей
		МассивСчет62 = Новый Массив;
		МассивСчет62.Добавить(ПС.ПокупателиОсн);
		МассивСчет62.Добавить(ПС.ПокупателиВсп);
		МассивСчет62.Добавить(ПС.ПокупателиПроч);
		МассивСчет62.Добавить(ПС.ВиртуальнаяОтгрузка);
		Счет62_4 = ПС.НайтиПоНаименованию("Покупатели основной продукции прочие");
		Если ЗначениеЗаполнено(Счет62_4) Тогда
			МассивСчет62.Добавить(Счет62_4);
		КонецЕсли;
		//МассивСчет62.Добавить(ПС.ТранспортныеУслуги);
		Счет62_30 = ПС.НайтиПоНаименованию("Расчеты с покупателями по неосновной деятельности");
		Если ЗначениеЗаполнено(Счет62_30) Тогда
			МассивСчет62.Добавить(Счет62_30);
		КонецЕсли;
		МассивСчет62.Добавить(ТекСц);	
		МассивСчет62.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет62 = МассивСчет62;
		
		// энергетика
		МассивСчетовЭ = Новый Массив;
		МассивСчетовЭ.Добавить(ПС.ПоставщикиУсл);
		МассивСчетовЭ.Добавить(ПС.ПоставщикиМБП);
		МассивСчетовЭ.Добавить(ТекСц);
		МассивСчетовЭ.Добавить(ТекущийПериод);
		Таблица.Параметры.СчетаЭ = МассивСчетовЭ;
		Таблица.Параметры.СчетаГаз = МассивСчетовЭ;
		Таблица.Параметры.СчетаЭл = МассивСчетовЭ;
		
		// финансовые вложения
		МассивСчетовФВ = Новый Массив;
		МассивСчетовФВ.Добавить(ПС.ФинансовыеВложения);
		Счет58_01 = ПС.НайтиПоНаименованию("Долговые ценные бумаги");
		Если ЗначениеЗаполнено(Счет58_01) Тогда
			МассивСчетовФВ.Добавить(Счет58_01);
		КонецЕсли;
		Счет58_02 = ПС.НайтиПоНаименованию("Предоставленные займы");
		Если ЗначениеЗаполнено(Счет58_02) Тогда
			МассивСчетовФВ.Добавить(Счет58_02);
		КонецЕсли;
		МассивСчетовФВ.Добавить(ТекСц);	
		МассивСчетовФВ.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счет58 = МассивСчетовФВ;
		
		// прочая ДЗ
		МассивСчетовПДЗ = Новый Массив;
		МассивСчетовПДЗ.Добавить(ПС.ПоставщикиУсл);
		//МассивСчетовПДЗ.Добавить(ПС.ВерхПоОтгрузке);
		//МассивСчетовПДЗ.Добавить(ПС.ВерхПоОплате);
		МассивСчетовПДЗ.Добавить(ПС.ПрочиеВзаиморасчеты);
		МассивСчетовПДЗ.Добавить(ПС.ДеньгиВПути);
		МассивСчетовПДЗ.Добавить(ПС._5703);
		МассивСчетовПДЗ.Добавить(ПС.РасчетыПоОплатеТруда);
		//МассивСчетовПДЗ.Добавить(ПС._76_10);
		//МассивСчетовПДЗ.Добавить(ПС._76_11);
		
		Счет76_12 = ПС.НайтиПоНаименованию("Ретробонусы");
		Если ЗначениеЗаполнено(Счет76_12) Тогда
			МассивСчетовПДЗ.Добавить(Счет76_12);
		КонецЕсли;
		Счет76_13 = ПС.НайтиПоНаименованию("Расчеты по сторонним выплатам");
		Если ЗначениеЗаполнено(Счет76_13) Тогда
			МассивСчетовПДЗ.Добавить(Счет76_13);
		КонецЕсли;
		
		Счет76_4 = ПС.НайтиПоНаименованию("Расчеты по бонусам и разделению затрат");
		Если ЗначениеЗаполнено(Счет76_4) Тогда
			МассивСчетовПДЗ.Добавить(Счет76_4);
		КонецЕсли;
		Счет76_11 = ПС.НайтиПоНаименованию();
		Счет60_6 = ПС.НайтиПоНаименованию("Поставщики прочие");
		Если ЗначениеЗаполнено(Счет60_6) Тогда
			МассивСчетовПДЗ.Добавить(Счет60_6);
		КонецЕсли;
		Счет71_1 = ПС.НайтиПоНаименованию("П/о касса завода");
		Если ЗначениеЗаполнено(Счет71_1) Тогда
			МассивСчетовПДЗ.Добавить(Счет71_1);
		КонецЕсли;
		Счет71_2 = ПС.НайтиПоНаименованию("П/о уч. завода");
		Если ЗначениеЗаполнено(Счет71_2) Тогда
			МассивСчетовПДЗ.Добавить(Счет71_2);
		КонецЕсли;
		Счет71_3 = ПС.НайтиПоНаименованию("П/о казна");
		Если ЗначениеЗаполнено(Счет71_3) Тогда
			МассивСчетовПДЗ.Добавить(Счет71_3);
		КонецЕсли;
		Счет71_4 = ПС.НайтиПоНаименованию("П/о на инвестиции");
		Если ЗначениеЗаполнено(Счет71_4) Тогда
			МассивСчетовПДЗ.Добавить(Счет71_4);
		КонецЕсли;
		МассивСчетовПДЗ.Добавить(ПС.УсловеноВнутренниеВзаиморасчеты);
		МассивСчетовПДЗ.Добавить(ТекСц);	
		МассивСчетовПДЗ.Добавить(ТекущийПериод);	
		Таблица.Параметры.СчетаПДЗ = МассивСчетовПДЗ;
		
		// расходы будущих периодов
		МассивСчет97 = Новый Массив;
		МассивСчет97.Добавить(ПС.РасходыБуд);
		МассивСчет97.Добавить(ТекСц);
		МассивСчет97.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет97 = МассивСчет97;
		
		// дебиторка холдинга (за проекты)
		МассивСчет79 = Новый Массив;
		МассивСчет79.Добавить(ПС.ВНХДенежные);
		МассивСчет79.Добавить(ПС.ВНХТоварные);
		МассивСчет79.Добавить(ПС.ВНХДоки);
		Счет79_10 = ПС.НайтиПоНаименованию("Внутрихозяйственные отношения МС");
		Если ЗначениеЗаполнено(Счет79_10) Тогда
			МассивСчет79.Добавить(Счет79_10);
		КонецЕсли;
		МассивСчет79.Добавить(ТекСц);
		МассивСчет79.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет79 = МассивСчет79;
		
	ИначеЕсли ПризнакБаланса = "Ч" Тогда
		
	//	// деньги
	//	МассивСчетов50_51 = Новый Массив;
	//	МассивСчетов50_51.Добавить(ПС.Касса);
	//	МассивСчетов50_51.Добавить(ПС.РасчетныйСчет);
	//	Счет50_1 = ПС.НайтиПоНаименованию("Касса организации");
	//	Если ЗначениеЗаполнено(Счет50_1) Тогда
	//		МассивСчетов50_51.Добавить(Счет50_1);
	//	КонецЕсли;
	//	Счет50_2 = ПС.НайтиПоНаименованию("Касса организации (в валюте)");
	//	Если ЗначениеЗаполнено(Счет50_2) Тогда
	//		МассивСчетов50_51.Добавить(Счет50_2);
	//	КонецЕсли;
	//	Счет51_1 = ПС.НайтиПоНаименованию("Расчетные счета");
	//	Если ЗначениеЗаполнено(Счет51_1) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_1);
	//	КонецЕсли;
	//	Счет51_2 = ПС.НайтиПоНаименованию("Валютные счета");
	//	Если ЗначениеЗаполнено(Счет51_2) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_2);
	//	КонецЕсли;
	//	Счет51_3 = ПС.НайтиПоНаименованию("Лицевые счета");
	//	Если ЗначениеЗаполнено(Счет51_3) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_3);
	//	КонецЕсли;
	//	Счет51_4 = ПС.НайтиПоНаименованию("Депозитные счета");
	//	Если ЗначениеЗаполнено(Счет51_4) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_4);
	//	КонецЕсли;
	// 	Счет51_5 = ПС.НайтиПоНаименованию("Виртуальные расчетные счета");
	//	Если ЗначениеЗаполнено(Счет51_5) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_5);
	//	КонецЕсли;
	//	Счет51_6 = ПС.НайтиПоНаименованию("Лицевые счета (в валюте)");
	//	Если ЗначениеЗаполнено(Счет51_6) Тогда
	//		МассивСчетов50_51.Добавить(Счет51_6);
	//	КонецЕсли;
	//	МассивСчетов50_51.Добавить(ТекСц);
	//	МассивСчетов50_51.Добавить(ТекущийПериод);
	//	Таблица.Параметры.Счета50_51 = МассивСчетов50_51;
	//		
	ИначеЕсли ПризнакБаланса = "Пассив" Тогда
		
		// уставный капитал убрать 83
		//МассивСчетов83_75 = Новый Массив;
		//МассивСчетов83_75.Добавить(ПС.ОСПриобретенные);
		//МассивСчетов83_75.Добавить(ПС.ДооценкаОС);
		//МассивСчетов83_75.Добавить(ПС.РасчетыПоВкладам);
		//МассивСчетов83_75.Добавить(ТекСц);
		//МассивСчетов83_75.Добавить(ТекущийПериод);
		//Таблица.Параметры.Счета8375 = МассивСчетов83_75;
		
		// казна
		МассивСчетов55_56 = Новый Массив;
		МассивСчетов55_56.Добавить(ПС.КазнаОсн);
		Если Не ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт() Тогда
			Если ПС = ПланыСчетов.Учетный Тогда	
				МассивСчетов55_56.Добавить(ПС._56);
			КонецЕсли;
		КонецЕсли;
		МассивСчетов55_56.Добавить(ТекСц);
		МассивСчетов55_56.Добавить(ТекущийПериод);
		Таблица.Параметры.Счета55_56 = МассивСчетов55_56;
		
		// прибыль участников
		МассивСчет75 = Новый Массив;
		МассивСчет75.Добавить(ПС.РасчетыПоВыплатам);
		МассивСчет75.Добавить(ПС.Финансирование);
		МассивСчет75.Добавить(?(ПС = ПланыСчетов.Учетный, ПланыСчетов.Учетный.НайтиПоНаименованию("Нераспределенная прибыль (под резерв)"), ПланыСчетов.Учетный._75_10));
		МассивСчет75.Добавить(ТекСц);	
		МассивСчет75.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счет75 = МассивСчет75;

		// инвестиционный фонд
		МассивСчет82 = Новый Массив;
		МассивСчет82.Добавить(ПС.ИнвестиционныйФонд);
		МассивСчет82.Добавить(ТекСц);
		МассивСчет82.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет82 = МассивСчет82;
		
		// кредиты банков
		МассивСчет67 = Новый Массив;
		МассивСчет67.Добавить(ПС.Кредиты);
		МассивСчет67.Добавить(ПС.Проценты);
		МассивСчет67.Добавить(ТекСц);	
		МассивСчет67.Добавить(ТекущийПериод);	
		Таблица.Параметры.Счет67 = МассивСчет67;
		
		// кз по налогам и сборам
		МассивСчет68Кт = Новый Массив;
		МассивСчет68Кт.Добавить(ПС.НалогиИСборы);
		МассивСчет68Кт.Добавить(ТекСц);
		МассивСчет68Кт.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет68Кт = МассивСчет68Кт;
		
		// сторонние кредиторы
		МассивКЗ = Новый Массив;
		МассивКЗ.Добавить(ПС.ПоставщикиУсл);
		МассивКЗ.Добавить(ПС.ПоставщикиМБП);
		//МассивКЗ.Добавить(ПС.ПоставщикиИнв);
		Счет60_6 = ПС.НайтиПоНаименованию("Поставщики прочие");
		Если ЗначениеЗаполнено(Счет60_6) Тогда
			МассивКЗ.Добавить(Счет60_6);
		КонецЕсли;
		МассивКЗ.Добавить(ПС.ВерхПоОтгрузке);
		МассивКЗ.Добавить(ПС.ВерхПоОплате);
		МассивКЗ.Добавить(ПС.ПрочиеВзаиморасчеты);
		МассивКЗ.Добавить(ПС.ДеньгиВПути);
		МассивКЗ.Добавить(ПС._5703);
		МассивКЗ.Добавить(ПС.УсловеноВнутренниеВзаиморасчеты);
		МассивКЗ.Добавить(ПС.РасчетыПоОплатеТруда);
		МассивКЗ.Добавить(ТекСц);
		МассивКЗ.Добавить(ТекущийПериод);
		Таблица.Параметры.СчетаКЗ = МассивКЗ;
		
			
		// сторонние кредиторы
		МассивСтКредиторы = Новый Массив;
		МассивСтКредиторы.Добавить(ПС.НалогиИСборы);
		МассивСтКредиторы.Добавить(ПС.ПоставщикиУсл);
		МассивСтКредиторы.Добавить(ПС.ПоставщикиМБП);
		//МассивСтКредиторы.Добавить(ПС.ПоставщикиИнв);
		Счет60_6 = ПС.НайтиПоНаименованию("Поставщики прочие");
		Если ЗначениеЗаполнено(Счет60_6) Тогда
			МассивСтКредиторы.Добавить(Счет60_6);
		КонецЕсли;
		МассивСтКредиторы.Добавить(ПС.ВерхПоОтгрузке);
		МассивСтКредиторы.Добавить(ПС.ВерхПоОплате);
		МассивСтКредиторы.Добавить(ПС.ПрочиеВзаиморасчеты);
		МассивСтКредиторы.Добавить(ПС.ДеньгиВПути);
		МассивСтКредиторы.Добавить(ПС._5703);
		МассивСтКредиторы.Добавить(ПС.УсловеноВнутренниеВзаиморасчеты);
		МассивСтКредиторы.Добавить(ПС.РасчетыПоОплатеТруда);
		МассивСтКредиторы.Добавить(ПС._76_10);
		МассивСтКредиторы.Добавить(ПС._76_11);
		
		Если ЗначениеЗаполнено(Счет76_12) Тогда
			МассивСчетовПДЗ.Добавить(Счет76_12);
		КонецЕсли;
		Если ЗначениеЗаполнено(Счет76_13) Тогда
			МассивСчетовПДЗ.Добавить(Счет76_13);
		КонецЕсли;
		
		МассивСтКредиторы.Добавить(ТекСц);
		МассивСтКредиторы.Добавить(ТекущийПериод);
		Таблица.Параметры.СчетаПрКЗ = МассивСтКредиторы;
		
		// кредиторка холдинга
		МассивСчет79Кт = Новый Массив;
		МассивСчет79Кт.Добавить(ПС.ВНХДенежные);
		МассивСчет79Кт.Добавить(ПС.ВНХТоварные);
		МассивСчет79Кт.Добавить(ПС.ВНХДоки);
		Счет79_10 = ПС.НайтиПоНаименованию("Внутрихозяйственные отношения МС");
		Если ЗначениеЗаполнено(Счет79_10) Тогда
			МассивСчет79Кт.Добавить(Счет79_10);
		КонецЕсли;
		МассивСчет79Кт.Добавить(ТекСц);
		МассивСчет79Кт.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет79Кт = МассивСчет79Кт;
		
		// доходы будущих периодов
		МассивСчет98 = Новый Массив;
		МассивСчет98.Добавить(ПС.ДоходыБуд);
		МассивСчет98.Добавить(ТекСц);
		МассивСчет98.Добавить(ТекущийПериод);
		Таблица.Параметры.Счет98 = МассивСчет98;
		
	Иначе	
		
		Массив_ЛИМ = Новый Массив;
		Массив_ЛИМ.Добавить(ПланыСчетов.Учетный.СчетЛИМ());
		Массив_ЛИМ.Добавить(ТекСц);
		Массив_ЛИМ.Добавить(ТекущийПериод);
		Таблица.Параметры.ЛИМ = Массив_ЛИМ;
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПреобразоватьВНоль(Сумм)
	Если Сумм = Null ИЛИ ПустаяСтрока(Сумм) или Сумм = Неопределено Тогда
		возврат 0;
	конецесли;
	возврат Сумм;
	
	
КонецФункции // Преобразовать()

Функция ПолучитьСумму(ТЗ, ИмяКолонки)
	Сумма = 0;
	РезультатПоиска = ТЗ.Колонки.Найти(ИмяКолонки);
	Если НЕ РезультатПоиска = Неопределено Тогда
		Сумма = ТЗ[0][РезультатПоиска.Имя];	
	КонецЕсли;
	Возврат Сумма;
КонецФункции // ()

Процедура РасчтитатьГруппы(ТЗ, Предприятия, Префикс)
	//расчет групповых статей
		
		//внх дз прочая
		Сумма1 = 0;
 		Сумма1 = Сумма1 + ПолучитьСумму(ТЗ, Префикс + "304");		
		Сумма1 = Сумма1 + ПолучитьСумму(ТЗ, Префикс + "305");
		ТЗ.Колонки.Добавить(Префикс + "1000");
		ТЗ[0][Префикс + "1000"] = Сумма1;
		
		
		//основноеСырье
		Сумма2 = 0;
 		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "167");		
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "168");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "166");
		ТЗ.Колонки.Добавить(Префикс + "1001");
		ТЗ[0][Префикс + "1001"] = Сумма2;
		
		
		//запасы
 		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "169");		
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "191");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "175");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "306");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "181");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "201");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "176");
		Сумма2 = Сумма2 + ПолучитьСумму(ТЗ, Префикс + "1018");
		ТЗ.Колонки.Добавить(Префикс + "1002");
		ТЗ[0][Префикс + "1002"] = Сумма2;
		
		// финансовые вложения обращение №2481
        СуммаФВ = ПолучитьСумму(ТЗ, Префикс + "425");
		
		//прочие дз
		Сумма3 = 0;
		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "253");
		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "307");
		ТЗ.Колонки.Добавить(Префикс + "1015");
		ТЗ[0][Префикс + "1015"] = Сумма3;
		
		//прочие деб
		Сумма3 = 0;
 		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "251");		
		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "253");
		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "307");
		Сумма3 = Сумма3 + ПолучитьСумму(ТЗ, Префикс + "252");
		ТЗ.Колонки.Добавить(Префикс + "1003");
		ТЗ[0][Префикс + "1003"] = Сумма3;
		
		//налоги и сборы актив
		Сумма4 = 0;
 		Сумма4 = Сумма4 + ПолучитьСумму(ТЗ, Префикс + "261");		
		Сумма4 = Сумма4 + ПолучитьСумму(ТЗ, Префикс + "262");
		Сумма4 = Сумма4 + ПолучитьСумму(ТЗ, Префикс + "263");
		ТЗ.Колонки.Добавить(Префикс + "1004");
		ТЗ[0][Префикс + "1004"] = Сумма4;
		
		//прибыль партнера
		Сумма5 = 0;
 		Сумма5 = Сумма5 + ПолучитьСумму(ТЗ, Префикс + "212");		
		Сумма5 = Сумма5 + ПолучитьСумму(ТЗ, Префикс + "213");
		Сумма5 = Сумма5 + ПолучитьСумму(ТЗ, Префикс + "214");
		Сумма5 = Сумма5 + ПолучитьСумму(ТЗ, Префикс + "220");
		ТЗ.Колонки.Добавить(Префикс + "1005");
		ТЗ[0][Префикс + "1005"] = Сумма5;
		
		//прибыль воронеж
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "211") + ПолучитьСумму(ТЗ, Префикс + "423");
		ТЗ[0][Префикс + "211"] = Сумма5;
		
		//прибыль КБР
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "216") + ПолучитьСумму(ТЗ, Префикс + "219");
		ТЗ[0][Префикс + "216"] = Сумма5;
		
		//прибыль З
	    Сумма5 = ПолучитьСумму(ТЗ, Префикс + "215") + ПолучитьСумму(ТЗ, Префикс + "218");
		ТЗ[0][Префикс + "215"] = Сумма5;
		
		// новый учр прибыль Р
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "217");
		ТЗ[0][Префикс + "217"] = Сумма5;
		
		// Ко
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "429");
		ТЗ[0][Префикс + "429"] = Сумма5;
		
		// Ч
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "430");
		ТЗ[0][Префикс + "430"] = Сумма5;
		
		// нераспределенная прибыль
		Сумма5 = ПолучитьСумму(ТЗ, Префикс + "428");
		ТЗ[0][Префикс + "428"] = Сумма5;
						
		ТЗ.Колонки.Добавить(Префикс + "1006");
		ТЗ[0][Префикс + "1006"] = ПолучитьСумму(ТЗ, Префикс + "421") + ТЗ[0][Префикс + "211"] + ТЗ[0][Префикс + "217"] + ТЗ[0][Префикс + "422"]+ ТЗ[0][Префикс + "216"] + ТЗ[0][Префикс + "215"] + ТЗ[0][Префикс + "1005"] + ТЗ[0][Префикс + "428"] + ТЗ[0][Префикс + "429"];
		
		// расчеты по оплате труда, добавлено по обращению №2687
		Сумма424 = ПолучитьСумму(ТЗ, Префикс + "424");
		
		//налоги пассив
		Сумма6 = 0;
 		Сумма6 = Сумма6 + ПолучитьСумму(ТЗ, Префикс + "380");		
		Сумма6 = Сумма6 + ПолучитьСумму(ТЗ, Префикс + "381");
		Сумма6 = Сумма6 + ПолучитьСумму(ТЗ, Префикс + "382");
			ТЗ.Колонки.Добавить(Префикс + "1007");
			ТЗ[0][Префикс + "1007"] = Сумма6;
		
		//прочая КЗ
		Сумма7 = 0;
 		Сумма7 = Сумма7 + ПолучитьСумму(ТЗ, Префикс + "394");		
		//Сумма7 = Сумма7 + ПолучитьСумму(ТЗ, Префикс + "395");
		Сумма7 = Сумма7 + ПолучитьСумму(ТЗ, Префикс + "396");
		Сумма7 = Сумма7 + ПолучитьСумму(ТЗ, Префикс + "397");
		Сумма7 = Сумма7 + ПолучитьСумму(ТЗ, Префикс + "398");
			ТЗ.Колонки.Добавить(Префикс + "1008");
			ТЗ[0][Префикс + "1008"] = Сумма7;
			
		//сторонняя КЗ
		ТЗ.Колонки.Добавить(Префикс + "1009");
		ТЗ[0][Префикс + "1009"] = Сумма6 + Сумма7 + Сумма424;  // обращение №2687
		
		// ДЗ покупателей
		Сумма8 = 0;
 		Сумма8 = Сумма8 + ПолучитьСумму(ТЗ, Префикс + "241");		
		Сумма8 = Сумма8 + ПолучитьСумму(ТЗ, Префикс + "242");
		ТЗ.Колонки.Добавить(Префикс + "1010");
		ТЗ[0][Префикс + "1010"] = Сумма8;
		
		// МБП
		Сумма11 = 0;
 		Сумма11 = Сумма11 + ПолучитьСумму(ТЗ, Префикс + "175");		
		Сумма11 = Сумма11 + ПолучитьСумму(ТЗ, Префикс + "306");
		Сумма11 = Сумма11 + ПолучитьСумму(ТЗ, Префикс + "176");
		ТЗ.Колонки.Добавить(Префикс + "1013");
		ТЗ[0][Префикс + "1013"] = Сумма11;

		
		//итого актив
		Сумма9 = 0;
		Сумма9 = Сумма9 + ПолучитьСумму(ТЗ, Префикс + "161");
		Сумма9 = Сумма9 + Сумма2;
		Сумма9 = Сумма9 + ПолучитьСумму(ТЗ, Префикс + "221");
		Сумма9 = Сумма9 + Сумма8;
		Сумма9 = Сумма9 + Сумма3;
		Сумма9 = Сумма9 + Сумма4;
		Сумма9 = Сумма9 + ПолучитьСумму(ТЗ, Префикс + "270");
		Сумма9 = Сумма9 + ПолучитьСумму(ТЗ, Префикс + "303");
		Сумма9 = Сумма9 + Сумма1;
		Сумма9 = Сумма9 + СуммаФВ;
		ТЗ.Колонки.Добавить(Префикс + "1011");
		ТЗ[0][Префикс + "1011"] = Сумма9;
		
		//итого пассив
		Сумма10 = 0;
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "1014");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "1019");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "1006");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "350");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "360");
		Сумма10 = Сумма10 + Сумма6 + Сумма7;
		Сумма10 = Сумма10 + Сумма424;  // обращение №2687
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "400");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "410");
		Сумма10 = Сумма10 + ПолучитьСумму(ТЗ, Префикс + "420");
		ТЗ.Колонки.Добавить(Префикс + "1012");
		ТЗ[0][Префикс + "1012"] = Сумма10;
		
		//Казна
		Если Префикс = "ОБ" Тогда
			Сумма11 = ПолучитьСумму(ТЗ, Префикс + "350");
			Сумма11 = Сумма11 + Сумма9 - Сумма10;
			ТЗ.Колонки.Добавить(Префикс + "1016");
			ТЗ[0][Префикс + "1016"] = Сумма11;
			ТЗ[0][Префикс + "1012"] = Сумма9;
		Иначе
			ТЗ.Колонки.Добавить(Префикс + "1017");
			ТЗ[0][Префикс + "1017"] = Сумма9 - Сумма10;
		КонецЕсли;
		

	

КонецПроцедуры

//получает остатки из выборки по счету
//ТипОстатка:
// "Дт" - Дебетовый
// "Кт" - Кредитовый
// "" - Свернутый
Функция ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, Счет, ТипОстатка = "", СубконтоКлюч = "", СубконтоПараметр = "")
	Если НЕ (СубконтоКлюч = "") Тогда
		СтруктураПоиска = Новый Структура("Предприятия, КодСчета, " + СубконтоКлюч, Предприятия, Счет, СубконтоПараметр);	
	Иначе
		СтруктураПоиска = Новый Структура("Предприятия, КодСчета", Предприятия, Счет);	
	КонецЕсли;
	Сумма = 0;
	ВыборкаФакт = РезультатФакт.Выбрать();
	Пока ВыборкаФакт.НайтиСледующий(СтруктураПоиска) Цикл
		Если ТипОстатка = "Дт" Тогда
			Сумма = Сумма + ВыборкаФакт.СуммаОстатокДт;
		ИначеЕсли ТипОстатка = "Кт" Тогда
			Сумма = Сумма + ВыборкаФакт.СуммаОстатокКт;
		Иначе
			Сумма = Сумма + ВыборкаФакт.Сумма;
		КонецЕсли;
	
	КонецЦикла;
    Возврат Сумма;
КонецФункции // ()
 
Функция ОпределитьКвартал(НомерМесяца)
	Если НомерМесяца / 3 <= 1 Тогда
		Возврат 1;
	ИначеЕсли НомерМесяца / 3 > 1 И НомерМесяца / 3 <= 2 Тогда 
		Возврат 2;
	ИначеЕсли  НомерМесяца / 3 > 2 И НомерМесяца / 3 <= 3 Тогда
		Возврат 3;
	ИначеЕсли НомерМесяца / 3 > 3 И НомерМесяца / 3 <= 4 Тогда
		Возврат 4;	
	КонецЕсли; 
КонецФункции // ()

Процедура ЗаполнитьТаблицу(ТабДок, ПараметрКоманды) Экспорт
	ТабДок.Очистить();
	//при выборе сценария факта в одном из полей Сценарий
	ПланСчетов1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	ПланСчетов2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина), ПланыСчетов.Учетный, ПланыСчетов.Учетный);
	Регистр1 = ?(ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина), "Учетный", "Бюджетный");
	Регистр2 = ?(ПараметрКоманды.Сценарий2 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина), "Учетный", "Бюджетный");
	
	
	Попытка
		ЭтотОбъект2 = ВнешниеОтчеты.Создать("Д_ОборотныйБаланс");	
	Исключение
		ЭтотОбъект2 = Отчеты.Д_ОборотныйБаланс;
	КонецПопытки;
	
	
	Макет = ЭтотОбъект2.ПолучитьМакет("МакетПланФакт");
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий1) и  НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) Тогда
		ПланМакета = "МакетПланФакт";
	Иначе
		Если ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина) Тогда
			Если ПараметрКоманды.ВидСХ Тогда
				ПланМакета = "ФактСХ";
			Иначе
				ПланМакета = "Факт";		
			КонецЕсли;			
		Иначе
			ПланМакета = "Макет";		
		КонецЕсли;
	КонецЕсли; 
		
	ВставлятьРазделительСтраниц = Ложь;
	
	Интервал = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	КлючДни = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, "30", ?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, "90", "365"));
	
	НачалоПериода = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ПараметрКоманды.Период.ДатаНачала),?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ПараметрКоманды.Период.ДатаНачала)), Год(ПараметрКоманды.Период.ДатаНачала)));
	
	КонецПериода = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ПараметрКоманды.Период.ДатаОкончания),?(
	ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ПараметрКоманды.Период.ДатаОкончания)), Год(ПараметрКоманды.Период.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	СчетчикПредприятий = 0;
	
	
	ПредприятияМассив = Новый Массив;
	МассивПредприятийДляВыборки = Новый Массив;
	
	Для каждого Т Из ПараметрКоманды.Предприятие Цикл
		Если Т.Пометка Тогда
			ПредприятияМассив.Добавить(Т.Значение);
			МассивПредприятийДляВыборки.Добавить(Т.Значение);
		КонецЕсли;
	КонецЦикла;
	
	
	Если ПараметрКоманды.Сводный Тогда
		ПредприятияМассив = Новый Массив;
		ПредприятияМассив.Добавить("Сводный");	
	КонецЕсли;
	
	
	Предпр = Т.Значение;
	ДатаНач = ПараметрКоманды.Период.ДатаНачала;
	ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
	СчетчикМесяцев = 0;
	СчетчикНоменклатур = 0;
	КоэффициентОтступа = 0;
	
	////////////////////////////////////////////////////////
	Текст3 = "ВЫБРАТЬ
	               |	ТаблицаИнтервалов.Интервал,
	               |	ТаблицаИнтервалов.ЗначениеИнтервала
	               |ПОМЕСТИТЬ ВТ_ТаблицаИтервалов
	               |ИЗ
	               |	&ТаблицаИнтервалов КАК ТаблицаИнтервалов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиИОбороты.КодСчета,
	               |	ОстаткиИОбороты.Сумма,
	               |	ОстаткиИОбороты.СуммаОстатокДт,
	               |	ОстаткиИОбороты.СуммаОстатокКт,
	               |	ОстаткиИОбороты.ТипУчредителя,
	               |	ОстаткиИОбороты.ВидНалога,
	               |	ОстаткиИОбороты.ВидКонтрагента,
	               |	ЕСТЬNULL(МЕСЯЦ(ОстаткиИОбороты.Период), 0) КАК Период,
	               |	ВТ_ТаблицаИтервалов.ЗначениеИнтервала КАК ЗначениеИнтервала,
	               |	ОстаткиИОбороты.Предприятия
	               |ИЗ
	               |	ВТ_ТаблицаИтервалов КАК ВТ_ТаблицаИтервалов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			БюджетныйОстаткиИОбороты.Счет.Код КАК КодСчета,
	               |			СУММА(БюджетныйОстаткиИОбороты.СуммаКонечныйОстаток) КАК Сумма,
	               |			СУММА(БюджетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаОстатокДт,
	               |			СУММА(БюджетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаОстатокКт,
	               |			БюджетныйОстаткиИОбороты.Субконто1.ТипУчредителя КАК ТипУчредителя,
	               |			БюджетныйОстаткиИОбороты.Субконто1.Ссылка КАК ВидНалога,
	               |			БюджетныйОстаткиИОбороты.Субконто1.Д_ВидКонтрагента КАК ВидКонтрагента,
	               |			БюджетныйОстаткиИОбороты.Период КАК Период,
	               |			ВЫБОР
	               |				КОГДА &Сводный = ИСТИНА
	               |					ТОГДА ""Сводный""
	               |				ИНАЧЕ БюджетныйОстаткиИОбороты.Предприятия
	               |			КОНЕЦ КАК Предприятия
	               |		ИЗ
	               |			РегистрБухгалтерии.Бюджетный.ОстаткиИОбороты(
	               |					&ДатаНач,
	               |					&ДатаКон,
	               |					Месяц,
	               |					,
	               |					,
	               |					,
	               |					ВЫБОР
	               |							КОГДА &Сценарий2 = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ СценарийПлана = &Сценарий2
	               |						КОНЕЦ
	               |						И Предприятия В ИЕРАРХИИ (&Предприятия)) КАК БюджетныйОстаткиИОбороты
	               |		ГДЕ
	               |			БюджетныйОстаткиИОбороты.СуммаКонечныйОстаток <> 0
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			БюджетныйОстаткиИОбороты.Счет.Код,
	               |			БюджетныйОстаткиИОбороты.Субконто1.ТипУчредителя,
	               |			БюджетныйОстаткиИОбороты.Субконто1.Ссылка,
	               |			БюджетныйОстаткиИОбороты.Субконто1.Д_ВидКонтрагента,
	               |			БюджетныйОстаткиИОбороты.Период,
	               |			ВЫБОР
	               |				КОГДА &Сводный = ИСТИНА
	               |					ТОГДА ""Сводный""
	               |				ИНАЧЕ БюджетныйОстаткиИОбороты.Предприятия
	               |			КОНЕЦ) КАК ОстаткиИОбороты
	               |		ПО (МЕСЯЦ(ОстаткиИОбороты.Период) = ВТ_ТаблицаИтервалов.Интервал)";
	
	/////////////////////////////////////////////////////////////////////////////////////////			   
				   	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_СтатьиОборотки.Код
	               |ИЗ
	               |	Справочник.Д_СтатьиОборотки КАК Д_СтатьиОборотки
	               |ГДЕ
	               |	Д_СтатьиОборотки.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.Д_СтатьиОборотки.СтатьиОборотногоБаланса))
	               |	И Д_СтатьиОборотки.Ссылка <> ЗНАЧЕНИЕ(Справочник.Д_СтатьиОборотки.СтатьиОборотногоБаланса)
	               |	И Д_СтатьиОборотки.ПометкаУдаления = ЛОЖЬ";
	

	РезультатОБ = Запрос.Выполнить();

	
	ОбластьДанные = Макет.ПолучитьОбласть("ДанныеСтроки");
		
	Для Каждого Предприятия Из ПредприятияМассив Цикл
				
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Предприятия = Предприятия;
		Шапка.Параметры.Дата1 = ПараметрКоманды.Период.ДатаОкончания;
		ТабДок.Вывести(Шапка);
		
		//Выводим Активы
		ЗаголовокАктив 		= Макет.ПолучитьОбласть("Заголовок|Актив");
		ТабДок.Вывести(ЗаголовокАктив);
		
		МассивКварталов = Новый Массив;
		МассивКварталов.Добавить("1-й квартал");
		МассивКварталов.Добавить("2-й квартал");
		МассивКварталов.Добавить("3-й квартал");
		МассивКварталов.Добавить("4-й квартал");
		
		МассивМесяцов = Новый Массив;
		МассивМесяцов.Добавить("Январь");
		МассивМесяцов.Добавить("Февраль");
		МассивМесяцов.Добавить("Март");
		МассивМесяцов.Добавить("Апрель");
		МассивМесяцов.Добавить("Май");
		МассивМесяцов.Добавить("Июнь");
		МассивМесяцов.Добавить("Июль");
		МассивМесяцов.Добавить("Август");
		МассивМесяцов.Добавить("Сентябрь");
		МассивМесяцов.Добавить("Октябрь");
		МассивМесяцов.Добавить("Ноябрь");
		МассивМесяцов.Добавить("Декабрь");
		
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно Тогда
			
			НомерМесяца = Месяц(ПараметрКоманды.Период.ДатаНачала);
			Для Сч = 1 По ВсегоПериодов Цикл
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ЗаголовокЛимитАктив = Макет.ПолучитьОбласть("Заголовок|ЛимитАктив");
					ЗаголовокЛимитАктив.Параметры.ЛимитМесяц = "Лимит 
					|" + МассивМесяцов[НомерМесяца-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокЛимитАктив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ЗаголовокФактАктив = Макет.ПолучитьОбласть("Заголовок|ФактАктив");
					ЗаголовокФактАктив.Параметры.ФактМесяц = "Факт 
					|" + МассивМесяцов[НомерМесяца-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокФактАктив);
				КонецЕсли;
				НомерМесяца = НомерМесяца + 1;
			КонецЦикла;	
			
		ИначеЕсли ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			
			НомерМесяца = Месяц(ПараметрКоманды.Период.ДатаНачала);
			Если НомерМесяца >=1 И НомерМесяца<=3 Тогда
				НомерКвартала = 1;
			ИначеЕсли НомерМесяца >=4 И НомерМесяца<=6 Тогда
				НомерКвартала = 2;
	        ИначеЕсли НомерМесяца >=7 И НомерМесяца<=9 Тогда
				НомерКвартала = 3;
            ИначеЕсли НомерМесяца >=10 И НомерМесяца<=12 Тогда
				НомерКвартала = 4;
            КонецЕсли;
			Для Сч = 1 По ВсегоПериодов Цикл
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ЗаголовокЛимитАктив = Макет.ПолучитьОбласть("Заголовок|ЛимитАктив");
					ЗаголовокЛимитАктив.Параметры.ЛимитМесяц = "Лимит 
					|" + МассивКварталов[НомерКвартала-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокЛимитАктив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ЗаголовокФактАктив = Макет.ПолучитьОбласть("Заголовок|ФактАктив");
					ЗаголовокФактАктив.Параметры.ФактМесяц = "Факт 
					|" + МассивКварталов[НомерКвартала-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокФактАктив);
				КонецЕсли;
				НомерКвартала = НомерКвартала + 1;
			КонецЦикла;
			
		Иначе 
			//актив
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ЗаголовокЛимитАктив = Макет.ПолучитьОбласть("Заголовок|ЛимитАктив");
				ЗаголовокЛимитАктив.Параметры.ЛимитМесяц = "Лимит";
				ТабДок.Присоединить(ЗаголовокЛимитАктив);
			КонецЕсли;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ЗаголовокФактАктив = Макет.ПолучитьОбласть("Заголовок|ФактАктив");
				ЗаголовокФактАктив.Параметры.ФактМесяц = "Факт";
				ТабДок.Присоединить(ЗаголовокФактАктив);
			КонецЕсли;
			//пассив
			ЗаголовокПассив = Макет.ПолучитьОбласть("Заголовок|Пассив");
			ТабДок.Присоединить(ЗаголовокПассив);
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ЗаголовокЛимитПассив = Макет.ПолучитьОбласть("Заголовок|ЛимитПассив");
				ЗаголовокЛимитПассив.Параметры.ЛимитМесяц = "Лимит";
				ТабДок.Присоединить(ЗаголовокЛимитПассив);
			КонецЕсли;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ЗаголовокФактПассив = Макет.ПолучитьОбласть("Заголовок|ФактПассив");
				ЗаголовокФактПассив.Параметры.ФактМесяц = "Факт";
				ТабДок.Присоединить(ЗаголовокФактПассив);
			КонецЕсли;
			
		КонецЕсли;
		
		ТаблицаАктив 		= Макет.ПолучитьОбласть("Таблица|Актив");
		ТабДок.Вывести(ТаблицаАктив);
		
		ТалицаРассчитанныхЗначенийПоинтервально = Новый ТаблицаЗначений;
		ТалицаРассчитанныхЗначенийПоинтервально.Колонки.Добавить("Интервал");
		ТалицаРассчитанныхЗначенийПоинтервально.Колонки.Добавить("ТаблицаЗначений");
		ТалицаРассчитанныхЗначенийПоинтервально.Колонки.Добавить("ТаблицаЗначенийЛим");
		
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно ИЛИ ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			ТабДок.НачатьАвтогруппировкуКолонок();
			ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаНачала), КонецКвартала(ПараметрКоманды.Период.ДатаНачала));
			ДатаНачалаИнтервала = ПараметрКоманды.Период.ДатаНачала;
			Пока ДатаКонцаИнтервала <= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаОкончания), КонецКвартала(ПараметрКоманды.Период.ДатаОкончания)) Цикл
				ДатаНач = ДатаНачалаИнтервала;
				Если ДатаКонцаИнтервала > ПараметрКоманды.Период.ДатаОкончания Тогда
					ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
				Иначе 	
					ДатаКон = ДатаКонцаИнтервала;
				КонецЕсли;	
				
				ТЗ 	= Новый ТаблицаЗначений;
				ТЗ2 = Новый ТаблицаЗначений;
				
				РассчетЗначенийПоинтервально(ДатаНач, ДатаКон, ПараметрКоманды, Предприятия, РезультатОБ, Макет, ТабДок, Регистр1, Регистр2, ТЗ, ТЗ2);
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ТаблицаЛимитАктив 	= Макет.ПолучитьОбласть("Таблица|ЛимитАктив");
					
					// расшифровка
					ТекСценарий = ПараметрКоманды.Сценарий1; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитАктив, "Лимит", ТекСценарий, ДатаНач, ДатаКон);

					Для Каждого ТекСтрока Из ТЗ Цикл
						ТаблицаЛимитАктив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;
					ТабДок.Присоединить(ТаблицаЛимитАктив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ТаблицаФактАктив = Макет.ПолучитьОбласть("Таблица|ФактАктив");
					
					// расшифровка
					ТекСценарий = ПараметрКоманды.Сценарий2; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактАктив, "Актив", ТекСценарий, ДатаНач, ДатаКон);
					
					Для каждого ТекСтрока Из ТЗ2 Цикл
						ТаблицаФактАктив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;
					ТабДок.Присоединить(ТаблицаФактАктив);
				КонецЕсли;
				
				
				СтрокаРассчитанныхЗначенийПоинтервально 					= ТалицаРассчитанныхЗначенийПоинтервально.Добавить();
				СтрокаРассчитанныхЗначенийПоинтервально.Интервал 			= Месяц(ДатаКон);
				СтрокаРассчитанныхЗначенийПоинтервально.ТаблицаЗначений  	= ТЗ;
				СтрокаРассчитанныхЗначенийПоинтервально.ТаблицаЗначенийЛим 	= ТЗ2;
				
				//Увеличим интервал на месяц или квартал
				ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, ДобавитьМесяц(ДатаКонцаИнтервала, 1), ДобавитьМесяц(ДатаКонцаИнтервала, 3));
				ДатаКонцаИнтервала  = КонецМесяца(ДатаКонцаИнтервала);
				ДатаНачалаИнтервала = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, НачалоМесяца(ДатаКонцаИнтервала), НачалоКвартала(ДатаКонцаИнтервала));;
			КонецЦикла;
			ТабДок.ЗакончитьАвтогруппировкуКолонок();
		Иначе
			//актив
			ДатаНач = ПараметрКоманды.Период.ДатаНачала;
			ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
			
			ТЗ 	= Новый ТаблицаЗначений;
			ТЗ2 = Новый ТаблицаЗначений;
			
			РассчетЗначенийПоинтервально(ДатаНач, ДатаКон, ПараметрКоманды, Предприятия, РезультатОБ, Макет, ТабДок, Регистр1, Регистр2, ТЗ, ТЗ2);
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ТаблицаЛимитАктив 	= Макет.ПолучитьОбласть("Таблица|ЛимитАктив");	
				
				// расшифровка
				ТекСценарий = ПараметрКоманды.Сценарий1; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитАктив, "Лимит", ТекСценарий, ДатаНач, ДатаКон);
				
				Для Каждого ТекСтрока Из ТЗ Цикл
					ТаблицаЛимитАктив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;
				ТабДок.Присоединить(ТаблицаЛимитАктив);
			КонецЕсли;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ТаблицаФактАктив = Макет.ПолучитьОбласть("Таблица|ФактАктив");
				
				// расшифровка
				ТекСценарий = ПараметрКоманды.Сценарий2; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактАктив, "Актив", ТекСценарий, ДатаНач, ДатаКон);
				
				Для каждого ТекСтрока Из ТЗ2 Цикл
					ТаблицаФактАктив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;
				ТабДок.Присоединить(ТаблицаФактАктив);
			КонецЕсли;
			
			
			СтрокаРассчитанныхЗначенийПоинтервально 					= ТалицаРассчитанныхЗначенийПоинтервально.Добавить();
			СтрокаРассчитанныхЗначенийПоинтервально.Интервал 			= Месяц(ДатаКон);
			СтрокаРассчитанныхЗначенийПоинтервально.ТаблицаЗначений  	= ТЗ;
			СтрокаРассчитанныхЗначенийПоинтервально.ТаблицаЗначенийЛим 	= ТЗ2;
			//пассив	
			ТаблицаПассив = Макет.ПолучитьОбласть("Таблица|Пассив");
			ТабДок.Присоединить(ТаблицаПассив);
			СтрокаРассчитанныхЗначений = ТалицаРассчитанныхЗначенийПоинтервально.Найти(Месяц(ДатаКон), "Интервал");
			ТЗ 	= СтрокаРассчитанныхЗначений.ТаблицаЗначений;
			ТЗ2 = СтрокаРассчитанныхЗначений.ТаблицаЗначенийЛим;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ТаблицаЛимитПассив 	= Макет.ПолучитьОбласть("Таблица|ЛимитПассив");	
				
				// расшифровка
				ТекСценарий = ПараметрКоманды.Сценарий1; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитПассив, "Лимит", ТекСценарий, ДатаНач, ДатаКон);
				
				Для Каждого ТекСтрока Из ТЗ Цикл
					ТаблицаЛимитПассив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;
				ТабДок.Присоединить(ТаблицаЛимитПассив);
			КонецЕсли;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ТаблицаФактПассив = Макет.ПолучитьОбласть("Таблица|ФактПассив");
				
				// расшифровка
				ТекСценарий = ПараметрКоманды.Сценарий1; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактПассив, "Пассив", ТекСценарий, ДатаНач, ДатаКон);
				
				Для каждого ТекСтрока Из ТЗ2 Цикл
					ТаблицаФактПассив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;
				ТабДок.Присоединить(ТаблицаФактПассив);
			КонецЕсли;
			
		КонецЕсли;
		
		//Выводим Пассивы
		ЗаголовокПассив = Макет.ПолучитьОбласть("Заголовок|Пассив");
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно ИЛИ ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			ТабДок.Вывести(ЗаголовокПассив);
		КонецЕсли;	
		
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно Тогда
			
			НомерМесяца = Месяц(ПараметрКоманды.Период.ДатаНачала);
			Для Сч = 1 По ВсегоПериодов Цикл
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ЗаголовокЛимитПассив = Макет.ПолучитьОбласть("Заголовок|ЛимитПассив");
					ЗаголовокЛимитПассив.Параметры.ЛимитМесяц = "Лимит 
					|" + МассивМесяцов[НомерМесяца-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокЛимитПассив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ЗаголовокФактПассив = Макет.ПолучитьОбласть("Заголовок|ФактПассив");
					ЗаголовокФактПассив.Параметры.ФактМесяц = "Факт 
					|" + МассивМесяцов[НомерМесяца-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокФактПассив);
				КонецЕсли;
				НомерМесяца = НомерМесяца + 1;
			КонецЦикла;	
			
		ИначеЕсли ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			
			НомерМесяца = Месяц(ПараметрКоманды.Период.ДатаНачала);
			Если НомерМесяца >=1 И НомерМесяца<=3 Тогда
				НомерКвартала = 1;
			ИначеЕсли НомерМесяца >=4 И НомерМесяца<=6 Тогда
				НомерКвартала = 2;
	        ИначеЕсли НомерМесяца >=7 И НомерМесяца<=9 Тогда
				НомерКвартала = 3;
            ИначеЕсли НомерМесяца >=10 И НомерМесяца<=12 Тогда
				НомерКвартала = 4;
            КонецЕсли;
			Для Сч = 1 По ВсегоПериодов Цикл
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ЗаголовокЛимитПассив = Макет.ПолучитьОбласть("Заголовок|ЛимитПассив");
					ЗаголовокЛимитПассив.Параметры.ЛимитМесяц = "Лимит 
					|" + МассивКварталов[НомерКвартала-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокЛимитПассив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ЗаголовокФактПассив = Макет.ПолучитьОбласть("Заголовок|ФактПассив");
					ЗаголовокФактПассив.Параметры.ФактМесяц = "Факт 
					|" + МассивКварталов[НомерКвартала-1] + " " + Год(ПараметрКоманды.Период.ДатаНачала);
					ТабДок.Присоединить(ЗаголовокФактПассив);
				КонецЕсли;
				НомерКвартала = НомерКвартала + 1;
			КонецЦикла;	
			
		КонецЕсли;
		
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно ИЛИ ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			ТаблицаПассив = Макет.ПолучитьОбласть("Таблица|Пассив");
			ТабДок.Вывести(ТаблицаПассив);
		КонецЕсли;
						
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно ИЛИ ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаНачала), КонецКвартала(ПараметрКоманды.Период.ДатаНачала));
			ДатаНачалаИнтервала = ПараметрКоманды.Период.ДатаНачала;
			Пока ДатаКонцаИнтервала <= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаОкончания), КонецКвартала(ПараметрКоманды.Период.ДатаОкончания)) Цикл
				ДатаНач = ДатаНачалаИнтервала;
				Если ДатаКонцаИнтервала > ПараметрКоманды.Период.ДатаОкончания Тогда
					ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
				Иначе 	
					ДатаКон = ДатаКонцаИнтервала;
				КонецЕсли;	
				
				СтрокаРассчитанныхЗначений = ТалицаРассчитанныхЗначенийПоинтервально.Найти(Месяц(ДатаКон), "Интервал");
				ТЗ 	= СтрокаРассчитанныхЗначений.ТаблицаЗначений;
				ТЗ2 = СтрокаРассчитанныхЗначений.ТаблицаЗначенийЛим;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ТаблицаЛимитПассив 	= Макет.ПолучитьОбласть("Таблица|ЛимитПассив");
					
					// расшифровка
					ТекСценарий = ПараметрКоманды.Сценарий1; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитПассив, "Лимит", ТекСценарий, ДатаНач, ДатаКон);
					
					Для Каждого ТекСтрока Из ТЗ Цикл
						ТаблицаЛимитПассив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;
					ТабДок.Присоединить(ТаблицаЛимитПассив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ТаблицаФактПассив = Макет.ПолучитьОбласть("Таблица|ФактПассив");
					
					// расшифровка
					ТекСценарий = ПараметрКоманды.Сценарий2; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактПассив, "Пассив", ТекСценарий, ДатаНач, ДатаКон);
										
					Для каждого ТекСтрока Из ТЗ2 Цикл
						ТаблицаФактПассив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;
					ТабДок.Присоединить(ТаблицаФактПассив);
				КонецЕсли;
				
				//Увеличим интервал на месяц или квартал
				ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, ДобавитьМесяц(ДатаКонцаИнтервала, 1), ДобавитьМесяц(ДатаКонцаИнтервала, 3));
				ДатаКонцаИнтервала  = КонецМесяца(ДатаКонцаИнтервала);
				ДатаНачалаИнтервала = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, НачалоМесяца(ДатаКонцаИнтервала), НачалоКвартала(ДатаКонцаИнтервала));;
			КонецЦикла;

		КонецЕсли;
		
		//Выводим Чистые активы
		ТаблицаПассив = Макет.ПолучитьОбласть("ЧистыеАктивы|Актив");
		ТабДок.Вывести(ТаблицаПассив);
		
		Если ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно ИЛИ ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Поквартально Тогда
			ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаНачала), КонецКвартала(ПараметрКоманды.Период.ДатаНачала));
			ДатаНачалаИнтервала = ПараметрКоманды.Период.ДатаНачала;
			Пока ДатаКонцаИнтервала <= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, КонецМесяца(ПараметрКоманды.Период.ДатаОкончания), КонецКвартала(ПараметрКоманды.Период.ДатаОкончания)) Цикл
				ДатаНач = ДатаНачалаИнтервала;
				Если ДатаКонцаИнтервала > ПараметрКоманды.Период.ДатаОкончания Тогда
					ДатаКон = ПараметрКоманды.Период.ДатаОкончания;
				Иначе 	
					ДатаКон = ДатаКонцаИнтервала;
				КонецЕсли;	
				
				СтрокаРассчитанныхЗначений = ТалицаРассчитанныхЗначенийПоинтервально.Найти(Месяц(ДатаКон), "Интервал");
				ТЗ 	= СтрокаРассчитанныхЗначений.ТаблицаЗначений;
				ТЗ2 = СтрокаРассчитанныхЗначений.ТаблицаЗначенийЛим;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
					ТаблицаЛимитПассив 	= Макет.ПолучитьОбласть("ЧистыеАктивы|ЛимитПассив");
					
					// расшифровка	
					ТекСценарий = ПараметрКоманды.Сценарий1; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитПассив, "Ч", ТекСценарий, ДатаНач, ДатаКон);
					
					Для Каждого ТекСтрока Из ТЗ2 Цикл
						ТаблицаЛимитПассив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;	
					ТабДок.Присоединить(ТаблицаЛимитПассив);
				КонецЕсли;
				
				Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
					ТаблицаФактПассив = Макет.ПолучитьОбласть("ЧистыеАктивы|ФактПассив");
					
					// расшифровка	
					ТекСценарий = ПараметрКоманды.Сценарий2; 
					ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактПассив, "Ч", ТекСценарий, ДатаНач, ДатаКон);
					
					Для Каждого ТекСтрока Из ТЗ2 Цикл
						ТаблицаФактПассив.Параметры.Заполнить(ТекСтрока);
					КонецЦикла;
					ТабДок.Присоединить(ТаблицаФактПассив);
				КонецЕсли;
				
				//Увеличим интервал на месяц или квартал
				ДатаКонцаИнтервала 	= ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, ДобавитьМесяц(ДатаКонцаИнтервала, 1), ДобавитьМесяц(ДатаКонцаИнтервала, 3));
				ДатаКонцаИнтервала  = КонецМесяца(ДатаКонцаИнтервала);
				ДатаНачалаИнтервала = ?(ПараметрКоманды.Интервал = Перечисления.Д_Интервал.Помесячно, НачалоМесяца(ДатаКонцаИнтервала), НачалоКвартала(ДатаКонцаИнтервала));;
			КонецЦикла;
		Иначе
			СтрокаРассчитанныхЗначений = ТалицаРассчитанныхЗначенийПоинтервально.Найти(Месяц(ДатаКон), "Интервал");
			ТЗ 	= СтрокаРассчитанныхЗначений.ТаблицаЗначений;
			ТЗ2 = СтрокаРассчитанныхЗначений.ТаблицаЗначенийЛим;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ТаблицаЛимитАктив 	= Макет.ПолучитьОбласть("ЧистыеАктивы|ЛимитАктив");
				ТабДок.Присоединить(ТаблицаЛимитАктив);
			КонецЕсли;	
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ТаблицаФактАктив 	= Макет.ПолучитьОбласть("ЧистыеАктивы|ФактАктив");
				ТабДок.Присоединить(ТаблицаФактАктив);
			КонецЕсли;	
			
			ТаблицаПассив 	= Макет.ПолучитьОбласть("ЧистыеАктивы|Пассив");
			ТабДок.Присоединить(ТаблицаПассив);
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Макет" Тогда
				ТаблицаЛимитПассив 	= Макет.ПолучитьОбласть("ЧистыеАктивы|ЛимитПассив");
				
				// расшифровка	
				ТекСценарий = ПараметрКоманды.Сценарий1; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаЛимитПассив, "Ч", ТекСценарий, ДатаНач, ДатаКон);
				
				Для Каждого ТекСтрока Из ТЗ2 Цикл
					ТаблицаЛимитПассив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;	
				ТабДок.Присоединить(ТаблицаЛимитПассив);
			КонецЕсли;
			
			Если ПланМакета = "МакетПланФакт" Или ПланМакета = "Факт" Или ПланМакета = "ФактСХ" Тогда
				ТаблицаФактПассив = Макет.ПолучитьОбласть("ЧистыеАктивы|ФактПассив");
				
				// расшифровка	
				ТекСценарий = ПараметрКоманды.Сценарий2; 
				ЗаполнитьПараметрыРасшифровкиТаблицы(ТаблицаФактПассив, "Ч", ТекСценарий, ДатаНач, ДатаКон);
				
				Для Каждого ТекСтрока Из ТЗ2 Цикл
					ТаблицаФактПассив.Параметры.Заполнить(ТекСтрока);
				КонецЦикла;
				ТабДок.Присоединить(ТаблицаФактПассив);
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла; 
	
КонецПроцедуры

Процедура РассчетЗначенийПоинтервально(ДатаНач, ДатаКон, ПараметрКоманды, Предприятия, РезультатОБ, Макет, ТабДок, Регистр1, Регистр2, ТЗ, ТЗ2)
	
	//считаем лимиты
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БюджетныйОбороты.Субконто1.Код КАК КодСчета,
	|	ВЫБОР
	|		КОГДА (НЕ БюджетныйОбороты.СуммаОборотДт = 0)
	|			ТОГДА БюджетныйОбороты.СуммаОборот
	|		ИНАЧЕ -БюджетныйОбороты.СуммаОборот
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &Сводный = ИСТИНА
	|			ТОГДА ""Сводный""
	|		ИНАЧЕ БюджетныйОбороты.Предприятия
	|	КОНЕЦ КАК Предприятия
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			Месяц,
	|			Счет = &Счет1,
	|			,
	|			СценарийПлана = &Сценарий1
	|				И Предприятия = &Предприятия,
	|			,
	|			) КАК БюджетныйОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	БюджетныйОбороты.Субконто1.Код";
	Запрос.УстановитьПараметр("Предприятия", Предприятия);
	Запрос.УстановитьПараметр("Сценарий1", ПараметрКоманды.Сценарий1);
	Запрос.УстановитьПараметр("Сценарий2", ПараметрКоманды.Сценарий2);
	Запрос.УстановитьПараметр("Дата1", ДатаНач);
	Запрос.УстановитьПараметр("Дата2", ДатаКон);
	Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.СчетЛИМ());
	Запрос.УстановитьПараметр("Сводный", ПараметрКоманды.Сводный);
	
	Результат = Запрос.Выполнить();
	
	//Рассчитываем лимит
	СтруктураПоиска = Новый Структура("Предприятия", Предприятия);
	Выборка = Результат.Выбрать();
	
	ТЗ.Добавить();
	
	//добавляем колонки с нулевыми значениями
	ВыборкаОБ = РезультатОБ.Выбрать();
	Пока ВыборкаОБ.Следующий() Цикл
		ИмяКолонки = СокрЛП(Строка(ВыборкаОБ.Код));
		ТЗ.Колонки.Добавить(ИмяКолонки);
		ТЗ[0][ИмяКолонки] = 0;
	КонецЦикла;
	
	//заполняем значения
	Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
		ИмяКолонки = СокрЛП(Строка(Выборка.КодСчета));
		ТЗ[0][ИмяКолонки] = Выборка.Сумма;		
	КонецЦикла;
	
	РасчтитатьГруппы(ТЗ, Предприятия, "ОБ");
		
	//считаем остатки по счетам
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БюджетныйОстатки.Счет.Код КАК КодСчета,
	|	СУММА(БюджетныйОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(БюджетныйОстатки.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(БюджетныйОстатки.СуммаОстатокКт) КАК СуммаОстатокКт,
	|	БюджетныйОстатки.Субконто1.ТипУчредителя КАК ТипУчредителя,
	|	БюджетныйОстатки.Субконто1.Ссылка КАК ВидНалога,
	|	БюджетныйОстатки.Субконто1.Д_ВидКонтрагента КАК ВидКонтрагента,
	|	ВЫБОР
	|		КОГДА &Сводный = ИСТИНА
	|			ТОГДА ""Сводный""
	|		ИНАЧЕ БюджетныйОстатки.Предприятия
	|	КОНЕЦ КАК Предприятия
	|ИЗ
	|	РегистрБухгалтерии." + ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), Регистр1, Регистр2) + ".Остатки(
	|			&ДатаКон,
	|			,
	|			,
	|			ВЫБОР
	|					КОГДА &Сценарий2 = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ СценарийПлана = &Сценарий2
	|				КОНЕЦ
	|				И Предприятия = Предприятия) КАК БюджетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	БюджетныйОстатки.Счет.Код,
	|	БюджетныйОстатки.Субконто1.ТипУчредителя,
	|	БюджетныйОстатки.Субконто1.Ссылка,
	|	БюджетныйОстатки.Субконто1.Д_ВидКонтрагента,
	|	ВЫБОР
	|		КОГДА &Сводный = ИСТИНА
	|			ТОГДА ""Сводный""
	|		ИНАЧЕ БюджетныйОстатки.Предприятия
	|	КОНЕЦ";
	
	МоментКонца = Новый Граница(ДатаКон, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Предприятия", Предприятия);
	Запрос.УстановитьПараметр("Сценарий2", ?(ПустаяСтрока(ПараметрКоманды.Сценарий2), ПараметрКоманды.Сценарий1, ПараметрКоманды.Сценарий2));
	Запрос.УстановитьПараметр("ДатаКон", МоментКонца);
	Запрос.УстановитьПараметр("Сводный", ПараметрКоманды.Сводный);
		
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) ИЛИ ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.Факт Тогда
		РезультатФакт = Запрос.Выполнить();
	Иначе
		РезультатФакт = Неопределено;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ПараметрКоманды.Сценарий2) ИЛИ ПараметрКоманды.Сценарий1 = Справочники.СценарииПланирования.Факт Тогда
		ТЗ2.Добавить();
		//01+08
		ИмяКолонки = "фОб161";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "01") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "08.01") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "08.02");
		
		//10.1
		ИмяКолонки = "фОб166";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.01");
		
		//60.1Дт
		ИмяКолонки = "фОб167";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.01", "Дт");
		
		//10.2 + 60.2Дт
		ИмяКолонки = "фОб169";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.02") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.02", "Дт");
		
		//10.3 + 10.4 + 10.5
		ИмяКолонки = "фОб175";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.03") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.04")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.05") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.04", "Дт");
		
		//10.7
		ИмяКолонки = "фОб306";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.07");
		
		//10.6
		ИмяКолонки = "фОб176";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "10.06") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.05", "Дт");
		
		//11
		ИмяКолонки = "фОб1018";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ?(ПараметрКоманды.ВидСХ, ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "11"), 0);
		
		//20
		ИмяКолонки = "фОб181";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "20");
		
		//43
		ИмяКолонки = "фОб191";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "43");
		
		//41
		ИмяКолонки = "фОб201";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "41") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "41.01");
		
		//50+51
		ИмяКолонки = "фОб221";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "50.01")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "50.02")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.01")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.02")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.03")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.04")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.05")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51.06")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "50")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "51")
		//+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "58") // закомментированно 08.10.13, обращение №1518
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "71.04");
		
		// 58 финансовые вложения обращение №2481
		ИмяКолонки = "фОб425";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "58") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "58.01") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "58.02");
		
		//62Дт
		ИмяКолонки = "фОБ241";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.01", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.02", "Дт") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.03", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.04", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.10", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.20", "Дт");
		
		//60.3Дт + 76Дт + 71 + 58 (обращение №1518) - 58 (обращение №2481) + 70Дт (обращение №2687)
		ИмяКолонки = "фОб307";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.03", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.01", "Дт") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.02", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.03", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.04", "Дт")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.05", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.06", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.10", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "71.01") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "71.02") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "71.03") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.06", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "70", "Дт");
		
		//68Дт
		ИмяКолонки = "фОб263";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "68", "Дт");
		
		//97
		ИмяКолонки = "фОб270";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "97");
		
		//79Дт
		ИмяКолонки = "фОБ305";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.01", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.02", "Дт")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.03", "Дт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.10", "Дт");
		
		//83 + 75.1
		ИмяКолонки = "фОб1014";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01") - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02") 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01");
		
		Партнер1 = Справочники.Д_СтатьиОборотки.Партнер1;
		Партнер2 = Справочники.Д_СтатьиОборотки.Партнер2;
		Партнер3 = Справочники.Д_СтатьиОборотки.Партнер3;
		Z = Справочники.Д_СтатьиОборотки.Z;
		КБР = Справочники.Д_СтатьиОборотки.КБР;
		Врн = Справочники.Д_СтатьиОборотки.Воронеж;
		Дядя = Справочники.Д_СтатьиОборотки.НайтиПоНаименованию("Дядя", Истина);
		Всего = Справочники.Д_СтатьиОборотки.НайтиПоНаименованию("ВСЕГО", Истина);
		// новый учр
		Р = Справочники.Д_СтатьиОборотки.Р;
		Учр_Ко = Справочники.Д_СтатьиОборотки.Ко;
		Учр_Ч = Справочники.Д_СтатьиОборотки.Ч;
		НП_Резерв = Справочники.Д_СтатьиОборотки.Резерв;
		
		//83 + 75.1 Врн
		ИмяКолонки = "фОб10141";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Врн) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Врн) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Врн);
		
		//83 + 75.1 Партн
		ИмяКолонки = "фОб10142";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Партнер1) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Партнер1) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Партнер1) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Партнер2) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Партнер2) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Партнер2) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Партнер3) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Партнер3) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Партнер3);
		
		//83 + 75.1 З
		ИмяКолонки = "фОб10143";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Z) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Z) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Z);
		
		//83 + 75.1 КБР
		ИмяКолонки = "фОб10144";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", КБР) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", КБР) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", КБР);
		
		//83 + 75.1 Дядя
		ИмяКолонки = "фОб10145";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Дядя) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Дядя) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Дядя);
		
		//новый учр 83 + 75.1 Р
		ИмяКолонки = "фОб10147";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Р) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Р) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Р);
		
		//83 + 75.1 Ко
		ИмяКолонки = "фОб10148";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Учр_Ко) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Учр_Ко) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Учр_Ко);
		
		//83 + 75.1 Ч
		ИмяКолонки = "фОб10149";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Учр_Ч) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Учр_Ч) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Учр_Ч);
		
		//83 + 75.1 Всего
		ИмяКолонки = "фОб10146";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.01",, "ТипУчредителя", Всего) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "83.02",, "ТипУчредителя", Всего) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.01",, "ТипУчредителя", Всего);
		
		//82
		ИмяКолонки = "фОб420";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "82");
		
		////75.2 + 75.3 Итого
		//ИмяКолонки = "фОб1006";
		//ТЗ2.Колонки.Добавить(ИмяКолонки);
		//ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02") - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03");
		
		//75.2 + 75.3 Врн
		ИмяКолонки = "фОб211";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Врн) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Врн);
		
		//партнер
		ИмяКолонки = "фОБ212";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Партнер1)- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Партнер2) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Партнер3) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Партнер1)- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Партнер2) 
		- ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Партнер3);
		//Z
		ИмяКолонки = "фОб215";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Z) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Z);
		
		//КБР
		ИмяКолонки = "фОб216";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", КБР) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", КБР);
		
		//Дядя
		ИмяКолонки = "фОб421";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Дядя) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Дядя);
		
		// новый учр Р
		ИмяКолонки = "фОб217";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Р) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Р);
		
		// Ко
		ИмяКолонки = "фОб429";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Учр_Ко) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Учр_Ко);
		
		// Ч
		ИмяКолонки = "фОб430";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Учр_Ч) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Учр_Ч);
		
		//Всего
		ИмяКолонки = "фОб422";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.02",, "ТипУчредителя", Всего) - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.03",, "ТипУчредителя", Всего);
		
		//нераспределенная прибыль
		ИмяКолонки = "фОб428";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "75.10",, "ТипУчредителя", НП_Резерв);
		
		//55.1 + 55.2 + миниказна
		ИмяКолонки = "фОб350";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "55") - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "56");
		
		//67.1 + 67.2 + 66.1 + 66.2
		ИмяКолонки = "фОб360";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "67.01") - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "67.02")- 
		ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "66.01") - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "66.02");
		
		//68Кт
		//Акциз
		ИмяКолонки = "фОб380";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		//Акциз = Справочники.НалогиИСборы.Акциз;
		//ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "68", "Кт", "ВидНалога", Акциз);
		ТЗ2[0][ИмяКолонки] = 0;
		//НДС
		ИмяКолонки = "фОб381";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		//НДС = Справочники.НалогиИСборы.НДС;
		//ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "68", "Кт", "ВидНалога", НДС);
		ТЗ2[0][ИмяКолонки] = 0;
		//прочие налоги
		ИмяКолонки = "фОб382";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "68", "Кт") - ТЗ2[0]["фОб380"] - ТЗ2[0]["фОб381"];
		
		
		
		//60.3Кт + 76.1Кт + 76.2Кт + 76.3Кт + 76.5Кт + 76.6Кт + 60.1Кт + 60.2Кт + 60.4Кт + 60.5Кт + 60.6Кт
		ИмяКолонки = "фОБ394";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.01", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.02", "Кт");
		ИмяКолонки = "фОБ396";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.01", "Кт");
		ИмяКолонки = "фОБ397";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.01", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.02", "Кт")
		+  ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.03", "Кт") +  ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.04", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.10", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "62.20", "Кт");
		ИмяКолонки = "фОБ398";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.03", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.03", "Кт")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.05", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.06", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.02", "Кт") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.04", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.05", "Кт") 
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "60.06", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.04", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "76.10", "Кт");
		
		// зарплата отдельно, обращение №2687
		ИмяКолонки = "фОБ424";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "70", "Кт");
		
		//79Кт
		ИмяКолонки = "фОб400";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.01", "Кт") + ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.02", "Кт")
		+ ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.03", "Кт") +  ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "79.10", "Кт");
		
		//98
		ИмяКолонки = "фОб410";
		ТЗ2.Колонки.Добавить(ИмяКолонки);
		ТЗ2[0][ИмяКолонки] = - ПолучитьОстатокПоСчету(РезультатФакт, Предприятия, "98");
		
		РасчтитатьГруппы(ТЗ2, Предприятия, "фОБ");
		
	КонецЕсли;
	
КонецПроцедуры;	

