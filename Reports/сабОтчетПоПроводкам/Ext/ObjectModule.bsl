Перем НаборПоказателей Экспорт;
Перем ИмяМакетПроводок;
Перем мТекущийНаборПоказателей;

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеКомпоновкиМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки",
							Истина, Истина, Истина, Истина);
							
КонецФункции
	
Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина, ОбъектОтчет) Экспорт 
	
	ЭквВалюта = ?(ЗначениеЗаполнено(ОбъектОтчет.ЭквивалентнаяВалюта), ОбъектОтчет.ЭквивалентнаяВалюта, УЧ_Сервер.НациональнаяВалюта());
	
	Возврат "Отчет по проводкам" + СтандартныеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода)+ "
	|Валюта: " + ЭквВалюта;

КонецФункции

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, Схема = Неопределено, ВыводитьПолностью = Истина) Экспорт
	
	УправленческийУчетПовтИсп.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, Схема, ВыводитьПолностью); 
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(Схема, ОбъектОтчет) Экспорт
	
	КомпоновщикНастроекПроизвольный = ОбъектОтчет.КомпоновщикНастроек; 
	
	Если ЗначениеЗаполнено(ОбъектОтчет.НачалоПериода) Тогда
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "НачалоПериода", НачалоДня(ОбъектОтчет.НачалоПериода));
	КонецЕсли;
	Если ЗначениеЗаполнено(ОбъектОтчет.КонецПериода) Тогда
		СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "КонецПериода", КонецДня(ОбъектОтчет.КонецПериода));
	КонецЕсли;
	
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ПС", Символы.ПС);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ЭквивалентнаяВалюта", ?(ЗначениеЗаполнено(ОбъектОтчет.ЭквивалентнаяВалюта), ОбъектОтчет.ЭквивалентнаяВалюта, УЧ_Сервер.НациональнаяВалюта()));
	ДатаКон = ?(ЗначениеЗаполнено(ОбъектОтчет.КонецПериода), ОбъектОтчет.КонецПериода, ТекущаяДата());
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "ДатаКурса", ДатаКон);
	
	Если ЗначениеЗаполнено(ОбъектОтчет.Подразделение) Тогда
		СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроекПроизвольный, "Подразделение", ОбъектОтчет.Подразделение,,, );
	КонецЕсли;
	
	// 04.08.15 заполняем параметры Счет и КорСчет из отборов
	//Если ТипЗнч(ОбъектОтчет) = Тип("Структура") Тогда
	//	КомпоновщикНостройкиОтбора = ОбъектОтчет.КомпоновщикНастроекОтбор.Элементы;	
	//Иначе	
		КомпоновщикНостройкиОтбора = КомпоновщикНастроекПроизвольный.Настройки.Отбор.Элементы;
	//КонецЕсли; 
	
	Для Каждого ТекЭлементОтбора Из КомпоновщикНостройкиОтбора Цикл
		
		Если Строка(ТекЭлементОтбора.ЛевоеЗначение) = "Счет" И ТекЭлементОтбора.Использование Тогда
			СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "Счет", ТекЭлементОтбора.ПравоеЗначение);
		ИначеЕсли Строка(ТекЭлементОтбора.ЛевоеЗначение) = "КорСчет" И ТекЭлементОтбора.Использование Тогда
			СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекПроизвольный, "КорСчет", ТекЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
		
	КонецЦикла;
	//
	
	ЛинияСплошная = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	ТекущийНаборПоказателей = "" + ОбъектОтчет.ПоказательБУ + ОбъектОтчет.ПоказательВалютнаяСумма + ОбъектОтчет.ПоказательКоличество + ОбъектОтчет.ПоказательКрахмал;
	//Если ТекущийНаборПоказателей <> мТекущийНаборПоказателей Тогда
		
		МассивМакетов = Новый Массив;
		МассивМакетов.Добавить("ЗаголовокПодвал");
		МассивМакетов.Добавить("ПроводкиЗаголовок");	
		
		Для Каждого ЭлементМассива Из МассивМакетов Цикл
			Схема.Макеты[ЭлементМассива].Макет = УправленческийУчетПовтИсп.ПолучитьКопиюОписанияМакета(Схема.Макеты[ЭлементМассива + "Образец"].Макет);
			ОписаниеМакета = Схема.Макеты[ЭлементМассива].Макет;
			МассивСтрокДляУдаления = Новый Массив;
			Индекс = 0;
			Для Каждого ЭлементПоказатель Из ОбъектОтчет.НаборПоказателей Цикл
				Если Не ОбъектОтчет["Показатель" + ?(ТипЗнч(ЭлементПоказатель) = Тип("КлючИЗначение"), ЭлементПоказатель.Ключ, ЭлементПоказатель)] Тогда 
					МассивСтрокДляУдаления.Добавить(ОписаниеМакета[Индекс]);
				КонецЕсли;
				Индекс = Индекс + 1;
			КонецЦикла;		
			
			Для Каждого Строка Из МассивСтрокДляУдаления Цикл
				ОписаниеМакета.Удалить(Строка);
			КонецЦикла;
			
			КоличествоСтрок = ОписаниеМакета.Количество();
			
			// Обвести область
			Если КоличествоСтрок > 0 Тогда
				Для Индекс = 0 По 10 Цикл
					ПоследняяСтрока = ?(ЭлементМассива = "ЗаголовокПодвал" И Индекс < 4, 0, КоличествоСтрок - 1);
					ПараметрГраницы = СтандартныеОтчетыКлиентСервер.ПолучитьПараметр(ОписаниеМакета[0].Ячейки[Индекс].Оформление.Элементы, "СтильГраницы");
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ПараметрГраницы.ЗначенияВложенныхПараметров, "СтильГраницы.Сверху", ЛинияСплошная);
					ПараметрГраницы = СтандартныеОтчетыКлиентСервер.ПолучитьПараметр(ОписаниеМакета[ПоследняяСтрока].Ячейки[Индекс].Оформление.Элементы, "СтильГраницы");
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ПараметрГраницы.ЗначенияВложенныхПараметров, "СтильГраницы.Снизу", ЛинияСплошная);	
				КонецЦикла;
			КонецЕсли;
			
			Для Индекс = 1 По КоличествоСтрок - 1 Цикл
				ОписаниеМакета[Индекс].Ячейки[0].Элементы.Очистить();	
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[0].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[0].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[1].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[1].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[1].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[2].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[2].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[2].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				ОписаниеМакета[Индекс].Ячейки[3].Элементы.Очистить();
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[3].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
				СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[3].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				Если ЭлементМассива = "ПроводкиЗаголовок" Тогда
					ОписаниеМакета[Индекс].Ячейки[5].Элементы.Очистить();
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[5].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[5].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
					ОписаниеМакета[Индекс].Ячейки[8].Элементы.Очистить();
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[8].Оформление.Элементы, "ОбъединятьПоВертикали", Истина);
					СтандартныеОтчетыКлиентСервер.УстановитьПараметр(ОписаниеМакета[Индекс].Ячейки[8].Оформление.Элементы, "Расшифровка", Неопределено, Ложь);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		мТекущийНаборПоказателей = ТекущийНаборПоказателей;
	//КонецЕсли;
	Если Не ОбъектОтчет.ПоказательБУ Тогда
		
		
		ГруппаОтборов = КомпоновщикНостройкиОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтборов.Использование = Истина;
		ГруппаОтборов.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		//Если ПоказательНУ Тогда
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "НУДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "НУКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		////КонецЕсли;
		//Если ПоказательПР Тогда
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ПРДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ПРКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		//КонецЕсли;
		//Если ПоказательВР Тогда
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ВРДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		//	СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ВРКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		//КонецЕсли;
		Если ОбъектОтчет.ПоказательВалютнаяСумма Тогда
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ВалютнаяСуммаДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "ВалютнаяСуммаКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
		КонецЕсли;
		Если ОбъектОтчет.ПоказательКоличество Тогда
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "КоличествоДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "КоличествоКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);	
		КонецЕсли;	
		Если ОбъектОтчет.ПоказательКрахмал Тогда
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "КрахмалДт", 0, ВидСравненияКомпоновкиДанных.НеРавно);
			СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтборов, "КрахмалКт", 0, ВидСравненияКомпоновкиДанных.НеРавно);	
		КонецЕсли;
	КонецЕсли;
	
	
	МассивОтборов = Новый Массив;
	Для Каждого ЭлементОтбора Из КомпоновщикНостройкиОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
			ДоступныеПоляОтбора = КомпоновщикНастроекПроизвольный.Настройки.Отбор.ДоступныеПоляОтбора;
			Если ДоступныеПоляОтбора.НайтиПоле(ЭлементОтбора.ЛевоеЗначение) = Неопределено
				И ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных(СтрЗаменить(Строка(ЭлементОтбора.ЛевоеЗначение), "Субконто", "СубконтоДт"))) <> Неопределено Тогда 
				МассивОтборов.Добавить(ЭлементОтбора);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементОтбора Из МассивОтборов Цикл
		ГруппаИЛИ = КомпоновщикНостройкиОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаИЛИ, СтрЗаменить(ЭлементОтбора.ЛевоеЗначение, "Субконто", "СубконтоДт"), ЭлементОтбора.ПравоеЗначение, ЭлементОтбора.ВидСравнения); 
		СтандартныеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаИЛИ, СтрЗаменить(ЭлементОтбора.ЛевоеЗначение, "Субконто", "СубконтоКт"), ЭлементОтбора.ПравоеЗначение, ЭлементОтбора.ВидСравнения); 
		КомпоновщикНостройкиОтбора.Удалить(ЭлементОтбора);	
	КонецЦикла;
	
	УправленческийУчетПовтИсп.ДобавитьОтборПоОрганизации(ОбъектОтчет);
	
	Если ТипЗнч(ОбъектОтчет) = Тип("Структура") Тогда
		ОбъектОтчет.КомпоновщикНастроек = КомпоновщикНастроекПроизвольный;
	КонецЕсли; 	
	
	
КонецПроцедуры

Процедура ПослеКомпоновкиМакета(МакетКомпоновки, ОтчетОбъект) Экспорт
	
	КоличествоПоказателей = УправленческийУчетПовтИсп.КоличествоПоказателей(ОтчетОбъект);
	
	// Если показатель один, то удалим столбик "Показатель"
	Если КоличествоПоказателей = 1 Тогда
		Для Каждого Макет Из МакетКомпоновки.Макеты Цикл
			Для Каждого СтрокаМакета Из Макет.Макет Цикл
				Если СтрокаМакета.Ячейки.Количество() > 4 Тогда
					СтрокаМакета.Ячейки.Удалить(СтрокаМакета.Ячейки[4]);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	МакетПроводки = УправленческийУчетПовтИсп.ПолучитьМакетГруппировкиПоПолюГруппировки(МакетКомпоновки, "Проводки", Истина);
	
	Если МакетПроводки.Количество() = 1 Тогда
		МакетПроводки = МакетПроводки[0];
		ИмяМакетПроводок = МакетПроводки.Имя;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(Результат, ОтчетОбъект) Экспорт
	
	УправленческийУчетПовтИсп.ОбработкаРезультатаОтчета(ОтчетОбъект, Результат);

	Если Результат.Области.Найти("Заголовок") = Неопределено Тогда
		Результат.ФиксацияСверху = 2;
	Иначе
		Результат.ФиксацияСверху = Результат.Области.Заголовок.Низ + 2;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправленческийУчетПовтИсп.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

НаборПоказателей = Новый Массив;
НаборПоказателей.Добавить("БУ");
//НаборПоказателей.Добавить("НУ");
//НаборПоказателей.Добавить("ПР");
//НаборПоказателей.Добавить("ВР");
НаборПоказателей.Добавить("ВалютнаяСумма");
НаборПоказателей.Добавить("Количество");
НаборПоказателей.Добавить("Крахмал");