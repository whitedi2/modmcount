
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Для Каждого ДокОперация Из ПараметрКоманды Цикл
		ОбработатьВыгрузкуНаСервере(ДокОперация);				
	КонецЦикла;
	Оповестить("ОбновитьФормуУч_Операция", ДокОперация);
	
КонецПроцедуры

Процедура ОбработатьВыгрузкуНаСервере(ПараметрКоманды)
	
	МассивНомеровСубконто = Новый Массив;
	МассивНомеровСубконто.Добавить("1");
	МассивНомеровСубконто.Добавить("2");
	МассивНомеровСубконто.Добавить("3");
	
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.УЧ_Операция") И (ПараметрКоманды.ТипДокумента = "Корректировка реализации" Или ПараметрКоманды.ТипДокумента = "Возврат товаров от покупателя" Или ПараметрКоманды.ТипДокумента = "Корректировка поступления") Тогда
		Если Не ПараметрКоманды.ВидОперации  = "ВыгрузкаНеОбработан" Тогда
			Сообщить("Обрабатывать возможно только не обработанные выгрузки!");
			Возврат;
		КонецЕсли;
		
		СтатьяКорректировкаРеализации = Справочники.СтатьиДоходовРасходов.НайтиПоНаименованию("Корректировка реализации", Истина);
		
		МассивСчетов91 = Новый Массив;
		МассивСчетов91.Добавить("90.02.1");
		МассивСчетов91.Добавить("90.01.1");
		МассивСчетов91.Добавить("91.02.1");
		МассивСчетов91.Добавить("91.01");
		
		МассивЗначений = Новый Массив;
		Для Каждого СтрокаПроводки Из ПараметрКоманды.Проводки Цикл
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетДебет) И МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетДт) = Неопределено Тогда
				МассивЗначений.Добавить(СтрокаПроводки.ПредставлениеСчетДт);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетКредит) И МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетКт) = Неопределено Тогда
				МассивЗначений.Добавить(СтрокаПроводки.ПредставлениеСчетКт);
			КонецЕсли;	
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектов.Значение77,
		|	СоответствиеОбъектов.Соответствие,
		|	СоответствиеОбъектов.ТипДокумента
		|ИЗ
		|	Справочник.СоответствиеОбъектов КАК СоответствиеОбъектов
		|ГДЕ
		|	СоответствиеОбъектов.Значение77 В(&МассивЗначений)
		|	И ТИПЗНАЧЕНИЯ(СоответствиеОбъектов.Значение77) = ТИП(СТРОКА)
		|	И СоответствиеОбъектов.ТипОбъекта = ""ПланСчетов.Учетный""";
		Запрос.УстановитьПараметр("МассивЗначений", МассивЗначений);
		РезультатЗапроса = Запрос.Выполнить();
		НеЗаполненныеСоответствия = "";
		МассивОшибок = Новый Массив;
		Для Каждого ЭлМассиваЗначений Из МассивЗначений Цикл
			Выборка = РезультатЗапроса.Выбрать();
			Если НЕ Выборка.НайтиСледующий(Новый Структура("Значение77", ЭлМассиваЗначений)) И МассивОшибок.Найти(ЭлМассиваЗначений) = Неопределено Тогда
				НеЗаполненныеСоответствия = НеЗаполненныеСоответствия + " " + ЭлМассиваЗначений + ";";
				МассивОшибок.Добавить(ЭлМассиваЗначений);
			КонецЕсли;	
		КонецЦикла;	
		
		Если ЗначениеЗаполнено(НеЗаполненныеСоответствия) Тогда
			Сообщить("В документе " + ПараметрКоманды + " не заполнены соответствия:" + НеЗаполненныеСоответствия + ". Документ не может быть обработан!");
			Возврат;
		КонецЕсли;	
		
		ДокОбъект = ПараметрКоманды.ПолучитьОбъект();
		Проводки = ДокОбъект.Проводки;
		КоличествоСтрок = Проводки.Количество();
		
		Для НомерСтроки = 1 По КоличествоСтрок Цикл
			СтрокаПроводки = Проводки[КоличествоСтрок-НомерСтроки];
			
			Если СтрокаПроводки.Содержание = "Корректировка реализации" Или СтрокаПроводки.Содержание = "Возврат от покупателя" Тогда
				
				Если СтрокаПроводки.ПредставлениеСчетДт = "68.02" Или СтрокаПроводки.ПредставлениеСчетКт = "68.02" Тогда 
					Проводки.Удалить(КоличествоСтрок - НомерСтроки);
					Продолжить;
				КонецЕсли;
				
				Если Не МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетДт) = Неопределено Тогда
					СтрокаПроводки.СчетДебет = ПланыСчетов.Учетный.ДоходыИРасходы;
					СтрокаПроводки.Субконто1Дебет = СтатьяКорректировкаРеализации;
				Иначе
					Выборка = РезультатЗапроса.Выбрать();
					Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетДт, ПараметрКоманды.ТипДокумента)) Тогда 
						СтрокаПроводки.СчетДебет = Выборка.Соответствие;
					Иначе 
						Выборка = РезультатЗапроса.Выбрать();
						Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетДт));
						СтрокаПроводки.СчетДебет = Выборка.Соответствие;
					КонецЕсли;	
				КонецЕсли;	
				
				Если Не МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетКт) = Неопределено Тогда
					СтрокаПроводки.СчетКредит = ПланыСчетов.Учетный.ДоходыИРасходы;
					СтрокаПроводки.Субконто1Кредит = СтатьяКорректировкаРеализации;
				Иначе
					Выборка = РезультатЗапроса.Выбрать();
					Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетКт, ПараметрКоманды.ТипДокумента)) Тогда 
						СтрокаПроводки.СчетКредит = Выборка.Соответствие;
					Иначе 
						Выборка = РезультатЗапроса.Выбрать();
						Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетКт)); 
						СтрокаПроводки.СчетКредит = Выборка.Соответствие;
					КонецЕсли;
				КонецЕсли;	
			Иначе
				Если СтрокаПроводки.ПредставлениеСчетДт = "68.02" Или СтрокаПроводки.ПредставлениеСчетКт = "68.02" Или СтрокаПроводки.ПредставлениеСчетДт = "19.03" Тогда
					СуммаНДС = СтрокаПроводки.Сумма;
					Если Проводки[КоличествоСтрок-НомерСтроки-1].Содержание = "Возврат от покупателя" Или СтрокаПроводки.ПредставлениеСчетДт = "19.03" Тогда
						Проводки[КоличествоСтрок-НомерСтроки-1].Сумма = Проводки[КоличествоСтрок-НомерСтроки-1].Сумма + СуммаНДС;
						Проводки.Удалить(КоличествоСтрок - НомерСтроки);
						Продолжить;
					КонецЕсли;
					Если Проводки[КоличествоСтрок-НомерСтроки-2].Содержание = "Возврат от покупателя" Тогда
						Проводки[КоличествоСтрок-НомерСтроки-2].Сумма = Проводки[КоличествоСтрок-НомерСтроки-2].Сумма + СуммаНДС;
						Проводки.Удалить(КоличествоСтрок - НомерСтроки);
						Продолжить;
					КонецЕсли;
				Иначе
					Если Не МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетДт) = Неопределено Тогда
						СтрокаПроводки.СчетДебет = ПланыСчетов.Учетный.ДоходыИРасходы;
						СтрокаПроводки.Субконто1Дебет = СтатьяКорректировкаРеализации;
					Иначе
						Выборка = РезультатЗапроса.Выбрать();
						Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетДт, ПараметрКоманды.ТипДокумента)) Тогда 
							СтрокаПроводки.СчетДебет = Выборка.Соответствие;
						Иначе 
							Выборка = РезультатЗапроса.Выбрать();
							Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетДт));
							СтрокаПроводки.СчетДебет = Выборка.Соответствие;
						КонецЕсли;	
					КонецЕсли;
					Если Не МассивСчетов91.Найти(СтрокаПроводки.ПредставлениеСчетКт) = Неопределено Тогда
						СтрокаПроводки.СчетКредит = ПланыСчетов.Учетный.ДоходыИРасходы;
						СтрокаПроводки.Субконто1Кредит = СтатьяКорректировкаРеализации;
					Иначе
						Выборка = РезультатЗапроса.Выбрать();
						Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетКт, ПараметрКоманды.ТипДокумента)) Тогда 
							СтрокаПроводки.СчетКредит = Выборка.Соответствие;
						Иначе 
							Выборка = РезультатЗапроса.Выбрать();
							Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетКт)); 
							СтрокаПроводки.СчетКредит = Выборка.Соответствие;
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
		
		ДокОбъект.ВидОперации = "ВыгрузкаОбработан";
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.УЧ_Операция") Тогда
		Если Не ПараметрКоманды.ВидОперации  = "ВыгрузкаНеОбработан" Тогда
			Сообщить("Обрабатывать возможно только не обработанные выгрузки!");
			Возврат;
		КонецЕсли;

		МассивЗначений = Новый Массив;
		Для Каждого СтрокаПроводки Из ПараметрКоманды.Проводки Цикл
			Для Каждого НомерСубконто Из МассивНомеровСубконто Цикл
				Если ТипЗнч(СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"]) = Тип("СправочникСсылка.Субконто") И СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"].Тип <> "Документ.РеализацияТоваровУслуг" Тогда
					МассивЗначений.Добавить(СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"]);
				КонецЕсли;
				Если ТипЗнч(СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"]) = Тип("СправочникСсылка.Субконто") И СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"].Тип <> "Документ.РеализацияТоваровУслуг" Тогда
					МассивЗначений.Добавить(СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"]);
				КонецЕсли;
			КонецЦикла;
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетДебет) И ЗначениеЗаполнено(СтрокаПроводки.ПредставлениеСчетДт) Тогда
				МассивЗначений.Добавить(СтрокаПроводки.ПредставлениеСчетДт);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетКредит) И ЗначениеЗаполнено(СтрокаПроводки.ПредставлениеСчетКт)  Тогда
				МассивЗначений.Добавить(СтрокаПроводки.ПредставлениеСчетКт);
			КонецЕсли;	
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектов.Значение77,
		|	СоответствиеОбъектов.Соответствие,
		|	СоответствиеОбъектов.ТипДокумента
		|ИЗ
		|	Справочник.СоответствиеОбъектов КАК СоответствиеОбъектов
		|ГДЕ
		|	СоответствиеОбъектов.Значение77 В(&МассивЗначений)
		|	И СоответствиеОбъектов.Значение77 ССЫЛКА Справочник.Субконто
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СоответствиеОбъектов.Значение77,
		|	СоответствиеОбъектов.Соответствие,
		|	СоответствиеОбъектов.ТипДокумента
		|ИЗ
		|	Справочник.СоответствиеОбъектов КАК СоответствиеОбъектов
		|ГДЕ
		|	СоответствиеОбъектов.Значение77 В(&МассивЗначений)
		|	И ТИПЗНАЧЕНИЯ(СоответствиеОбъектов.Значение77) = ТИП(СТРОКА)
		|	И СоответствиеОбъектов.ТипОбъекта = ""ПланСчетов.Учетный""";
		Запрос.УстановитьПараметр("МассивЗначений", МассивЗначений);
		РезультатЗапроса = Запрос.Выполнить();
		НеЗаполненныеСоответствия = "";
		МассивОшибок = Новый Массив;
		Для Каждого ЭлМассиваЗначений Из МассивЗначений Цикл
			Выборка = РезультатЗапроса.Выбрать();
			Если НЕ Выборка.НайтиСледующий(Новый Структура("Значение77", ЭлМассиваЗначений)) И МассивОшибок.Найти(ЭлМассиваЗначений) = Неопределено Тогда
				НеЗаполненныеСоответствия = НеЗаполненныеСоответствия + " " + ЭлМассиваЗначений + ";";
				МассивОшибок.Добавить(ЭлМассиваЗначений);
			КонецЕсли;	
		КонецЦикла;	
		
		Если ЗначениеЗаполнено(НеЗаполненныеСоответствия) Тогда
			Сообщить("В документе " + ПараметрКоманды + " не заполнены соответствия:" + НеЗаполненныеСоответствия + ". Документ не может быть обработан!");
			Возврат;
		КонецЕсли;	
		
		ТекОбъект = ПараметрКоманды.ПолучитьОбъект();
		
		ТаблицаПроводок = ТекОбъект.Проводки.Выгрузить();
		
		Для Каждого СтрокаПроводки Из ТаблицаПроводок Цикл
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетДебет) Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетДт, ПараметрКоманды.ТипДокумента)) Тогда 
					СтрокаПроводки.СчетДебет = Выборка.Соответствие;
				Иначе 
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетДт));
					СтрокаПроводки.СчетДебет = Выборка.Соответствие;
				КонецЕсли;	
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаПроводки.СчетКредит) Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводки.ПредставлениеСчетКт, ПараметрКоманды.ТипДокумента)) Тогда 
					СтрокаПроводки.СчетКредит = Выборка.Соответствие;
				Иначе 
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводки.ПредставлениеСчетКт)); 
					СтрокаПроводки.СчетКредит = Выборка.Соответствие;
				КонецЕсли;
			КонецЕсли;
			Для Каждого НомерСубконто Из МассивНомеровСубконто Цикл
				СтрокаПроводкиДт = СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"];
				Если ТипЗнч(СтрокаПроводкиДт) = Тип("СправочникСсылка.Субконто") Тогда
					Если СтрокаПроводкиДт.Тип = "Документ.РеализацияТоваровУслуг" Тогда
						 СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"] = ПолучитьДокумент(СтрокаПроводкиДт.Наименование);
					Иначе	
						Выборка = РезультатЗапроса.Выбрать();
						Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводкиДт, ПараметрКоманды.ТипДокумента)) Тогда 
							 СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"] = Выборка.Соответствие;
						Иначе
							Выборка = РезультатЗапроса.Выбрать();
							Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводкиДт));
							 СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"] = Выборка.Соответствие;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				СтрокаПроводкиКт = СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"];
				Если ТипЗнч(СтрокаПроводкиКт) = Тип("СправочникСсылка.Субконто") Тогда
					Если СтрокаПроводкиКт.Тип = "Документ.РеализацияТоваровУслуг" Тогда
						СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"] = ПолучитьДокумент(СтрокаПроводкиКт.Наименование);
					Иначе	
						Выборка = РезультатЗапроса.Выбрать();
						Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаПроводкиКт, ПараметрКоманды.ТипДокумента)) Тогда 
							СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"] = Выборка.Соответствие;
						Иначе
							Выборка = РезультатЗапроса.Выбрать();
							Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаПроводкиКт));
							СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"] = Выборка.Соответствие;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;	
		
		Для Каждого СтрокаПроводки Из ТекОбъект.Проводки Цикл
			СтрокаТаблицыПроводок = ТаблицаПроводок[СтрокаПроводки.НомерСтроки - 1];
			СтрокаПроводки.СчетДебет = СтрокаТаблицыПроводок.СчетДебет;
			СтрокаПроводки.СчетКредит = СтрокаТаблицыПроводок.СчетКредит;
			
			ВидыСубконтоДт = СтрокаТаблицыПроводок.СчетДебет.ВидыСубконто;
			КоличествоВидовСубконтоДт = ВидыСубконтоДт.Количество();
			Для Каждого НомерСубконто Из МассивНомеровСубконто Цикл
				Если Число(НомерСубконто) > КоличествоВидовСубконтоДт Тогда
					СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"] = Неопределено;
				Иначе	
					ТипСубконто = ВидыСубконтоДт[НомерСубконто-1].ВидСубконто.ТипЗначения;
					Для Каждого НомерСубконтоТабл Из МассивНомеровСубконто Цикл
						Если ТипСубконто.СодержитТип(ТипЗнч(СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Дебет"])) Тогда
							СтрокаПроводки["Субконто" + НомерСубконто + "Дебет"] = СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Дебет"];
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;	
			
			ВидыСубконтоКт = СтрокаТаблицыПроводок.СчетКредит.ВидыСубконто;
			КоличествоВидовСубконтоКт = ВидыСубконтоКт.Количество();
			Для Каждого НомерСубконто Из МассивНомеровСубконто Цикл
				Если Число(НомерСубконто) > КоличествоВидовСубконтоКт Тогда
					СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"] = Неопределено;
				Иначе	
					ТипСубконто = ВидыСубконтоКт[НомерСубконто-1].ВидСубконто.ТипЗначения;
					СтрокаТаблицыПроводок = ТаблицаПроводок[СтрокаПроводки.НомерСтроки - 1];
					Для Каждого НомерСубконтоТабл Из МассивНомеровСубконто Цикл
						Если ТипСубконто.СодержитТип(ТипЗнч(СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Кредит"])) Тогда
							СтрокаПроводки["Субконто" + НомерСубконто + "Кредит"] = СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Кредит"];
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;	
			
			Если СтрокаПроводки.СчетДебет = ПланыСчетов.Учетный.Счет25() Тогда
				Для Каждого НомерСубконтоТабл Из МассивНомеровСубконто Цикл
					Если ТипЗнч(СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Дебет"]) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
						СтрокаПроводки.ПодразделениеДт = СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Дебет"];
						Прервать;
					КонецЕсли;
				КонецЦикла;		
			КонецЕсли;	
			
			Если СтрокаПроводки.СчетКредит = ПланыСчетов.Учетный.Счет25() Тогда
				Для Каждого НомерСубконтоТабл Из МассивНомеровСубконто Цикл
					Если ТипЗнч(СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Кредит"]) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
						СтрокаПроводки.ПодразделениеКт = СтрокаТаблицыПроводок["Субконто" + НомерСубконтоТабл + "Кредит"];
						Прервать;
					КонецЕсли;
				КонецЦикла;		
			КонецЕсли;	
			
		КонецЦикла;	
		
		ТекОбъект.ВидОперации = "ВыгрузкаОбработан";
		ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);
	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") Тогда
		
		ВсеОбратотаны = Истина;
		МассивЗначений = Новый Массив;
		
		Для Каждого СтрокаУслуг Из ПараметрКоманды.Услуги Цикл
			Если Не ЗначениеЗаполнено(СтрокаУслуг.СчетЗатрат) Тогда
				МассивЗначений.Добавить(СтрокаУслуг.ПредставлениеСчетаЗатрат);
				ВсеОбратотаны = Ложь;
			КонецЕсли;	
			Если ТипЗнч(СтрокаУслуг.СтатьяЗатрат) = Тип("СправочникСсылка.Субконто") Тогда
				МассивЗначений.Добавить(СтрокаУслуг.СтатьяЗатрат);
				ВсеОбратотаны = Ложь;
			КонецЕсли;	
			Если ТипЗнч(СтрокаУслуг.Подразделение) = Тип("СправочникСсылка.Субконто") Тогда
				МассивЗначений.Добавить(СтрокаУслуг.Подразделение);
				ВсеОбратотаны = Ложь;
			КонецЕсли;
		КонецЦикла;	
		
		Если ВсеОбратотаны Тогда
			Сообщить("Обрабатывать можно только не обработанные выгрузки!");
			Возврат;
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектов.Значение77,
		|	СоответствиеОбъектов.Соответствие,
		|	СоответствиеОбъектов.ТипДокумента
		|ИЗ
		|	Справочник.СоответствиеОбъектов КАК СоответствиеОбъектов
		|ГДЕ
		|	СоответствиеОбъектов.Значение77 В(&МассивЗначений)
		|	И СоответствиеОбъектов.Значение77 ССЫЛКА Справочник.Субконто
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СоответствиеОбъектов.Значение77,
		|	СоответствиеОбъектов.Соответствие,
		|	СоответствиеОбъектов.ТипДокумента
		|ИЗ
		|	Справочник.СоответствиеОбъектов КАК СоответствиеОбъектов
		|ГДЕ
		|	СоответствиеОбъектов.Значение77 В(&МассивЗначений)
		|	И ТИПЗНАЧЕНИЯ(СоответствиеОбъектов.Значение77) = ТИП(СТРОКА)
		|	И СоответствиеОбъектов.ТипОбъекта = ""ПланСчетов.Учетный""";
		Запрос.УстановитьПараметр("МассивЗначений", МассивЗначений);
		РезультатЗапроса = Запрос.Выполнить();
		НеЗаполненныеСоответствия = "";
		МассивОшибок = Новый Массив;
		Для Каждого ЭлМассиваЗначений Из МассивЗначений Цикл
			Выборка = РезультатЗапроса.Выбрать();
			Если НЕ Выборка.НайтиСледующий(Новый Структура("Значение77", ЭлМассиваЗначений)) И МассивОшибок.Найти(ЭлМассиваЗначений) = Неопределено Тогда
				НеЗаполненныеСоответствия = НеЗаполненныеСоответствия + " " + ЭлМассиваЗначений + ";";
				МассивОшибок.Добавить(ЭлМассиваЗначений);
			КонецЕсли;	
		КонецЦикла;	
		
		Если ЗначениеЗаполнено(НеЗаполненныеСоответствия) Тогда
			Сообщить("В документе " + ПараметрКоманды + " не заполнены соответствия:" + НеЗаполненныеСоответствия + ". Документ не может быть обработан!");
			Возврат;
		КонецЕсли;
		
		ДокОбъект = ПараметрКоманды.ПолучитьОбъект();
		
		Для Каждого СтрокаУслуг Из ДокОбъект.Услуги Цикл
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаУслуг.ПредставлениеСчетаЗатрат, "Поступление товаров и услуг")) Тогда 
				СтрокаУслуг.СчетЗатрат = Выборка.Соответствие;
			Иначе
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаУслуг.ПредставлениеСчетаЗатрат)); 
				СтрокаУслуг.СчетЗатрат = Выборка.Соответствие;
			КонецЕсли;	
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаУслуг.СтатьяЗатрат, "Поступление товаров и услуг")) Тогда 
				СтрокаУслуг.СтатьяЗатрат = Выборка.Соответствие;
			Иначе
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаУслуг.СтатьяЗатрат));
				СтрокаУслуг.СтатьяЗатрат = Выборка.Соответствие;
			КонецЕсли;
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.НайтиСледующий(Новый Структура("Значение77, ТипДокумента", СтрокаУслуг.Подразделение, "Поступление товаров и услуг")) Тогда 
				СтрокаУслуг.Подразделение = Выборка.Соответствие;
			Иначе
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.НайтиСледующий(Новый Структура("Значение77", СтрокаУслуг.Подразделение)); 
				СтрокаУслуг.Подразделение = Выборка.Соответствие;
			КонецЕсли;
			Если СтрокаУслуг.СчетЗатрат = ПланыСчетов.Учетный._97_02 Тогда
				СтрокаУслуг.СтатьяЗатрат = ДокОбъект.Контрагент;
				СтрокаУслуг.Субконто1 = ДокОбъект.Контрагент;
				ДоговорТММ = СоздатьДоговор(СтрокаУслуг.НомерДоговораТММ, ДокОбъект.Контрагент);
				Если Не ЗначениеЗаполнено(СтрокаУслуг.НомерДоговораТММ) Или ДоговорТММ = Неопределено Тогда
					Сообщить("Не найден договор ТММ/РБ, обработка невозможна!");
					Возврат;
				Иначе	
					СтрокаУслуг.Субконто2 = ДоговорТММ;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаУслуг.Номенклатура) И Найти(НРег(СтрокаУслуг.Номенклатура.Наименование), "ретробонус") <> 0 Тогда
					СтрокаУслуг.Субконто3 = Справочники.СтатьиЗатрат.РетробонусИсходящий;
				Иначе	
					СтрокаУслуг.Субконто3 = Справочники.СтатьиЗатрат.ТрейдМенеджментИМаркетинг;
				КонецЕсли;
				ДокОбъект.СчетКонтрагента = ПланыСчетов.Учетный.ПоставщикиПрочие;
			КонецЕсли;	
		КонецЦикла;
		
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьДокумент(ПредставлениеДокумента)
	
	ДатаИНомер = Сред(ПредставлениеДокумента, 18);
	НомерДока = Лев(ДатаИНомер, Найти(ДатаИНомер, " ")-1);
	ДатаДока = Дата(Сред(ДатаИНомер, Найти(ДатаИНомер, "от ")+3));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_Реализация.Ссылка
	|ИЗ
	|	Документ.УЧ_Реализация КАК УЧ_Реализация
	|ГДЕ
	|	УЧ_Реализация.Номер = &Номер
	|	И УЧ_Реализация.Дата = &Дата";
	Запрос.УстановитьПараметр("Номер", НомерДока);
	Запрос.УстановитьПараметр("Дата", ДатаДока);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Документы.УЧ_Реализация.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;	
	
КонецФункции	

Функция СоздатьДоговор(ТекНаименование, ТекКонтрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Наименование = &Наименование
	|	И ДоговорыКонтрагентов.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", ТекКонтрагент);
	Запрос.УстановитьПараметр("Наименование", ТекНаименование);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;	
		КонецЦикла;
	КонецЕсли;	
		
КонецФункции
