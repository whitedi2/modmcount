
&НаСервере
Процедура ПодобратьРеализацииНаСервере(ТекДокумент)
	
	ДокОбъект = ТекДокумент.ПолучитьОбъект();
	
	Для Каждого ТекСтрокаПроводки Из ДокОбъект.Проводки Цикл
		
		Если ТекСтрокаПроводки.СчетКредит <> ПланыСчетов.Учетный.Счет6201() Или ЗначениеЗаполнено(ТекСтрокаПроводки.Субконто3Кредит) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСчет 		= ТекСтрокаПроводки.СчетКредит;
		ТекКонтрагент 	= ТекСтрокаПроводки.Субконто1Кредит;
		ТекДоговор 		= ТекСтрокаПроводки.Субконто2Кредит;
		СуммаОбщая 		= ТекСтрокаПроводки.Сумма;
		
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	УчетныйОбороты.Счет,
		               |	УчетныйОбороты.Субконто1,
		               |	УчетныйОбороты.Субконто2,
		               |	УчетныйОбороты.Субконто3,
		               |	УчетныйОбороты.Предприятия,
		               |	УчетныйОбороты.Подразделение,
		               |	СУММА(УчетныйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ВТ_Обороты
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Обороты(
		               |			&Период,
		               |			&Период,
		               |			Регистратор,
		               |			Счет = &Счет,
		               |			,
		               |			Субконто1 = &Субконто1
		               |				И Субконто2 = &Субконто2
		               |				И Предприятия = &Предприятие,
		               |			,
		               |			) КАК УчетныйОбороты
		               |ГДЕ
		               |	УчетныйОбороты.Регистратор <> &Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	УчетныйОбороты.Счет,
		               |	УчетныйОбороты.Субконто1,
		               |	УчетныйОбороты.Субконто3,
		               |	УчетныйОбороты.Предприятия,
		               |	УчетныйОбороты.Подразделение,
		               |	УчетныйОбороты.Субконто2
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	УчетныйОстатки.Счет,
		               |	УчетныйОстатки.Субконто1,
		               |	УчетныйОстатки.Субконто2,
		               |	УчетныйОстатки.Субконто3,
		               |	УчетныйОстатки.Предприятия,
		               |	УчетныйОстатки.Подразделение,
		               |	УчетныйОстатки.СуммаОстатокДт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0) КАК СуммаОстатокДт
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Остатки(
		               |			&Период,
		               |			Счет = &Счет,
		               |			,
		               |			Субконто1 = &Субконто1
		               |				И Субконто2 = &Субконто2
		               |				И Предприятия = &Предприятие) КАК УчетныйОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
		               |		ПО УчетныйОстатки.Счет = ВТ_Обороты.Счет
		               |			И УчетныйОстатки.Субконто1 = ВТ_Обороты.Субконто1
		               |			И УчетныйОстатки.Субконто2 = ВТ_Обороты.Субконто2
		               |			И УчетныйОстатки.Субконто3 = ВТ_Обороты.Субконто3
		               |			И УчетныйОстатки.Предприятия = ВТ_Обороты.Предприятия
		               |ГДЕ
		               |	УчетныйОстатки.СуммаОстатокДт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0) <> 0
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	УчетныйОстатки.Субконто3.Дата";
		Запрос.УстановитьПараметр("Период", 	 ДокОбъект.Дата);
		Запрос.УстановитьПараметр("Предприятие", ДокОбъект.Предприятие);
		Запрос.УстановитьПараметр("Регистратор", ДокОбъект.Ссылка);
		Запрос.УстановитьПараметр("Счет", 	   ТекСтрокаПроводки.СчетКредит);
		Запрос.УстановитьПараметр("Субконто1", ТекСтрокаПроводки.Субконто1Кредит);
		Запрос.УстановитьПараметр("Субконто2", ТекСтрокаПроводки.Субконто2Кредит);
		
		СуммаОсталосьРаспределить = СуммаОбщая;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ДокОбъект.Проводки.Вставить(ТекСтрокаПроводки.НомерСтроки);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаПроводки);
			НоваяСтрока.Субконто3Кредит = Выборка.Субконто3;
			НоваяСтрока.Сумма 			= Мин(СуммаОсталосьРаспределить, Выборка.СуммаОстатокДт);
			СуммаОсталосьРаспределить	= СуммаОсталосьРаспределить - НоваяСтрока.Сумма;
			ТекСтрокаПроводки.Сумма		= СуммаОсталосьРаспределить;
			
			Если СуммаОсталосьРаспределить = 0 Тогда
				ДокОбъект.Проводки.Удалить(ТекСтрокаПроводки);
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//ретробонусы
	Для Каждого ТекСтрокаПроводки Из ДокОбъект.Проводки Цикл
		Если ТекСтрокаПроводки.СчетДебет = ПланыСчетов.Учетный.Счет7601() И ТекСтрокаПроводки.СчетКредит = ПланыСчетов.Учетный.ВерхПоОплате Тогда
			ДокОбъект.Проводки.Удалить(ТекСтрокаПроводки);
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого ТекСтрокаПроводки Из ДокОбъект.Проводки Цикл
		Если ТекСтрокаПроводки.СчетКредит <> ПланыСчетов.Учетный.Счет6201() Или Не ЗначениеЗаполнено(ТекСтрокаПроводки.Субконто3Кредит) Тогда
			Продолжить;
		КонецЕсли;
		
		ПроцентРетробонуса = ПолучитьПроцентРетробонуса(ТекСтрокаПроводки.Субконто1Кредит, ТекСтрокаПроводки.Субконто3Кредит, ТекСтрокаПроводки.Предприятие);
		Если ПроцентРетробонуса = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрокаПроводки = ДокОбъект.Проводки.Добавить();
		//ЗаполнитьЗначенияСвойств(НоваяСтрокаПроводки, ТекСтрокаПроводки);
		
		НоваяСтрокаПроводки.СчетДебет  = ПланыСчетов.Учетный.Счет7601();		
		НоваяСтрокаПроводки.СчетКредит = ПланыСчетов.Учетный.ВерхПоОплате;
		
		НоваяСтрокаПроводки.Субконто1Дебет  = ТекСтрокаПроводки.Субконто1Кредит;   //Контрагент
		НоваяСтрокаПроводки.Субконто2Дебет  = 0;                                   //пустой верх
		НоваяСтрокаПроводки.Субконто3Дебет  = ТекСтрокаПроводки.Субконто3Кредит;   //документ реализации
		НоваяСтрокаПроводки.Субконто1Кредит = ТекСтрокаПроводки.Субконто1Кредит;   //Контрагент
		НоваяСтрокаПроводки.Субконто2Кредит = 0;                                   //пустой верх
		
		НоваяСтрокаПроводки.Сумма 	   = ТекСтрокаПроводки.Сумма * ПроцентРетробонуса / 100;
		НоваяСтрокаПроводки.Содержание = ТекСтрокаПроводки.Содержание;
	КонецЦикла;
	
	Если ДокОбъект.Проведен Тогда
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		ДокОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьРеализации(Команда)
	
	Для Каждого ТекДокумент Из Элементы.Список.ВыделенныеСтроки Цикл
		ПодобратьРеализацииНаСервере(ТекДокумент);				
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПроцентРетробонуса(ТекКонтрагент, ТекДокументОтгрузки, ТекПредприятие)
	
	Если Не ЗначениеЗаполнено(ТекДокументОтгрузки) Или ТипЗнч(ТекДокументОтгрузки) <> Тип("ДокументСсылка.УЧ_Реализация") Тогда
		ДатаРетро = Дата(2015, 1, 1);
	Иначе
		ДатаРетро = ТекДокументОтгрузки.Дата;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВД_РетробонусыСрезПоследних.БонусИсходящий
	|ИЗ
	|	РегистрСведений.ВД_Ретробонусы.СрезПоследних(
	|			&Период,
	|			Контрагент = &Контрагент
	|				И Предприятие = &Предприятие) КАК ВД_РетробонусыСрезПоследних";
	Запрос.УстановитьПараметр("Контрагент", ТекКонтрагент);
	Запрос.УстановитьПараметр("Период", ДатаРетро);
	Запрос.УстановитьПараметр("Предприятие", ТекПредприятие);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.БонусИсходящий;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры
