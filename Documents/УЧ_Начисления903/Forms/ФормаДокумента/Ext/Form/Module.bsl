&НаСервере
Функция ПолучитьСубконто(НомерСубконто, ТекСчет)
	
	Если НомерСубконто > ТекСчет.ВидыСубконто.Количество() Тогда
		Возврат "";
	Иначе
		Возврат ТекСчет.ВидыСубконто[НомерСубконто - 1].ВидСубконто.Наименование;			
	КонецЕсли;
	
КонецФункции // ()

&НаКлиенте
Процедура КорСчетПриИзменении(Элемент)
	
	Наименование1 = ПолучитьСубконто(1, Объект.КорСчет);
	Наименование2 = ПолучитьСубконто(2, Объект.КорСчет);
	Наименование3 = ПолучитьСубконто(3, Объект.КорСчет);
	
	Элементы.КорСубконто1.Заголовок = Наименование1;
	Элементы.КорСубконто2.Заголовок = Наименование2;
	Элементы.КорСубконто3.Заголовок = Наименование3;
	
	Если Наименование1 = "" Тогда
		Объект.КорСубконто1 = "";		
		Элементы.КорСубконто1.Доступность = Ложь;
	Иначе
		Элементы.КорСубконто1.Доступность = Истина;
	КонецЕсли;
	
	Если Наименование2 = "" Тогда
		Элементы.КорСубконто2.Доступность = Ложь;
	Иначе
		Элементы.КорСубконто2.Доступность = Истина;
	КонецЕсли;
	
	Если Наименование3 = "" Тогда
		Элементы.КорСубконто3.Доступность = Ложь;
	Иначе
		Элементы.КорСубконто3.Доступность = Истина;
	КонецЕсли;
	
	Если НЕ БюджетныйНаСервере.ВернутьРеквизит(Объект.КорСчет, "УчетПоПодразделениям") Тогда
		Элементы.Подразделение.Доступность = Ложь;
	Иначе
		Элементы.Подразделение.Доступность = Истина;	
	КонецЕсли;
	
	Если ПолучитьПризнакВалютности(Объект.КорСчет) Тогда
		Элементы.Валюта.Видимость 		= Истина;
		Элементы.ВалютняСумма.Видимость = Истина;
	Иначе
		Элементы.Валюта.Видимость		= Ложь;
		Элементы.ВалютняСумма.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПризнакВалютности(ПарКорСчет)
	Если ЗначениеЗаполнено(ПарКорСчет) Тогда
		Если ПарКорСчет.Валютный Тогда
			ЗначениеВозврата = Истина;
		Иначе
			ЗначениеВозврата = Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь
	КонецЕсли;
	
	Возврат ЗначениеВозврата
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидНачисленияПриИзменении(0);
	КорСчетПриИзменении(0);
	СчетПриИзменении(0);
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Валюта.Видимость = Ложь;
		Элементы.ВалютняСумма.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КорСубконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	БюджетныйНаКлиенте.НачалоВыбораСубконто(
	Объект.КорСчет,
	Объект.КорСубконто1,
	1,
	Элемент,
	СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КорСубконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	БюджетныйНаКлиенте.НачалоВыбораСубконто(
	Объект.КорСчет,
	Объект.КорСубконто2,
	2,
	Элемент,
	СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура КорСубконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	БюджетныйНаКлиенте.НачалоВыбораСубконто(
	Объект.КорСчет,
	Объект.КорСубконто3,
	3,
	Элемент,
	СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьСоответственноПодразделениямПриИзменении(Элемент)
	Если Объект.РаспределятьСоответственноПодразделениям Тогда
		Элементы.Подразделение.Доступность = Ложь;
		Объект.КорПодразделение = "";	
	Иначе
		Элементы.Подразделение.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНоменклатуру(Команда)
	
	Если Объект.Распределение.Количество() Тогда
		Если Вопрос("Табличная часть будет очищена. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Объект.Распределение.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПолучитьНоменклатуруСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьНоменклатуруСервер()
	
	Запрос = Новый Запрос;
	Если Объект.РассчитыватьПоКатегориям Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫРАЗИТЬ(БюджетныйОбороты.Субконто1 КАК Справочник.Номенклатура).Категория КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА &Счет41
		               |			ТОГДА БюджетныйОбороты.КоличествоОборот
		               |		ИНАЧЕ -БюджетныйОбороты.КоличествоОборот
		               |	КОНЕЦ КАК КоличествоОборот,
		               |	БюджетныйОбороты.СуммаОборот,
		               |	ВЫБОР
		               |		КОГДА &Счет41
		               |			ТОГДА БюджетныйОбороты.Подразделение
		               |		ИНАЧЕ БюджетныйОбороты.ПодразделениеКор
		               |	КОНЕЦ КАК Подразделение,
		               |	БюджетныйОбороты.КорСубконто2 КАК Заявка
		               |ПОМЕСТИТЬ ВТ_Данные
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			,
		               |			Счет В (&Счет2),
		               |			,
		               |			Предприятия = &Предприятия
		               |				И ВЫБОР
		               |					КОГДА ТИПЗНАЧЕНИЯ(КорСубконто3) = ТИП(Справочник.СтатьиЗатрат)
		               |						ТОГДА КорСубконто3 = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ФормальнаяСебестоимость)
		               |					ИНАЧЕ ИСТИНА
		               |				КОНЕЦ
		               |				И (&Бренд = """"
		               |					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).Бренд = &Бренд)
		               |				И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
		               |					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
		               |				И (&КаналСбыта = """"
		               |					ИЛИ ВЫРАЗИТЬ(КорСубконто2 КАК Справочник.Контрагенты).КаналСбыта = &КаналСбыта)
		               |				И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		               |					ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
		               |			КорСчет В (&Счет1),
		               |			) КАК БюджетныйОбороты
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА &Счет41
		               |				ТОГДА БюджетныйОбороты.КоличествоОборот
		               |			ИНАЧЕ -БюджетныйОбороты.КоличествоОборот
		               |		КОНЕЦ <> 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Номенклатура.Ссылка,
		               |	Номенклатура.Категория
		               |ПОМЕСТИТЬ ВТ_Номенклатура
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |ГДЕ
		               |	НЕ Номенклатура.ПометкаУдаления
		               |	И Номенклатура.Учетная
		               |	И Номенклатура.Наименование = Номенклатура.Категория.Наименование
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Номенклатура.Ссылка КАК Номенклатура,
		               |	ВТ_Данные.КоличествоОборот,
		               |	ВТ_Данные.СуммаОборот,
		               |	ВТ_Данные.Подразделение,
		               |	ВТ_Данные.Заявка,
		               |	ВТ_Номенклатура.Категория
		               |ИЗ
		               |	ВТ_Данные КАК ВТ_Данные
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
		               |		ПО ВТ_Данные.Номенклатура = ВТ_Номенклатура.Категория";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	БюджетныйОбороты.Субконто1 КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА &Счет41
		               |			ТОГДА БюджетныйОбороты.КоличествоОборот
		               |		ИНАЧЕ -БюджетныйОбороты.КоличествоОборот
		               |	КОНЕЦ КАК КоличествоОборот,
		               |	БюджетныйОбороты.СуммаОборот,
		               |	ВЫБОР
		               |		КОГДА &Счет41
		               |			ТОГДА БюджетныйОбороты.Подразделение
		               |		ИНАЧЕ БюджетныйОбороты.ПодразделениеКор
		               |	КОНЕЦ КАК Подразделение,
		               |	БюджетныйОбороты.КорСубконто2 КАК Заявка
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			,
		               |			Счет В (&Счет2),
		               |			,
		               |			Предприятия = &Предприятия
		               |				И (&Бренд = """"
		               |					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).Бренд = &Бренд)
		               |				И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
		               |					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
		               |				И (&КаналСбыта = """"
		               |					ИЛИ ВЫРАЗИТЬ(КорСубконто2 КАК Справочник.Контрагенты).КаналСбыта = &КаналСбыта)
		               |				И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		               |					ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
		               |			КорСчет В (&Счет1),
		               |			) КАК БюджетныйОбороты";
	КонецЕсли;
	
	Счет2 = Новый Массив;
	Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
	Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
	
	//Если Объект.Счет = ПланыСчетов.Учетный._41_02 Тогда
	//	Счет1 = Новый Массив;
	//	Счет1.Добавить(ПланыСчетов.Учетный.Счет6001());
	//	Счет1.Добавить(ПланыСчетов.Учетный.Счет6002());
	//Иначе
		Счет1 = ПланыСчетов.Учетный.Счет9002();
	//КонецЕсли;	
	
	КонецМес = КонецМесяца(Объект.Дата);
	МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
	Запрос.УстановитьПараметр("Дата2", МоментКонца);
	Запрос.УстановитьПараметр("Счет1", Счет1);
	Запрос.УстановитьПараметр("Счет2", Счет2);
	Запрос.УстановитьПараметр("КаналСбыта", Объект.КаналСбыта);
	Запрос.УстановитьПараметр("Бренд", Объект.Бренд);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Объект.ТипНоменклатуры);
	Запрос.УстановитьПараметр("Счет41", Ложь);
	Запрос.УстановитьПараметр("ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Объект.РассчитыватьПоКатегориям Тогда 
		Результат.Свернуть("Номенклатура, Подразделение", "СуммаОборот, КоличествоОборот");
	КонецЕсли;	
	
	Объект.Распределение.Загрузить(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНачисленияПриИзменении(Элемент)
	Если Объект.ВидНачисления = "Ставка" Тогда
		Элементы.Сумма.Видимость = Ложь;
		Элементы.РаспределениеПроцент.Видимость = Ложь;
		Элементы.РаспределениеСтавка.Видимость  = Истина;
		Элементы.Валюта.Видимость			    = Ложь;
		Элементы.ВалютняСумма.Видимость			= Ложь; 		
	Иначе
		Элементы.Сумма.Видимость = Истина;
		Элементы.РаспределениеПроцент.Видимость = Истина;
		Элементы.РаспределениеСтавка.Видимость  = Ложь;
		Элементы.Валюта.Видимость			    = Истина;
		Элементы.ВалютняСумма.Видимость			= Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	РаспределитьСервер();
КонецПроцедуры

&НаСервере
Процедура РаспределитьСервер()
	
	ТаблицаРаспределения = Объект.Распределение.Выгрузить();
	
	//очистим рассчитанные ранее проценты	
	Для Каждого СтрокаТЧ Из ТаблицаРаспределения Цикл
		СтрокаТЧ.Процент = 0;
	КонецЦикла;	
	
	Если Объект.Счет = ПланыСчетов.Учетный.Счет9003() Или Объект.Счет = ПланыСчетов.Учетный.Счет9002() Тогда
		Запрос = Новый Запрос;
		Если Объект.СебестоимостьВыручка = 0 Тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	БюджетныйОбороты.Субконто1 КАК Номенклатура,
			|	БюджетныйОбороты.КоличествоОборот / УчетныйОбороты.КоличествоОборот * 100 КАК Процент,
			|	БюджетныйОбороты.ПодразделениеКор КАК Подразделение,
			|	БюджетныйОбороты.КорСубконто2 КАК Заявка
			|ИЗ
			|	РегистрБухгалтерии.Учетный.Обороты(
			|			&Дата1,
			|			&Дата2,
			|			,
			|			Счет В (&Счет2),
			|			,
			|			Предприятия = &Предприятия
			|				И Субконто1 В (&Номенклатура)
			|				И ПодразделениеКор В (&Подразделение)
			|				И КорСубконто2 В (&Заявка),
			|			КорСчет В (&Счет1),
			|			) КАК БюджетныйОбороты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
			|				&Дата1,
			|				&Дата2,
			|				,
			|				Счет В (&Счет2),
			|				,
			|				Предприятия = &Предприятия
			|					И Субконто1 В (&Номенклатура)
			|					И ПодразделениеКор В (&Подразделение)
			|					И КорСубконто2 В (&Заявка),
			|				КорСчет В (&Счет1),
			|				) КАК УчетныйОбороты
			|		ПО (ИСТИНА)";
			
			Счет2 = Новый Массив;
			Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
			Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
			
			Номенклатура = ТаблицаРаспределения.ВыгрузитьКолонку("Номенклатура");
			Подразделение = ТаблицаРаспределения.ВыгрузитьКолонку("Подразделение");
			Заявка = ТаблицаРаспределения.ВыгрузитьКолонку("Заявка");
			
			КонецМес = КонецМесяца(Объект.Дата);
			МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
			
			Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
			Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
			Запрос.УстановитьПараметр("Дата2", МоментКонца);
			Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет9002());
			Запрос.УстановитьПараметр("Счет2", Счет2);
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			Запрос.УстановитьПараметр("Заявка", Заявка);
		ИначеЕсли Объект.СебестоимостьВыручка = 2 Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	СУММА(УчетныйОбороты.КоличествоОборот * (ВЫРАЗИТЬ(ЕСТЬNULL(УчетныйОбороты.Субконто1.Литраж, 0) КАК ЧИСЛО))) КАК ОбъемОбщий
			               |ПОМЕСТИТЬ ВТ_ОбщееКоличество
			               |ИЗ
			               |	РегистрБухгалтерии.Учетный.Обороты(
			               |			&Дата1,
			               |			&Дата2,
			               |			,
			               |			Счет В (&Счет2),
			               |			,
			               |			Предприятия = &Предприятия
			               |				И ПодразделениеКор В (&Подразделение)
			               |				И Субконто1 В (&Номенклатура)
			               |				И КорСубконто2 В (&Заявка),
			               |			КорСчет В (&Счет1),
			               |			) КАК УчетныйОбороты
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	БюджетныйОбороты.Субконто1 КАК Номенклатура,
			               |	БюджетныйОбороты.КоличествоОборот * (ВЫРАЗИТЬ(ЕСТЬNULL(БюджетныйОбороты.Субконто1.Литраж, 0) КАК ЧИСЛО)) КАК Объем,
			               |	БюджетныйОбороты.ПодразделениеКор КАК Подразделение,
			               |	БюджетныйОбороты.КорСубконто2 КАК Заявка,
			               |	ВТ_ОбщееКоличество.ОбъемОбщий
			               |ИЗ
			               |	РегистрБухгалтерии.Учетный.Обороты(
			               |			&Дата1,
			               |			&Дата2,
			               |			,
			               |			Счет В (&Счет2),
			               |			,
			               |			Предприятия = &Предприятия
			               |				И ПодразделениеКор В (&Подразделение)
			               |				И Субконто1 В (&Номенклатура)
			               |				И КорСубконто2 В (&Заявка),
			               |			КорСчет В (&Счет1),
			               |			) КАК БюджетныйОбороты
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбщееКоличество КАК ВТ_ОбщееКоличество
			               |		ПО (ИСТИНА)";
			
			Счет2 = Новый Массив;
			Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
			Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
			
			
			Номенклатура = ТаблицаРаспределения.ВыгрузитьКолонку("Номенклатура");
			Подразделение = ТаблицаРаспределения.ВыгрузитьКолонку("Подразделение");
			Заявка = ТаблицаРаспределения.ВыгрузитьКолонку("Заявка");
			
			КонецМес = КонецМесяца(Объект.Дата);
			МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
			
			Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
			Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
			Запрос.УстановитьПараметр("Дата2", МоментКонца);
			Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет9002());
			Запрос.УстановитьПараметр("Счет2", Счет2);
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			Запрос.УстановитьПараметр("Заявка", Заявка);
		ИначеЕсли Объект.СебестоимостьВыручка = 1 Тогда
			//Запрос.Текст = 
			//"ВЫБРАТЬ
			//|	БюджетныйОбороты.Субконто1 КАК Номенклатура,
			//|	БюджетныйОбороты.СуммаОборот / УчетныйОбороты.СуммаОборот * 100 КАК Процент,
			//|	БюджетныйОбороты.Подразделение КАК Подразделение,
			//|	БюджетныйОбороты.Субконто2 КАК Заявка
			//|ИЗ
			//|	РегистрБухгалтерии.Учетный.Обороты(
			//|			&Дата1,
			//|			&Дата2,
			//|			,
			//|			Счет В (&Счет2),
			//|			,
			//|			Предприятия = &Предприятия
			//|				И Субконто1 В (&Номенклатура)
			//|				И Подразделение В (&Подразделение)
			//|				И Субконто2 В (&Заявка),
			//|			,
			//|			) КАК БюджетныйОбороты
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
			//|				&Дата1,
			//|				&Дата2,
			//|				,
			//|				Счет В (&Счет2),
			//|				,
			//|				Предприятия = &Предприятия
			//|					И Субконто1 В (&Номенклатура)
			//|					И Подразделение В (&Подразделение)
			//|					И Субконто2 В (&Заявка),
			//|				,
			//|				) КАК УчетныйОбороты
			//|		ПО (ИСТИНА)";
			
			ТаблицаНоменклатур = ТаблицаРаспределения.Скопировать(,"Номенклатура");
			ТаблицаНоменклатур.Свернуть("Номенклатура");
			Номенклатура = ТаблицаНоменклатур.ВыгрузитьКолонку("Номенклатура");
			
			ТаблицаКатегорий = ТаблицаРаспределения.Скопировать(,"Категория");
			ТаблицаКатегорий.Свернуть("Категория");
			Категории = ТаблицаКатегорий.ВыгрузитьКолонку("Категория");
			
			ТаблицаПодразделений = ТаблицаРаспределения.Скопировать(,"Подразделение");
			ТаблицаПодразделений.Свернуть("Подразделение");
			Подразделение = ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
			
			//ТаблицаЗаявки = ТаблицаРаспределения.Скопировать(,"Заявка");
			//ТаблицаЗаявки.Свернуть("Заявка");
			//Заявка = ТаблицаЗаявки.ВыгрузитьКолонку("Заявка");
			
			МоментКонца = Новый Граница(КонецМесяца(Объект.Дата),ВидГраницы.Включая);
						
			ЗапросИтого = Новый Запрос;
			ЗапросИтого.Текст = 
			"ВЫБРАТЬ
			|	УчетныйОбороты.СуммаОборот КАК Сумма
			|ИЗ
			|	РегистрБухгалтерии.Учетный.Обороты(
			|			&Дата1,
			|			&Дата2,
			|			,
			|			Счет В (&Счет2),
			|			,
			|			Предприятия = &Предприятия
			|				И Субконто1 В ИЕРАРХИИ (&Номенклатура)
			|				И Подразделение В (&Подразделение)
			|				И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
			|					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
			|				И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|					ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
			|			НЕ КорСчет В ИЕРАРХИИ (&Счет99)
			|				И НЕ КорСчет В ИЕРАРХИИ (&Счет9009),
			|			) КАК УчетныйОбороты";
			ЗапросИтого.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
			ЗапросИтого.УстановитьПараметр("Предприятия", Объект.Предприятие);
			ЗапросИтого.УстановитьПараметр("Дата2", МоментКонца);
			ЗапросИтого.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет9001());
			ЗапросИтого.УстановитьПараметр("Номенклатура", Категории);
			ЗапросИтого.УстановитьПараметр("Подразделение", Подразделение);
			ЗапросИтого.УстановитьПараметр("ТипНоменклатуры", Объект.ТипНоменклатуры);
			ЗапросИтого.УстановитьПараметр("ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
			ЗапросИтого.УстановитьПараметр("Счет99", ПланыСчетов.Учетный.Счет99());
			ЗапросИтого.УстановитьПараметр("Счет9009", ПланыСчетов.Учетный.Счет9009());

			
			//ЗапросИтого.УстановитьПараметр("Заявка", Заявка);
			ВыборкаИтого = ЗапросИтого.Выполнить().Выбрать();
			СуммаВыручкиИтого = 0;
			Пока ВыборкаИтого.Следующий() Цикл
				СуммаВыручкиИтого = ВыборкаИтого.Сумма;
			КонецЦикла;
			
			Если СуммаВыручкиИтого = 0 Тогда
				Возврат;
			КонецЕсли;	
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЧДока.Номенклатура,
			|	ТЧДока.Подразделение,
			|	ТЧДока.Категория,
			|	ТЧДока.КоличествоОборот
			|ПОМЕСТИТЬ ВТ_ТЧДока
			|ИЗ
			|	&ТЧДока КАК ТЧДока
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(УчетныйОбороты.СуммаОборот) КАК СуммаОборот,
			|	УчетныйОбороты.Подразделение КАК Подразделение,
			|	ВЫРАЗИТЬ(УчетныйОбороты.Субконто1 КАК Справочник.Номенклатура).Категория КАК Категория
			|ПОМЕСТИТЬ ВТ_Обороты
			|ИЗ
			|	РегистрБухгалтерии.Учетный.Обороты(
			|			&Дата1,
			|			&Дата2,
			|			,
			|			Счет В (&Счет2),
			|			,
			|			Предприятия = &Предприятия
			|				И Субконто1 В ИЕРАРХИИ (&Номенклатура)
			|				И Подразделение В (&Подразделение)
			|				И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
			|					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
			|				И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|					ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
			|			НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.РаспределениеПриб))
			|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный._90_9)),
			|			) КАК УчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫРАЗИТЬ(УчетныйОбороты.Субконто1 КАК Справочник.Номенклатура).Категория,
			|	УчетныйОбороты.Подразделение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Обороты.СуммаОборот / &СуммаВыручкиИтого КАК Процент,
			|	ВТ_ТЧДока.Номенклатура,
			|	ВТ_ТЧДока.Подразделение,
			|	ВТ_ТЧДока.КоличествоОборот,
			|	ВТ_ТЧДока.Категория
			|ИЗ
			|	ВТ_ТЧДока КАК ВТ_ТЧДока
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
			|		ПО ВТ_ТЧДока.Подразделение = ВТ_Обороты.Подразделение
			|			И (ВЫРАЗИТЬ(ВТ_ТЧДока.Номенклатура КАК Справочник.Номенклатура).Категория = ВТ_Обороты.Категория)";
			Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
			Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
			Запрос.УстановитьПараметр("Дата2", МоментКонца);
			Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет9001());
			Запрос.УстановитьПараметр("Номенклатура", Категории);
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			Запрос.УстановитьПараметр("ТЧДока", ТаблицаРаспределения);
			Запрос.УстановитьПараметр("СуммаВыручкиИтого", СуммаВыручкиИтого);
			Запрос.УстановитьПараметр("ТипНоменклатуры", Объект.ТипНоменклатуры);
			Запрос.УстановитьПараметр("ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
			
		ИначеЕсли Объект.СебестоимостьВыручка = 3 Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	БюджетныйОбороты.Субконто1 КАК Номенклатура,
			               |	БюджетныйОбороты.СуммаОборот / УчетныйОбороты.СуммаОборот КАК Процент,
			               |	БюджетныйОбороты.ПодразделениеКор КАК Подразделение,
			               |	БюджетныйОбороты.КорСубконто2 КАК Заявка
			               |ИЗ
			               |	РегистрБухгалтерии.Учетный.Обороты(
			               |			&Дата1,
			               |			&Дата2,
			               |			,
			               |			Счет В (&Счет2),
			               |			,
			               |			Предприятия = &Предприятия
			               |				И Субконто1 В (&Номенклатура)
			               |				И ПодразделениеКор В (&Подразделение)
			               |				И КорСубконто2 В (&Заявка)
			               |				И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
			               |					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
			               |				И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			               |					ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
			               |			КорСчет В (&Счет1),
			               |			) КАК БюджетныйОбороты
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
			               |				&Дата1,
			               |				&Дата2,
			               |				,
			               |				Счет В (&Счет2),
			               |				,
			               |				Предприятия = &Предприятия
			               |					И Субконто1 В (&Номенклатура)
			               |					И ПодразделениеКор В (&Подразделение)
			               |					И КорСубконто2 В (&Заявка)
			               |					И (&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.ПустаяСсылка)
			               |						ИЛИ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).ТипНоменклатуры = &ТипНоменклатуры)
			               |					И (&ГруппаНоменклатуры = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			               |						ИЛИ Субконто1 В ИЕРАРХИИ (&ГруппаНоменклатуры)),
			               |				КорСчет В (&Счет1),
			               |				) КАК УчетныйОбороты
			               |		ПО (ИСТИНА)";
			
			Счет2 = Новый Массив;
			Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
			Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
			
			Номенклатура = ТаблицаРаспределения.ВыгрузитьКолонку("Номенклатура");
			Подразделение = ТаблицаРаспределения.ВыгрузитьКолонку("Подразделение");
			Заявка = ТаблицаРаспределения.ВыгрузитьКолонку("Заявка");
			
			КонецМес = КонецМесяца(Объект.Дата);
			МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
			
			Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
			Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
			Запрос.УстановитьПараметр("Дата2", МоментКонца);
			Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет9002());
			Запрос.УстановитьПараметр("Счет2", Счет2);
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			Запрос.УстановитьПараметр("Заявка", Заявка);
			Запрос.УстановитьПараметр("ТипНоменклатуры", Объект.ТипНоменклатуры);
			Запрос.УстановитьПараметр("ГруппаНоменклатуры", Объект.ГруппаНоменклатуры);
		КонецЕсли;
		
	//ИначеЕсли Объект.Счет = ПланыСчетов.Учетный._41_02 Тогда
	//	
	//	Счет2 = Новый Массив;
	//	Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
	//	Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
	//	
	//	Счет1 = Новый Массив;
	//	Счет1.Добавить(ПланыСчетов.Учетный.Счет6001());
	//	Счет1.Добавить(ПланыСчетов.Учетный.Счет6002());
	//	
	//	Номенклатура = ТаблицаРаспределения.ВыгрузитьКолонку("Номенклатура");
	//	Подразделение = ТаблицаРаспределения.ВыгрузитьКолонку("Подразделение");
	//	
	//	КонецМес = КонецМесяца(Объект.Дата);
	//	МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
	//	
	//	ПоКоличеству = Ложь;
	//	ПоЛитражу = Ложь;
	//	ПоСумме = Ложь;
	//	
	//	Если Объект.СебестоимостьВыручка = 0 Тогда
	//		ПоКоличеству = Истина;
	//	ИначеЕсли Объект.СебестоимостьВыручка = 2 Тогда
	//		ПоКоличеству = Истина;
	//		ПоЛитражу = Истина;
	//	Иначе
	//		ПоСумме = Истина;
	//	КонецЕсли;	

	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	БюджетныйОбороты.Субконто1 КАК Номенклатура,
	//	|	ВЫБОР
	//	|		КОГДА &ПоКоличеству
	//	|			ТОГДА ВЫБОР
	//	|					КОГДА &ПоЛитражу
	//	|						ТОГДА БюджетныйОбороты.КоличествоОборот * (ВЫРАЗИТЬ(ЕСТЬNULL(БюджетныйОбороты.Субконто1.Литраж, 0) КАК ЧИСЛО)) / (УчетныйОбороты.КоличествоОборот * (ВЫРАЗИТЬ(ЕСТЬNULL(БюджетныйОбороты.Субконто1.Литраж, 0) КАК ЧИСЛО))) * 100
	//	|					ИНАЧЕ БюджетныйОбороты.КоличествоОборот / УчетныйОбороты.КоличествоОборот * 100
	//	|				КОНЕЦ
	//	|		КОГДА &ПоСумме
	//	|			ТОГДА БюджетныйОбороты.СуммаОборот / УчетныйОбороты.СуммаОборот * 100
	//	|	КОНЕЦ КАК Процент,
	//	|	БюджетныйОбороты.Подразделение
	//	|ИЗ
	//	|	РегистрБухгалтерии.Учетный.Обороты(
	//	|			&Дата1,
	//	|			&Дата2,
	//	|			,
	//	|			Счет В (&Счет2),
	//	|			,
	//	|			Предприятия = &Предприятия
	//	|				И Субконто1 В (&Номенклатура)
	//	|				И Подразделение В (&Подразделение),
	//	|			КорСчет В (&Счет1),
	//	|			) КАК БюджетныйОбороты
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
	//	|				&Дата1,
	//	|				&Дата2,
	//	|				,
	//	|				Счет В (&Счет2),
	//	|				,
	//	|				Предприятия = &Предприятия
	//	|					И Субконто1 В (&Номенклатура)
	//	|					И Подразделение В (&Подразделение),
	//	|				КорСчет В (&Счет1),
	//	|				) КАК УчетныйОбороты
	//	|		ПО (ИСТИНА)";
	//			
	//	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Объект.Дата));
	//	Запрос.УстановитьПараметр("Предприятия", Объект.Предприятие);
	//	Запрос.УстановитьПараметр("Дата2", МоментКонца);
	//	Запрос.УстановитьПараметр("Счет1", Счет1);
	//	Запрос.УстановитьПараметр("Счет2", Счет2);
	//	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	//	Запрос.УстановитьПараметр("ПоСумме", ПоСумме);
	//	Запрос.УстановитьПараметр("ПоКоличеству", ПоКоличеству);
	//	Запрос.УстановитьПараметр("ПоЛитражу", ПоЛитражу);
		
	КонецЕсли;	
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Объект.СебестоимостьВыручка = 1 Тогда	
		ТаблицаРаспределения = Результат;
	Иначе	
		Для Каждого ТекСтрока Из ТаблицаРаспределения Цикл
			//Если Объект.Счет = ПланыСчетов.Учетный._41_02 Тогда
			//	СтруктураПоиска = Новый Структура("Номенклатура, Подразделение", ТекСтрока.Номенклатура, ТекСтрока.Подразделение);
			//Иначе	
				СтруктураПоиска = Новый Структура("Номенклатура, Подразделение,Заявка", ТекСтрока.Номенклатура, ТекСтрока.Подразделение, ТекСтрока.Заявка);
			//КонецЕсли;
			НайденныеСтроки = Результат.НайтиСтроки(СтруктураПоиска);
			Для Каждого Выборка Из НайденныеСтроки Цикл
				Если Объект.СебестоимостьВыручка = 2 Тогда
					ТекСтрока.Процент = (Выборка.Объем / Выборка.ОбъемОбщий) * 100;
				Иначе
					ТекСтрока.Процент = Выборка.Процент;
				КонецЕсли;	
			КонецЦикла;;	
		КонецЦикла;
	КонецЕсли;
	
	Объект.Распределение.Загрузить(ТаблицаРаспределения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Отказ = 1 - ПроверитьЗаполнение();
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	ПараметрыВыбораСтатьи = УЧ_Сервер.ПолучитьПараметрыВыбораСтатьиЗатрат(Объект.Предприятие, Элементы.СтатьяЗатрат.ПараметрыВыбора);
	Элементы.СтатьяЗатрат.ПараметрыВыбора = ПараметрыВыбораСтатьи;
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВалютняСуммаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Валюта) Тогда
		КурсВалюты = ПолучитьКурс(Объект.Валюта);
		Объект.Сумма = КурсВалюты*Объект.ВалютняСумма;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКурс(ПарВалюта)
	
	Отбор = новый Структура("Валюта, БазоваяВалюта",ПарВалюта, Объект.Предприятие.ОсновнаяВалютаУчета);  	
	
	Возврат РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Объект.Дата,ОТбор).курс;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Счет = ПланыСчетов.Учетный.Счет9003();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	
	//Наименование1 = ПолучитьСубконто(2, Объект.Счет);
	//
	//Элементы.СтатьяЗатрат.Заголовок = Наименование1;
	
	Элементы.НеРаспределятьПоРеализациям.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоКоличеству(Команда)
	
	КоличествоИтого = Объект.Распределение.Итог("КоличествоОборот");
	
	НакопленоПроценктов = 0;
	
	Для Каждого СтрокаРаспр Из Объект.Распределение Цикл
		СтрокаРаспр.Процент = СтрокаРаспр.КоличествоОборот / КоличествоИтого * 100;
		НакопленоПроценктов = НакопленоПроценктов + СтрокаРаспр.Процент;
	КонецЦикла;	
	
	Если НакопленоПроценктов <> 100 Тогда
		СтрокаРаспр.Процент = СтрокаРаспр.Процент + (100 - НакопленоПроценктов);
	КонецЕсли;	
	
КонецПроцедуры



