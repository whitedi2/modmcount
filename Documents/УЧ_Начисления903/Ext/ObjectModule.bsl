
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();		
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	
	Если ВидНачисления = "Ставка" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	БюджетныйОбороты.Субконто1 КАК Номенклатура,
		               |	-БюджетныйОбороты.КоличествоОборот КАК Количество,
		               |	БюджетныйОбороты.ПодразделениеКор КАК Подразделение,
		               |	БюджетныйОбороты.КорСубконто2 КАК Заявка
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Обороты(
		               |			&Дата1,
		               |			&Дата2,
		               |			,
		               |			Счет В (&Счет2),
		               |			,
		               |			Предприятия = &Предприятия
		               |				И Субконто1 В (&Номенклатура),
		               |			КорСчет В (&Счет1),
		               |			) КАК БюджетныйОбороты";
		
		
		Счет2 = Новый Массив;
		Счет2.Добавить(ПланыСчетов.Учетный.Счет43());
		Счет2.Добавить(ПланыСчетов.Учетный.Счет41());
		
		
		Номенклатура = Распределение.Выгрузить().ВыгрузитьКолонку("Номенклатура");;
		
		КонецМес = КонецМесяца(Дата);
		МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
		
		Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("Предприятия", Предприятие);
		Запрос.УстановитьПараметр("Дата2", МоментКонца);
		Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет9002());
		Запрос.УстановитьПараметр("Счет2", Счет2);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Результат = Запрос.Выполнить();
	КонецЕсли;
	
	Распределение41 = Ложь;
	
	
	ТекСумма = 0;
	
	Для каждого ТекСтрока Из Распределение Цикл
		Движения.Учетный.Записывать = Истина;
		Движение = Движения.Учетный.Добавить();
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		
		Движение.Период = Дата;
		Если ТекСтрока.Номенклатура.ТипНоменклатуры = Перечисления.сабТипыНоменклатуры.Комплектующие Тогда
			Движение.СчетДт = ПланыСчетов.Учетный.Счет41();
			Движение.ПодразделениеДт = ТекСтрока.Подразделение;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрока.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина)] = Справочники.Склады.НайтиПоНаименованию("транзит комплектующие ВЕДК", Истина);
		Иначе	
			Движение.СчетДт = Счет;
			Движение.ПодразделениеДт = ТекСтрока.Подразделение;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрока.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = СтатьяЗатрат;
		КонецЕсли;
		//Сож+
		//Если Счет = ПланыСчетов.Учетный.Счет9003() Тогда
		//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ЗаявкаНаОтгрузку] = ТекСтрока.Заявка;
		//КонецЕсли;	
		//Сож-
		Движение.СчетКт = КорСчет;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,КорСчет,1,КорСубконто1);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,КорСчет,2,КорСубконто2);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,КорСчет,3,КорСубконто3);
		Если КорСчет.УчетПоПодразделениям Тогда
			Если РаспределятьСоответственноПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрока.Подразделение;
			Иначе
				Движение.ПодразделениеКт = КорПодразделение;
			КонецЕсли;
			
		КонецЕсли;
		
		Сумм = 0;
		Если ВидНачисления = "Ставка" Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Подразделение,Заявка", ТекСтрока.Номенклатура, ТекСтрока.Подразделение, ТекСтрока.Заявка);
			Выборка = Результат.Выбрать();
			Если ЗначениеЗаполнено(ТекСтрока.КоличествоОборот) Тогда
				Сумм = ТекСтрока.КоличествоОборот * ТекСтрока.Ставка;
			ИначеЕсли Выборка.НайтиСледующий(СтруктураПоиска) Тогда
				Сумм = Выборка.Количество * ТекСтрока.Ставка;			
			КонецЕсли;
		Иначе
			Сумм = ТекСтрока.Процент * Сумма / 100;		
		КонецЕсли;
				
		Движение.Сумма = Сумм;
		
		ТекСумма = ТекСумма + Движение.Сумма;
		
		Если КорСчет.Валютный Тогда
			Движение.ВалютаКт = Валюта;
			Движение.ВалютнаяСуммаКт = ТекСтрока.Процент * ВалютняСумма / 100;
		КонецЕсли;
		
		Если ВидНачисления = "Сумма" Тогда
			Если Распределение.Индекс(ТекСтрока) + 1 = Распределение.Количество() Тогда
				Движение.Сумма = Движение.Сумма + (Сумма - ТекСумма); //копейки
			КонецЕсли;
		КонецЕсли;
		Движение.Содержание = Комментарий;
		
	КонецЦикла; 
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//	Если НЕ Распределение.Итог("Процент") = 100 И Распределение.Количество() И ВидНачисления = "Сумма" Тогда
	//	сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
	//	ЭтотОбъект,
	//	"Итого по полю Процент должно равняться 100%.",
	//	"Распределение",
	//	Распределение.Количество(),
	//	"Процент",
	//	Отказ);
	//КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РучнаяКорректировка = Ложь;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры
