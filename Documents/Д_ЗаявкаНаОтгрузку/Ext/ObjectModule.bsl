
Процедура ОбработкаПроведения(Отказ, Режим)
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если (СостояниеДокумента = Перечисления.Д_СостоянияДокументов.Исполнен ИЛИ СостояниеДокумента = Перечисления.Д_СостоянияДокументов.НаИсполнении) И ПометкаУдаления 
			И НЕ ПараметрыСеанса.ТекущийПользователь.ПринадлежитЭлементу(Справочники.Пользователи.Администрирование)
			И НЕ ПараметрыСеанса.ТекущийПользователь = ГлавныйКомДиректор И НЕ ПараметрыСеанса.ТекущийПользователь = КомДиректор И НЕ ПараметрыСеанса.ТекущийПользователь = БухгалтерВодка Тогда
			Если ТипЗаявки = "Водочная" Тогда
				Сообщить("Пометить на удаление согласованную заявку может только " + Строка(БухгалтерВодка) + ".");
			Иначе	
				Сообщить("Пометить на удаление согласованную заявку может только Руководитель КС - (" + Строка(ГлавныйКомДиректор) + ") или Ком. директор - (" + Строка(КомДиректор) + ").");
			КонецЕсли;
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Доступность = Ложь;
	Если НЕ ОбъектКопирования.ПометкаУдаления Тогда //добавил 21.01.13
		АрхивЗаявок.Очистить();
	Иначе
		Документы.Д_ЗаявкаНаОтгрузку.ЗаписатьВАрхивЗаявкуНаОтгрузку(ЭтотОбъект, ОбъектКопирования.Ссылка);
	КонецЕсли;
	ТекущаяЗадача = "";
	ТекущийБизнесПроцесс = "";
	БухНоменклатура = "";
	БухЮрЛицо = "";
	Если ПустаяСтрока(ОбъектКопирования.ТипЗаявки) Тогда
		ТипЗаявки = "Спиртовая";	
	КонецЕсли;
	Автор = "";
	Менеджер = "";
	КомДиректор = "";
	Адресаты.Очистить();
	ДокОснование = "";
	ДатаОтгрузки = Дата('00010101');
	ДатаОтгрузкиДок = Дата('00010101');
	ДатаОтгрузкиПроизводитель1 = Дата('00010101');
	ДатаОтгрузкиПроизводитель2 = Дата('00010101');
	ИсходнаяЧастьЗаполнена = Ложь;
	ТекПризнак = Номенклатура.ПризнакНоменклатуры;
	Если НЕ ТекПризнак = "Производство" И НЕ ТекПризнак = "Вторичная переработка" Тогда
		Номенклатура = "";
	КонецЕсли;
	ТекПризнак = Номенклатура2.ПризнакНоменклатуры;
	Если НЕ ТекПризнак = "Производство" И НЕ ТекПризнак = "Вторичная переработка" Тогда
		Номенклатура2 = "";
	КонецЕсли;
	УИДСтрокиГрафика = "";
	ЛимитДЗ = 0;
	ЛимитПДЗ = 0;
	ДЗ_ПоЗаявкам = 0;
	ДЗ_Просроченная = 0;
	ДЗ_Просроченная2 = 0;
	ДзОбщая = 0;
	ДзПросроченная = 0;
	КоличествоДнейПросрочки = 0;
	КоличествоДнейПросрочки2 = 0;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаОтгрузку") Тогда
		// Заполнение шапки
		//Автор = ДанныеЗаполнения.Автор;
		Верх = ДанныеЗаполнения.Верх;
		ВидДоставки = ДанныеЗаполнения.ВидДоставки;
		Водитель = ДанныеЗаполнения.Водитель;
		ГлавныйКомДиректор = ДанныеЗаполнения.ГлавныйКомДиректор;
		Грузополучатель = ДанныеЗаполнения.Грузополучатель;
		ДатаОтгрузки = ДанныеЗаполнения.ДатаОтгрузки;
		ДатаОтгрузкиДок = ДанныеЗаполнения.ДатаОтгрузкиДок;
		ДзОбщая = ДанныеЗаполнения.ДзОбщая;
		ДзПросроченная = ДанныеЗаполнения.ДзПросроченная;
		Док = ДанныеЗаполнения.Док;
		Доставка = ДанныеЗаполнения.Доставка;
		// доставка авто2
		ДоставкаАвто2 = ДанныеЗаполнения.ДоставкаАвто2;
		//Доступность = ДанныеЗаполнения.Доступность;
		Качество = ДанныеЗаполнения.Качество;
		Количество = ДанныеЗаполнения.Количество;
		КомДиректор = ДанныеЗаполнения.КомДиректор;
		//Менеджер = ДанныеЗаполнения.Менеджер;
		Отсрочка = ДанныеЗаполнения.Отсрочка;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Предприятие = ДанныеЗаполнения.Предприятие;
		Примечания = ДанныеЗаполнения.Примечания;
		ПроцентПредоплаты = ДанныеЗаполнения.ПроцентПредоплаты;
		//СостояниеДокумента = ДанныеЗаполнения.СостояниеДокумента;
		Тема = ДанныеЗаполнения.Тема;
		УсловияОплаты = ДанныеЗаполнения.УсловияОплаты;
		Учетчик = ДанныеЗаполнения.Учетчик;
		УчетчикДоки = ДанныеЗаполнения.УчетчикДоки;
		Файл = ДанныеЗаполнения.Файл;
		Цена = ДанныеЗаполнения.Цена;
		ЦенаДок = ДанныеЗаполнения.ЦенаДок;
		Для Каждого ТекСтрокаАрхивЗаявок Из ДанныеЗаполнения.АрхивЗаявок Цикл
			НоваяСтрока = АрхивЗаявок.Добавить();
			НоваяСтрока.Автор = ТекСтрокаАрхивЗаявок.Автор;
			НоваяСтрока.Верх = ТекСтрокаАрхивЗаявок.Верх;
			НоваяСтрока.ВидДоставки = ТекСтрокаАрхивЗаявок.ВидДоставки;
			НоваяСтрока.Водитель = ТекСтрокаАрхивЗаявок.Водитель;
			НоваяСтрока.ГлавныйКомДиректор = ТекСтрокаАрхивЗаявок.ГлавныйКомДиректор;
			НоваяСтрока.Грузополучатель = ТекСтрокаАрхивЗаявок.Грузополучатель;
			НоваяСтрока.ДатаАрхивации = ТекСтрокаАрхивЗаявок.ДатаАрхивации;
			НоваяСтрока.ДатаОтгрузки = ТекСтрокаАрхивЗаявок.ДатаОтгрузки;
			НоваяСтрока.ДатаОтгрузкиДок = ТекСтрокаАрхивЗаявок.ДатаОтгрузкиДок;
			НоваяСтрока.ДзОбщая = ТекСтрокаАрхивЗаявок.ДзОбщая;
			НоваяСтрока.ДзПросроченная = ТекСтрокаАрхивЗаявок.ДзПросроченная;
			НоваяСтрока.Док = ТекСтрокаАрхивЗаявок.Док;
			НоваяСтрока.Доставка = ТекСтрокаАрхивЗаявок.Доставка;
			НоваяСтрока.ДоставкаАвто2 = ТекСтрокаАрхивЗаявок.ДоставкаАвто2;
			НоваяСтрока.Качество = ТекСтрокаАрхивЗаявок.Качество;
			НоваяСтрока.Количество = ТекСтрокаАрхивЗаявок.Количество;
			НоваяСтрока.КомДиректор = ТекСтрокаАрхивЗаявок.КомДиректор;
			НоваяСтрока.Менеджер = ТекСтрокаАрхивЗаявок.Менеджер;
			НоваяСтрока.Отсрочка = ТекСтрокаАрхивЗаявок.Отсрочка;
			НоваяСтрока.Подразделение = ТекСтрокаАрхивЗаявок.Подразделение;
			НоваяСтрока.Предприятие = ТекСтрокаАрхивЗаявок.Предприятие;
			НоваяСтрока.Примечания = ТекСтрокаАрхивЗаявок.Примечания;
			НоваяСтрока.ПроцентПредоплаты = ТекСтрокаАрхивЗаявок.ПроцентПредоплаты;
			НоваяСтрока.Тема = ТекСтрокаАрхивЗаявок.Тема;
			НоваяСтрока.УсловияОплаты = ТекСтрокаАрхивЗаявок.УсловияОплаты;
			НоваяСтрока.Учетчик = ТекСтрокаАрхивЗаявок.Учетчик;
			НоваяСтрока.УчетчикДоки = ТекСтрокаАрхивЗаявок.УчетчикДоки;
			НоваяСтрока.Цена = ТекСтрокаАрхивЗаявок.Цена;
			НоваяСтрока.ЦенаДок = ТекСтрокаАрхивЗаявок.ЦенаДок;
		КонецЦикла;
		Для Каждого ТекСтрокаДопСогласование Из ДанныеЗаполнения.ДопСогласование Цикл
			НоваяСтрока = ДопСогласование.Добавить();
			НоваяСтрока.СубъектСогласования = ТекСтрокаДопСогласование.СубъектСогласования;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если НЕ Ссылка.Пустая() Тогда
	//	БПСервер.ЗаполнитьТекБПиЗадачу(ЭтотОбъект);
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(Предприятие.Куратор) И Адресаты.Найти(Предприятие.Куратор, "Пользователь") = Неопределено Тогда
	//	НоваяСтрока = Адресаты.Добавить();
	//	НоваяСтрока.Пользователь = Предприятие.Куратор;
	//КонецЕсли;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//Если ТипЗаявки = "Водочная" И БухгалтерВодка.Пустая() Тогда
	//	сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
	//	ЭтотОбъект,
	//	"Не указан бухгалтер!",
	//	,
	//	,
	//	"БухгалтерВодка",
	//	Отказ);		
	//КонецЕсли;
	Если НЕ ТипЗаявки = "Водочная" И ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.Контрагенты") И Не ЗначениеЗаполнено(Договор) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		ЭтотОбъект,
		"Не указан договор.",
		,
		,
		"Договор",
		Отказ);		
	КонецЕсли;
	Если НЕ ТипЗаявки = "Водочная" И ТипЗнч(Грузополучатель) = Тип("СправочникСсылка.Контрагенты") И Не ЗначениеЗаполнено(Протокол) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		ЭтотОбъект,
		"Не указан протокол.",
		,
		,
		"Протокол",
		Отказ);		
	КонецЕсли;
	Если НЕ ТипЗаявки = "Водочная" И Не ЗначениеЗаполнено(Номенклатура) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		ЭтотОбъект,
		"Не указана номенклатура.",
		,
		,
		"Номенклатура",
		Отказ);		
	КонецЕсли;
	
	Если НЕ ТипРеализации = "ПрочаяПродукция" И НЕ ТипРеализации = "Спирт№2" И НЕ ЗначениеЗаполнено(ДокОснование) Тогда //до ведения графика №2
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		ЭтотОбъект,
		"Не заполнена ссылка на график отгрузок.",
		,
		,
		"ДокОснование",
		Отказ);		
	КонецЕсли;

	
КонецПроцедуры

Процедура ОткрытьФормуФакт() Экспорт
	Форма = ЭтотОбъект.ПолучитьФорму("ФормаФактОтгрузки");
	//Форма = ПолучитьФорму("ФормаФактОтгрузки");
	Форма.Открыть();
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры



