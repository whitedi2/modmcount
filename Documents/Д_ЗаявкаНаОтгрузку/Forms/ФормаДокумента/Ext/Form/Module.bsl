&НаСервереБезКонтекста
Функция ПоискУжеЗапущенныхБП(Ссылка)
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Задача.Ссылка
	               |ИЗ
	               |	Задача.Задача КАК Задача
	               |ГДЕ
	               |	Задача.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка.Количество();
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПоискБП(Ссылка)
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкиНаОтгрузку.Ссылка
	               |ИЗ
	               |	БизнесПроцесс.ЗаявкиНаОтгрузку КАК ЗаявкиНаОтгрузку
	               |ГДЕ
	               |	ЗаявкиНаОтгрузку.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
КонецФункции // ()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ДоговорПриИзменении.
//
Функция ПолучитьДанныеОрганизацияПриИзменении(Организация)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("НаименованиеПолное", Организация.НаименованиеПолное);
	СтруктураДанные.Вставить("КодОКАТО", Организация.КодПоОКАТО);
	СтруктураДанные.Вставить("БанковскийСчет", Организация.ОсновнойБанковскийСчет);
	СтруктураДанные.Вставить("ТекстКорреспондента", Организация.ОсновнойБанковскийСчет.ТекстКорреспондента);
	СтруктураДанные.Вставить("ИННПлательщика", Организация.ИНН);
	СтруктураДанные.Вставить("КПППлательщика", Организация.КПП);
	СтруктураДанные.Вставить("ЭтоФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеОрганизацияПриИзменении()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ДоговорПриИзменении.
//
Функция ПолучитьДанныеКонтрагентПриИзменении(Контрагент)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("НаименованиеПолное", Контрагент.НаименованиеПолное);
	СтруктураДанные.Вставить("СчетКонтрагента", Контрагент.ОсновнойБанковскийСчет);
	СтруктураДанные.Вставить("ИННПолучателя", Контрагент.ИНН);
	СтруктураДанные.Вставить("КПППолучателя", Контрагент.КПП);
	СтруктураДанные.Вставить("НазначениеПлатежа", Контрагент.ОсновнойБанковскийСчет.ТекстНазначения);
	СтруктураДанные.Вставить("ТекстКорреспондента", Контрагент.ОсновнойБанковскийСчет.ТекстКорреспондента);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеКонтрагентПриИзменении()


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекБП = БПСервер.НайтиТекущийБПСервер(Объект.Ссылка);
	Иначе	
		ТекБП = Неопределено;
	КонецЕсли;
	Если НЕ ТекБП = Неопределено И НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") Тогда
		ОснованиеЗаблокирован = БюджетныйНаСервере.ВернутьРеквизит(ТекБП, "ОснованиеЗаблокирован");
		БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, ОснованиеЗаблокирован);
		Если НЕ Элементы.Найти("ФормаДокументД_ЗаявкаНаОтгрузкуСогласовать") = Неопределено Тогда
			Если БПСервер.СравнитьСтадию("Действие1", Объект.Ссылка) И НЕ ОснованиеЗаблокирован И Не БПСервер.ПолучитьМассивПользователей().Найти(Объект.Автор) = Неопределено Тогда
				Элементы.ФормаДокументД_ЗаявкаНаОтгрузкуСогласовать.Доступность = Истина;
				Элементы.ФормаДокументД_ЗаявкаНаОтгрузкуСогласовать.Заголовок = "Стартовать бизнес-процесс повторно";
			Иначе
				Элементы.ФормаДокументД_ЗаявкаНаОтгрузкуСогласовать.Доступность = Ложь;		
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ПустаяСтрока(Объект.Грузополучатель) Тогда
			Объект.Грузополучатель = ПустойКонтрагент();	
		КонецЕсли;
		
		// Создание описателя типов для таблицы значений
		КС = Новый КвалификаторыСтроки(150);
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
		Массив.Добавить(Тип("СправочникСсылка.Предприятия"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
		
		Элементы.Грузоплоучатель1.ОграничениеТипа = ОписаниеТиповС;
		Элементы.Грузоплоучатель2.ОграничениеТипа = ОписаниеТиповС;
		ВидимостьИДоступностьЭлементов();
		
	КонецЕсли;
	
	Элементы.ФормаАрхив.Доступность = Объект.АрхивЗаявок.Количество();
	Элементы.ОчиститьИсторию.Доступность = Объект.АрхивЗаявок.Количество();
	
	ТипЗаявкиПриИзменении(0);
	ВариантУсловийОплатыПриИзменении(0);
	
	СредняяЦена = ?(Объект.УсловияВодка.Итог("Количество"), Объект.УсловияВодка.Итог("Сумма") / Объект.УсловияВодка.Итог("Количество"), 0);	
	
	ЕдПриИзменении(0);
	ЗакупнойПриИзменении(Неопределено);
	Закупной1ПриИзменении(Неопределено);
	ИсходнаяЧастьЗаполненаПриИзменении(Неопределено);
	
	// di 20.05.13
	//Элементы.ГруппаДетализация.Видимость = Объект.АвтоДоставкаДоки И ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	Элементы.Детализация.Видимость = ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	Элементы.ФактическийОбъем.ТолькоПросмотр = Ложь;
	Элементы.СуммаОтгрузкиФактическая.ТолькоПросмотр = Ложь;
	
	Если Не РежимВосстановления Тогда
		ЭтаФорма.ПодключитьОбработчикОжидания("АвтосохранениеРеквизитовФормыНаКлиенте", 30);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустойКонтрагент()
	Возврат Справочники.Контрагенты.ПустаяСсылка();	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ФинансистСнабжение()
	Возврат ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.ФинансистСнабжение;
КонецФункции // ()


&НаСервереБезКонтекста
Функция ВернутьСостояниеПодготовку()
	Возврат Перечисления.Д_СостоянияДокументов.НаСогласовании;
КонецФункции // ()
 


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если Объект.ОтветственныйЗаГрафик.Пустая() Тогда
	//	Объект.ОтветственныйЗаГрафик = БПСервер.ВернутьЗамещающего(Константы.БП_ОтветственныйЗаГрафик.Получить()).ТекПользователь;
	//Иначе

	//КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СостояниеДокумента = Перечисления.Д_СостоянияДокументов.НаПодготовке;	
		//Объект.БухгалтерВодка = БПСервер.ВернутьЗамещающего(Константы.БП_БухгалтерВодка.Получить()).ТекПользователь;		
		////Объект.ГлавныйКомДиректор = БПСервер.ВернутьЗамещающего(Константы.БП_РуководительКС.Получить()).ТекПользователь;
		//Объект.УчетчикОТК = БПСервер.ВернутьЗамещающего(Константы.БП_УчетчикОТК.Получить()).ТекПользователь;
		Строка = Объект.Адресаты.Добавить();
		//Строка.Пользователь =  Константы.ОтветственныйРАР.Получить();
	КонецЕсли;
	
	//если МАО замещают
	Если Объект.ГлавныйКомДиректор = Объект.ОтветственныйЗаГрафик Тогда
		Объект.ОтветственныйЗаГрафик = "";
	КонецЕсли;
	Контрагент = Объект.Грузополучатель;
	Количество = Объект.Количество;
	ВидФормы = "Обычная";
	сабОбщегоНазначения.ОбновитьКоличествоПрикрепленныхФайловСервер(ЭтаФорма);
	Если Параметры.Свойство("РежимВосстановления") и Параметры.РежимВосстановления Тогда
		сабОбщегоНазначения.ВосстановлениеРеквизитовФормы(ЭтаФорма);
		РежимВосстановления = Истина;
	Иначе 
		РежимВосстановления = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Автор.Пустая() Тогда
		Объект.Автор = БюджетныйНаСервере.ПолучитьПользователя();	
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.КомДиректор) Тогда
		Объект.КомДиректор = ПолучитьКомДира(Объект.Грузополучатель, Объект.Дата);
	КонецЕсли;
	Если Объект.ТипЗаявки = "Водочная" Тогда
		Объект.УчетчикДоки = "";
		Объект.УчетчикПровоз = "";
		Объект.ДиректорДоки = "";
		Объект.ДиректорДокиПровоз = "";
	Иначе
		Объект.БухгалтерВодка = "";		
	КонецЕсли;
	
	Отказ = 1 - ПроверитьЗаполнение();
	
	сабОбщегоНазначения.ОчиститьАвтосохраненияОбъекта(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Функция ВернутьУсловияОплаты(УсловияОплаты)
	УсловияТЧ = УсловияОплаты.УсловияКонтрагента;
	Если НЕ УсловияТЧ.Количество() Тогда
		Возврат Новый Структура("ПроцентПредоплаты, Отсрочка, КоличествоСтрок", 0, 0, 0);	
	Иначе
		Возврат Новый Структура("ПроцентПредоплаты, Отсрочка, КоличествоСтрок", РегистрыСведений.ОтсрочкаПоДоговорам.ПолучитьПоследнее(Объект.Дата, Новый Структура("Договор", УсловияОплаты)).Предоплата, РегистрыСведений.ОтсрочкаПоДоговорам.ПолучитьПоследнее(Объект.Дата, Новый Структура("Договор", УсловияОплаты)).Отсрочка, УсловияТЧ.Количество());	
	КонецЕсли;
	
КонецФункции // ()
 

&НаКлиенте
Процедура УсловияОплатыПриИзменении(Элемент)
	УсловияТЧ = ВернутьУсловияОплаты(Объект.УсловияОплаты);
	Если УсловияТЧ.КоличествоСтрок > 1 Тогда
		Элементы.ПроцентПредоплаты.Видимость = Ложь;	
		Элементы.Отсрочка.Видимость = Ложь;
	ИначеЕсли УсловияТЧ.КоличествоСтрок Тогда
		Отсрочка = УсловияТЧ.Отсрочка;
		ПроцентПредоплаты = УсловияТЧ.ПроцентПредоплаты;	
		Элементы.ПроцентПредоплаты.Видимость = Истина;	
		Элементы.Отсрочка.Видимость = Истина;
	КонецЕсли; 
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКомДира(Грузополучатель, ТекДата)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор,
	               |	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор.Коммерсант КАК Коммерсант
	               |ИЗ
	               |	РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата1, Контрагент = &Контрагент) КАК КоммерческиеДиректорыСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата1", ТекДата);
	Запрос.УстановитьПараметр("Контрагент", Грузополучатель);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Коммерсант;
	Иначе
		Возврат Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РасчитатьМаршрут(Команда)
	//Если Вопрос("Расчет нового маршрура заменит предыдущий. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да   Тогда
	//	Объект.Учетчик = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Учетчик");
	//	Объект.УчетчикДоки = БюджетныйНаСервере.ВернутьРеквизит(Объект.Док, "Учетчик");
	//	Объект.УчетчикПровоз = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз, "Учетчик");
	//	Объект.ДиректорДоки = БюджетныйНаСервере.ВернутьРеквизит(Объект.Док, "Директор");
	//	Объект.ДиректорДокиПровоз = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз, "Директор");
	//	Объект.ОтветственныйЗаГрафик = ПолучитьМВА();
	//	Объект.ГлавныйКомДиректор = ПолучитьМАО();
	//	Объект.КомДиректор = ПолучитьКомДира(Объект.Грузополучатель, Объект.Дата);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	Если НЕ Объект.Предприятие.Пустая() Тогда
		
		Объект.Учетчик = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Учетчик");
		Объект.РуководительПроекта = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Директор");
		Объект.ОтветственныйЗаОтгрузку = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "ОтветственныйЗаОтгрузку");
		
		Если Объект.Подразделение.Пустая() Тогда
			Объект.Подразделение = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "ВидДеятельности");
		
			
		
		КонецЕсли;
		
		ОбновитьEmailРассылку();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьEmailРассылку()
	Объект.ДопСписокРеспондентов.Очистить();
	МассивРеспондентов = ПолучитьДопРеспондентов(Объект.Предприятие);
	Для каждого ТекРеспондент Из МассивРеспондентов Цикл
		НоваяСтрока = Объект.ДопСписокРеспондентов.Добавить();
		НоваяСтрока.EMail = ТекРеспондент;			
		НоваяСтрока.Предприятие = Объект.Предприятие;			
	КонецЦикла;
	
	МассивРеспондентов2 = ПолучитьДопРеспондентов(Объект.Док);
	Для каждого ТекРеспондент Из МассивРеспондентов2 Цикл
		НоваяСтрока = Объект.ДопСписокРеспондентов.Добавить();
		НоваяСтрока.EMail = ТекРеспондент;			
		НоваяСтрока.Предприятие = Объект.Док;			
	КонецЦикла; 
	
	МассивРеспондентов3 = ПолучитьДопРеспондентов(Объект.ДокиНаПровоз);
	Для каждого ТекРеспондент Из МассивРеспондентов3 Цикл
		НоваяСтрока = Объект.ДопСписокРеспондентов.Добавить();
		НоваяСтрока.EMail = ТекРеспондент;			
		НоваяСтрока.Предприятие = Объект.ДокиНаПровоз;			
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьРеквизитовДок()
	
	Элементы.ПодразделениеДок.Видимость = ЗначениеЗаполнено(Объект.Док);
	Элементы.Группа39.Видимость = ЗначениеЗаполнено(Объект.Док);
	Элементы.ДатаОтгрузкиДок.Видимость = ЗначениеЗаполнено(Объект.Док);
	
	Элементы.ПодразделениеДок1.Видимость = ЗначениеЗаполнено(Объект.Док);
	Элементы.Группа73.Видимость = ЗначениеЗаполнено(Объект.Док);
	Элементы.ДатаОтгрузкиДок1.Видимость = ЗначениеЗаполнено(Объект.Док);
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьРеквизитовДокПровоз()
	
	Элементы.ПодразделениеДокПровоз.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	Элементы.ЦенаДокПровоз.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	Элементы.ДатаОтгрузкиДокПровоз.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	
	Элементы.ПодразделениеДокПровоз1.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	Элементы.ЦенаДокПровоз1.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	Элементы.ДатаОтгрузкиДокПровоз1.Видимость = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
КонецПроцедуры





&НаКлиенте
Процедура Редактировать(Команда)
	Если ПоискТрат(Объект.Ссылка) Тогда
		Предупреждение("По данной заявке на отгрузку существует заявка на согласование трат. Редактирование заявки невозможно.");
		Возврат;	
	КонецЕсли;
	Если Вопрос("Включение возможности редактирования автоматически отменяет все согласования по заявке. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		БП = ПоискБП(Объект.Ссылка);
		Если НЕ БП = Неопределено Тогда
			Объект.Доступность = Ложь;
			Элементы.ФормаСоздатьБП.Доступность = Истина;
			
			Элементы.Группа11.ТолькоПросмотр = Ложь;
			Элементы.СоздатьКонтрагента2.Доступность = Истина;
			Элементы.СоздатьКонтрагента.Доступность = Истина;
			Элементы.РассчитатьДЗ.Доступность = Истина;
			Элементы.РассчитатьДЗ1.Доступность = Истина;
			
			
			
			//Элементы.ФормаРедактировать.Доступность = Ложь;
			Элементы.ФормаСоздатьБП.Заголовок = "Повторить согласование и закрыть";
			//ЗаписатьВАрхив();
			Элементы.ФормаАрхив.Доступность = Объект.АрхивЗаявок.Количество();
			УдалитьБПИЗадачи(Объект.Ссылка, "ЗаявкиНаОтгрузку");
			Записать();
		Иначе
			Предупреждение("Бизнес процесс не найден!");		
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискТрат(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_СогласованиеТрат.Ссылка
	|ИЗ
	|	Документ.Д_СогласованиеТрат КАК Д_СогласованиеТрат
	|ГДЕ
	|	Д_СогласованиеТрат.ДокОснование = &ДокОснование";
	
	Запрос.УстановитьПараметр("ДокОснование", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Возврат Выборка.Следующий();
	
	
КонецФункции // ()

	
 

&НаКлиенте
Процедура ИсторияДокумента(Команда)
	//ТабДок = Новый ТабличныйДокумент;
	//БПСервер.ПечатьИсторииЗаявкиОтгрузки(ТабДок, Объект.Ссылка);

	//ТабДок.ОтображатьСетку = Ложь;
	//ТабДок.Защита = Ложь;
	//ТабДок.ТолькоПросмотр = Истина;
	//ТабДок.ОтображатьЗаголовки = Истина;
	//ТабДок.АвтоМасштаб = Истина;
	//
	//ТабДок.Показать();
КонецПроцедуры


 Процедура УдалитьБПИЗадачи(Ссылка, ВидДокумента)
	//Если Ссылка.ПометкаУдаления Тогда //при удалении бизнес-процесса удаляем задачи
	
	//удаляем БП
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкиНаОтгрузку.Ссылка
	               |ИЗ
	               |	БизнесПроцесс." + ВидДокумента + " КАК ЗаявкиНаОтгрузку
	               |ГДЕ
	               |	ЗаявкиНаОтгрузку.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	ВыборкаЗадачи = Результат.Выбрать();
	
	Пока ВыборкаЗадачи.Следующий() Цикл
		ТекБП = ВыборкаЗадачи.Ссылка.ПолучитьОбъект();
		ТекБП.Удалить();
	КонецЦикла;
	
	//удаляем задачи
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Задача.Ссылка
				   |ИЗ
				   |	Задача.Задача КАК Задача
				   |ГДЕ
				   |	Задача.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	ВыборкаЗадачи = Результат.Выбрать();
	
	Пока ВыборкаЗадачи.Следующий() Цикл
		ТекБП = ВыборкаЗадачи.Ссылка.ПолучитьОбъект();
		ТекБП.Удалить();
	КонецЦикла;
	Объект.ТекущаяЗадача = "";
	Объект.ТекущийБизнесПроцесс = "";
КонецПроцедуры

&НаКлиенте
Процедура ВидДоставкиПриИзменении(Элемент)
	Если Объект.ВидДоставки = "Жд" Тогда
		Объект.Водитель = "";
		Объект.Доставка = 0;
		// 06.06.2012 доставка авто2
		Объект.ДоставкаАвто2 = 0;
		Элементы.Водитель.Доступность = Ложь;
		Элементы.Доставка.Доступность = Ложь;
		Элементы.ДоставкаАвто2.Доступность = Ложь;
		Элементы.ДоставкаВЦене.Доступность = Ложь;
		Элементы.ДоставкаВЦенеАвто2.Доступность = Ложь;
		Предупреждение("Ж/д доставка указывается в примечаниях!");
	Иначе
		Элементы.Водитель.Доступность = Истина;
		Элементы.Доставка.Доступность = Истина;
		Элементы.ДоставкаАвто2.Доступность = Истина;
		Элементы.ДоставкаВЦене.Доступность = Истина;
		Элементы.ДоставкаВЦенеАвто2.Доступность = Истина;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьДЗ(Команда)
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Предприятия", Объект.Док);
	ТекДата = КонецДня(БПСервер.СерверноеВремя());
	//ПараметрыОтчета.Вставить("Дата1", Объект.Дата); //поправил по просьбе Манохиной. было датаотгрущки
	ПараметрыОтчета.Вставить("Дата1", ТекДата);
	ПараметрыОтчета.Вставить("Контрагент", Объект.Грузополучатель);
	ТТ = Новый ТабличныйДокумент;
	СтруктураВозврата = УЧ_Сервер.РассчитатьДЗСервер(ПараметрыОтчета, ТТ, Истина);
	Объект.ДзОбщая = СтруктураВозврата.ДзИтого;
	Объект.ДзПросроченная = СтруктураВозврата.ДзПросроченная;
	
	Лимиты = БюджетныйНаСервере.ПолучитьТекущиеУсловияКонтрагента(Объект.Грузополучатель, Объект.Дата); 
	
	Если Лимиты.Свойство("ТекущийЛимитДЗ") Тогда
		Объект.ЛимитДЗ = Лимиты.ТекущийЛимитДЗ;
	КонецЕсли;
	
	Если Лимиты.Свойство("ТекущийЛимитПДЗ") Тогда
		Объект.ЛимитПДЗ = Лимиты.ТекущийЛимитПДЗ;
	КонецЕсли;	
		
	// di рассчет просрочки
	Объект.ДЗ_Просроченная = СтруктураВозврата.ДзПросроченная - СтруктураВозврата.ДзПросроченная2;
	Объект.ДЗ_Просроченная2 = СтруктураВозврата.ДзПросроченная2;
	Объект.КоличествоДнейПросрочки = ?(ТипЗнч(СтруктураВозврата.ДатаПросрочки) = Тип("Дата"), (НачалоДня(ТекДата) - НачалоДня(СтруктураВозврата.ДатаПросрочки)) / (24*60*60), 0);
	Элементы.КоличествоДнейПросрочки.Подсказка = "Дата первой просрочки: " + Строка(СтруктураВозврата.ДатаПросрочки);
	Объект.КоличествоДнейПросрочки2 = ?(ТипЗнч(СтруктураВозврата.ДатаПросрочки2) = Тип("Дата"), (НачалоДня(ТекДата) - НачалоДня(СтруктураВозврата.ДатаПросрочки2)) / (24*60*60), 0);
	Элементы.КоличествоДнейПросрочки2.Подсказка = "Дата первой просрочки: " + Строка(СтруктураВозврата.ДатаПросрочки2);
	
	ДЗ_По_Заявкам = РасчитатьДЗПоЗАявкам();
	
КонецПроцедуры

&НаСервере
Функция РасчитатьДЗПоЗАявкам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_ЗаявкаНаРеализациюПродукции.Ссылка КАК Заявка,
	               |	Д_ЗаявкаНаРеализациюПродукции.Цена * Д_ЗаявкаНаРеализациюПродукции.КоличествоДок КАК Сумма
	               |ИЗ
	               |	Документ.Д_ЗаявкаНаОтгрузку КАК Д_ЗаявкаНаРеализациюПродукции
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.Задача КАК Задача
	               |		ПО Д_ЗаявкаНаРеализациюПродукции.Ссылка = Задача.Заявка
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &Группа
	               |				ТОГДА Д_ЗаявкаНаРеализациюПродукции.Грузополучатель.Родитель В (&ГруппаКомпаний)
	               |			ИНАЧЕ Д_ЗаявкаНаРеализациюПродукции.Грузополучатель В (&Контрагент)
	               |		КОНЕЦ
	               |	И Д_ЗаявкаНаРеализациюПродукции.ПометкаУдаления = ЛОЖЬ
	               |	И (Задача.ТочкаМаршрута В (&точки)
	               |			ИЛИ Д_ЗаявкаНаРеализациюПродукции.ДатаОтгрузки > &ТекДата)
	               |	И (Задача.Выполнена = ЛОЖЬ
	               |			ИЛИ Д_ЗаявкаНаРеализациюПродукции.ДатаОтгрузки > &ТекДата)
	               |	И НЕ Д_ЗаявкаНаРеализациюПродукции.Ссылка = &Ссылка
	               |	И Д_ЗаявкаНаРеализациюПродукции.СторонняяОтгрузка = ЛОЖЬ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_ЗаявкаНаРеализациюПродукции.Ссылка,
	               |	Д_ЗаявкаНаРеализациюПродукции.Цена * Д_ЗаявкаНаРеализациюПродукции.КоличествоДок";
	
	
	Группа = Ложь;
	Если ТипЗнч(Объект.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		ТекРодитель = Объект.Грузополучатель.Родитель;
		Если ЗначениеЗаполнено(ТекРодитель) И ТекРодитель.ГруппаКлиентов Тогда
			Группа = Истина;
			ГруппаКомпаний = ТекРодитель;
		КонецЕсли;
	КонецЕсли;
	
	Точки = Новый массив;
	Точки.Добавить(БизнесПроцессы.СогласованиеОбщее.ТочкиМаршрута.Действие5);
	Точки.Добавить(БизнесПроцессы.СогласованиеОбщее.ТочкиМаршрута.Действие2);
	Точки.Добавить(БизнесПроцессы.СогласованиеОбщее.ТочкиМаршрута.Действие3);
	Точки.Добавить(БизнесПроцессы.СогласованиеОбщее.ТочкиМаршрута.Действие1);
	
	Запрос.УстановитьПараметр("Группа", Группа);
	Запрос.УстановитьПараметр("ГруппаКомпаний", ГруппаКомпаний);
	Запрос.УстановитьПараметр("Контрагент", Объект.Грузополучатель);
	Запрос.УстановитьПараметр("точки", Точки);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
		
	ДЗПоЗаявкам = 0;
		
	Пока Выборка.Следующий() Цикл
		
		Другая = Объект.ДругиеЗаявки.Добавить();
		ЗаполнитьЗначенияСвойств(Другая, Выборка);
			
		ДЗПоЗаявкам = ДЗПоЗаявкам + Выборка.Сумма;	
		
	КонецЦикла;
	
	Если ДЗПоЗаявкам Тогда		
		Элементы.ДругиеЗаявки.Видимость = Истина;		
	КонецЕсли;
	
	Возврат ДЗПоЗаявкам;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЛимиты(Контрагент)
	Возврат Новый Структура("ЛимитДЗ, ЛимитПДЗ", Контрагент.МаксКредит, Контрагент.МаксКредитПр); 	
КонецФункции // ()

&НаКлиенте
Процедура СоздатьКонтрагента(Команда)
	ТекНовый = БюджетныйНаКлиенте.СоздатьКонтрагента();
	Если НЕ ТекНовый = Неопределено Тогда
		Объект.Грузополучатель = ТекНовый;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокиНаПровозПриИзменении(Элемент)
	ВидимостьРеквизитовДокПровоз();
	Если ЗначениеЗаполнено(Объект.ДокиНаПровоз) Тогда
		Объект.УчетчикПровоз = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз, "Учетчик");
		Объект.ДиректорДокиПровоз = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз, "Директор");
		ОбновитьEmailРассылку();
	Иначе
		Объект.ПодразделениеДокПровоз = "";
		Объект.ЦенаДокПровоз = 0;
		Объект.ДатаОтгрузкиДокПровоз = '00010101000000';
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрузоплоучательПриИзменении(Элемент)
	//Если НЕ Объект.ТипЗаявки = "Водочная" Тогда
	//	Объект.КомДиректор = ПолучитьКомДираСервер(Объект.ДатаОтгрузки, Объект.Грузополучатель);
	//КонецЕсли;
		
	Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Грузополучатель)) Тогда
		Объект.АдресДоставки = ПолучитьАдресНаСервере(Объект.Грузополучатель);			
		Объект.ЗначениеАдреса1   = ПолучитьРасшифровкуАдреса(Объект.Грузополучатель);
	КонецЕсли;
	
	ЗаполнитьДоговорИПротокол();
	
	// di 20.05.13
	//Элементы.ГруппаДетализация.Видимость = Объект.АвтоДоставкаДоки И ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	Элементы.Детализация.Видимость = ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоговорИПротокол()

	ТекСтруктура = БюджетныйНаСервере.ПолучитьДоговор(Объект.Док, Объект.Грузополучатель, БПСервер.СерверноеВремя());
	Если ЗначениеЗаполнено(ТекСтруктура.Договор) Тогда
		Объект.Договор = ТекСтруктура.Договор;
		ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекСтруктура.Договор, "Предоплата");
		Если НЕ ТекРеквизиты = Неопределено Тогда
			
			Объект.Отсрочка = ПолучитьОтсрочкуПоДоговору(ТекСтруктура.Договор);
			Объект.ПроцентПредоплаты = ТекСтруктура.Договор.Предоплата;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекСтруктура.Протокол) Тогда
		Объект.Протокол = ТекСтруктура.Протокол;
		ИндексВерха = 1;
		Для каждого ТекСтрока Из ТекСтруктура.Протокол.ТаблицаВерхов Цикл
			Объект["Верх" + ИндексВерха] = ТекСтрока.Верх;
			ИндексВерха = ИндексВерха + 1;
		КонецЦикла;		
		Объект.Цена = ТекСтруктура.Протокол.Цена;
	КонецЕсли;
	
	НеКонтрагент = (НЕ ТипЗнч(Объект.Грузополучатель) = Тип("СправочникСсылка.Контрагенты"));
	Элементы.Цена1.Доступность = НеКонтрагент;
	Элементы.Верх3.Доступность = НеКонтрагент;
	Элементы.Верх4.Доступность = НеКонтрагент;
	Элементы.Верх5.Доступность = НеКонтрагент;
	Элементы.Отсрочка3.Доступность = НеКонтрагент;
	Элементы.ПроцентПредоплаты3.Доступность = НеКонтрагент;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКомДираСервер(Дата1, Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор,
	|	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор.Коммерсант КАК Коммерсант
	|ИЗ
	|	РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата1, Контрагент = &Контрагент) КАК КоммерческиеДиректорыСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Коммерсант;
	Иначе
		Возврат Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьДопРеспондентов(ТекПП)
	МассивПП = Новый Массив;
	Для каждого ТекРеспондент Из ТекПП.ДопСписокРеспондентов Цикл
		Если ТекРеспондент.Признак = "КС" Тогда
			МассивПП.Добавить(ТекРеспондент.EMail);
		КонецЕсли;		
	КонецЦикла;
	Возврат МассивПП;
КонецФункции // ()

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекФорма = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками4143", Новый Структура(
	"ТекущаяСтрока,
	|ВыбДата,
	|ВыбПредприятие,
	|ВыбПодразделение",
	Объект.Номенклатура,
	Объект.Дата,
	Объект.Предприятие,
	Неопределено,
	) , Элемент);
	
	НовыйОтборГруппа = ТекФорма.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	НовыйОтборГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Производство";
	
	НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Вторичная переработка";
	
	НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Перевод в №2";
	
	НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Перепродажа";
	
	НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Купаж";
	
	ТекФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаявкиПриИзменении(Элемент)
	Если Объект.ТипЗаявки = "Водочная" Тогда
		Элементы.Группа2.ТекущаяСтраница = Элементы.Водка;
		//Элементы.Бухгалтер.Видимость = Истина;
		//Элементы.ОтветственныйЗаГрафик.Видимость = Ложь;
		//Элементы.УчетчикДоки.Видимость = Ложь;
		//Элементы.УчетчикПровоз.Видимость = Ложь;
		//Элементы.ДиректорДоки.Видимость = Ложь;
		//Элементы.ДиректорДокиПровоз.Видимость = Ложь;
		//Элементы.КомДиректор.Видимость = Ложь;
		//Элементы.ВидФормы.Видимость = Ложь;
		//Элементы.ДляВсех.Видимость = Ложь;
	Иначе
		Если ВидФормы = "Обычная" Тогда
			Элементы.Группа2.ТекущаяСтраница = Элементы.Спирт1;
		Иначе
			Элементы.Группа2.ТекущаяСтраница = Элементы.Спирт;
		КонецЕсли;
		//Элементы.Бухгалтер.Видимость = Ложь;
		//Элементы.ОтветственныйЗаГрафик.Видимость = Истина;
		//Элементы.УчетчикДоки.Видимость = Истина;
		//Элементы.УчетчикПровоз.Видимость = Истина;
		//Элементы.ДиректорДоки.Видимость = Истина;
		//Элементы.ДиректорДокиПровоз.Видимость = Истина;
		//Элементы.КомДиректор.Видимость = Истина;
		//Элементы.ВидФормы.Видимость = Истина;
		//Элементы.ДляВсех.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияВодкаКоличествоПриИзменении(Элемент)
	Элементы.УсловияВодка.ТекущиеДанные.Сумма = Элементы.УсловияВодка.ТекущиеДанные.Количество * Элементы.УсловияВодка.ТекущиеДанные.Цена;
КонецПроцедуры

&НаКлиенте
Процедура Грузоплоучатель1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РодительЛВЗ = НайтиРодителяЛВЗ();
	ТекЭлемент = ?(БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Родитель").Пустая(), Объект.Предприятие, БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Родитель"));
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", Новый Структура("ТекущееПредприятие, ТекущаяСтрока, ТекущийРодитель", ТекЭлемент, Объект.Грузополучатель, РодительЛВЗ), Элемент); 
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиРодителяЛВЗ()
	Возврат Справочники.Контрагенты.НайтиПоНаименованию("Контрагенты ЛВЗ  уч*", Истина);
КонецФункции // ()

&НаКлиенте
Процедура ВариантУсловийОплатыПриИзменении(Элемент)
	Если Объект.ВариантУсловийОплаты = "Стандартный" Тогда
		Элементы.Отсрочка2.Видимость = Истина;
		Элементы.ПроцентПредоплаты2.Видимость = Истина;
		Элементы.ГрафикОплат.Видимость = Ложь;
	ИначеЕсли Объект.ВариантУсловийОплаты = "До конца месяца" Тогда
		Элементы.Отсрочка2.Видимость = Истина;
		Элементы.ПроцентПредоплаты2.Видимость = Истина;
		Элементы.ГрафикОплат.Видимость = Ложь;
		Объект.Отсрочка = (КонецМесяца(Объект.ДатаОтгрузки) - Дата(Объект.ДатаОтгрузки)) / (24*60*60) - 1;
	Иначе
		Элементы.Отсрочка2.Видимость = Ложь;
		Элементы.ПроцентПредоплаты2.Видимость = Ложь;
		Элементы.ГрафикОплат.Видимость = Истина;
		
	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УсловияВодкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СредняяЦена = ?(Объект.УсловияВодка.Итог("Количество"), Объект.УсловияВодка.Итог("Сумма") / Объект.УсловияВодка.Итог("Количество"), 0);	
КонецПроцедуры

&НаКлиенте
Процедура ЖДДоставкаПриИзменении(Элемент)
	ВидимостьДоставок();
	ЦенаПриИзменении(0);
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьДоставок()
	Элементы.ДоставкаАвто1.Доступность = Объект.АвтоДоставка;
	// 06.06.2012 доставка авто2
	Элементы.ДоставкаАвто2.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаВЦене.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаВЦенеАвто2.Доступность = Объект.АвтоДоставка;
	//Элементы.Водитель.Доступность = Объект.АвтоДоставка;
	//Элементы.Водитель1.Доступность = Объект.АвтоДоставка;
	Элементы.РезервироватьТранспорт1.Доступность = Объект.АвтоДоставка;
	Элементы.РезервироватьТранспорт.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаАвто1.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаАвто3.Доступность = Объект.АвтоДоставка;
	//Элементы.ДоставкаВЦене2.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаВЦенеАвто3.Доступность = Объект.АвтоДоставка;
	
	Элементы.ДоставкаВЦене1.Доступность = Объект.ЖДДоставка;
	Элементы.ДоставкаВЦене3.Доступность = Объект.ЖДДоставка;
	
	Элементы.ДоставкаПерелив.Доступность = Объект.Перелив;
	Элементы.ПереливВЦене.Доступность = Объект.Перелив;
	Элементы.ДоставкаПерелив1.Доступность = Объект.Перелив;
	Элементы.ПереливВЦене1.Доступность = Объект.Перелив;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//интересный алгоритм. пока придержим
	//Если ПустаяСтрока(ЗаявкаНаТранспорт) Тогда
	//	СтрокаОповещения = "Изменена " + Строка(ЗаявкаНаТранспорт) + ":";
	//	СоздаватьОповещение = Ложь;
	//	Если  НЕ Контрагент = Объект.Грузополучатель Тогда
	//		Сообщить("Вы изменили Грузополучателя. Заявка на резервирование транстпорта должна быть изменена!");
	//		СтрокаОповещения = СтрокаОповещения + "
	//		|Пользователь " + Строка(БюджетныйНаСервере.ПолучитьПользователя()) + " изменил Грузополучателя с " + Строка(Контрагент) + " на " + Строка(Объект.Грузополучатель) + ".";
	//		СоздаватьОповещение = Истина;
	//	КонецЕсли;
	//	Если  НЕ Количество = Объект.Количество Тогда
	//		Сообщить("Вы изменили Объем отгрузки. Заявка на резервирование транстпорта должна быть изменена!");
	//		СтрокаОповещения = СтрокаОповещения + "
	//		|Пользователь " + Строка(БюджетныйНаСервере.ПолучитьПользователя()) + " изменил Количество отгрузки с " + Строка(Количество) + " на " + Строка(Объект.Количество) + ".";
	//		СоздаватьОповещение = Истина;
	//	КонецЕсли;
	//	Если СоздаватьОповещение Тогда
	//		ТекФорма = ПолучитьФорму("Документ.Д_ЗаявкаНаДоставку.ФормаОбъекта", Новый Структура("Ключ", ЗаявкаНаТранспорт)); 
	//		ТекФорма.Объект.Получатель = Объект.Грузополучатель;
	//		ТекФорма.Объект.КоличествоДок = Объект.Количество;
	//		ТекФорма.Объект.АдресДоставки = ПолучитьАдресНаСервере(Объект.Грузополучатель);
	//		ТекФорма.Объект.ЗначениеАдреса1 = ПолучитьРасшифровкуАдреса(Объект.Грузополучатель);
	//		ТекФорма.Модифицированность = Истина;
	//		ТекФорма.Открыть();
	//		
	//		//ПерезаписатьЗаявкуНаТранспорт(ЗаявкаНаТранспорт, Объект.Грузополучатель, Объект.Количество);
	//		БПСервер.СоздатьОповещение(БюджетныйНаСервере.ВернутьРеквизит(ЗаявкаНаТранспорт, "ОтветственныйЗаДоставку"),
	//		СтрокаОповещения,
	//		Строка(ЗаявкаНаТранспорт) + " изменена.", ЗаявкаНаТранспорт, Истина);
	//	КонецЕсли;
	//КонецЕсли;

	Оповестить("ОбновитьСписок");

	сабОбщегоНазначенияКлиент.ПослеЗаписиАвтосохраняемойФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресНаСервере(Адресат)
	Возврат Адресат.Адрес
КонецФункции

&наСервере
Функция ПолучитьРасшифровкуАдреса(Адресат)
	Возврат Адресат.ЗначениеАдреса
КонецФункции

&НаКлиенте
Процедура ЕдПриИзменении(Элемент)
	ТекЕд = ?(ЗначениеЗаполнено(Объект.Ед), Объект.Ед, "дал");
	Элементы.КоличествоДок1.Заголовок = "Количество, " + ТекЕд;
	Элементы.Цена1.Заголовок = "Цена, р/" + ТекЕд;
	Элементы.ЦенаДок1.Заголовок = "Стоимость доков, р/" + ТекЕд;
	Элементы.ЦенаЗакупа1.Заголовок = "Закупка, р/" + ТекЕд;
	Элементы.ЦенаЗакупа2.Заголовок = "Закупка, р/" + ТекЕд;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРазрешениеНаОтгрузкунаОсновании(Команда)
	
	Адрес = СоздатьРазрешение();
	ПолучитьФорму("Документ.Л_РазрешениеНаОтправкуТранспорта.Форма.ФормаДокумента",Новый Структура("Объект",Адрес)).Открыть();
КонецПроцедуры

&НаСервере
Функция СоздатьРазрешение()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Л_РазрешениеНаОтправкуТранспорта.Ссылка
	               |ИЗ
	               |	Документ.Л_РазрешениеНаОтправкуТранспорта КАК Л_РазрешениеНаОтправкуТранспорта
	               |ГДЕ
	               |	Л_РазрешениеНаОтправкуТранспорта.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Сообщить("на основании этой заявки уже введен факт отправки автомобиля!");
		ДокРазрешение = Выборка.Ссылка.ПолучитьОбъект();
	Иначе 
		ДокРазрешение = Документы.Л_РазрешениеНаОтправкуТранспорта.СоздатьДокумент();
		ДокРазрешение.Заполнить(Объект.Ссылка);
	КонецЕсли;
	
	Адрес = ПоместитьВоВременноеХранилище(ДокРазрешение ,УникальныйИдентификатор);
	Возврат Адрес 
КонецФункции

&НаКлиенте
Процедура ВидФормыПриИзменении(Элемент)
	Если ВидФормы = "Обычная" Тогда
		Элементы.Группа2.ТекущаяСтраница = Элементы.Спирт1;
	Иначе
		Элементы.Группа2.ТекущаяСтраница = Элементы.Спирт;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаПрибылиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Объект.Дельта = Объект.ТаблицаПрибыли.Итог("Доход") - Объект.ТаблицаПрибыли.Итог("Расход");
	Объект.Дельта2 = Объект.ТаблицаПрибыли.Итог("Доход2") - Объект.ТаблицаПрибыли.Итог("Расход2");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПрибылиПослеУдаления(Элемент)
	Объект.Дельта = Объект.ТаблицаПрибыли.Итог("Доход") - Объект.ТаблицаПрибыли.Итог("Расход");
	Объект.Дельта2 = Объект.ТаблицаПрибыли.Итог("Доход2") - Объект.ТаблицаПрибыли.Итог("Расход2");
КонецПроцедуры

&НаКлиенте
Процедура Пересчитать(Команда)
	Если Объект.ТаблицаПрибыли.Количество() Тогда
		Если НЕ Вопрос("Данные таблицы будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
			Возврат;	
		КонецЕсли;
	КонецЕсли;
	ПересчитатьСервер();
	Объект.Дельта = Объект.ТаблицаПрибыли.Итог("Доход") - Объект.ТаблицаПрибыли.Итог("Расход");
	Объект.Дельта2 = Объект.ТаблицаПрибыли.Итог("Доход2") - Объект.ТаблицаПрибыли.Итог("Расход2");
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСервер()
	Объект.ТаблицаПрибыли.Очистить();
	
	//анализируем тек документ
	//цена
	НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
	НоваяСтрока.Показатель = "Цена реализации";
	НоваяСтрока.Доход = Объект.Цена;
	Если ЗначениеЗаполнено(Объект.Количество2) Тогда
		НоваяСтрока.Доход2 = Объект.Цена;
	КонецЕсли;
	//верх
	Если Объект.Верх1 + Объект.Верх2 + Объект.Верх3 + Объект.Верх4 Тогда
		НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
		НоваяСтрока.Показатель = "Верх контрагента";
		НоваяСтрока.Расход = Объект.Верх1 + Объект.Верх2 + Объект.Верх3 + Объект.Верх4;
	КонецЕсли;
	
	//// di 20.05.13 
	//Если Объект.ВерхПоДоставке Тогда
	//	НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
	//	НоваяСтрока.Показатель = "Верх по доставке";
	//	НоваяСтрока.Расход = Объект.ВерхПоДоставке;
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Количество2) Тогда
		НоваяСтрока.Расход2 = Объект.Верх1 + Объект.Верх2 + Объект.Верх3 + Объект.Верх4;
	КонецЕсли;
	
	//себест произв 1
	Если Объект.Количество * Объект.ЦенаЗакупа И Объект.КоличествоДок Тогда
		НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
		НоваяСтрока.Показатель = "Себестоимость/Цена закупки";
		НоваяСтрока.Расход = Объект.ЦенаЗакупа;
	КонецЕсли;
	//себест произв 2
	Если Объект.Количество * Объект.ЦенаЗакупа И Объект.КоличествоДок Тогда
		Если Объект.Количество2 * Объект.ЦенаЗакупа2 Тогда
			НоваяСтрока.Расход2 = Объект.ЦенаЗакупа2;
		КонецЕсли;
	ИначеЕсли Объект.КоличествоДок Тогда
		Если Объект.Количество2 * Объект.ЦенаЗакупа2 Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Себестоимость/Цена закупки";
			НоваяСтрока.Расход2 = Объект.ЦенаЗакупа2;
		КонецЕсли;
	КонецЕсли;
	//доки
	Если Объект.ЦенаДок Тогда
		НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
		НоваяСтрока.Показатель = "Затраты на документы";
		НоваяСтрока.Расход = Объект.ЦенаДок;
		Если ЗначениеЗаполнено(Объект.Количество2) Тогда
			НоваяСтрока.Расход2 = Объект.ЦенаДок;
		КонецЕсли;
	КонецЕсли;
	
	//доки на провоз произв 1
	Если Объект.Количество * Объект.ЦенаДокПровоз И Объект.КоличествоДок Тогда
		НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
		НоваяСтрока.Показатель = "Стоимость доков на провоз";
		НоваяСтрока.Расход = Объект.ЦенаДокПровоз;
	КонецЕсли;
	//себест произв 2
	Если Объект.Количество * Объект.ЦенаДокПровоз И Объект.КоличествоДок Тогда
		Если Объект.Количество2 * Объект.ЦенаДокПровоз2 Тогда
			НоваяСтрока.Расход2 = Объект.ЦенаДокПровоз2;
		КонецЕсли;
	ИначеЕсли Объект.КоличествоДок Тогда
		Если Объект.Количество2 * Объект.ЦенаДокПровоз2 Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость доков на провоз";
			НоваяСтрока.Расход2 = Объект.ЦенаДокПровоз2;
		КонецЕсли;
	КонецЕсли;

	
	//стоимость доставки
	Если Объект.ТипРеализации = "Спирт№2ПодДоки" Тогда
		РазницаДоставки1 = 0;
		РазницаДоставки2 = 0;
		Если Объект.ДоставкаАвтоДоки И НЕ Объект.ДоставкаВЦенеАвтоДоки = "В цене" Тогда
			РазницаДоставки1 = РазницаДоставки1 + Объект.ДоставкаАвтоДоки; 
			Если ЗначениеЗаполнено(Объект.Количество2)  Тогда
				РазницаДоставки2 = РазницаДоставки2 + Объект.ДоставкаАвтоДоки;
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.ЖДДоставкаДоки Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость жд доставки (к возмещению)";
		КонецЕсли;
		
		
		Если Объект.Количество * Объект.Доставка И Объект.КоличествоДок  Тогда
			РазницаДоставки1 = РазницаДоставки1 - Объект.Доставка;
		КонецЕсли;
		
		Если Объект.Количество2 * Объект.Доставка2 И Объект.КоличествоДок  Тогда
			РазницаДоставки2 = РазницаДоставки2 - Объект.Доставка2;
		КонецЕсли;
		
		Если РазницаДоставки1 Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Разница в автодоставке на производителя";
			Если РазницаДоставки1 < 0  Тогда
				НоваяСтрока.Расход = - РазницаДоставки1;
			Иначе	
				НоваяСтрока.Доход = РазницаДоставки1;
			КонецЕсли;
		КонецЕсли;
		
		Если РазницаДоставки2 Тогда
			Если РазницаДоставки1 Тогда
				Если РазницаДоставки1 < 0  Тогда
					НоваяСтрока.Расход2 = - РазницаДоставки2;
				Иначе	
					НоваяСтрока.Доход2 = РазницаДоставки2;
				КонецЕсли;
			Иначе
				НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
				НоваяСтрока.Показатель = "Разница в автодоставке на производителя";
				Если РазницаДоставки1 < 0  Тогда
					НоваяСтрока.Расход2 = - РазницаДоставки2;
				Иначе	
					НоваяСтрока.Доход2 = РазницаДоставки2;
				КонецЕсли;
			КонецЕсли;
			
		
		КонецЕсли;
		
		Если Объект.Количество * Объект.ДоставкаПерелив И Объект.ДоставкаВЦене2 = "В цене" И Объект.КоличествоДок Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость перелива";
			НоваяСтрока.Расход = Объект.ДоставкаПерелив;
		КонецЕсли;
		
		Если Объект.Количество * Объект.ДоставкаПерелив И Объект.ДоставкаВЦене2 = "В цене" И Объект.КоличествоДок Тогда
			НоваяСтрока.Расход2 = Объект.ДоставкаПерелив2;
		Иначе	
			Если Объект.Количество2 * Объект.ДоставкаПерелив2 И Объект.ДоставкаВЦенеПерелив2 = "В цене" И Объект.КоличествоДок Тогда
				НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
				НоваяСтрока.Показатель = "Стоимость перелива";
				НоваяСтрока.Расход2 = Объект.ДоставкаПерелив2;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если Объект.ДоставкаАвтоДоки И Объект.ДоставкаВЦенеАвтоДоки = "В цене"  Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость авто доставки";
			НоваяСтрока.Расход =Объект.ДоставкаАвтоДоки;
		КонецЕсли;
		Если Объект.ЖДДоставкаДоки И Объект.ДоставкаВЦенеЖдДоки = "В цене" Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость авто доставки";
			НоваяСтрока.Расход = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.Количество * Объект.СопровождениеЦена И Объект.СопровождениеВЦене = "В цене" И Объект.КоличествоДок Тогда
		НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
		НоваяСтрока.Показатель = "Стоимость сопровождения";
		НоваяСтрока.Расход = Объект.СопровождениеЦена;
	КонецЕсли;
	
	Если Объект.Количество * Объект.СопровождениеЦена И Объект.СопровождениеВЦене = "В цене" И Объект.КоличествоДок  Тогда
		НоваяСтрока.Расход2 = Объект.СопровождениеЦена2;
	Иначе	
		Если Объект.Количество2 * Объект.СопровождениеЦена2 И Объект.СопровождениеВЦене2 = "В цене" И Объект.КоличествоДок Тогда
			НоваяСтрока = Объект.ТаблицаПрибыли.Добавить();
			НоваяСтрока.Показатель = "Стоимость сопровождения";
			НоваяСтрока.Расход2 = Объект.СопровождениеЦена2;
		КонецЕсли;
	КонецЕсли;
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВидимостьИДоступностьЭлементов()
	Элементы.ДоставкаАвто4.Доступность = Объект.АвтоДоставкаДоки;
	Элементы.ДоставкаВЦенеАвто1.Доступность = Объект.АвтоДоставкаДоки;
	Элементы.ДоставкаВЦенеЖд1.Доступность = Объект.ЖДДоставкаДоки;
	Элементы.ПредприятиеСписанияЖДТарифа.Доступность = Объект.ЖДДоставкаДоки;
	Элементы.ПредприятиеПеревыставленияЖДТарифа.Доступность = Объект.ЖДДоставкаДоки;
	
	Элементы.ДоставкаАвто1.Доступность = Объект.АвтоДоставка;
	//Элементы.ДоставкаВЦене2.Доступность = Объект.АвтоДоставка;
	Элементы.ДоставкаПерелив1.Доступность = Объект.Перелив;
	Элементы.ПереливВЦене1.Доступность = Объект.Перелив;
	Элементы.СопровождениеЦена1.Доступность = Объект.Сопровождение;
	Элементы.СопровождениеВЦене.Доступность = Объект.Сопровождение;
	
	Элементы.ДоставкаАвто5.Доступность = Объект.АвтоДоставка2;
	//Элементы.ДоставкаВЦене4.Доступность = Объект.АвтоДоставка2;
	//Элементы.ДоставкаПерелив2.Доступность = Объект.Перелив2;
	Элементы.ПереливВЦене3.Доступность = Объект.Перелив2;
	Элементы.СопровождениеЦена.Доступность = Объект.Сопровождение2;
	Элементы.СопровождениеВЦене2.Доступность = Объект.Сопровождение2;
	
	Элементы.Группа40.Доступность = ЗначениеЗаполнено(Объект.ДокиНаПровоз);
	Элементы.ПодразделениеДокПровоз1.Доступность = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз, "УчетПоПодразделениям");
	
	Элементы.Группа89.Доступность = ЗначениеЗаполнено(Объект.ДокиНаПровоз2);
	Элементы.ПодразделениеДокПровоз2.Доступность = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокиНаПровоз2, "УчетПоПодразделениям");
	
	Элементы.Подразделение2.Доступность = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "УчетПоПодразделениям");
	Элементы.Подразделение3.Доступность = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие2, "УчетПоПодразделениям");
	Элементы.ПодразделениеДок1.Доступность = БюджетныйНаСервере.ВернутьРеквизит(Объект.Док, "УчетПоПодразделениям");
	
	СпиртПодДоки  = (Объект.ТипРеализации = "Спирт№2ПодДоки");
	//Элементы.Группа7.Доступность = СпиртПодДоки;
	Элементы.АвтоДоставка1.Доступность = СпиртПодДоки;
	Элементы.ДоставкаАвто1.Доступность = Мин(СпиртПодДоки, Объект.АвтоДоставка);
	//Элементы.ДоставкаВЦене2.Доступность = Мин(СпиртПодДоки, Объект.АвтоДоставка);
	Элементы.Сопровождение.Доступность = СпиртПодДоки;
	Элементы.СопровождениеЦена1.Доступность = Мин(СпиртПодДоки, Объект.Сопровождение);
	Элементы.СопровождениеВЦене.Доступность = Мин(СпиртПодДоки, Объект.Сопровождение);
	Элементы.Перелив1.Доступность = СпиртПодДоки;
	Элементы.ДоставкаПерелив1.Доступность = Мин(СпиртПодДоки, Объект.Перелив);
	Элементы.ПереливВЦене1.Доступность = Мин(СпиртПодДоки, Объект.Перелив);
	
	Элементы.Группа6Спирт1.Доступность = СпиртПодДоки;
	Элементы.Количество1.Доступность = СпиртПодДоки;
	
	Элементы.Производитель2.Доступность = СпиртПодДоки;
	Элементы.ЦенаДок1.Доступность = СпиртПодДоки ИЛИ Объект.ТипРеализации = "Доки";
	Элементы.ДатаОтгрузкиДок.Доступность = СпиртПодДоки ИЛИ Объект.ТипРеализации = "Доки";
	Если Объект.ТипРеализации = "Спирт№2" Тогда
		Элементы.Группа6Спирт1.Доступность = Истина;
		Элементы.Сопровождение.Доступность = Истина;
		Элементы.СопровождениеЦена1.Доступность = Объект.Сопровождение;
		Элементы.СопровождениеВЦене.Доступность = Объект.Сопровождение;
	КонецЕсли;
	Элементы.ДатаОтгрузкиПроизводитель2.Доступность = НЕ (Объект.ТипРеализации = "Спирт№2");
	Если Объект.АвтоДоставкаДоки И Объект.ЖДДоставкаДоки Тогда
		Элементы.Перелив1.Доступность = Истина;	
		Элементы.ДоставкаПерелив1.Доступность = Истина;
		Элементы.ПереливВЦене1.Доступность = Истина;
	КонецЕсли;
	
	//Элементы.ГруппаДетализация.Видимость = Объект.АвтоДоставкаДоки И ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	Элементы.Детализация.Видимость = ОпределитьВидимостьДетализации(Объект.Грузополучатель);
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОбщий()
	//производитель1
	Если НЕ Объект.ТипРеализации = "Спирт№2ПодДоки" Тогда
		Если НЕ Объект.ТипРеализации = "Спирт№2" Тогда
			Объект.Предприятие = Объект.Док;
			Объект.ДатаОтгрузкиПроизводитель1 = Объект.ДатаОтгрузки;
			Объект.Подразделение = Объект.ПодразделениеДок;
			Объект.Количество = Объект.КоличествоДок;
			Объект.АдресОтправления1 = Объект.АдресОтправления;
		КонецЕсли;
		Объект.АвтоДоставка = Объект.АвтоДоставкаДоки;
		Объект.Доставка = Объект.ДоставкаАвтоДоки;
		Объект.ДоставкаВЦене = Объект.ДоставкаВЦенеАвтоДоки;
		Если Объект.ТипРеализации = "Спирт№1" ИЛИ Объект.ТипРеализации = "Доки" Тогда
			Объект.ДокиНаПровоз = "";
			Объект.ПодразделениеДокПровоз = "";
			Объект.ЦенаДокПровоз = 0;
			Объект.ДатаОтгрузкиДокПровоз = 0;
		КонецЕсли;
	КонецЕсли;
	//производитель2
	Если НЕ Объект.ТипРеализации = "Спирт№2ПодДоки" Тогда
		Если НЕ Объект.ТипРеализации = "Спирт№2" Тогда
			Объект.Предприятие2 = "";
			Объект.Подразделение2 = "";
			Объект.ДатаОтгрузкиПроизводитель2 = Дата('00010101');
			Объект.Количество2 = 0;
			Объект.АдресОтправления2 = "";
		КонецЕсли;
		Объект.АвтоДоставка2 = Ложь;
		Объект.Доставка2 = 0;
		Объект.ДоставкаВЦенеАвто22 = "";
		Если Объект.ТипРеализации = "Спирт№1" Тогда
			Объект.ДокиНаПровоз2 = "";
			Объект.ПодразделениеДокПровоз2 = "";
			Объект.ЦенаДокПровоз2 = 0;
			Объект.ДатаОтгрузкиДокПровоз2 = 0;
		КонецЕсли;
		Объект.ЦенаДок = 0;
	КонецЕсли;
	
	//доставкаОтправителя
	Если НЕ Объект.АвтоДоставкаДоки Тогда
		Объект.ДоставкаАвтоДоки = 0;
		Объект.ДоставкаВЦенеАвтоДоки = "";
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦенеАвтоДоки) Тогда
		Объект.ДоставкаВЦенеАвтоДоки = "В цене";	
	КонецЕсли;
	Если НЕ Объект.ЖДДоставкаДоки Тогда
		Объект.ДоставкаВЦенеЖдДоки = "";
		Объект.ПредприятиеПеревыставленияЖДТарифа = "";
		Объект.ПредприятиеСписанияЖДТарифа = "";
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦенеЖдДоки) Тогда
		Объект.ДоставкаВЦенеЖдДоки = "В цене";	
	КонецЕсли;
	
	//доставка производителя1
	Если НЕ Объект.АвтоДоставка Тогда
		Объект.Доставка = 0;
		// 06.06.2012 доставка авто2
		Объект.ДоставкаАвто2 = 0;
		Объект.ДоставкаВЦене = "";
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦене) Тогда
		Объект.ДоставкаВЦене = "В цене";	
	КонецЕсли;
	Если НЕ Объект.Перелив Тогда
		Объект.ДоставкаПерелив = 0;
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦене2) Тогда
		Объект.ДоставкаВЦене2 = "В цене";
	КонецЕсли;
	Если НЕ Объект.Сопровождение Тогда
		Объект.СопровождениеЦена = 0;
	ИначеЕсли ПустаяСтрока(Объект.СопровождениеВЦене) Тогда
		Объект.СопровождениеВЦене = "В цене";
	КонецЕсли;
	
	
	//доставка производителя2
	Если НЕ Объект.АвтоДоставка2 Тогда
		Объект.Доставка2 = 0;
		// 06.06.2012 доставка авто2
		Объект.ДоставкаАвто2 = 0;
		Объект.ДоставкаВЦенеАвто22 = "";
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦенеАвто22) Тогда
		Объект.ДоставкаВЦенеАвто22 = "В цене";	
	КонецЕсли;
	Если НЕ Объект.Перелив2 Тогда
		Объект.ДоставкаПерелив2 = 0;
	ИначеЕсли ПустаяСтрока(Объект.ДоставкаВЦенеПерелив2) Тогда
		Объект.ДоставкаВЦенеПерелив2 = "В цене";
	КонецЕсли;
	Если НЕ Объект.Сопровождение2 Тогда
		Объект.СопровождениеЦена2 = 0;
	ИначеЕсли ПустаяСтрока(Объект.СопровождениеВЦене2) Тогда
		Объект.СопровождениеВЦене2 = "В цене";
	КонецЕсли;

	// дата отгрузки доков
	Если Объект.ТипРеализации = "Спирт№1" Или Объект.ТипРеализации = "Спирт№2" Тогда
		Объект.ДатаОтгрузкиДок = Объект.ДатаОтгрузки;
	Иначе
		Объект.ДатаОтгрузкиДок = Дата('00010101');
	КонецЕсли;
	
	// Транзитная цена
	Если НЕ Объект.ТипРеализации = "Спирт№2" Тогда
		Объект.ТранзитнаяЦена = 0;
	Иначе
		Объект.ДатаОтгрузкиПроизводитель1 = Объект.ДатаОтгрузки;
		Объект.ДатаОтгрузкиДок = Объект.ДатаОтгрузки;
	КонецЕсли;

	
	ВидимостьИДоступностьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура СтороннийПроизводитель1ПриИзменении(Элемент)
	ПриИзмененииОбщий();
КонецПроцедуры

&НаКлиенте
Процедура Протокол1ПриИзменении(Элемент)
	ЗаполнитьПараметрыОтгрузки(Объект.Протокол);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыОтгрузки(ТекПротокол)
	Объект.Цена = ТекПротокол.Цена;
	Если ТекПротокол.ТаблицаВерхов.Количество() > 4 Тогда
		Сообщить("Внимание! Протокол содержит более 4-х верхов. Возможно заполение не более 3-х верхов");
	Иначе
		ИндексВерха = 1;
		Для каждого ТекСтрока Из ТекПротокол.ТаблицаВерхов Цикл
			Объект["Верх" + ИндексВерха] = ТекСтрока.Верх;
			ИндексВерха = ИндексВерха + 1;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьАдресОтправителю(Команда)
	Если ЗначениеЗаполнено(Объект.АдресОтправления) Тогда
		ПрисвоитьАдресОтправителюНаСервере();
	Иначе
		Сообщить("Не указан адрес");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьАдресОтправителюНаСервере()
	Если Объект.Док.УчетПоПодразделениям Тогда
    	ТекЗнач = Объект.ПодразделениеДок;
	Иначе
    	ТекЗнач = Объект.Док;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекЗнач) Тогда
		ПредприятиеОбъект = ТекЗнач.ПолучитьОбъект();
		ПредприятиеОбъект.Адрес 		 = Объект.АдресОтправления;
		ПредприятиеОбъект.ЗначениеАдреса = Объект.ЗначениеАдреса;
		ПредприятиеОбъект.Записать();
	Иначе
		Сообщить("Не выбрано ни предприятие ни подразделение грузоотправителя!");		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьАдресПолучателюНаСервере()
	Если ЗначениеЗаполнено(Объект.Грузополучатель) Тогда
		ПолучательОбъект = Объект.Грузополучатель.ПолучитьОбъект();
		ПолучательОбъект.Адрес 			= Объект.АдресДоставки;
		ПолучательОбъект.ЗначениеАдреса = Объект.ЗначениеАдреса1;
		ПолучательОбъект.Записать();
	Иначе
		Сообщить("Не выбран получатель!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьАдресПолучателю(Команда)
	Если ЗначениеЗаполнено(Объект.АдресДоставки) Тогда 
		ПрисвоитьАдресПолучателюНаСервере();
	Иначе 
		Сообщить("Не указан адрес!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьАдресОтправителю1(Команда)
	Если ЗначениеЗаполнено(Объект.АдресОтправления1) Тогда 
		ПрисвоитьАдресОтправителюНаСервере1();
	Иначе 
		Сообщить("Не указан адрес!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьАдресОтправителюНаСервере1()
	Если Объект.Предприятие.УчетПоПодразделениям Тогда
		ТекЗнач = Объект.Подразделение;
	Иначе
		ТекЗнач = Объект.Предприятие;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекЗнач) Тогда
		ПолучательОбъект = ТекЗнач.ПолучитьОбъект();
		ПолучательОбъект.Адрес 			= Объект.АдресОтправления1;
		ПолучательОбъект.ЗначениеАдреса = Объект.ЗначениеАдреса2;
		ПолучательОбъект.Записать();
	Иначе
		Сообщить("Не выбрано ни предприятие ни подразделение производителя 1!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьАдресОтправителю2(Команда)
	Если ЗначениеЗаполнено(Объект.АдресОтправления2) Тогда 
		ПрисвоитьАдресОтправителюНаСервере2();
	Иначе 
		Сообщить("Не указан адрес!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьАдресОтправителюНаСервере2()
	Если Объект.Предприятие2.УчетПоПодразделениям Тогда
		ТекЗнач = Объект.Подразделение2;
	Иначе
		ТекЗнач = Объект.Предприятие2;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекЗнач) Тогда
		ПолучательОбъект = ТекЗнач.ПолучитьОбъект();
		ПолучательОбъект.Адрес 			= Объект.АдресОтправления2;
		ПолучательОбъект.ЗначениеАдреса = Объект.ЗначениеАдреса3;
		ПолучательОбъект.Записать();
	Иначе
		Сообщить("Не выбрано ни предприятие ни подразделение производителя 2!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Док1ПриИзменении(Элемент)
	РеквизитыДок = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Док, "УчетПоПодразделениям, ВидДеятельности");	
	Если Не РеквизитыДок = Неопределено Тогда
		Если НЕ РеквизитыДок.УчетПоПодразделениям Тогда
			Объект.ПодразделениеДок = РеквизитыДок.ВидДеятельности;
			Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Док)) Тогда
				Объект.АдресОтправления = ПолучитьАдресНаСервере(Объект.Док);			
				Объект.ЗначениеАдреса   = ПолучитьРасшифровкуАдреса(Объект.Док);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПриИзмененииОбщий();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеДок1ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.ПодразделениеДок)) Тогда
		Объект.АдресОтправления = ПолучитьАдресНаСервере(Объект.ПодразделениеДок);			
		Объект.ЗначениеАдреса   = ПолучитьРасшифровкуАдреса(Объект.ПодразделениеДок);
	КонецЕсли;
	Если Не Объект.СтороннийПроизводитель1 Тогда
 		Объект.Подразделение = Объект.ПодразделениеДок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Предприятие2ПриИзменении(Элемент)
	РеквизитыДок = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Предприятие, "УчетПоПодразделениям, ВидДеятельности");	
	Если Не РеквизитыДок = Неопределено Тогда
		Если НЕ РеквизитыДок.УчетПоПодразделениям Тогда
			Объект.Подразделение = РеквизитыДок.ВидДеятельности;
			Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Предприятие)) Тогда
				Объект.АдресОтправления1 = ПолучитьАдресНаСервере(Объект.Предприятие);			
				Объект.ЗначениеАдреса2   = ПолучитьРасшифровкуАдреса(Объект.Предприятие);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Предприятие3ПриИзменении(Элемент)
	РеквизитыДок = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Предприятие2, "УчетПоПодразделениям, ВидДеятельности");
	Если Не РеквизитыДок = Неопределено Тогда
		Если НЕ РеквизитыДок.УчетПоПодразделениям Тогда
			Объект.Подразделение2 = РеквизитыДок.ВидДеятельности;
			Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Предприятие2)) Тогда
				Объект.АдресОтправления2 = ПолучитьАдресНаСервере(Объект.Предприятие2);			
				Объект.ЗначениеАдреса3   = ПолучитьРасшифровкуАдреса(Объект.Предприятие2);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДок1ПриИзменении(Элемент)
	Если НЕ Объект.ТипРеализации = "Спирт№2ПодДоки" Тогда
		Объект.Количество = Объект.КоличествоДок;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипОтгрузкиПриИзменении(Элемент)
	ПриИзмененииОбщий();
	Если Объект.ТипРеализации = "Спирт№2" Или Объект.ТипРеализации = "Спирт№2ПодДоки" Тогда
		Объект.УчетчикОТК = БПСервер.ВернутьЗамещающего(УчетчикОТК()).ТекПользователь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСебестоимость(Команда)
	Объект.ЦенаЗакупа = БюджетныйНаСервере.ПолучитьПлановуюСебестоимостьПоРегиструСведений(Объект.Предприятие, Объект.Номенклатура, Объект.ДатаОтгрузки);
	Если Не ЗначениеЗаполнено(Объект.ЦенаЗакупа) Тогда
		Если Вопрос("Номенклатура """ + Строка(Объект.Номенклатура) + """ не найдена в регистре плановой себестоимости. Желаете выбрать вручную?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			НоваяФорма = ПолучитьФорму("РегистрСведений.Д_ПараметрыНоменклатуры.Форма.ФормаВыбораДляЗаявкиНаОтгрузку", Новый Структура("Период", Объект.ДатаОтгрузки) );
			НовыйОтбор = НоваяФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предприятие");
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйОтбор.ПравоеЗначение = Объект.Предприятие;
			НовыйОтбор = НоваяФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СценарийПлана");
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйОтбор.ПравоеЗначение = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Объект.ДатаОтгрузки);
			НоваяФорма.Открыть();
		КонецЕсли;
	 КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСебестоимость1(Команда)
	Объект.ЦенаЗакупа2 = БюджетныйНаСервере.ПолучитьПлановуюСебестоимость(Объект.Предприятие2, Объект.Номенклатура2, Объект.ДатаОтгрузки);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Пересчитать" Тогда
		Закрыть();
	ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
		сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	ИначеЕсли ИмяСобытия = "ОбновитьУИДВЗАявке" Тогда	
		Объект.УИДСтрокиГрафика = Параметр;	
	ИначеЕсли ИмяСобытия = "ПередатьСебестоимость" Тогда
		Объект.ЦенаЗакупа = Параметр.ПолнаяСебестоимость;		
	КонецЕсли;
	ПриОткрытии(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОтправленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//СтрДанные = ПолучитьСтрокуДополнительныхЗначений(ЭтаФорма, Элемент);
	ВременныйСписок = Новый СписокЗначений;
	
	ВременныйСписок = АдресныйКлассификаторКлиент.ПреобразоватьСтрокуВСписокПолей(Объект.ЗначениеАдреса);
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ВременныйСписок);
	Пар.Вставить("Вид",                          "Адрес");
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Объект.АдресОтправления);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Ложь);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВводАдреса", Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.ЗначениеАдреса = АдресныйКлассификаторКлиент.ПреобразоватьСписокПолейВСтроку(Результат.ЗначенияПолей);
		Объект.АдресОтправления = Результат.Представление;
		Модифицированность      = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//СтрДанные = ПолучитьСтрокуДополнительныхЗначений(ЭтаФорма, Элемент);
	ВременныйСписок = Новый СписокЗначений;
	
	ВременныйСписок = АдресныйКлассификаторКлиент.ПреобразоватьСтрокуВСписокПолей(Объект.ЗначениеАдреса1);
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ВременныйСписок);
	Пар.Вставить("Вид",                          "Адрес");
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Объект.АдресДоставки);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Ложь);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВводАдреса", Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.ЗначениеАдреса1 = АдресныйКлассификаторКлиент.ПреобразоватьСписокПолейВСтроку(Результат.ЗначенияПолей);
		Объект.АдресДоставки = Результат.Представление;
		Модифицированность      = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОтправления2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//СтрДанные = ПолучитьСтрокуДополнительныхЗначений(ЭтаФорма, Элемент);
	ВременныйСписок = Новый СписокЗначений;
	
	ВременныйСписок = АдресныйКлассификаторКлиент.ПреобразоватьСтрокуВСписокПолей(Объект.ЗначениеАдреса3);
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ВременныйСписок);
	Пар.Вставить("Вид",                          "Адрес");
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Объект.АдресОтправления2);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Ложь);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВводАдреса", Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.ЗначениеАдреса3 = АдресныйКлассификаторКлиент.ПреобразоватьСписокПолейВСтроку(Результат.ЗначенияПолей);
		Объект.АдресОтправления2 = Результат.Представление;
		Модифицированность      = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОтправления1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//СтрДанные = ПолучитьСтрокуДополнительныхЗначений(ЭтаФорма, Элемент);
	ВременныйСписок = Новый СписокЗначений;
	
	ВременныйСписок = АдресныйКлассификаторКлиент.ПреобразоватьСтрокуВСписокПолей(Объект.ЗначениеАдреса2);
	
	Пар = Новый Структура;
	Пар.Вставить("ЗначенияПолей",                ВременныйСписок);
	Пар.Вставить("Вид",                          "Адрес");
	Пар.Вставить("БылиВнесеныИзменения",         Ложь);
	Пар.Вставить("Представление",                Объект.АдресОтправления1);
	Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
	Пар.Вставить("АдресТолькоРоссийский",        Ложь);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВводАдреса", Пар);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Объект.ЗначениеАдреса2 = АдресныйКлассификаторКлиент.ПреобразоватьСписокПолейВСтроку(Результат.ЗначенияПолей);
		Объект.АдресОтправления1 = Результат.Представление;
		Модифицированность      = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подразделение2ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Подразделение)) Тогда
		Объект.АдресОтправления1 = ПолучитьАдресНаСервере(Объект.Подразделение);			
		Объект.ЗначениеАдреса2   = ПолучитьРасшифровкуАдреса(Объект.Подразделение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подразделение3ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПолучитьАдресНаСервере(Объект.Подразделение2)) Тогда
		Объект.АдресОтправления2 = ПолучитьАдресНаСервере(Объект.Подразделение2);			
		Объект.ЗначениеАдреса3   = ПолучитьРасшифровкуАдреса(Объект.Подразделение2);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИсторию(Команда)
	Объект.АрхивЗаявок.Очистить();
	Элементы.ОчиститьИсторию.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтгрузки2ПриИзменении(Элемент)
	ПриИзмененииОбщий();
КонецПроцедуры

&НаКлиенте
Процедура ЗакупнойПриИзменении(Элемент)
	Если НЕ Объект.ТипПродукта1 = "Закупной" Тогда
		Элементы.ЦенаЗакупа1.Заголовок = "Себестоимость(план), р/" + Объект.Ед;
	Иначе
		Элементы.ЦенаЗакупа1.Заголовок = "Цена закупа, р/" + Объект.Ед;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Закупной1ПриИзменении(Элемент)
	Если НЕ Объект.ТипПродукта2 = "Закупной" Тогда
		Элементы.ЦенаЗакупа2.Заголовок = "Себестоимость(план), р/" + Объект.Ед;
	Иначе
		Элементы.ЦенаЗакупа2.Заголовок = "Цена закупа, р/" + Объект.Ед;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуБух(СтруктураДанных)
	НоваяСтрока = Объект.ИсходнаяЧасть1.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанных);
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьБухгалтерия1(Команда)
	Если Объект.ИсходнаяЧасть1.Количество() Тогда
		Если НЕ Вопрос("Очистить табличную часть?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
			Возврат;		
		КонецЕсли;
	КонецЕсли;
	Объект.ИсходнаяЧасть1.Очистить();
	МассивПоказателей = Новый Массив;
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Дата загрузки", "Показ1"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Организация- отправитель", "Показ2"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "КС", "Организация покупатель", "Показ3"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "КС", "Под  документы", "Показ4"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Способ перевозки (авто, жд, смешанный)", "Показ5"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Количество машин, используемых для сбора обьема", "Показ6"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Пункты погрузки", "Показ7"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Обьем водный", "Показ8"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Перевезенный обьем безводного спирта, дкл V1", "Показ9"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Температура в мерниках при погрузки спирта в машины", "Показ10"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Температура при переливе с машины в жд  цистерну", "Показ11"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Крепость", "Показ12"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Способ перелива из мерника в цистерну (насос, самотек)", "Показ13"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Слив спирта из машины в жд цистерну", "Показ14"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "??", "Количество дней хранения спирта", "Показ15"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Фактический километраж машин", "Показ16"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "??расчет", "Траты фактической доставки ( Тр1)", "Показ17"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "КС", "Наименование продукции", "Показ18"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "КС", "Дата оформления отгрузки", "Показ19"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "КС", "Цена отгрузки, руб/дал", "Показ20"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Организация-перевозчик", "Показ21"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Сведения о лицензии на перевозку груза", "Показ22"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "ФИО водителя", "Показ23"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Марка автомобиля, гос номер", "Показ24"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Грузоподьемность автомобиля из ПТС, т", "Показ25"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Марка прицепа, гос номер", "Показ26"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Масса прицепа без нагрузки по ПТС, т", "Показ27"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Километраж перевозки", "Показ28"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Спруты", "Показ29"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Пункт разгрузки", "Показ30"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "ОТК", "Траты при автоперевозке ( Тр2)", "Показ31"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Станция отправления цистерны", "Показ32"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "№ цистерны", "Показ33"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Спруты", "Показ34"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Тип цистерны", "Показ35"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Высота колпака цистерны", "Показ36"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Высота недолива", "Показ37"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "Завод", "Температура спирта в цистерне", "Показ38"));
	ДобавитьСтрокуБух(Новый Структура("Ответственные, Показатель, ИмяПоказателя", "??Расчет", "Траты при жд перевозке ( Тр3)", "Показ39"));
	
	
	МассивП24 = Новый Массив;
	МассивП24.Добавить("Обьем пропуска через мерники");
	МассивП24.Добавить("Крепость");
	МассивП24.Добавить("Средняя температура в мерниках");
	МассивП24.Добавить("Всего безводного спирта, без трат (V1-Тр1+Тр2+Тр3)");	
	МассивП24.Добавить("Окисляемость, мин");	
	МассивП24.Добавить("Метанол, % об");	
	МассивП24.Добавить("Сив масла, мг/куб дм");
	МассивП24.Добавить("Своб кислоты, мг/куб дм");
	
	ЗаполнитьБухДанными();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказатель(ИмяПоказателя, Значение1, Значение2 = "")
	ОтобранныеСтроки = Объект.ИсходнаяЧасть1.НайтиСтроки(Новый Структура("ИмяПоказателя", ИмяПоказателя));
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ТекСтрока.Значение1 = Значение1;
		ТекСтрока.Значение2 = Значение2;
	КонецЦикла; 
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьБухДанными()
	//организация-отправитель
	ЗаполнитьПоказатель("Показ2", Строка(Объект.Предприятие) + ", " + Строка(Объект.Подразделение));
	
	//организация покупатель
	ЗаполнитьПоказатель("Показ3", Объект.Грузополучатель);
	
	//организация под доки
	ЗаполнитьПоказатель("Показ4", Объект.Договор.Организация);
	
	//наименование
	ЗаполнитьПоказатель("Показ18", Объект.Номенклатура);
	
	//дата оформления отгрузки
	ЗаполнитьПоказатель("Показ19", Формат(Объект.ДатаОтгрузки, "ДФ=dd.MM.yy"));
	
	//цена отгрузки
	ЗаполнитьПоказатель("Показ20", Объект.ЦенаДок);
	
КонецПроцедуры



&НаКлиенте
Процедура ИсходнаяЧастьЗаполненаПриИзменении(Элемент)
	Элементы.ИсходнаяЧастьАвто.ТолькоПросмотр = Объект.ИсходнаяЧастьЗаполнена;
КонецПроцедуры

&НаКлиенте
Процедура Договор2ПриИзменении(Элемент)
	ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Договор, "Предоплата");
	Объект.Отсрочка = ПолучитьОтсрочкуПоДоговору(Объект.Договор);
	Объект.ПроцентПредоплаты = ТекРеквизиты.Предоплата;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьВидимостьДетализации(Контрагент)
	
	// di 20.05.13
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ТекРодитель = Контрагент.Родитель;
		Если ЗначениеЗаполнено(ТекРодитель.Родитель) И ТекРодитель.ГруппаКлиентов Тогда
    		Возврат Истина
		Иначе
			Возврат Ложь
		КонецЕсли
	Иначе
		Возврат Ложь
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Детализация(Команда)

	// di 20.05.13
	П = Новый Структура("ТекДокумент", Объект.Ссылка);	
	ОткрытьФорму("Документ.Д_ЗаявкаНаОтгрузку.Форма.ФормаДетализацииПоКонтрагенту", П, ЭтаФорма); 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьОтветственногоМенеджера(Контрагент)
	
	Если ТипЗнч(Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат Истина
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("Контрагент", Контрагент);
	ТЗ = РегистрыСведений.Ответственные.СрезПоследних(, СтруктураОтбора);
	
	Если ТЗ.Количество() Тогда
		Ответственный = ТЗ[0].Ответственный
	Иначе
		Ответственный = Неопределено
	КонецЕсли;
	
	Возврат Ответственный;
	
КонецФункции	

&НаКлиенте
Процедура Грузоплоучатель2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ОтветственныйМенеджер = ВернутьОтветственногоМенеджера(ВыбранноеЗначение);
	
	Если ОтветственныйМенеджер = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Сообщить("У контрагента " + ВыбранноеЗначение + " не указан ответственный менеджер!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьФактическиеПараметры(Команда)
	
	ПолучитьФактическиеПараметрыНаСервере()
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьФактическиеПараметрыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПР_Отгрузка.Количество
	|ИЗ
	|	Документ.ПР_Отгрузка КАК ПР_Отгрузка
	|ГДЕ
	|	ПР_Отгрузка.ДокОснование = &ДокОснование";
	Запрос.УстановитьПараметр("ДокОснование", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Нет документа по отгрузке");
		Возврат;
	КонецЕсли;	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект.ФактическийОбъем = Выборка.Количество;	
	КонецЦикла;	
	
КонецПроцедуры	


&НаКлиенте
Процедура НоменклатураСпирт2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекФорма = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками4143", Новый Структура(
	"ТекущаяСтрока,
	|ВыбДата,
	|ВыбПредприятие,
	|ВыбПодразделение",
	Объект.Номенклатура2,
	Объект.Дата,
	Объект.Предприятие2,
	Неопределено,
	) , Элемент);
	НовыйОтбор = ТекФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ПризнакНоменклатуры");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйОтбор.ПравоеЗначение = "Производство";
	ТекФорма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтгрузкиПроизводитель2ПриИзменении(Элемент)
	Если Объект.ТипРеализации = "Спирт№2" Тогда
		Объект.ДатаОтгрузкиДок = Объект.ДатаОтгрузкиПроизводитель1;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОтсрочкуПоДоговору(Договор)
	
	Отсрочка = РегистрыСведений.ОтсрочкаПоДоговорам.ПолучитьПоследнее(Объект.Дата, Новый Структура("Договор", Договор)).Отсрочка;
	
	Возврат ?(Отсрочка = Неопределено, 0, Отсрочка);
	
КонецФункции	

&НаКлиенте
Процедура УИДСтрокиГрафикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ОткрытьФорму("Документ.КС_ГрафикОтгрузок.Форма.ФормаВыбораУИДаСтроки",Новый Структура("ДокОснование, ТекущаяСтрока", Объект.ДокОснование) ,Элемент); 
КонецПроцедуры

&НаСервереБезКонтекста
Функция УчетчикОТК()
	
	Возврат Справочники.Пользователи.ПустаяСсылка();	//нужно исправить!!! на основную должость предприятия
	
КонецФункции

&НаКлиенте
Процедура АвтосохранениеРеквизитовФормыНаКлиенте()
	
	Если Модифицированность Тогда
		АвтосохранениеРеквизитовФормыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура АвтосохранениеРеквизитовФормыНаСервере()
	
	сабОбщегоНазначения.АвтосохранениеРеквизитовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы И Не РежимВосстановления Тогда
		сабОбщегоНазначения.ОчиститьАвтосохраненияОбъекта(Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Процедура ПустаяСервернаяПроцедура()
	//Процедура-костыль.
	//Баг: при первом обращении на сервер в модуле формы откатывается введенный текст
	//Процедура вызывается при открытии формы, инициирует обращение на сервер, после чего баг с текстом не появляется
	
	Ы = 0;
	
КонецПроцедуры
