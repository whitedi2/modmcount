
Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.сабМаршрутныйЛист.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	сабМаршрутныйЛист.Автор КАК Автор,
	|	сабМаршрутныйЛист.Дата КАК Дата,
	|	сабМаршрутныйЛист.Комментарий КАК Комментарий,
	|	сабМаршрутныйЛист.Номер КАК Номер,
	|	сабМаршрутныйЛист.Подразделение КАК Подразделение,
	|	сабМаршрутныйЛист.Предприятие КАК Предприятие,
	|	сабМаршрутныйЛист.ТабличнаяЧасть.(
	|		НомерСтроки КАК НомерСтроки,
	|		ЗаказКлиента КАК ЗаказКлиента,
	|		Сумма КАК Сумма,
	|		ЗаказКлиента.АдресДоставки КАК АдресДоставки,
	|		ЗаказКлиента.Телефон КАК Телефон,
	|		ЗаказКлиента.Контрагент КАК Контрагент,
	|		ЗаказКлиента.ДатаДоставки КАК ДатаДоставки,
	|		ЗаказКлиента.Комментарий КАК КомментарийЗаказа,
	|		ЗаказКлиента.СуммаДокумента КАК СуммаЗаказа,
	|		ЗаказКлиента.ВесТовара КАК Вес,
	|		ЗаказКлиента.ПодразделениеКонтрагента.Примечание КАК Примечание
	|	) КАК ТабличнаяЧасть,
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Доставщик,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК НомерПаспорта,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|ИЗ
	|	Документ.сабМаршрутныйЛист КАК сабМаршрутныйЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(, ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)) КАК ДокументыФизическихЛицСрезПоследних
	|		ПО сабМаршрутныйЛист.Доставщик = ДокументыФизическихЛицСрезПоследних.Физлицо
	|ГДЕ
	|	сабМаршрутныйЛист.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТабличнаяЧастьШапка = Макет.ПолучитьОбласть("ТабличнаяЧастьШапка");
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("ТабличнаяЧасть");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТабличнаяЧастьШапка);
		ВыборкаТабличнаяЧасть = Выборка.ТабличнаяЧасть.Выбрать();
		Пока ВыборкаТабличнаяЧасть.Следующий() Цикл
			ОбластьТабличнаяЧасть.Параметры.Заполнить(ВыборкаТабличнаяЧасть);
			ТабДок.Вывести(ОбластьТабличнаяЧасть, ВыборкаТабличнаяЧасть.Уровень());
		КонецЦикла;
		
		Подвал.Параметры.Заполнить(Выборка); 
		
		Если ЗначениеЗаполнено(Выборка.Серия) Тогда
			Подвал.Параметры.ПаспортныеДанные = "Паспорт Серия " + Выборка.Серия + " №" + Выборка.НомерПаспорта + " Выдан " + Формат(Выборка.ДатаВыдачи, "ДЛФ=D") + " г. " + Выборка.КемВыдан + " к.п. " + Выборка.КодПодразделения;
		Иначе
			Подвал.Параметры.ПаспортныеДанные = "";
		КонецЕсли;
		
		ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура МаршрутныйЛистГруппировка(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(МаршрутныйЛистГруппировка)
	Макет = Документы.сабМаршрутныйЛист.ПолучитьМакет("МаршрутныйЛистГруппировка");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	сабМаршрутныйЛист.Автор,
	|	сабМаршрутныйЛист.Дата,
	|	сабМаршрутныйЛист.Комментарий,
	|	сабМаршрутныйЛист.Номер,
	|	сабМаршрутныйЛист.Организация,
	|	сабМаршрутныйЛист.Предприятие,
	|	сабМаршрутныйЛист.ТабличнаяЧасть.(
	|		НомерСтроки,
	|		ЗаказКлиента,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.сабМаршрутныйЛист КАК сабМаршрутныйЛист
	|ГДЕ
	|	сабМаршрутныйЛист.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТабличнаяЧастьШапка = Макет.ПолучитьОбласть("ТабличнаяЧастьШапка");
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("ТабличнаяЧасть");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТабличнаяЧастьШапка);
		ВыборкаТабличнаяЧасть = Выборка.ТабличнаяЧасть.Выбрать();
		Пока ВыборкаТабличнаяЧасть.Следующий() Цикл
			ОбластьТабличнаяЧасть.Параметры.Заполнить(ВыборкаТабличнаяЧасть);
			ТабДок.Вывести(ОбластьТабличнаяЧасть, ВыборкаТабличнаяЧасть.Уровень());
		КонецЦикла;
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ПечатьМаршрутныйЛистНовый(ТабличныйДокумент, МассивОбъектов, ИмяКоманды = Неопределено) Экспорт
	
	ОбъектыПечати = Новый СписокЗначений;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МАРШРУТНЫЙ_ЛИСТ_НОВ";
	
	Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	//|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	//|	МАКСИМУМ(сабМаршрутныйЛистТабличнаяЧасть.НомерСтроки) КАК ПорядокДоставки,
	//|	ВЫБОР
	//|		КОГДА ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказклиента)
	//|				ИЛИ ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказнавозвратотклиента)
	//|			ТОГДА сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента
	//|		ИНАЧЕ сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Подразделение
	//|	КОНЕЦ КАК ЗаказКлиентаПодразделениеКонтрагента
	//|ПОМЕСТИТЬ ВТ_Порядок
	//|ИЗ
	//|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	//|ГДЕ
	//|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент,
	//|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка,
	//|	ВЫБОР
	//|		КОГДА ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказклиента)
	//|				ИЛИ ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказнавозвратотклиента)
	//|			ТОГДА сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента
	//|		ИНАЧЕ сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Подразделение
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаПоступления, ДЕНЬ) КАК ДатаОтгрузки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставки КАК ДатаДоставки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.АдресДоставки КАК АдресКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Телефон КАК Телефон,
	|	ВЫРАЗИТЬ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеВодителю КАК СТРОКА(1000)) КАК ЗаданиеВодителю,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Дата КАК ЗаказКлиентаДата,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.Примечание КАК Примечание,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.КодУпорядочивания КАК КодУпорядочивания,
	|	ВЫРАЗИТЬ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеСкладу КАК СТРОКА(1000)) КАК ЗаданиеСкладу,
	//|	ВТ_Порядок.ПорядокДоставки КАК ПорядокДоставки
	|	сабМаршрутныйЛистТабличнаяЧасть.НомерСтроки КАК ПорядокДоставки
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Порядок КАК ВТ_Порядок
	//|		ПО сабМаршрутныйЛистТабличнаяЧасть.Ссылка = ВТ_Порядок.МаршрутныйЛист
	//|			И сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент = ВТ_Порядок.Контрагент
	//|			И (ВЫБОР
	//|				КОГДА ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказклиента)
	//|						ИЛИ ТИПЗНАЧЕНИЯ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента) = ТИП(документ.заказнавозвратотклиента)
	//|					ТОГДА сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента = ВТ_Порядок.ЗаказКлиентаПодразделениеКонтрагента
	//|				ИНАЧЕ сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Подразделение = ВТ_Порядок.ЗаказКлиентаПодразделениеКонтрагента
	//|			КОНЕЦ)
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент КАК Контрагент,
	|	ВТ_Заказ.АдресКлиента КАК АдресКлиента,
	|	ВТ_Заказ.Примечание КАК Примечание,
	|	ВТ_Заказ.Телефон КАК Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура.Вес * ЗаказКлиентаТабличнаяЧасть.Количество КАК Вес,
	|	ВТ_Заказ.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	0 КАК ВесФ,
	|	0 КАК КоличествоФ,
	|	ВТ_Заказ.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки КАК ПорядокДоставки,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмеренияУпаковка,
	|	ЗаказКлиентаТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	NULL КАК ДатаПроизводства,
	|	ВТ_Заказ.ЗаказКлиента КАК ЗаказКлиента,
	|	ЗаказКлиентаТабличнаяЧасть.КоличествоВУпаковке КАК КоличествоВУпаковке
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧБегГрупп
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказКлиентаТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура,
	|	0,
	|	0,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Номенклатура.Вес * УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Номенклатура.Вес * УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Номенклатура.Вес * УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Номенклатура.Вес * ПередачаТоваровТовары.Количество, 0),
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Количество, 0),
	|	ВТ_Заказ.КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения,
	|	0,
	|	ВЫБОР
	|		КОГДА УЧ_РеализацияТовары.СерияНоменклатуры ЕСТЬ NULL
	|				ИЛИ УЧ_РеализацияТовары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА УЧ_РеализацияТовары1.СерияНоменклатуры ЕСТЬ NULL
	|							ИЛИ УЧ_РеализацияТовары1.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА УЧ_РеализацияТовары2.СерияНоменклатуры.ДатаПроизводства
	|					ИНАЧЕ УЧ_РеализацияТовары1.СерияНоменклатуры.ДатаПроизводства
	|				КОНЕЦ
	|		ИНАЧЕ УЧ_РеализацияТовары.СерияНоменклатуры.ДатаПроизводства
	|	КОНЕЦ,
	|	ВТ_Заказ.ЗаказКлиента,
	|	0
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары.Ссылка.ДокОснование
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары.Номенклатура
	|				И (УЧ_РеализацияТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК УЧ_РеализацияТовары1
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары1.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары1.Номенклатура
	|				И (УЧ_РеализацияТовары1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары1.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК УЧ_РеализацияТовары2
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары2.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары2.Номенклатура
	|				И (УЧ_РеализацияТовары2.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары2.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Номенклатура = ПередачаТоваровТовары.Номенклатура
	|				И (ПередачаТоваровТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.Ссылка = ПередачаТоваровТовары.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = ПередачаТоваровТовары.НомерСтроки
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказКлиентаТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура,
	|	ЗаказПоставщикуТабличнаяЧасть.Количество,
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура.Вес * ЗаказПоставщикуТабличнаяЧасть.Количество,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_ПоступлениеТоваров.Номенклатура.Вес * УЧ_ПоступлениеТоваров.Количество, 0) + ЕСТЬNULL(УЧ_ПоступлениеТоваров1.Номенклатура.Вес * УЧ_ПоступлениеТоваров1.Количество, 0),
	|	ЕСТЬNULL(УЧ_ПоступлениеТоваров.Количество, 0) + ЕСТЬNULL(УЧ_ПоступлениеТоваров1.Количество, 0),
	|	ВТ_Заказ.КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки,
	|	ЗаказПоставщикуТабличнаяЧасть.ЕдиницаИзмерения,
	|	ЗаказПоставщикуТабличнаяЧасть.КоличествоУпаковок,
	|	NULL,
	|	ВТ_Заказ.ЗаказКлиента,
	|	ЗаказПоставщикуТабличнаяЧасть.КоличествоВУпаковке
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.ТабличнаяЧасть КАК ЗаказПоставщикуТабличнаяЧасть
	|        	ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК УЧ_ПоступлениеТоваров
	|			ПО ЗаказПоставщикуТабличнаяЧасть.Ссылка = УЧ_ПоступлениеТоваров.Ссылка.ДокОснование
	|				И ЗаказПоставщикуТабличнаяЧасть.Номенклатура = УЧ_ПоступлениеТоваров.Номенклатура
	|				И (УЧ_ПоступлениеТоваров.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказПоставщикуТабличнаяЧасть.НомерСтроки = УЧ_ПоступлениеТоваров.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК УЧ_ПоступлениеТоваров1
	|			ПО ЗаказПоставщикуТабличнаяЧасть.Ссылка = УЧ_ПоступлениеТоваров1.Ссылка.Заказ
	|				И ЗаказПоставщикуТабличнаяЧасть.Номенклатура = УЧ_ПоступлениеТоваров1.Номенклатура
	|				И (УЧ_ПоступлениеТоваров1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказПоставщикуТабличнаяЧасть.НомерСтроки = УЧ_ПоступлениеТоваров1.НомерСтроки
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказПоставщикуТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказПоставщикуТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказНаПеремещениеТабличнаяЧасть.Номенклатура,
	|	ЗаказНаПеремещениеТабличнаяЧасть.Количество,
	|	ЗаказНаПеремещениеТабличнаяЧасть.Номенклатура.Вес * ЗаказНаПеремещениеТабличнаяЧасть.Количество,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_ПеремещениеТоваров.Номенклатура.Вес * УЧ_ПеремещениеТоваров.Количество, 0) + ЕСТЬNULL(УЧ_ПеремещениеТоваров1.Номенклатура.Вес * УЧ_ПеремещениеТоваров1.Количество, 0),
	|	ЕСТЬNULL(УЧ_ПеремещениеТоваров.Количество, 0) + ЕСТЬNULL(УЧ_ПеремещениеТоваров1.Количество, 0),
	|	ВТ_Заказ.КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки,
	|	ЗаказНаПеремещениеТабличнаяЧасть.ЕдиницаИзмерения,
	|	ЗаказНаПеремещениеТабличнаяЧасть.КоличествоУпаковок,
	|	NULL,
	|	ВТ_Заказ.ЗаказКлиента,
	|	ЗаказНаПеремещениеТабличнаяЧасть.КоличествоВУпаковке
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.ТабличнаяЧасть КАК ЗаказНаПеремещениеТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПеремещениеТоваров.ТабличнаяЧасть КАК УЧ_ПеремещениеТоваров
	|			ПО ЗаказНаПеремещениеТабличнаяЧасть.Ссылка = УЧ_ПеремещениеТоваров.Ссылка.ДокОснование
	|				И ЗаказНаПеремещениеТабличнаяЧасть.Номенклатура = УЧ_ПеремещениеТоваров.Номенклатура
	|				И (УЧ_ПеремещениеТоваров.Ссылка.ПометкаУдаления = ЛОЖЬ)
	//|				И ЗаказНаПеремещениеТабличнаяЧасть.НомерСтроки = УЧ_ПеремещениеТоваров.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК УЧ_ПеремещениеТоваров1
	|			ПО ЗаказНаПеремещениеТабличнаяЧасть.Ссылка = УЧ_ПеремещениеТоваров1.Ссылка.Заказ
	|				И ЗаказНаПеремещениеТабличнаяЧасть.Номенклатура = УЧ_ПеремещениеТоваров1.Номенклатура
	|				И (УЧ_ПеремещениеТоваров1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	//|				И ЗаказНаПеремещениеТабличнаяЧасть.НомерСтроки = УЧ_ПеремещениеТоваров1.НомерСтроки

	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказНаПеремещениеТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказНаПеремещениеТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон КАК Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК Количество,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК Вес,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ) КАК ВесФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ) КАК КоличествоФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ - ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК ВесПФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ - ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЕдиницаИзмеренияУпаковка КАК ЕдиницаИзмеренияУпаковка,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	МИНИМУМ(ВТ_ЗаказПлюсТЧБегГрупп.ДатаПроизводства) КАК ДатаПроизводства,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиента КАК ЗаказКлиента,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоВУпаковке) КАК КоличествоВУпаковке
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧ
	|ИЗ
	|	ВТ_ЗаказПлюсТЧБегГрупп КАК ВТ_ЗаказПлюсТЧБегГрупп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЕдиницаИзмеренияУпаковка,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ответственные.Контрагент КАК Контрагент,
	|	МАКСИМУМ(Ответственные.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Ответственные
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = Ответственные.Контрагент
	|			И ВТ_ЗаказПлюсТЧ.ЗаказКлиентаДата >= Ответственные.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Ответственные.Контрагент КАК Контрагент,
	|	Ответственные.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_Ответствееные2
	|ИЗ
	|	ВТ_Ответственные КАК ВТ_Ответственные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_Ответственные.Контрагент = Ответственные.Контрагент
	|			И ВТ_Ответственные.Период = Ответственные.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧ.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧ.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧ.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧ.Телефон КАК ТелефонКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказПлюсТЧ.Количество КАК Количество,
	|	ВТ_ЗаказПлюсТЧ.Вес КАК Вес,
	|	ВТ_Ответствееные2.Ответственный КАК МенеджерНаш,
	|	ВТ_ЗаказПлюсТЧ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧ.ВесФ КАК ВесФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоФ КАК КоличествоФ,
	|	ВТ_ЗаказПлюсТЧ.ВесПФ КАК ВесПФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧ.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧ.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧ.ЕдиницаИзмеренияУпаковка КАК ЕдиницаИзмеренияУпаковка,
	|	ВТ_ЗаказПлюсТЧ.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_ЗаказПлюсТЧ.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ЗаказПлюсТЧ.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_ЗаказПлюсТЧ.КоличествоВУпаковке КАК КоличествоВУпаковке
	|ПОМЕСТИТЬ ВТ_ПлюсОтветственный
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ответствееные2 КАК ВТ_Ответствееные2
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = ВТ_Ответствееные2.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш
	|ПОМЕСТИТЬ ВТ_ОтветственныйСгрупп
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПлюсОтветственный.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш КАК МенеджерНаш,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК НомерТелефона
	|ПОМЕСТИТЬ ВТ_ТелефоныОтветственных
	|ИЗ
	|	ВТ_ОтветственныйСгрупп КАК ВТ_ОтветственныйСгрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО (ВТ_ОтветственныйСгрупп.МенеджерНаш = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|				ИЛИ ВТ_ОтветственныйСгрупп.МенеджерНаш.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка)
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидМобТелефон)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ПлюсОтветственный.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ПлюсОтветственный.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ПлюсОтветственный.Контрагент КАК Контрагент,
	|	ВТ_ПлюсОтветственный.АдресКлиента КАК АдресКлиента,
	|	ВТ_ПлюсОтветственный.Примечание КАК Примечание,
	|	ВТ_ПлюсОтветственный.ТелефонКонтрагента КАК ТелефонКонтрагента,
	|	ВТ_ПлюсОтветственный.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ПлюсОтветственный.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ПлюсОтветственный.Номенклатура КАК Номенклатура,
	|	ВТ_ПлюсОтветственный.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|	ВЫБОР
	|		КОГДА &ФормаФакт
	|			ТОГДА ВТ_ПлюсОтветственный.КоличествоФ
	|		ИНАЧЕ ВТ_ПлюсОтветственный.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ФормаФакт
	|			ТОГДА ВТ_ПлюсОтветственный.ВесФ
	|		ИНАЧЕ ВТ_ПлюсОтветственный.Вес
	|	КОНЕЦ КАК Вес,
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш,
	|	ВТ_ТелефоныОтветственных.НомерТелефона КАК ТелефонНашегоМенеджера,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	ВТ_ПлюсОтветственный.ВесФ КАК ВесФ,
	|	ВТ_ПлюсОтветственный.КоличествоФ КАК КоличествоФ,
	|	ВТ_ПлюсОтветственный.ВесПФ КАК ВесПФ,
	|	ВТ_ПлюсОтветственный.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ПлюсОтветственный.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ПлюсОтветственный.Номенклатура.Весовой КАК НоменклатураВесовой,
	|	ВТ_ПлюсОтветственный.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ПлюсОтветственный.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ПлюсОтветственный.ЕдиницаИзмеренияУпаковка КАК ЕдИзмУпаковка,
	|	ВТ_ПлюсОтветственный.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_ПлюсОтветственный.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ПлюсОтветственный.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.Комментарий КАК Комментарий,
	|	ВТ_ПлюсОтветственный.КоличествоВУпаковке КАК КоличествоВУпаковке
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТелефоныОтветственных КАК ВТ_ТелефоныОтветственных
	|		ПО ВТ_ПлюсОтветственный.МенеджерНаш = ВТ_ТелефоныОтветственных.МенеджерНаш
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ПорядокДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	КодУпорядочивания,
	|	АдресКлиента,
	|	ЗаказКлиента,
	|	Номенклатура
	|ИТОГИ
	|	МИНИМУМ(ДатаДоставки),
	|	МАКСИМУМ(Примечание),
	|	МАКСИМУМ(ТелефонКонтрагента),
	|	МАКСИМУМ(ЗаданиеВодителю),
	|	МАКСИМУМ(МенеджерКонтрагента),
	|	СУММА(Количество),
	|	СУММА(Вес),
	|	МАКСИМУМ(МенеджерНаш),
	|	МАКСИМУМ(ТелефонНашегоМенеджера),
	|	СУММА(ВесФ),
	|	СУММА(КоличествоФ),
	|	СУММА(ВесПФ),
	|	СУММА(КоличествоПФ),
	|	МАКСИМУМ(КодУпорядочивания),
	|	МАКСИМУМ(ЗаданиеСкладу),
	|	СУММА(КоличествоУпаковок),
	|	МИНИМУМ(ДатаПроизводства)
	|ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ПорядокДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	АдресКлиента,
	|	ЗаказКлиента
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ФормаФакт", ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт");
	Запрос.УстановитьПараметр("ВидМобТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	
	
	ЭтоЛистНабора = Ложь;
	Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйПланФакт" Тогда
		Макет = ПолучитьМакет("МаршрутныйЛистФакт");
	ИначеЕсли ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаФакт" Тогда
		Макет = ПолучитьМакет("МаршрутныйЛистВесовойФакт");
		ЭтоЛистНабора = Истина;
	ИначеЕсли ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
		//Макет = ПолучитьМакет("МаршрутныйЛистВесовой");
		//ЭтоЛистНабора = Истина; 
		ПечатьНаборЗаказа(ТабличныйДокумент, МассивОбъектов,ОбъектыПечати); 
		Возврат;
	ИначеЕсли ИмяКоманды ="Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт" Тогда
		Макет = ПолучитьМакет("МаршрутныйЛистНовыйФакт");
	Иначе
		Макет = ПолучитьМакет("МаршрутныйЛист");
	КонецЕсли;
	
	ТЗ_СводПоТоварам = Новый ТаблицаЗначений;
	ТЗ_СводПоТоварам.Колонки.Добавить("Номенклатура");
	//ТЗ_СводПоТоварам.Колонки.Добавить("НоменклатураНаименование");
	ТЗ_СводПоТоварам.Колонки.Добавить("ЕдИзм");
	ТЗ_СводПоТоварам.Колонки.Добавить("ЕдИзмУпаковка");
	ТЗ_СводПоТоварам.Колонки.Добавить("Количество");
	ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоУпаковок");
	ТЗ_СводПоТоварам.Колонки.Добавить("Вес");
	
	Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
		ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоУПСбор");
		ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоШтСбор");
		ТЗ_СводПоТоварам.Колонки.Добавить("ВесСбор"); 
		ТЗ_СводПоТоварам.Колонки.Добавить("Сбор"); 
		
		ЗапросЕдИзм = Новый Запрос;
		ЗапросЕдИзм.Текст = 
		"ВЫБРАТЬ
		|	КлассификаторЕдиницИзмерения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|ГДЕ
		|	СОКРЛП(КлассификаторЕдиницИзмерения.Код) В (&МассивКодыВес)";
		МассивКодыВес = Новый Массив;
		МассивКодыВес.Добавить("163"); 
		МассивКодыВес.Добавить("166");
		МассивКодыВес.Добавить("161");
		МассивКодыВес.Добавить("168");
		ЗапросЕдИзм.УстановитьПараметр("МассивКодыВес", МассивКодыВес);
		
		РезультатЗапросаЕдИзм = ЗапросЕдИзм.Выполнить();
		
		ВыборкаЕдИзм = РезультатЗапросаЕдИзм.Выбрать();
		МассивВесовыхЕдИзм = Новый Массив;
		Пока ВыборкаЕдИзм.Следующий() Цикл
			МассивВесовыхЕдИзм.Добавить(ВыборкаЕдИзм.Ссылка);
		КонецЦикла;
	КонецЕсли;	 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМаршрутныйЛист = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	НомерТочки = 1;
	
	Пока ВыборкаМаршрутныйЛист.Следующий() Цикл
		
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ЭтоЛистНабора Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ПредставлениеДокумента = "Лист набора по маршрутному листу №";
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ПредставлениеДокумента = "Маршрутный лист №";
		КонецЕсли;
		
		ОбластьМакета.Параметры.НомерМарштурногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Номер;
		ОбластьМакета.Параметры.ДатаМаршрутногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Дата; 
		ТабличныйДокумент.Вывести(ОбластьМакета); 
		
		ВыборкаДатаОтгрузки = ВыборкаМаршрутныйЛист.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
		
		Пока ВыборкаДатаОтгрузки.Следующий() Цикл   
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ВыборкаДатаДоставки = ВыборкаДатаОтгрузки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДатаДоставки.Следующий() Цикл
				ВыборкаДатаДоставкиПо = ВыборкаДатаДоставки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДатаДоставкиПо.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть("ДатаДоставки");
					ОбластьМакета.Параметры.ДатаДоставки = Формат(ВыборкаДатаДоставки.ДатаДоставки, "ДФ=ЧЧ:мм"); 
					ОбластьМакета.Параметры.ДатаДоставкиДо = Формат(ВыборкаДатаДоставкиПо.ДатаДоставкиДо, "ДФ=ЧЧ:мм");
					
					Если Не ЭтоЛистНабора Тогда
						Если ИмяКоманды <> "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт" Тогда
							ТабличныйДокумент.Вывести(ОбластьМакета, 0); 
						КонецЕсли;
					КонецЕсли;
					
					ВыборкаКонтрагент = ВыборкаДатаДоставкиПо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаКонтрагент.Следующий() Цикл
						ОбластьМакета = Макет.ПолучитьОбласть("Контрагент");
						ОбластьМакета.Параметры.Заполнить(ВыборкаКонтрагент);
						
						ТабличныйДокумент.Вывести(ОбластьМакета, 1);
						
						ВыборкаАдрес = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);					  
						
						Пока ВыборкаАдрес.Следующий() Цикл
							ОбластьМакета = Макет.ПолучитьОбласть("Адрес");
							ОбластьМакета.Параметры.Заполнить(ВыборкаАдрес);  
							Если ИмяКоманды <> "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт" Тогда 
								ТабличныйДокумент.Вывести(ОбластьМакета, 2);
							КонецЕсли;
							ВыборкаЗаказКлиента = ВыборкаАдрес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Пока ВыборкаЗаказКлиента.Следующий() Цикл
								ОбластьМакета = Макет.ПолучитьОбласть("Заказ");
								ОбластьМакета.Параметры.Заполнить(ВыборкаЗаказКлиента);
								Если НЕ ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
									ОбластьМакета.Параметры.ДатаДоставки = Формат(ВыборкаЗаказКлиента.ДатаДоставки, "ДФ=ЧЧ:мм"); 
									ОбластьМакета.Параметры.ДатаДоставкиДо = Формат(ВыборкаЗаказКлиента.ДатаДоставкиДо, "ДФ=ЧЧ:мм"); 
								КонецЕсли; //ПЕ
								ОбластьМакета.Параметры.НомерТочки = НомерТочки;
								ОбластьМакета.Параметры.КодУпорядочивания = ВыборкаЗаказКлиента.КодУпорядочивания;
								НомерТочки = НомерТочки + 1; 
								//Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт" Тогда 
								//	ОбластьМакета.Параметры.ЗаказКлиента = ВыборкаЗаказКлиента.АдресКлиента;
								//КонецЕсли; 
								Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт" Тогда 
									ТабличныйДокумент.Вывести(ОбластьМакета, 2);	
								Иначе
									ТабличныйДокумент.Вывести(ОбластьМакета, 3); 
								КонецЕсли;
								ВыборкаНоменклатура = ВыборкаЗаказКлиента.Выбрать();
								Пока ВыборкаНоменклатура.Следующий() Цикл
									
									
									Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
										КоличествоУпаковокДляСводаСбор = 0;
										КоличествоШтДляСводаСбор = 0; 
										ВесДляСводаСбор = 0;
									КонецЕсли;
									Если ЭтоЛистНабора И ВыборкаНоменклатура.НоменклатураВесовой Тогда
										ОбластьМакета = Макет.ПолучитьОбласть("НоменклатураВес");
										ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура); 
										//ПЕ+++    
										Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
											Сбор = "Вес: " + ВыборкаНоменклатура.Вес + " " + ВыборкаНоменклатура.ЕдИзм;   
											ОбластьМакета.Параметры.Сбор = Сбор;
											ВесДляСводаСбор = ВесДляСводаСбор + ВыборкаНоменклатура.Вес;   
										КонецЕсли;
										//ПЕ---
										
										ТабличныйДокумент.Вывести(ОбластьМакета, 4);
									Иначе
										ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
										ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
										//ПЕ+++
										Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
											ЭтоВесоваяЕдИзмерения = Ложь;
											Для Каждого ВесоваяЕдиницаИзм Из МассивВесовыхЕдИзм Цикл
												Если ВесоваяЕдиницаИзм = ВыборкаНоменклатура.ЕдИзм Тогда
													ЭтоВесоваяЕдИзмерения = Истина;
													Прервать;
												КонецЕсли;
											КонецЦикла;
											Если ЭтоВесоваяЕдИзмерения Тогда
												Сбор = "Вес: " + ВыборкаНоменклатура.Вес + " " + ВыборкаНоменклатура.ЕдИзм;   
												ОбластьМакета.Параметры.Сбор = Сбор;
												ВесДляСводаСбор = ВесДляСводаСбор + ВыборкаНоменклатура.Вес;  
											Иначе
												Если ВыборкаНоменклатура.КоличествоУпаковок = 0 ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 0 
													ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 1 Тогда
													КолЕдиницСбор = ВыборкаНоменклатура.Количество;
													Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
													КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
												Иначе 
													//КоличествоПоУпаковкам = ВыборкаНоменклатура.КоличествоУпаковок - ВыборкаНоменклатура.КоличествоВУпаковке; 
													//КолЕдиницСбор = ВыборкаНоменклатура.Количество - КоличествоПоУпаковкам;
													КоличествоУпСбор = Цел(ВыборкаНоменклатура.Количество / ВыборкаНоменклатура.КоличествоВУпаковке);
													КолЕдиницСбор = ВыборкаНоменклатура.Количество % ВыборкаНоменклатура.КоличествоВУпаковке; 
													Если КолЕдиницСбор = 0 Тогда
														//Сбор = Строка(ВыборкаНоменклатура.КоличествоУпаковок) + " кор.";
														Сбор = Строка(КоличествоУпСбор) + " кор.";
														КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
													Иначе
														Сбор = Строка(КоличествоУпСбор) + " кор." + " + " + КолЕдиницСбор + " " + ВыборкаНоменклатура.ЕдИзм; 
														КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
														КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
													КонецЕсли;
												КонецЕсли;
												ОбластьМакета.Параметры.Сбор = Сбор;
											КонецЕсли;
											//ПЕ---
										КонецЕсли;
										
										ТабличныйДокумент.Вывести(ОбластьМакета, 4);
									КонецЕсли;
									НоваяСтрокаСвод = ТЗ_СводПоТоварам.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаСвод, ВыборкаНоменклатура); 
									Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
										//ПЕ+++
										НоваяСтрокаСвод.КоличествоУПСбор = КоличествоУпаковокДляСводаСбор; 
										НоваяСтрокаСвод.КоличествоШтСбор = КоличествоШтДляСводаСбор;
										НоваяСтрокаСвод.ВесСбор = ВесДляСводаСбор;
										//ПЕ---   
									КонецЕсли;
									//НоваяСтрокаСвод.НоменклатураНаименование = ВыборкаНоменклатура.Номенклатура.НаименованиеПолное;
								КонецЦикла; 
								
							КонецЦикла;
							
						КонецЦикла;
						
					КонецЦикла; 
					
				КонецЦикла;	
				
			КонецЦикла;  
			
			ОбластьМакета = Макет.ПолучитьОбласть("Итог");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета);  
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЦикла;    
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаМаршрутныйЛист.МаршрутныйЛист);
		
		//ТЗ_СводПоТоварам.Свернуть("Номенклатура, НоменклатураНаименование, ЕдИзм", "Количество, Вес");
		Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
			ТЗ_СводПоТоварам.Свернуть("Номенклатура, ЕдИзм, ЕдИзмУпаковка, Сбор", "Количество, КоличествоУпаковок, Вес, КоличествоУПСбор, КоличествоШтСбор, ВесСбор"); 
		Иначе
			ТЗ_СводПоТоварам.Свернуть("Номенклатура, ЕдИзм, ЕдИзмУпаковка", "Количество, КоличествоУпаковок, Вес"); 
		КонецЕсли;
		ТЗ_СводПоТоварам.Сортировать("Номенклатура Возр");
		
		ИтогоСводТоваровКоличество = 0;
		ИтогоСводТоваровКоличествоУпаковок = 0;
		ИтогоСводТоваровВес = 0;
		ОбластьСводТоваровЗаголовок = Макет.ПолучитьОбласть("СводТоваровЗаголовок");
		ТабличныйДокумент.Вывести(ОбластьСводТоваровЗаголовок); 
		
		Для Каждого ТекСтрокаСводПоТоварам Из ТЗ_СводПоТоварам Цикл  
			//ПЕ+++
			Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
				Если ТекСтрокаСводПоТоварам.ВесСбор = 0 Тогда
					Если ТекСтрокаСводПоТоварам.КоличествоУПСбор = 0 Тогда
						ТекСтрокаСводПоТоварам.Сбор = ?(ТекСтрокаСводПоТоварам.КоличествоШтСбор = 0, "", 
						Строка(ТекСтрокаСводПоТоварам.КоличествоШтСбор) + " " + ТекСтрокаСводПоТоварам.ЕдИзм);
					Иначе
						ШтСбор = ?(ТекСтрокаСводПоТоварам.КоличествоШтСбор = 0, "", 
						Строка(ТекСтрокаСводПоТоварам.КоличествоШтСбор) + " " + ТекСтрокаСводПоТоварам.ЕдИзм);
						ТекСтрокаСводПоТоварам.Сбор = Строка(ТекСтрокаСводПоТоварам.КоличествоУПСбор) + " кор." + " + " + ШтСбор; 
					КонецЕсли;
				Иначе 
					ТекСтрокаСводПоТоварам.Сбор = "Вес: " + ТекСтрокаСводПоТоварам.ВесСбор + " " + ТекСтрокаСводПоТоварам.ЕдИзм;
				КонецЕсли;	
				//ПЕ---    
			КонецЕсли;
			ОбластьСводТоваровСтрока = Макет.ПолучитьОбласть("СводТоваровСтрока");
			ОбластьСводТоваровСтрока.Параметры.Заполнить(ТекСтрокаСводПоТоварам); 
			ТабличныйДокумент.Вывести(ОбластьСводТоваровСтрока); 
			ИтогоСводТоваровКоличество = ИтогоСводТоваровКоличество + ТекСтрокаСводПоТоварам.Количество;
			ИтогоСводТоваровКоличествоУпаковок = ИтогоСводТоваровКоличествоУпаковок + ТекСтрокаСводПоТоварам.КоличествоУпаковок;
			ИтогоСводТоваровВес = ИтогоСводТоваровВес + ТекСтрокаСводПоТоварам.Вес;
		КонецЦикла;
		
		ОбластьСводТоваровПодвал = Макет.ПолучитьОбласть("СводТоваровПодвал");
		ОбластьСводТоваровПодвал.Параметры.Количество = ИтогоСводТоваровКоличество; 
		
		Если Не ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаФакт" И Не ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйПланФакт" 
			И НЕ  ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
			ОбластьСводТоваровПодвал.Параметры.КоличествоУпаковок = ИтогоСводТоваровКоличествоУпаковок;
		КонецЕсли;
		
		ОбластьСводТоваровПодвал.Параметры.Вес = ИтогоСводТоваровВес;
		ТабличныйДокумент.Вывести(ОбластьСводТоваровПодвал);
		
		Если НЕ ЭтоЛистНабора И ЗначениеЗаполнено(ВыборкаМаршрутныйЛист.МаршрутныйЛист.Доставщик) Тогда
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Доставщик = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Доставщик;
			ОбластьПодвал.Параметры.ПаспортныеДанные = ПаспортныеДанныеВодителя(ВыборкаМаршрутныйЛист.МаршрутныйЛист.Доставщик);
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры  

Процедура ПечатьМаршрутныйЛистНаборЗаказа(ТабличныйДокумент, МассивОбъектов, ИмяКоманды = Неопределено) Экспорт
	
	ОбъектыПечати = Новый СписокЗначений;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МАРШРУТНЫЙ_ЛИСТ_НОВ";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаПоступления, ДЕНЬ) КАК ДатаОтгрузки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставки КАК ДатаДоставки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.АдресДоставки КАК АдресКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.Примечание КАК Примечание,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Телефон КАК Телефон,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Дата КАК ЗаказКлиентаДата,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Номер КАК НомерЗаказа
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент КАК Контрагент,
	|	ВТ_Заказ.АдресКлиента КАК АдресКлиента,
	|	ВТ_Заказ.Примечание КАК Примечание,
	|	ВТ_Заказ.Телефон КАК Телефон,
	|	ВТ_Заказ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура.Вес * ЗаказКлиентаТабличнаяЧасть.Количество КАК Вес,
	|	ВТ_Заказ.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	0 КАК ВесФ,
	|	0 КАК КоличествоФ,
	|	ВТ_Заказ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_Заказ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_Заказ.НомерЗаказа КАК НомерЗаказа
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧБегГрупп
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура,
	|	0,
	|	0,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Номенклатура.Вес * УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Номенклатура.Вес * УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Номенклатура.Вес * УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Номенклатура.Вес * ПередачаТоваровТовары.Количество, 0),
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Количество, 0),
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.ЗаданиеСкладу,
	|	ВТ_Заказ.НомерЗаказа
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары.Ссылка.ДокОснование
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары.Номенклатура
	|				И (УЧ_РеализацияТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК УЧ_РеализацияТовары1
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары1.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары1.Номенклатура
	|				И (УЧ_РеализацияТовары1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары1.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК УЧ_РеализацияТовары2
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары2.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары2.Номенклатура
	|				И (УЧ_РеализацияТовары2.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары2.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Номенклатура = ПередачаТоваровТовары.Номенклатура
	|				И (ПередачаТоваровТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.Ссылка = ПередачаТоваровТовары.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = ПередачаТоваровТовары.НомерСтроки
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон КАК Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК Количество,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК Вес,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ) КАК ВесФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ) КАК КоличествоФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ - ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК ВесПФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ - ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.НомерЗаказа КАК НомерЗаказа
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧ
	|ИЗ
	|	ВТ_ЗаказПлюсТЧБегГрупп КАК ВТ_ЗаказПлюсТЧБегГрупп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.НомерЗаказа,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ответственные.Контрагент КАК Контрагент,
	|	МАКСИМУМ(Ответственные.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Ответственные
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = Ответственные.Контрагент
	|			И ВТ_ЗаказПлюсТЧ.ЗаказКлиентаДата >= Ответственные.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Ответственные.Контрагент КАК Контрагент,
	|	Ответственные.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_Ответствееные2
	|ИЗ
	|	ВТ_Ответственные КАК ВТ_Ответственные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_Ответственные.Контрагент = Ответственные.Контрагент
	|			И ВТ_Ответственные.Период = Ответственные.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧ.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧ.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧ.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧ.Телефон КАК ТелефонКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказПлюсТЧ.Количество КАК Количество,
	|	ВТ_ЗаказПлюсТЧ.Вес КАК Вес,
	|	ВТ_Ответствееные2.Ответственный КАК МенеджерНаш,
	|	ВТ_ЗаказПлюсТЧ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧ.ВесФ КАК ВесФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоФ КАК КоличествоФ,
	|	ВТ_ЗаказПлюсТЧ.ВесПФ КАК ВесПФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧ.НомерЗаказа КАК НомерЗаказа
	|ПОМЕСТИТЬ ВТ_ПлюсОтветственный
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ответствееные2 КАК ВТ_Ответствееные2
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = ВТ_Ответствееные2.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш
	|ПОМЕСТИТЬ ВТ_ОтветственныйСгрупп
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПлюсОтветственный.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш КАК МенеджерНаш,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК НомерТелефона
	|ПОМЕСТИТЬ ВТ_ТелефоныОтветственных
	|ИЗ
	|	ВТ_ОтветственныйСгрупп КАК ВТ_ОтветственныйСгрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО (ВТ_ОтветственныйСгрупп.МенеджерНаш = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|				ИЛИ ВТ_ОтветственныйСгрупп.МенеджерНаш.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка)
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидМобТелефон)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ПлюсОтветственный.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ПлюсОтветственный.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ПлюсОтветственный.Контрагент КАК Контрагент,
	|	ВТ_ПлюсОтветственный.АдресКлиента КАК АдресКлиента,
	|	ВТ_ПлюсОтветственный.Примечание КАК Примечание,
	|	ВТ_ПлюсОтветственный.ТелефонКонтрагента КАК ТелефонКонтрагента,
	|	ВТ_ПлюсОтветственный.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ПлюсОтветственный.Номенклатура КАК Номенклатура,
	|	ВТ_ПлюсОтветственный.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|	ВТ_ПлюсОтветственный.Номенклатура.Весовой КАК Весовой,
	|	ВТ_ПлюсОтветственный.Количество КАК Количество,
	|	ВТ_ПлюсОтветственный.Вес КАК Вес,
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш,
	|	ВТ_ТелефоныОтветственных.НомерТелефона КАК ТелефонНашегоМенеджера,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	ВТ_ПлюсОтветственный.ВесФ КАК ВесФ,
	|	ВТ_ПлюсОтветственный.КоличествоФ КАК КоличествоФ,
	|	ВТ_ПлюсОтветственный.ВесПФ КАК ВесПФ,
	|	ВТ_ПлюсОтветственный.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ПлюсОтветственный.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ПлюсОтветственный.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ПлюсОтветственный.НомерЗаказа КАК НомерЗаказа
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТелефоныОтветственных КАК ВТ_ТелефоныОтветственных
	|		ПО ВТ_ПлюсОтветственный.МенеджерНаш = ВТ_ТелефоныОтветственных.МенеджерНаш
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ДатаДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	АдресКлиента,
	|	Номенклатура
	|ИТОГИ
	|	МАКСИМУМ(ТелефонКонтрагента),
	|	МАКСИМУМ(МенеджерКонтрагента),
	|	СУММА(Количество),
	|	СУММА(Вес),
	|	МАКСИМУМ(МенеджерНаш),
	|	МАКСИМУМ(ТелефонНашегоМенеджера),
	|	СУММА(ВесФ),
	|	СУММА(КоличествоФ),
	|	СУММА(ВесПФ),
	|	СУММА(КоличествоПФ)
	|ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	Номенклатура
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидМобТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМаршрутныйЛист = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаМаршрутныйЛист.Следующий() Цикл
		
		Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаФакт" Тогда
			Макет = ПолучитьМакет("МаршрутныйЛистВесовойФакт");
		ИначеЕсли ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
			Макет = ПолучитьМакет("МаршрутныйЛистВесовой");
		Иначе
			Макет = ПолучитьМакет("МаршрутныйЛист");
		КонецЕсли;
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ПредставлениеДокумента = "Лист набора по маршрутному листу №";
		ОбластьМакета.Параметры.НомерМарштурногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Номер;
		ОбластьМакета.Параметры.ДатаМаршрутногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Дата; 
		ТабличныйДокумент.Вывести(ОбластьМакета); 
		
		ВыборкаДатаОтгрузки = ВыборкаМаршрутныйЛист.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
		
		Пока ВыборкаДатаОтгрузки.Следующий() Цикл   
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НомерНоменклатуры = 0;
			
			ВыборкаНоменклатура = ВыборкаДатаОтгрузки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					Продолжить;			
				КонецЕсли;
				
				НомерНоменклатуры = НомерНоменклатуры + 1;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
				ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
				ОбластьМакета.Параметры.НомерПозиции = НомерНоменклатуры;
				ТабличныйДокумент.Вывести(ОбластьМакета, 1);
				
				//Если ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНаборЗаказаВесовой" Тогда
				ВыборкаКонтрагент = ВыборкаНоменклатура.Выбрать();
				Пока ВыборкаКонтрагент.Следующий() Цикл
					Если ВыборкаНоменклатура.Весовой Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ДанныеЗаказаВес");
						ОбластьМакета.Параметры.Заполнить(ВыборкаКонтрагент);
						ТабличныйДокумент.Вывести(ОбластьМакета, 2);
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("ДанныеЗаказа");
						ОбластьМакета.Параметры.Заполнить(ВыборкаКонтрагент);
						ТабличныйДокумент.Вывести(ОбластьМакета, 2);
					КонецЕсли;
				КонецЦикла;
				//Иначе	
				//	ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
				//	ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
				//	ТабличныйДокумент.Вывести(ОбластьМакета, 2);
				//КонецЕсли;
				
			КонецЦикла;
			ОбластьМакета = Макет.ПолучитьОбласть("Итог");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета, 1);  
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЦикла;    
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаМаршрутныйЛист.МаршрутныйЛист);	 
	КонецЦикла;
	
КонецПроцедуры  

Процедура ПечатьПлоский(ТабличныйДокумент, МассивОбъектов, ИмяКоманды = Неопределено) Экспорт
	
	ОбъектыПечати = Новый СписокЗначений;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МАРШРУТНЫЙ_ЛИСТ_НОВ";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаПоступления, ДЕНЬ) КАК ДатаОтгрузки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставки КАК ДатаДоставки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.АдресДоставки КАК АдресКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.Примечание КАК Примечание,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Телефон КАК Телефон,
	|	ВЫРАЗИТЬ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеВодителю КАК СТРОКА(1000)) КАК ЗаданиеВодителю,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Дата КАК ЗаказКлиентаДата,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Комментарий КАК Комментарий,
	|	сабМаршрутныйЛистТабличнаяЧасть.ВесЗаказа КАК ВесЗаказа,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.Координаты КАК ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент КАК Контрагент,
	|	ВТ_Заказ.АдресКлиента КАК АдресКлиента,
	|	ВТ_Заказ.Примечание КАК Примечание,
	|	ВТ_Заказ.Телефон КАК Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура.Вес * ЗаказКлиентаТабличнаяЧасть.Количество КАК Вес,
	|	ВТ_Заказ.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	0 КАК ВесФ,
	|	0 КАК КоличествоФ,
	|	ВТ_Заказ.Комментарий КАК Комментарий,
	|	ВТ_Заказ.ВесЗаказа КАК ВесЗаказа,
	|	ВТ_Заказ.ЗаказКлиентаПодразделениеКонтрагентаКоординаты КАК ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧБегГрупп
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура,
	|	0,
	|	0,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Номенклатура.Вес * УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Номенклатура.Вес * УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Номенклатура.Вес * УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Номенклатура.Вес * ПередачаТоваровТовары.Количество, 0),
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Количество, 0),
	|	ВТ_Заказ.Комментарий,
	|	ВТ_Заказ.ВесЗаказа,
	|	ВТ_Заказ.ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары.Ссылка.ДокОснование
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары.Номенклатура
	|				И (УЧ_РеализацияТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК УЧ_РеализацияТовары1
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары1.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары1.Номенклатура
	|				И (УЧ_РеализацияТовары1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары1.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК УЧ_РеализацияТовары2
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары2.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары2.Номенклатура
	|				И (УЧ_РеализацияТовары2.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары2.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Номенклатура = ПередачаТоваровТовары.Номенклатура
	|				И (ПередачаТоваровТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.Ссылка = ПередачаТоваровТовары.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = ПередачаТоваровТовары.НомерСтроки
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон КАК Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК Количество,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК Вес,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ) КАК ВесФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ) КАК КоличествоФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ - ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК ВесПФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ - ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Комментарий КАК Комментарий,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ВесЗаказа КАК ВесЗаказа,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаПодразделениеКонтрагентаКоординаты КАК ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧ
	|ИЗ
	|	ВТ_ЗаказПлюсТЧБегГрупп КАК ВТ_ЗаказПлюсТЧБегГрупп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Комментарий,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ВесЗаказа,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ответственные.Контрагент КАК Контрагент,
	|	МАКСИМУМ(Ответственные.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Ответственные
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = Ответственные.Контрагент
	|			И ВТ_ЗаказПлюсТЧ.ЗаказКлиентаДата >= Ответственные.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Ответственные.Контрагент КАК Контрагент,
	|	Ответственные.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_Ответствееные2
	|ИЗ
	|	ВТ_Ответственные КАК ВТ_Ответственные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_Ответственные.Контрагент = Ответственные.Контрагент
	|			И ВТ_Ответственные.Период = Ответственные.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧ.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧ.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧ.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧ.Телефон КАК ТелефонКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказПлюсТЧ.Количество КАК Количество,
	|	ВТ_ЗаказПлюсТЧ.Вес КАК Вес,
	|	ВТ_Ответствееные2.Ответственный КАК МенеджерНаш,
	|	ВТ_ЗаказПлюсТЧ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧ.ВесФ КАК ВесФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоФ КАК КоличествоФ,
	|	ВТ_ЗаказПлюсТЧ.ВесПФ КАК ВесПФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧ.Комментарий КАК Комментарий,
	|	ВТ_ЗаказПлюсТЧ.ВесЗаказа КАК ВесЗаказа,
	|	ВТ_ЗаказПлюсТЧ.ЗаказКлиентаПодразделениеКонтрагентаКоординаты КАК ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|ПОМЕСТИТЬ ВТ_ПлюсОтветственный
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ответствееные2 КАК ВТ_Ответствееные2
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = ВТ_Ответствееные2.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш
	|ПОМЕСТИТЬ ВТ_ОтветственныйСгрупп
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПлюсОтветственный.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш КАК МенеджерНаш,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК НомерТелефона
	|ПОМЕСТИТЬ ВТ_ТелефоныОтветственных
	|ИЗ
	|	ВТ_ОтветственныйСгрупп КАК ВТ_ОтветственныйСгрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО (ВТ_ОтветственныйСгрупп.МенеджерНаш = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|				ИЛИ ВТ_ОтветственныйСгрупп.МенеджерНаш.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка)
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидМобТелефон)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ПлюсОтветственный.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ПлюсОтветственный.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ПлюсОтветственный.Контрагент КАК Контрагент,
	|	ВТ_ПлюсОтветственный.АдресКлиента КАК АдресКлиента,
	|	ВТ_ПлюсОтветственный.Примечание КАК Примечание,
	|	ВТ_ПлюсОтветственный.ТелефонКонтрагента КАК ТелефонКонтрагента,
	|	ВТ_ПлюсОтветственный.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ПлюсОтветственный.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш,
	|	ВТ_ТелефоныОтветственных.НомерТелефона КАК ТелефонНашегоМенеджера,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	ВТ_ПлюсОтветственный.Комментарий КАК Комментарий,
	|	ВТ_ПлюсОтветственный.ВесЗаказа КАК ВесЗаказа,
	|	ВТ_ПлюсОтветственный.ЗаказКлиентаПодразделениеКонтрагентаКоординаты КАК Координаты
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТелефоныОтветственных КАК ВТ_ТелефоныОтветственных
	|		ПО ВТ_ПлюсОтветственный.МенеджерНаш = ВТ_ТелефоныОтветственных.МенеджерНаш
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПлюсОтветственный.ДатаОтгрузки,
	|	ВТ_ПлюсОтветственный.ДатаДоставки,
	|	ВТ_ПлюсОтветственный.ДатаДоставкиДо,
	|	ВТ_ПлюсОтветственный.Контрагент,
	|	ВТ_ПлюсОтветственный.АдресКлиента,
	|	ВТ_ПлюсОтветственный.ТелефонКонтрагента,
	|	ВТ_ПлюсОтветственный.ЗаданиеВодителю,
	|	ВТ_ПлюсОтветственный.МенеджерКонтрагента,
	|	ВТ_ПлюсОтветственный.МенеджерНаш,
	|	ВТ_ТелефоныОтветственных.НомерТелефона,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.МаршрутДоставки,
	|	ВТ_ПлюсОтветственный.Комментарий,
	|	ВТ_ПлюсОтветственный.Примечание,
	|	ВТ_ПлюсОтветственный.ВесЗаказа,
	|	ВТ_ПлюсОтветственный.ЗаказКлиентаПодразделениеКонтрагентаКоординаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ДатаДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	АдресКлиента
	|ИТОГИ ПО
	|	МаршрутныйЛист
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ФормаФакт", ИмяКоманды = "Документ.сабМаршрутныйЛист.Команда.МаршрутныйЛистНовыйФакт");
	Запрос.УстановитьПараметр("ВидМобТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМаршрутныйЛист = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = ПолучитьМакет("ПечатьПлоский");
	
	ПервыйДокумент = Истина;
	
	НомерСтроки = 1;
	ИтогоВес = 0;
	
	Пока ВыборкаМаршрутныйЛист.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ПредставлениеДокумента = "Маршрутный лист №";
		ОбластьМакета.Параметры.НомерМарштурногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Номер;
		ОбластьМакета.Параметры.ДатаМаршрутногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Дата; 
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаМаршрутныйЛист);
		ТабличныйДокумент.Вывести(ОбластьМакета); 		
		ВыборкаДатаОтгрузки = ВыборкаМаршрутныйЛист.Выбрать(); 
		
		Пока ВыборкаДатаОтгрузки.Следующий() Цикл   
			
			ОбластьМакета = Макет.ПолучитьОбласть("Заказ");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ОбластьМакета.Параметры.ДатаДоставки = Формат(ВыборкаДатаОтгрузки.ДатаДоставки, "ДФ=ЧЧ:мм"); 
			ОбластьМакета.Параметры.ДатаДоставкиДо = Формат(ВыборкаДатаОтгрузки.ДатаДоставкиДо, "ДФ=ЧЧ:мм");
			ОбластьМакета.Параметры.ДатаДоставкиДата = Формат(ВыборкаДатаОтгрузки.ДатаДоставки, "ДФ=dd.MM.yyyy"); 
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НомерСтроки = НомерСтроки + 1;
			ИтогоВес = ИтогоВес + ВыборкаДатаОтгрузки.ВесЗаказа;
			
		КонецЦикла;    
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаМаршрутныйЛист.МаршрутныйЛист);	 
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ИтогоВес = ИтогоВес;
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры  

Функция ПечатьОтпускТоваров(ТабДок,Ссылка) Экспорт
	ТабДок  = Новый ТабличныйДокумент;
	Макет = Документы.сабМаршрутныйЛист.ПолучитьМакет("ОтпускТоваров");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЗаказКлиентаТабличнаяЧасть.Количество) КАК Количество
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ДокЗаказКлиента
	|			ПРАВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|			ПО (ЗаказКлиентаТабличнаяЧасть.Ссылка = ДокЗаказКлиента.Ссылка)
	|		ПО сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента = ДокЗаказКлиента.Ссылка
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Шапка = Макет.ПолучитьОбласть("Шапка");             
	ТабДок.Очистить();
	
	Шапка.Параметры.ПредставлениеГрузополучателя = СокрЛП(Строка(Ссылка.Организация))+", "+СокрЛП(Строка(Ссылка.Организация.ИНН));
	
	Шапка.Параметры.МаркаГосНомерТС = Ссылка.ТранспортноеСредство;
	Шапка.Параметры.ФИОВодителя = Ссылка.Доставщик;
	
	ТабДок.Вывести(Шапка);
	
	ИтогоВес = 0;
	Строка = Макет.ПолучитьОбласть("Строка");
	
	//ВставлятьРазделительСтраниц = Ложь;
	Для каждого Стр Из Результат Цикл
		
		Если ПустаяСтрока(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		//Шапка.Параметры.ЗаявкаПоклажедателя = Выборка.Номер;
		
		Строка.Параметры.ТМЦ = Стр.Номенклатура;
		Строка.Параметры.ЕдИзм = Стр.ЕдиницаИзмерения;
		Строка.Параметры.Количество = Стр.Количество;
		Строка.Параметры.Вес = Стр.Номенклатура.Вес*Стр.Количество;
		ИтогоВес = ИтогоВес+Строка.Параметры.Вес;
		//Строка.Примечание = "";
		ТабДок.Вывести(Строка);		
		//ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.ИтогоВес = ИтогоВес;
	ТабДок.Вывести(Подвал);

	Возврат ТабДок;

КонецФункции


Функция ПаспортныеДанныеВодителя(Водитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|			,
	|			Физлицо = &Водитель
	|				И ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)) КАК ДокументыФизическихЛицСрезПоследних";
	Запрос.УстановитьПараметр("Водитель", Водитель);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат "Паспорт Серия " + Выборка.Серия + " №" + Выборка.Номер + " Выдан " + Формат(Выборка.ДатаВыдачи, "ДЛФ=D") + " г. " + Выборка.КемВыдан + " к.п. " + Выборка.КодПодразделения;
	Иначе
		Возврат ""
	КонецЕсли;
	
КонецФункции 

Процедура ПечатьНаборЗаказа(ТабличныйДокумент, МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	сабОбработкаДокументов.ДокументУУ КАК ДокументУУ,
	|	сабОбработкаДокументов.ДокументБУ КАК ДокументБУ,
	|	сабОбработкаДокументов.ДатаОбработки КАК ДатаОбработки
	|ПОМЕСТИТЬ ВТ_НеПустые
	|ИЗ
	|	РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
	|ГДЕ
	|	сабОбработкаДокументов.ДокументУУ.Дата ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	сабОбработкаДокументов.ДокументБУ,
	|	сабОбработкаДокументов.ДокументУУ,
	|	сабОбработкаДокументов.ДатаОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ВТ_НеПустые.ДокументУУ) КАК ДокументУУ,
	|	ВТ_НеПустые.ДокументБУ КАК ДокументБУ,
	|	ВТ_НеПустые.ДатаОбработки КАК ДатаОбработки
	|ПОМЕСТИТЬ Вт_Группировка
	|ИЗ
	|	ВТ_НеПустые КАК ВТ_НеПустые
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НеПустые.ДокументБУ,
	|	ВТ_НеПустые.ДатаОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Вт_Группировка.ДокументБУ КАК ДокументБУ,
	|	МАКСИМУМ(Вт_Группировка.ДатаОбработки) КАК ДатаОбработки
	|ПОМЕСТИТЬ Вт_Группировка_Итоговая
	|ИЗ
	|	Вт_Группировка КАК Вт_Группировка
	|
	|СГРУППИРОВАТЬ ПО
	|	Вт_Группировка.ДокументБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Вт_Группировка_Итоговая.ДокументБУ КАК ДокументБУ,
	|	МАКСИМУМ(Вт_Группировка.ДокументУУ) КАК ДокументУУ
	|ПОМЕСТИТЬ ВТ_Итоговая
	|ИЗ
	|	Вт_Группировка_Итоговая КАК Вт_Группировка_Итоговая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Группировка КАК Вт_Группировка
	|		ПО Вт_Группировка_Итоговая.ДокументБУ = Вт_Группировка.ДокументБУ
	|			И Вт_Группировка_Итоговая.ДатаОбработки = Вт_Группировка.ДатаОбработки
	|
	|СГРУППИРОВАТЬ ПО
	|	Вт_Группировка_Итоговая.ДокументБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	|	МАКСИМУМ(сабМаршрутныйЛистТабличнаяЧасть.НомерСтроки) КАК ПорядокДоставки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента КАК ЗаказКлиентаПодразделениеКонтрагента
	|ПОМЕСТИТЬ ВТ_Порядок
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаПоступления, ДЕНЬ) КАК ДатаОтгрузки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставки КАК ДатаДоставки,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент КАК Контрагент,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.АдресДоставки КАК АдресКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Телефон КАК Телефон,
	|	ВЫРАЗИТЬ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеВодителю КАК СТРОКА(1000)) КАК ЗаданиеВодителю,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказКлиента,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Дата КАК ЗаказКлиентаДата,
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК МаршрутныйЛист,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.Примечание КАК Примечание,
	|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента.КодУпорядочивания КАК КодУпорядочивания,
	|	ВЫРАЗИТЬ(сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ЗаданиеСкладу КАК СТРОКА(1000)) КАК ЗаданиеСкладу,
	|	ВТ_Порядок.ПорядокДоставки КАК ПорядокДоставки,
	|	ВЫБОР
	|		КОГДА сабМаршрутныйЛистТабличнаяЧасть.Реализация ССЫЛКА Документ.УЧ_Реализация
	|			ТОГДА сабМаршрутныйЛистТабличнаяЧасть.Реализация
	|		ИНАЧЕ ЕСТЬNULL(ВТ_Итоговая.ДокументУУ, ЗНАЧЕНИЕ(Документ.УЧ_Реализация.ПустаяСсылка))
	|	КОНЕЦ КАК ДокументУУ
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Порядок КАК ВТ_Порядок
	|		ПО сабМаршрутныйЛистТабличнаяЧасть.Ссылка = ВТ_Порядок.МаршрутныйЛист
	|			И сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.Контрагент = ВТ_Порядок.Контрагент
	|			И сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента.ПодразделениеКонтрагента = ВТ_Порядок.ЗаказКлиентаПодразделениеКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Итоговая КАК ВТ_Итоговая
	|		ПО сабМаршрутныйЛистТабличнаяЧасть.Реализация = ВТ_Итоговая.ДокументБУ
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент КАК Контрагент,
	|	ВТ_Заказ.АдресКлиента КАК АдресКлиента,
	|	ВТ_Заказ.Примечание КАК Примечание,
	|	ВТ_Заказ.Телефон КАК Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура.Вес * ЗаказКлиентаТабличнаяЧасть.Количество КАК Вес,
	|	ВТ_Заказ.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	0 КАК ВесФ,
	|	0 КАК КоличествоФ,
	|	ВТ_Заказ.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки КАК ПорядокДоставки,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмеренияУпаковка,
	|	ЗаказКлиентаТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	NULL КАК ДатаПроизводства,
	|	ВТ_Заказ.ЗаказКлиента КАК ЗаказКлиента,
	|	ЗаказКлиентаТабличнаяЧасть.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_Заказ.ДокументУУ КАК ДокументУУ
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧБегГрупп
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказКлиентаТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Заказ.ДатаОтгрузки,
	|	ВТ_Заказ.ДатаДоставки,
	|	ВТ_Заказ.ДатаДоставкиДо,
	|	ВТ_Заказ.Контрагент,
	|	ВТ_Заказ.АдресКлиента,
	|	ВТ_Заказ.Примечание,
	|	ВТ_Заказ.Телефон,
	|	ВТ_Заказ.ЗаданиеВодителю,
	|	ВТ_Заказ.МенеджерКонтрагента,
	|	ЗаказКлиентаТабличнаяЧасть.Номенклатура,
	|	0,
	|	0,
	|	ВТ_Заказ.ЗаказКлиентаДата,
	|	ВТ_Заказ.МаршрутныйЛист,
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Номенклатура.Вес * УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Номенклатура.Вес * УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Номенклатура.Вес * УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Номенклатура.Вес * ПередачаТоваровТовары.Количество, 0),
	|	ЕСТЬNULL(УЧ_РеализацияТовары.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары1.Количество, 0) + ЕСТЬNULL(УЧ_РеализацияТовары2.Количество, 0) + ЕСТЬNULL(ПередачаТоваровТовары.Количество, 0),
	|	ВТ_Заказ.КодУпорядочивания,
	|	ВТ_Заказ.ЗаданиеСкладу,
	|	ВТ_Заказ.ПорядокДоставки,
	|	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения,
	|	0,
	|	ВЫБОР
	|		КОГДА УЧ_РеализацияТовары.СерияНоменклатуры ЕСТЬ NULL
	|				ИЛИ УЧ_РеализацияТовары.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА УЧ_РеализацияТовары1.СерияНоменклатуры ЕСТЬ NULL
	|							ИЛИ УЧ_РеализацияТовары1.СерияНоменклатуры = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА УЧ_РеализацияТовары2.СерияНоменклатуры.ДатаПроизводства
	|					ИНАЧЕ УЧ_РеализацияТовары1.СерияНоменклатуры.ДатаПроизводства
	|				КОНЕЦ
	|		ИНАЧЕ УЧ_РеализацияТовары.СерияНоменклатуры.ДатаПроизводства
	|	КОНЕЦ,
	|	ВТ_Заказ.ЗаказКлиента,
	|	ЗаказКлиентаТабличнаяЧасть.КоличествоВУпаковке,
	|	ВТ_Заказ.ДокументУУ
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары.Ссылка.ДокОснование
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары.Номенклатура
	|				И (УЧ_РеализацияТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК УЧ_РеализацияТовары1
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары1.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары1.Номенклатура
	|				И (УЧ_РеализацияТовары1.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары1.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК УЧ_РеализацияТовары2
	|			ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = УЧ_РеализацияТовары2.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.Номенклатура = УЧ_РеализацияТовары2.Номенклатура
	|				И (УЧ_РеализацияТовары2.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = УЧ_РеализацияТовары2.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|			ПО ЗаказКлиентаТабличнаяЧасть.Номенклатура = ПередачаТоваровТовары.Номенклатура
	|				И (ПередачаТоваровТовары.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|				И ЗаказКлиентаТабличнаяЧасть.Ссылка = ПередачаТоваровТовары.Ссылка.Заказ
	|				И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = ПередачаТоваровТовары.НомерСтроки
	|		ПО ВТ_Заказ.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НЕ ЗаказКлиентаТабличнаяЧасть.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон КАК Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК Количество,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК Вес,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата КАК ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист КАК МаршрутныйЛист,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ) КАК ВесФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ) КАК КоличествоФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.ВесФ - ВТ_ЗаказПлюсТЧБегГрупп.Вес) КАК ВесПФ,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоФ - ВТ_ЗаказПлюсТЧБегГрупп.Количество) КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЕдиницаИзмеренияУпаковка КАК ЕдиницаИзмеренияУпаковка,
	|	СУММА(ВТ_ЗаказПлюсТЧБегГрупп.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	МИНИМУМ(ВТ_ЗаказПлюсТЧБегГрупп.ДатаПроизводства) КАК ДатаПроизводства,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДокументУУ КАК ДокументУУ
	|ПОМЕСТИТЬ ВТ_ЗаказПлюсТЧ
	|ИЗ
	|	ВТ_ЗаказПлюсТЧБегГрупп КАК ВТ_ЗаказПлюсТЧБегГрупп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Контрагент,
	|	ВТ_ЗаказПлюсТЧБегГрупп.АдресКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Телефон,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Номенклатура,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиентаДата,
	|	ВТ_ЗаказПлюсТЧБегГрупп.МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧБегГрупп.Примечание,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЕдиницаИзмеренияУпаковка,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ЗаказКлиента,
	|	ВТ_ЗаказПлюсТЧБегГрупп.ДокументУУ,
	|	ВТ_ЗаказПлюсТЧБегГрупп.КоличествоВУпаковке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ответственные.Контрагент КАК Контрагент,
	|	МАКСИМУМ(Ответственные.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_Ответственные
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = Ответственные.Контрагент
	|			И ВТ_ЗаказПлюсТЧ.ЗаказКлиентаДата >= Ответственные.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Ответственные.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Ответственные.Контрагент КАК Контрагент,
	|	Ответственные.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_Ответствееные2
	|ИЗ
	|	ВТ_Ответственные КАК ВТ_Ответственные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные КАК Ответственные
	|		ПО ВТ_Ответственные.Контрагент = Ответственные.Контрагент
	|			И ВТ_Ответственные.Период = Ответственные.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПлюсТЧ.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ЗаказПлюсТЧ.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ЗаказПлюсТЧ.Контрагент КАК Контрагент,
	|	ВТ_ЗаказПлюсТЧ.АдресКлиента КАК АдресКлиента,
	|	ВТ_ЗаказПлюсТЧ.Примечание КАК Примечание,
	|	ВТ_ЗаказПлюсТЧ.Телефон КАК ТелефонКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ЗаказПлюсТЧ.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ЗаказПлюсТЧ.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказПлюсТЧ.Количество КАК Количество,
	|	ВТ_ЗаказПлюсТЧ.Вес КАК Вес,
	|	ВТ_Ответствееные2.Ответственный КАК МенеджерНаш,
	|	ВТ_ЗаказПлюсТЧ.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ЗаказПлюсТЧ.ВесФ КАК ВесФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоФ КАК КоличествоФ,
	|	ВТ_ЗаказПлюсТЧ.ВесПФ КАК ВесПФ,
	|	ВТ_ЗаказПлюсТЧ.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ЗаказПлюсТЧ.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ЗаказПлюсТЧ.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ЗаказПлюсТЧ.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ЗаказПлюсТЧ.ЕдиницаИзмеренияУпаковка КАК ЕдиницаИзмеренияУпаковка,
	|	ВТ_ЗаказПлюсТЧ.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_ЗаказПлюсТЧ.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ЗаказПлюсТЧ.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_ЗаказПлюсТЧ.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_ЗаказПлюсТЧ.ДокументУУ КАК ДокументУУ
	|ПОМЕСТИТЬ ВТ_ПлюсОтветственный
	|ИЗ
	|	ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Ответствееные2 КАК ВТ_Ответствееные2
	|		ПО ВТ_ЗаказПлюсТЧ.Контрагент = ВТ_Ответствееные2.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш
	|ПОМЕСТИТЬ ВТ_ОтветственныйСгрупп
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПлюсОтветственный.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш КАК МенеджерНаш,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.Представление) КАК НомерТелефона
	|ПОМЕСТИТЬ ВТ_ТелефоныОтветственных
	|ИЗ
	|	ВТ_ОтветственныйСгрупп КАК ВТ_ОтветственныйСгрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|		ПО (ВТ_ОтветственныйСгрупп.МенеджерНаш = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|				ИЛИ ВТ_ОтветственныйСгрупп.МенеджерНаш.ФизическоеЛицо = ФизическиеЛицаКонтактнаяИнформация.Ссылка)
	|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидМобТелефон)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтветственныйСгрупп.МенеджерНаш
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПлюсОтветственный.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВТ_ПлюсОтветственный.ДатаДоставки КАК ДатаДоставки,
	|	ВТ_ПлюсОтветственный.ДатаДоставкиДо КАК ДатаДоставкиДо,
	|	ВТ_ПлюсОтветственный.Контрагент КАК Контрагент,
	|	ВТ_ПлюсОтветственный.АдресКлиента КАК АдресКлиента,
	|	ВТ_ПлюсОтветственный.Примечание КАК Примечание,
	|	ВТ_ПлюсОтветственный.ТелефонКонтрагента КАК ТелефонКонтрагента,
	|	ВТ_ПлюсОтветственный.ЗаданиеВодителю КАК ЗаданиеВодителю,
	|	ВТ_ПлюсОтветственный.МенеджерКонтрагента КАК МенеджерКонтрагента,
	|	ВТ_ПлюсОтветственный.Номенклатура КАК Номенклатура,
	|	ВТ_ПлюсОтветственный.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|	ВЫБОР
	|		КОГДА &ФормаФакт
	|			ТОГДА ВТ_ПлюсОтветственный.КоличествоФ
	|		ИНАЧЕ ВТ_ПлюсОтветственный.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ФормаФакт
	|			ТОГДА ВТ_ПлюсОтветственный.ВесФ
	|		ИНАЧЕ ВТ_ПлюсОтветственный.Вес
	|	КОНЕЦ КАК Вес,
	|	ВТ_ПлюсОтветственный.МенеджерНаш КАК МенеджерНаш,
	|	ВТ_ТелефоныОтветственных.НомерТелефона КАК ТелефонНашегоМенеджера,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист КАК МаршрутныйЛист,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.МаршрутДоставки КАК МаршрутДоставки,
	|	ВТ_ПлюсОтветственный.ВесФ КАК ВесФ,
	|	ВТ_ПлюсОтветственный.КоличествоФ КАК КоличествоФ,
	|	ВТ_ПлюсОтветственный.ВесПФ КАК ВесПФ,
	|	ВТ_ПлюсОтветственный.КоличествоПФ КАК КоличествоПФ,
	|	ВТ_ПлюсОтветственный.КодУпорядочивания КАК КодУпорядочивания,
	|	ВТ_ПлюсОтветственный.Номенклатура.Весовой КАК НоменклатураВесовой,
	|	ВТ_ПлюсОтветственный.ЗаданиеСкладу КАК ЗаданиеСкладу,
	|	ВТ_ПлюсОтветственный.ПорядокДоставки КАК ПорядокДоставки,
	|	ВТ_ПлюсОтветственный.ЕдиницаИзмеренияУпаковка КАК ЕдИзмУпаковка,
	|	ВТ_ПлюсОтветственный.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_ПлюсОтветственный.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ПлюсОтветственный.ЗаказКлиента КАК ЗаказКлиента,
	|	ВТ_ПлюсОтветственный.МаршрутныйЛист.Комментарий КАК Комментарий,
	|	ВТ_ПлюсОтветственный.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_ПлюсОтветственный.Номенклатура.Вес КАК НоменклатураВесЕдиницы,
	|	СерииУЧРеализация.СерииНоменклатуры.(
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		ДатаПроизводства КАК ДатаПроизводства
	|	) КАК СерииНоменклатуры
	|ИЗ
	|	ВТ_ПлюсОтветственный КАК ВТ_ПлюсОтветственный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТелефоныОтветственных КАК ВТ_ТелефоныОтветственных
	|		ПО ВТ_ПлюсОтветственный.МенеджерНаш = ВТ_ТелефоныОтветственных.МенеджерНаш
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_ЗаказПлюсТЧ.ЗаказКлиента КАК ЗаказКлиента,
	|			ВТ_ЗаказПлюсТЧ.Номенклатура КАК Номенклатура,
	|			УЧ_Реализация.СерииНоменклатуры.(
	|				Номенклатура КАК Номенклатура,
	|				Количество КАК Количество,
	|				СерияНоменклатуры.ДатаПроизводства КАК ДатаПроизводства
	|			) КАК СерииНоменклатуры
	|		ИЗ
	|			ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	|				ПО ВТ_ЗаказПлюсТЧ.ДокументУУ = УЧ_Реализация.Ссылка
	|		ГДЕ
	|			УЧ_Реализация.СерииНоменклатуры.Номенклатура = ВТ_ЗаказПлюсТЧ.Номенклатура
	|			И ВТ_ЗаказПлюсТЧ.ДокументУУ = УЧ_Реализация.Ссылка
	|			И УЧ_Реализация.СерииНоменклатуры.Количество > 0
	|			И УЧ_Реализация.СерииНоменклатуры.СерияНоменклатуры.ДатаПроизводства <> ДАТАВРЕМЯ(1, 1, 1)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВТ_ЗаказПлюсТЧ.ЗаказКлиента,
	|			ВТ_ЗаказПлюсТЧ.Номенклатура,
	|			УЧ_СписаниеТоваров.СерииНоменклатуры.(
	|				Номенклатура,
	|				Количество,
	|				СерияНоменклатуры.ДатаПроизводства
	|			)
	|		ИЗ
	|			ВТ_ЗаказПлюсТЧ КАК ВТ_ЗаказПлюсТЧ
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_СписаниеТоваров КАК УЧ_СписаниеТоваров
	|				ПО ВТ_ЗаказПлюсТЧ.ДокументУУ = УЧ_СписаниеТоваров.Ссылка
	|		ГДЕ
	|			УЧ_СписаниеТоваров.СерииНоменклатуры.Номенклатура = ВТ_ЗаказПлюсТЧ.Номенклатура
	|			И ВТ_ЗаказПлюсТЧ.ДокументУУ = УЧ_СписаниеТоваров.Ссылка
	|			И УЧ_СписаниеТоваров.СерииНоменклатуры.Количество > 0
	|			И УЧ_СписаниеТоваров.СерииНоменклатуры.СерияНоменклатуры.ДатаПроизводства <> ДАТАВРЕМЯ(1, 1, 1)) КАК СерииУЧРеализация
	|		ПО ВТ_ПлюсОтветственный.ЗаказКлиента = СерииУЧРеализация.ЗаказКлиента
	|			И ВТ_ПлюсОтветственный.Номенклатура = СерииУЧРеализация.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ПорядокДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	КодУпорядочивания,
	|	АдресКлиента,
	|	ЗаказКлиента,
	|	Номенклатура
	|ИТОГИ
	|	МИНИМУМ(ДатаДоставки),
	|	МАКСИМУМ(Примечание),
	|	МАКСИМУМ(ТелефонКонтрагента),
	|	МАКСИМУМ(ЗаданиеВодителю),
	|	МАКСИМУМ(МенеджерКонтрагента),
	|	СУММА(Количество),
	|	СУММА(Вес),
	|	МАКСИМУМ(МенеджерНаш),
	|	МАКСИМУМ(ТелефонНашегоМенеджера),
	|	СУММА(ВесФ),
	|	СУММА(КоличествоФ),
	|	СУММА(ВесПФ),
	|	СУММА(КоличествоПФ),
	|	МАКСИМУМ(КодУпорядочивания),
	|	МАКСИМУМ(ЗаданиеСкладу),
	|	СУММА(КоличествоУпаковок),
	|	МИНИМУМ(ДатаПроизводства)
	|ПО
	|	МаршрутныйЛист,
	|	ДатаОтгрузки,
	|	ПорядокДоставки,
	|	ДатаДоставкиДо,
	|	Контрагент,
	|	АдресКлиента,
	|	ЗаказКлиента
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ФормаФакт", Ложь);
	Запрос.УстановитьПараметр("ВидМобТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	Макет = ПолучитьМакет("МаршрутныйЛистВесовой");
	ТЗ_СводПоТоварам = Новый ТаблицаЗначений;
	ТЗ_СводПоТоварам.Колонки.Добавить("Номенклатура");
	ТЗ_СводПоТоварам.Колонки.Добавить("ЕдИзм");
	ТЗ_СводПоТоварам.Колонки.Добавить("ЕдИзмУпаковка");
	ТЗ_СводПоТоварам.Колонки.Добавить("Количество");
	ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоУпаковок");
	ТЗ_СводПоТоварам.Колонки.Добавить("Вес");
	ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоУПСбор");
	ТЗ_СводПоТоварам.Колонки.Добавить("КоличествоШтСбор");
	ТЗ_СводПоТоварам.Колонки.Добавить("ВесСбор"); 
	ТЗ_СводПоТоварам.Колонки.Добавить("Сбор"); 
	
	ЗапросЕдИзм = Новый Запрос;
	ЗапросЕдИзм.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторЕдиницИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	|ГДЕ
	|	СОКРЛП(КлассификаторЕдиницИзмерения.Код) В (&МассивКодыВес)";
	МассивКодыВес = Новый Массив;
	МассивКодыВес.Добавить("163"); 
	МассивКодыВес.Добавить("166");
	МассивКодыВес.Добавить("161");
	МассивКодыВес.Добавить("168");
	ЗапросЕдИзм.УстановитьПараметр("МассивКодыВес", МассивКодыВес);
	
	РезультатЗапросаЕдИзм = ЗапросЕдИзм.Выполнить();
	
	ВыборкаЕдИзм = РезультатЗапросаЕдИзм.Выбрать();
	МассивВесовыхЕдИзм = Новый Массив;
	Пока ВыборкаЕдИзм.Следующий() Цикл
		МассивВесовыхЕдИзм.Добавить(ВыборкаЕдИзм.Ссылка);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМаршрутныйЛист = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	НомерТочки = 1;
	Пока ВыборкаМаршрутныйЛист.Следующий() Цикл
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ПредставлениеДокумента = "Лист набора по маршрутному листу №";
		ОбластьМакета.Параметры.НомерМарштурногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Номер;
		ОбластьМакета.Параметры.ДатаМаршрутногоЛиста = ВыборкаМаршрутныйЛист.МаршрутныйЛист.Дата; 
		ТабличныйДокумент.Вывести(ОбластьМакета); 
		ВыборкаДатаОтгрузки = ВыборкаМаршрутныйЛист.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
		Пока ВыборкаДатаОтгрузки.Следующий() Цикл   
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВыборкаДатаДоставки = ВыборкаДатаОтгрузки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДатаДоставки.Следующий() Цикл
				ВыборкаДатаДоставкиПо = ВыборкаДатаДоставки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДатаДоставкиПо.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть("ДатаДоставки");
					ОбластьМакета.Параметры.ДатаДоставки = Формат(ВыборкаДатаДоставки.ДатаДоставки, "ДФ=ЧЧ:мм"); 
					ОбластьМакета.Параметры.ДатаДоставкиДо = Формат(ВыборкаДатаДоставкиПо.ДатаДоставкиДо, "ДФ=ЧЧ:мм");
					ВыборкаКонтрагент = ВыборкаДатаДоставкиПо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаКонтрагент.Следующий() Цикл
						ОбластьМакета = Макет.ПолучитьОбласть("Контрагент");
						ОбластьМакета.Параметры.Заполнить(ВыборкаКонтрагент);
						ТабличныйДокумент.Вывести(ОбластьМакета, 1);
						ВыборкаАдрес = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);					  
						Пока ВыборкаАдрес.Следующий() Цикл
							ОбластьМакета = Макет.ПолучитьОбласть("Адрес");
							ОбластьМакета.Параметры.Заполнить(ВыборкаАдрес);  
							ТабличныйДокумент.Вывести(ОбластьМакета, 2);
							ВыборкаЗаказКлиента = ВыборкаАдрес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаЗаказКлиента.Следующий() Цикл
								ОбластьМакета = Макет.ПолучитьОбласть("Заказ");
								ОбластьМакета.Параметры.Заполнить(ВыборкаЗаказКлиента);
								ОбластьМакета.Параметры.НомерТочки = НомерТочки;
								ОбластьМакета.Параметры.КодУпорядочивания = ВыборкаЗаказКлиента.КодУпорядочивания;
								НомерТочки = НомерТочки + 1; 
								ТабличныйДокумент.Вывести(ОбластьМакета, 3); 
								ВыборкаНоменклатура = ВыборкаЗаказКлиента.Выбрать();
								Пока ВыборкаНоменклатура.Следующий() Цикл
									КоличествоУпаковокДляСводаСбор = 0;
									КоличествоШтДляСводаСбор = 0; 
									ВесДляСводаСбор = 0;
									РаспределитьКоличествоСерий = Ложь;
									//Если (НЕ ЗначениеЗаполнено(ВыборкаНоменклатура.ДатаПроизводства)) И (НЕ ВыборкаНоменклатура.СерииНоменклатуры2.Пустой()) Тогда
									//	ВыборкаДляСериий = ВыборкаНоменклатура.СерииНоменклатуры2.Выбрать(); 
									//	РаспределитьКоличествоСерий = Истина;
									Если НЕ ВыборкаНоменклатура.СерииНоменклатуры.Пустой()  Тогда
										ВыборкаДляСериий = ВыборкаНоменклатура.СерииНоменклатуры.Выбрать();
										РаспределитьКоличествоСерий = Истина;
									//ИначеЕсли (НЕ ЗначениеЗаполнено(ВыборкаНоменклатура.ДатаПроизводства)) И (НЕ ВыборкаНоменклатура.СерииНоменклатуры1.Пустой()) Тогда
									//	ВыборкаДляСериий = ВыборкаНоменклатура.СерииНоменклатуры1.Выбрать(); 
									//	РаспределитьКоличествоСерий = Истина;
									КонецЕсли;
									Если РаспределитьКоличествоСерий Тогда
										Если ВыборкаНоменклатура.НоменклатураВесовой Тогда
											ОсталосьСписать = ВыборкаНоменклатура.Количество;
											ОсталосьСписатьВес = ВыборкаНоменклатура.Вес;
											Пока ВыборкаДляСериий.Следующий() И ОсталосьСписать > 0 Цикл
												Списать = Мин(ОсталосьСписать,ВыборкаДляСериий.Количество);
												СписатьВес = Списать * ВыборкаНоменклатура.НоменклатураВесЕдиницы;
												ОбластьМакета = Макет.ПолучитьОбласть("НоменклатураВес");
												ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
												ОбластьМакета.Параметры.Количество = Списать;
												ОбластьМакета.Параметры.Вес = СписатьВес;
												ОбластьМакета.Параметры.ДатаПроизводства = ВыборкаДляСериий.ДатаПроизводства;
												ОсталосьСписать = ОсталосьСписать - Списать;
												ОсталосьСписатьВес = ОсталосьСписатьВес - СписатьВес;
												Сбор = "Вес: " + СписатьВес + " " + ВыборкаНоменклатура.ЕдИзм;   
												ОбластьМакета.Параметры.Сбор = Сбор;
												ВесДляСводаСбор = ВесДляСводаСбор + СписатьВес;   
												ТабличныйДокумент.Вывести(ОбластьМакета, 4); 
											КонецЦикла;
											Если ОсталосьСписать > 0 Тогда
												ОбластьМакета = Макет.ПолучитьОбласть("НоменклатураВес");
												ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
												ОбластьМакета.Параметры.ДатаПроизводства = Дата(1,1,1);
												ОбластьМакета.Параметры.Количество = ОсталосьСписать;
												ОбластьМакета.Параметры.Вес = ОсталосьСписатьВес;
												Сбор = "Вес: " + ОсталосьСписатьВес + " " + ВыборкаНоменклатура.ЕдИзм;   
												ОбластьМакета.Параметры.Сбор = Сбор;
												ВесДляСводаСбор = ВесДляСводаСбор + ОсталосьСписатьВес; 
												ТабличныйДокумент.Вывести(ОбластьМакета, 4);
											КонецЕсли;
										Иначе
											ОсталосьСписать = ВыборкаНоменклатура.Количество;
											ОсталосьСписатьВес = ВыборкаНоменклатура.Вес;
											Пока ВыборкаДляСериий.Следующий() И ОсталосьСписать > 0 Цикл
												Списать = Мин(ОсталосьСписать,ВыборкаДляСериий.Количество);
												СписатьВес = Списать * ВыборкаНоменклатура.НоменклатураВесЕдиницы;
												
												ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
												ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
												
												ОбластьМакета.Параметры.Количество = Списать;
												ОбластьМакета.Параметры.Вес = СписатьВес;
												ОбластьМакета.Параметры.ДатаПроизводства = ВыборкаДляСериий.ДатаПроизводства;
												
												ОсталосьСписать = ОсталосьСписать - Списать;
												ОсталосьСписатьВес = ОсталосьСписатьВес - СписатьВес;
												ЭтоВесоваяЕдИзмерения = Ложь;
												Для Каждого ВесоваяЕдиницаИзм Из МассивВесовыхЕдИзм Цикл
													Если ВесоваяЕдиницаИзм = ВыборкаНоменклатура.ЕдИзм Тогда
														ЭтоВесоваяЕдИзмерения = Истина;
														Прервать;
													КонецЕсли;
												КонецЦикла;
												Если ЭтоВесоваяЕдИзмерения Тогда
													Сбор = "Вес: " + Списать+ " " + ВыборкаНоменклатура.ЕдИзм;   
													ОбластьМакета.Параметры.Сбор = Сбор;
													//ВесДляСводаСбор = ВесДляСводаСбор + ВыборкаНоменклатура.Вес; 
													ВесДляСводаСбор = ВесДляСводаСбор + СписатьВес; 
												Иначе
													Если ВыборкаНоменклатура.КоличествоУпаковок = 0 ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 0 
														ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 1 Тогда
														КолЕдиницСбор = Списать;
														Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
														КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
													Иначе 
														КоличествоУпСбор = Цел(Списать / ВыборкаНоменклатура.КоличествоВУпаковке);
														КолЕдиницСбор = Списать % ВыборкаНоменклатура.КоличествоВУпаковке; 
														Если КолЕдиницСбор = 0 Тогда
															Сбор = Строка(КоличествоУпСбор) + " кор.";
															КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
														Иначе
															Сбор = Строка(КоличествоУпСбор) + " кор." + " + " + КолЕдиницСбор + " " + ВыборкаНоменклатура.ЕдИзм; 
															КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
															КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
														КонецЕсли;
													КонецЕсли;
													ОбластьМакета.Параметры.Сбор = Сбор;
												КонецЕсли; 
												ТабличныйДокумент.Вывести(ОбластьМакета, 4);
											КонецЦикла;
											Если ОсталосьСписать > 0 Тогда
												ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
												ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
												ОбластьМакета.Параметры.ДатаПроизводства = Дата(1,1,1);
												ОбластьМакета.Параметры.Количество = ОсталосьСписать;
												ОбластьМакета.Параметры.Вес = ОсталосьСписатьВес;
												
												Если ЭтоВесоваяЕдИзмерения Тогда
													Сбор = "Вес: " + ОсталосьСписать + " " + ВыборкаНоменклатура.ЕдИзм;   
													ОбластьМакета.Параметры.Сбор = Сбор;
													ВесДляСводаСбор = ВесДляСводаСбор + ОсталосьСписать;  
												Иначе
													Если ВыборкаНоменклатура.КоличествоУпаковок = 0 ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 0 
														ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 1 Тогда
														КолЕдиницСбор = ОсталосьСписать;
														Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
														КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
													Иначе 
														КоличествоУпСбор = Цел(ОсталосьСписать / ВыборкаНоменклатура.КоличествоВУпаковке);
														КолЕдиницСбор = ОсталосьСписать % ВыборкаНоменклатура.КоличествоВУпаковке; 
														Если КолЕдиницСбор = 0 Тогда
															Сбор = Строка(КоличествоУпСбор) + " кор.";
															КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
														ИначеЕсли КоличествоУпСбор = 0 Тогда	
															Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
															КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор;
														Иначе
															Сбор = Строка(КоличествоУпСбор) + " кор." + " + " + КолЕдиницСбор + " " + ВыборкаНоменклатура.ЕдИзм; 
															КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
															КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
														КонецЕсли;
													КонецЕсли;
													ОбластьМакета.Параметры.Сбор = Сбор;
												КонецЕсли;
												ТабличныйДокумент.Вывести(ОбластьМакета, 4);
											КонецЕсли;
										КонецЕсли;
										НоваяСтрокаСвод = ТЗ_СводПоТоварам.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрокаСвод, ВыборкаНоменклатура); 
										НоваяСтрокаСвод.КоличествоУПСбор = КоличествоУпаковокДляСводаСбор; 
										НоваяСтрокаСвод.КоличествоШтСбор = КоличествоШтДляСводаСбор;
										НоваяСтрокаСвод.ВесСбор = ВесДляСводаСбор;
									Иначе
										Если ВыборкаНоменклатура.НоменклатураВесовой Тогда
											ОбластьМакета = Макет.ПолучитьОбласть("НоменклатураВес");
											ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура); 
											Сбор = "Вес: " + ВыборкаНоменклатура.Вес + " " + ВыборкаНоменклатура.ЕдИзм;   
											ОбластьМакета.Параметры.Сбор = Сбор;
											ВесДляСводаСбор = ВесДляСводаСбор + ВыборкаНоменклатура.Вес;   
											ТабличныйДокумент.Вывести(ОбластьМакета, 4);
										Иначе
											ОбластьМакета = Макет.ПолучитьОбласть("Номенклатура");
											ОбластьМакета.Параметры.Заполнить(ВыборкаНоменклатура);
											ЭтоВесоваяЕдИзмерения = Ложь;
											Для Каждого ВесоваяЕдиницаИзм Из МассивВесовыхЕдИзм Цикл
												Если ВесоваяЕдиницаИзм = ВыборкаНоменклатура.ЕдИзм Тогда
													ЭтоВесоваяЕдИзмерения = Истина;
													Прервать;
												КонецЕсли;
											КонецЦикла;
											Если ЭтоВесоваяЕдИзмерения Тогда
												Сбор = "Вес: " + ВыборкаНоменклатура.Вес + " " + ВыборкаНоменклатура.ЕдИзм;   
												ОбластьМакета.Параметры.Сбор = Сбор;
												ВесДляСводаСбор = ВесДляСводаСбор + ВыборкаНоменклатура.Вес;  
											Иначе
												Если ВыборкаНоменклатура.КоличествоУпаковок = 0 ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 0 
													ИЛИ ВыборкаНоменклатура.КоличествоВУпаковке = 1 Тогда
													КолЕдиницСбор = ВыборкаНоменклатура.Количество;
													Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
													КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
												Иначе 
													КоличествоУпСбор = Цел(ВыборкаНоменклатура.Количество / ВыборкаНоменклатура.КоличествоВУпаковке);
													КолЕдиницСбор = ВыборкаНоменклатура.Количество % ВыборкаНоменклатура.КоличествоВУпаковке; 
													Если КолЕдиницСбор = 0 Тогда
														Сбор = Строка(КоличествоУпСбор) + " кор.";
														КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
													ИначеЕсли КоличествоУпСбор = 0 Тогда	
														Сбор = Строка(КолЕдиницСбор) + " " + ВыборкаНоменклатура.ЕдИзм; 
														КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор;
													Иначе
														Сбор = Строка(КоличествоУпСбор) + " кор." + " + " + КолЕдиницСбор + " " + ВыборкаНоменклатура.ЕдИзм; 
														КоличествоУпаковокДляСводаСбор = КоличествоУпаковокДляСводаСбор + КоличествоУпСбор;
														КоличествоШтДляСводаСбор = КоличествоШтДляСводаСбор + КолЕдиницСбор; 
													КонецЕсли;
												КонецЕсли;
												ОбластьМакета.Параметры.Сбор = Сбор;
											КонецЕсли;
											ТабличныйДокумент.Вывести(ОбластьМакета, 4);
										КонецЕсли;
										НоваяСтрокаСвод = ТЗ_СводПоТоварам.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрокаСвод, ВыборкаНоменклатура); 
										НоваяСтрокаСвод.КоличествоУПСбор = КоличествоУпаковокДляСводаСбор; 
										НоваяСтрокаСвод.КоличествоШтСбор = КоличествоШтДляСводаСбор;
										НоваяСтрокаСвод.ВесСбор = ВесДляСводаСбор;
									КонецЕсли;
								КонецЦикла; 
							КонецЦикла;
						КонецЦикла;
					КонецЦикла; 
				КонецЦикла;	
			КонецЦикла;  
			ОбластьМакета = Макет.ПолучитьОбласть("Итог");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДатаОтгрузки);
			ТабличныйДокумент.Вывести(ОбластьМакета);  
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЦикла;    
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаМаршрутныйЛист.МаршрутныйЛист);
		ТЗ_СводПоТоварам.Свернуть("Номенклатура, ЕдИзм, Сбор", "Количество, Вес, КоличествоУПСбор, КоличествоШтСбор, ВесСбор"); 
		ТЗ_СводПоТоварам.Сортировать("Номенклатура Возр");
		ИтогоСводТоваровКоличество = 0;
		ИтогоСводТоваровКоличествоУпаковок = 0;
		ИтогоСводТоваровВес = 0;
		ОбластьСводТоваровЗаголовок = Макет.ПолучитьОбласть("СводТоваровЗаголовок");
		ТабличныйДокумент.Вывести(ОбластьСводТоваровЗаголовок); 
		Для Каждого ТекСтрокаСводПоТоварам Из ТЗ_СводПоТоварам Цикл  
			Если ТекСтрокаСводПоТоварам.ВесСбор = 0 Тогда
				Если ТекСтрокаСводПоТоварам.КоличествоУПСбор = 0 Тогда
					ТекСтрокаСводПоТоварам.Сбор = ?(ТекСтрокаСводПоТоварам.КоличествоШтСбор = 0, "", 
					Строка(ТекСтрокаСводПоТоварам.КоличествоШтСбор) + " " + ТекСтрокаСводПоТоварам.ЕдИзм);
				Иначе
					ШтСбор = ?(ТекСтрокаСводПоТоварам.КоличествоШтСбор = 0, "", 
					" + " + Строка(ТекСтрокаСводПоТоварам.КоличествоШтСбор) + " " + ТекСтрокаСводПоТоварам.ЕдИзм);
					ТекСтрокаСводПоТоварам.Сбор = Строка(ТекСтрокаСводПоТоварам.КоличествоУПСбор) + " кор." + ШтСбор; 
				КонецЕсли;
			Иначе 
				ТекСтрокаСводПоТоварам.Сбор = "Вес: " + ТекСтрокаСводПоТоварам.ВесСбор + " " + ТекСтрокаСводПоТоварам.ЕдИзм;
			КонецЕсли;	
			ОбластьСводТоваровСтрока = Макет.ПолучитьОбласть("СводТоваровСтрока");
			ОбластьСводТоваровСтрока.Параметры.Заполнить(ТекСтрокаСводПоТоварам); 
			ТабличныйДокумент.Вывести(ОбластьСводТоваровСтрока); 
			ИтогоСводТоваровКоличество = ИтогоСводТоваровКоличество + ТекСтрокаСводПоТоварам.Количество;
			ИтогоСводТоваровВес = ИтогоСводТоваровВес + ТекСтрокаСводПоТоварам.Вес;
		КонецЦикла;
		ОбластьСводТоваровПодвал = Макет.ПолучитьОбласть("СводТоваровПодвал");
		ОбластьСводТоваровПодвал.Параметры.Количество = ИтогоСводТоваровКоличество; 
		ОбластьСводТоваровПодвал.Параметры.Вес = ИтогоСводТоваровВес;
		ТабличныйДокумент.Вывести(ОбластьСводТоваровПодвал);
	КонецЦикла;
	
КонецПроцедуры   

Функция ПолучитьМаршрутныйЛистПоЗаказу(ЗаказСсылка) Экспорт
	
	НайденныйМЛ = Документы.сабМаршрутныйЛист.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	|ГДЕ
	|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента В(&ЗаказКлиента)";
	
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НайденныйМЛ = Выборка.Ссылка;			
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

	Возврат НайденныйМЛ;
	
КонецФункции

Функция КалькуляцияИМаржаМаршрутногоЛиста(Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(КонтрольМинимальнойЦены)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Документы.сабМаршрутныйЛист.ПолучитьМакет("КалькуляцияИМаржаЗаказов");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка КАК Ссылка,
		|	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказКлиента,
		|	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура, 
		//Скорр lud 26/04/23 по обр. № 1637 от 25.04.23 Цены без НДС
		|       ВЫБОР
		|			КОГДА ЗаказКлиентаТабличнаяЧасть.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ЗаказКлиентаТабличнаяЧасть.Сумма-ЗаказКлиентаТабличнаяЧасть.СуммаНДС 
		|				ИНАЧЕ ЗаказКлиентаТабличнаяЧасть.Сумма
		|		КОНЕЦ КАК Сумма,
		|	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
		|	0 КАК Себестоимость,
		|	0 КАК ПоследняяЦенаЗакупки,
		|	0 КАК ОтклонениеОтСебестоимости,
		|	0 КАК ОтклонениеОтЗакупки,
		|	ЗаказКлиентаТабличнаяЧасть.Ссылка.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
		|		ПО сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента = ЗаказКлиентаТабличнаяЧасть.Ссылка
		|ГДЕ
		|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка В(&Ссылка)
		|ИТОГИ
		|	СУММА(Сумма),
		|	МАКСИМУМ(Контрагент)
		|ПО
		|	Ссылка,
		|	ЗаказКлиента";
	
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить();
	
	ДЗ = Выборка.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТабличнаяЧастьШапка = Макет.ПолучитьОбласть("ТабличнаяЧастьШапка");
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("ТабличнаяЧасть");
	ОбластьТабличнаяЧастьПодвал = Макет.ПолучитьОбласть("ТабличнаяЧастьПодвал");
	
	
	ВставлятьРазделительСтраниц = Ложь;
	Для каждого МаршрутныйЛист из ДЗ.Строки Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МЛ = МаршрутныйЛист.Ссылка;
		
		ВыборкаЦены = Новый ТаблицаЗначений;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток > 0
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток / ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт > 0
		|					ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт / ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Себестоимость,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ЕстьNULL(ПоследниеЦены.Цена, 0) КАК ПоследняяЦенаЗакупки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПоследниеДокументыНоменклатуры.Номенклатура КАК Номенклатура,
		//Скорр lud 26/04/23 по обр. № 1637 от 25.04.23 Цены без НДС
		|       ВЫБОР
		|			КОГДА ПоследниеДокументыНоменклатуры.Ссылка.СуммаВключаетНДС
		|				ТОГДА
		|					ВЫБОР
		|						КОГДА ПоследниеДокументыНоменклатуры.Количество > 0
		|							ТОГДА (ПоследниеДокументыНоменклатуры.Сумма-ПоследниеДокументыНоменклатуры.СуммаНДС)/ПоследниеДокументыНоменклатуры.Количество
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|				ИНАЧЕ ПоследниеДокументыНоменклатуры.Цена
		|		КОНЕЦ КАК Цена
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоследниеДокументыНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				Документы.Номенклатура КАК Номенклатура,
		|				МАКСИМУМ(Документы.Ссылка.Дата) КАК ДатаПоследнегоДокумента
		|			ИЗ
		|				Документ.ПоступлениеТоваровУслуг.Товары КАК Документы
		|			ГДЕ
		|				Документы.Ссылка.Дата < &ДатаОкончания
		|			
		|			СГРУППИРОВАТЬ ПО
		|				Документы.Номенклатура) КАК ДатыПоследнихДокументовНоменклатуры
		|			ПО ПоследниеДокументыНоменклатуры.Номенклатура = ДатыПоследнихДокументовНоменклатуры.Номенклатура
		|				И ПоследниеДокументыНоменклатуры.Ссылка.Дата = ДатыПоследнихДокументовНоменклатуры.ДатаПоследнегоДокумента
		|	ГДЕ
		|		ПоследниеДокументыНоменклатуры.Номенклатура В(&Номенклатура)) КАК ПоследниеЦены
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах), , Субконто1 В (&Номенклатура)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО ((ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Номенклатура)) = ПоследниеЦены.Номенклатура)
		|
		//+ lud 01/03/23 по обр. №1132 плановая себестоимость для продукции
		//Скорр lud 07/03/23 по обр №1164 в приоритете с/с для продукции из регистра бух.цен. 
		//{
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Цена,ПлановаяСебестоимостьСрезПоследних.Сумма),
		|	ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Номенклатура, ПлановаяСебестоимостьСрезПоследних.Номенклатура),
		|	0
		|
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаОкончания, ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановаяСебестоимость.СрезПоследних(&ДатаОкончания, ) КАК ПлановаяСебестоимостьСрезПоследних
		|		ПО (ПлановаяСебестоимостьСрезПоследних.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)";
		//}
		
		Запрос.УстановитьПараметр("ДатаОкончания", МЛ.Дата); 
		Запрос.УстановитьПараметр("ДатаНачала", МЛ.Дата-60*24*60*60);
		Запрос.УстановитьПараметр("Номенклатура", Выборка.Выгрузить().ВыгрузитьКолонку("Номенклатура"));

		Запрос.УстановитьПараметр("ТипЦен", Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить());
		
		Результат = Запрос.Выполнить();
		ВыборкаЦены = Результат.Выгрузить();
		
		ОбластьЗаголовок.Параметры.Дата = МЛ.Дата; 
		Областьзаголовок.Параметры.Номер = МЛ.Номер;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Комментарий = МЛ.Комментарий;
		ОбластьШапка.Параметры.Предприятие = МЛ.Предприятие;;
		ТабДок.Вывести(ОбластьШапка);
		
		ТабДок.Вывести(ОбластьТабличнаяЧастьШапка);
		
		ОтклонениеСуммаОтСебестоимостиИтого = 0;  
		ОтклонениеСуммаОтЗакупкиИтого = 0;
		
		Для каждого ЗаказКлиента Из МаршрутныйЛист.Строки Цикл  
			
			Для каждого СтрокаЗаказа из ЗаказКлиента.Строки Цикл
				НайденныеСтрокиЦен = ВыборкаЦены.НайтиСтроки(Новый Структура("Номенклатура", СтрокаЗаказа.Номенклатура));
				Для каждого ТекНайдСтрока Из НайденныеСтрокиЦен Цикл
					СтрокаЗаказа.Себестоимость = ТекНайдСтрока.Себестоимость*СтрокаЗаказа.Количество;
					СтрокаЗаказа.ОтклонениеОтСебестоимости = СтрокаЗаказа.Сумма - СтрокаЗаказа.Себестоимость;
					
					СтрокаЗаказа.ПоследняяЦенаЗакупки = ТекНайдСтрока.ПоследняяЦенаЗакупки*СтрокаЗаказа.Количество;   
					//Скорр. lud 01/03/23 по обр. №1132 не актуально для продукции, где нет последней цены закупки
					//{
					СтрокаЗаказа.ОтклонениеОтЗакупки = ?(СтрокаЗаказа.ПоследняяЦенаЗакупки > 0, СтрокаЗаказа.Сумма - СтрокаЗаказа.ПоследняяЦенаЗакупки, 0);
					//}
					
				КонецЦикла;
			КонецЦикла; 
			ЗаказКлиента.Себестоимость = ЗаказКлиента.Строки.Итог("Себестоимость"); 
			ЗаказКлиента.ОтклонениеОтСебестоимости = ЗаказКлиента.Строки.Итог("ОтклонениеОтСебестоимости");
			ЗаказКлиента.ПоследняяЦенаЗакупки = ЗаказКлиента.Строки.Итог("ПоследняяЦенаЗакупки");
			ЗаказКлиента.ОтклонениеОтЗакупки = ЗаказКлиента.Строки.Итог("ОтклонениеОтЗакупки");
			
			ОбластьТабличнаяЧасть.Параметры.Заполнить(ЗаказКлиента);
			ТабДок.Вывести(ОбластьТабличнаяЧасть);
		КонецЦикла;
		
		МаршрутныйЛист.Себестоимость = МаршрутныйЛист.Строки.Итог("Себестоимость"); 
		МаршрутныйЛист.ОтклонениеОтСебестоимости = МаршрутныйЛист.Строки.Итог("ОтклонениеОтСебестоимости");
		МаршрутныйЛист.ПоследняяЦенаЗакупки = МаршрутныйЛист.Строки.Итог("ПоследняяЦенаЗакупки");
		МаршрутныйЛист.ОтклонениеОтЗакупки = МаршрутныйЛист.Строки.Итог("ОтклонениеОтЗакупки");

		ОбластьТабличнаяЧастьПодвал.Параметры.Заполнить(МаршрутныйЛист);
		ТабДок.Вывести(ОбластьТабличнаяЧастьПодвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабДок;
	
	//}}
КонецФункции