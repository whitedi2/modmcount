
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = ТабличнаяЧасть.Итог("Сумма");
	Вес = ТабличнаяЧасть.Итог("ВесЗаказа");
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
	ТабличнаяЧасть.Очистить();
	
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	МЛВыполнен = Перечисления.СтатусыМаршрутныхЛистов.Выполнен;
	МЛСобран = Перечисления.СтатусыМаршрутныхЛистов.Собран;
	СтатусОтгружен = Перечисления.СтатусыЗаказовКлиентов.Отгружен;  //Перечисления.СтатусыЗаказовПоставщикам.Закрыт
	СтатусКОтгрузке = Перечисления.СтатусыЗаказовКлиентов.КОтгрузке; //Перечисления.СтатусыЗаказовПоставщикам.КПоступлению
	СтатусСобран = Перечисления.СтатусыЗаказовКлиентов.Собран; //Перечисления.СтатусыЗаказовПоставщикам.Отправлен
	СтатусВработе = Перечисления.СтатусыЗаказовКлиентов.ВРаботе; //Перечисления.СтатусыЗаказовПоставщикам.Подтвержден  
	СтатусКПоступлению = Перечисления.СтатусыЗаказовПоставщикам.КПоступлению;
	
	Для каждого ТекСтрока Из ТабличнаяЧасть Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Реализация) Тогда
			
			Если Статус = МЛВыполнен И НЕ ТекСтрока.ЗаказКлиента.Статус = СтатусОтгружен Тогда
				ТекЗаказ = ТекСтрока.ЗаказКлиента.ПолучитьОбъект();
				ТекЗаказ.Статус = СтатусОтгружен;
				
				Если ТекЗаказ.Проведен Тогда
					ТекЗаказ.Записать(РежимЗаписиДокумента.Проведение);
				Иначе	
					ТекЗаказ.Записать();
				КонецЕсли;
				
			ИначеЕсли Статус = МЛСобран И Не ТекСтрока.ЗаказКлиента.Статус = СтатусСобран Тогда
				ТекЗаказ = ТекСтрока.ЗаказКлиента.ПолучитьОбъект();
				ТекЗаказ.Статус = СтатусСобран;
				
				Если ТекЗаказ.Проведен Тогда
					ТекЗаказ.Записать(РежимЗаписиДокумента.Проведение);
				Иначе	
					ТекЗаказ.Записать();
				КонецЕсли;
				
			ИначеЕсли НЕ Статус = МЛСобран И НЕ Статус = МЛВыполнен И Не ТекСтрока.ЗаказКлиента.Статус = СтатусВработе Тогда
				ТекЗаказ = ТекСтрока.ЗаказКлиента.ПолучитьОбъект();
				ТекЗаказ.Статус = СтатусВработе;
				
				Если ТекЗаказ.Проведен Тогда
					ТекЗаказ.Записать(РежимЗаписиДокумента.Проведение);
				Иначе	
					ТекЗаказ.Записать();
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ТекЗаказ = ТекСтрока.ЗаказКлиента.ПолучитьОбъект();
			
			Если ТипЗнч(ТекЗаказ) = Тип("ДокументСсылка.ЗаказКлиента") Или ТипЗнч(ТекЗаказ) = Тип("ДокументСсылка.ЗаказНаВозвратОтКлиента") Тогда
				ТекЗаказ.Статус = СтатусКОтгрузке;
			Иначе
				ТекЗаказ.Статус = ?(ЗначениеЗаполнено(ТекСтрока.Статус), ТекСтрока.Статус, СтатусКПоступлению);
			КонецЕсли;
			
			Если ТекЗаказ.Проведен Тогда
				ТекЗаказ.Записать(РежимЗаписиДокумента.Проведение);
			Иначе	
				ТекЗаказ.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

