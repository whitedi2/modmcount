&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	ФормироватьУПД = Истина;
	СоздаватьСчетНаОплатуПокупателю = Истина;
	ПроводитьДокументы = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Пересчитать", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
	               |	ЕСТЬNULL(ПередачаТоваров.Ссылка, ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, ЕСТЬNULL(РозничнаяПродажа.Ссылка, УЧ_Реализация.Ссылка))) КАК Реализация
	               |ИЗ
	               |	Документ.ЗаказКлиента КАК ЗаказКлиента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа КАК РозничнаяПродажа
	               |		ПО ЗаказКлиента.Ссылка = РозничнаяПродажа.Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |		ПО ЗаказКлиента.Ссылка = РеализацияТоваровУслуг.Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	               |		ПО ЗаказКлиента.Ссылка = УЧ_Реализация.ДокОснование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров КАК ПередачаТоваров
	               |		ПО ЗаказКлиента.Ссылка = ПередачаТоваров.Заказ
	               |ГДЕ
	               |	ЗаказКлиента.Ссылка В(&ЗаказКлиента)";
	
	Запрос.УстановитьПараметр("ЗаказКлиента", Объект.ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("ЗаказКлиента"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НайденныеСтроки = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("ЗаказКлиента", Выборка.ЗаказКлиента));
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл
			Если Не ЗначениеЗаполнено(ТекСтрока.Реализация) И ЗначениеЗаполнено(Выборка.Реализация) Тогда
				ТекСтрока.Реализация = Выборка.Реализация;
				ЕстьНеобновленныеРеализации = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
	
	СтатусОтгружен = Перечисления.СтатусыЗаказовКлиентов.Отгружен;
	
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если НЕ ТекСтрока.ЗаказКлиента.Статус = СтатусОтгружен Тогда
			ТекЗаказ = ТекСтрока.ЗаказКлиента.ПолучитьОбъект();
			ТекЗаказ.Статус = СтатусОтгружен;
			ТекЗаказ.Записать();
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВидДеятельностиПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		РеквизитыПодразделения = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Подразделение, "Организация");
		Объект.Организация = РеквизитыПодразделения.Организация;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДеятельностиПриИзменении(Элемент)
	ВидДеятельностиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПровереноПоУчету(Команда)
	Элементы.КомандаПроверено.Пометка = НЕ Элементы.КомандаПроверено.Пометка;
	Если Элементы.КомандаПроверено.Пометка Тогда
		БюджетныйНаСервере.УстановитьПроверкуДокумента(Объект.Ссылка, Истина);
	Иначе
		БюджетныйНаСервере.УдалитьПроверкуДокумента(Объект.Ссылка, Истина);
	КонецЕсли;
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ЗаказКлиентаДок.Ссылка КАК ЗаказКлиента,
	                |	ЗаказКлиентаДок.СуммаДокумента КАК Сумма,
	                |	ЗаказКлиентаДок.Статус КАК Статус,
	                |	ЗаказКлиентаДок.СтатусОплаты КАК СтатусОплаты,
	                |	МАКСИМУМ(ЕСТЬNULL(РеализацияТоваровУслуг.Ссылка, УЧ_Реализация.Ссылка)) КАК Реализация,
	                |	ЗаказКлиентаДок.ВесТовара КАК ВесЗаказа,
	                |	ЗаказКлиентаДок.Контрагент КАК Контрагент,
	                |	ЗаказКлиентаДок.ПодразделениеКонтрагента КАК ПодразделениеКонтрагента,
	                |	ЗаказКлиентаДок.ДатаДоставки КАК ВремяДоставки,
	                |	ЗаказКлиентаДок.ДатаДоставкиДо КАК ВремяДоставкиПо
	                |ИЗ
	                |	Документ.ЗаказКлиента КАК ЗаказКлиентаДок
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                |		ПО ЗаказКлиентаДок.Ссылка = РеализацияТоваровУслуг.Заказ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	                |		ПО ЗаказКлиентаДок.Ссылка = УЧ_Реализация.ДокОснование
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	                |		ПО ЗаказКлиентаДок.Ссылка = сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента
	                |			И (НЕ сабМаршрутныйЛистТабличнаяЧасть.Ссылка.Ссылка = &ЭтаСсылка)
	                |			И (НЕ сабМаршрутныйЛистТабличнаяЧасть.Ссылка.ПометкаУдаления = ЛОЖЬ)
	                |ГДЕ
	                |	ЗаказКлиентаДок.Статус = &Статус
	                |	И ЗаказКлиентаДок.Предприятие = &Предприятие
	                |	И ВЫБОР
	                |			КОГДА &Доставщик = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ЗаказКлиентаДок.Доставщик = &Доставщик
	                |		КОНЕЦ
	                |	И НЕ ЗаказКлиентаДок.СпособДоставки = &СпособДоставки
	                |	И ЗаказКлиентаДок.ДатаПоступления <= &ДатаДокумента
	                |	И ЗаказКлиентаДок.Проведен = ИСТИНА
	                |	И РеализацияТоваровУслуг.Ссылка ЕСТЬ NULL
	                |	И УЧ_Реализация.Ссылка ЕСТЬ NULL
	                |	И сабМаршрутныйЛистТабличнаяЧасть.Ссылка ЕСТЬ NULL
	                |	И ВЫБОР
	                |			КОГДА &МаршрутДоставки = ЗНАЧЕНИЕ(Справочник.МаршрутыДоставки.ПустаяСсылка)
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ЗаказКлиентаДок.МаршрутДоставки = &МаршрутДоставки
	                |		КОНЕЦ
	                |	И ВЫБОР
	                |			КОГДА &ГрафикДоставки = ЗНАЧЕНИЕ(Справочник.ГрафикиДоставки.ПустаяСсылка)
	                |				ТОГДА ИСТИНА
	                |			ИНАЧЕ ЗаказКлиентаДок.ГрафикДоставки = &ГрафикДоставки
	                |		КОНЕЦ
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ЗаказКлиентаДок.Ссылка,
	                |	ЗаказКлиентаДок.СуммаДокумента,
	                |	ЗаказКлиентаДок.Статус,
	                |	ЗаказКлиентаДок.СтатусОплаты,
	                |	ЗаказКлиентаДок.ВесТовара,
	                |	ЗаказКлиентаДок.ПодразделениеКонтрагента,
	                |	ЗаказКлиентаДок.Контрагент,
	                |	ЗаказКлиентаДок.ДатаДоставки,
	                |	ЗаказКлиентаДок.ДатаДоставкиДо";
	 
	 Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыЗаказовКлиентов.КОтгрузке);
	 Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	 Запрос.УстановитьПараметр("Доставщик", Объект.Доставщик);
	 Запрос.УстановитьПараметр("МаршрутДоставки", Объект.МаршрутДоставки);
	 Запрос.УстановитьПараметр("СпособДоставки", Справочники.СпособыДоставки.Самовывоз);
	 Запрос.УстановитьПараметр("ГрафикДоставки", Объект.ГрафикДоставки);
	 Запрос.УстановитьПараметр("ДатаДокумента", КонецДня(Объект.Дата));
	 Запрос.УстановитьПараметр("ЭтаСсылка", Объект.Ссылка);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		 НайденныеСтроки = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("ЗаказКлиента", Выборка.ЗаказКлиента));
		 Если НЕ НайденныеСтроки.Количество() Тогда
			 НоваяСтрока = Объект.ТабличнаяЧасть.Добавить();	
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		 КонецЕсли;
		 
	 КонецЦикла;
	 
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьРеализацииНаСервере(ИмяКоманды)
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.Реализация) Тогда
			Если ЗначениеЗаполнено(ТекСтрока.ЗаказКлиента.Организация) Тогда
				Если ТекСтрока.ЗаказКлиента.ПродажаВРозницу Тогда
					НоваяРеализация = Документы.РозничнаяПродажа.СоздатьДокумент();
					НоваяРеализация.Заполнить(ТекСтрока.ЗаказКлиента);
					НоваяРеализация.Записать(РежимЗаписиДокумента.Запись);//всегда непроведенным, т.к. нужно закрывать смену вручную
					ТекСтрока.Реализация = НоваяРеализация.Ссылка; 
				ИначеЕсли ТекСтрока.ЗаказКлиента.БезвозмезднаяПередача Тогда
					НоваяРеализация = Документы.ПередачаТоваров.СоздатьДокумент();
					НоваяРеализация.Заполнить(ТекСтрока.ЗаказКлиента);
					НоваяРеализация.Записать(?(ПроводитьДокументы, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));//всегда непроведенным, т.к. нужно закрывать смену вручную
					ТекСтрока.Реализация = НоваяРеализация.Ссылка; 
				Иначе
					НоваяРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
					НоваяРеализация.Заполнить(ТекСтрока.ЗаказКлиента);
					НоваяРеализация.Записать(?(ПроводитьДокументы, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
					ТекСтрока.Реализация = НоваяРеализация.Ссылка;
					Если СоздаватьСчетНаОплатуПокупателю Тогда
						НовыйСчет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
						НовыйСчет.Заполнить(НоваяРеализация.Ссылка);
						Попытка
							НовыйСчет.Записать(?(ПроводитьДокументы, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));				
						Исключение
							НовыйСчет.Записать();				
						КонецПопытки;
						НоваяРеализация.СчетНаОплатуПокупателю = НовыйСчет.Ссылка;
						НоваяРеализация.Записать();
					КонецЕсли;
					НовыйСчФ = Документы.СчетФактураВыданный.СоздатьДокумент();
					НовыйСчФ.Заполнить(НоваяРеализация.Ссылка);
					НовыйСчФ.Записать(?(ПроводитьДокументы, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				КонецЕсли;
			Иначе	
				НоваяРеализация = Документы.УЧ_Реализация.СоздатьДокумент();
				НоваяРеализация.Заполнить(ТекСтрока.ЗаказКлиента);
				НоваяРеализация.Записать(?(ПроводитьДокументы, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				ТекСтрока.Реализация = НоваяРеализация.Ссылка; 
			КонецЕсли;
			
			
		КонецЕсли;
	КонецЦикла;
	Записать();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеализации(Команда)
	СоздатьРеализацииНаСервере(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТабличнаяЧастьПриОкончанииРедактированияНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьПриОкончанииРедактированияНаСервере()
	
 	СтатусОтгружен = Перечисления.СтатусыЗаказовКлиентов.Отгружен;
	ЕстьНеотгруженные = Ложь;
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если НЕ ТекСтрока.Статус = СтатусОтгружен Тогда
			ЕстьНеотгруженные = Истина;
			Прервать;		
		КонецЕсли;	
	КонецЦикла;
	Объект.Выполнен = Не ЕстьНеотгруженные;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЕстьНеобновленныеРеализации Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтаФорма), "Есть незаполненные реализации. Обновить?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутДоставкиПриИзменении(Элемент)
	Если Объект.ТабличнаяЧасть.Количество() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("МаршрутДоставкиПриИзмененииЗавершение", ЭтаФорма), "Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МаршрутДоставкиПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();		
	КонецЕсли;
	
КонецПроцедуры

