&НаКлиенте
Перем ТекСтрокаСписка Экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ТолькоВесовыеПозиции = Истина;
	РежимСборки = "По заказам";
	Элементы.ТЧЗаказы.Видимость = Ложь;
	Элементы.ТабличнаяЧасть.Видимость = Истина;
	
	Список.Параметры.УстановитьЗначениеПараметра("ДоступныеПредприятия", ПараметрыСеанса.ДоступныеПредприятия);
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("ДоступныеПредприятия", ПараметрыСеанса.ДоступныеПредприятия);

	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если РольДоступна("сабКладовщик") Тогда
		ТолькоОткрытые = Истина;
		ТолькоОткрытыеЗаказы = Истина;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоОткрытые", ТолькоОткрытые);
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("ТолькоОткрытыеЗаказы", ТолькоОткрытыеЗаказы);
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоВесовыеПозиции", ТолькоВесовыеПозиции);
	//СписокЗаказов.Параметры.УстановитьЗначениеПараметра("ТолькоВесовыеПозиции", ТолькоВесовыеПозиции);
	
	ВидимостьПредприятия = БюджетныйНаСервере.ПолучитьПредприятия().Количество() > 1;
	
	ДатаОтгрузки = ТекущаяДата();
	Список.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ДатаОтгрузки));
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ДатаОтгрузки));
	Список.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ДатаОтгрузки));
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ДатаОтгрузки));
	
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("Самовывоз", Справочники.СпособыДоставки.Самовывоз);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если Элементы.ТЧСтрокиЗаказовПрименить.Доступность И НЕ ТекСтрокаСписка = Неопределено И НЕ Элементы.Список.ТекущаяСтрока = ТекСтрокаСписка Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СписокПриАктивизацииСтрокиЗавершение", ЭтаФорма), "При переходе на другую строку изменения не будут сохранены. Продолжить", РежимДиалогаВопрос.ДаНет);
	Иначе
		Если ТекСтрокаСписка = Неопределено Тогда
			Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Ложь;
			ЗаполнитьДанныеМЛ();
			Если РежимСборки = "По заказам" Тогда
				ТабличнаяЧастьПриАктивизацииСтроки(Элемент);	
			Иначе	
				ТЧЗаказыПриАктивизацииСтроки(Элемент);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтрокиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Ложь;
		ЗаполнитьДанныеМЛ();
		ТекСтрокаСписка = Неопределено;
		Если РежимСборки = "По заказам" Тогда
			ТабличнаяЧастьПриАктивизацииСтроки(Неопределено);	
		Иначе	
			ТЧЗаказыПриАктивизацииСтроки(Неопределено);
		КонецЕсли;
	Иначе
		Элементы.Список.ТекущаяСтрока = ТекСтрокаСписка;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеМЛ()
	
	ТЧЗаказы.Очистить();
	ТЧСтрокиЗаказов.Очистить();
	ТекЗаказ = Элементы.Список.ТекущаяСтрока;
	Если ТекЗаказ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сабМаршрутныйЛистТабличнаяЧасть.ЗаказКлиента КАК ЗаказРеализация
	               |ПОМЕСТИТЬ ЗаказыРеализацииМЛ
	               |ИЗ
	               |	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	               |ГДЕ
	               |	сабМаршрутныйЛистТабличнаяЧасть.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	сабМаршрутныйЛистТабличнаяЧасть.Реализация
	               |ИЗ
	               |	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
	               |ГДЕ
	               |	сабМаршрутныйЛистТабличнаяЧасть.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |	ЕСТЬNULL(РеализацияТоваровУслугСерииНоменклатуры.Количество, РеализацияТоваровУслугТовары.Количество) КАК Количество,
	               |	РеализацияТоваровУслугТовары.Ссылка.Заказ КАК Заказ,
	               |	РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтрокиРеализации,
	               |	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	               |	РеализацияТоваровУслугСерииНоменклатуры.ДатаПроизводства КАК ДатаПроизводства,
	               |	РеализацияТоваровУслугСерииНоменклатуры.СерияНоменклатуры КАК СерияНоменклатуры
	               |ПОМЕСТИТЬ Реализации
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СерииНоменклатуры КАК РеализацияТоваровУслугСерииНоменклатуры
	               |		ПО РеализацияТоваровУслугТовары.НомерСтроки = РеализацияТоваровУслугСерииНоменклатуры.НомерСтрокиРеализации
	               |			И РеализацияТоваровУслугТовары.Номенклатура = РеализацияТоваровУслугСерииНоменклатуры.Номенклатура
	               |			И РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСерииНоменклатуры.Ссылка
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УЧ_РеализацияТовары.Номенклатура,
	               |	ЕСТЬNULL(УЧ_РеализацияСерииНоменклатуры.Количество, УЧ_РеализацияТовары.Количество),
	               |	УЧ_РеализацияТовары.Ссылка.ДокОснование,
	               |	УЧ_РеализацияТовары.НомерСтроки,
	               |	УЧ_РеализацияТовары.Ссылка,
	               |	УЧ_РеализацияСерииНоменклатуры.ДатаПроизводства,
	               |	УЧ_РеализацияСерииНоменклатуры.СерияНоменклатуры
	               |ИЗ
	               |	Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.СерииНоменклатуры КАК УЧ_РеализацияСерииНоменклатуры
	               |		ПО УЧ_РеализацияТовары.Ссылка = УЧ_РеализацияСерииНоменклатуры.Ссылка
	               |			И УЧ_РеализацияТовары.НомерСтроки = УЧ_РеализацияСерииНоменклатуры.НомерСтрокиРеализации
	               |			И УЧ_РеализацияТовары.Номенклатура = УЧ_РеализацияСерииНоменклатуры.Номенклатура
	               |ГДЕ
	               |	УЧ_РеализацияТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РозничнаяПродажаТовары.Номенклатура,
	               |	ЕСТЬNULL(РозничнаяПродажаСерииНоменклатуры.Количество, РозничнаяПродажаТовары.Количество),
	               |	РозничнаяПродажаТовары.Ссылка.Заказ,
	               |	РозничнаяПродажаТовары.НомерСтроки,
	               |	РозничнаяПродажаТовары.Ссылка,
	               |	РозничнаяПродажаСерииНоменклатуры.ДатаПроизводства,
	               |	РозничнаяПродажаСерииНоменклатуры.СерияНоменклатуры
	               |ИЗ
	               |	Документ.РозничнаяПродажа.Товары КАК РозничнаяПродажаТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.СерииНоменклатуры КАК РозничнаяПродажаСерииНоменклатуры
	               |		ПО РозничнаяПродажаТовары.Ссылка = РозничнаяПродажаСерииНоменклатуры.Ссылка
	               |			И РозничнаяПродажаТовары.НомерСтроки = РозничнаяПродажаСерииНоменклатуры.НомерСтрокиРеализации
	               |			И РозничнаяПродажаТовары.Номенклатура = РозничнаяПродажаСерииНоменклатуры.Номенклатура
	               |ГДЕ
	               |	РозничнаяПродажаТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПередачаТоваровТовары.Номенклатура,
	               |	ЕСТЬNULL(ПередачаТоваровСерииНоменклатуры.Количество, ПередачаТоваровТовары.Количество),
	               |	ПередачаТоваровТовары.Ссылка.Заказ,
	               |	ПередачаТоваровТовары.НомерСтроки,
	               |	ПередачаТоваровТовары.Ссылка,
	               |	ПередачаТоваровСерииНоменклатуры.ДатаПроизводства,
	               |	ПередачаТоваровСерииНоменклатуры.СерияНоменклатуры
	               |ИЗ
	               |	Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.СерииНоменклатуры КАК ПередачаТоваровСерииНоменклатуры
	               |		ПО ПередачаТоваровТовары.Ссылка = ПередачаТоваровСерииНоменклатуры.Ссылка
	               |			И ПередачаТоваровТовары.НомерСтроки = ПередачаТоваровСерииНоменклатуры.НомерСтрокиРеализации
	               |			И ПередачаТоваровТовары.Номенклатура = ПередачаТоваровСерииНоменклатуры.Номенклатура
	               |ГДЕ
	               |	ПередачаТоваровТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	               |	ЗаказКлиентаТабличнаяЧасть.Количество КАК КоличествоЗаказ,
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка.Контрагент КАК Контрагент,
	               |	ЕСТЬNULL(Реализации.Количество, 0) КАК Количество,
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка.ПодразделениеКонтрагента КАК Точка,
	               |	Реализации.НомерСтрокиРеализации КАК НомерСтрокиРеализации,
	               |	ЗаказКлиентаТабличнаяЧасть.Номенклатура.Весовой КАК НоменклатураВесовой,
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка КАК ЗаказКлиента,
	               |	ЗаказКлиентаТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	Реализации.Ссылка КАК Реализация,
	               |	Реализации.ДатаПроизводства КАК ДатаПроизводства,
	               |	Реализации.СерияНоменклатуры КАК СерияНоменклатуры,
	               |	ЗаказКлиентаТабличнаяЧасть.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Реализации КАК Реализации
	               |		ПО ЗаказКлиентаТабличнаяЧасть.Ссылка = Реализации.Заказ
	               |			И ЗаказКлиентаТабличнаяЧасть.Номенклатура = Реализации.Номенклатура
	               |			И ЗаказКлиентаТабличнаяЧасть.НомерСтроки = Реализации.НомерСтрокиРеализации
	               |ГДЕ
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ЗаказыРеализацииМЛ.ЗаказРеализация КАК ЗаказРеализация
	               |			ИЗ
	               |				ЗаказыРеализацииМЛ КАК ЗаказыРеализацииМЛ)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Ссылка", ТекЗаказ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	//обработка дублей строк и количества заказа
	ТЧЗаказыВрем = Выборка.Скопировать();
	ТЧЗаказыВрем.Свернуть("Реализация, НомерСтрокиРеализации, Номенклатура, КоличествоЗаказ", "Количество");
	Для каждого ТекСтрока Из ТЧЗаказыВрем Цикл
		ТекКоличЗаказ = ТекСтрока.КоличествоЗаказ; 
		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Реализация, НомерСтрокиРеализации, Номенклатура", ТекСтрока.Реализация, ТекСтрока.НомерСтрокиРеализации, ТекСтрока.Номенклатура));
		Для каждого ТекнайдСтрока Из НайденныеСтроки Цикл
			Если ТекнайдСтрока.Количество >= ТекКоличЗаказ Тогда
				ТекнайдСтрока.КоличествоЗаказ = ТекКоличЗаказ;
				ТекКоличЗаказ = 0;
			Иначе
				ТекнайдСтрока.КоличествоЗаказ = ТекнайдСтрока.Количество;
				ТекКоличЗаказ = ТекКоличЗаказ - ТекнайдСтрока.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого ТекСтрока Из Выборка Цикл
		
		Если ТолькоВесовыеПозиции И НЕ ТекСтрока.НоменклатураВесовой Тогда
			Продолжить;				
		КонецЕсли;
		
		НоваяСтрока = ТЧЗаказы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.КоличествоЗаказов = 1;
		
		НоваяСтрока = ТЧСтрокиЗаказов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		
	КонецЦикла;	
	ТЧ = ТЧЗаказы.Выгрузить();
	ТЧ.Свернуть("Номенклатура, ЕдиницаИзмерения", "Количество, КоличествоЗаказ, КоличествоЗаказов");
	ТЧЗаказы.Загрузить(ТЧ);

КонецПроцедуры

&НаКлиенте
Процедура ТЧЗаказыПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.ТЧЗаказы.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка")));
	Иначе
		Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТЧСтрокиЗаказовКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.ТЧСтрокиЗаказов.ТекущиеДанные;
	Элементы.ТЧСтрокиЗаказов.ТекущиеДанные.ЕстьИзменениеСтроки = Истина;
	Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Истина;
	ТекСтрокаСписка = Элементы.Список.ТекущаяСтрока;
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоличествоВРеализации(Документ)
	
	ТЧПоНоменклатуре = ТЧСтрокиЗаказов.Выгрузить();
	ТЧПоНоменклатуре.Свернуть("Номенклатура, ЗаказКлиента, Реализация, Контрагент, Точка, НомерСтрокиРеализации, ЕдиницаИзмерения, ИдентификаторСтрокиРеализации",
		"Количество, КоличествоЗаказ");
	
	НайденныеСтрокиПоНоменклатуре = ТЧПоНоменклатуре.НайтиСтроки(Новый Структура("Реализация", Документ));
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ДокОб = Документ.ПолучитьОбъект();
		
		Для каждого ТекСтрока Из НайденныеСтрокиПоНоменклатуре Цикл
			
			НомерСтроки = ТекСтрока.НомерСтрокиРеализации;
			
			НайденныеСтрокиПолной = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, Номенклатура, НомерСтрокиРеализации", ТекСтрока.Реализация, ТекСтрока.Номенклатура, ТекСтрока.НомерСтрокиРеализации));
			Если НайденныеСтрокиПолной.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтрокиПолной[0].СерияНоменклатуры) Тогда
					ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = НайденныеСтрокиПолной[0].СерияНоменклатуры;
				Иначе
					Если Не НайденныеСтрокиПолной[0].ДатаПроизводства = Дата('00010101') Тогда
						ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = Справочники.СерииНоменклатуры.СоздатьПолучитьСерию(НайденныеСтрокиПолной[0].Номенклатура, НайденныеСтрокиПолной[0].ДатаПроизводства);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;			
			
			ДокОб.Товары[НомерСтроки - 1].Количество = ТекСтрока.Количество;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ДокОб.Товары[НомерСтроки - 1], 0);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДокОб.Товары[НомерСтроки - 1], ДокОб.СуммаВключаетНДС);
			
		КонецЦикла;
		
		//заполняем ТЧ серии
		ДокОб.СерииНоменклатуры.Очистить();
		НайденныеСтроки = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация", ТекСтрока.Реализация));
		Для каждого ТекНайдСТрока Из НайденныеСтроки Цикл
			НоваяСтрока = ДокОб.СерииНоменклатуры.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекНайдСТрока);
		КонецЦикла;
		
		//записываем док
		Если ДокОб.Проведен Тогда
			ДокОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокОб.Записать();
		КонецЕсли;
		
		//обновляем сумму в счете
		Если ЗначениеЗаполнено(ДокОб.СчетНаОплатуПокупателю) Тогда
			ОбСч = ДокОб.СчетНаОплатуПокупателю.ПолучитьОбъект();
			ОбСч.Товары.Очистить();
			ОбСч.ВозвратнаяТара.Очистить();
			ОбСч.РеквизитыКодаДляОплаты.Очистить();
			ОбСч.Заполнить(ДокОб.Ссылка);
			Если ОбСч.Проведен Тогда
				ОбСч.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ОбСч.Записать();
			КонецЕсли;
			//Сообщить("Счет покупателю №" + ОбСч.Номер + " перезаполнен.");
		КонецЕсли;
		
		//Сообщить("Установлено новое количество в документе " + Строка(Документ) + " в строке №" + Строка(НомерСтроки));
		
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.УЧ_Реализация") Тогда
		
		ДокОб = Документ.ПолучитьОбъект();
		
		Для каждого ТекСтрока Из НайденныеСтрокиПоНоменклатуре Цикл
			
			НомерСтроки = ТекСтрока.НомерСтрокиРеализации;
			
			НайденныеСтрокиПолной = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, Номенклатура, НомерСтрокиРеализации", ТекСтрока.Реализация, ТекСтрока.Номенклатура, ТекСтрока.НомерСтрокиРеализации));
			Если НайденныеСтрокиПолной.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтрокиПолной[0].СерияНоменклатуры) Тогда
					ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = НайденныеСтрокиПолной[0].СерияНоменклатуры;
				Иначе
					Если Не НайденныеСтрокиПолной[0].ДатаПроизводства = Дата('00010101') Тогда
						ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = Справочники.СерииНоменклатуры.СоздатьПолучитьСерию(НайденныеСтрокиПолной[0].Номенклатура, НайденныеСтрокиПолной[0].ДатаПроизводства);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДокОб.Товары[НомерСтроки - 1].Количество = ТекСтрока.Количество;
			
			сабОбщегоНазначенияБУХКлиентСервер.РассчитатьСуммуТабЧасти(ДокОб.Товары[НомерСтроки - 1], 0);
			сабОбщегоНазначенияБУХКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДокОб.Товары[НомерСтроки - 1], ДокОб.СуммаВключаетНДС, Ложь);
			ДокОб.Товары[НомерСтроки - 1].СуммаОтгрузки = ДокОб.Товары[НомерСтроки - 1].Сумма + ?(ДокОб.СуммаВключаетНДС, 0, ДокОб.Товары[НомерСтроки - 1].СуммаНДС);
			
		КонецЦикла;
		
		//заполняем ТЧ серии
		ДокОб.СерииНоменклатуры.Очистить();
		НайденныеСтроки = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация", ТекСтрока.Реализация));
		Для каждого ТекНайдСТрока Из НайденныеСтроки Цикл
			НоваяСтрока = ДокОб.СерииНоменклатуры.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекНайдСТрока);
		КонецЦикла;
		
		Если ДокОб.Проведен Тогда
			ДокОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокОб.Записать();
		КонецЕсли;
		
		//Сообщить("Установлено новое количество в документе " + Строка(Документ) + " в строке №" + Строка(НомерСтроки));
		
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РозничнаяПродажа") Тогда
		
		ДокОб = Документ.ПолучитьОбъект();
		
		Для каждого ТекСтрока Из НайденныеСтрокиПоНоменклатуре Цикл
			
			НомерСтроки = ТекСтрока.НомерСтрокиРеализации;
			
			НайденныеСтрокиПолной = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, Номенклатура, НомерСтрокиРеализации", ТекСтрока.Реализация, ТекСтрока.Номенклатура, ТекСтрока.НомерСтрокиРеализации));
			Если НайденныеСтрокиПолной.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтрокиПолной[0].СерияНоменклатуры) Тогда
					ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = НайденныеСтрокиПолной[0].СерияНоменклатуры;
				Иначе
					Если Не НайденныеСтрокиПолной[0].ДатаПроизводства = Дата('00010101') Тогда
						ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = Справочники.СерииНоменклатуры.СоздатьПолучитьСерию(НайденныеСтрокиПолной[0].Номенклатура, НайденныеСтрокиПолной[0].ДатаПроизводства);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДокОб.Товары[НомерСтроки - 1].Количество = ТекСтрока.Количество;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ДокОб.Товары[НомерСтроки - 1], 0);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДокОб.Товары[НомерСтроки - 1], ДокОб.СуммаВключаетНДС);
			
		КонецЦикла;
		
		//заполняем ТЧ серии
		ДокОб.СерииНоменклатуры.Очистить();
		НайденныеСтроки = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация", ТекСтрока.Реализация));
		Для каждого ТекНайдСТрока Из НайденныеСтроки Цикл
			НоваяСтрока = ДокОб.СерииНоменклатуры.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекНайдСТрока);
		КонецЦикла;
		
		Если ДокОб.Проведен Тогда
			ДокОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокОб.Записать();
		КонецЕсли;
				
		//Сообщить("Установлено новое количество в документе " + Строка(Документ) + " в строке №" + Строка(НомерСтроки));
		
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаТоваров") Тогда
		
		ДокОб = Документ.ПолучитьОбъект();
		
		Для каждого ТекСтрока Из НайденныеСтрокиПоНоменклатуре Цикл
			
			НомерСтроки = ТекСтрока.НомерСтрокиРеализации;
			
			НайденныеСтрокиПолной = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, Номенклатура, НомерСтрокиРеализации", ТекСтрока.Реализация, ТекСтрока.Номенклатура, ТекСтрока.НомерСтрокиРеализации));
			Если НайденныеСтрокиПолной.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтрокиПолной[0].СерияНоменклатуры) Тогда
					ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = НайденныеСтрокиПолной[0].СерияНоменклатуры;
				Иначе
					Если Не НайденныеСтрокиПолной[0].ДатаПроизводства = Дата('00010101') Тогда
						ДокОб.Товары[НомерСтроки - 1].СерияНоменклатуры = Справочники.СерииНоменклатуры.СоздатьПолучитьСерию(НайденныеСтрокиПолной[0].Номенклатура, НайденныеСтрокиПолной[0].ДатаПроизводства);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ДокОб.Товары[НомерСтроки - 1].Количество = ТекСтрока.Количество;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(ДокОб.Товары[НомерСтроки - 1], 0);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДокОб.Товары[НомерСтроки - 1], ДокОб.СуммаВключаетНДС);
			
		КонецЦикла;
		
		//заполняем ТЧ серии
		ДокОб.СерииНоменклатуры.Очистить();
		НайденныеСтроки = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация", ТекСтрока.Реализация));
		Для каждого ТекНайдСТрока Из НайденныеСтроки Цикл
			НоваяСтрока = ДокОб.СерииНоменклатуры.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекНайдСТрока);
		КонецЦикла;
		
		Если ДокОб.Проведен Тогда
			ДокОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокОб.Записать();
		КонецЕсли;
		
		//Сообщить("Установлено новое количество в документе " + Строка(Документ) + " в строке №" + Строка(НомерСтроки));
		
	Иначе
		//Сообщить("Изменение факт. количества пока возможно только для стандартной реализации товаров и услуг.");
	КонецЕсли;
	
	//обновляем количество в итоговой ТЧ
	Для каждого ТекСтрока Из НайденныеСтрокиПоНоменклатуре Цикл
		ТекСтрокаНом = ТЧЗаказы.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
		ТекСтрокаНом2 = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
		Для каждого ТекНайденная Из ТекСтрокаНом Цикл
			ТекНайденная.Количество = 0;
			Для каждого ТекНайденная2 Из ТекСтрокаНом2 Цикл
				ТекНайденная.Количество = ТекНайденная.Количество + ТекНайденная2.Количество;		
			КонецЦикла;	
		КонецЦикла;
	КонецЦикла;
	
	Для каждого ТекСтрока Из ТЧСтрокиЗаказов Цикл
		ТекСтрока.ЕстьИзменениеСтроки = Ложь;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТолькоОткрытыеПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоОткрытые", ТолькоОткрытые);
КонецПроцедуры

&НаКлиенте
Процедура СтатусВРаботе(Команда)
	ВыдСтроки = Элементы.Список.ВыделенныеСтроки;
	СтатусВРаботеНаСервере(ВыдСтроки, Команда.Имя);
	Элементы.Список.Обновить();
	Элементы.ТабличнаяЧасть.Обновить();
	Элементы.ТЧЗаказы.Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СтатусВРаботеНаСервере(Заявки, ИмяКоманды)
	
	Если ИмяКоманды = "СтатусВРаботе" Тогда
		Точка = Перечисления.СтатусыМаршрутныхЛистов.ВРаботе;
	ИначеЕсли ИмяКоманды = "СтатусСобран" Тогда
		Точка = Перечисления.СтатусыМаршрутныхЛистов.Собран;
	ИначеЕсли ИмяКоманды = "СтатусВыполнен" Тогда
		Точка = Перечисления.СтатусыМаршрутныхЛистов.Выполнен;
	Иначе
		Точка = Перечисления.СтатусыЗаказовКлиентов.Новый;
	КонецЕсли;
	
	Для каждого ТекЗаявка Из Заявки Цикл
		Об = ТекЗаявка.ПолучитьОбъект();
		Об.Статус = Точка;
	    Об.Записать();
	КонецЦикла; 
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не Элементы.Список.РежимВыбора Тогда
		Если Поле.Имя = "Статус" Тогда
			СтандартнаяОбработка = Ложь;
			СписокЗначений = Новый СписокЗначений;
			СписокЗначений.ЗагрузитьЗначения(ПолучитьСписокСтатусовЗаказа());
			ТекЗнач = Неопределено;

			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("СписокВыборЗавершение", ЭтаФорма), СписокЗначений, , СписокЗначений.НайтиПоЗначению(Элементы.Список.ТекущиеДанные.Статус));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ТекЗнач = ВыбранныйЭлемент;
	Если Не ТекЗнач = Неопределено Тогда
		ЗаписатьНовыйСтатусЗаказа(Элементы.Список.ТекущаяСтрока, ТекЗнач.Значение);
		Элементы.Список.Обновить();
		Элементы.ТабличнаяЧасть.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокСтатусовЗаказа()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатусыМаршрутныхЛистов.Ссылка
	|ИЗ
	|	Перечисление.СтатусыМаршрутныхЛистов КАК СтатусыМаршрутныхЛистов";
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции // ()

&НаСервереБезКонтекста
Процедура ЗаписатьНовыйСтатусЗаказа(Документ, НовыйСтатусЗаказа)
	ТекБанкОб = Документ.ПолучитьОбъект();
	ТекБанкОб.Статус = НовыйСтатусЗаказа;
	ТекБанкОб.Записать();
КонецПроцедуры

&НаКлиенте
Процедура СтатусСогласовано(Команда)
	ВыдСтроки = Элементы.СписокЗаказов.ВыделенныеСтроки;
	СтатусСогласованоНаСервере(ВыдСтроки, Команда.Имя);
	Элементы.СписокЗаказов.Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СтатусСогласованоНаСервере(Заявки, ИмяКоманды)
	
	Если ИмяКоманды = "СтатусСогласовано" Тогда
		Точка = Перечисления.СтатусыЗаказовКлиентов.КОтгрузке;
	ИначеЕсли ИмяКоманды = "СтатусНеСогласовано" Тогда
		Точка = Перечисления.СтатусыЗаказовКлиентов.Новый;
	ИначеЕсли ИмяКоманды = "СтатусКОплате" Тогда
		Точка = Перечисления.СтатусыЗаказовКлиентов.Отгружен;
	ИначеЕсли ИмяКоманды = "СтатусОтменено" Тогда
		Точка = Перечисления.СтатусыЗаказовКлиентов.Отменен;
	Иначе
		Точка = Перечисления.СтатусыЗаказовКлиентов.Новый;
	КонецЕсли;
	
	Для каждого ТекЗаявка Из Заявки Цикл
		Об = ТекЗаявка.ПолучитьОбъект();
		Об.Статус = Точка;
		Если Об.Проведен Тогда
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Иначе	
			Об.Записать();
		КонецЕсли;
	КонецЦикла; 
		
КонецПроцедуры

&НаКлиенте
Процедура Группа2ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Группа2.ТекущаяСтраница = Элементы.Группа3 Тогда
		Элементы.ТЧЗаказы.Видимость = Истина;
		Если РежимСборки = "По заказам" Тогда
			ТабличнаяЧастьПриАктивизацииСтроки(Элемент);	
		Иначе	
			ТЧЗаказыПриАктивизацииСтроки(Элемент);
		КонецЕсли;
	Иначе
		Элементы.ТЧЗаказы.Видимость = Ложь;
		СписокЗаказовПриАктивизацииСтроки(Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокЗаказовПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.СписокЗаказов.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		ЗаполнитьДанныеЗаказа(ТекДанные.Ссылка, ТекДанные.Реализация);
	Иначе
		ТЧЗаказы.Очистить();
		ТЧСтрокиЗаказов.Очистить();
	КонецЕсли;
	Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЗаказа(Заказ, Реализация)

	ТЧЗаказы.Очистить();
	ТЧСтрокиЗаказов.Очистить();
	
	Если ТипЗнч(Реализация) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Для каждого ТекСтрока Из Реализация.Товары Цикл
			//НоваяСтрока = ТЧЗаказы.Добавить();
			//ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			//НоваяСтрока.КоличествоЗаказов = 1;
			
			НоваяСтрока = ТЧСтрокиЗаказов.Добавить();
			НоваяСтрока.ЗаказКлиента = Заказ;
			НоваяСтрока.Реализация = Реализация;
			НоваяСтрока.Контрагент = Реализация.Контрагент;
			НоваяСтрока.Точка = Заказ.ПодразделениеКонтрагента;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.НомерСтрокиРеализации = ТекСтрока.НомерСтроки;			
			
		КонецЦикла;	
		ТЧ = ТЧЗаказы.Выгрузить();
		ТЧ.Свернуть("Номенклатура", "Количество, КоличествоЗаказов");
		ТЧЗаказы.Загрузить(ТЧ);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеализацию(Команда)
	ТекДанные = Элементы.СписокЗаказов.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		СоздатьРеализацииНаСервере(ТекДанные.Ссылка, ТекДанные.Реализация);
		Элементы.СписокЗаказов.Обновить();
		СписокЗаказовПриАктивизацииСтроки(Неопределено);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеализацииНаСервере(ЗаказКлиента, Реализация)
	Если НЕ ЗначениеЗаполнено(Реализация) Тогда
		Если ЗначениеЗаполнено(ЗаказКлиента.Организация) Тогда
			Если ЗаказКлиента.ПродажаВРозницу Тогда
				НоваяРеализация = Документы.РозничнаяПродажа.СоздатьДокумент();
				НоваяРеализация.Заполнить(ЗаказКлиента);
				НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				НоваяРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				НоваяРеализация.Заполнить(ЗаказКлиента);
				НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
				//Если СоздаватьСчетНаОплатуПокупателю Тогда
					НовыйСчет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
					НовыйСчет.Заполнить(НоваяРеализация.Ссылка);
					Попытка
						НовыйСчет.Записать(РежимЗаписиДокумента.Проведение);				
					Исключение
						НовыйСчет.Записать();				
					КонецПопытки;
					НоваяРеализация.СчетНаОплатуПокупателю = НовыйСчет.Ссылка;
					НоваяРеализация.Записать();
				//КонецЕсли;
				НовыйСчФ = Документы.СчетФактураВыданный.СоздатьДокумент();
				НовыйСчФ.Заполнить(НоваяРеализация.Ссылка);
				НовыйСчФ.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
		Иначе	
			НоваяРеализация = Документы.УЧ_Реализация.СоздатьДокумент();
			НоваяРеализация.Заполнить(ЗаказКлиента);
			НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОткрытыеЗаказыПриИзменении(Элемент)
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("ТолькоОткрытыеЗаказы", ТолькоОткрытыеЗаказы);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтгрузкиПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ДатаОтгрузки));
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("Дата1", НачалоДня(ДатаОтгрузки));
	Список.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ДатаОтгрузки));
	СписокЗаказов.Параметры.УстановитьЗначениеПараметра("Дата2", КонецДня(ДатаОтгрузки));
КонецПроцедуры

&НаКлиенте
Процедура ТолькоВесовыеПозицииПриИзменении(Элемент)
	Элементы.Список.Обновить();
	Элементы.СписокЗаказов.Обновить();
	Если Элементы.Группа2.ТекущаяСтраница = Элементы.Группа3 Тогда
		СписокПриАктивизацииСтроки(Элемент);
	Иначе	
		СписокЗаказовПриАктивизацииСтроки(Элемент)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазбитьКоличествоПоСериям(Команда)
	НовоеКоличество = 0;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("РазбитьКоличествоПоСериямЗавершение", ЭтаФорма, Новый Структура("НовоеКоличество", НовоеКоличество)), НовоеКоличество, "Введите количество новой серии:", 15, 3);
КонецПроцедуры

&НаКлиенте
Процедура РазбитьКоличествоПоСериямЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	НовоеКоличество = ?(Число = Неопределено, ДополнительныеПараметры.НовоеКоличество, Число);

	ИндексСтроки = Элементы.ТЧСтрокиЗаказов.ТекущаяСтрока;
	ТекСтрока = ТЧСтрокиЗаказов.НайтиПоИдентификатору(ИндексСтроки);
		
	Если НовоеКоличество И НовоеКоличество < ТекСтрока.Количество Тогда
		
		//Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Неопределено;
		
		НоваяСтрока = ТЧСтрокиЗаказов.Вставить(ТЧСтрокиЗаказов.Индекс(ТекСтрока));
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.ДатаПроизводства = Дата('00010101');
		НоваяСтрока.СерияНоменклатуры = Неопределено;
		НоваяСтрока.Количество = НовоеКоличество;
		НоваяСтрока.КоличествоЗаказ = НовоеКоличество;
		НоваяСтрока.ЕстьИзменениеСтроки = Истина;
		ТекСтрока.Количество = ТекСтрока.Количество - НовоеКоличество;
		ТекСтрока.КоличествоЗаказ = ТекСтрока.КоличествоЗаказ - НовоеКоличество;
		ТекСтрока.ЕстьИзменениеСтроки = Истина;
		Элементы.ТЧСтрокиЗаказов.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Элементы.ТЧСтрокиЗаказов.ТекущийЭлемент = Элементы.ТЧСтрокиЗаказовДатаПроизводства; 
		Элементы.ТЧСтрокиЗаказов.ИзменитьСтроку();
		
		//Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
		
		Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Истина;
		
		Если РежимСборки = "По заказам" Тогда
			ТабличнаяЧастьПриАктивизацииСтроки(Неопределено);
		Иначе
			ТЧЗаказыПриАктивизацииСтроки(Неопределено);	
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧСтрокиЗаказовДатаПроизводстваПриИзменении(Элемент)
	Элементы.ТЧСтрокиЗаказов.ТекущиеДанные.ЕстьИзменениеСтроки = Истина;
	Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Истина;
	ТекСтрокаСписка = Элементы.Список.ТекущаяСтрока;
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	
	МассивРеализаций = МассивРеализаций();
	
	Всего = МассивРеализаций.Количество();
	ТекРеализация = 0;
	
	Для каждого ТекДанные Из МассивРеализаций Цикл
		ТекРеализация = ТекРеализация + 1;
		Состояние("Перезапись реализаций", ТекРеализация / Всего * 100, ТекДанные);
		ИзменитьКоличествоВРеализации(ТекДанные);
	КонецЦикла;
	Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Ложь;
	ТекСтрокаСписка = Неопределено;
	
КонецПроцедуры

&НаСервере
Функция МассивРеализаций()
	
	ТЧ = ТЧСтрокиЗаказов.Выгрузить();
	ТЧ.Свернуть("Реализация");
	
	МассивРеализаций = Новый Массив;
	Для каждого ТекРеал Из ТЧ Цикл
		Если ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, ЕстьИзменениеСтроки", ТекРеал.Реализация, Истина)).Количество() Тогда
			МассивРеализаций.Добавить(ТекРеал.Реализация);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивРеализаций;
	
КонецФункции // ()

&НаКлиенте
Процедура ТЧСтрокиЗаказовСерияНоменклатурыПриИзменении(Элемент)
	ТекДанные = Элементы.ТЧСтрокиЗаказов.ТекущиеДанные;
	Элементы.ТЧСтрокиЗаказов.ТекущиеДанные.ЕстьИзменениеСтроки = Истина;
	Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Истина;
	ТекСтрокаСписка = Элементы.Список.ТекущаяСтрока;
КонецПроцедуры

&НаКлиенте
Процедура ТЧСтрокиЗаказовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ЗаказКлиента", ПредопределенноеЗначение("Документ.ЗаказКлиента.ПустаяСсылка")));
	Иначе
		Элементы.ТЧСтрокиЗаказов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ЗаказКлиента", ТекСтрока.ЗаказКлиента));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РежимСборкиПриИзменении(Элемент)
	Если РежимСборки = "По заказам" Тогда
		Элементы.ТЧЗаказы.Видимость = Ложь;
		Элементы.ТабличнаяЧасть.Видимость = Истина;
	Иначе
		Элементы.ТабличнаяЧасть.Видимость = Ложь;
		Элементы.ТЧЗаказы.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТабличнаяЧастьЗаказКлиента" Тогда
		ПоказатьЗначение(, Элементы.ТабличнаяЧасть.ТекущиеДанные.ЗаказКлиента);
	ИначеЕсли ЗначениеЗаполнено(Элементы.ТабличнаяЧасть.ТекущиеДанные.Реализация) Тогда
		ПоказатьЗначение(, Элементы.ТабличнаяЧасть.ТекущиеДанные.Реализация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СтатусЗаказСобранНаСервере(Заявки, ИмяКоманды)
	
	Если ИмяКоманды = "СтатусЗаказКОтгрузке" Тогда
		Точка = Перечисления.СтатусыЗаказовКлиентов.ВРаботе;
	Иначе
		Точка = Перечисления.СтатусыЗаказовКлиентов.Собран;
	КонецЕсли;
	
	Для каждого ТекЗаявка Из Заявки Цикл
		Об = ТекЗаявка.ПолучитьОбъект();
		Об.Статус = Точка;
		Если Об.Проведен Тогда
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Иначе	
			Об.Записать();
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗаказСобран(Команда)
	ВыдСтроки = Элементы.ТабличнаяЧасть.ВыделенныеСтроки;
	МассивЗаказов = Новый Массив;
	Для каждого ТекСтрока Из ВыдСтроки Цикл
		МассивЗаказов.Добавить(Элементы.ТабличнаяЧасть.ДанныеСтроки(ТекСтрока).ЗаказКлиента);
	КонецЦикла;
	СтатусЗаказСобранНаСервере(МассивЗаказов, Команда.Имя);
	Элементы.Список.Обновить();
	Элементы.ТабличнаяЧасть.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СвернутьКоличествоПоСерии(Команда)
	ЕстьИзменения = Ложь;
	СвернутьКоличествоПоСерииСервер(ЕстьИзменения);
	Если ЕстьИзменения Тогда
		Элементы.ТЧСтрокиЗаказовПрименить.Доступность = Истина;
	КонецЕсли;
	
	Если РежимСборки = "По заказам" Тогда
		ТабличнаяЧастьПриАктивизацииСтроки(Неопределено);
	Иначе
		ТЧЗаказыПриАктивизацииСтроки(Неопределено);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СвернутьКоличествоПоСерииСервер(ЕстьИзменения)
	
	АктивнаяСтрока = ТЧСтрокиЗаказов.НайтиПоИдентификатору(Элементы.ТЧСтрокиЗаказов.ТекущаяСтрока);
	НайденныеСтрокиПолной = ТЧСтрокиЗаказов.НайтиСтроки(Новый Структура("Реализация, Номенклатура, НомерСтрокиРеализации", АктивнаяСтрока.Реализация, АктивнаяСтрока.Номенклатура, АктивнаяСтрока.НомерСтрокиРеализации));
	МассивКУдалению = Новый Массив;
	Для каждого ТекСтрока Из НайденныеСтрокиПолной Цикл
		Если Не АктивнаяСтрока.ПолучитьИдентификатор() = ТекСтрока.ПолучитьИдентификатор() Тогда
			АктивнаяСтрока.Количество = АктивнаяСтрока.Количество + ТекСтрока.Количество;
			АктивнаяСтрока.КоличествоЗаказ = АктивнаяСтрока.КоличествоЗаказ + ТекСтрока.КоличествоЗаказ;
			МассивКУдалению.Добавить(ТекСтрока);
			АктивнаяСтрока.ЕстьИзменениеСтроки = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтрока Из МассивКУдалению Цикл
		ТЧСтрокиЗаказов.Удалить(ТекСтрока);
		ЕстьИзменения = Истина;
	КонецЦикла;
		
КонецПроцедуры





