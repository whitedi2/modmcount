Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Учетный.Записывать = Истина;
	СоответствиеСчета = ПоучитьСоответствияСчетовНоменклатуры();
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	СценарийФакт = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
	
	НастройкиУП = БюджетныйНаСервере.ВернутьРеквизиты(Предприятие.УчетнаяПолитика, "РаспределятьПроводкиПоДокументамТоварооборота, УчетНДС"); 
	РаспределятьПроводкиПоДокументамТоварооборота = НастройкиУП.РаспределятьПроводкиПоДокументамТоварооборота;
	
	ВестиУчетНДС = НастройкиУП.УчетНДС;
	УчитыватьНДС = ?(НЕ ВестиУчетНДС, Ложь, УчитыватьНДС);
	
		ИспользоватьСерии = Справочники.СерииНоменклатуры.СерииНоменклатурыИспользуются();
		РассчитыватьСебестоимостьПоСериям = Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("РассчитыватьСебестоимостьПоСериям");  
		ТЗСчета = Новый ТаблицаЗначений;
		ТЗСчета.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
        ТЗСчета.Колонки.Добавить("СчетУчета",Новый ОписаниеТипов("ПланСчетовСсылка.Учетный"));
		Для Каждого ЭлементСоостветствия Из СоответствиеСчета Цикл
		 Если ЗначениеЗаполнено(ЭлементСоостветствия.Ключ) И ЗначениеЗаполнено(ЭлементСоостветствия.Значение) Тогда
		 НоваяСтрокаТЗСчета = ТЗСчета.Добавить();
		 НоваяСтрокаТЗСчета.Номенклатура = ЭлементСоостветствия.Ключ; 
		 НоваяСтрокаТЗСчета.СчетУчета = ЭлементСоостветствия.Значение;
		 КонецЕсли;
		КонецЦикла;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВТСчетаУчетаНачальная.Номенклатура КАК Номенклатура,
		|	ВТСчетаУчетаНачальная.СчетУчета КАК СчетУчета
		|ПОМЕСТИТЬ ВТСчетаУчетаНачальная
		|ИЗ
		|	&ТЗСчета КАК ВТСчетаУчетаНачальная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСчетаУчетаНачальная.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ВТСчетаУчетаНачальная.СчетУчета) КАК СчетУчета
		|ПОМЕСТИТЬ ТЗСчета
		|ИЗ
		|	ВТСчетаУчетаНачальная КАК ВТСчетаУчетаНачальная
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТСчетаУчетаНачальная.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УЧ_КорректировкаПоступленияТовары.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА УЧ_КорректировкаПоступленияТовары.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА УЧ_КорректировкаПоступленияТовары.Ссылка.Склад
		|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.Склад
		|	КОНЕЦ КАК Склад,
		|	ВЫБОР
		|		КОГДА УЧ_КорректировкаПоступленияТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ВТСчетаУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка))
		|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.СчетУчета
		|	КОНЕЦ КАК СчетУчета,
		|	ЕСТЬNULL(УЧ_КорректировкаПоступленияСерииНоменклатуры.СерияНоменклатуры, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК СерияНоменклатуры,
		|	УЧ_КорректировкаПоступленияТовары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.УЧ_КорректировкаПоступления.Товары КАК УЧ_КорректировкаПоступленияТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСчетаУчетаНачальная КАК ВТСчетаУчета
		|		ПО УЧ_КорректировкаПоступленияТовары.Номенклатура = ВТСчетаУчета.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_КорректировкаПоступления.СерииНоменклатуры КАК УЧ_КорректировкаПоступленияСерииНоменклатуры
		|		ПО УЧ_КорректировкаПоступленияТовары.Ссылка = УЧ_КорректировкаПоступленияСерииНоменклатуры.Ссылка
		|			И УЧ_КорректировкаПоступленияТовары.Номенклатура = УЧ_КорректировкаПоступленияСерииНоменклатуры.Номенклатура
		|			И УЧ_КорректировкаПоступленияТовары.НомерСтроки = УЧ_КорректировкаПоступленияСерииНоменклатуры.НомерСтрокиРеализации
		|ГДЕ
		|	УЧ_КорректировкаПоступленияТовары.Ссылка = &Ссылка
		|	И УЧ_КорректировкаПоступленияСерииНоменклатуры.Ссылка = &Ссылка
		
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ВТТовары.НомерСтроки КАК НомерСтроки,
		|	ВТТовары.Номенклатура КАК Номенклатура,
		|	ВТТовары.Склад КАК Склад,
		|	ВТТовары.СчетУчета КАК СчетУчета,
		|	ВТТовары.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ИСТИНА КАК ОстаткиНаДатуДокумента
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Остатки(
		|				&МементВремени,
		|				Счет В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТТовары.СчетУчета КАК СчетУчета
		|					ИЗ
		|						ВТТовары КАК ВТТовары),
		|				,
		|				Предприятия = &Предприятие
		|					И СценарийПлана = &Факт
		|					И (Субконто1, Субконто3, Субконто2) В
		|						(ВЫБРАТЬ
		|							ВТТовары.Номенклатура КАК Номенклатура,
		|							ВТТовары.СерияНоменклатуры КАК СерияНоменклатуры,
		|							ВТТовары.Склад КАК Склад
		|						ИЗ
		|							ВТТовары КАК ВТТовары)) КАК УчетныйОстатки
		|		ПО ВТТовары.Номенклатура = УчетныйОстатки.Субконто1
		|			И ВТТовары.Склад = УчетныйОстатки.Субконто2
		|			И ВТТовары.СчетУчета = УчетныйОстатки.Счет
		|			И ВТТовары.СерияНоменклатуры = УчетныйОстатки.Субконто3
		|ГДЕ
		|	УчетныйОстатки.КоличествоОстаток > 0
		|	И УчетныйОстатки.СуммаОстаток > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0),
		|	ВТТовары.НомерСтроки,
		|	ВТТовары.Номенклатура,
		|	ВТТовары.Склад,
		|	ВТТовары.СчетУчета,
		|	ВТТовары.СерияНоменклатуры,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0),
		|	ЛОЖЬ
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Остатки(
		|				НАЧАЛОПЕРИОДА(&ДатаДокумента, ГОД),
		|				Счет В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТТовары.СчетУчета КАК СчетУчета
		|					ИЗ
		|						ВТТовары КАК ВТТовары),
		|				,
		|				Предприятия = &Предприятие
		|					И СценарийПлана = &Факт
		|					И (Субконто1, Субконто3, Субконто2) В
		|						(ВЫБРАТЬ
		|							ВТТовары.Номенклатура КАК Номенклатура,
		|							ВТТовары.СерияНоменклатуры КАК СерияНоменклатуры,
		|							ВТТовары.Склад КАК Склад
		|						ИЗ
		|							ВТТовары КАК ВТТовары)) КАК УчетныйОстатки
		|		ПО ВТТовары.Номенклатура = УчетныйОстатки.Субконто1
		|			И ВТТовары.Склад = УчетныйОстатки.Субконто2
		|			И ВТТовары.СчетУчета = УчетныйОстатки.Счет
		|			И ВТТовары.СерияНоменклатуры = УчетныйОстатки.Субконто3
		|ГДЕ
		|	УчетныйОстатки.КоличествоОстаток > 0
		|	И УчетныйОстатки.СуммаОстаток > 0";
		
		//Если Не ИспользоватьСерии ИЛИ Не РассчитыватьСебестоимостьПоСериям Тогда 
		Если Не ИспользоватьСерии Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ЕСТЬNULL(УЧ_КорректировкаПоступленияСерииНоменклатуры.СерияНоменклатуры, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК СерияНоменклатуры,"," ");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_КорректировкаПоступления.СерииНоменклатуры КАК УЧ_КорректировкаПоступленияСерииНоменклатуры
		|		ПО УЧ_КорректировкаПоступленияТовары.Ссылка = УЧ_КорректировкаПоступленияСерииНоменклатуры.Ссылка
		|			И УЧ_КорректировкаПоступленияТовары.Номенклатура = УЧ_КорректировкаПоступленияСерииНоменклатуры.Номенклатура
		|			И УЧ_КорректировкаПоступленияТовары.НомерСтроки = УЧ_КорректировкаПоступленияСерииНоменклатуры.НомерСтрокиРеализации"," ");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВТТовары.СерияНоменклатуры КАК СерияНоменклатуры,"," ");  
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"(Субконто1, Субконто3, Субконто2)","(Субконто1,Субконто2)");
		    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И ВТТовары.СерияНоменклатуры = УчетныйОстатки.Субконто3"," ");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВТТовары.СерияНоменклатуры,"," ");  
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И УЧ_КорректировкаПоступленияСерииНоменклатуры.Ссылка = &Ссылка"," ");
		КонецЕсли; 
	
		Запрос = Новый Запрос; 
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ДатаДокумента", Дата);
		Запрос.УстановитьПараметр("МементВремени", МоментВремени());
		Запрос.УстановитьПараметр("Предприятие", Предприятие);
		Запрос.УстановитьПараметр("Факт", Справочники.СценарииПланирования.СценарийФакт());
		Запрос.УстановитьПараметр("ТЗСчета", ТЗСчета);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаОстаткиМесяцГод = РезультатЗапроса.Выбрать();
	
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Для Каждого ТекСтрокаТабличнаяЧасть Из Товары Цикл
		Если ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения = 0 И ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения = 0 Тогда
			Продолжить;
		КонецЕсли; 
		//ПроверкаДляДопПроводокСебестоимости = Ложь;
		//Если ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения = 0 Тогда
		//	 ПроверкаДляДопПроводокСебестоимости = Истина;
		//КонецЕсли;
		СчДебет = ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.СчетУчета),ТекСтрокаТабличнаяЧасть.СчетУчета,СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Номенклатура));	
		НайденныеСерии = СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", ТекСтрокаТабличнаяЧасть.Номенклатура, ТекСтрокаТабличнаяЧасть.НомерСтроки));
		МассивСерий = Новый Массив; 
		Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
			СуммаБезНДС = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаНДС);
			СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения -  ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения;
		Иначе
			СуммаБезНДС = ТекСтрокаТабличнаяЧасть.Сумма;
			СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		КонецЕсли;
		
		Если НайденныеСерии.Количество() > 1 Тогда //несколько серий
			Для каждого ТекНайдСерия Из НайденныеСерии Цикл
				МассивСерий.Добавить(Новый Структура("НомерСтроки,СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
				ТекНайдСерия.НомерСтрокиРеализации,
				ТекНайдСерия.СерияНоменклатуры, 
				ТекНайдСерия.КоличествоДоИзменения, 
				ТекНайдСерия.Количество,
				?(ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, СуммаБезНДСДоИзменения / ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, 0) * ТекНайдСерия.КоличествоДоИзменения,
				?(ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДС / ТекСтрокаТабличнаяЧасть.Количество, 0) * ТекНайдСерия.Количество));
			КонецЦикла;	
		Иначе	
			МассивСерий.Добавить(Новый Структура("НомерСтроки,СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
			ТекСтрокаТабличнаяЧасть.НомерСтроки,ТекСтрокаТабличнаяЧасть.СерияНоменклатуры, ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения,ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДСДоИзменения,СуммаБезНДС));
		КонецЕсли;
		ОсталосьРаспределитьСумма = СуммаБезНДС - СуммаБезНДСДоИзменения;
		ТекИндекс = 0;
		Для каждого ТекСерия Из МассивСерий Цикл
			Если ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения = 0 И ТекСерия.Количество - ТекСерия.КоличествоДо = 0 Тогда
				Продолжить;
			КонецЕсли; 
			ПроверкаДляДопПроводокСебестоимости = Ложь;
			Если ТекСерия.Количество - ТекСерия.КоличествоДо = 0 Тогда
				ПроверкаДляДопПроводокСебестоимости = Истина;
			КонецЕсли;
			
			Если ПроверкаДляДопПроводокСебестоимости Тогда
				//Если Не ИспользоватьСерии ИЛИ Не РассчитыватьСебестоимостьПоСериям Тогда
				Если Не ИспользоватьСерии  Тогда
					СтруктураПоискаОстатки = Новый Структура("НомерСтроки,ОстаткиНаДатуДокумента",ТекСерия.НомерСтроки,Истина);
				Иначе
					СтруктураПоискаОстатки = Новый Структура("НомерСтроки,СерияНоменклатуры,ОстаткиНаДатуДокумента",ТекСерия.НомерСтроки,ТекСерия.СерияНоменклатуры,Истина);
				КонецЕсли;  
				СуммаРаспределенияПредварительная = ТекСерия.Сумма - ТекСерия.СуммаДо; 
				КоличетсвоОстатокУчтенноеДляРаспределенияСуммы = 0;
				СуммаРаспределенияСчетЗапасов = 0; 
				СуммаРаспределенияСчетСебестоимости = 0; 
				СуммаРаспределенияПрочиеДоходыРасходы = 0;
				ОстатокНаНачалоМесяца = 0;
				//Распределение на счет запасов
				ВыборкаОстаткиМесяцГод.Сбросить();
				Если ВыборкаОстаткиМесяцГод.НайтиСледующий(СтруктураПоискаОстатки) Тогда
					ОстатокНаНачалоМесяца = ВыборкаОстаткиМесяцГод.КоличествоОстаток;
					Если ВыборкаОстаткиМесяцГод.КоличествоОстаток >= ТекСерия.КоличествоДо Тогда
						 СуммаРаспределенияСчетЗапасов = СуммаРаспределенияПредварительная;
						 КоличетсвоОстатокУчтенноеДляРаспределенияСуммы = ТекСерия.КоличествоДо;
					Иначе
						 СуммаРаспределенияСчетЗапасов = ?(ТекСерия.КоличествоДо = 0,0,ОстатокНаНачалоМесяца / ТекСерия.КоличествоДо * СуммаРаспределенияПредварительная); 
						 КоличетсвоОстатокУчтенноеДляРаспределенияСуммы = ВыборкаОстаткиМесяцГод.КоличествоОстаток;
					КонецЕсли;
					Если СуммаРаспределенияСчетЗапасов < 0 И ВыборкаОстаткиМесяцГод.СуммаОстаток + СуммаРаспределенияСчетЗапасов < 0 Тогда
						 СуммаРаспределенияСчетЗапасов = 0;
					КонецЕсли;
					СуммаРаспределенияПредварительная = СуммаРаспределенияПредварительная - СуммаРаспределенияСчетЗапасов;
				КонецЕсли;
				//Распределение на счет себестоимости
				Если СуммаРаспределенияПредварительная <> 0 Тогда
					Если Не ИспользоватьСерии ИЛИ Не РассчитыватьСебестоимостьПоСериям Тогда
						СтруктураПоискаОстатки = Новый Структура("НомерСтроки,ОстаткиНаДатуДокумента",ТекСерия.НомерСтроки,Ложь);
					Иначе
						СтруктураПоискаОстатки = Новый Структура("НомерСтроки,СерияНоменклатуры,ОстаткиНаДатуДокумента",ТекСерия.НомерСтроки,ТекСерия.СерияНоменклатуры,Ложь);
					КонецЕсли;
					КоличествоСУчётомРаспределенного = ТекСерия.КоличествоДо - КоличетсвоОстатокУчтенноеДляРаспределенияСуммы;
					ВыборкаОстаткиМесяцГод.Сбросить();
					Если ВыборкаОстаткиМесяцГод.НайтиСледующий(СтруктураПоискаОстатки) Тогда
						ИтоговыйОстатокНаНачалоГода = ВыборкаОстаткиМесяцГод.КоличествоОстаток - ОстатокНаНачалоМесяца;
						Если ИтоговыйОстатокНаНачалоГода > 0 Тогда
							Если ВыборкаОстаткиМесяцГод.КоличествоОстаток >= КоличествоСУчётомРаспределенного Тогда
								СуммаРаспределенияСчетСебестоимости = СуммаРаспределенияПредварительная;
								//КоличетсвоОстатокУчтенноеДляРаспределенияСуммы = КоличествоСУчётомРаспределенного;
							Иначе
								СуммаРаспределенияСчетСебестоимости = ?(КоличествоСУчётомРаспределенного = 0,0,ИтоговыйОстатокНаНачалоГода / КоличествоСУчётомРаспределенного * СуммаРаспределенияПредварительная); 
								//КоличетсвоОстатокУчтенноеДляРаспределенияСуммы = ВыборкаОстаткиМесяцГод.КоличествоОстаток + КоличествоСУчётомРаспределенного;
							КонецЕсли;
						КонецЕсли;
						//Если СуммаРаспределенияСчетСебестоимости < 0 И ВыборкаОстаткиМесяцГод.СуммаОстаток + СуммаРаспределенияСчетЗапасов < 0 Тогда
						//	СуммаРаспределенияСчетСебестоимости = 0;
						//КонецЕсли;
						СуммаРаспределенияПредварительная = СуммаРаспределенияПредварительная - СуммаРаспределенияСчетСебестоимости;
					КонецЕсли;
				КонецЕсли;
				//Распределение на счет прочие доходы/расходы
				Если СуммаРаспределенияПредварительная <> 0 Тогда 
					СуммаРаспределенияПрочиеДоходыРасходы = СуммаРаспределенияПредварительная; 
				КонецЕсли;
			КонецЕсли;
			
			ОсталосьРаспределитьСуммаСерия = ТекСерия.Сумма - ТекСерия.СуммаДо;
			Пока Не ПроверкаДляДопПроводокСебестоимости ИЛИ СуммаРаспределенияСчетЗапасов <> 0 ИЛИ  СуммаРаспределенияСчетСебестоимости <> 0 ИЛИ СуммаРаспределенияПрочиеДоходыРасходы <> 0 Цикл
			ТекИндекс = ТекИндекс + 1;
			Движение = Движения.Учетный.Добавить(); 
			Если Не ПроверкаДляДопПроводокСебестоимости Тогда
				Движение.СчетДт = СчДебет;
				Если СчДебет.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = Подразделение;
				КонецЕсли;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСерия.СерияНоменклатуры);
				Движение.КоличествоДт = ТекСерия.Количество - ТекСерия.КоличествоДо; 
				Движение.Сумма = ?(ТекИндекс = МассивСерий.Количество(), ОсталосьРаспределитьСумма,  ТекСерия.Сумма - ТекСерия.СуммаДо);
			ИначеЕсли СуммаРаспределенияСчетЗапасов <> 0 Тогда
				Движение.СчетДт = СчДебет;
				Если СчДебет.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = Подразделение;
				КонецЕсли;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСерия.СерияНоменклатуры);
				Движение.Сумма = СуммаРаспределенияСчетЗапасов;
                СуммаРаспределенияСчетЗапасов = 0;
			ИначеЕсли СуммаРаспределенияСчетСебестоимости <> 0 Тогда
				
				Движение.СчетДт = ПланыСчетов.Учетный.Счет9002();
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, Контрагент);
				Движение.Сумма = СуммаРаспределенияСчетСебестоимости;
                СуммаРаспределенияСчетСебестоимости = 0;
            ИначеЕсли СуммаРаспределенияПрочиеДоходыРасходы <> 0 Тогда	
				Движение.СчетДт = ПланыСчетов.Учетный.Счет91();
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, Справочники.ПрочиеДоходыИРасходы.ИсправительныеЗаписиПоОперациямПрошлыхЛет);
				Движение.Сумма = СуммаРаспределенияПрочиеДоходыРасходы;
                СуммаРаспределенияПрочиеДоходыРасходы = 0;
            КонецЕсли;
			Движение.СценарийПлана = СценарийФакт;
			Движение.Предприятия = Предприятие;
			Движение.Период = Дата;
			//Движение.СчетДт = СчДебет;
			//Если СчДебет.УчетПоПодразделениям Тогда
			//	Движение.ПодразделениеДт = Подразделение;
			//КонецЕсли;
			//УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
			//УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
			//УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСерия.СерияНоменклатуры);
			Движение.СчетКт = СчетКонтрагента;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
			//++сабОпер
			Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
			КонецЕсли;
			//--сабОпер
			Если СчетКонтрагента.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение; 
			КонецЕсли;
			Если ФлагВалюты Тогда
				Движение.ВалютнаяСуммаКт = ТекСерия.Сумма;
				Движение.ВалютаКт = Валюта;
			КонецЕсли;
			//Движение.КоличествоДт = ТекСерия.Количество - ТекСерия.КоличествоДо;
			//Движение.Сумма = ?(ТекИндекс = МассивСерий.Количество(), ОсталосьРаспределитьСумма,  ТекСерия.Сумма - ТекСерия.СуммаДо);
			Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			Движение.Содержание = Комментарий; 
			ОсталосьРаспределитьСуммаСерия = ОсталосьРаспределитьСуммаСерия - Движение.Сумма;
			ОсталосьРаспределитьСумма = ОсталосьРаспределитьСумма - Движение.Сумма;
			Если Не ПроверкаДляДопПроводокСебестоимости Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ОсталосьРаспределитьСуммаСерия <> 0 Тогда
			Движение.Сумма = Движение.Сумма + ОсталосьРаспределитьСуммаСерия;
			ОсталосьРаспределитьСумма = ОсталосьРаспределитьСумма - ОсталосьРаспределитьСуммаСерия;
		КонецЕсли;    
	КонецЦикла;
	Если ОсталосьРаспределитьСумма <> 0 Тогда
		Движение.Сумма = Движение.Сумма + ОсталосьРаспределитьСумма;
	КонецЕсли; 
	
	//СчДебет = ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.СчетУчета),ТекСтрокаТабличнаяЧасть.СчетУчета,СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Номенклатура));	
		//Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() И 
		//	сабОбщегоНазначенияПовтИсп.ПолучитьНаличиеСерийногоУчетаДляСчета(СчДебет) Тогда
		//	НайденныеСерии = СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", ТекСтрокаТабличнаяЧасть.Номенклатура, ТекСтрокаТабличнаяЧасть.НомерСтроки));
		//	МассивСерий = Новый Массив; 
		//	Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
		//		СуммаБезНДС = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаНДС);
		//		СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения -  ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения;
		//	Иначе
		//		СуммаБезНДС = ТекСтрокаТабличнаяЧасть.Сумма;
		//		СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		//	КонецЕсли;
		//	
		//	Если НайденныеСерии.Количество() > 1 Тогда //несколько серий
		//		Для каждого ТекНайдСерия Из НайденныеСерии Цикл
		//			МассивСерий.Добавить(Новый Структура("СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
		//			ТекНайдСерия.СерияНоменклатуры, 
		//			ТекНайдСерия.КоличествоДоИзменения, 
		//			ТекНайдСерия.Количество,
		//			?(ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, СуммаБезНДСДоИзменения / ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, 0) * ТекНайдСерия.КоличествоДоИзменения,
		//			?(ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДС / ТекСтрокаТабличнаяЧасть.Количество, 0) * ТекНайдСерия.Количество));
		//		КонецЦикла;	
		//	Иначе	
		//		МассивСерий.Добавить(Новый Структура("СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
		//		ТекСтрокаТабличнаяЧасть.СерияНоменклатуры, ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения,ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДСДоИзменения,СуммаБезНДС));
		//	КонецЕсли;
		//	ОсталосьРаспределитьСумма = СуммаБезНДС - СуммаБезНДСДоИзменения;
		//	//Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
		//	//	ОсталосьРаспределитьСумма = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения) -
		//	//	(ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения);
		//	//Иначе
		//	//	ОсталосьРаспределитьСумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		//	//КонецЕсли;
		//	ТекИндекс = 0;
		//	Для каждого ТекСерия Из МассивСерий Цикл
		//		Движение = Движения.Учетный.Добавить();
		//		Движение.СценарийПлана = СценарийФакт;
		//		Движение.Предприятия = Предприятие;
		//		Движение.Период = Дата;
		//		Движение.СчетДт = СчДебет;
		//		Если СчДебет.УчетПоПодразделениям Тогда
		//			Движение.ПодразделениеДт = Подразделение;
		//		КонецЕсли;
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСерия.СерияНоменклатуры);
		//		
		//		Движение.СчетКт = СчетКонтрагента;
		//		
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
		//		
		//		//++сабОпер
		//		Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
		//			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
		//		КонецЕсли;
		//		//--сабОпер
		//		
		//		Если СчетКонтрагента.УчетПоПодразделениям Тогда
		//			Движение.ПодразделениеКт = Подразделение; 
		//		КонецЕсли;
		//		
		//		Если ФлагВалюты Тогда
		//			Движение.ВалютнаяСуммаКт = ТекСерия.Сумма;
		//			//Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
		//			Движение.ВалютаКт = Валюта;
		//		КонецЕсли;
		//		
		//		//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
		//		Движение.КоличествоДт = ТекСерия.Количество - ТекСерия.КоличествоДо;
		//		//Движение.Сумма = ТекСерия.Сумма - ТекСерия.СуммаДо;
		//		Движение.Сумма = ?(ТекИндекс = МассивСерий.Количество(), ОсталосьРаспределитьСумма,  ТекСерия.Сумма - ТекСерия.СуммаДо);
		//		Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		//		Движение.Содержание = Комментарий; 
		//	КонецЦикла;
		//Иначе 
		//	Движение = Движения.Учетный.Добавить();
		//	Движение.СценарийПлана = СценарийФакт;
		//	Движение.Предприятия = Предприятие;
		//	Движение.Период = Дата;
		//	Движение.СчетДт = СчДебет;
		//	Если СчДебет.УчетПоПодразделениям Тогда
		//		Движение.ПодразделениеДт = Подразделение;
		//	КонецЕсли;
		//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
		//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
		//	Движение.СчетКт = СчетКонтрагента;
		//	
		//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
		//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
		//	
		//	//++сабОпер
		//	Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
		//		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
		//	КонецЕсли;
		//	//--сабОпер
		//	
		//	Если СчетКонтрагента.УчетПоПодразделениям Тогда
		//		Движение.ПодразделениеКт = Подразделение; 
		//	КонецЕсли;
		//	
		//	Если ФлагВалюты Тогда
		//		Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
		//			Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаНДС;
		//		Иначе
		//			Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма;
		//		КонецЕсли;
		//		//Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
		//		Движение.ВалютаКт = Валюта;
		//	КонецЕсли;
		//	
		//	//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
		//	//Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;
		//	//Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		//	//
		//	//Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		//	//Движение.Содержание = Комментарий;
		//	//КонецЕсли;
		//	//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
		//	Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;  
		//	Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
		//		Движение.Сумма = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения) -
		//		(ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения);
		//	Иначе
		//		Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		//	КонецЕсли;
		//	Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		//	Движение.Содержание = Комментарий;
		//КонецЕсли;
		
		
		//Проводки НДС +++
		Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СценарийПлана = СценарийФакт;
			Движение.Предприятия = Предприятие;
			Движение.Период = Дата;
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6801();
			Если СчДебет.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли; 
			//УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, Контрагент);
			НДС = Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоНаименованию("НДС",Истина);
			Если ЗначениеЗаполнено(НДС) Тогда
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, НДС);
            КонецЕсли;
			Движение.СчетКт = СчетКонтрагента;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
			Если СчетКонтрагента.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;  
			СуммаНДС =  ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения;
			Движение.Сумма = СуммаНДС;
			Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			Движение.Содержание = "возмещение НДС при корректировке поступления";
			//Если СуммаНДС < 0 Тогда
			//	Движение = Движения.Учетный.Добавить();
			//	Движение.СценарийПлана = СценарийФакт;
			//	Движение.Предприятия = Предприятие;
			//	Движение.Период = Дата;
			//	Движение.СчетДт = ПланыСчетов.Учетный.Счет19();
			//	Если СчДебет.УчетПоПодразделениям Тогда
			//		Движение.ПодразделениеДт = Подразделение;
			//	КонецЕсли; 
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, Контрагент);
			//	Движение.СчетКт = ПланыСчетов.Учетный.Счет6801();
			//	Если Движение.СчетКт.УчетПоПодразделениям Тогда
			//		Движение.ПодразделениеКт = Подразделение;
			//	КонецЕсли;
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоНаименованию("НДС", Истина));
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Организация);
			//	Движение.Сумма = -СуммаНДС;
			//	Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			//	Движение.Содержание = "возмещение НДС при корректировке поступления";
			//КонецЕсли;
		КонецЕсли;
		//Проводки НДС ---
		
	КонецЦикла;  
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из Услуги Цикл
		
		Если ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения = 0 И ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.Учетный.Добавить();
		
		Движение.СценарийПлана = СценарийФакт;
		Движение.Предприятия = Предприятие;
		Движение.Период = Дата;
		Движение.СчетДт = ТекСтрокаТабличнаяЧасть.СчетЗатрат;
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Субконто1);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаТабличнаяЧасть.Субконто2);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСтрокаТабличнаяЧасть.Субконто3);
		Движение.СчетКт = СчетКонтрагента;
		
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
		
		//++сабОпер
		Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
		КонецЕсли;
		//--сабОпер
		
		Если СчетКонтрагента.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение; 
		КонецЕсли;
		
		Если ФлагВалюты Тогда
			Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
			Движение.ВалютаКт = Валюта;
		КонецЕсли;
		
		//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
		//Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;
		Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		Движение.Содержание = Комментарий; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	РучнаяКорректировка = Ложь;
	Движения.Записать();
	
КонецПроцедуры

Функция ПоучитьСоответствияСчетовНоменклатуры()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УЧ_КорректировкаПоступленияТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10
	|	КОНЕЦ КАК Счет
	|ИЗ
	|	Документ.УЧ_КорректировкаПоступления.Товары КАК УЧ_КорректировкаПоступленияТовары
	|ГДЕ
	|	УЧ_КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_КорректировкаПоступленияТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Null, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПланыСчетов.Учетный.Счет41());
	
	МассивМатериаловБезСчета = Новый Массив;
	Для каждого ТекСтрока Из Товары Цикл
		Если МассивМатериаловБезСчета.Найти(ТекСтрока["Номенклатура"]) = Неопределено Тогда
			МассивМатериаловБезСчета.Добавить(ТекСтрока["Номенклатура"]);	
		КонецЕсли;
	КонецЦикла;
	
	НовоеСоответствие = сабОбщегоНазначения.ПолучитьСчетУчетаНоменклатуры(МассивМатериаловБезСчета, Организация, Неопределено);
	Для каждого ТекСоотв Из НовоеСоответствие Цикл
		Если ЗначениеЗаполнено(ТекСоотв.Значение.СчетУчетаУУ) Тогда
			Соответствия.Вставить(ТекСоотв.Ключ, ТекСоотв.Значение.СчетУчетаУУ);
			//СоответствияУчетаПодразделений.Вставить(ТекСоотв.Значение.СчетУчетаУУ, ТекСоотв.Значение.СчетУчетаУУ.УчетПоПодразделениям);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Соответствия;	
	
КонецФункции // ()

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтотОбъект.ЭтоНовый());
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") Тогда
		
		ДокОснование = ДанныеЗаполнения;
		Документы.УЧ_КорректировкаПоступления.ЗаполнитьПоДокументуОснованию(ЭтотОбъект);
		
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	
КонецПроцедуры
