Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Учетный.Записывать = Истина;
	СоответствиеСчета = ПоучитьСоответствияСчетовНоменклатуры();
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	СценарийФакт = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
	
	НастройкиУП = БюджетныйНаСервере.ВернутьРеквизиты(Предприятие.УчетнаяПолитика, "РаспределятьПроводкиПоДокументамТоварооборота, УчетНДС"); 
	РаспределятьПроводкиПоДокументамТоварооборота = НастройкиУП.РаспределятьПроводкиПоДокументамТоварооборота;
	
	ВестиУчетНДС = НастройкиУП.УчетНДС;
	УчитыватьНДС = ?(НЕ ВестиУчетНДС, Ложь, УчитыватьНДС);
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из Товары Цикл
		Если ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения = 0 И ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения = 0 Тогда
			Продолжить;
		КонецЕсли;
		СчДебет = СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Номенклатура);	
		Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() И 
			сабОбщегоНазначенияПовтИсп.ПолучитьНаличиеСерийногоУчетаДляСчета(СчДебет) Тогда
			НайденныеСерии = СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", ТекСтрокаТабличнаяЧасть.Номенклатура, ТекСтрокаТабличнаяЧасть.НомерСтроки));
			МассивСерий = Новый Массив; 
			Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
				СуммаБезНДС = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаНДС);
				СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения -  ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения;
			Иначе
				СуммаБезНДС = ТекСтрокаТабличнаяЧасть.Сумма;
				СуммаБезНДСДоИзменения = ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
			КонецЕсли;
			
			Если НайденныеСерии.Количество() > 1 Тогда //несколько серий
				Для каждого ТекНайдСерия Из НайденныеСерии Цикл
					МассивСерий.Добавить(Новый Структура("СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
					ТекНайдСерия.СерияНоменклатуры, 
					ТекНайдСерия.КоличествоДоИзменения, 
					ТекНайдСерия.Количество,
					?(ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, СуммаБезНДСДоИзменения / ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения, 0) * ТекНайдСерия.КоличествоДоИзменения,
					?(ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДС / ТекСтрокаТабличнаяЧасть.Количество, 0) * ТекНайдСерия.Количество));
				КонецЦикла;	
			Иначе	
				МассивСерий.Добавить(Новый Структура("СерияНоменклатуры, КоличествоДо, Количество, СуммаДо, Сумма", 
				ТекСтрокаТабличнаяЧасть.СерияНоменклатуры, ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения,ТекСтрокаТабличнаяЧасть.Количество, СуммаБезНДСДоИзменения,СуммаБезНДС));
			КонецЕсли;
			ОсталосьРаспределитьСумма = СуммаБезНДС - СуммаБезНДСДоИзменения;
			//Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
			//	ОсталосьРаспределитьСумма = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения) -
			//	(ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения);
			//Иначе
			//	ОсталосьРаспределитьСумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
			//КонецЕсли;
			ТекИндекс = 0;
			Для каждого ТекСерия Из МассивСерий Цикл
				Движение = Движения.Учетный.Добавить();
				Движение.СценарийПлана = СценарийФакт;
				Движение.Предприятия = Предприятие;
				Движение.Период = Дата;
				Движение.СчетДт = СчДебет;
				Если СчДебет.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = Подразделение;
				КонецЕсли;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСерия.СерияНоменклатуры);
				
				Движение.СчетКт = СчетКонтрагента;
				
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
				
				//++сабОпер
				Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
				КонецЕсли;
				//--сабОпер
				
				Если СчетКонтрагента.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = Подразделение; 
				КонецЕсли;
				
				Если ФлагВалюты Тогда
					Движение.ВалютнаяСуммаКт = ТекСерия.Сумма;
					//Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
					Движение.ВалютаКт = Валюта;
				КонецЕсли;
				
				//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
				Движение.КоличествоДт = ТекСерия.Количество - ТекСерия.КоличествоДо;
				//Движение.Сумма = ТекСерия.Сумма - ТекСерия.СуммаДо;
				Движение.Сумма = ?(ТекИндекс = МассивСерий.Количество(), ОсталосьРаспределитьСумма,  ТекСерия.Сумма - ТекСерия.СуммаДо);
				Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
				Движение.Содержание = Комментарий; 
			КонецЦикла;
		Иначе 
			Движение = Движения.Учетный.Добавить();
			Движение.СценарийПлана = СценарийФакт;
			Движение.Предприятия = Предприятие;
			Движение.Период = Дата;
			Движение.СчетДт = СчДебет;
			Если СчДебет.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Склад), ТекСтрокаТабличнаяЧасть.Склад, Склад));
			Движение.СчетКт = СчетКонтрагента;
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
			
			//++сабОпер
			Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
			КонецЕсли;
			//--сабОпер
			
			Если СчетКонтрагента.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение; 
			КонецЕсли;
			
			Если ФлагВалюты Тогда
				Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
					Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаНДС;
				Иначе
					Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма;
				КонецЕсли;
				//Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
				Движение.ВалютаКт = Валюта;
			КонецЕсли;
			
			//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
			//Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;
			//Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
			//
			//Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			//Движение.Содержание = Комментарий;
			//КонецЕсли;
			//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
			Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;  
			Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда 
				Движение.Сумма = (ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения) -
				(ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения);
			Иначе
				Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
			КонецЕсли;
			Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			Движение.Содержание = Комментарий;
		КонецЕсли;
		
		
		//Проводки НДС +++
		Если УчитыватьНДС И (ТекСтрокаТабличнаяЧасть.СуммаНДС ИЛИ ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения) Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СценарийПлана = СценарийФакт;
			Движение.Предприятия = Предприятие;
			Движение.Период = Дата;
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6801();
			Если СчДебет.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли; 
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, Контрагент);
			Движение.СчетКт = СчетКонтрагента;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
			Если СчетКонтрагента.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;  
			СуммаНДС =  ТекСтрокаТабличнаяЧасть.СуммаНДС - ТекСтрокаТабличнаяЧасть.СуммаНДСДоИзменения;
			Движение.Сумма = СуммаНДС;
			Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			Движение.Содержание = "возмещение НДС при корректировке поступления";
			//Если СуммаНДС < 0 Тогда
			//	Движение = Движения.Учетный.Добавить();
			//	Движение.СценарийПлана = СценарийФакт;
			//	Движение.Предприятия = Предприятие;
			//	Движение.Период = Дата;
			//	Движение.СчетДт = ПланыСчетов.Учетный.Счет19();
			//	Если СчДебет.УчетПоПодразделениям Тогда
			//		Движение.ПодразделениеДт = Подразделение;
			//	КонецЕсли; 
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, Контрагент);
			//	Движение.СчетКт = ПланыСчетов.Учетный.Счет6801();
			//	Если Движение.СчетКт.УчетПоПодразделениям Тогда
			//		Движение.ПодразделениеКт = Подразделение;
			//	КонецЕсли;
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоНаименованию("НДС", Истина));
			//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Организация);
			//	Движение.Сумма = -СуммаНДС;
			//	Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			//	Движение.Содержание = "возмещение НДС при корректировке поступления";
			//КонецЕсли;
		КонецЕсли;
		//Проводки НДС ---
		
	КонецЦикла;  
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из Услуги Цикл
		
		Если ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения = 0 И ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.Учетный.Добавить();
		
		Движение.СценарийПлана = СценарийФакт;
		Движение.Предприятия = Предприятие;
		Движение.Период = Дата;
		Движение.СчетДт = ТекСтрокаТабличнаяЧасть.СчетЗатрат;
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Субконто1);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаТабличнаяЧасть.Субконто2);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, ТекСтрокаТабличнаяЧасть.Субконто3);
		Движение.СчетКт = СчетКонтрагента;
		
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Контрагент);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, Договор);
		
		//++сабОпер
		Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
		КонецЕсли;
		//--сабОпер
		
		Если СчетКонтрагента.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение; 
		КонецЕсли;
		
		Если ФлагВалюты Тогда
			Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
			Движение.ВалютаКт = Валюта;
		КонецЕсли;
		
		//Писать тупо сумму не совсем правильно (ндс может быть не в сумме), но оставил как есть, чтобы поступления и корр работали по 1 алгоритму
		//Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ТекСтрокаТабличнаяЧасть.КоличествоДоИзменения;
		Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма - ТекСтрокаТабличнаяЧасть.СуммаДоИзменения;
		Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		Движение.Содержание = Комментарий;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	РучнаяКорректировка = Ложь;
	Движения.Записать();
	
КонецПроцедуры

Функция ПоучитьСоответствияСчетовНоменклатуры()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УЧ_КорректировкаПоступленияТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10
	|	КОНЕЦ КАК Счет
	|ИЗ
	|	Документ.УЧ_КорректировкаПоступления.Товары КАК УЧ_КорректировкаПоступленияТовары
	|ГДЕ
	|	УЧ_КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_КорректировкаПоступленияТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ УЧ_КорректировкаПоступленияТовары.Номенклатура.Счет10
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Null, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПланыСчетов.Учетный.Счет41());
	
	МассивМатериаловБезСчета = Новый Массив;
	Для каждого ТекСтрока Из Товары Цикл
		Если МассивМатериаловБезСчета.Найти(ТекСтрока["Номенклатура"]) = Неопределено Тогда
			МассивМатериаловБезСчета.Добавить(ТекСтрока["Номенклатура"]);	
		КонецЕсли;
	КонецЦикла;
	
	НовоеСоответствие = сабОбщегоНазначения.ПолучитьСчетУчетаНоменклатуры(МассивМатериаловБезСчета, Организация, Неопределено);
	Для каждого ТекСоотв Из НовоеСоответствие Цикл
		Если ЗначениеЗаполнено(ТекСоотв.Значение.СчетУчетаУУ) Тогда
			Соответствия.Вставить(ТекСоотв.Ключ, ТекСоотв.Значение.СчетУчетаУУ);
			//СоответствияУчетаПодразделений.Вставить(ТекСоотв.Значение.СчетУчетаУУ, ТекСоотв.Значение.СчетУчетаУУ.УчетПоПодразделениям);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Соответствия;	
	
КонецФункции // ()

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтотОбъект.ЭтоНовый());
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") Тогда
		
		ДокОснование = ДанныеЗаполнения;
		Документы.УЧ_КорректировкаПоступления.ЗаполнитьПоДокументуОснованию(ЭтотОбъект);
		
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	
КонецПроцедуры
