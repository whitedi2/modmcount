
	#Область СобытияФормыИШапки

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	//Выполняется ввод на основании 
	Если Параметры.Свойство("Основание") Тогда
		Если ЗначениеЗаполнено(Параметры.Основание) Тогда
			Запрос = новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	УЧ_КорректировкаПоступления.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.УЧ_КорректировкаПоступления КАК УЧ_КорректировкаПоступления
			               |ГДЕ
			               |	УЧ_КорректировкаПоступления.ДокОснование = &ДокОснование
			               |	И НЕ УЧ_КорректировкаПоступления.ПометкаУдаления";
			Запрос.УстановитьПараметр("ДокОснование", Параметры.Основание);
			РезультатЗапроса = Запрос.Выполнить();
			Если Не РезультатЗапроса.Пустой() Тогда
				СообщениеПользователю = новый СообщениеПользователю;
				СообщениеПользователю.Текст = "На основании документа уже существует не помеченная на удаление корректировка поступления. Создание новой корректировки невозможно";
				СообщениеПользователю.Сообщить();
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//Если ЗначениеЗаполнено(Объект.Ссылка.ДокОснование) Или ЗначениеЗаполнено(Параметры.Основание) Тогда
	//	Элементы.ДокОснование.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
	Если Объект.Товары.Количество() Тогда
		Элементы.СтраницыТабличныеЧасти.ТекущаяСтраница = Элементы.СтраницаТовары;
	ИначеЕсли Объект.Услуги.Количество() Тогда
		Элементы.СтраницыТабличныеЧасти.ТекущаяСтраница = Элементы.СтраницаУслуги;
	КонецЕсли; 
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
		сабОперОбщегоНазначения.СинхронизацияСерийПриСозданииФормы(Объект.Товары,Объект.СерииНоменклатуры);
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьСтатусы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокОснованиеПриИзменении(Элемент)
	ДокОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДокОснованиеПриИзмененииНаСервере()

	Документы.УЧ_КорректировкаПоступления.ЗаполнитьПоДокументуОснованию(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

	#КонецОбласти

	#Область СобытияТабличныйЧастей

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)

	СтрокаТаблицы = Элементы.Товары.ТекущиеДанные;
	Если СтрокаТаблицы.ЕстьВДокументеПоступления Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Вместо удаления строки исходного документа очистите суммовые и количественные показатели.'");
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоЦенаПриИзменении(Элемент)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ТекДанные, Объект.ЦенаВключаетНДС); 
	СтавкаЧисло = ПолучитьСтавкуНДСЧислом(ТекДанные.СтавкаНДС);
	ТекДанные.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекДанные.Сумма, Объект.ЦенаВключаетНДС, СтавкаЧисло);
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьСтавкуНДСЧислом(СпрСтавкаНДС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтавкиНДС.Ставка КАК Ставка
	|ИЗ
	|	Справочник.СтавкиНДС КАК СтавкиНДС
	|ГДЕ
	|	СтавкиНДС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СпрСтавкаНДС);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ставка;
	КонецЕсли;;
	
КонецФункции

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	//ТекДанные = Элементы.Товары.ТекущиеДанные;
	//ТекДанные.Цена = ?(ТекДанные.Количество = 0, 0, ТекДанные.Сумма / ТекДанные.Количество);
	//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ТекДанные);
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтаФорма, "Товары");

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ТекДанные, Объект.ЦенаВключаетНДС);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ОбновитьСтатусы();

	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
		сабОперОбщегоНазначенияНаКлиенте.СинхронизироватьНомерСтрокиРеализацииДляТЧСерии(Элемент.ТекущиеДанные,Объект.Товары,Объект.СерииНоменклатуры);
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбновитьСтатусы()
	
	Элементы.СтраницаТовары.Заголовок = "Товары (" + Формат(Объект.Товары.Количество(), "ЧН=0") + ")";
	Элементы.СтраницаУчетПартий.Заголовок = "Учет партий (" + Формат(Объект.УчетПартий.Количество(), "ЧН=0") + ")";
	
КонецПроцедуры


#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОповеститьРегистрОбработанных", Новый Структура("ДокументУУ, ДокументБУ", Объект.Ссылка, ?(БюджетныйНаКлиенте.ЕстьСвойствоОбъекта(ЭтаФорма, "ДокументБУ"), ЭтаФорма.ДокументБУ, Неопределено)));	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
		сабОперОбщегоНазначения.ПерезаполнитьТЧСерииНоменклатурыПередЗаписью(Объект.Товары,ТекущийОбъект.СерииНоменклатуры);
		Если Не Отказ И БюджетныйНаСервере.ЕстьСвойствоОбъекта(ЭтотОбъект, "ДокументБУ") И ЗначениеЗаполнено(ЭтотОбъект.ДокументБУ) И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ПараметрыЗаписи.Вставить("СинхронизироватьСерииНоменклатурыСДокументомБух",Истина); 
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда 
		ДокументСоздан = Истина;
		ТекстОшибки = "";
		сабОперОбщегоНазначения.СинхронизацияСерийПриЗаписиНаСервереФормы(ПараметрыЗаписи,ЭтотОбъект,ТекущийОбъект,Отказ,ДокументСоздан,ТекстОшибки);
		Если Не ДокументСоздан Тогда
			Сообщить("Табличная часть ""Серии номенклатуры"" не была синхронизирована с документом " + ЭтотОбъект.ДокументБУ + ". По причине: " + ТекстОшибки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
		сабОперОбщегоНазначения.СинхронизацияСерийПослеЗаписиНаСервереФормы(Объект.Товары,Объект.СерииНоменклатуры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСерияНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	МассивПараметрыВыбора = Новый Массив;
	НовыйПараметрДата = Новый ПараметрВыбора("ДатаОтгрузки",Объект.Дата);
	НовыйПараметрСчет = Новый ПараметрВыбора("Счет",ПоучитьСчетНоменклатуры(ТекДанные.Номенклатура));  
	НовыйПараметрСклад = Новый ПараметрВыбора("Склад",?(ЗначениеЗаполнено(ТекДанные.Склад), ТекДанные.Склад, Объект.Склад));
	НовыйПараметрПредприятие = Новый ПараметрВыбора("Предприятие",Объект.Предприятие);
	МассивПараметрыВыбора.Добавить(НовыйПараметрДата);   
	МассивПараметрыВыбора.Добавить(НовыйПараметрСчет);
	МассивПараметрыВыбора.Добавить(НовыйПараметрСклад);
	МассивПараметрыВыбора.Добавить(НовыйПараметрПредприятие);
	НовыеПараметры = Новый ФиксированныйМассив(МассивПараметрыВыбора);
	Если ТекДанные.НесколькоСерий Тогда
		СтандартнаяОбработка = Ложь;
		ТекФорма = ПолучитьФорму("Документ.УЧ_КорректировкаПоступления.Форма.ФормаПодбораСерий");
		ТекФорма.Элементы.СерииНоменклатуры.ПодчиненныеЭлементы.СерииНоменклатурыСерияНоменклатуры.ПараметрыВыбора = НовыеПараметры;
		ТекФорма.Номенклатура = ТекДанные.Номенклатура;
		ТекФорма.Количество = ТекДанные.Количество;
		ТекФорма.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
		Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
			Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
				НоваяСтрока = ТекФорма.СерииНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЕсли;
		КонецЦикла;
		ТекФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончанияПодбора", ЭтотОбъект, Новый Структура);
		ТекФорма.ОписаниеОповещенияОЗакрытии = Оп;
		ТекФорма.Открыть();
	Иначе
		Элемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;

КонецПроцедуры 


&НаСервереБезКонтекста
Функция ПоучитьСчетНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА СправочникНоменклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА &Счет41
	               |		ИНАЧЕ СправочникНоменклатура.Счет10
	               |	КОНЕЦ КАК Счет
	               |ИЗ
	               |	Справочник.Номенклатура КАК СправочникНоменклатура
	               |ГДЕ
	               |	СправочникНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();	
	Возврат Выборка.Счет;	
	
КонецФункции



&НаКлиенте
Процедура ВыполнитьПослеОкончанияПодбора(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	МассивУдСерий = Новый Массив;
	Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
		Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
			МассивУдСерий.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекУд Из МассивУдСерий Цикл
		Объект.СерииНоменклатуры.Удалить(ТекУд);
	КонецЦикла;
	
	НовоеКоличество = 0;
	Для каждого ТекСтрока Из Результат.СерииНоменклатуры Цикл
		НоваяСтрока = Объект.СерииНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
		НовоеКоличество = НовоеКоличество + ТекСтрока.Количество; 
		НоваяСтрока.ДатаПроизводства = сабОбщегоНазначенияБУХ.ПолучитьДатуПроизводстваДляСерииНоменклатуры(ТекСтрока.СерияНоменклатуры);

	КонецЦикла;
	
	ТекДанные.Количество = НовоеКоличество; 
	Объект.СерииНоменклатуры.Сортировать("НомерСтрокиРеализации"); 
	
	//ТекДанные = Элементы.Товары.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ТекДанные, Объект.ЦенаВключаетНДС);
	СтавкаЧисло = ПолучитьСтавкуНДСЧислом(ТекДанные.СтавкаНДС);
	ТекДанные.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекДанные.Сумма, Объект.ЦенаВключаетНДС, СтавкаЧисло);

КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.Товары.ТекущиеДанные.НесколькоСерий = Ложь;
	КонецЕсли;  
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
		сабОперОбщегоНазначенияНаКлиенте.ЗаполнитьНомерИсходнойСтрокиДляСерии(Элемент.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыСерияНоменклатурыПриИзменении(Элемент)
	
	//Синхронизация серий
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	сабОперОбщегоНазначенияНаКлиенте.ЗаполнитьТЧСерииПриИзмененииСерииВОсновнойТЧ(ТекущиеДанные,Объект.СерииНоменклатуры);

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСерииИзДокументаПоступленияНаСервере()
	
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") 
		ИЛИ ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.УЧ_КорректировкаПоступления") Тогда
		Запрос = Новый Запрос;
		Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДокументОснованиеТовары.НомерСтроки КАК НомерСтроки,
			|	ДокументОснованиеТовары.Номенклатура КАК Номенклатура,
			|	ДокументОснованиеТовары.СерияНоменклатуры КАК СерияНоменклатуры
			|ИЗ Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК ДокументОснованиеТовары
			|ГДЕ
			|	ДокументОснованиеТовары.Ссылка = &Ссылка";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДокументОснованиеТовары.НомерСтроки КАК НомерСтроки,
			|	ДокументОснованиеТовары.Номенклатура КАК Номенклатура,
			|	ДокументОснованиеТовары.СерияНоменклатуры КАК СерияНоменклатуры
			|ИЗ Документ.УЧ_КорректировкаПоступления.Товары КАК ДокументОснованиеТовары
			|ГДЕ
			|	ДокументОснованиеТовары.Ссылка = &Ссылка";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Ссылка",  Объект.ДокОснование);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Для Каждого СтрокаТЧТоваты Из Объект.Товары Цикл
			Выборка.Сбросить();
			СтрутураДляПоискаСтроки = Новый Структура("НомерСтроки, Номенклатура",СтрокаТЧТоваты.НомерСтроки,СтрокаТЧТоваты.Номенклатура);
			Если Выборка.НайтиСледующий(СтрутураДляПоискаСтроки) Тогда
				СтрокаТЧТоваты.СерияНоменклатуры = 	Выборка.СерияНоменклатуры;
			КонецЕсли;
		КонецЦикла;
		
		Объект.СерииНоменклатуры.Очистить();
		Для Каждого СтрокаТЧСерииНоменклатуры Из Объект.ДокОснование.СерииНоменклатуры Цикл
			НоваяСтрокаТЧСерииНоменклатуры = Объект.СерииНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧСерииНоменклатуры,СтрокаТЧСерииНоменклатуры);
			НоваяСтрокаТЧСерииНоменклатуры.КоличествоДоИзменения = СтрокаТЧСерииНоменклатуры.Количество;
		КонецЦикла;
	КонецЕсли; 
	
	Для Каждого СтрокаТЧТовары Из Объект.Товары Цикл
		МассивСтрокДляКоличества = Объект.СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", СтрокаТЧТовары.Номенклатура, СтрокаТЧТовары.НомерСтроки));
		Если МассивСтрокДляКоличества.Количество() > 1 Тогда
			СтрокаТЧТовары.НесколькоСерий = Истина;
			СтрокаТЧТовары.СерияНоменклатуры = Справочники.СерииНоменклатуры.ПустаяСсылка(); 
		КонецЕсли;
		
		Если СтрокаТЧТовары.Количество <> СтрокаТЧТовары.КоличествоДоИзменения Тогда
			Если МассивСтрокДляКоличества.Количество() > 1 Тогда
			ОбщееКоличествоНесколькихСерий = 0;
			Для Каждого СтрМассиваДляКоличества Из МассивСтрокДляКоличества Цикл 
				ОбщееКоличествоНесколькихСерий = СтрокаТЧТовары.КоличествоДоИзменения;
			КонецЦикла;
			Если СтрокаТЧТовары.Количество > ОбщееКоличествоНесколькихСерий Тогда
				Разница = СтрокаТЧТовары.Количество - ОбщееКоличествоНесколькихСерий;
				МассивСтрокДляКоличества[0].Количество = МассивСтрокДляКоличества[0].Количество + Разница; 
			КонецЕсли;
			Если СтрокаТЧТовары.Количество < ОбщееКоличествоНесколькихСерий Тогда
					Разница = ОбщееКоличествоНесколькихСерий - СтрокаТЧТовары.Количество;
					ИндексМассива = МассивСтрокДляКоличества.ВГраница();
					Пока ИндексМассива >= 0 Цикл
						Если Разница >= МассивСтрокДляКоличества[ИндексМассива].Количество Тогда
							Разница = Разница - МассивСтрокДляКоличества[ИндексМассива].Количество;
							МассивСтрокДляКоличества[ИндексМассива].Количество = 0;
						Иначе 
							МассивСтрокДляКоличества[ИндексМассива].Количество = МассивСтрокДляКоличества[ИндексМассива].Количество - Разница;
							Прервать;
						КонецЕсли;
						ИндексМассива = ИндексМассива - 1; 
					КонецЦикла; 
				КонецЕсли; 
		ИначеЕсли МассивСтрокДляКоличества.Количество() = 1 Тогда
			МассивСтрокДляКоличества[0].Количество = СтрокаТЧТовары.Количество;
		КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	          
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСерииИзДокументаПоступления(Команда)
	
	ЕстьЗаполненныеСерии = Ложь;
	Для каждого СтрокаТЧТовары Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТЧТовары.СерияНоменклатуры) Тогда
			ЕстьЗаполненныеСерии = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьЗаполненныеСерии Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеОтветаЗаполненныеСерии",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,"В табличной части есть заполненные серии. Заполненные серии будут очищены. Продолжить?",РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ЗаполнитьСерииИзДокументаПоступленияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеОтветаЗаполненныеСерии(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСерииИзДокументаПоступленияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

//&НаКлиенте
//Процедура ТоварыПередНачаломИзменения(Элемент, Отказ)
//	
//		Если Элемент.ТекущийЭлемент.Имя = "ТоварыКоличество" И Элементы.Товары.ТекущиеДанные.НесколькоСерий Тогда	
//			ТекДанные = Элементы.Товары.ТекущиеДанные;
//			Если ТекДанные.НесколькоСерий Тогда
//				Отказ = Истина;
//				МассивПараметрыВыбора = Новый Массив;
//				НовыйПараметрДата = Новый ПараметрВыбора("ДатаОтгрузки",Объект.Дата);
//				НовыйПараметрСчет = Новый ПараметрВыбора("Счет",ПоучитьСчетНоменклатуры(ТекДанные.Номенклатура));  
//				НовыйПараметрСклад = Новый ПараметрВыбора("Склад",?(ЗначениеЗаполнено(ТекДанные.Склад), ТекДанные.Склад, Объект.Склад));
//				НовыйПараметрПредприятие = Новый ПараметрВыбора("Предприятие",Объект.Предприятие);
//				МассивПараметрыВыбора.Добавить(НовыйПараметрДата);   
//				МассивПараметрыВыбора.Добавить(НовыйПараметрСчет);
//				МассивПараметрыВыбора.Добавить(НовыйПараметрСклад);
//				МассивПараметрыВыбора.Добавить(НовыйПараметрПредприятие);
//				НовыеПараметры = Новый ФиксированныйМассив(МассивПараметрыВыбора);
//				
//				ТекФорма = ПолучитьФорму("Документ.УЧ_КорректировкаПоступления.Форма.ФормаПодбораСерий");
//				ТекФорма.Элементы.СерииНоменклатуры.ПодчиненныеЭлементы.СерииНоменклатурыСерияНоменклатуры.ПараметрыВыбора = НовыеПараметры;
//				
//				ТекФорма.Номенклатура = ТекДанные.Номенклатура;
//				ТекФорма.Количество = ТекДанные.Количество;
//				ТекФорма.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
//				Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
//					Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
//						НоваяСтрока = ТекФорма.СерииНоменклатуры.Добавить();
//						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
//					КонецЕсли;
//				КонецЦикла;
//				ТекФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
//				Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончанияПодбора", ЭтотОбъект, Новый Структура);
//				ТекФорма.ОписаниеОповещенияОЗакрытии = Оп;
//				ТекФорма.Открыть(); 
//			КонецЕсли;
//		КонецЕсли;
//		
//КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТоварыКоличество" Тогда
		ТекДанные = Элемент.ТекущиеДанные;
		Если ТекДанные.НесколькоСерий Тогда
			МассивПараметрыВыбора = Новый Массив;
			НовыйПараметрДата = Новый ПараметрВыбора("ДатаОтгрузки",Объект.Дата);
			НовыйПараметрСчет = Новый ПараметрВыбора("Счет",ПоучитьСчетНоменклатуры(ТекДанные.Номенклатура));  
			НовыйПараметрСклад = Новый ПараметрВыбора("Склад",?(ЗначениеЗаполнено(ТекДанные.Склад), ТекДанные.Склад, Объект.Склад));
			НовыйПараметрПредприятие = Новый ПараметрВыбора("Предприятие",Объект.Предприятие);
			МассивПараметрыВыбора.Добавить(НовыйПараметрДата);   
			МассивПараметрыВыбора.Добавить(НовыйПараметрСчет);
			МассивПараметрыВыбора.Добавить(НовыйПараметрСклад);
			МассивПараметрыВыбора.Добавить(НовыйПараметрПредприятие);
			НовыеПараметры = Новый ФиксированныйМассив(МассивПараметрыВыбора);
			
			ТекФорма = ПолучитьФорму("Документ.УЧ_КорректировкаПоступления.Форма.ФормаПодбораСерий");
			ТекФорма.Элементы.СерииНоменклатуры.ПодчиненныеЭлементы.СерииНоменклатурыСерияНоменклатуры.ПараметрыВыбора = НовыеПараметры;
			
			ТекФорма.Номенклатура = ТекДанные.Номенклатура;
			ТекФорма.Количество = ТекДанные.Количество;
			ТекФорма.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
			Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
				Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
					НоваяСтрока = ТекФорма.СерииНоменклатуры.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				КонецЕсли;
			КонецЦикла;
			ТекФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончанияПодбора", ЭтотОбъект, Новый Структура);
			ТекФорма.ОписаниеОповещенияОЗакрытии = Оп;
			ТекФорма.Открыть(); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
