&НаСервере
Функция ПроверкаГруппы(ВыбранноеЗначение)

	Возврат ВыбранноеЗначение.ЭтоГруппа;	

КонецФункции // ()

 &НаСервере
 Процедура ДобавитьГруппу(ВыбранноеЗначение)
  Запрос = Новый Запрос;
  Запрос.Текст = "ВЫБРАТЬ
                 |	Пользователи.Ссылка
                 |ИЗ
                 |	Справочник.Пользователи КАК Пользователи
                 |ГДЕ
                 |	Пользователи.Родитель = &Родитель
                 |	И Пользователи.ЭтоГруппа = ЛОЖЬ";
  
  Запрос.УстановитьПараметр("Родитель", ВыбранноеЗначение);
  
  Результат = Запрос.Выполнить();
  Выборка = Результат.Выбрать();
  
  Пока Выборка.Следующий() Цикл
  	НоваяСтрока = Объект.СписокИсполнителей.Добавить();
	НоваяСтрока.Исполнитель = Выборка.Ссылка;  
  КонецЦикла; 
 КонецПроцедуры
 
&НаКлиенте
Процедура СписокИсполнителейИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//Если выбрана группа
	//Если Не ВыбранноеЗначение = Неопределено Тогда
	//	Если ПроверкаГруппы(ВыбранноеЗначение) Тогда
	//		СтандартнаяОбработка = Ложь;
	//		ДобавитьГруппу(ВыбранноеЗначение);			
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, Объект.Стартован);
	ПериодичностьПриИзменении(Неопределено);	
	ОтИмениПриИзменении(Неопределено);
	ИнтервальноеЗаданиеПриИзменении(Неопределено);
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Файлы"));
	Массив.Добавить(Тип("ДокументСсылка.Д_ЗаявкаНаОплату"));
	Массив.Добавить(Тип("ДокументСсылка.Д_СлужебнаяЗаписка"));
	Если Массив.Найти(ТипЗнч(Объект.Документ)) = Неопределено Тогда
		Массив.Добавить(ТипЗнч(Объект.Документ));
	КонецЕсли;
	
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив);
	
	Элементы.Заявка.ОграничениеТипа = ОписаниеТиповЧ;

КонецПроцедуры

&НаКлиенте
Процедура ДляВсехИсполнителей(Команда)
	Для каждого ТекСтрока Из Объект.СписокИсполнителей Цикл
		ТекСтрока.СрокИсполнения = Объект.ОбщийСрокИсполнения;	
	КонецЦикла; 
КонецПроцедуры




&НаКлиенте
Процедура ОтправитьИЗакрыть(Команда)
	Если Записать() Тогда
		БюджетныйНаКлиенте.ОтправитьИЗакрытьЗадание(Объект.Стартован, Объект.Завершен, Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;	
	КонецЕсли;
	
	Если Объект.Стартован И ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.Завершен Тогда
		Если Модифицированность Тогда
			Если Вопрос("Вы отредактировали запущенное задание. Исполнители будут оповещены об изменении. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
				МассивИсполнителей = Новый Массив;
				Для каждого ТекСтрока Из Объект.СписокИсполнителей Цикл
					МассивИсполнителей.Добавить(ТекСтрока.Исполнитель);
				КонецЦикла;
				БПСервер.СоздатьОповещение(МассивИсполнителей, "Задание " + Строка(Объект.Ссылка) + " было скорректировано пользователем " + Строка(БюджетныйНаСервере.ПолучитьПользователя()), "Прочитать сррбщение", Объект.Ссылка,Истина,,"Задание скорректировано",Новый Структура("ИсторияИзмененийОбъекта", Истина) );
			Иначе
				Отказ = Истина;
			КонецЕсли;		
		КонецЕсли;
	Иначе
		Для каждого ТекСтрока Из Объект.СписокИсполнителей Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.СрокИсполнения) Тогда
				ТекСтрока.СрокИсполнения = Объект.ОбщийСрокИсполнения;	
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли;
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПодборПользователя(Команда)
	ОткрытьФормумодально("Справочник.Пользователи.ФормаВыбора", Новый Структура("РежимВыбора, РасширенныйПодбор, ЗакрыватьПриВыборе", Истина, Истина, Ложь),Элементы.СписокИсполнителей); 
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДата = ОткрытьФормуМодально("ОбщаяФорма.ФормаВыбораДатыИВремени", Новый Структура("ЗаголовокФормы", "Установить срок исполнения")); 
	Если НЕ ТекДата = Неопределено Тогда
		Объект.ОбщийСрокИсполнения = ТекДата;
		Модифицированность = Истина;
		Для каждого ТекСтрока Из Объект.СписокИсполнителей Цикл
			ТекСтрока.СрокИсполнения = Объект.ОбщийСрокИсполнения;
		КонецЦикла;
		//Если Объект.Стартован Тогда
		//	Предупреждение("Задачи исполнителей будут скорректированы по сроку.");		
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейСрокИсполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДата = ОткрытьФормуМодально("ОбщаяФорма.ФормаВыбораДатыИВремени", Новый Структура("ЗаголовокФормы", "Установить срок исполнения")); 
	Если НЕ ТекДата = Неопределено Тогда
		Элементы.СписокИсполнителей.ТекущиеДанные.СрокИсполнения = ТекДата;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьСписокЗадач");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	Если Объект.Периодичность = "Ежедневно" Тогда
		Элементы.ПараметрПериодичности.Доступность = Истина;
		Элементы.ПараметрПериодичности.Заголовок = "Час";	
		Элементы.ПараметрПериодичности2.Заголовок = "Включая выходные дни";
		Элементы.ПараметрПериодичности2.Видимость = Истина;
	ИначеЕсли Объект.Периодичность = "Еженедельно" Тогда
		Элементы.ПараметрПериодичности.Доступность = Истина;
		Элементы.ПараметрПериодичности.Заголовок = "День недели";
		Элементы.ПараметрПериодичности2.Видимость = Ложь;
	ИначеЕсли Объект.Периодичность = "Ежемесячно" Тогда
		Элементы.ПараметрПериодичности.Доступность = Истина;
		Элементы.ПараметрПериодичности.Заголовок = "День месяца";
		Элементы.ПараметрПериодичности2.Видимость = Ложь;
	ИначеЕсли Объект.Периодичность = "Ежегодно" Тогда
		Элементы.ПараметрПериодичности.Доступность = Истина;
		Элементы.ПараметрПериодичности.Заголовок = "Месяц";
		Элементы.ПараметрПериодичности2.Видимость = Ложь;
	Иначе
		Элементы.ПараметрПериодичности.Доступность = Ложь;
		Элементы.ПараметрПериодичности2.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	//ВозможностьДаватьЗаданияОтИмени = БюджетныйНаСервере.ВернутьРеквизит(ТекПользователь, "ВозможностьДаватьЗаданияОтИмени");
	ВозможностьДаватьЗаданияОтИмени = Ложь;
	Элементы.Группа6.Видимость = ВозможностьДаватьЗаданияОтИмени;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = ТекПользователь;
		Объект.ОтИмени = ТекПользователь;
	КонецЕсли;
	Если Объект.Стартован Тогда
		Если ТекПользователь = Объект.Автор ИЛИ БюджетныйНаСервере.РольАдминаДоступнаСервер() ИЛИ ВозможностьДаватьЗаданияОтИмени Тогда
			Элементы.СписокИсполнителейИсполнено.Видимость = Истина;
			Элементы.СписокИсполнителейКомментарии.Видимость = Истина;
			Элементы.СписокИсполнителейПриложение.Видимость = Истина;
			Элементы.СписокИсполнителейДатаВыполнения.Видимость = Истина;
			//Элементы.СписокИсполнителей.ТолькоПросмотр = Истина;
			Элементы.ФормаДокументБП_ПоручениеОтправить.Заголовок = "Изменить и закрыть";
		Иначе
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
	Иначе
		Элементы.ФормаОтменитьЗадание.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.Группа14.Видимость = Объект.Стартован;
	
	Если Объект.Завершен И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ФормаОтменитьЗадание.Доступность = Ложь;
		Элементы.ФормаДокументБП_ПоручениеОтправить.Доступность = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ИсторияЗадания.Параметры.УстановитьЗначениеПараметра("Объект", Объект.Ссылка);	
	Иначе
		ИсторияЗадания.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено);	
	КонецЕсли;
	//сабОбщегоНазначения.ОбновитьКоличествоПрикрепленныхФайловСервер(ЭтаФорма);
	
	
	Если Параметры.Свойство("Исполнитель") Тогда
		ОтобрСтроки = Объект.СписокИсполнителей.НайтиСтроки(Новый Структура("Исполнитель", Параметры.Исполнитель));
		Для каждого ТекСтрока Из ОтобрСтроки Цикл
			Элементы.СписокИсполнителей.ТекущаяСтрока = Объект.СписокИсполнителей.Индекс(ТекСтрока);		
		КонецЦикла; 
	КонецЕсли;
	
	//если открывает исполнитель
	ИсполнительСтрока = Объект.СписокИсполнителей.НайтиСтроки(Новый Структура("Исполнитель", ТекПользователь));
	Если НЕ (ТекПользователь = Объект.Автор И ВозможностьДаватьЗаданияОтИмени) И ИсполнительСтрока.Количество()  Тогда
		Если ИсполнительСтрока[0].Исполнено Тогда
			Элементы.Декорация1.Заголовок = "Это задание успешно выполнено вами!";
		Иначе
			Элементы.Декорация1.Заголовок = "Вы являетесь исполнителем в данном задании. На текущий момент оно не выполнено. Управление заданиями от исполнителя осуществляется с рабочего стола 1С (раздел ""Текущие задачи"" или ""Мои задания"")";
		КонецЕсли;
	    Элементы.Группа14.Видимость = Истина;
		ЭтаФорма.ТолькоПросмотр = Истина;
		КоманднаяПанель.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтИмениПриИзменении(Элемент)
	ЭтоСД = БюджетныйНаСервере.ВернутьРеквизит(Объект.ОтИмени, "ЭтоГруппа");
	Элементы.Группа7.Видимость = ЭтоСД;
	Если НЕ ЭтоСД И НЕ Элемент = Неопределено Тогда
		Объект.НомерПротоколаСД = "";
		Объект.ДатаПротоколаСД = Дата('00010101000000');	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтИмениНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Спис = Новый СписокЗначений;
	Спис.Добавить(Объект.Автор);
	Спис.Добавить("Другого пользователя...");
	Спис.Добавить("СД...");
	ТекЗнач = ВыбратьИзСписка(Спис, Элементы.ОтИмени);
	Если Не ТекЗнач = Неопределено Тогда
		Если ТекЗнач.Значение = "Другого пользователя..." Тогда
			ТекЭлемент = ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",,Элемент); 
		ИначеЕсли ТекЗнач.Значение = "СД..." Тогда
			СтандартнаяОбработка = Ложь;
			ТекЭлемент = ОткрытьФорму("Справочник.Пользователи.ФормаВыбораГруппы",,Элемент);
		Иначе
			Объект.ОтИмени = Объект.Автор;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытьФормуЗадания" Тогда
		Закрыть();
	//ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
	//	ОбщегоНазначенияКлиентСервер.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИнтервальноеЗаданиеПриИзменении(Элемент)
	Элементы.График.Доступность = Объект.ИнтервальноеЗадание;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.Документ) И ТипЗнч(Объект.Документ) = Тип("СправочникСсылка.Файлы") Тогда
		Если Объект.Документ.ДокументыПоФайлу.Найти(Объект.Ссылка, "ВладелецФайла") = Неопределено Тогда
			ТекФайлОбъект = Объект.Документ.ПолучитьОбъект();
			НоваяСтрока = ТекФайлОбъект.ДокументыПоФайлу.Добавить();	
			НоваяСтрока.ВладелецФайла = Объект.Ссылка;
			ТекФайлОбъект.Записать();
		КонецЕсли;	
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗадание(Команда)
	Если Вопрос("Отменить задания по всем исполнителям?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		ВыполнитьЗадачиПриПринудительномЗавершении();
		Объект.Завершен = Истина;
		Если Записать() Тогда
			Закрыть();	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачиПриПринудительномЗавершении()
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
					   |	Задача.Ссылка
					   |ИЗ
					   |	Справочник.Задача КАК Задача
					   |ГДЕ
					   |	Задача.Заявка = &Заявка";
		
		Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			БПСервер.ВыполнитьЗадачу(Выборка.Ссылка, ,Истина,"Выполнение задания прервано автором");
		КонецЦикла;
	

КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейПередУдалением(Элемент, Отказ)
	Если Объект.Стартован Тогда
		ТекДанные = Элементы.СписокИсполнителей.ТекущиеДанные;
		Если ТекДанные.Исполнено Тогда
			Отказ = Истина;
			Предупреждение("Невозможно удалить исполнителя, т.к. он уже выполнил текущее задание!"); 
		Иначе
			Если НЕ Вопрос("При удалении исполнителя с него симается задание. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
				Отказ = Истина;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтарыйИсполнитель = Элементы.СписокИсполнителей.ТекущиеДанные.Исполнитель;
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейИсполнительПриИзменении(Элемент)
	Если Объект.Стартован И ЗначениеЗаполнено(СтарыйИсполнитель) И НЕ Вопрос("Исполнитель задания будет " + ?(ЗначениеЗаполнено(СтарыйИсполнитель), "заменен", "добавлен к текущему заданию") + ". Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Элементы.СписокИсполнителей.ТекущиеДанные.Исполнитель = СтарыйИсполнитель;
		СтарыйИсполнитель = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейПередНачаломИзменения(Элемент, Отказ)
	ТекДанные = Элементы.СписокИсполнителей.ТекущиеДанные;
	Если Объект.Стартован И ТекДанные.Исполнено Тогда
		Отказ = Истина;
		Предупреждение("Невозможно изменить исполнителя, т.к. он уже выполнил текущее задание!"); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокИсполнителейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Объект.Стартован И НоваяСтрока Тогда
		Если НЕ Вопрос("Исполнитель задания будет добавлен к текущему заданию. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ОтменаРедактирования = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры



