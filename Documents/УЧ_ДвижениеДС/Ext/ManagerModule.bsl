
Процедура Печать(ТабДок, Ссылка) Экспорт
	
	МакетРасходный = ПолучитьМакет("РКО_КО2");
	МакетПриходный = ПолучитьМакет("ПКО_КО1");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УЧ_ДвижениеДС.Ссылка КАК Ссылка,
	|	МАКСИМУМ(УЧ_ДвижениеДС.НомерСтроки) КАК НомерСтроки,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСчет) КАК КорСчет,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто1) КАК КорСубконто1,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто2) КАК КорСубконто2,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто3) КАК КорСубконто3,
	|	СУММА(УЧ_ДвижениеДС.Сумма) КАК Сумма,
	|	МАКСИМУМ(УЧ_ДвижениеДС.Валюта) КАК Валюта,
	|	МАКСИМУМ(УЧ_ДвижениеДС.Курс) КАК Курс,
	|	СУММА(УЧ_ДвижениеДС.ВалСумма) КАК ВалСумма,
	|	МАКСИМУМ(УЧ_ДвижениеДС.Подразделение) КАК Подразделение,
	|	СУММА(УЧ_ДвижениеДС.Количество) КАК Количество,
	|	МАКСИМУМ(УЧ_ДвижениеДС.ФинСтатья) КАК ФинСтатья,
	|	МАКСИМУМ(УЧ_ДвижениеДС.ФинПодразделение) КАК ПодразделениеЦФО,
	|	МАКСИМУМ(УЧ_ДвижениеДС.ТипОплаты) КАК ТипОплаты,
	|	МАКСИМУМ(УЧ_ДвижениеДС.НуженПеревод) КАК НуженПеревод,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА УЧ_ДвижениеДС.ФинЦФО.НаименованиеОрганизацииДляПечати = """"
	|				ТОГДА УЧ_ДвижениеДС.ФинЦФО
	|			ИНАЧЕ УЧ_ДвижениеДС.ФинЦФО.НаименованиеОрганизацииДляПечати
	|		КОНЕЦ) КАК ЦФО,
	|	МАКСИМУМ(УЧ_ДвижениеДС.ОснованиеВНХ) КАК ОснованиеВНХ,
	|	МАКСИМУМ(УЧ_ДвижениеДС.АвтоСтатья) КАК АвтоСтатья,
	|	МАКСИМУМ(УЧ_ДвижениеДС.ГУИДСтроки) КАК ГУИДСтроки,
	|	МАКСИМУМ(УЧ_ДвижениеДС.Обработано) КАК Обработано,
	|	МАКСИМУМ(УЧ_ДвижениеДС.УИДСтрокиЗаявки) КАК УИДСтрокиЗаявки,
	|	СУММА(УЧ_ДвижениеДС.СуммаУслуг) КАК СуммаУслуг,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСчетУслуг) КАК КорСчетУслуг,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконтоУслуг1) КАК КорСубконтоУслуг1,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконтоУслуг2) КАК КорСубконтоУслуг2,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконтоУслуг3) КАК КорСубконтоУслуг3,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСчет791) КАК КорСчет791,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто791) КАК КорСубконто791,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто792) КАК КорСубконто792,
	|	МАКСИМУМ(УЧ_ДвижениеДС.КорСубконто793) КАК КорСубконто793,
	|	СУММА(УЧ_ДвижениеДС.КорВалСумма) КАК КорВалСумма,
	|	МАКСИМУМ(УЧ_ДвижениеДС.Содержание) КАК Содержание,
	|	УЧ_ДвижениеДС.Ссылка.Контрагент КАК Контрагент,
	|	УЧ_ДвижениеДС.Ссылка.Договор КАК Договор,
	|	УЧ_ДвижениеДС.Ссылка.Предприятие.НаименованиеОрганизацииДляПечати КАК НаименованиеОрганизацииДляПечати
	|ИЗ
	|	Документ.УЧ_ДвижениеДС.Проводки КАК УЧ_ДвижениеДС
	|ГДЕ
	|	УЧ_ДвижениеДС.Ссылка В(&Ссылка)
	|	И УЧ_ДвижениеДС.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДвиженияДС.КассовыйОрдер)
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ДвижениеДС.Ссылка,
	|	УЧ_ДвижениеДС.Ссылка.Контрагент,
	|	УЧ_ДвижениеДС.Ссылка.Договор,
	|	УЧ_ДвижениеДС.Ссылка.Предприятие.НаименованиеОрганизацииДляПечати";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если НЕ ПП_Сервер.ЭтоРасходнаяОперация(Выборка.Ссылка.ПриходРасход) Тогда
			ОбластьТабличнаяЧасть1 = МакетПриходный.ПолучитьОбласть("Шапка");
			ОбластьТабличнаяЧасть1.Параметры.СуммаРубКоп            = РубКоп(Выборка.Сумма);
		Иначе
			ОбластьТабличнаяЧасть1 = МакетРасходный.ПолучитьОбласть("Шапка");
			//ОбластьТабличнаяЧасть1.Параметры.Директор				= Выборка.ФизическоеЛицо;
		КонецЕсли;
		
		ОбластьТабличнаяЧасть1.Параметры.Заполнить(Выборка);		
		ОбластьТабличнаяЧасть1.Параметры.Заполнить(Выборка.Ссылка);
		ОбластьТабличнаяЧасть1.Параметры.Предприятие = ?(Выборка.НаименованиеОрганизацииДляПечати = "", ОбластьТабличнаяЧасть1.Параметры.Предприятие, Выборка.НаименованиеОрганизацииДляПечати);
		//ОбластьТабличнаяЧасть1.Параметры.Подразделение 		= ?(ЗначениеЗаполнено(Выборка.ПодразделениеЦФО), " (" + Строка(Выборка.ПодразделениеЦФО) + ")", Строка(Выборка.Подразделение)); 
		ОбластьТабличнаяЧасть1.Параметры.КорСчет				= Выборка.КорСчет;
		ОбластьТабличнаяЧасть1.Параметры.Контрагент				= ?(ЗначениеЗаполнено(Выборка.Контрагент), Выборка.Контрагент, Выборка.КорСубконто1);
		ОбластьТабличнаяЧасть1.Параметры.ДатаДокументаПрописью	= Формат(Выборка.Ссылка.Дата,"ДЛФ=ДД");		
		ОбластьТабличнаяЧасть1.Параметры.СуммаПрописью 			= БюджетныйНаСервере.ФорматироватьСуммуПрописьюПлатежногоДокумента(
		Выборка.Сумма);		
		ТабДок.Вывести(ОбластьТабличнаяЧасть1, Выборка.Уровень());
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	//Если ВидФормы = "ФормаОбъекта" Тогда
	//	СтандартнаяОбработка = Ложь;
	//	Если (РольДоступна("Финансист") ИЛИ РольДоступна("ФинансистБезУчета") ИЛИ РольДоступна("ОФК")) И Не рольдоступна("сабУчетчик") Тогда
	//		ВыбраннаяФорма = "Документ.УЧ_ДвижениеДС.Форма.ФормаДокументаФинансиста";
	//	Иначе
	//		ВыбраннаяФорма = "Документ.УЧ_ДвижениеДС.Форма.ФормаДокумента";
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Функция РубКоп(Сумма)
	
	Руб = Цел(Сумма);
	Коп = Окр(100 *(Сумма - Руб), 0, 1);
	СуммаРубКоп = "" + Руб + " руб. " + Цел(Коп / 10) + (Коп - 10 * Цел(Коп / 10)) + " коп.";
	
	Возврат СуммаРубКоп;
	
КонецФункции

Процедура ПечатьУчет(ТабДок, Ссылка) Экспорт
	
	МакетРасходный = ПолучитьМакет("РКО");
	МакетПриходный = ПолучитьМакет("ПКО");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УЧ_ДвижениеДС.Ссылка КАК Ссылка,
	|	УЧ_ДвижениеДС.ВерсияДанных КАК ВерсияДанных,
	|	УЧ_ДвижениеДС.ПометкаУдаления КАК ПометкаУдаления,
	|	УЧ_ДвижениеДС.Номер КАК Номер,
	|	УЧ_ДвижениеДС.Дата КАК Дата,
	|	УЧ_ДвижениеДС.Проведен КАК Проведен,
	|	УЧ_ДвижениеДС.Предприятие КАК Предприятие,
	|	УЧ_ДвижениеДС.Счет КАК Счет,
	|	УЧ_ДвижениеДС.Подразделение КАК Подразделение,
	|	УЧ_ДвижениеДС.ПриходРасход КАК ВидОперации,
	|	УЧ_ДвижениеДС.Контрагент КАК Контрагент,
	|	УЧ_ДвижениеДС.СуммаДокумента КАК Сумма,
	|	УЧ_ДвижениеДС.Валюта1 КАК Валюта,
	|	УЧ_ДвижениеДС.ВалютнаяСумма1 КАК ВалютнаяСумма,
	|	УЧ_ДвижениеДС.Содержание КАК Описание,
	|	УЧ_ДвижениеДС.Субконто1 КАК Статья,
	|	УЧ_ДвижениеДС.Предприятие.НаименованиеОрганизацииДляПечати КАК НаименованиеОрганизацииДляПечати
	|ИЗ
	|	Документ.УЧ_ДвижениеДС КАК УЧ_ДвижениеДС
	|ГДЕ
	|	УЧ_ДвижениеДС.Ссылка В(&Ссылка)
	|	И УЧ_ДвижениеДС.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДвиженияДС.КассовыйОрдер)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Если ПП_Сервер.ЭтоРасходнаяОперация(Выборка.ВидОперации) Тогда
			Макет = МакетРасходный;
		Иначе
			Макет = МакетПриходный;
		КонецЕсли;
		
		
		ОбластьТабличнаяЧасть1 = Макет.ПолучитьОбласть("ТабличнаяЧасть1");
		ОбластьТабличнаяЧасть1.Параметры.Заполнить(Выборка);
		
		//Если ПустаяСтрока(Выборка.Выдать) Тогда
		//ОбластьТабличнаяЧасть1.Параметры.Заполнить(Выборка);
			ОбластьТабличнаяЧасть1.Параметры.Контрагент2 = Выборка.Контрагент;
		//ИначеЕсли ПустаяСтрока(Выборка.Контрагент) Тогда
		//	ОбластьТабличнаяЧасть1.Параметры.Контрагент2 = Выборка.Выдать;
		//Иначе
		//    ОбластьТабличнаяЧасть1.Параметры.Контрагент2 = Строка(Выборка.Контрагент) + " (" + Строка(Выборка.Выдать) + ")";
		//КонецЕсли;
		ОбластьТабличнаяЧасть1.Параметры.Предприятие = ?(Выборка.НаименованиеОрганизацииДляПечати = "", ОбластьТабличнаяЧасть1.Параметры.Предприятие, Выборка.НаименованиеОрганизацииДляПечати);
		
		ОбластьТабличнаяЧасть1.Параметры.СуммаПрописью = БюджетныйНаСервере.ФорматироватьСуммуПрописьюПлатежногоДокумента(
		Выборка.Сумма,
		Выборка.Валюта
		);
		
		//Если ТипЗнч(Выборка.КорСубконто1) = Тип("СправочникСсылка.Предприятия") Тогда
		//	ОбластьТабличнаяЧасть1.Параметры.ЦФО = Выборка.КорСубконто1;		
		//КонецЕсли;
		
		ТабДок.Вывести(ОбластьТабличнаяЧасть1, Выборка.Уровень());

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
КонецПроцедуры


Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РеквизитыДокумента = БюджетныйНаСервере.ВернутьРеквизиты(Данные.Ссылка, "ВидОперации");
	Если НЕ РеквизитыДокумента = Неопределено И ЗначениеЗаполнено(РеквизитыДокумента.ВидОперации) Тогда
		Представление = Строка(РеквизитыДокумента.ВидОперации) + " " + Строка(Данные.Номер) + " от " + Строка(Данные.Дата);	
	КонецЕсли;
КонецПроцедуры

Функция ПоследнийДокументПоИсточнику(Источник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	УЧ_ДвижениеДС.Ссылка КАК Ссылка,
	               |	УЧ_ДвижениеДС.Дата КАК Дата
	               |ИЗ
	               |	Документ.УЧ_ДвижениеДС КАК УЧ_ДвижениеДС
	               |ГДЕ
	               |	УЧ_ДвижениеДС.Субконто2 = &Источник
	               |	И УЧ_ДвижениеДС.Проведен = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Источник", Источник);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Новый Структура("Ссылка, Дата", Выборка.Ссылка, Выборка.Дата);		
	КонецЦикла;
	
	Возврат Новый Структура("Ссылка, Дата", Документы.УЧ_ДвижениеДС.ПустаяСсылка(), Дата('00010101'));
	
КонецФункции // ()
