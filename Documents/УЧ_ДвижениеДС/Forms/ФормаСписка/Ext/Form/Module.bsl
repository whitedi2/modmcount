
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("Предприятия", ПараметрыСеанса.ДоступныеПредприятия);
	Список.Параметры.УстановитьЗначениеПараметра("РасходныеВидыОпераций", ПП_Сервер.ЭтоРасходнаяОперация());
	Если Параметры.Свойство("ДокОснование") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ДокОснование", Параметры.ДокОснование);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ДокОснование", NULL);
	КонецЕсли;
	
	Если НЕ Элементы.Найти("ФормаГруппа2") = Неопределено Тогда
		Элементы.ФормаГруппа2.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	
	ПредприятияОграничены = ПараметрыСеанса.ОграничиватьПредприятия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьРеализации(Команда)
	
	Для Каждого ДокДвижениеДС Из Элементы.Список.ВыделенныеСтроки Цикл
		ПодобратьРеализацииНаСервере(ДокДвижениеДС);				
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПодобратьРеализацииНаСервере(ДокДвижениеДС)
	
	ДокОбъект = ДокДвижениеДС.ПолучитьОбъект();

	КоличествоСтрок = ДокОбъект.Проводки.Количество();
	
	Для ТекНомер = 1 По КоличествоСтрок Цикл
		СтрокаПроводки = ДокОбъект.Проводки[КоличествоСтрок-ТекНомер];
		
		Если Не СтрокаПроводки.КорСчет = ПланыСчетов.Учетный.Счет6201() И Не СтрокаПроводки.КорСчет = ПланыСчетов.Учетный.Счет6001() Тогда
			Сообщить("Подбор осуществляется только для 62.01 и 60.01");
			Возврат;
		КонецЕсли;
		
		ТекСчет 		= СтрокаПроводки.КорСчет;
		ТекКонтрагент 	= СтрокаПроводки.КорСубконто1;
		ТекДоговор 		= СтрокаПроводки.КорСубконто2;
		СуммаПокрытия 	= СтрокаПроводки.Сумма;
		НомерСтроки 	= СтрокаПроводки.НомерСтроки;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Счет,
		|	УчетныйОбороты.Субконто1,
		|	УчетныйОбороты.Субконто2,
		|	УчетныйОбороты.Субконто3,
		|	УчетныйОбороты.Предприятия,
		|	УчетныйОбороты.Подразделение,
		|	СУММА(УчетныйОбороты.СуммаОборот) КАК СуммаОборот
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(
		|			&Период,
		|			&Период,
		|			Регистратор,
		|			Счет = &Счет,
		|			,
		|			Субконто1 = &Субконто1
		|				И Субконто2 = &Субконто2
		|				И Предприятия = &Предприятие,
		|			,
		|			) КАК УчетныйОбороты
		|ГДЕ
		|	УчетныйОбороты.Регистратор <> &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	УчетныйОбороты.Счет,
		|	УчетныйОбороты.Субконто1,
		|	УчетныйОбороты.Субконто3,
		|	УчетныйОбороты.Предприятия,
		|	УчетныйОбороты.Подразделение,
		|	УчетныйОбороты.Субконто2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетныйОстатки.Счет,
		|	УчетныйОстатки.Субконто1,
		|	УчетныйОстатки.Субконто2,
		|	УчетныйОстатки.Субконто3,
		|	УчетныйОстатки.Предприятия,
		|	УчетныйОстатки.Подразделение,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.Счет = &Счет62
		|			ТОГДА УчетныйОстатки.СуммаОстатокДт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0)
		|		ИНАЧЕ УчетныйОстатки.СуммаОстатокКт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0)
		|	КОНЕЦ КАК СуммаОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Остатки(
		|			&Период,
		|			Счет = &Счет,
		|			,
		|			Субконто1 = &Субконто1
		|				И Субконто2 = &Субконто2
		|				И Предприятия = &Предприятие) КАК УчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
		|		ПО УчетныйОстатки.Счет = ВТ_Обороты.Счет
		|			И УчетныйОстатки.Субконто1 = ВТ_Обороты.Субконто1
		|			И УчетныйОстатки.Субконто2 = ВТ_Обороты.Субконто2
		|			И УчетныйОстатки.Субконто3 = ВТ_Обороты.Субконто3
		|			И УчетныйОстатки.Предприятия = ВТ_Обороты.Предприятия
		|ГДЕ
		|	ВЫБОР
		|			КОГДА УчетныйОстатки.Счет = &Счет62
		|				ТОГДА УчетныйОстатки.СуммаОстатокДт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0)
		|			ИНАЧЕ УчетныйОстатки.СуммаОстатокКт + ЕСТЬNULL(ВТ_Обороты.СуммаОборот, 0)
		|		КОНЕЦ <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	УчетныйОстатки.Субконто3.Дата";
		Запрос.УстановитьПараметр("Период", ДокОбъект.Дата);
		Запрос.УстановитьПараметр("Предприятие", ДокОбъект.Предприятие);
		Запрос.УстановитьПараметр("Регистратор", ДокОбъект.Ссылка);
		Запрос.УстановитьПараметр("Счет", ТекСчет);
		Запрос.УстановитьПараметр("Субконто1", ТекКонтрагент);
		Запрос.УстановитьПараметр("Субконто2", ТекДоговор);
		Запрос.УстановитьПараметр("Счет62", ПланыСчетов.Учетный.Счет6201());
		
		Выборка = Запрос.Выполнить().Выбрать();
		ОбщаяСуммаПоОстатку = 0;
		ПервоначальнаяСтрока = Неопределено;
		Пока Выборка.Следующий() Цикл
			Если ОбщаяСуммаПоОстатку < СуммаПокрытия Тогда
				СуммаОстатокДт = Выборка.СуммаОстатокДт;
				Если СуммаОстатокДт >= СуммаПокрытия Тогда
					Если ПервоначальнаяСтрока = Неопределено Тогда
						СтрокаПроводки.КорСубконто3 = Выборка.Субконто3;
					Иначе
						СтрокаПроводки = ДокОбъект.Проводки.Вставить(НомерСтроки);
						ЗаполнитьЗначенияСвойств(СтрокаПроводки, ПервоначальнаяСтрока);
						СтрокаПроводки.КорСубконто3 = Выборка.Субконто3;
					КонецЕсли;
					СтрокаПроводки.Сумма = СуммаОстатокДт;
				Иначе
					Если ПервоначальнаяСтрока = Неопределено Тогда
						ПервоначальнаяСтрока = СтрокаПроводки;
					Иначе
						СтрокаПроводки = ДокОбъект.Проводки.Вставить(НомерСтроки);
						ЗаполнитьЗначенияСвойств(СтрокаПроводки, ПервоначальнаяСтрока);
					КонецЕсли;
					СтрокаПроводки.КорСубконто3 = Выборка.Субконто3;
					СтрокаПроводки.Сумма = СуммаОстатокДт;
				КонецЕсли;
				ОбщаяСуммаПоОстатку = ОбщаяСуммаПоОстатку + СуммаОстатокДт;
				Если ОбщаяСуммаПоОстатку >= СуммаПокрытия Тогда
					СтрокаПроводки.Сумма = СтрокаПроводки.Сумма - (ОбщаяСуммаПоОстатку - СуммаПокрытия);
					Прервать;
				КонецЕсли;	
			Иначе
				СтрокаПроводки.Сумма = СтрокаПроводки.Сумма - (ОбщаяСуммаПоОстатку - СуммаПокрытия);
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		Если ОбщаяСуммаПоОстатку < СуммаПокрытия Тогда
			СтрокаПроводки = ДокОбъект.Проводки.Вставить(НомерСтроки);
			ЗаполнитьЗначенияСвойств(СтрокаПроводки, ПервоначальнаяСтрока);
			СтрокаПроводки.Сумма = СуммаПокрытия - ОбщаяСуммаПоОстатку;
			СтрокаПроводки.КорСубконто3 = Неопределено;
		КонецЕсли;	
		//Прервать;
	КонецЦикла;	
	
	Если ДокОбъект.Проведен Тогда
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		ДокОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	//Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Приход) Тогда 
	//	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПечать.ПодчиненныеЭлементы.ФормаДокументУЧ_ДвижениеДСПечать.Заголовок = "Печать ПКО";
	//ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Расход) Тогда 
	//	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПечать.ПодчиненныеЭлементы.ФормаДокументУЧ_ДвижениеДСПечать.Заголовок = "Печать РКО";
	//КонецЕсли;
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РасчитатьДанныеПодвала(ТекДанные.Субконто2, ТекДанные.Дата));
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РасчитатьДанныеПодвала(Источник, Дата)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетныйОстаткиИОбороты.Субконто2 КАК Источник,
	|	УчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачало,
	|	УчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонец,
	|	УчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаПриход,
	|	УчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаРасход
	|ИЗ
	|	РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
	|			&Дата1,
	|			&Дата2,
	|			День,
	|			,
	|			Счет В ИЕРАРХИИ (&Счета),
	|			,
	|			Субконто2 В (&Источник)) КАК УчетныйОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата));
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("Счета", УЧ_Сервер.Счета5051());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Стру = Новый Структура("Источник, СуммаНачало, СуммаКонец, СуммаПриход, СуммаРасход", Источник, 0, 0, 0, 0);
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Стру, Выборка);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Стру;
	
КонецФункции // ()

&НаКлиенте
Процедура Создать(Команда)
	ОткрытьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура Поступление(Команда)
	Если Заголовок = "Кассовые ордера" Тогда
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.КассовыйОрдер"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Поступление")) );
	ИначеЕсли Заголовок = "Банковские выписки (ДДС)" Тогда	
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.БанковскаяВыписка"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Поступление")) );
	ИначеЕсли Заголовок = "Взаимозачеты" Тогда
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.Взаимозачет"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Поступление")) );
	Иначе
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", Неопределено, ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Поступление")) );
	КонецЕсли;
	ТекФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура Оплата(Команда)
	Если Заголовок = "Кассовые ордера" Тогда
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.КассовыйОрдер"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Оплата")) );
	ИначеЕсли Заголовок = "Банковские выписки (ДДС)" Тогда	
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.БанковскаяВыписка"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Оплата")) );
	ИначеЕсли Заголовок = "Взаимозачеты" Тогда
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", ПредопределенноеЗначение("Перечисление.ВидыОперацийДвиженияДС.Взаимозачет"), ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Оплата")) );
	Иначе
		ТекФорма = ПолучитьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта", Новый Структура("ВидОперации, ПриходРасход", Неопределено, ПредопределенноеЗначение("Перечисление.ВидыОперацийПлатежноеПоручение.Оплата")) );
	КонецЕсли;
	ТекФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Копирование Тогда
		Отказ = Истина;
		Оплата(Неопределено);
	КонецЕсли;
КонецПроцедуры

