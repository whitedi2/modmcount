/////////////////////////////////////////общие/////////////////////////////////////////////

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	МассивПредставлений = Новый Массив;
	МассивПредставлений.Добавить("");
	МассивПредставлений.Добавить("Январь");
	МассивПредставлений.Добавить("Февраль");
	МассивПредставлений.Добавить("Март");
	МассивПредставлений.Добавить("Апрель");
	МассивПредставлений.Добавить("Май");
	МассивПредставлений.Добавить("Июнь");
	МассивПредставлений.Добавить("Июль");
	МассивПредставлений.Добавить("Август");
	МассивПредставлений.Добавить("Сентябрь");
	МассивПредставлений.Добавить("Октябрь");
	МассивПредставлений.Добавить("Ноябрь");
	МассивПредставлений.Добавить("Декабрь");
	Элементы.Месяц.СписокВыбора.Очистить();
	
	Если НЕ Объект.Сценарий.Пустая() Тогда
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
		ТекДата = ДатаНачала;
		Объект.Дата = ТекДата;
		Пока ТекДата <= ДатаОкончания Цикл
			Элементы.Месяц.СписокВыбора.Добавить(Месяц(ТекДата), МассивПредставлений[Месяц(ТекДата)]);
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		Если НЕ Объект.Месяц Тогда
			Объект.Месяц = Элементы.Месяц.СписокВыбора[0].Значение;
		Иначе
			Объект.Месяц = Объект.Месяц;
		КонецЕсли;
		Элементы.Страницы.Доступность = Истина;
	Иначе
		Элементы.Страницы.Доступность = Ложь;
	КонецЕсли;
	
	//считае месяцы по сценариюДО
	Если Не СценарийДО.Пустая() Тогда
		
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаКонца"));
		ТекДата = ДатаНачала;
		КоличествоМесяцевДо = 0;
		Пока ТекДата <= ДатаОкончания Цикл
			КоличествоМесяцевДо = КоличествоМесяцевДо + 1;
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		Если КоличествоМесяцевДо > Элементы.Месяц.СписокВыбора.Количество() Тогда
			Если Вопрос("Вы изменили сценарий бюджета, при этом ВСЕ данные, по месяцам не входящим в текущий сценарий, будут удалены. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
				УдалитьЛишниеМесяцы();
			Иначе
				Объект.Сценарий = СценарийДО;
				СценарийПриИзменении(0);
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Месяц.СписокВыбора.Вставить(0, 13, "Все",,БиблиотекаКартинок.УстановитьФлажки);
	Объект.Месяц = 13;
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишниеМесяцы()
	Для каждого ТекЭлемент Из Элементы Цикл
		Если Тип(ТекЭлемент) = Тип("ТаблицаФормы") Тогда
			Попытка
				Для ТекСтрока = 0 По Объект[ТекЭлемент.Имя].Количество() - 1 Цикл
					ТекЗначение = Объект[ТекЭлемент.Имя][ТекСтрока];
					Если Элементы.Месяц.СписокВыбора.НайтиПоЗначению(ТекЗначение.Месяц) = Неопределено Тогда
						Объект[ТекЭлемент.Имя].Удалить(ТекЗначение);
						ТекСтрока = -1;
					КонецЕсли;		
				КонецЦикла; 
			Исключение
				
			КонецПопытки;
			
		КонецЕсли;
		
		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТабличныеЧасти()
	Если Объект.Месяц = 13 Тогда
		Элементы.БюджетПродаж.ОтборСтрок = Неопределено;
	Иначе
		СтруктураПоиска = Новый Структура("Месяц", Объект.Месяц);
		ФиксСтруктураПоиска = Новый ФиксированнаяСтруктура(СтруктураПоиска);
		
		Элементы.БюджетПродаж.ОтборСтрок = ФиксСтруктураПоиска;
	КонецЕсли;
	
	//если первый месяц, то отображать остатки на начало в документах
	Если Элементы.Месяц.СписокВыбора.Количество() > 1 Тогда
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СценарийПриИзменении(0);
	МесяцПриИзменении(0);
	
	ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();	
	ГруппаБюджет = БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел");
	
	ЗапретРедактирования = Ложь;
	ЗапретРедактированияБО = Ложь;
	ПараметрыТекущегоБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Объект.Предприятие, Объект.Сценарий);
	
	Если ЗначениеЗаполнено(ПараметрыТекущегоБюджета) Тогда
		ЗапретРедактирования = ПараметрыТекущегоБюджета.ПризнакРедактирования;
		ЗапретРедактированияБО = ПараметрыТекущегоБюджета.ПризнакРедактированияБО;
	КонецЕсли;
	
	Если ЗапретРедактирования И НЕ ГруппаБюджет Тогда
		ЭтаФорма.ТолькоПросмотр = 1;
	ИначеЕсли ЗапретРедактированияБО И ГруппаБюджет Тогда
		ЭтаФорма.ТолькоПросмотр = 1;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = БюджетныйНаСервере.ПолучитьПользователя();
	КонецЕсли;
	
	//ТолькоПросмотр = (БюджетныйНаСервере.РольДоступнаСервер("Коммерсант") ИЛИ Объект.Недоступен);
	ЭтаФорма.КоманднаяПанель.Доступность = (НЕ БюджетныйНаСервере.РольДоступнаСервер("Коммерсант") ИЛИ 1 - Объект.Недоступен);
	Элементы.БюджетПродаж.ТолькоПросмотр = БюджетныйНаСервере.РольДоступнаСервер("Коммерсант") И Объект.Недоступен;
	//ЭтаФорма.Доступность = (НЕ БюджетныйНаСервере.РольДоступнаСервер("Коммерсант") ИЛИ 1 - Объект.Недоступен);
	//Для Каждого ТекСтрока Из Объект.БюджетПродаж Цикл
	//	ТекСтрока.Лимит = СуммаЛимита(ТекСтрока.Контрагент);
	//	ТекСтрока.ЛимитПр = СуммаЛимитаПр(ТекСтрока.Контрагент);
	//КонецЦикла;
	УстановитьДоступностьСтрок();
	ФорматБюджетаПриИзменении(Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ТолькоПросмотр = Объект.Недоступен;
	
	Если ТолькоПросмотр И Модифицированность И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		Сообщить("Бюджет продаж закрыт для редактирования.");
		Отказ = Истина;
		Возврат;	
	КонецЕсли;
	
	Отказ = 1 - ПроверитьЗаполнение();
	Если Элементы.Месяц.СписокВыбора.Количество() > 2 И Модифицированность Тогда
		//Если Вопрос("Документ изменен. Сделать авто-сортировку строк перез записью документа?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		//	СортировкаСтрок();
		//	//ПросчитатьДЗИКЗ();
		//Иначе
		//	Если НЕ Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРеализация Тогда
		//		Отказ = Истина;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
	
		
	
КонецПроцедуры


&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ИзменитьТабличныеЧасти();
	Если Объект.Месяц = 13 Тогда
		ВидимостьМесяца = Истина;
	Иначе
		ВидимостьМесяца = Ложь;
	КонецЕсли;
	//Элементы.Месяц.Доступность = 1 - Объект.ВсеМесяцы;
	//делаем видимыми/неведимыми все поля месяцы
	Элементы.БюджетПродажМесяц.Видимость = ВидимостьМесяца;
КонецПроцедуры


&НаКлиенте
Процедура СценарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СценарийДО = Объект.Сценарий;
КонецПроцедуры




/////////////////////////////////////общие расчетные///////////////////////////////////////////
&НаСервереБезКонтекста
Функция ВернутьСчетПоКоду(КодСчета)
	Возврат ПланыСчетов.Учетный.НайтиПоКоду(КодСчета);
КонецФункции // ()

&НаСервереБезКонтекста
Функция ВернутьЗадолженность(ВидЗадолженности = "Дт")
	Если ВидЗадолженности = "Дт" Тогда
		Возврат Перечисления.Д_ДтКт.Дебет;
	Иначе
		Возврат Перечисления.Д_ДтКт.Кредит;
	КонецЕсли;
КонецФункции // ()

//считаем производимые номенклатуры
&НаКлиенте
Функция ПроизводимыеНоменклатуры()
	МассивНоменклатур = Новый Массив;
	Для каждого ТекСтрока Из Объект.ОбъемПроизводства Цикл
		Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
		КонецЕсли;	
	КонецЦикла;
	Возврат МассивНоменклатур;
КонецФункции // ()

//считаем производимые номенклатуры
&НаКлиенте
Функция РеализуемыеНоменклатуры()
	МассивНоменклатур = Новый Массив;
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
		КонецЕсли;	
	КонецЦикла;
	Возврат МассивНоменклатур;
КонецФункции // ()




//////////////////////////////////////продажи//////////////////////////////////////////////////////
&НаКлиенте
Процедура БюджетПродажМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	ВыбМесяц = ВыбратьИзСписка(СписокМесяцев, Элемент);
	Если НЕ ВыбМесяц = Неопределено Тогда
		Элементы.БюджетПродаж.ТекущиеДанные.Месяц = ВыбМесяц.Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПеречислениеВНХ()
	
	Возврат Перечисления.Д_ВидыКонрагентов.ВНХКонтрагент;	
	
КонецФункции // ()

&НаКлиенте
Процедура БюджетПродажПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = 13 Тогда
		Элементы.БюджетПродаж.ТекущиеДанные.Месяц = Объект.Месяц;	
	КонецЕсли;
	//Объект.БюджетПродаж.Сортировать("Месяц Возр, Предприятие Возр, Номенклатура Возр");
	ПросчитатьДЗИКЗ();
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТЗКлиент()
	ТЗРеализация.Очистить();
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		СтрукрутаПоиска = Новый Структура("Контрагент, Номенклатура, Предприятие, Подразделение", ТекСтрока.Контрагент, ТекСтрока.Номенклатура, ТекСтрока.Предприятие, ТекСтрока.Подразделение);
		ОтобранныеСтроки = ТЗРеализация.НайтиСтроки(СтрукрутаПоиска);
		Если НЕ ОтобранныеСтроки.Количество() Тогда
			НоваяСтрока = ТЗРеализация.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЕсли;	
	КонецЦикла;
	ТЗРеализация.Сортировать("Предприятие Возр, Подразделение Возр, Контрагент Возр, Номенклатура Возр");
КонецПроцедуры

Процедура СвернутьТЗКлиент1()
	ТЗРеализация.Очистить();
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		СтрукрутаПоиска = Новый Структура("Контрагент, Предприятие, Подразделение", ТекСтрока.Контрагент, ТекСтрока.Предприятие, ТекСтрока.Подразделение);
		ОтобранныеСтроки = ТЗРеализация.НайтиСтроки(СтрукрутаПоиска);
		Если НЕ ОтобранныеСтроки.Количество() Тогда
			НоваяСтрока = ТЗРеализация.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЕсли;	
	КонецЦикла;
	ТЗРеализация.Сортировать("Предприятие Возр, Подразделение Возр, Контрагент Возр");
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуммаЛимита(ТекКонтрагент)
	Если ТипЗнч(ТекКонтрагент) = Тип("СправочникСсылка.Контрагенты") Тогда	
		Возврат ТекКонтрагент.МаксКредит;	
	Иначе
		Возврат 0
	КонецЕсли;	
КонецФункции // ()

&НаСервереБезКонтекста
Функция СуммаЛимитаПр(ТекКонтрагент)
	Если ТипЗнч(ТекКонтрагент) = Тип("СправочникСсылка.Контрагенты") Тогда	
		Возврат ТекКонтрагент.МаксКредитПр;	
	Иначе
		Возврат 0
	КонецЕсли;	
КонецФункции // ()

&НаКлиенте
Процедура ПросчитатьДЗИКЗ()
	
	//формируем список контрагентов, присутствующих в документе
	
	СвернутьТЗКлиент();
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекПозиция Из ТЗРеализация Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Контрагент, Номенклатура, Предприятие, Подразделение", Элементы.Месяц.СписокВыбора[1].Значение, ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Предприятие, ТекПозиция.Подразделение);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		ДЗНачало = 0;ДЗНачалоПр = 0; ДЗКонец = 0; ДЗКонецПр = 0; Отгрузка = 0; Оплата = 0;
		КЗНачало = 0; НачисленоКЗ = 0; ОплаченоКЗ = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			ДЗНачало = ДЗНачало + ТекСтрока2.ДЗНачало;	
			ДЗНачалоПр = ДЗНачалоПр + ТекСтрока2.ДЗНачалоПр;
			//
			//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
			//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
			//Иначе
			//	Транспорт = 0;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			//	
			//КонецЕсли;
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз"  Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
			Оплата = Оплата + ТекСтрока2.ПоступлениеДС;
			
			ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ДЗНачало + Отгрузка - Оплата);
			ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ГаситьДЗ, 0, ?(ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата < 0, 0, ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата));
			ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ДЗКонецПр > ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонецПр);
			ДЗКонец = ТекСтрока2.ДЗКонец;
			ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
			
			КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
			
			
			//Начислено = ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт) * ТекСтрока2.Верх / Цена);
			
			
			НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (?(ТекСтрока2.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх /
			ТекСтрока2.Цена);
			ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
			КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			
		КонецЦикла;
		
		
		СтруктураПоиска = Новый Структура("Контрагент, Номенклатура, Предприятие, Подразделение", ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Предприятие, ТекПозиция.Подразделение);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		СчетчикНайденных = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			Если НЕ СчетчикНайденных Тогда
				
				ТекСтрока2.ДЗНачало = ДЗКонец;	
				ТекСтрока2.ДЗНачалоПр = ДЗКонецПр;	
				
				//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
				//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
				//Иначе
				//	Транспорт = 0;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				//	
				//КонецЕсли;
				
				Транспорт =  0;
				Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)"   Тогда
					Транспорт = Транспорт + ТекСтрока2.ЖД;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) ="сверх цены"   И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)"  Тогда
					Транспорт = Транспорт + ТекСтрока2.Авто;
				КонецЕсли;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
					Транспорт = Транспорт + ТекСтрока2.Сопровождение;
				КонецЕсли;
				
				Цена = Цена + Транспорт;
				
				Отгрузка = ТекСтрока2.Количество * Цена;
				Оплата = ТекСтрока2.ПоступлениеДС;
				
				ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ТекСтрока2.ДЗНачало + Отгрузка - Оплата);
				ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ГаситьДЗ, 0, ?(ТекСтрока2.ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ТекСтрока2.ДЗНачало < Оплата, 0, ТекСтрока2.ДЗНачало - Оплата), 0) - Оплата < 0, 0, ТекСтрока2.ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ТекСтрока2.ДЗНачало < Оплата, 0, ТекСтрока2.ДЗНачало - Оплата), 0) - Оплата));
				ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ДЗКонецПр > ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонецПр);
				ДЗКонец = ТекСтрока2.ДЗКонец;
				ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
				
				ТекСтрока2.КЗНачало = КЗКонец;
				НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (?(ТекСтрока2.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх / Цена);
				ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
				КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			Иначе
				ТекСтрока2.ДЗНачало = 0;
				ТекСтрока2.КЗНачало = 0;
			КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПросчитатьДЗИКЗ1()
	
	//формируем список контрагентов, присутствующих в документе
	СвернутьТЗКлиент1();
	
	Для каждого ТекПозиция Из ТЗРеализация Цикл
		РассчитатьБюджетПоМесяцам(ТекПозиция.Контрагент, ТекПозиция.Предприятие, ТекПозиция.Подразделение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьБюджетПоМесяцам(Контрагент, Предприятие, Подразделение, РассчетПоступлений = Ложь)
	
	ВставкаВТекст = "";
	Для Каждого Реквизит Из РеквизитФормыВЗначение("Объект").Метаданные().ТабличныеЧасти.БюджетПродаж.Реквизиты Цикл
		ВставкаВТекст = ВставкаВТекст + "
		|БюджетПродаж." + Реквизит.Имя + ",";
	КонецЦикла;	
	
	ВставкаВТекстВТ = СтрЗаменить(ВставкаВТекст, "БюджетПродаж", "ВТ_БюджетПродаж");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	БюджетПродаж.Месяц,
	|	БюджетПродаж.Контрагент,
	|	БюджетПродаж.НомерСтроки,
	|	БюджетПродаж.Предприятие," + ВставкаВТекст + "
	|	БюджетПродаж.Подразделение
	|ПОМЕСТИТЬ ВТ_БюджетПродаж
	|ИЗ
	|	&БюджетПродаж КАК БюджетПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_БюджетПродаж.Месяц КАК Месяц,
	|	ВТ_БюджетПродаж.Контрагент,
	|	ВТ_БюджетПродаж.НомерСтроки,
	|	ВТ_БюджетПродаж.Предприятие," + ВставкаВТекстВТ + "
	|	ВТ_БюджетПродаж.Подразделение
	|ИЗ
	|	ВТ_БюджетПродаж КАК ВТ_БюджетПродаж
	|ГДЕ
	|	ВТ_БюджетПродаж.Контрагент = &Контрагент
	|	И ВТ_БюджетПродаж.Предприятие = &Предприятие
	|	И ВТ_БюджетПродаж.Подразделение = &Подразделение
	|УПОРЯДОЧИТЬ ПО
	|	Месяц
	|ИТОГИ ПО
	|	Месяц";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("БюджетПродаж", Объект.БюджетПродаж.Выгрузить());
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);    
	
	ДЗНачало = 0;ДЗНачалоПр = 0; ДЗКонец = 0; ДЗКонецПр = 0; Отгрузка = 0; Оплата = 0;
	КЗНачало = 0; НачисленоКЗ = 0; ОплаченоКЗ = 0;
	Пока Выборка.Следующий() Цикл
		
		СчетчикНайденных = 0; Отгрузка = 0;
		
		Если Выборка.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
			ТекСтрока2 = Выборка.Выбрать();
			Пока ТекСтрока2.Следующий() Цикл
				СтрокаБюджетаКонтрагенты = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("ГуидСтроки", ТекСтрока2.ГуидСтрокиБюджетаКонтрагенты))[0];
				
				ДЗНачало = СтрокаБюджетаКонтрагенты.ДЗНачало;	
				ДЗНачалоПр = СтрокаБюджетаКонтрагенты.ДЗНачалоПр;
				
				Транспорт =  0;
				Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
					Транспорт = Транспорт + ТекСтрока2.ЖД;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
					Транспорт = Транспорт + ТекСтрока2.Авто;
				КонецЕсли;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз"  Тогда
					Транспорт = Транспорт + ТекСтрока2.Сопровождение;
				КонецЕсли;
				
				Цена = Цена + Транспорт;
				
				Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
				
				Если Не РассчетПоступлений Тогда
					Оплата = СтрокаБюджетаКонтрагенты.ПоступлениеДС;
					КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
					НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (?(СтрокаБюджетаКонтрагенты.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, СтрокаБюджетаКонтрагенты.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх /
					ТекСтрока2.Цена);
					ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
					КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;	
				КонецЕсли;
			КонецЦикла;   
			
			Если РассчетПоступлений Тогда
				Лимит = Отгрузка * СтрокаБюджетаКонтрагенты.Отсрочка / 30;
				СтрокаБюджетаКонтрагенты.ПоступлениеДС = ?(СтрокаБюджетаКонтрагенты.ДЗНачало + Отгрузка - Лимит < 0, 0, СтрокаБюджетаКонтрагенты.ДЗНачало + Отгрузка - Лимит);
				СтрокаБюджетаКонтрагенты.ИзменениеПоступления = Ложь;
				ТекСтрока2 = Выборка.Выбрать();
				Отгрузка = 0;
				Пока ТекСтрока2.Следующий() Цикл
					ДЗНачало = СтрокаБюджетаКонтрагенты.ДЗНачало;	
					ДЗНачалоПр = СтрокаБюджетаКонтрагенты.ДЗНачалоПр;
					
					Транспорт =  0;
					Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
					
					Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
						Транспорт = Транспорт + ТекСтрока2.ЖД;
					КонецЕсли;
					Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
						Транспорт = Транспорт + ТекСтрока2.Авто;
					КонецЕсли;
					
					Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз"  Тогда
						Транспорт = Транспорт + ТекСтрока2.Сопровождение;
					КонецЕсли;
					
					Цена = Цена + Транспорт;
					
					Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
					
					Оплата = СтрокаБюджетаКонтрагенты.ПоступлениеДС;
					
					КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
					НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (?(СтрокаБюджетаКонтрагенты.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, СтрокаБюджетаКонтрагенты.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх /
					ТекСтрока2.Цена);
					ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
					КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;	
				КонецЦикла;
			КонецЕсли;
			
			СтрокаБюджетаКонтрагенты.Отгрузка = Отгрузка;
			СтрокаБюджетаКонтрагенты.ДЗКонец = ?(СтрокаБюджетаКонтрагенты.ГаситьДЗ, 0, ДЗНачало + Отгрузка - Оплата);
			СтрокаБюджетаКонтрагенты.ДЗКонецПр = ?(СтрокаБюджетаКонтрагенты.ГаситьДЗ, 0, ?(ДЗНачалоПр + ?(СтрокаБюджетаКонтрагенты.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата < 0, 0, ДЗНачалоПр + ?(СтрокаБюджетаКонтрагенты.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата));
			СтрокаБюджетаКонтрагенты.ДЗКонецПр = ?(СтрокаБюджетаКонтрагенты.ДЗКонецПр > СтрокаБюджетаКонтрагенты.ДЗКонец, СтрокаБюджетаКонтрагенты.ДЗКонец, СтрокаБюджетаКонтрагенты.ДЗКонецПр);
			ДЗКонец = СтрокаБюджетаКонтрагенты.ДЗКонец;
			ДЗКонецПр = СтрокаБюджетаКонтрагенты.ДЗКонецПр;
		Иначе
			ТекСтрока2 = Выборка.Выбрать();
			Пока ТекСтрока2.Следующий() Цикл
				Если НЕ СчетчикНайденных Тогда
					СтрокаБюджетаКонтрагенты 	= Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("ГуидСтроки", ТекСтрока2.ГуидСтрокиБюджетаКонтрагенты))[0];
					СтрокаБюджета 				= Объект.БюджетПродаж[ТекСтрока2.НомерСтроки - 1];
					
					Транспорт =  0;
					Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
					
					Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)"   Тогда
						Транспорт = Транспорт + ТекСтрока2.ЖД;
					КонецЕсли;
					Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) ="сверх цены"   И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)"  Тогда
						Транспорт = Транспорт + ТекСтрока2.Авто;
					КонецЕсли;
					
					Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
						Транспорт = Транспорт + ТекСтрока2.Сопровождение;
					КонецЕсли;
					
					Цена = Цена + Транспорт;
					
					Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
					
					Если Не РассчетПоступлений Тогда
						СтрокаБюджета.КЗНачало = КЗКонец;
						НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (?(СтрокаБюджетаКонтрагенты.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, СтрокаБюджетаКонтрагенты.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх / Цена);
						ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
						КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
					КонецЕсли;
				Иначе
					СтрокаБюджетаКонтрагенты.ДЗНачало = 0;
					ТекСтрока2.КЗНачало = 0;
				КонецЕсли;
			КонецЦикла;
			
			СтрокаБюджетаКонтрагенты.ДЗНачало = ДЗКонец;	
			СтрокаБюджетаКонтрагенты.ДЗНачалоПр = ДЗКонецПр;	
			
			Если РассчетПоступлений Тогда
				Лимит = Отгрузка * СтрокаБюджетаКонтрагенты.Отсрочка / 30;
				ПоступлениеДС = ?(СтрокаБюджетаКонтрагенты.ДЗНачало + Отгрузка - Лимит < 0, 0, СтрокаБюджетаКонтрагенты.ДЗНачало + Отгрузка - Лимит);
				СтрокаБюджетаКонтрагенты.ПоступлениеДС = ПоступлениеДС;
				СтрокаБюджетаКонтрагенты.ИзменениеПоступления = Ложь;
				Отгрузка = 0;
				ТекСтрока2 = Выборка.Выбрать();
				Пока ТекСтрока2.Следующий() Цикл
					Если НЕ СчетчикНайденных Тогда
						СтрокаБюджетаКонтрагенты = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("ГуидСтроки", ТекСтрока2.ГуидСтрокиБюджетаКонтрагенты))[0];
						
						Транспорт =  0;
						Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
						
						Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"   И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)"   Тогда
							Транспорт = Транспорт + ТекСтрока2.ЖД;
						КонецЕсли;
						Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) ="сверх цены"   И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)"  Тогда
							Транспорт = Транспорт + ТекСтрока2.Авто;
						КонецЕсли;
						
						Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
							Транспорт = Транспорт + ТекСтрока2.Сопровождение;
						КонецЕсли;
						
						Цена = Цена + Транспорт;
						
						Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
						
						СтрокаБюджета = Объект.БюджетПродаж[ТекСтрока2.НомерСтроки - 1];
						СтрокаБюджета.КЗНачало = КЗКонец;
						НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (?(СтрокаБюджетаКонтрагенты.ПоступлениеДС > Транспорт * ТекСтрока2.Количество, СтрокаБюджетаКонтрагенты.ПоступлениеДС - Транспорт * ТекСтрока2.Количество, 0)) * ТекСтрока2.Верх / Цена);
						ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
						КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
					Иначе
						СтрокаБюджетаКонтрагенты.ДЗНачало = 0;
						ТекСтрока2.КЗНачало = 0;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Оплата = СтрокаБюджетаКонтрагенты.ПоступлениеДС;
			СтрокаБюджетаКонтрагенты.Отгрузка = Отгрузка;
			ДЗНачалоРасчет = СтрокаБюджетаКонтрагенты.ДЗНачало;
			СтрокаБюджетаКонтрагенты.ДЗКонец = ?(СтрокаБюджетаКонтрагенты.ГаситьДЗ, 0, ДЗНачалоРасчет + Отгрузка - Оплата);
			СтрокаБюджетаКонтрагенты.ДЗКонецПр = ?(СтрокаБюджетаКонтрагенты.ГаситьДЗ, 0, ?(СтрокаБюджетаКонтрагенты.ДЗНачалоПр + ?(СтрокаБюджетаКонтрагенты.Отсрочка <= 30, ?(ДЗНачалоРасчет < Оплата, 0, ДЗНачалоРасчет - Оплата), 0) - Оплата < 0, 0, СтрокаБюджетаКонтрагенты.ДЗНачалоПр + ?(СтрокаБюджетаКонтрагенты.Отсрочка <= 30, ?(ДЗНачалоРасчет < Оплата, 0, ДЗНачалоРасчет - Оплата), 0) - Оплата));
			СтрокаБюджетаКонтрагенты.ДЗКонецПр = ?(СтрокаБюджетаКонтрагенты.ДЗКонецПр > СтрокаБюджетаКонтрагенты.ДЗКонец, СтрокаБюджетаКонтрагенты.ДЗКонец, СтрокаБюджетаКонтрагенты.ДЗКонецПр);
			
			ДЗКонец = СтрокаБюджетаКонтрагенты.ДЗКонец;
			ДЗКонецПр = СтрокаБюджетаКонтрагенты.ДЗКонецПр;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры	


&НаКлиенте
Процедура ЗагрузитьExcel(Команда)
	
	Если Объект.Месяц = 13 Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		Объект,
		"Укажите конкретный месяц для загрузки данных.",
		,
		,
		"Месяц",
		Истина);
		Возврат;	
	КонецЕсли;
	
	
	ПутьКФайлу = БюджетныйНаКлиенте.ВыбратьФайлExcel();	
	Если НЕ ПутьКФайлу = Неопределено Тогда
		Док = ПолучитьCOMОбъект(ПутьКФайлу);
		КоличествоСтраниц = 1;
		
		Для ТекНомер = 1 По КоличествоСтраниц Цикл
			счСтроки = 3;
			Пока СокрЛП(Док.Sheets(ТекНомер).Cells(счСтроки,1).Value) <> "" Цикл	
				
				Контрагент = НайтиКонтрагента(Строка(Док.Sheets(ТекНомер).Cells(счСтроки,1).Value));
				Номенклатура = НайтиНоменклатуру(Док.Sheets(ТекНомер).Cells(счСтроки,2).Value);
				
				Если ПустаяСтрока(Контрагент) Тогда
					Сообщить("Контрагент " + Строка(Док.Sheets(ТекНомер).Cells(счСтроки,1).Value) + " не найден.");
				КонецЕсли;
				
				Если ПустаяСтрока(Номенклатура) Тогда
					Сообщить("Номенклатура " + Строка(Док.Sheets(ТекНомер).Cells(счСтроки,2).Value) + " не найдена");
				КонецЕсли;
				
				
				
				
				
				//добавляем запись в табличную часть
				НоваяСтрока = Объект.БюджетПродаж.Добавить();
				НоваяСтрока.Контрагент = Контрагент;
				НоваяСтрока.Номенклатура = Номенклатура;
				НоваяСтрока.ДЗНачало = Док.Sheets(ТекНомер).Cells(счСтроки,4).Value;
				НоваяСтрока.Количество = Док.Sheets(ТекНомер).Cells(счСтроки,6).Value;
				НоваяСтрока.Цена = Док.Sheets(ТекНомер).Cells(счСтроки,8).Value;
				НоваяСтрока.ЖД = ?(СокрЛП(Строка(Док.Sheets(ТекНомер).Cells(счСтроки,12).Value)) = "", 0, 
				Док.Sheets(ТекНомер).Cells(счСтроки,12).Value);
				НоваяСтрока.Авто = ?(СокрЛП(Строка(Док.Sheets(ТекНомер).Cells(счСтроки,13).Value)) = "", 0,
				Док.Sheets(ТекНомер).Cells(счСтроки,13).Value);
				НоваяСтрока.ВозмещениеТр = Док.Sheets(ТекНомер).Cells(счСтроки,16).Value;	
				НоваяСтрока.ВозмещениеТр = ?(НоваяСтрока.Количество, НоваяСтрока.ВозмещениеТр / НоваяСтрока.Количество, 0);
				НоваяСтрока.Предоплата = Док.Sheets(ТекНомер).Cells(счСтроки,20).Value;
				НоваяСтрока.Отсрочка = Док.Sheets(ТекНомер).Cells(счСтроки,21).Value;
				НоваяСтрока.ПоступлениеДС = Док.Sheets(ТекНомер).Cells(счСтроки,22).Value;
				НоваяСтрока.КЗНачало = Док.Sheets(ТекНомер).Cells(счСтроки,26).Value;
				НоваяСтрока.ЦенаЗакупки = Док.Sheets(ТекНомер).Cells(счСтроки,10).Value;
				НоваяСтрока.Месяц = Объект.Месяц;
				НоваяСтрока.Верх = Док.Sheets(ТекНомер).Cells(счСтроки,9).Value;
				
				счСтроки = счСтроки + 1;
			КонецЦикла;
			
		КонецЦикла;	
		
		//Док.Application.Quit();
		Сообщить("Загрузка успешно выполнена.");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж(Команда)
	ПараметрыФормы = Новый Структура("Сценарий, Предприятие, Дата1, Дата2, ВидимостьШапки, ДЗНачало", Объект.Сценарий, Объект.Предприятие,
	НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата), 0, Ложь);
	
	ОткрытьФорму("Отчет.Д_БюджетПродаж.Форма.ФормаОтчета", ПараметрыФормы)
	
КонецПроцедуры

&НаСервере
Функция НайтиКонтрагента(Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Предприятия.Предприятие В(&Предприятие)
	|	И Контрагенты.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
	Иначе
		УжеСуществует = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	Возврат УжеСуществует;
КонецФункции

&НаСервере
Функция НайтиНоменклатуру(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Предприятие = &Предприятие
	|	И Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Наименование", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
	Иначе
		УжеСуществует = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	Возврат УжеСуществует;
КонецФункции





/////////////////////////////////////////////////отчеты//////////////////////////////////////////////
&НаСервере
Процедура ОбновитьСервер()
	
	
	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//
	//ОтчетБюджетПродаж.Вывести(ОбластьЗаголовок);
	ОтчетБюджетПродаж.Очистить();
	СКД = Документы.Д_БюджетПродажНовый.ПолучитьМакет("Макет");
	СКД.Параметры.Ссылка.Значение = Объект.Ссылка;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, СКД.НастройкиПоУмолчанию,);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ОтчетБюджетПродаж);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	//ОтчетБюджетПродаж.Вывести(ОбластьПодвал);
	//ОтчетБюджетПродаж.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажКонтрагентПриИзменении(Элемент)
	ПолучитьКонтрагентУсловия(Элемент.ТекущиеДанные.Контрагент);
	//Элементы.БюджетПродаж.ТекущиеДанные.Лимит = СуммаЛимита(Элементы.БюджетПродаж.ТекущиеДанные.Контрагент);
	//Элементы.БюджетПродаж.ТекущиеДанные.ЛимитПр = СуммаЛимитаПр(Элементы.БюджетПродаж.ТекущиеДанные.Контрагент);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентУсловия(Договор)
	Если ТипЗнч(Договор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Если Договор.УсловияКонтрагента.Количество() Тогда
			Возврат Новый Структура("ПроцентПредоплаты, Отсрочка", Договор.УсловияКонтрагента[0].ПроцентПредоплаты,
			Договор.УсловияКонтрагента[0].Отсрочка); 			
		КонецЕсли;
	КонецЕсли;
	Возврат Новый Структура("ПроцентПредоплаты, Отсрочка", 0,0);
КонецФункции // ()

&НаКлиенте
Процедура БюджетПродажКонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	Список.Добавить("Контрагенты");
	Список.Добавить("Строка");
	//Список.Добавить("Предприятия (наши заводы)");
	ТекВыбор = Список.ВыбратьЭлемент("Выберите тип данных");
	Если НЕ ТекВыбор = Неопределено Тогда
		Если ТекВыбор.Значение = "Строка" Тогда
			Элемент.ТекущиеДанные.Контрагент = "";
		иначеЕсли ТекВыбор.Значение = "Контрагенты" Тогда
			МассивПП = БюджетныйНаСервере.ПолучитьПредприятия();
			МассивПП.Добавить(Элемент.ТекущиеДанные.Предприятие);
			СтруктураПараметров = Новый Структура("ТекущееПредприятие, ТекущаяСтрока", 
			МассивПП,
			Элемент.ТекущиеДанные.Контрагент);
			ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораБюджет", СтруктураПараметров, Элемент);
		Иначе
			ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора", , Элемент);
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Загружать = ложь;
	
	Если НЕ Объект.ВыполняласьЗагрузка Тогда
		Загружать = Истина;	
	Иначе
		Сообщить("Заполнение документа уже производилось!");
		Если Вопрос("Заполнение документа уже производилось. Заполнить его еще раз?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Загружать = истина;
		КонецЕсли;	
	КонецЕсли;
	
	Если Загружать Тогда
		Если Команда.Имя = "Заполнить" Тогда
			Запрос = "Запрос1";
		Иначе
			Запрос = "Запрос2";
		КонецЕсли;		
		ЗаполнитьСервер(Запрос);
		БюджетПродажПриОкончанииРедактирования(0, 0, 0);
		Объект.ВыполняласьЗагрузка = Истина; 	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер(ТекЗапрос)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Если ТекЗапрос = "Запрос1" Тогда
		
		
		
		Запрос.Текст = "ВЫБРАТЬ
		|	УчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
		|	УчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ДЗНачало,
		|	УчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт КАК КЗНачало,
		|	УчетныйОстаткиИОбороты.Предприятия КАК Предприятие
		|ИЗ
		|	РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПокупателиОсн),
		|			,
		|			Субконто1 В
		|				(ВЫБРАТЬ
		|					Контрагенты.Ссылка
		|				ИЗ
		|					Справочник.Контрагенты КАК Контрагенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							КоммерческиеДиректорыСрезПоследних.Контрагент КАК Контрагент
		|						ИЗ
		|							РегистрСведений.КоммерческиеДиректоры.СрезПоследних(, КоммерческийДиректор В
		|								(ВЫБРАТЬ
		|									Менеджеры.Ссылка
		|								ИЗ
		|									Справочник.Сотрудники КАК Менеджеры
		|								ГДЕ
		|									Менеджеры.Коммерсант = &Автор)) КАК КоммерческиеДиректорыСрезПоследних
		|			
		|						ОБЪЕДИНИТЬ ВСЕ
		|			
		|						ВЫБРАТЬ
		|							ОтветственныеСрезПоследних.Контрагент
		|						ИЗ
		|							РегистрСведений.Ответственные.СрезПоследних(, Ответственный В
		|								(ВЫБРАТЬ
		|									Менеджеры.Ссылка
		|								ИЗ
		|									Справочник.Сотрудники КАК Менеджеры
		|								ГДЕ
		|									Менеджеры.Коммерсант = &Автор)) КАК ОтветственныеСрезПоследних
		|						) КАК ВложенныйЗапрос
		|						ПО
		|							Контрагенты.Ссылка = ВложенныйЗапрос.Контрагент)) КАК УчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
		|				&Дата1,
		|				&Дата2,
		|				,
		|				,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВерхПоОплате),
		|				,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						Контрагенты.Ссылка
		|					ИЗ
		|						Справочник.Контрагенты КАК Контрагенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								КоммерческиеДиректорыСрезПоследних.Контрагент КАК Контрагент
		|							ИЗ
		|								РегистрСведений.КоммерческиеДиректоры.СрезПоследних(, КоммерческийДиректор В
		|									(ВЫБРАТЬ
		|										Менеджеры.Ссылка
		|									ИЗ
		|										Справочник.Сотрудники КАК Менеджеры
		|									ГДЕ
		|										Менеджеры.Коммерсант = &Автор)) КАК КоммерческиеДиректорыСрезПоследних
		|				
		|							ОБЪЕДИНИТЬ ВСЕ
		|				
		|							ВЫБРАТЬ
		|								ОтветственныеСрезПоследних.Контрагент
		|							ИЗ
		|								РегистрСведений.Ответственные.СрезПоследних(, Ответственный В
		|									(ВЫБРАТЬ
		|										Менеджеры.Ссылка
		|									ИЗ
		|										Справочник.Сотрудники КАК Менеджеры
		|									ГДЕ
		|										Менеджеры.Коммерсант = &Автор)) КАК ОтветственныеСрезПоследних
		|							) КАК ВложенныйЗапрос
		|							ПО
		|								Контрагенты.Ссылка = ВложенныйЗапрос.Контрагент)) КАК УчетныйОстаткиИОбороты1
		|		ПО УчетныйОстаткиИОбороты.Субконто1 = УчетныйОстаткиИОбороты1.Субконто1
		|			И УчетныйОстаткиИОбороты.Предприятия = УчетныйОстаткиИОбороты1.Предприятия
		|ГДЕ
		|	((НЕ УчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт = 0)
		|			ИЛИ (НЕ УчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт = 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Предприятие";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(УчетныйОбороты.КорСубконто1) КАК Номенклатура,
		|	ВложенныйЗапрос.Контрагент,
		|	ВложенныйЗапрос.ДЗНачало,
		|	ВложенныйЗапрос.КЗНачало,
		|	ВложенныйЗапрос.Предприятие КАК Предприятие,
		|	МАКСИМУМ(УчетныйОбороты.Субконто2) КАК Договор
		|ИЗ
		|	(ВЫБРАТЬ
		|		УчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
		|		УчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ДЗНачало,
		|		УчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт КАК КЗНачало,
		|		УчетныйОстаткиИОбороты.Предприятия КАК Предприятие
		|	ИЗ
		|		РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
		|				&Дата1,
		|				&Дата2,
		|				,
		|				,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПокупателиОсн),
		|				,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						Контрагенты.Ссылка
		|					ИЗ
		|						Справочник.Контрагенты КАК Контрагенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								КоммерческиеДиректорыСрезПоследних.Контрагент КАК Контрагент,
		|								КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор КАК Ответственный
		|							ИЗ
		|								РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата3, ) КАК КоммерческиеДиректорыСрезПоследних
		|				
		|							ОБЪЕДИНИТЬ ВСЕ
		|				
		|							ВЫБРАТЬ
		|								ОтветственныеСрезПоследних.Контрагент,
		|								ОтветственныеСрезПоследних.Ответственный
		|							ИЗ
		|								РегистрСведений.Ответственные.СрезПоследних(&Дата3, ) КАК ОтветственныеСрезПоследних
		|							) КАК ВложенныйЗапрос
		|							ПО
		|								Контрагенты.Ссылка = ВложенныйЗапрос.Контрагент
		|					ГДЕ
		|						ВложенныйЗапрос.Ответственный В
		|							(ВЫБРАТЬ
		|								Менеджеры.Ссылка
		|							ИЗ
		|								Справочник.Сотрудники КАК Менеджеры
		|							ГДЕ
		|								Менеджеры.Коммерсант = &Автор))) КАК УчетныйОстаткиИОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
		|					&Дата1,
		|					&Дата2,
		|					,
		|					,
		|					Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВерхПоОплате),
		|					,
		|					Субконто1 В
		|						(ВЫБРАТЬ
		|							Контрагенты.Ссылка
		|						ИЗ
		|							Справочник.Контрагенты КАК Контрагенты ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|									КоммерческиеДиректорыСрезПоследних.Контрагент КАК Контрагент,
		|									КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор КАК КоммерческийДиректор
		|								ИЗ
		|									РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата3, ) КАК КоммерческиеДиректорыСрезПоследних
		|					
		|								ОБЪЕДИНИТЬ ВСЕ
		|					
		|								ВЫБРАТЬ
		|									ОтветственныеСрезПоследних.Контрагент,
		|									ОтветственныеСрезПоследних.Ответственный
		|								ИЗ
		|									РегистрСведений.Ответственные.СрезПоследних(&Дата3, ) КАК ОтветственныеСрезПоследних
		|								) КАК ВложенныйЗапрос
		|								ПО
		|									Контрагенты.Ссылка = ВложенныйЗапрос.Контрагент
		|						ГДЕ
		|							ВложенныйЗапрос.КоммерческийДиректор В
		|								(ВЫБРАТЬ
		|									Менеджеры.Ссылка
		|								ИЗ
		|									Справочник.Сотрудники КАК Менеджеры
		|								ГДЕ
		|									Менеджеры.Коммерсант = &Автор))) КАК УчетныйОстаткиИОбороты1
		|			ПО УчетныйОстаткиИОбороты.Субконто1 = УчетныйОстаткиИОбороты1.Субконто1
		|				И УчетныйОстаткиИОбороты.Предприятия = УчетныйОстаткиИОбороты1.Предприятия
		|	ГДЕ
		|		(НЕ УчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт = 0
		|				ИЛИ НЕ УчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт = 0)) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(&Дата1, &Дата2, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПокупателиОсн), , , КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВыручкаОтРеал), ) КАК УчетныйОбороты
		|		ПО ВложенныйЗапрос.Контрагент = УчетныйОбороты.Субконто1
		|			И ВложенныйЗапрос.Предприятие = УчетныйОбороты.Предприятия
		|ГДЕ
		|	(НЕ ВложенныйЗапрос.ДЗНачало = 0
		|			ИЛИ НЕ ВложенныйЗапрос.КЗНачало = 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Контрагент,
		|	ВложенныйЗапрос.ДЗНачало,
		|	ВложенныйЗапрос.КЗНачало,
		|	ВложенныйЗапрос.Предприятие
		|
		|УПОРЯДОЧИТЬ ПО
		|	Предприятие,
		|	Номенклатура";
		
	КонецЕсли;
	
	
	
	Запрос.УстановитьПараметр("Дата1", ТекущаяДата() - 60 * 24 * 60 * 60);
	Запрос.УстановитьПараметр("Дата2", ТекущаяДата());
	Запрос.УстановитьПараметр("Дата3", Объект.Сценарий.ДатаНачала + 24*60*60);
	Запрос.УстановитьПараметр("Автор", Объект.Автор);
	
	Результат = Запрос.Выполнить();
	
	
	//считаем просроченную ДЗ
	
	СписокКонтрагентов = Результат.Выгрузить().ВыгрузитьКолонку("Контрагент");
	СписокПредприятий = Результат.Выгрузить().ВыгрузитьКолонку("Предприятие");
	
	//запрос на остатки
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1 КАК Контрагент,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстатокДт, 0) КАК ДЗИтого,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстатокКт, 0) КАК КЗ,
	|	ОтветственныеСрезПоследних.Ответственный,
	|	УчетныйОстатки.Предприятия,
	|	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор,
	|	УчетныйОстатки.Субконто1.Родитель КАК Родитель,
	|	УчетныйОстатки.Подразделение
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&Дата2,
	|			Счет = &Счет,
	|			,
	|			СценарийПлана = &Сценарий
	|				И Предприятия В ИЕРАРХИИ (&Предприятия)
	|				И Субконто1 В (&Контрагенты)) КАК УчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные.СрезПоследних(&Дата2, ) КАК ОтветственныеСрезПоследних
	|		ПО УчетныйОстатки.Субконто1 = ОтветственныеСрезПоследних.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата2, ) КАК КоммерческиеДиректорыСрезПоследних
	|		ПО УчетныйОстатки.Субконто1 = КоммерческиеДиректорыСрезПоследних.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	
	
	//раскладка фильтра
	
	//Запрос.УстановитьПараметр("Дата1", Дата('20090101'));
	
	МоментКонца = Новый Граница(КонецДня(ТекущаяДата()), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата2", МоментКонца);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Учетный.Счет6201());
	Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Контрагенты", СписокКонтрагентов);
	
	РезультатОстатки = Запрос.Выполнить();
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Контрагенты.Ссылка
	//|ИЗ
	//|	Справочник.Контрагенты КАК Контрагенты
	//|ГДЕ
	//|	Контрагенты.ЭтоГруппа = ИСТИНА
	//|	И Контрагенты.Наименование = &Наименование";
	//
	//Запрос.УстановитьПараметр("Наименование", "СЭПТ");
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//Если Выборка.Следующий() Тогда
	//	СЭПТ = Выборка.Ссылка; 
	//Иначе
	СЭПТ = Неопределено;
	//КонецЕсли;
	
	
	//запрос по операциям(записям)
	НаДату = КонецДня(ТекущаяДата());
	
	Если НаДату > Дата('20110630000000') Тогда
		НужныЛиЗвездочки = Ложь;
	Иначе
		НужныЛиЗвездочки = Истина;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	
	Если НужныЛиЗвездочки Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Сторно)
		|			ТОГДА УчетныйОборотыДтКт.Регистратор.ДокОснование.Дата
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Реализация)
		|					ТОГДА ВЫБОР
		|							КОГДА УчетныйОборотыДтКт.Регистратор.ДатыНеСовпадают = ИСТИНА
		|								ТОГДА УчетныйОборотыДтКт.Регистратор.ДатаОтгрузки
		|							ИНАЧЕ УчетныйОборотыДтКт.Период
		|						КОНЕЦ
		|				ИНАЧЕ УчетныйОборотыДтКт.Период
		|			КОНЕЦ
		|	КОНЕЦ КАК ДатаОтгрузки,
		|	УчетныйОборотыДтКт.СубконтоДт1 КАК Контрагент,
		|	УчетныйОборотыДтКт.СубконтоДт2 КАК Договор,
		|	ЕСТЬNULL(УчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОтгрузки,
		|	ДоговорыКонтрагентов.УсловияКонтрагента.(
		|		Ссылка,
		|		НомерСтроки,
		|		ДоляСуммы,
		|		ПроцентПредоплаты,
		|		Отсрочка
		|	),
		|	ВЫБОР
		|		КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВыручкаОтРеал)
		|			ТОГДА ""Реализация""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.РасходыПоРеал)
		|					ТОГДА ""Транспорт""
		|				ИНАЧЕ ВЫБОР
		|						КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.Вспомогательный)
		|							ТОГДА ""Ввод остатков""
		|						ИНАЧЕ ""Прочее""
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ВидСуммы,
		|	УчетныйОборотыДтКт.Предприятия,
		|	ДоговорыКонтрагентов.ОтсрочкаДоКонцаМесяца,
		|	УчетныйОборотыДтКт.Регистратор,
		|	УчетныйОборотыДтКт.Регистратор.Номер КАК Номер,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Сторно)
		|			ТОГДА УчетныйОборотыДтКт.Регистратор.ДокОснование.Дата
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_РеализацияНовый)
		|					ТОГДА ВЫБОР
		|							КОГДА УчетныйОборотыДтКт.Регистратор.ДатыНеСовпадают = ИСТИНА
		|								ТОГДА УчетныйОборотыДтКт.Регистратор.ДатаОтгрузки
		|							ИНАЧЕ УчетныйОборотыДтКт.Регистратор.Дата
		|						КОНЕЦ
		|				ИНАЧЕ УчетныйОборотыДтКт.Регистратор.Дата
		|			КОНЕЦ
		|	КОНЕЦ КАК Дата,
		|	УчетныйОборотыДтКт.Регистратор.Комментарий КАК Комментарий,
		|	0 КАК Нормальная,
		|	0 КАК Просроченная,
		|	Учетный.Содержание,
		|	ОтветственныеСрезПоследних.Ответственный,
		|	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор,
		|	УчетныйОборотыДтКт.СубконтоДт1.Родитель КАК Родитель,
		|	УчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение,
		|	УчетныйОборотыДтКт.НомерСтроки
		|ИЗ
		|	РегистрБухгалтерии.Учетный.ОборотыДтКт(&Дата1, &Дата2, Запись, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПокупателиОсн), , , , Предприятия В ИЕРАРХИИ (&Предприятия)) КАК УчетныйОборотыДтКт
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО УчетныйОборотыДтКт.СубконтоДт2 = ДоговорыКонтрагентов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный КАК Учетный
		|		ПО УчетныйОборотыДтКт.Регистратор = Учетный.Регистратор
		|			И УчетныйОборотыДтКт.НомерСтроки = Учетный.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные.СрезПоследних(&Дата2, ) КАК ОтветственныеСрезПоследних
		|		ПО УчетныйОборотыДтКт.СубконтоДт1 = ОтветственныеСрезПоследних.Контрагент
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата2, ) КАК КоммерческиеДиректорыСрезПоследних
		|		ПО УчетныйОборотыДтКт.СубконтоДт1 = КоммерческиеДиректорыСрезПоследних.Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОтгрузки УБЫВ";
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Сторно)
		               |			ТОГДА УчетныйОборотыДтКт.Регистратор.ДокОснование.Дата
		               |		ИНАЧЕ ВЫБОР
		               |				КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Реализация)
		               |					ТОГДА ВЫБОР
		               |							КОГДА УчетныйОборотыДтКт.Регистратор.ДатыНеСовпадают = ИСТИНА
		               |								ТОГДА УчетныйОборотыДтКт.Регистратор.ДатаОтгрузки
		               |							ИНАЧЕ УчетныйОборотыДтКт.Период
		               |						КОНЕЦ
		               |				ИНАЧЕ УчетныйОборотыДтКт.Период
		               |			КОНЕЦ
		               |	КОНЕЦ КАК ДатаОтгрузки,
		               |	УчетныйОборотыДтКт.СубконтоДт1 КАК Контрагент,
		               |	УчетныйОборотыДтКт.СубконтоДт2 КАК Договор,
		               |	ЕСТЬNULL(УчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОтгрузки,
		               |	ДоговорыКонтрагентов.УсловияКонтрагента.(
		               |		Ссылка,
		               |		НомерСтроки,
		               |		ДоляСуммы,
		               |		ПроцентПредоплаты,
		               |		Отсрочка
		               |	),
		               |	ВЫБОР
		               |		КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВыручкаОтРеал)
		               |			ТОГДА ""Реализация""
		               |		ИНАЧЕ ВЫБОР
		               |				КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.РасходыПоРеал)
		               |					ТОГДА ""Транспорт""
		               |				ИНАЧЕ ВЫБОР
		               |						КОГДА УчетныйОборотыДтКт.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.Вспомогательный)
		               |							ТОГДА ""Ввод остатков""
		               |						ИНАЧЕ ""Прочее""
		               |					КОНЕЦ
		               |			КОНЕЦ
		               |	КОНЕЦ КАК ВидСуммы,
		               |	УчетныйОборотыДтКт.Предприятия,
		               |	ДоговорыКонтрагентов.ОтсрочкаДоКонцаМесяца,
		               |	УчетныйОборотыДтКт.Регистратор,
		               |	УчетныйОборотыДтКт.Регистратор.Номер КАК Номер,
		               |	ВЫБОР
		               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Сторно)
		               |			ТОГДА УчетныйОборотыДтКт.Регистратор.ДокОснование.Дата
		               |		ИНАЧЕ ВЫБОР
		               |				КОГДА ТИПЗНАЧЕНИЯ(УчетныйОборотыДтКт.Регистратор) = ТИП(Документ.УЧ_Реализация)
		               |					ТОГДА ВЫБОР
		               |							КОГДА УчетныйОборотыДтКт.Регистратор.ДатыНеСовпадают = ИСТИНА
		               |								ТОГДА УчетныйОборотыДтКт.Регистратор.ДатаОтгрузки
		               |							ИНАЧЕ УчетныйОборотыДтКт.Регистратор.Дата
		               |						КОНЕЦ
		               |				ИНАЧЕ УчетныйОборотыДтКт.Регистратор.Дата
		               |			КОНЕЦ
		               |	КОНЕЦ КАК Дата,
		               |	УчетныйОборотыДтКт.Регистратор.Комментарий КАК Комментарий,
		               |	0 КАК Нормальная,
		               |	0 КАК Просроченная,
		               |	"""" КАК Содержание,
		               |	ОтветственныеСрезПоследних.Ответственный,
		               |	КоммерческиеДиректорыСрезПоследних.КоммерческийДиректор,
		               |	УчетныйОборотыДтКт.СубконтоДт1.Родитель КАК Родитель,
		               |	УчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение,
		               |	УчетныйОборотыДтКт.НомерСтроки,
		               |	УчетныйОборотыДтКт.СубконтоКт1 КАК Номенклатура,
		               |	ЕСТЬNULL(ОтсрочкаПоДоговорамСрезПоследних.Отсрочка, 0) КАК Отсрочка
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.ОборотыДтКт(
		               |			&Дата1,
		               |			&Дата2,
		               |			Запись,
		               |			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПокупателиОсн),
		               |			,
		               |			,
		               |			,
		               |			Предприятия В ИЕРАРХИИ (&Предприятия)
		               |				И СубконтоДт1 В (&Контрагенты)) КАК УчетныйОборотыДтКт
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтсрочкаПоДоговорам.СрезПоследних(&Дата2, ) КАК ОтсрочкаПоДоговорамСрезПоследних
		               |			ПО ДоговорыКонтрагентов.Ссылка = ОтсрочкаПоДоговорамСрезПоследних.Договор
		               |		ПО УчетныйОборотыДтКт.СубконтоДт2 = ДоговорыКонтрагентов.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ответственные.СрезПоследних(&Дата2, ) КАК ОтветственныеСрезПоследних
		               |		ПО УчетныйОборотыДтКт.СубконтоДт1 = ОтветственныеСрезПоследних.Контрагент
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоммерческиеДиректоры.СрезПоследних(&Дата2, ) КАК КоммерческиеДиректорыСрезПоследних
		               |		ПО УчетныйОборотыДтКт.СубконтоДт1 = КоммерческиеДиректорыСрезПоследних.Контрагент
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ДатаОтгрузки УБЫВ";
		
		
	КонецЕсли;
	
	
	
	//раскладка фильтра
	
	Запрос.УстановитьПараметр("Дата1", ДобавитьМесяц(ТекущаяДата(), -12));
	Запрос.УстановитьПараметр("Дата2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Учетный.Счет6201());
	Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	Запрос.УстановитьПараметр("Предприятия", СписокПредприятий);
	Запрос.УстановитьПараметр("Контрагенты", СписокКонтрагентов);
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(Массив);
	
	РезультатДвижения = Запрос.Выполнить();
	ВыборкаОтгрузки = РезультатДвижения.Выгрузить();
	
	ДвиженияОтгрузки = ВыборкаОтгрузки.СкопироватьКолонки();
	ДвиженияОтгрузки.Колонки.Добавить("ДатаПросрочки", ОписаниеТиповДата);
	ДвиженияОтгрузки.Колонки.Добавить("ДЗИтого");
	ДвиженияОтгрузки.Колонки.Добавить("КЗ");
	ДвиженияОтгрузки.Колонки.Добавить("Сегодня");
	ДвиженияОтгрузки.Колонки.Добавить("Дни3");
	ДвиженияОтгрузки.Колонки.Добавить("Дни5");
	ДвиженияОтгрузки.Колонки.Добавить("ТрансНормальная");
	ДвиженияОтгрузки.Колонки.Добавить("ТрансПросроченная");
	ДвиженияОтгрузки.Колонки.Добавить("ТрансВсего");
	ДвиженияОтгрузки.Колонки.Добавить("ДатаПервойОплата");
	ДвиженияОтгрузки.Колонки.Добавить("ДатаПервойОтгрузка");
	ДвиженияОтгрузки.Колонки.Добавить("ДалВПроср");
	ДвиженияОтгрузки.Колонки.Добавить("СредняяЦена");
	//ДвиженияОтгрузки.Колонки.Добавить("Ответственный");
	//ДвиженияОтгрузки.Очистить();
	
	
	ВыборкаОстатки = РезультатОстатки.Выгрузить();
	
	
	//обрабатываем условия и дозаполняем таблицу
	Для каждого ТекСтрокаКонтрагент Из ВыборкаОстатки Цикл
		//	
		СтруктураПоиска = Новый Структура("Контрагент, Предприятия, Подразделение", ТекСтрокаКонтрагент.Контрагент, ТекСтрокаКонтрагент.Предприятия, ТекСтрокаКонтрагент.Подразделение);
		ОтобранныеСтроки = ВыборкаОтгрузки.НайтиСтроки(СтруктураПоиска);
		
		
		Для каждого ТекСтрокаДвижения Из ОтобранныеСтроки Цикл
			УсловияКонтрагента = ТекСтрокаДвижения.УсловияКонтрагента;
			СуммаОтгрузки = ТекСтрокаДвижения.СуммаОтгрузки;
			
			СимволНайден = Ложь;
			Если НужныЛиЗвездочки Тогда
				ПозицияПризнака = 0; 
				Пока ПозицияПризнака + 1 <= СтрДлина(ТекСтрокаДвижения.Содержание) Цикл
					Если Сред(ТекСтрокаДвижения.Содержание, ПозицияПризнака, 2) = "**" Тогда
						СимволНайден = Истина;
						Прервать;			
					КонецЕсли;
					ПозицияПризнака = ПозицияПризнака + 1;	
				КонецЦикла;
			КонецЕсли;
			Если СимволНайден Тогда //если найден признак **
				Попытка
					Отсрочка = Число(Сред(ТекСтрокаДвижения.Содержание, ?(ПозицияПризнака, ПозицияПризнака + 2, ПозицияПризнака + 3), СтрДлина(ТекСтрокаДвижения.Содержание) - ПозицияПризнака));									
				Исключение
					Отсрочка = 0;
				КонецПопытки;
				
				НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
				НоваяСтрокаОтгрузки.СуммаОтгрузки = СуммаОтгрузки;
				НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки + Отсрочка * 60 * 60 * 24;
				НоваяСтрокаОтгрузки.Комментарий = Отсрочка;
				
				
			Иначе //если обычные условия
				
				Если Формат(ТекСтрокаДвижения.ДатаОтгрузки, "ДФ=dd.MM.yyyy") = Формат(Дата('20110430000000'), "ДФ=dd.MM.yyyy")  Тогда
					НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
					НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки;
					НоваяСтрокаОтгрузки.Комментарий = "Просрочка на начало";	
					
				Иначе
					Если УсловияКонтрагента.Количество() Тогда //если есть условия
						Если ТекСтрокаДвижения.ВидСуммы = "Прочее" Тогда //прочие начисления на 62.1. условия не нужны
							НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
							НоваяСтрокаОтгрузки.СуммаОтгрузки = СуммаОтгрузки;
							НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки;
							НоваяСтрокаОтгрузки.Комментарий = "Прочее";
						Иначе
							
							
							Для каждого СтрокаУсловия Из УсловияКонтрагента Цикл
								
								НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
								НоваяСтрокаОтгрузки.СуммаОтгрузки = (СтрокаУсловия.ДоляСуммы / 100) * 
								СуммаОтгрузки * (1 - СтрокаУсловия.ПроцентПредоплаты / 100);
								
								Если ТекСтрокаДвижения.ОтсрочкаДоКонцаМесяца Тогда //если динамическая отсрочка до конца месяца
									НоваяСтрокаОтгрузки.ДатаПросрочки = КонецМесяца(ТекСтрокаДвижения.ДатаОтгрузки);
								Иначе	
									НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки + ТекСтрокаДвижения.Отсрочка * 60 * 60 * 24;
								КонецЕсли;
								НоваяСтрокаОтгрузки.Комментарий = ТекСтрокаДвижения.Отсрочка;
								
								
								Если СтрокаУсловия.ПроцентПредоплаты Тогда //если есть процент предоплаты
									НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
									НоваяСтрокаОтгрузки.СуммаОтгрузки = (СтрокаУсловия.ДоляСуммы / 100) * 
									СуммаОтгрузки * (СтрокаУсловия.ПроцентПредоплаты / 100);
									НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки;
									НоваяСтрокаОтгрузки.Комментарий = 0;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					Иначе //если нет условий
						НоваяСтрокаОтгрузки = ДвиженияОтгрузки.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаОтгрузки, ТекСтрокаДвижения);
						НоваяСтрокаОтгрузки.СуммаОтгрузки = СуммаОтгрузки;
						НоваяСтрокаОтгрузки.ДатаПросрочки = ТекСтрокаДвижения.ДатаОтгрузки;
						НоваяСтрокаОтгрузки.Комментарий = "нет условий";
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	
	//упорядочиваем по ДатеПросрочки
	ДвиженияОтгрузки.Сортировать("ДатаПросрочки Убыв, НомерСтроки Возр");
	
	
	Для каждого ТекСтрокаКонтрагент Из ВыборкаОстатки Цикл
		ДЗВсего = ТекСтрокаКонтрагент.ДЗИтого;
		//ДЗВсего2 = ТекСтрокаКонтрагент.КЗ;
		СтруктураПоиска = Новый Структура("Контрагент, Предприятия, Подразделение", ТекСтрокаКонтрагент.Контрагент, ТекСтрокаКонтрагент.Предприятия, ТекСтрокаКонтрагент.Подразделение);
		ОтобранныеСтроки = ДвиженияОтгрузки.НайтиСтроки(СтруктураПоиска);
		//Если ПараметрыОтчета.Расшифровка Тогда
		//	ТабДок.Вывести(ОбластьРасшифровкаШапка);
		//КонецЕсли;
		Если НЕ ДЗВсего Тогда  //если Кредиторка
			НоваяСтрока = ДвиженияОтгрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаКонтрагент);
			Если ТекСтрокаКонтрагент.Родитель = СЭПТ Тогда
				НоваяСтрока.Контрагент = СЭПТ;
			КонецЕсли;
			
			Для каждого ТекСтрокаДвижения Из ОтобранныеСтроки Цикл
				ДвиженияОтгрузки.Удалить(ТекСтрокаДвижения);			
			КонецЦикла;
		Иначе
			Если ОтобранныеСтроки.Количество() Тогда
				ТекПросрДата = Неопределено;
				Для каждого ТекСтрокаДвижения Из ОтобранныеСтроки Цикл
					Если ТекСтрокаДвижения.СуммаОтгрузки = Неопределено Тогда //хз что это
						Продолжить;				
					КонецЕсли;
					//считаем просроченную и нормальную ДЗ
					Если ДЗВсего Тогда
						Если ТекСтрокаДвижения.СуммаОтгрузки > ДЗВсего Тогда
							ТекСтрокаДвижения.СуммаОтгрузки = ДЗВсего;
							ДЗВсего = 0;
							ТекСтрокаДвижения.ДЗИтого = ТекСтрокаДвижения.СуммаОтгрузки;
						Иначе
							ДЗВсего = ДЗВсего - ТекСтрокаДвижения.СуммаОтгрузки;
							ТекСтрокаДвижения.ДЗИтого = ТекСтрокаДвижения.СуммаОтгрузки;
						КонецЕсли;
						
						//нормальная/просроченная
						Если ТекСтрокаДвижения.ДатаПросрочки > НаДату Тогда
							ТекСтрокаДвижения.Нормальная = ТекСтрокаДвижения.СуммаОтгрузки;
						Иначе
							ТекСтрокаДвижения.Просроченная = ТекСтрокаДвижения.СуммаОтгрузки;
							//Если ТекПросрДата = Неопределено Тогда
							ОтобранныеСтроки[0].ДатаПервойОплата = ТекСтрокаДвижения.ДатаПросрочки;
							ОтобранныеСтроки[0].ДатаПервойОтгрузка = ТекСтрокаДвижения.Дата;
							//КонецЕсли;
						КонецЕсли;
						
						//сегодня
						Если Формат(ТекСтрокаДвижения.ДатаПросрочки - 24 * 60 * 60, "ДФ=dd.MM.yyyy") =  Формат(НаДату, "ДФ=dd.MM.yyyy") Тогда
							ТекСтрокаДвижения.Сегодня = ТекСтрокаДвижения.СуммаОтгрузки;				
						КонецЕсли;
						
						//3 дня
						Если КонецДня(ТекСтрокаДвижения.ДатаПросрочки) - 24 * 60 * 60 >=  НаДату И
							КонецДня(ТекСтрокаДвижения.ДатаПросрочки) - 24 * 60 * 60 <=  НаДату + 3 * 24 * 60 * 60 Тогда
							ТекСтрокаДвижения.Дни3 = ТекСтрокаДвижения.СуммаОтгрузки;				
						КонецЕсли;
						
						
						//5 дня
						Если КонецДня(ТекСтрокаДвижения.ДатаПросрочки) - 24 * 60 * 60 >=  НаДату И
							КонецДня(ТекСтрокаДвижения.ДатаПросрочки) - 24 * 60 * 60 <=  НаДату + 5 * 24 * 60 * 60 Тогда
							ТекСтрокаДвижения.Дни5 = ТекСтрокаДвижения.СуммаОтгрузки;				
						КонецЕсли;
						
						Если ТекСтрокаДвижения.Родитель = СЭПТ Тогда
							ТекСтрокаДвижения.Контрагент = СЭПТ;
							
						КонецЕсли;
						
						
					Иначе
						ДвиженияОтгрузки.Удалить(ТекСтрокаДвижения);
					КонецЕсли;
					
					
				КонецЦикла;
				
				
				//если дата отчета > 30.04 + 12 мес
				Если ДЗВсего Тогда
					НоваяСтрока = ДвиженияОтгрузки.Добавить();
					//Если ТекСтрокаКонтрагент.ДЗИтого Тогда
					НоваяСтрока.Комментарий = "> 12 мес. назад";
					//КонецЕсли;
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаКонтрагент);
					НоваяСтрока.ДатаПервойОплата = ДобавитьМесяц(ТекущаяДата(), -12);
					НоваяСтрока.ДатаПервойОтгрузка = ДобавитьМесяц(ТекущаяДата(), -12);
					НоваяСтрока.Просроченная = ДЗВсего;
					НоваяСтрока.ДЗИтого = ДЗВсего;
					НоваяСтрока.ВидСуммы = "Прочее";
					//Если ТекСтрокаКонтрагент.Родитель = СЭПТ Тогда
					//	НоваяСтрока.Контрагент = СЭПТ;			
					//КонецЕсли;
					ДЗВсего = 0;	
				КонецЕсли;
				
				
			Иначе
				НоваяСтрока = ДвиженияОтгрузки.Добавить();
				Если ТекСтрокаКонтрагент.ДЗИтого Тогда
					НоваяСтрока.Комментарий = "Последняя отгрузка > 12 мес. назад";
					НоваяСтрока.ДатаПервойОплата = Дата('20110430000000');
					НоваяСтрока.ДатаПервойОтгрузка = Дата('20110430000000');
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаКонтрагент);
				НоваяСтрока.Просроченная = ТекСтрокаКонтрагент.ДЗИтого;
				//Если ТекСтрокаКонтрагент.Родитель = СЭПТ Тогда
				//	НоваяСтрока.Контрагент = СЭПТ;			
				//КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	//ДвиженияОтгрузки;
	ДвиженияОтгрузки.Свернуть("Контрагент, Предприятия", "ДЗИтого, Просроченная, ТрансПросроченная");
	
	
	
	//заполняем ТЧ
	
	Для каждого ТекМесяц Из Элементы.Месяц.СписокВыбора Цикл
		Если НЕ ТекМесяц.Значение = 13 Тогда
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяСтрока = Объект.БюджетПродаж.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Месяц = ТекМесяц.Значение;
				//НоваяСтрока.ВозмещениеТр = "Сверх цены";
				УсловияКонтрагета = ПолучитьКонтрагентУсловия(Выборка.Договор);
				НоваяСтрока.Предоплата = УсловияКонтрагета.ПроцентПредоплаты;
				НоваяСтрока.Отсрочка = УсловияКонтрагета.Отсрочка;
				
				ОтобраноВПросрочке = ДвиженияОтгрузки.НайтиСтроки(Новый Структура("Контрагент, Предприятия", Выборка.Контрагент, Выборка.Предприятие));
				Если ОтобраноВПросрочке.Количество() Тогда
					НоваяСтрока.ДЗНачалоПр = ОтобраноВПросрочке[0].Просроченная;
				КонецЕсли;
				Если НЕ ТекМесяц = Элементы.Месяц.СписокВыбора[1] Тогда
					НоваяСтрока.ДЗНачало = 0;	
					НоваяСтрока.КЗНачало = 0;
					НоваяСтрока.ДЗНачалоПр = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла; 
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияДС(Команда)
	
	Если Вопрос("Все поступления будут пересчитаны. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет  Тогда
		
		Возврат;	
		
	КонецЕсли;
	
	
	Если Команда.Имя = "ПоступленияДС" Тогда
		КоллекцияСтрок = Объект.БюджетПродаж;
	Иначе
		КоллекцияСтрок = Новый Массив;
		Для каждого ТекСтрока Из Элементы.БюджетПродаж.ВыделенныеСтроки Цикл
			ТекСтрокаОбъект = Объект.БюджетПродаж.НайтиПоИдентификатору(ТекСтрока);
			КоллекцияСтрок.Добавить(ТекСтрокаОбъект);	
		КонецЦикла; 	
	КонецЕсли;
	
	//формируем список контрагентов, присутствующих в документе
	
	СвернутьТЗКлиент();
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекПозиция Из ТЗРеализация Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Контрагент, Номенклатура, Предприятие", Элементы.Месяц.СписокВыбора[1].Значение, ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Предприятие);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		ДЗНачало = 0; ДЗНачалоПр = 0; ДЗКонец = 0; ДЗКонецПр = 0; Отгрузка = 0; Оплата = 0;
		КЗНачало = 0; НачисленоКЗ = 0; ОплаченоКЗ = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			ДЗНачало = ДЗНачало + ТекСтрока2.ДЗНачало;	
			ДЗНачалоПр = ДЗНачалоПр + ТекСтрока2.ДЗНачалоПр;	
			
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
			//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
			//Иначе
			//	Транспорт = 0;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			//	
			//КонецЕсли;
			
			
			Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
			
			Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
			ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
			ТекСтрока2.ИзменениеПоступления = Ложь;
			
			Оплата = Оплата + ТекСтрока2.ПоступлениеДС;
			
			ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ДЗНачало + Отгрузка - Оплата);
			ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ГаситьДЗ, 0, ?(ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата < 0,0,ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ДЗНачало < Оплата, 0, ДЗНачало - Оплата), 0) - Оплата));
			ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ДЗКонецПр > ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонецПр);
			ДЗКонец = ТекСтрока2.ДЗКонец;
			ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
			
			//ЛимитДЗ = СуммаЛимита(ТекСтрока2.Контрагент);
			//ЛимитДЗПр = СуммаЛимитаПр(ТекСтрока2.Контрагент);
			//ТекСтрока2.Лимит = ЛимитДЗ;
			//ТекСтрока2.ЛимитПр = ЛимитДЗПр;
			//
			//От = ТекСтрока2.ДЗКонец - ЛимитДЗ;
			//ОтПр = ТекСтрока2.ДЗКонецПр - ЛимитДЗПр;
			//Если ТекСтрока2.ДЗКонец > ЛимитДЗ Тогда
			//	ТекСтрока2.ДЗКонец = ЛимитДЗ;
			//КонецЕсли;
			//
			//Если ТекСтрока2.ДЗКонецПр > ЛимитДЗПр Тогда
			//	ТекСтрока2.ДЗКонецПр = ЛимитДЗПр;
			//КонецЕсли;
			//ДЗКонец = ТекСтрока2.ДЗКонец; ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
			//Если Макс(От,ОтПр) > 0 Тогда
			//	ТекСтрока2.ПоступлениеДС = ТекСтрока2.ПоступлениеДС + Макс(От,ОтПр);
			//	Оплата = Оплата + Макс(От,ОтПр);
			//КонецЕсли;
			
			
			КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
			
			
			//Начислено = ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт) * ТекСтрока2.Верх / Цена);
			
			
			НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество) * ТекСтрока2.Верх /
			ТекСтрока2.Цена);
			ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
			КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			
		КонецЦикла;
		
		
		СтруктураПоиска = Новый Структура("Контрагент, Номенклатура, Предприятие", ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Предприятие);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		СчетчикНайденных = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			Если НЕ СчетчикНайденных Тогда
				
				ТекСтрока2.ДЗНачало = ДЗКонец;	
				ТекСтрока2.ДЗНачалоПр = ДЗКонецПр;	
				
				Транспорт =  0;
				Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)"  Тогда
					Транспорт = Транспорт + ТекСтрока2.ЖД;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
					Транспорт = Транспорт + ТекСтрока2.Авто;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
					Транспорт = Транспорт + ТекСтрока2.Сопровождение;
				КонецЕсли;
				
				Цена = Цена + Транспорт + ТекСтрока2.Дисконт;
				
				
				//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
				//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
				//Иначе
				//	Транспорт = 0;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				//	
				//КонецЕсли;
				
				Отгрузка = ТекСтрока2.Количество * Цена;
				
				Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
				ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
				ТекСтрока2.ИзменениеПоступления = Ложь;
				
				Оплата = ТекСтрока2.ПоступлениеДС;
				
				ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ТекСтрока2.ДЗНачало + Отгрузка - Оплата);
				ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ГаситьДЗ, 0, ?(ТекСтрока2.ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ТекСтрока2.ДЗНачало < Оплата, 0, ТекСтрока2.ДЗНачало - Оплата), 0) - Оплата < 0,0,ТекСтрока2.ДЗНачалоПр + ?(ТекСтрока2.Отсрочка <= 30, ?(ТекСтрока2.ДЗНачало < Оплата, 0, ТекСтрока2.ДЗНачало - Оплата), 0) - Оплата));
				ТекСтрока2.ДЗКонецПр = ?(ТекСтрока2.ДЗКонецПр > ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонец, ТекСтрока2.ДЗКонецПр);
				ДЗКонец = ТекСтрока2.ДЗКонец;
				ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
				
				//ЛимитДЗ = СуммаЛимита(ТекСтрока2.Контрагент);
				//ЛимитДЗПр = СуммаЛимитаПр(ТекСтрока2.Контрагент);
				//ТекСтрока2.Лимит = ЛимитДЗ;
				//ТекСтрока2.ЛимитПр = ЛимитДЗПр;
				
				//От = ТекСтрока2.ДЗКонец - ЛимитДЗ;
				//ОтПр = ТекСтрока2.ДЗКонецПр - ЛимитДЗПр;
				//Если ТекСтрока2.ДЗКонец > ЛимитДЗ Тогда
				//	ТекСтрока2.ДЗКонец = ЛимитДЗ;
				//КонецЕсли;
				
				//Если ТекСтрока2.ДЗКонецПр > ЛимитДЗПр Тогда
				//	ТекСтрока2.ДЗКонецПр = ЛимитДЗПр;
				//КонецЕсли;
				//ДЗКонец = ТекСтрока2.ДЗКонец; ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
				
				//Если Макс(От,ОтПр) > 0 Тогда
				//	ТекСтрока2.ПоступлениеДС = ТекСтрока2.ПоступлениеДС + Макс(От,ОтПр);
				//	Оплата = Оплата + Макс(От,ОтПр);
				//КонецЕсли;
				
				
				//СчетчикНайденных = СчетчикНайденных + 1;
				
				ТекСтрока2.КЗНачало = КЗКонец;
				НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество) * ТекСтрока2.Верх / Цена);
				ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
				КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			Иначе
				ТекСтрока2.ДЗНачало = 0;
				ТекСтрока2.КЗНачало = 0;
			КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажПоступлениеДСПриИзменении(Элемент)
	Элементы.БюджетПродаж.ТекущиеДанные.ИзменениеПоступления = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РасчетДЗ(Команда)
	Если Вопрос("Будет произведена сотрировка строк по месяцам и предприятиям. Продлолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		СортировкаСтрок();		
		ПросчитатьДЗИКЗ();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СортировкаСтрок()
	ВремТЗ = Объект.БюджетПродаж.Выгрузить();
	ВремТЗ.Сортировать("Месяц Возр, НомерСтроки Возр");
	Объект.БюджетПродаж.Загрузить(ВремТЗ);
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элемент.ТекущиеДанные;
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками4143", Новый Структура("ВыбПредприятие, ВыбПодразделение, ВыбДата", ТекСтрока.Предприятие, ТекСтрока.Подразделение, ТекущаяДата() ), Элемент ); 
	//ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками4143", Новый Структура("ВыбПредприятие, ВыбДата", ТекСтрока.Предприятие, ТекущаяДата() ), Элемент ); 
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	//Если ТекущаяСтраница = Элементы.СтраницаОтчеты Тогда
	//	ОбновитьСервер();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажНоменклатураДоки1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элемент.ТекущиеДанные;
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками4143", Новый Структура("ВыбПредприятие, ВыбДата", ТекСтрока.Доки, ТекущаяДата() ), Элемент ); 
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажПередУдалением(Элемент, Отказ)
	Для каждого ТекСтрока Из Элементы.БюджетПродаж.ВыделенныеСтроки Цикл
		ТекСтрокаОбъект = Объект.БюджетПродаж.НайтиПоИдентификатору(ТекСтрока);
		НоваяСтрокаАрхива = БюджетПродажАрхив.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАрхива, ТекСтрокаОбъект);
		НоваяСтрокаАрхива.НомерТранзакции = НомерТранзакции;
		НоваяСтрокаАрхива.НомерСтрокиСтарый = ТекСтрокаОбъект.НомерСтроки;
	КонецЦикла;
	НомерТранзакции = НомерТранзакции + 1;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьИзменение(Команда)
	Если БюджетПродажАрхив.Количество() Тогда
		ПоследнийНомерТранзакции = БюджетПродажАрхив[БюджетПродажАрхив.Количество() - 1].НомерТранзакции;
		ОтобранныеСтроки = БюджетПродажАрхив.НайтиСтроки(Новый Структура("НомерТранзакции", ПоследнийНомерТранзакции));
		Для каждого НайденнаяСтрока Из ОтобранныеСтроки Цикл
			НоваяСтрока = Объект.БюджетПродаж.Вставить(НайденнаяСтрока.НомерСтрокиСтарый - 1);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
			БюджетПродажАрхив.Удалить(НайденнаяСтрока);
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустойКонтрагент()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();	
	
КонецФункции // ()

&НаКлиенте
Процедура БюджетПродажПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если ПустаяСтрока(Элементы.БюджетПродаж.ТекущиеДанные.Контрагент) Тогда
		Элементы.БюджетПродаж.ТекущиеДанные.Контрагент = ПустойКонтрагент();
		
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	//По заявке Финансист КС
	Если Копирование Тогда
		
		Ответ = Вопрос("Вы уверены, что хотите скопировать строку с номенклатурой """ + Элемент.ТекущиеДанные.Номенклатура + """ на сумму " + Элемент.ТекущиеДанные.ПоступлениеДС, РежимДиалогаВопрос.ДаНет);
		Если Ответ=КодВозвратаДиалога.Нет  Тогда
			
			Отказ = Истина;		
			
		КонецЕсли; 
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиБюджетПродаж(Команда)
	КопироватьСтроки(Элементы.БюджетПродаж, Объект.БюджетПродаж);
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтроки(ЭлТЧ, ТЧ)
	
	ТекСписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	ТекСписокМесяцев.Удалить(0);
	
	СпискоМесяцев = ОткрытьФормуМодально("Документ.Д_БюджетПродажНовый.Форма.ФормаКопированияСтрок", Новый Структура("СписокМесяцев", ТекСписокМесяцев)); 
	Если ТипЗнч(СпискоМесяцев) = Тип("СписокЗначений")  Тогда
		Для каждого ТекМесяц Из СпискоМесяцев Цикл
			Если ТекМесяц.Пометка Тогда
				Для каждого ТекСтрока Из ЭлТЧ.ВыделенныеСтроки Цикл
					НоваяСтрока = ТЧ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЧ.НайтиПоИдентификатору(ТекСтрока));
					НоваяСтрока.Месяц = ТекМесяц.Значение;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажПриАктивизацииСтроки(Элемент)
	//ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(Новый Структура("Месяц", ) 
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКонтрольЛимитов(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	СформироватьЛимитыСервер();
КонецПроцедуры

&НаСервере
Процедура СформироватьЛимитыСервер()
	
	ОтчетКонтрольЛимитов.Очистить();
	СКД = Документы.Д_БюджетПродажНовый.ПолучитьМакет("Макет1");
	СКД.Параметры.Ссылка.Значение = Объект.Ссылка;
	// рег сведений условия контрагента
	СКД.Параметры.Дата.Значение = Объект.Ссылка.Дата;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, СКД.НастройкиПоУмолчанию,);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ОтчетКонтрольЛимитов);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетПоБюджету(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	ОбновитьСервер();
КонецПроцедуры

&НаКлиенте
Процедура СотрироватьСтроки(Команда)
	СортировкаСтрок();
КонецПроцедуры

&НаКлиенте
Процедура РасчетПоступленийПоСтроке(Команда)
	
	Если НЕ Элементы.БюджетПродаж.ТекущиеДанные = Неопределено Тогда
		
		Для каждого ТекСтрока2 Из Элементы.БюджетПродаж.ВыделенныеСтроки Цикл
			
			ТекСтрока2 = Элементы.БюджетПродаж.ТекущиеДанные;
			
			ДЗНачало = ТекСтрока2.ДЗНачало;	
			ДЗНачалоПр = ТекСтрока2.ДЗНачалоПр;	
			
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			Отгрузка = ТекСтрока2.Количество * Цена;
			
			Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
			ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
			ТекСтрока2.ИзменениеПоступления = Ложь;
			
			ПросчитатьДЗИКЗ();
			
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажПредприятиеПриИзменении(Элемент)
	ТекДанные = Элемент.ТекущиеДанные;
	ТекДанные.ИспользоватьПодразделение = БюджетныйНаСервере.ВернутьРеквизит(ТекДанные.Предприятие, "УчетПоПодразделениям");
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьСтрок()

	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		ТекСтрока.ИспользоватьПодразделение = ТекСтрока.Предприятие.УчетПоПодразделениям;	
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьДоступностьСтрок();
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж1ПриАктивизацииСтроки(Элемент)
	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		
		СтруктураОтбора = Новый ФиксированнаяСтруктура("ГуидСтроки", Элемент.ТекущиеДанные.ГуидСтрокиБюджетаКонтрагенты);
		
		Элементы.БюджетПродажКонтрагенты.ОтборСтрок = СтруктураОтбора;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж1ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//По заявке Финансист КС
	Если Копирование Тогда
		
		Ответ = Вопрос("Вы уверены, что хотите скопировать строку с номенклатурой """ + Элемент.ТекущиеДанные.Номенклатура + """ на сумму " + Элемент.ТекущиеДанные.ПоступлениеДС, РежимДиалогаВопрос.ДаНет);
		Если Ответ=КодВозвратаДиалога.Нет  Тогда
			
			Отказ = Истина;		
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж1ПередУдалением(Элемент, Отказ)
	
	Для Каждого ТекСтрока Из Элементы.БюджетПродаж1.ВыделенныеСтроки Цикл
		ТекСтрокаОбъект = Объект.БюджетПродаж.НайтиПоИдентификатору(ТекСтрока);
		НоваяСтрокаАрхива = БюджетПродажАрхив.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАрхива, ТекСтрокаОбъект);
		НоваяСтрокаАрхива.НомерТранзакции = НомерТранзакции;
		НоваяСтрокаАрхива.НомерСтрокиСтарый = ТекСтрокаОбъект.НомерСтроки;
		СтрокиДляУдаления = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("ГуидСтроки", ТекСтрокаОбъект.ГуидСтрокиБюджетаКонтрагенты));
		Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
			СтрокиБюджета = Объект.БюджетПродаж.НайтиСтроки(Новый Структура("ГуидСтрокиБюджетаКонтрагенты", СтрокаДляУдаления.ГуидСтроки));
			Если СтрокиБюджета.Количество() = 0 Тогда
				Объект.БюджетПродажКонтрагенты.Удалить(СтрокаДляУдаления);	
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	НомерТранзакции = НомерТранзакции + 1;
	
	ПросчитатьДЗИКЗ1();
	
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж1ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если ПустаяСтрока(Элементы.БюджетПродаж1.ТекущиеДанные.Контрагент) Тогда
		Элементы.БюджетПродаж1.ТекущиеДанные.Контрагент = ПустойКонтрагент();
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж1ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = 13 Тогда
		Элементы.БюджетПродаж1.ТекущиеДанные.Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.БюджетПродаж.Сортировать("Месяц Возр, Предприятие Возр, Номенклатура Возр");
	
	ДобавитьСтрокиБюджетаПродажКонтрагенты(НоваяСтрока);
	
	ПросчитатьДЗИКЗ1();
	
	ОбновитьОтображениеДанных();
	
	Элементы.БюджетПродажКонтрагенты.Обновить();
	
	
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьСтрокиБюджетаПродажКонтрагенты(НоваяСтрока, СтрокаБюджета = Неопределено)
		
	ТекДанные = ?(СтрокаБюджета = Неопределено, Элементы.БюджетПродаж.ТекущиеДанные, СтрокаБюджета);
	Если НоваяСтрока Тогда
		СтрокиБюджетаПоКонтрагентам = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("Месяц, Контрагент, Предприятие, Подразделение", ТекДанные.Месяц, ТекДанные.Контрагент, ТекДанные.Предприятие, ТекДанные.Подразделение));
		Если СтрокиБюджетаПоКонтрагентам.Количество() = 0 Тогда
			НоваяСтрокаКонтрагенты = Объект.БюджетПродажКонтрагенты.Добавить();
			НоваяСтрокаКонтрагенты.Месяц 			= ТекДанные.Месяц;
			НоваяСтрокаКонтрагенты.Контрагент 		= ТекДанные.Контрагент;
			НоваяСтрокаКонтрагенты.Предприятие 		= ТекДанные.Предприятие;
			НоваяСтрокаКонтрагенты.Подразделение 	= ТекДанные.Подразделение;
			НоваяСтрокаКонтрагенты.ГуидСтроки       = Новый УникальныйИдентификатор;
			ТекДанные.ГуидСтрокиБюджетаКонтрагенты 	= НоваяСтрокаКонтрагенты.ГуидСтроки;	
		Иначе
			ТекДанные.ГуидСтрокиБюджетаКонтрагенты = СтрокиБюджетаПоКонтрагентам[0].ГуидСтроки
		КонецЕсли;
	Иначе
		СтрокиБюджетаПоКонтрагентам = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("Месяц, Контрагент, Предприятие, Подразделение", ТекДанные.Месяц, ТекДанные.Контрагент, ТекДанные.Предприятие, ТекДанные.Подразделение));
		Если СтрокиБюджетаПоКонтрагентам.Количество() = 0 Тогда
			СтрокиДляУдаления = Объект.БюджетПродажКонтрагенты.НайтиСтроки(Новый Структура("ГуидСтроки", ТекДанные.ГуидСтрокиБюджетаКонтрагенты));
			Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
				СтрокиБюджета = Объект.БюджетПродаж.НайтиСтроки(Новый Структура("ГуидСтрокиБюджетаКонтрагенты", СтрокаДляУдаления.ГуидСтроки));
				Если СтрокиБюджета.Количество() = 0 Тогда
					Объект.БюджетПродажКонтрагенты.Удалить(СтрокаДляУдаления);	
				КонецЕсли;	
			КонецЦикла;	
			НоваяСтрокаКонтрагенты = Объект.БюджетПродажКонтрагенты.Добавить();
			НоваяСтрокаКонтрагенты.Месяц 			= ТекДанные.Месяц;
			НоваяСтрокаКонтрагенты.Контрагент 		= ТекДанные.Контрагент;
			НоваяСтрокаКонтрагенты.Предприятие 		= ТекДанные.Предприятие;
			НоваяСтрокаКонтрагенты.Подразделение 	= ТекДанные.Подразделение;
			НоваяСтрокаКонтрагенты.ГуидСтроки       = Новый УникальныйИдентификатор;
			ТекДанные.ГуидСтрокиБюджетаКонтрагенты 	= НоваяСтрокаКонтрагенты.ГуидСтроки;	
		КонецЕсли;	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажКонтрагентыПередУдалением(Элемент, Отказ)
		Отказ = Истина;	

КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажКонтрагентыПередНачаломИзменения(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажКонтрагентыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	ПросчитатьДЗИКЗ1();
	

КонецПроцедуры

&НаКлиенте
Процедура ФорматБюджетаПриИзменении(Элемент)
	Если Объект.ФорматБюджета = "Новый формат" Тогда
		Элементы.Группа4.ТекущаяСтраница = Элементы.Группа6;
	Иначе	
		Элементы.Группа4.ТекущаяСтраница = Элементы.Группа5;
	КонецЕсли;
КонецПроцедуры




















