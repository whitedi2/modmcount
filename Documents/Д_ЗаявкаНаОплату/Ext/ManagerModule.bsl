// {Печать Платежки 
Процедура ПечатьПлатежки(ТабличныйДокумент, МассивЗаявок, ЕстьЧтоПечатать = Ложь) Экспорт
	
	ЭтоЗаявкаНаОплату = ТипЗнч(МассивЗаявок[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование");
	
	Макет = Документы.Д_ЗаявкаНаФинансирование.ПолучитьМакет("ПФ_MXL_ПлатежноеПоручение");
	
	ТабличныйДокумент.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	ВыборкаТЗ = Новый ТаблицаЗначений;
	ВыборкаТЗ.Колонки.Добавить("Ссылка");
	ВыборкаТЗ.Колонки.Добавить("Номер");
	ВыборкаТЗ.Колонки.Добавить("ДатаДокумента");
	ВыборкаТЗ.Колонки.Добавить("ВидПлатежа");//есть и тч
	ВыборкаТЗ.Колонки.Добавить("ИННПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("ИННПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("КодБК");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("КодОКАТО");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("КПППлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("КПППолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("НазначениеПлатежа");//есть
	ВыборкаТЗ.Колонки.Добавить("НазначениеПлатежаБух");//есть
	ВыборкаТЗ.Колонки.Добавить("СтавкаНДС");//есть
	ВыборкаТЗ.Колонки.Добавить("СуммаДДС");//есть
	ВыборкаТЗ.Колонки.Добавить("СуммаНДС");//есть
	ВыборкаТЗ.Колонки.Добавить("Очередность");
	ВыборкаТЗ.Колонки.Добавить("ПоказательДаты");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("ПоказательНомера");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("ПоказательОснования");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("ПоказательПериода");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("ПоказательТипа");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("СтатусСоставителя");//есть в тч
	ВыборкаТЗ.Колонки.Добавить("СуммаДокумента");//есть
	ВыборкаТЗ.Колонки.Добавить("НомерСчетаПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("НаименованиеБанкаПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("НаименованиеБанкаРасчетовПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("ГородБанкаПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("ГородБанкаРасчетовПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("БИКБанкаПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("СчетБанкаПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("СуммаБезКопеек");
	ВыборкаТЗ.Колонки.Добавить("ВалютаДенежныхСредств");
	ВыборкаТЗ.Колонки.Добавить("НомерСчетаПлательщика");
	ВыборкаТЗ.Колонки.Добавить("СчетКонтрагента");
	ВыборкаТЗ.Колонки.Добавить("НаименованиеБанкаПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("НаименованиеБанкаРасчетовПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("ГородБанкаПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("ГородБанкаРасчетовПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("БИКБанкаПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("СчетБанкаПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("ТекстПлательщика");//есть
	ВыборкаТЗ.Колонки.Добавить("ТекстПолучателя");//есть
	ВыборкаТЗ.Колонки.Добавить("ВариантВыводаМесяца");
	ВыборкаТЗ.Колонки.Добавить("ВидОперации");
	ВыборкаТЗ.Колонки.Добавить("УИН");
	ВыборкаТЗ.Колонки.Добавить("КодВидаДохода");
	
	ЕстьЧтоПечатать = Ложь;
	
	Для Каждого Заявка Из МассивЗаявок Цикл  
				
		Если ЭтоЗаявкаНаОплату Тогда
			
			Если НЕ Заявка.ТипИсточника = ПредопределенноеЗначение("Перечисление.Д_ИсточникиСредств.БезНал") Тогда
				Сообщить("Печатная форма недоступна для данного типа платежа. " + Строка(Заявка));
				Продолжить;
			КонецЕсли;
			
			НовыйДокШаблон = Документы.Д_ЗаявкаНаОплату.СоздатьДокумент();
			ЗаявкаЗаявкаБезнал = НовыйДокШаблон.ЗаявкаБезнал.Выгрузить();
			ЗаявкаЗаявкаБезнал.Колонки.Добавить("ДоговорКонтрагента");
			ЗаявкаЗаявкаБезнал.Колонки.Добавить("СуммаДокумента");
			НоваяСтрокаДока = ЗаявкаЗаявкаБезнал.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДока, Заявка);
			//Если ТипЗнч(Заявка.Контрагент) = Тип("СправочникСсылка.Сотрудники") Тогда
			//	НоваяСтрокаДока.ТекстПолучателя	= Заявка.Контрагент;								
			//	НоваяСтрокаДока.ИННПолучателя = Заявка.Контрагент.ФизическоеЛицо.ИНН;			
			//КонецЕсли;
			НоваяСтрокаДока.НазначениеПлатежаБух = Заявка.НазначениеПлатежа;
			НоваяСтрокаДока.НазначениеПлатежа = Заявка.НазначениеПлатежаУчет;
			НоваяСтрокаДока.СуммаДДС = Заявка.Сумма;
			НоваяСтрокаДока.СуммаДокумента = НоваяСтрокаДока.СуммаДДС;
			НоваяСтрокаДока.ДоговорКонтрагента = НоваяСтрокаДока.Договор;
			
			ЕстьЧтоПечатать = Истина;
		Иначе
			ЗаявкаЗаявкаБезнал = Заявка.ЗаявкаБезнал.Выгрузить();
		КонецЕсли;
		
		//Если ТипЗнч(Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
		
		Для Каждого ТекСтрока Из ЗаявкаЗаявкаБезнал Цикл
			
			Если ТекСтрока.ОтменаОплаты ИЛИ Не ТипЗнч(ТекСтрока.Источник) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
				Продолжить;
			КонецЕсли;
			
			ЕстьЧтоПечатать = Истина;
			
			ЗаполнитьВыборкуТЗ(ВыборкаТЗ, ТекСтрока, Истина);
		КонецЦикла;
		
		//Иначе
		//	ЗаполнитьВыборкуТЗ(ВыборкаТЗ, Заявка, Ложь);
		//КонецЕсли;
		
	КонецЦикла;
	
	// СвернемТаблицу
	
	//КолонокиДляГруппировки = Новый Массив;	
	//КолонокиДляГруппировки.Добавить("БИКБанкаПлательщика");
	//КолонокиДляГруппировки.Добавить("БИКБанкаПолучателя");	
	//КолонокиДляГруппировки.Добавить("ВидОперации");	
	//КолонокиДляГруппировки.Добавить("ДатаДокумента");
	//КолонокиДляГруппировки.Добавить("ИННПлательщика");
	//КолонокиДляГруппировки.Добавить("ИННПолучателя");
	//КолонокиДляГруппировки.Добавить("КПППлательщика");
	//КолонокиДляГруппировки.Добавить("КПППолучателя");
	//КолонокиДляГруппировки.Добавить("КодБК");
	//КолонокиДляГруппировки.Добавить("КодОКАТО");	
	//КолонокиДляГруппировки.Добавить("НомерСчетаПлательщика");
	//КолонокиДляГруппировки.Добавить("НомерСчетаПолучателя");
	//КолонокиДляГруппировки.Добавить("ПоказательДаты");
	//КолонокиДляГруппировки.Добавить("ПоказательНомера");
	//КолонокиДляГруппировки.Добавить("ПоказательОснования");
	//КолонокиДляГруппировки.Добавить("ПоказательПериода");
	//КолонокиДляГруппировки.Добавить("ПоказательТипа");
	//КолонокиДляГруппировки.Добавить("СтавкаНДС");
	//КолонокиДляГруппировки.Добавить("СтатусСоставителя");	
	//КолонокиДляГруппировки.Добавить("СчетБанкаПлательщика");
	//КолонокиДляГруппировки.Добавить("СчетБанкаПолучателя");	
	//КолонокиДляГруппировки.Добавить("УИН");
	
	СписокКолонокСуммирования = Новый СписокЗначений;
	СписокКолонокСуммирования.Добавить("СуммаДокумента");
	СписокКолонокСуммирования.Добавить("СуммаБезКопеек");
	СписокКолонокСуммирования.Добавить("СуммаНДС");
	СписокКолонокСуммирования.Добавить("СуммаДДС");
	
	КолонкиСуммирования = "";
	
	Для Каждого КолонкаСуммирования Из СписокКолонокСуммирования Цикл
		КолонкиСуммирования = КолонкиСуммирования + КолонкаСуммирования.Значение + ", ";
	КонецЦикла;	
	
	КолонкиСуммирования = Сред(КолонкиСуммирования, 1, СтрДлина(КолонкиСуммирования) - 2);
	
	КолонкиГруппировок = "";
	
	Для Каждого ТекКолонка Из ВыборкаТЗ.Колонки Цикл
		
		Если СписокКолонокСуммирования.НайтиПоЗначению(ТекКолонка.Имя) = Неопределено Тогда 
			КолонкиГруппировок = КолонкиГруппировок + ТекКолонка.Имя + ", ";
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиГруппировок = Сред(КолонкиГруппировок, 1, СтрДлина(КолонкиГруппировок) - 2);
	ВыборкаТЗ.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		
	Для Каждого ТекСтрока Из ВыборкаТЗ Цикл
		ТекСтрока.НазначениеПлатежа = СформироватьНазначениеПлатежа(ТекСтрока.НазначениеПлатежаБух, ТекСтрока.СтавкаНДС, ТекСтрока.СуммаДДС, ТекСтрока.СуммаНДС);
	КонецЦикла;	
	
	Для каждого ВыборкаДляПечати Из ВыборкаТЗ Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежноеПоручение_ПлатежноеПоручение";
		
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляПечати);
		//НомерДокументаДляПечати = ПолучитьНомерНаПечать(ВыборкаДляПечати.Ссылка.ПолучитьОбъект());
		НомерДокументаДляПечати = "Б/н";
		ОбластьМакета.Параметры.НаименованиеНомер = "ПЛАТЕЖНОЕ ПОРУЧЕНИЕ № " + НомерДокументаДляПечати;
		
		МесяцПрописью = ВыборкаДляПечати.ВариантВыводаМесяца = Перечисления.ВариантыВыводаМесяцаВДатеДокумента.Прописью;
		ФорматДаты    = "ДФ=" + ?(МесяцПрописью, "'дд ММММ гггг'", "'дд.ММ.гггг'");
		
		ОбластьМакета.Параметры.ДатаДокумента = Формат(ВыборкаДляПечати.ДатаДокумента, ФорматДаты);
		
		ОбластьМакета.Параметры.СуммаЧислом = ФорматироватьСуммуПлатежногоДокумента(
		ВыборкаДляПечати.СуммаДокумента,
		ВыборкаДляПечати.СуммаБезКопеек
		);
		
		ОбластьМакета.Параметры.СуммаПрописью = ФорматироватьСуммуПрописьюПлатежногоДокумента(
		ВыборкаДляПечати.СуммаДокумента,
		ВыборкаДляПечати.ВалютаДенежныхСредств,
		ВыборкаДляПечати.СуммаБезКопеек
		);
		
		ОбластьМакета.Параметры.ИННПлательщика = "ИНН " + ОбластьМакета.Параметры.ИННПлательщика;		
		ОбластьМакета.Параметры.КПППлательщика = "КПП " + ОбластьМакета.Параметры.КПППлательщика;
		ОбластьМакета.Параметры.ИННПолучателя  = "ИНН " + ОбластьМакета.Параметры.ИННПолучателя;
		ОбластьМакета.Параметры.КПППолучателя  = "КПП " + ОбластьМакета.Параметры.КПППолучателя;
		
		БанкПлательщика = ?(
		ЗначениеЗаполнено(ВыборкаДляПечати.НаименованиеБанкаРасчетовПлательщика), 
		ВыборкаДляПечати.НаименованиеБанкаРасчетовПлательщика,
		ВыборкаДляПечати.НаименованиеБанкаПлательщика
		);
		
		ГородБанкаПлательщика = ?(
		ЗначениеЗаполнено(ВыборкаДляПечати.НаименованиеБанкаРасчетовПлательщика), 
		ВыборкаДляПечати.ГородБанкаРасчетовПлательщика,
		ВыборкаДляПечати.ГородБанкаПлательщика
		);
		
		ОбластьМакета.Параметры.НаименованиеБанкаПлательщика = "" + БанкПлательщика + " " + ГородБанкаПлательщика;
		
		БанкПолучателя = ?(
		ЗначениеЗаполнено(ВыборкаДляПечати.НаименованиеБанкаРасчетовПолучателя), 
		ВыборкаДляПечати.НаименованиеБанкаРасчетовПолучателя,
		ВыборкаДляПечати.НаименованиеБанкаПолучателя
		);
		
		ГородБанкаПолучателя = ?(
		ЗначениеЗаполнено(ВыборкаДляПечати.НаименованиеБанкаРасчетовПолучателя), 
		ВыборкаДляПечати.ГородБанкаРасчетовПолучателя,
		ВыборкаДляПечати.ГородБанкаПолучателя
		);
		
		ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = "" + БанкПолучателя + " " + ГородБанкаПолучателя;
		
		Если ВыборкаДляПечати.ВидОперации = Перечисления.ВидыОперацийПлатежноеПоручение.ПеречислениеНалога Тогда
			
			ОбластьМакета.Параметры.СтатусСоставителя = ?(ПустаяСтрока(ВыборкаДляПечати.СтатусСоставителя), "0", СокрЛП(ВыборкаДляПечати.СтатусСоставителя));
			ОбластьМакета.Параметры.КодБК = ?(ПустаяСтрока(ВыборкаДляПечати.КодБК), "", СокрЛП(ВыборкаДляПечати.КодБК));
			ОбластьМакета.Параметры.КодОКАТО = ?(ПустаяСтрока(ВыборкаДляПечати.КодОКАТО), "", СокрЛП(ВыборкаДляПечати.КодОКАТО));
			ОбластьМакета.Параметры.ПоказательОснования = СокрЛП(ВыборкаДляПечати.ПоказательОснования);
			ОбластьМакета.Параметры.ПоказательНомера = ?(ВыборкаДляПечати.ПоказательНомера = "", "0",  СокрЛП(ВыборкаДляПечати.ПоказательНомера));
			ОбластьМакета.Параметры.ПоказательДаты = "0";
			ОбластьМакета.Параметры.ПоказательТипа = "";
			ОбластьМакета.Параметры.ПоказательПериода = СокрЛП(ВыборкаДляПечати.ПоказательПериода);
			ОбластьМакета.Параметры.УИН = СокрЛП(ВыборкаДляПечати.УИН);
			ОбластьМакета.Параметры.КодВидаДохода = СокрЛП(ВыборкаДляПечати.КодВидаДохода);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;     	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//
// Процедура ЗаполнитьВыборкуТЗ
//
// Описание:
// Заполняет таблицу реквизитами документа или строки табличной части в зависимости от вида документа
//
// Параметры (название, тип, дифференцированное значение)
//
Процедура ЗаполнитьВыборкуТЗ(ТекущаяТаблица, ДанныеЗаполнения, ПечатьРеестра)
	
	НоваяЗаявка = ТекущаяТаблица.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяЗаявка, ДанныеЗаполнения,, "НазначениеПлатежа, НазначениеПлатежаБух");
	НоваяЗаявка.Очередность = ДанныеЗаполнения.ОчередностьПлатежа;
	//НоваяЗаявка.НазначениеПлатежа = СформироватьНазначениеПлатежа(ТекСтрока.НазначениеПлатежаБух, ТекСтрока.СтавкаНДС, ТекСтрока.СуммаДДС, ТекСтрока.СуммаНДС);
	НоваяЗаявка.НазначениеПлатежа = СокрЛП(ДанныеЗаполнения.НазначениеПлатежа);
	НоваяЗаявка.НазначениеПлатежаБух = СокрЛП(ДанныеЗаполнения.НазначениеПлатежаБух);
	НоваяЗаявка.СуммаДокумента = ?(ПечатьРеестра, ДанныеЗаполнения.СуммаДДС, ДанныеЗаполнения.Сумма);
	
	Если Не ПечатьРеестра Тогда
		НоваяЗаявка.СуммаДДС = ДанныеЗаполнения.Сумма;
	КонецЕсли; 
	
	НоваяЗаявка.ВалютаДенежныхСредств = УЧ_Сервер.НациональнаяВалюта();	
	НоваяЗаявка.СуммаБезКопеек = Ложь;
	СтруктураДанныеОрганизации = ПолучитьДанныеОрганизацияПриИзменении(ДанныеЗаполнения.Организация);
	СтруктураДанныеКонтрагента = ПолучитьДанныеКонтрагентПриИзменении(ДанныеЗаполнения.Контрагент);
	ТекущийБанковскийСчет = ДанныеЗаполнения.БанковскийСчет;
	ТекущийСчетКонтрагента = ДанныеЗаполнения.СчетКонтрагента;
	
	//реквизиты плательщика
	//НоваяЗаявка.БанковскийСчет = СтруктураДанные.БанковскийСчет;
	НоваяЗаявка.ИННПлательщика = СтруктураДанныеОрганизации.ИННПлательщика;
	
	// КПП из {
	Если Не ЗначениеЗаполнено(НоваяЗаявка.КПППлательщика) Тогда
		НоваяЗаявка.КПППлательщика = СтруктураДанныеОрганизации.КПППлательщика
	КонецЕсли;	
	//}
	
	НоваяЗаявка.ТекстПлательщика = ?(ЗначениеЗаполнено(СтруктураДанныеОрганизации.ТекстКорреспондента), СтруктураДанныеОрганизации.ТекстКорреспондента, СтруктураДанныеОрганизации.НаименованиеПолное);  		
	
	//реквизиты получателя			
	НоваяЗаявка.СчетКонтрагента = СтруктураДанныеКонтрагента.СчетКонтрагента;
	НоваяЗаявка.ИННПолучателя = СтруктураДанныеКонтрагента.ИННПолучателя;
	НоваяЗаявка.КПППолучателя = СтруктураДанныеКонтрагента.КПППолучателя;
	НоваяЗаявка.ТекстПолучателя = ?(ЗначениеЗаполнено(СтруктураДанныеКонтрагента.ТекстКорреспондента), СтруктураДанныеКонтрагента.ТекстКорреспондента, СтруктураДанныеКонтрагента.НаименованиеПолное);
	
	//прочее
	Если ЗначениеЗаполнено(ТекущийСчетКонтрагента) Тогда
		НоваяЗаявка.НомерСчетаПолучателя = ТекущийСчетКонтрагента.НомерСчета;
		НоваяЗаявка.НаименованиеБанкаПолучателя = ТекущийСчетКонтрагента.Банк;
		НоваяЗаявка.НаименованиеБанкаРасчетовПолучателя = ТекущийСчетКонтрагента.БанкДляРасчетов;
		
		Если ЗначениеЗаполнено(ТекущийСчетКонтрагента.Банк) Тогда
			НоваяЗаявка.ГородБанкаПолучателя = ТекущийСчетКонтрагента.Банк.Город;
			НоваяЗаявка.БИКБанкаПолучателя = ТекущийСчетКонтрагента.Банк.Код;
			НоваяЗаявка.СчетБанкаПолучателя = ТекущийСчетКонтрагента.Банк.КоррСчет;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущийСчетКонтрагента.БанкДляРасчетов) Тогда
			НоваяЗаявка.ГородБанкаПолучателя = ТекущийСчетКонтрагента.БанкДляРасчетов.Город;			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийБанковскийСчет) Тогда
		НоваяЗаявка.НомерСчетаПлательщика = ТекущийБанковскийСчет.НомерСчета;
		НоваяЗаявка.НаименованиеБанкаПлательщика = ТекущийБанковскийСчет.Банк;
		НоваяЗаявка.НаименованиеБанкаРасчетовПлательщика = ТекущийБанковскийСчет.БанкДляРасчетов;
		
		Если ЗначениеЗаполнено(ТекущийБанковскийСчет.Банк) Тогда
			НоваяЗаявка.ГородБанкаПлательщика = ТекущийБанковскийСчет.Банк.Город;
			НоваяЗаявка.ГородБанкаРасчетовПлательщика = ТекущийБанковскийСчет.БанкДляРасчетов.Город;
			НоваяЗаявка.БИКБанкаПлательщика = ТекущийБанковскийСчет.Банк.Код;
			НоваяЗаявка.СчетБанкаПлательщика = ТекущийБанковскийСчет.Банк.КоррСчет;
		КонецЕсли;			
		
	КонецЕсли;  		
	
КонецПроцедуры //ЗаполнитьВыборкуТЗ

// Процедура выполняет необходимые действия формирования текста назначения
// платежа.
//
Функция СформироватьНазначениеПлатежа(НазначениеПлатежа, СтавкаНДС2, СуммаДокумента, ИсходнаяСуммаНДС)
	
	СтавкаНДС = сабОбщегоНазначения.ПолучитьСтавкуНДС(СтавкаНДС2);
	
	// обращение №320 не пересчитывать сумму НДС при печати платежек {
	//Если Не СтавкаНДС = Справочники.СтавкиНДС.Произвольная Тогда
	//	СуммаНДС = СуммаДокумента - (СуммаДокумента) / ((СтавкаНДС + 100) / 100);
	//КонецЕсли;	
	СуммаНДС = ИсходнаяСуммаНДС;
	//}
	
	БезНалогаНДС = ?(СтавкаНДС, Ложь, Истина);
	
	ПозицияСуммы = Найти(НазначениеПлатежа, "Сумма ");
	
	Если ПозицияСуммы = 0
		И ЗначениеЗаполнено(НазначениеПлатежа) Тогда
		ТекстНазначение = НазначениеПлатежа;
	Иначе
		ТекстНазначение = Лев(НазначениеПлатежа, ПозицияСуммы - 1);
	КонецЕсли;
	
	Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
		ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекстНазначение) Тогда
		ТекстНазначение = НазначениеПлатежа;
	КонецЕсли;
	
	ТекстСумма = Строка(Формат(СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ="));
	
	ТекстНДС = "";
	
	
	Если ЗначениеЗаполнено(СтавкаНДС) И НЕ БезНалогаНДС Тогда
		ТекстНДС = НСтр("ru = 'НДС(%СтавкаНДС%) %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СтавкаНДС%", Строка(СтавкаНДС));
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")));
		ТекстНДС = СтрЗаменить(ТекстНДС, "(Произвольная)", "");
	ИначеЕсли СтавкаНДС2 = сабОбщегоНазначения.ПолучитьЭлементНДС("Произвольная") Тогда
		ТекстНДС = НСтр("ru = 'НДС(%СтавкаНДС%) %СуммаНДС%'");
		ТекстНДС = СтрЗаменить(ТекстНДС, "(%СтавкаНДС%)", "");
		ТекстНДС = СтрЗаменить(ТекстНДС, "%СуммаНДС%", Строка(Формат(ИсходнаяСуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧН=0-00; ЧГ=")))		
	КонецЕсли;
	
	ТекстНазначениеПлатежа = НСтр(
	"ru = '%ТекстНазначение%
	|Сумма %ТекстСумма%
	|%ЗначениеСтавкиНДС% %ТекстНДС%'"
	);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНазначение%", ТекстНазначение);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстСумма%", ТекстСумма);
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ЗначениеСтавкиНДС%", ?((БезНалогаНДС ИЛИ НЕ ЗначениеЗаполнено(СтавкаНДС)) И НЕ СтавкаНДС2 = сабОбщегоНазначения.ПолучитьЭлементНДС("Произвольная"), НСтр("ru = 'Без налога (НДС)'"), НСтр("ru = 'В т.ч. '")));
	ТекстНазначениеПлатежа = СтрЗаменить(ТекстНазначениеПлатежа, "%ТекстНДС%", ТекстНДС);
	
	Возврат ТекстНазначениеПлатежа;
	
КонецФункции // СформироватьНазначениеПлатежа()

Функция ПолучитьДанныеОрганизацияПриИзменении(Организация)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("НаименованиеПолное", Организация.НаименованиеПолное);
	СтруктураДанные.Вставить("КодОКАТО", Неопределено);
	СтруктураДанные.Вставить("БанковскийСчет", Организация.ОсновнойБанковскийСчет);
	Если ПустаяСтрока(СтруктураДанные.БанковскийСчет) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	БанковскиеСчета.Код";
		
		Запрос.УстановитьПараметр("Владелец", Организация);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			СтруктураДанные.Вставить("БанковскийСчет", Выборка.Ссылка);	   
		КонецЕсли;		
		
	КонецЕсли; 
	
	СтруктураДанные.Вставить("ТекстКорреспондента", Организация.ОсновнойБанковскийСчет.ТекстКорреспондента);
	СтруктураДанные.Вставить("ИННПлательщика", Организация.ИНН);
	СтруктураДанные.Вставить("КПППлательщика", Организация.КПП);
	СтруктураДанные.Вставить("ЭтоФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеОрганизацияПриИзменении()

// Получает набор данных с сервера для процедуры ДоговорПриИзменении.
//
Функция ПолучитьДанныеКонтрагентПриИзменении(Контрагент)
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") ИЛИ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("НаименованиеПолное", Контрагент.НаименованиеПолное);
		СтруктураДанные.Вставить("СчетКонтрагента", Контрагент.ОсновнойБанковскийСчет);
		СтруктураДанные.Вставить("ИННПолучателя", Контрагент.ИНН);
		СтруктураДанные.Вставить("КПППолучателя", Контрагент.КПП);
		СтруктураДанные.Вставить("НазначениеПлатежа", Контрагент.ОсновнойБанковскийСчет.ТекстНазначения);
		СтруктураДанные.Вставить("ТекстКорреспондента", Контрагент.ОсновнойБанковскийСчет.ТекстКорреспондента);
	ИначеЕсли ТипЗнч(Контрагент) = Тип("СправочникСсылка.Сотрудники") Тогда
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("НаименованиеПолное", Контрагент.Наименование);
		СтруктураДанные.Вставить("СчетКонтрагента", Контрагент.ОсновнойБанковскийСчет);
		СтруктураДанные.Вставить("ИННПолучателя", Контрагент.ФизическоеЛицо.ИНН);
		СтруктураДанные.Вставить("КПППолучателя", "");
		СтруктураДанные.Вставить("НазначениеПлатежа", Контрагент.ОсновнойБанковскийСчет.ТекстНазначения);
		СтруктураДанные.Вставить("ТекстКорреспондента", Контрагент.ОсновнойБанковскийСчет.ТекстКорреспондента);
	Иначе	
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("НаименованиеПолное", "");
		СтруктураДанные.Вставить("СчетКонтрагента", "");
		СтруктураДанные.Вставить("ИННПолучателя", "");
		СтруктураДанные.Вставить("КПППолучателя", "");
		СтруктураДанные.Вставить("НазначениеПлатежа", "");
		СтруктураДанные.Вставить("ТекстКорреспондента", "");
	КонецЕсли;
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеКонтрагентПриИзменении()

Функция ФорматироватьСуммуПлатежногоДокумента(Сумма, ВыводитьСуммуБезКопеек = Ложь)
	
	Результат  = Сумма;
	ЦелаяЧасть = Цел(Сумма);
	
	Если Результат = ЦелаяЧасть Тогда
		Если ВыводитьСуммуБезКопеек Тогда
			Результат = Формат(Результат, "ЧДЦ=2; ЧРД='='; ЧГ=0");
			Результат = Лев(Результат, Найти(Результат, "="));
		Иначе
			Результат = Формат(Результат, "ЧДЦ=2; ЧРД='-'; ЧГ=0");
		КонецЕсли;
	Иначе
		Результат = Формат(Результат, "ЧДЦ=2; ЧРД='-'; ЧГ=0");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ФорматироватьСуммуПлатежногоДокумента()

Функция ФорматироватьСуммуПрописьюПлатежногоДокумента(Сумма, Валюта, ВыводитьСуммуБезКопеек = Ложь)
	
	Результат     = Сумма;
	ЦелаяЧасть    = Цел(Сумма);
	ФорматСтрока  = "Л=ru_RU; ДП=Ложь";
	ПарамПредмета = Валюта.ПараметрыПрописи;
	
	Если Результат = ЦелаяЧасть Тогда
		Если ВыводитьСуммуБезКопеек Тогда
			Результат = ЧислоПрописью(Результат, ФорматСтрока, ПарамПредмета);
			Результат = Лев(Результат, Найти(Результат, "0") - 1);
		Иначе
			Результат = ЧислоПрописью(Результат, ФорматСтрока, ПарамПредмета);
		КонецЕсли;
	Иначе
		Результат = ЧислоПрописью(Результат, ФорматСтрока, ПарамПредмета);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ФорматироватьСуммуПрописьюПлатежногоДокумента()


//Печать Платежки }

Процедура Печать(ТабДок, Ссылка, ТекМакет = "ПечатьБезНалБух", РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ЭтоЗаявкаНаОплату = ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование");
	
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.Д_ЗаявкаНаОплату.ПолучитьМакет(ТекМакет);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Д_ЗаявкаНаОплату.Дата КАК Дата,
	|	Д_ЗаявкаНаОплату.Номер КАК Номер,
	|	Д_ЗаявкаНаОплату.Предприятие КАК Предприятие,
	|	Д_ЗаявкаНаОплату.ЗаявкаБезнал.(
	|		НомерСтроки КАК НомерСтроки,
	|		СтатьяДДС КАК СтатьяДДС,
	|		СуммаДДС КАК СуммаДДС,
	|		НазначениеПлатежа КАК НазначениеПлатежа,
	|		Контрагент КАК Контрагент,
	|		ПризнакПредоплаты КАК ПризнакПредоплаты,
	|		ПоПлану КАК ПоПлану,
	|		ОтменаОплаты КАК ОтменаОплаты,
	|		Рецензент КАК Рецензент,
	|		Комментарии КАК Комментарии,
	|		ЦФО КАК ЦФО,
	|		Источник КАК Источник,
	|		Ответственный КАК Ответственный,
	|		БанковскийСчет КАК БанковскийСчет,
	|		Примечание КАК Примечание,
	|		Приложение КАК Приложение,
	|		Подразделение КАК Подразделение,
	|		ЗаявкаНаЗакупку КАК ЗаявкаНаЗакупку,
	|		НазначениеПлатежаБух КАК НазначениеПлатежаБух,
	|		ИнвПроект КАК ИнвПроект,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Д_ЗаявкаНаОплату.ЗаявкаБезнал.Контрагент) = ТИП(Справочник.Предприятия)
	|				ТОГДА Д_ЗаявкаНаОплату.ЗаявкаБезнал.ИсточникПолучатель
	|			ИНАЧЕ Д_ЗаявкаНаОплату.ЗаявкаБезнал.СчетКонтрагента
	|		КОНЕЦ КАК СчетКонтрагента,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		ВыдачаВПодОтчет КАК ВыдачаВПодОтчет,
	|		Валюта КАК Валюта,
	|		СуммаЧастичнойОплаты КАК СуммаЧастичнойОплаты,
	|		Договор КАК ДоговорКонтрагента,
	|		ВЫБОР
	|			КОГДА Д_ЗаявкаНаОплату.ЗаявкаБезнал.Договор.СчетВзаиморасчетов ЕСТЬ NULL
	|				ТОГДА Д_ЗаявкаНаОплату.ЗаявкаБезнал.СчетВзаиморасчетов
	|			ИНАЧЕ Д_ЗаявкаНаОплату.ЗаявкаБезнал.Договор.СчетВзаиморасчетов
	|		КОНЕЦ КАК СчетВзаиморасчетов,
	|		ЗаявкаНаФинансирование КАК ЗаявкаНаФинансирование,
	|		ВидОперации КАК ВидОперации,
	|		УИДСтроки КАК УИДСтроки,
	|		ИсточникПолучатель КАК ИсточникПолучатель,
	|		ВалютнаяСумма КАК СуммаДДСВал
	|	) КАК ЗаявкаБезнал,
	|	Д_ЗаявкаНаОплату.Ссылка КАК Ссылка,
	|	Д_ЗаявкаНаОплату.ТипИсточника КАК ТипИсточника,
	|	Д_ЗаявкаНаОплату.СостояниеДокумента КАК СостояниеДокумента,
	|	Д_ЗаявкаНаОплату.ИсполнительОплаты КАК ИсполнительОплаты,
	|	Д_ЗаявкаНаОплату.Автор КАК Автор,
	|	Д_ЗаявкаНаОплату.Файл КАК Файл,
	|	Д_ЗаявкаНаОплату.Комментарий КАК Комментарий,
	|	Д_ЗаявкаНаОплату.ДатаОплаты КАК ДатаОплаты,
	|	Д_ЗаявкаНаОплату.РасшифровкиСтрок.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Заявка КАК Заявка,
	|		УИДСтрокиЗаявки КАК УИДСтрокиЗаявки,
	|		ЦФО КАК ЦФО,
	|		Подразделение.Наименование КАК Подразделение,
	|		Сумма КАК Сумма,
	|		СтатьяДДС КАК СтатьяДДС,
	|		Валюта КАК Валюта,
	|		ВалютнаяСумма КАК ВалютнаяСумма
	|	) КАК РасшифровкиСтрок,
	|	Д_ЗаявкаНаОплату.ОстаткиПоИсточникам.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Источник КАК Источник,
	|		Сумма КАК Сумма,
	|		СЗПополнение КАК СЗПополнение,
	|		КомментарииСЗ КАК КомментарииСЗ
	|	) КАК ОстаткиПоИсточникам,
	|	NULL КАК Валюта,
	|	0 КАК СуммаДДСВал
	|ИЗ
	|	Документ.Д_ЗаявкаНаОплату КАК Д_ЗаявкаНаОплату
	|ГДЕ
	|	Д_ЗаявкаНаОплату.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Д_ЗаявкаНаФинансирование.Дата,
	|	Д_ЗаявкаНаФинансирование.Номер,
	|	Д_ЗаявкаНаФинансирование.Предприятие,
	|	ПУСТАЯТАБЛИЦА.(, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ),
	|	Д_ЗаявкаНаФинансирование.Ссылка,
	|	Д_ЗаявкаНаФинансирование.ТипИсточника,
	|	Д_ЗаявкаНаФинансирование.СостояниеДокумента,
	|	NULL,
	|	Д_ЗаявкаНаФинансирование.Автор,
	|	Д_ЗаявкаНаФинансирование.Файл,
	|	Д_ЗаявкаНаФинансирование.Комментарий,
	|	Д_ЗаявкаНаФинансирование.ДатаОплаты,
	|	ПУСТАЯТАБЛИЦА.(, , , , , , , , , ),
	|	ПУСТАЯТАБЛИЦА.(, , , , , ),
	|	Д_ЗаявкаНаФинансирование.Валюта,
	|	Д_ЗаявкаНаФинансирование.ВалютнаяСумма
	|ИЗ
	|	Документ.Д_ЗаявкаНаФинансирование КАК Д_ЗаявкаНаФинансирование
	|ГДЕ
	|	Д_ЗаявкаНаФинансирование.Ссылка В(&Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПрикрепление = Макет.ПолучитьОбласть("Прикрепление");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	// статус
	ШапкаСтатус = Макет.ПолучитьОбласть("ШапкаСтатус");
	//ОбластьЗаявкаБезнал = Макет.ПолучитьОбласть("ЗаявкаБезнал"); Далее определяется
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьШапкаЗаг = Макет.ПолучитьОбласть("ШтампыЗаголовок");
	ОбластьОстатки = Макет.ПолучитьОбласть("Остатки");
	ОбластьОстаткиШапка = Макет.ПолучитьОбласть("ОстаткиШапка");
	ОбластьСогласование = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьСЗ = Макет.ПолучитьОбласть("СЗПополнение");
	ОбластьКомментарий = Макет.ПолучитьОбласть("Комментарий");
	ОбластьРасшифровкаСтрок = Макет.ПолучитьОбласть("РасшифровкаЦФО|Область1");
	
	ТабДок.Очистить();
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		
		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ИсполнительОплаты = Документы.Д_ЗаявкаНаОплату.ПолучитьИсполнителяОплаты(Выборка.Ссылка); 
		
		Если ЗначениеЗаполнено(ИсполнительОплаты) Тогда
			ОбластьЗаголовок.Параметры.ИсполнительОплаты = "(Исполнитель оплаты: " + Строка(ИсполнительОплаты) + ")";		
		КонецЕсли; 
		
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		// статус 
		ШапкаСтатус.Параметры.ТекущийСтатус = БПСервер.ПолучитьТекущуюТочкуМаршрута(Ссылка);
		ТабДок.Вывести(ШапкаСтатус, Выборка.Уровень());
		
		Пока ВыборкаПоФайлам.Следующий() Цикл
			
			Если ВыборкаПоФайлам.ВладелецИмяТЧ = Строка("ЗаявкаБезнал") Тогда 
				Продолжить;	
			Иначе 
				ОбластьПрикрепление.Параметры.Вложение = "Прикрепленный объект: " + Строка(ВыборкаПоФайлам.Файл);
				ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
				ТабДок.Вывести(ОбластьПрикрепление);
			КонецЕсли; 
			
		КонецЦикла;
		
		//выводим остатки по источникам
		Если НЕ ЭтоЗаявкаНаОплату Тогда
			ВыборкаЗаявкаБезналСтроки = Выборка.ЗаявкаБезнал.Выгрузить();
			ТабДок.НачатьГруппуСтрок("Показать остатки по источникам");
			
			ВыборкаОстатки = Выборка.ОстаткиПоИсточникам.Выбрать();
			Если ВыборкаОстатки.Количество() Тогда
				ТабДок.Вывести(ОбластьОстаткиШапка, 1, "Показать остатки по источникам");	
			КонецЕсли;
			Пока ВыборкаОстатки.Следующий() Цикл
				ОбластьОстатки.Параметры.Заполнить(ВыборкаОстатки);
				СтрокиЗаявок = ВыборкаЗаявкаБезналСтроки.НайтиСтроки(Новый Структура("Источник", ВыборкаОстатки.Источник));
				СуммаОборот = 0;
				Для каждого ТекСтрокаЗаявки Из СтрокиЗаявок Цикл
					СуммаОборот = СуммаОборот + ТекСтрокаЗаявки.СуммаДДС;
				КонецЦикла;
				ОбластьОстатки.Параметры.СуммаОборот = СуммаОборот;
				ОбластьОстатки.Параметры.СуммаКонец = ОбластьОстатки.Параметры.Сумма - СуммаОборот ;
				ТабДок.Вывести(ОбластьОстатки, 1, "Показать остатки по источникам");	
			КонецЦикла;
			
			ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;;
				
		ТабДок.НачатьАвтогруппировкуСтрок();
			
		// определяем что за область шапки у нас		
		ЭтоЗаявкаБезНДС = (Выборка.ТипИсточника = Перечисления.Д_ИсточникиСредств.Нал);
		ЭтоЗаявкаБезНДС = Истина; //д1 убираем НДС из формы
		
		// валюта {
		Если (Выборка.ЗаявкаБезнал.Выгрузить().Итог("СуммаДДСВал") > 0 ИЛИ Выборка.СуммаДДСВал > 0) И НЕ Выборка.ЗаявкаБезнал.Выгрузить().Итог("СуммаДДСВал") = Выборка.ЗаявкаБезнал.Выгрузить().Итог("СуммаДДС") Тогда
			ЭтоВалютнаяЗаявка = Истина;
		Иначе
			ЭтоВалютнаяЗаявка = Ложь;
		КонецЕсли;
		//}
		
		// вывод шапки {
		ИмяОбластиШапки = "ЗаявкаБезналШапка";
		
		ОбластьЗаявкаБезналШапкаОбласть1 = Макет.ПолучитьОбласть(ИмяОбластиШапки+"|Область1");
		
		Если ЭтоВалютнаяЗаявка Тогда
			ОбластьЗаявкаБезналШапкаВалюта = Макет.ПолучитьОбласть(ИмяОбластиШапки+"|СуммаВалютная");	
		КонецЕсли;
		
		Если Не ЭтоЗаявкаБезНДС Тогда 
			ОбластьЗаявкаБезналШапкаСуммаНДС = Макет.ПолучитьОбласть(ИмяОбластиШапки+"|СуммаНДС");	
		КонецЕсли;	
				
		ОбластьЗаявкаБезналШапкаОтметка  = Макет.ПолучитьОбласть(ИмяОбластиШапки+"|Отметка");
		ОбластьЗаявкаБезналШапкаОбласть2 = Макет.ПолучитьОбласть(ИмяОбластиШапки+"|Область2");
		ОбластьЗаявкаБезналШапкаОбласть1.Параметры.ШапкаСумма = "Сумма";
		
		ТабДок.Вывести(ОбластьЗаявкаБезналШапкаОбласть1, 0,, Ложь);	
		
		Если ЭтоВалютнаяЗаявка Тогда 	
			ТабДок.Присоединить(ОбластьЗаявкаБезналШапкаВалюта, 0,, Ложь);
		КонецЕсли;

		Если Не ЭтоЗаявкаБезНДС Тогда 	
			ТабДок.Присоединить(ОбластьЗаявкаБезналШапкаСуммаНДС, 0,, Ложь);
		КонецЕсли;
		
		ТабДок.Присоединить(ОбластьЗаявкаБезналШапкаОтметка, 0,, Ложь);
		ТабДок.Присоединить(ОбластьЗаявкаБезналШапкаОбласть2, 0,, Ложь);
		//} конец вывода шапки
				
		Если ЭтоЗаявкаНаОплату Тогда
			НовыйДокШаблон = Документы.Д_ЗаявкаНаОплату.СоздатьДокумент();
			ВыборкаЗаявкаБезналСтроки = НовыйДокШаблон.ЗаявкаБезнал.Выгрузить();
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("ДоговорКонтрагента");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("СуммаДокумента");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("Плательщик");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("НедоступнаДляОтветственного");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("СуммаДДСВал");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("ОрганизацияВладелец");
			НоваяСтрокаДока = ВыборкаЗаявкаБезналСтроки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДока, Выборка.Ссылка);
			НоваяСтрокаДока.НазначениеПлатежаБух = Документы.Д_ЗаявкаНаОплату.СформироватьНазначениеДляУчета(Выборка.Ссылка.НазначениеПлатежа);
			НоваяСтрокаДока.НазначениеПлатежа = Выборка.Ссылка.НазначениеПлатежаУчет;
			НоваяСтрокаДока.СуммаДДС = Выборка.Ссылка.Сумма;
			НоваяСтрокаДока.ЦФО = ?(ЗначениеЗаполнено(Выборка.Ссылка.ЦФО), Выборка.Ссылка.ЦФО, Выборка.Ссылка.Предприятие);
			НоваяСтрокаДока.Плательщик = Выборка.Ссылка.Источник;
			НоваяСтрокаДока.СуммаДокумента = НоваяСтрокаДока.СуммаДДС;
			НоваяСтрокаДока.ДоговорКонтрагента = НоваяСтрокаДока.Договор;
			НоваяСтрокаДока.НедоступнаДляОтветственного = Ложь;
			НоваяСтрокаДока.СуммаДДСВал = НоваяСтрокаДока.ВалютнаяСумма;
		Иначе	
			ВыборкаЗаявкаБезналСтроки = Выборка.ЗаявкаБезнал.Выгрузить();
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//|	Задача.Ссылка КАК Ссылка
			//|ИЗ
			//|	Справочник.Задача КАК Задача
			//|ГДЕ
			//|	Задача.Выполнена = ЛОЖЬ
			//|	И (Задача.Исполнитель В (&ТекущийПользователь)
			//|			ИЛИ Задача.Исполнитель В
			//|				(ВЫБРАТЬ
			//|					ГруппыПользователей.Ссылка КАК Ссылка
			//|				ИЗ
			//|					Справочник.ГруппыПользователей КАК ГруппыПользователей
			//|				ГДЕ
			//|					ГруппыПользователей.Состав.Пользователь В (&ТекущийПользователь)))
			//|	И Задача.Заявка = &Заявка
			//|	И Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)";
			//
			//Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
			//Запрос.УстановитьПараметр("Заявка", Выборка.Ссылка);
			//
			//Результат = Запрос.Выполнить();
			//ВыборкаЗадач = Результат.Выгрузить();
			//
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("НедоступнаДляОтветственного");
			ВыборкаЗаявкаБезналСтроки.Колонки.Добавить("ОрганизацияВладелец");
			Для каждого ТекСтрокаЗаявки Из ВыборкаЗаявкаБезналСтроки Цикл
				ТекСтрокаЗаявки.НедоступнаДляОтветственного = Ложь;			
			КонецЦикла; 
			
			//Если ВыборкаЗадач.Количество() Тогда
			//	
			//	Запрос = Новый Запрос;
			//	Запрос.Текст = "ВЫБРАТЬ
			//	|	ГруппыПользователей.Ссылка КАК Ссылка
			//	|ИЗ
			//	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
			//	|ГДЕ
			//	|	ГруппыПользователей.Состав.Пользователь В(&ТекущийПользователь)";
			//	
			//	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
			//	
			//	ДоступныеГруппы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			//	
			//	МассивОтветственных = Новый Массив;
			//	Для каждого ТекСтрокаЗаявки Из ВыборкаЗаявкаБезналСтроки Цикл
			//		Если ЗначениеЗаполнено(ТекСтрокаЗаявки.Источник) Тогда
			//			Ответственный = ТекСтрокаЗаявки.Источник.Ответственный;
			//			Если МассивОтветственных.Найти(Ответственный) = Неопределено И ЗначениеЗаполнено(Ответственный) Тогда
			//				МассивОтветственных.Добавить(Ответственный);
			//			КонецЕсли;
			//		КонецЕсли;
			//	КонецЦикла; 
			//	
			//	Если МассивОтветственных.Количество() > 1 Тогда
			//		Для каждого ТекСтрокаЗаявки Из ВыборкаЗаявкаБезналСтроки Цикл
			//			Если ЗначениеЗаполнено(ТекСтрокаЗаявки.Источник) Тогда
			//				Ответственный = ТекСтрокаЗаявки.Источник.Ответственный;
			//				Если НЕ Ответственный = ПараметрыСеанса.ТекущийПользователь И ДоступныеГруппы.Найти(Ответственный) = Неопределено Тогда
			//					ТекСтрокаЗаявки.НедоступнаДляОтветственного = Истина;
			//				КонецЕсли;
			//			КонецЕсли;
			//		КонецЦикла; 
			//	КонецЕсли;
			//	
			//КонецЕсли;
			
		КонецЕсли;
				
		СуммаДДСВсего = 0;
		СуммаНДСВсего = 0;
		
		Для каждого ВыборкаЗаявкаБезнал Из ВыборкаЗаявкаБезналСтроки Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.Источник) Тогда
				ВыборкаЗаявкаБезнал.ОрганизацияВладелец = ВыборкаЗаявкаБезнал.Организация;
			КонецЕсли;
				
			//расшифровка
			Если ЭтоЗаявкаНаОплату Тогда
				НовыйДокШаблон = Документы.Д_ЗаявкаНаОплату.СоздатьДокумент();
				СтрокиРасшифровки = НовыйДокШаблон.РасшифровкиСтрок.Выгрузить();
				
				Если Выборка.Ссылка.РасшифровкаПлатежа Тогда
					
					Для каждого ТекСтрока Из Выборка.Ссылка.ТабличнаяЧасть Цикл
						НоваяСтрокаДока = СтрокиРасшифровки.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаДока, ТекСтрока);
						НоваяСтрокаДока.ЦФО = ТекСтрока.Предприятие;
						НоваяСтрокаДока.ВалютнаяСумма = ТекСтрока.ВалСумма;
					КонецЦикла; 
					
				КонецЕсли;
				
			Иначе
				Если ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование) Тогда
					НовыйДокШаблон = Документы.Д_ЗаявкаНаОплату.СоздатьДокумент();
					СтрокиРасшифровки = НовыйДокШаблон.РасшифровкиСтрок.Выгрузить();
					
					Если ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование.РасшифровкаПлатежа Тогда
						
						Для каждого ТекСтрока Из ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование.ТабличнаяЧасть Цикл
							НоваяСтрокаДока = СтрокиРасшифровки.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаДока, ТекСтрока);
							НоваяСтрокаДока.ЦФО = ТекСтрока.Предприятие;
							НоваяСтрокаДока.ВалютнаяСумма = ТекСтрока.ВалСумма;
							НоваяСтрокаДока.УИДСтрокиЗаявки = ВыборкаЗаявкаБезнал.УИДСтроки;
						КонецЦикла; 
						
					КонецЕсли;
				Иначе
					СтрокиРасшифровки = Выборка.РасшифровкиСтрок.Выгрузить();
				КонецЕсли;
			КонецЕсли;
			
			ОбластьЗаявкаБезналОбласть1 = Макет.ПолучитьОбласть("ЗаявкаБезнал|Область1");
			
			Если ВыборкаЗаявкаБезнал.ОтменаОплаты Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть1.Область(); 
				ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
				ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
			КонецЕсли;
			Если ВыборкаЗаявкаБезнал.НедоступнаДляОтветственного Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть1.Область(); 
				ОбластьЯчеек.ЦветТекста = новый Цвет(192, 192, 192);
			КонецЕсли;
			
			Если ЭтоВалютнаяЗаявка Тогда 
				ОбластьЗаявкаБезналВалюта = Макет.ПолучитьОбласть("ЗаявкаБезнал|СуммаВалютная");
				
				Если ВыборкаЗаявкаБезнал.ОтменаОплаты Тогда
					ОбластьЯчеек = ОбластьЗаявкаБезналВалюта.Область(); 
					ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
					ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
				КонецЕсли;
				Если ВыборкаЗаявкаБезнал.НедоступнаДляОтветственного Тогда
					ОбластьЯчеек = ОбластьЗаявкаБезналВалюта.Область(); 
					ОбластьЯчеек.ЦветТекста = новый Цвет(192, 192, 192);
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ЭтоЗаявкаБезНДС Тогда 
				ОбластьЗаявкаБезналСуммаНДС = Макет.ПолучитьОбласть("ЗаявкаБезнал|СуммаНДС");
				
				Если ВыборкаЗаявкаБезнал.ОтменаОплаты Тогда
					ОбластьЯчеек = ОбластьЗаявкаБезналСуммаНДС.Область(); 
					ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
					ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
				КонецЕсли;
				Если ВыборкаЗаявкаБезнал.НедоступнаДляОтветственного Тогда
					ОбластьЯчеек = ОбластьЗаявкаБезналСуммаНДС.Область(); 
					ОбластьЯчеек.ЦветТекста = новый Цвет(192, 192, 192);
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьЗаявкаБезналОтметка = Макет.ПолучитьОбласть("ЗаявкаБезнал|отметка");
			ОбластьЗаявкаБезналОбласть2 = Макет.ПолучитьОбласть("ЗаявкаБезнал|Область2");
			
			Если ВыборкаЗаявкаБезнал.ОтменаОплаты Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОтметка.Область(); 
				ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
				ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть2.Область(); 
				ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
				ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
			КонецЕсли;
			Если ВыборкаЗаявкаБезнал.НедоступнаДляОтветственного Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОтметка.Область(); 
				ОбластьЯчеек.ЦветТекста = новый Цвет(192, 192, 192);
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть2.Область(); 
				ОбластьЯчеек.ЦветТекста = новый Цвет(192, 192, 192);
			КонецЕсли;
			
			Если ВыборкаЗаявкаБезнал.НазначениеПлатежа = ВыборкаЗаявкаБезнал.НазначениеПлатежаБух Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОтметка.Области.НазначениеПлатежа;
				ОбластьЯчеек.Объединить();
			КонецЕсли;	
			
			Если Не ВыборкаЗаявкаБезнал.ВыдачаВПодОтчет Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть2.Области.Контрагент;
				ОбластьЯчеек.Объединить();
			КонецЕсли;
			
			Если (Не ТипЗнч(ВыборкаЗаявкаБезнал.Контрагент) = Тип("СправочникСсылка.Контрагенты") И Не ТипЗнч(ВыборкаЗаявкаБезнал.Контрагент) = Тип("СправочникСсылка.Организации") И НЕ ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.ИсточникПолучатель)) ИЛИ НЕ ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.ДоговорКонтрагента) Тогда
				ОбластьЯчеек = ОбластьЗаявкаБезналОбласть2.Области.СчетИДоговорКонтрагента;
				ОбластьЯчеек.Объединить();
			КонецЕсли;			
			
			ОбластьЗаявкаБезналОбласть1.Параметры.Заполнить(ВыборкаЗаявкаБезнал);
			
			Если ЭтоВалютнаяЗаявка Тогда 
				ОбластьЗаявкаБезналВалюта.Параметры.Заполнить(ВыборкаЗаявкаБезнал);
			КонецЕсли;
			
			Если Не ЭтоЗаявкаБезНДС Тогда 
				ОбластьЗаявкаБезналСуммаНДС.Параметры.Заполнить(ВыборкаЗаявкаБезнал);
			КонецЕсли;
			
			ОбластьЗаявкаБезналОтметка.Параметры.Заполнить(ВыборкаЗаявкаБезнал);
			ОбластьЗаявкаБезналОбласть2.Параметры.Заполнить(ВыборкаЗаявкаБезнал);
			
			//Если Выборка.ТипИсточника = Перечисления.Д_ИсточникиСредств.БезНал Тогда
			//	ОбластьЗаявкаБезналОтметка.Параметры.Источник = ВыборкаЗаявкаБезнал.БанковскийСчет
			//КонецЕсли;
			
			ОбластьЗаявкаБезналОбласть1.Параметры.СтатьяДДС = ВыборкаЗаявкаБезнал.СтатьяДДС.Код;
			ОбластьЗаявкаБезналОбласть1.Параметры.СтатьяДДСНаименование = ВыборкаЗаявкаБезнал.СтатьяДДС;
						
			// получаем приложение из заявки на финансирование
			МассивПрикрепленныхФайлов = Новый Массив;
			МассивВладельцевПрикрепленныхФайлов = Новый Массив;
			МассивВладельцевПрикрепленныхФайлов.Добавить(Выборка.Ссылка);
			
			Если ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.Приложение) Тогда
				МассивПрикрепленныхФайлов.Добавить(ВыборкаЗаявкаБезнал.Приложение);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование) Тогда
				МассивВладельцевПрикрепленныхФайлов.Добавить(ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование);
				ВыборкаФайловЗаявкиНаФинансирование = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование);
				
				Пока ВыборкаФайловЗаявкиНаФинансирование.Следующий() Цикл
					
					Если Не МассивПрикрепленныхФайлов.Найти(ВыборкаФайловЗаявкиНаФинансирование.Файл) = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					МассивПрикрепленныхФайлов.Добавить(ВыборкаФайловЗаявкиНаФинансирование.Файл);
				КонецЦикла;
				
			КонецЕсли;
			
			КолвоПрикрепленныхФайлов = МассивПрикрепленныхФайлов.Количество();
			
			Если КолвоПрикрепленныхФайлов Тогда
				ОбластьЗаявкаБезналОбласть2.Параметры.ПрикрепленныеФайлыТекст = "Прикрепленные файлы";	
				ОбластьЗаявкаБезналОбласть2.Параметры.КоличествоПрикрепленныхФайлов = "(" + КолвоПрикрепленныхФайлов + ")";
			КонецЕсли;	
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Заявка", Выборка.Ссылка);
			СтруктураРасшифровки.Вставить("НомерСтроки", ВыборкаЗаявкаБезнал.НомерСтроки);
			СтруктураРасшифровки.Вставить("ОтменаОплаты", ВыборкаЗаявкаБезнал.ОтменаОплаты);
			
			СтруктураРасшифровки3 = Новый Структура;
			СтруктураРасшифровки3.Вставить("Приложение", МассивПрикрепленныхФайлов);
			СтруктураРасшифровки3.Вставить("ВладелецБезОтбора", Новый Структура("ВладелецФайла, ИмяТЧ, НомерСтрокиТЧ", Выборка.Ссылка, "ЗаявкаБезнал", ВыборкаЗаявкаБезнал.НомерСтроки));
			СтруктураРасшифровки3.Вставить("ЗаявкаНаОплатуПечать", Истина); //для уникальной расшифровки
			СтруктураРасшифровки3.Вставить("ЗаявкаНаФинансирование", ВыборкаЗаявкаБезнал.ЗаявкаНаФинансирование);
			
			//ОбластьЗаявкаБезналОбласть2.Параметры.ТекСтрокаЗаявки = ?(Выборка.СостояниеДокумента = Перечисления.Д_СостоянияДокументов.Исполнен, Новый Структура, СтруктураРасшифровки);
			
			СтруктураРасшифровки2 = Новый Структура;
			СтруктураРасшифровки2.Вставить("Регистратор", Выборка.Ссылка);
			СтруктураРасшифровки2.Вставить("НомерСтроки", ВыборкаЗаявкаБезнал.НомерСтроки);
			СтруктураРасшифровки2.Вставить("СтатьяДДС", ВыборкаЗаявкаБезнал.СтатьяДДС);
			СтруктураРасшифровки2.Вставить("ЗаявкаНаОплатуПечать", Истина); //для уникальной расшифровки
			ОбластьЗаявкаБезналОбласть1.Параметры.СменаСтатьи = СтруктураРасшифровки2;
			
			ОбластьЗаявкаБезналОбласть2.Параметры.ПриложениеФайл = СтруктураРасшифровки3; 			
			
			СписокСчетовВзаиморассчетов = Новый СписокЗначений;
			ВыборкаСчетов = Справочники.ДоговорыКонтрагентов.ПолучитьСчетаВзаиморасчетов();
			
			Пока ВыборкаСчетов.Следующий() Цикл
				ВидыСуб = ВыборкаСчетов.ВидыСубконто.Выгрузить();
				
				Для каждого ТекСтрока Из ВидыСуб Цикл
					
					Если ТекСтрока.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
						СписокСчетовВзаиморассчетов.Добавить(ВыборкаСчетов.Ссылка, ВыборкаСчетов.Код + " " + ВыборкаСчетов.Наименование);	
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			РасшифровкаИзмененияСчетаВзаиморасчетов = Новый Структура;
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("Договор", ВыборкаЗаявкаБезнал.ДоговорКонтрагента);
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("СчетВзаиморасчетов", ВыборкаЗаявкаБезнал.СчетВзаиморасчетов);
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("ИзменитьСчетВзаиморасчетов", Истина);
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("СчетаВзаиморассчетов", СписокСчетовВзаиморассчетов);
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("НомерСтрокиТЧ", ВыборкаЗаявкаБезнал.НомерСтроки);
			РасшифровкаИзмененияСчетаВзаиморасчетов.Вставить("Заявка", Выборка.Ссылка);
			
			
			Если НЕ ПустаяСтрока(ВыборкаЗаявкаБезнал.ЗаявкаНаЗакупку) Тогда
				ОбластьЗаявкаБезналОбласть2.Параметры.ЗаявкаНаЗакупкуРасшифровка = Новый Структура("ЗаявкаНаЗакупку", ВыборкаЗаявкаБезнал.ЗаявкаНаЗакупку);
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ВыборкаЗаявкаБезнал.ИнвПроект) Тогда
				ОбластьЗаявкаБезналОбласть2.Параметры.ИнвПроектРасшифровка = Новый Структура("ИнвПроект, ЗаявкаНаОплатуПечать", ВыборкаЗаявкаБезнал.ИнвПроект, Истина);
			КонецЕсли;
			
			
			//выводим валюту
			//Если БюджетныйНаСервере.ЭтоПредприятиеНерезидент(ВыборкаЗаявкаБезнал.ЦФО) Тогда
			//	ОбластьЗаявкаБезналОбласть1.Параметры.Валюта = "(" + ?(ЗначениеЗаполнено(ВыборкаЗаявкаБезнал.Валюта), ВыборкаЗаявкаБезнал.Валюта, УЧ_Сервер.НациональнаяВалюта()) + ")";
			//Иначе
			//	ОбластьЗаявкаБезналОбласть1.Параметры.Валюта = ?(ОбластьЗаявкаБезналОбласть1.Параметры.Валюта = УЧ_Сервер.НациональнаяВалюта(), "", ОбластьЗаявкаБезналОбласть1.Параметры.Валюта);	
			//КонецЕсли;
			
			ОбластьЗаявкаБезналОбласть1.Параметры.СуммаДДС = Формат(ОбластьЗаявкаБезналОбласть1.Параметры.СуммаДДС, "ЧДЦ=2"); 
			
			//Если Не БПСервер.ИспользуетсяМеханизмЧастичнойОплаты(Выборка.Предприятие) Или ВыборкаЗаявкаБезнал.СуммаЧастичнойОплаты = 0 Тогда
			//	ОбластьЗаявкаБезналОбласть1.Параметры.СуммаЧастичнойОплаты = "";
			//КонецЕсли;
			
			НайденныеСтрокиРасшифровки = СтрокиРасшифровки.НайтиСтроки(Новый Структура("УИДСтрокиЗаявки", ВыборкаЗаявкаБезнал.УИДСтроки));
			
			Если НайденныеСтрокиРасшифровки.Количество() > 1 Тогда
				ОбластьЗаявкаБезналОбласть1.Параметры.ЦФО = "Предприятие: в расшифровке";
				ОбластьЗаявкаБезналОбласть1.Параметры.Подразделение = "";
				ОбластьЗаявкаБезналОбласть1.Параметры.СтатьяДДС = "Статья ДДС: в расшифровке";
				ОбластьЗаявкаБезналОбласть1.Параметры.СтатьяДДСНаименование = "";
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьЗаявкаБезналОбласть1, 0);
			
			Если ЭтоВалютнаяЗаявка Тогда 	
				ТабДок.Присоединить(ОбластьЗаявкаБезналВалюта,1);
			КонецЕсли;
			
			Если Не ЭтоЗаявкаБезНДС Тогда 	
				ТабДок.Присоединить(ОбластьЗаявкаБезналСуммаНДС,1);
			КонецЕсли;		
			
			ТабДок.Присоединить(ОбластьЗаявкаБезналОтметка, 2,,Ложь);
			ТабДок.Присоединить(ОбластьЗаявкаБезналОбласть2, 2,,Ложь);		
			
			СуммаДДСВсего = СуммаДДСВсего + ?(ВыборкаЗаявкаБезнал.ОтменаОплаты, 0, ВыборкаЗаявкаБезнал.СуммаДДС);
			СуммаНДСВсего = СуммаНДСВсего + ?(ВыборкаЗаявкаБезнал.ОтменаОплаты, 0, ВыборкаЗаявкаБезнал.СуммаНДС);
			
			Для каждого СтрокаРасшифровки ИЗ СтрокиРасшифровки.НайтиСтроки(Новый Структура("УИДСтрокиЗаявки", ВыборкаЗаявкаБезнал.УИДСтроки)) Цикл
				ОбластьРасшифровкаСтрок.Параметры.Заполнить(СтрокаРасшифровки);
				
				Если ВыборкаЗаявкаБезнал.ОтменаОплаты Тогда
					ОбластьЯчеек = ОбластьРасшифровкаСтрок.Область(); 
					ОбластьЯчеек.Узор = ТипУзораТабличногоДокумента.Узор12;
					ОбластьЯчеек.ЦветУзора = новый Цвет(255, 183, 183);
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьРасшифровкаСтрок, 1);
			КонецЦикла; 
			
		КонецЦикла;
		
		Если ЭтоЗаявкаБезНДС Тогда
			ОбластьИтого = Макет.ПолучитьОбласть("ИтогоБезНДС");
		Иначе
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьИтого.Параметры.СуммаНДСВсего = СуммаНДСВсего;
		КонецЕсли;	
		
		ОбластьИтого.Параметры.СуммаДДСВсего = СуммаДДСВсего;
		ТабДок.Вывести(ОбластьИтого, 0);
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
				
		//выводим комментарий
		Если НЕ ПустаяСтрока(Выборка.Комментарий) Тогда
			
			ОбластьКомментарий.Параметры.Комментарий = Выборка.Комментарий;
			ТабДок.Вывести(ОбластьКомментарий);
			
		КонецЕсли;
		
		//показ этапов согласования СЗ
		БПСервер.ПоказатьРецензентов(ТабДок, Выборка.Ссылка, Неопределено, Ссылка, "Штампы|Отметка", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;	
	//}}
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПроверкаСоответствия(ТабДок, Ссылка) Экспорт
	
	
	ЭтоЗаявкаНаОплату = ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование");
	
	ПолныйПросмотрЛимитов = Истина;
	
	Если ПолныйПросмотрЛимитов = Истина Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Дата1 = НачалоМесяца(Ссылка[0].Дата); //исправил на актуальную дату заявки
	Дата2 = КонецМесяца(Ссылка[0].Дата);  //исправил на актуальную дату заявки
	СтруктураБюджетов = БюджетныйНаСервере.ПолучитьВидыБюджетовНаДату(Дата1);	
	РезультатДанные = Документы.Д_ЗаявкаНаОплату.РасчитатьЛимиты(Ссылка[0]);	
	ТаблицаЛимиты = РезультатДанные.Выгрузить();
	_НУ = "";
	
	Макет = Документы.Д_ЗаявкаНаОплату.ПолучитьМакет("ПроверкаСоответствия");
	СуффиксБюдж = "Бюдж";
	
	Если ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Или ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда  
		СуффиксБюдж = "";
		ТабДок.Очистить();
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаявкаБезналШапка = Макет.ПолучитьОбласть("ЗаявкаБезналШапка" + СуффиксБюдж);
	ОбластьИтого = Макет.ПолучитьОбласть("Итого" + СуффиксБюдж);
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Если ВставлятьРазделительСтраниц Тогда
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	//установим пиктограмму в зависимости от проверки на соответствие бюджету
	ВнеБюджета = Ложь;
	
	Для Каждого СтрокаЛимиты Из ТаблицаЛимиты Цикл
		
		Если СтрокаЛимиты.ОсталосьПоСтатье < 0 Тогда
			ВнеБюджета = Истина;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;	
	
	Если ВнеБюджета Тогда
		ОбластьЗаголовок.Рисунки.ПиктограммаПроверкаСоответствия.Картинка = БиблиотекаКартинок.ВажностьНовостиОченьВажная;
	КонецЕсли;	
	
	СписокДляЗаголовка = Новый СписокЗначений;
	СписокДляЗаголовка.ЗагрузитьЗначения(Ссылка);
	ОбластьЗаголовок.Параметры.Ссылка = ?(СписокДляЗаголовка.Количество()>1, СписокДляЗаголовка, Ссылка[0]);
	ОбластьЗаголовок.Параметры.ОтражатьНаПодготовке = "";
	//ОбластьЗаголовок.Параметры.ДатаОплаты = ТекСтрока.Дата;
	//ОбластьЗаголовок.Параметры.Период = " (" + Строка(ПредставлениеПериода(Дата1, Дата2)) + ")";
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьЗаявкаБезналШапка);
	
	ВыборкаДанные = РезультатДанные.Выбрать();
	
	НомерСтроки = 1;
	СуммаВсего = 0;
	
	Пока ВыборкаДанные.Следующий() Цикл
		АктуальныйСценарийУтвержден = 0;
		
		Если ЗначениеЗаполнено(ВыборкаДанные.АктуальныйСценарий) Тогда
			АктуальныйСценарий = ВыборкаДанные.АктуальныйСценарий
		Иначе
			АктуальныйСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Дата2, Ложь)
		КонецЕсли;
		
		Если ЗначениеЗаполнено(АктуальныйСценарий) Тогда
			
			Если АктуальныйСценарий = Справочники.СценарииПланирования.НайтиПоНаименованию("План по СЗ", Истина)  Тогда
				АктуальныйСценарийУтвержден = 1
			Иначе
				ПараметрыБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(ВыборкаДанные.ЦФО, АктуальныйСценарий);
				
				Если ЗначениеЗаполнено(ПараметрыБюджета) Тогда
					АктуальныйСценарийУтвержден = ?(ПараметрыБюджета.Утвержден, 1, 0);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ПараметрыБюджетаГод = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(ВыборкаДанные.ЦФО, АктуальныйСценарий);
		ПараметрыБюджетаКвартал = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(ВыборкаДанные.ЦФО, АктуальныйСценарий);
		ПараметрыБюджетаМесяц = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(ВыборкаДанные.ЦФО, АктуальныйСценарий);
		
		СценарийГодУтвержден = 0;
		СценарийКварталУтвержден = 0;
		СценарийМесяцУтвержден = 0;
		
		Если Не ПараметрыБюджетаГод = Неопределено Тогда
			СценарийГодУтвержден = ?(ПараметрыБюджетаГод.Утвержден, 1, 0);
		КонецЕсли;
		
		Если Не ПараметрыБюджетаКвартал = Неопределено Тогда
			СценарийКварталУтвержден = ?(ПараметрыБюджетаКвартал.Утвержден, 1, 0);
		КонецЕсли;
		
		Если Не ПараметрыБюджетаМесяц = Неопределено Тогда
			СценарийМесяцУтвержден = ?(ПараметрыБюджетаМесяц.Утвержден, 1, 0);
		КонецЕсли;
		
		Если СуффиксБюдж = "Бюдж" Тогда
			_НУ = ?(АктуальныйСценарийУтвержден = 1, "", "_НУ")
		ИначеЕсли Не СценарийГодУтвержден + СценарийКварталУтвержден + СценарийМесяцУтвержден + АктуальныйСценарийУтвержден = 4 Тогда
			_НУ = "_НУ_" + СценарийГодУтвержден + "_" + СценарийКварталУтвержден + "_" + СценарийМесяцУтвержден + "_" + АктуальныйСценарийУтвержден;
		КонецЕсли;
		
		ОбластьЗаявкаБезнал = Макет.ПолучитьОбласть("ЗаявкаБезнал" + СуффиксБюдж + _НУ);
		ОбластьЗаявкаБезнал.Параметры.Заполнить(ВыборкаДанные);		
		ОбластьЗаявкаБезнал.Параметры.НомерСтроки = НомерСтроки;
		
		Если Не АктуальныйСценарийУтвержден Тогда
			
			Если Не РольДоступна("Администратор") И Не РольДоступна("БюджетныйОтдел") Тогда
				ОбластьЗаявкаБезнал.Параметры.Текущий = 0;
				ОбластьЗаявкаБезнал.Параметры.ОсталосьПоСтатье = 0 - ВыборкаДанные.СуммаДДС;
				ОбластьЗаявкаБезнал.Параметры.ОсталосьПоСтатье2 = 0 - ВыборкаДанные.СуммаДДС;
			КонецЕсли;	
			
		КонецЕсли;
		
		//возможность отражения лимита
		//Если ЗапретЛимита Тогда
		//	ОбластьЗаявкаБезнал.Параметры.План1 = 0;
		//	ОбластьЗаявкаБезнал.Параметры.План2 = 0;
		//	ОбластьЗаявкаБезнал.Параметры.План3 = 0;
		//	ОбластьЗаявкаБезнал.Параметры.План4 = 0;
		//	ОбластьЗаявкаБезнал.Параметры.Отклонение = - ВыборкаДанные.ТекФакт - ВыборкаДанные.Заявлено;
		//КонецЕсли;
		
		//СтруктураРасшифровки = Новый Структура("Регистратор, НомерСтроки, СтатьяДДС", ВыборкаДанные.Регистратор, ВыборкаДанные.НомерСтроки, ВыборкаДанные.СтатьяДДС); 
		//ОбластьЗаявкаБезнал.Параметры.РасшифровкаИзменение = СтруктураРасшифровки;
		
		//расшифрока
		//СтруктураРасшифровкиПлан1 = Новый Структура("План1, Счет, Сценарий1, Предприятие, Подразделение, Субконто1, Дата1, Дата2, ВидимостьШапки", "План1",
		//МассивСчетов, СтруктураБюджетов.ГодовойБюджет, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		//ВыборкаДанные.СтатьяДДС, Дата1, Дата2);
		//
		//СтруктураРасшифровкиПлан2 = Новый Структура("План1, Счет, Сценарий1, Предприятие, Подразделение, Субконто1, Дата1, Дата2, ВидимостьШапки", "План1",
		//МассивСчетов, СтруктураБюджетов.КвартальныйБюджет, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		//ВыборкаДанные.СтатьяДДС, Дата1, Дата2);
		//
		//СтруктураРасшифровкиПлан3 = Новый Структура("План1, Счет, Сценарий1, Предприятие, Подразделение, Субконто1, Дата1, Дата2, ВидимостьШапки", "План1",
		//МассивСчетов, СтруктураБюджетов.МесячныйБюджет, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		//ВыборкаДанные.СтатьяДДС, Дата1, Дата2);
		//
		//СтруктураРасшифровкиПлан4 = Новый Структура("План1, Счет, Сценарий1, Предприятие, Подразделение, Субконто1, Дата1, Дата2, ВидимостьШапки", "План1",
		//МассивСчетов, МассивСценариев, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		//ВыборкаДанные.СтатьяДДС, Дата1, Дата2);
		//
		//СтруктураРасшифровкиФакт = Новый Структура("План1, Счет, Сценарий1, Предприятие, Подразделение, Субконто1, Дата1, Дата2, ВидимостьШапки", "План1",
		//МассивСчетов, Справочники.СценарииПланирования.ПланПоЗаявкам, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		//ВыборкаДанные.СтатьяДДС, Дата1, Дата2);
		
		ПодразделениеРасшифровки = ВыборкаДанные.Подразделение;
		
		Если ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
			
			Если Ссылка[0].Подразделение = Справочники.СтруктураПредприятия.НайтиПоНаименованию("Магазины",,,Ссылка[0].Предприятие) Тогда
				ПодразделениеРасшифровки = Справочники.СтруктураПредприятия.НайтиПоНаименованию("Магазины",,,Ссылка[0].Предприятие)
			Иначе
				ПодразделениеРасшифровки = ВыборкаДанные.Подразделение
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураРасшифровкиПлан = Новый Структура("Сценарии, ЦФО, ПодразделениеЦФО, СтатьяДДС, ИнвПроект, Дата1, Дата2, Признак, ЗаявкаНаОплатуПроверкаСоответствия",
		СтруктураБюджетов, ВыборкаДанные.ЦФО, ПодразделениеРасшифровки,
		ВыборкаДанные.СтатьяДДС, ВыборкаДанные.ИнвПроект, Дата1, Дата2, "План", Истина);
		
		СтруктураРасшифровкиФакт = Новый Структура("Сценарии, ЦФО, ПодразделениеЦФО, СтатьяДДС, ИнвПроект, Дата1, Дата2, Признак, ЗаявкаНаОплатуПроверкаСоответствия",
		СтруктураБюджетов, ВыборкаДанные.ЦФО, ВыборкаДанные.Подразделение,
		ВыборкаДанные.СтатьяДДС, ВыборкаДанные.ИнвПроект, Дата1, Дата2, "Факт", Истина);
		
		
		ОбластьЗаявкаБезнал.Параметры.РасшифровкаПлан1 = СтруктураРасшифровкиПлан;
		//ОбластьЗаявкаБезнал.Параметры.РасшифровкаПлан2 = СтруктураРасшифровкиПлан2;
		//ОбластьЗаявкаБезнал.Параметры.РасшифровкаПлан3 = СтруктураРасшифровкиПлан3;
		//ОбластьЗаявкаБезнал.Параметры.РасшифровкаПлан4 = СтруктураРасшифровкиПлан4;
		ОбластьЗаявкаБезнал.Параметры.РасшифровкаФакт = СтруктураРасшифровкиФакт;
		
		
		ТабДок.Вывести(ОбластьЗаявкаБезнал);
		НомерСтроки = НомерСтроки + 1;
		
		//СуммаВсего = СуммаВсего + ВыборкаДанные.Заявлено;
	КонецЦикла;
	
	Если СуффиксБюдж = "" Тогда
		ОбластьИтого.Параметры.СуммаДДСВсего = СуммаВсего;
	КонецЕсли;	
	
	ТабДок.Вывести(ОбластьИтого);
	
	Если Ссылка.Количество() > 0 И ТипЗнч(Ссылка[0]) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
		//проверка на автомаршрут
		ТекБП = БПСервер.ПоискБП("Согласование1", Ссылка[0]);
		
		Если НЕ ТекБП = Неопределено Тогда
			ОбластьЗаголовокСтМаршрут = Макет.ПолучитьОбласть("ЗаголовокСтМаршрут");
			
			Если ТекБП.СтандартныйМаршрут Тогда
				ОбластьЗаголовокСтМаршрут.Параметры.ПроверкаСтМаршрут = "Проверка на стандартный маршрут выполнена!";
			Иначе
				ОбластьЗаголовокСтМаршрут.Параметры.ПроверкаСтМаршрут = "Внимание! Стандартный маршрут отключен.";
				ОбластьЗаголовокСтМаршрут.Рисунки.ПиктограммаПроверкаСтМаршрут.Картинка = БиблиотекаКартинок.ВажностьНовостиОченьВажная;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьЗаголовокСтМаршрут);
		КонецЕсли;	
		
		//проверка на соответствие р/с в заявке исполнителю
		ИсполнительОплаты = Документы.Д_ЗаявкаНаОплату.ПолучитьИсполнителяОплаты(Ссылка[0]);
		
		Если ЗначениеЗаполнено(ИсполнительОплаты) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет,
			|	ЕСТЬNULL(Д_ИсточникППСрезПоследних.ОтветственноеЛицо, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственноеЛицо,
			|	ВЫБОР
			|		КОГДА Д_ИсточникППСрезПоследних.ОтветственноеЛицо = &Исполнитель
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Соответствует
			|ПОМЕСТИТЬ ВТ_Данные
			|ИЗ
			|	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Д_ИсточникПП.СрезПоследних(&Период, ) КАК Д_ИсточникППСрезПоследних
			|		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.БанковскийСчет = Д_ИсточникППСрезПоследних.БанковскиеСчета
			|ГДЕ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = &Ссылка
			|	И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ТипИсточника = ЗНАЧЕНИЕ(Перечисление.Д_ИсточникиСредств.БезНал)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник,
			|	ЕСТЬNULL(Д_ИсточникППСрезПоследних.ОтветственноеЛицо, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)),
			|	ВЫБОР
			|		КОГДА Д_ИсточникППСрезПоследних.ОтветственноеЛицо = &Исполнитель
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ
			|ИЗ
			|	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Д_ИсточникПП.СрезПоследних(&Период, ) КАК Д_ИсточникППСрезПоследних
			|		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Источник = Д_ИсточникППСрезПоследних.БанковскиеСчета
			|ГДЕ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = &Ссылка
			|	И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ТипИсточника = ЗНАЧЕНИЕ(Перечисление.Д_ИсточникиСредств.Нал)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ВТ_Данные.ОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|			ТОГДА ""Не назначен""
			|		ИНАЧЕ ВТ_Данные.ОтветственноеЛицо
			|	КОНЕЦ КАК ОтветственноеЛицо,
			|	ВТ_Данные.Соответствует,
			|	ВТ_Данные.БанковскийСчет
			|ИЗ
			|	ВТ_Данные КАК ВТ_Данные
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Данные.Соответствует,
			|	ВТ_Данные.БанковскийСчет,
			|	ВЫБОР
			|		КОГДА ВТ_Данные.ОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|			ТОГДА ""Не назначен""
			|		ИНАЧЕ ВТ_Данные.ОтветственноеЛицо
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Ссылка[0]);
			Запрос.УстановитьПараметр("Период", Ссылка[0].Дата);
			Запрос.УстановитьПараметр("Исполнитель", ИсполнительОплаты);
			ТаблицаОтветственныхЗаРС = Запрос.Выполнить().Выгрузить();
			ЕстьНесоответствияИсполнителя = Ложь;
			
			Для Каждого СтрокаОтветственныхЗаРС Из ТаблицаОтветственныхЗаРС Цикл
				
				Если СтрокаОтветственныхЗаРС.Соответствует = Ложь Тогда
					ЕстьНесоответствияИсполнителя = Истина;
				КонецЕсли;
				
			КонецЦикла;	
			
			ОбластьЗаголовокПроверкаИсполнителя = Макет.ПолучитьОбласть("ЗаголовокПроверкаИсполнителя");
			
			Если ЕстьНесоответствияИсполнителя Тогда 
				ОбластьЗаголовокПроверкаИсполнителя.Параметры.ПроверкаИсполнителяНаВедениеРС = "Внимание! В заявке присутствуют р/с (кассы) которые не ведутся текущим исполнителем " + ИсполнительОплаты;
				ОбластьЗаголовокПроверкаИсполнителя.Рисунки.ПиктограммаПроверкаИсполнителя.Картинка = БиблиотекаКартинок.ВажностьНовостиОченьВажная;
			Иначе
				ОбластьЗаголовокПроверкаИсполнителя.Параметры.ПроверкаИсполнителяНаВедениеРС = "Все р/с (кассы), используемые в заявке ведутся текущим исполнителем " + ИсполнительОплаты;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьЗаголовокПроверкаИсполнителя);
			
			ОбластьШапкаПроверкаИсполнителя = Макет.ПолучитьОбласть("ШапкаПроверкаИсполнителя");
			ТабДок.Вывести(ОбластьШапкаПроверкаИсполнителя);
			
			ОбластьСтрокиПроверкаИсполнителя = Макет.ПолучитьОбласть("СтрокиПроверкаИсполнителя");
			
			Для Каждого СтрокаОтветственныхЗаРС Из ТаблицаОтветственныхЗаРС Цикл
				ОбластьСтрокиПроверкаИсполнителя.Параметры.БанковскийСчет = СтрокаОтветственныхЗаРС.БанковскийСчет;
				
				Если Не СтрокаОтветственныхЗаРС.Соответствует Тогда
					ОбластьСтрокиПроверкаИсполнителя.Параметры.Ответственный = СтрокаОтветственныхЗаРС.ОтветственноеЛицо;
					ОбластьСтрокиПроверкаИсполнителя.Области.ОбластьБанковскийСчет.ЦветТекста = Новый Цвет(255, 0, 0);
				Иначе
					ОбластьСтрокиПроверкаИсполнителя.Параметры.Ответственный = "";
					ОбластьСтрокиПроверкаИсполнителя.Области.ОбластьБанковскийСчет.ЦветТекста = Новый Цвет(0, 0, 0);
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьСтрокиПроверкаИсполнителя);
			КонецЦикла;
			
		КонецЕсли;
		
		//Проверка на возможность использования Счета контрагента
		Если Ссылка[0].ТипИсточника = Перечисления.Д_ИсточникиСредств.БезНал Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.саб_Закрыт КАК СтатусСчета,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Банк.сабСтатусБанка КАК СтатусБанка,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Банк КАК Банк,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Наименование
			|ИЗ
			|	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
			|ГДЕ
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = &Ссылка
			|	И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
			|			И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента = ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
			|			И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента = НЕОПРЕДЕЛЕНО
			|
			|СГРУППИРОВАТЬ ПО
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.саб_Закрыт,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Банк.сабСтатусБанка,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Банк,
			|	Д_ЗаявкаНаОплатуЗаявкаБезнал.СчетКонтрагента.Наименование";
			Запрос.УстановитьПараметр("Ссылка", Ссылка[0]);
			ТаблицаСчетовКонтрагента = Запрос.Выполнить().Выгрузить();
			ТаблицаСчетовКонтрагента.Колонки.Добавить("Ошибка", Новый ОписаниеТипов(, , , , Новый КвалификаторыСтроки(250)));
			
			Если Не ТаблицаСчетовКонтрагента.Количество() = 0 Тогда
				ЕстьОшибки = Ложь;
				
				Для Каждого СтрокаСчетовКонтрагента Из ТаблицаСчетовКонтрагента Цикл
					СтрокаСчетовКонтрагента.Ошибка = "";
					
					Если сабОбщегоНазначения.СчетНеработающий(СтрокаСчетовКонтрагента.СтатусСчета) Тогда
						ЕстьОшибки = Истина;
						СтрокаСчетовКонтрагента.Ошибка = "Банковский счет " + Строка(СтрокаСчетовКонтрагента.СчетКонтрагентаНаименование) + " - " + Строка(СтрокаСчетовКонтрагента.СтатусСчета) + ". ";
					КонецЕсли;
					
					Если сабОбщегоНазначения.БанкНеработающий(СтрокаСчетовКонтрагента.СтатусБанка) Тогда
						ЕстьОшибки = Истина;
						СтрокаСчетовКонтрагента.Ошибка = СтрокаСчетовКонтрагента.Ошибка + "Банк " + Строка(СтрокаСчетовКонтрагента.Банк) + " - " + Строка(СтрокаСчетовКонтрагента.СтатусБанка);
					КонецЕсли;
					
				КонецЦикла;	
				
				ОбластьЗаголовокПроверкаСчета = Макет.ПолучитьОбласть("ЗаголовокПроверкаСчета");
				
				Если ЕстьОшибки Тогда 
					ОбластьЗаголовокПроверкаСчета.Параметры.ПроверкаСчетовНаВозможностьИспользования = "Внимание! В заявке присутствуют р/с контрагента не прошедшие проверку!";
					ОбластьЗаголовокПроверкаСчета.Рисунки.ПиктограммаПроверкаСчета.Картинка = БиблиотекаКартинок.ВажностьНовостиОченьВажная;
				Иначе
					ОбластьЗаголовокПроверкаСчета.Параметры.ПроверкаСчетовНаВозможностьИспользования = "Все р/с контрагента, используемые в заявке прошли проверку!";
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьЗаголовокПроверкаСчета);				
				ОбластьШапкаПроверкаСчета = Макет.ПолучитьОбласть("ШапкаПроверкаСчета");
				ТабДок.Вывести(ОбластьШапкаПроверкаСчета);				
				ОбластьСтрокиПроверкаСчета = Макет.ПолучитьОбласть("СтрокиПроверкаСчета");
				
				Для Каждого СтрокаСчетовКонтрагента Из ТаблицаСчетовКонтрагента Цикл
					ОбластьСтрокиПроверкаСчета.Параметры.СчетКонтрагента = СтрокаСчетовКонтрагента.СчетКонтрагента;
					
					Если ЗначениеЗаполнено(СтрокаСчетовКонтрагента.Ошибка) Тогда
						ОбластьСтрокиПроверкаСчета.Параметры.Ошибка = СтрокаСчетовКонтрагента.Ошибка;
						ОбластьСтрокиПроверкаСчета.Области.ОбластьСчетКонтрагента.ЦветТекста = Новый Цвет(255, 0, 0);
					Иначе
						ОбластьСтрокиПроверкаСчета.Параметры.Ошибка = СтрокаСчетовКонтрагента.Ошибка;
						ОбластьСтрокиПроверкаСчета.Области.ОбластьСчетКонтрагента.ЦветТекста = Новый Цвет(0, 0, 0);
					КонецЕсли;
					
					ТабДок.Вывести(ОбластьСтрокиПроверкаСчета);
				КонецЦикла;	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//Проверка задолженности
	//Если рольдоступна("сабУчетчик") Тогда
	//	ПроверкаЗадолженности(ТабДок, Ссылка, Макет);
	//КонецЕсли;	
	
	ВставлятьРазделительСтраниц = Истина;
	
КонецПроцедуры

Функция ПоискУжеЗапущенныхБП(Ссылка) Экспорт
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_ЗаявкаНаОплату.Ссылка
	|ПОМЕСТИТЬ ДокументСсылка
	|ИЗ
	|	Документ.Д_ЗаявкаНаОплату КАК Д_ЗаявкаНаОплату
	|ГДЕ
	|	Д_ЗаявкаНаОплату.Дата = &Дата
	|	И Д_ЗаявкаНаОплату.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задача.Ссылка
	|ИЗ
	|	ДокументСсылка КАК ДокументСсылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	|		ПО ДокументСсылка.Ссылка = Задача.Заявка
	|ГДЕ
	|	Задача.Заявка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Ссылка.Дата);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка.Количество();
КонецФункции // ()

Процедура ПроверкаПереносаЛимитов(ТабДок, МассивСсылок) Экспорт
	
	
	Макет = Документы.Д_ЗаявкаНаОплату.ПолучитьМакет("ПроверкаПереноса");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаявкаБезналШапка = Макет.ПолучитьОбласть("ЗаявкаБезналШапка");
	ОбластьЗаявкаБезнал = Макет.ПолучитьОбласть("ЗаявкаБезнал");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабДок.Очистить();
	
	
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Для каждого ТекЗаявка Из МассивСсылок Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТекущаяЗаявка.СтатьяДДС,
		|	-ЕСТЬNULL(Годовой.СуммаОборот, 0) КАК План,
		|	ЕСТЬNULL(ФактЗаявки.СуммаДДС, 0) КАК Факт,
		|	ЕСТЬNULL(ТекущаяЗаявка.СуммаДДС, 0) КАК ТекущийПеренос,
		|	ЕСТЬNULL(СуммаПланаМинус.Сумма, 0) КАК ПрочиеПереносы,
		|	-ЕСТЬNULL(Годовой.СуммаОборот, 0) - (ЕСТЬNULL(ФактЗаявки.СуммаДДС, 0) + ЕСТЬNULL(ТекущаяЗаявка.СуммаДДС, 0) + ЕСТЬNULL(СуммаПланаМинус.Сумма, 0)) + ЕСТЬNULL(СуммаПланаПлюс.СуммаДДС, 0) КАК Отклонение,
		|	ЕСТЬNULL(СуммаПланаПлюс.СуммаДДС, 0) КАК ПрочиеПереносыПлюс,
		|	-ЕСТЬNULL(Годовой.СуммаОборот, 0) - ЕСТЬNULL(СуммаПланаМинус.Сумма, 0) + ЕСТЬNULL(СуммаПланаПлюс.СуммаДДС, 0) КАК ИтогоПлан,
		|	ТекущаяЗаявка.Предприятие
		|ИЗ
		|	(ВЫБРАТЬ
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
		|		СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС) КАК СуммаДДС,
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие КАК Предприятие
		|	ИЗ
		|		Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
		|	ГДЕ
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = &Ссылка
		|		И Д_ЗаявкаНаОплатуЗаявкаБезнал.ПереносЛимита = ИСТИНА
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС,
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие) КАК ТекущаяЗаявка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.Обороты(
		|				&Дата1,
		|				&Дата2,
		|				Месяц,
		|				Счет В ИЕРАРХИИ (&ДенежныеСчета),
		|				,
		|				СценарийПлана В
		|						(ВЫБРАТЬ
		|							СценарииПланирования.Ссылка
		|						ИЗ
		|							Справочник.СценарииПланирования КАК СценарииПланирования
		|						ГДЕ
		|							СценарииПланирования.Родитель = &Сценарий
		|							И СценарииПланирования.ВлкючатьВПлан = ИСТИНА)
		|					ИЛИ СценарийПлана В (&Сценарий)
		|					ИЛИ СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПланПоСЗ)
		|						И Предприятия В ИЕРАРХИИ (&Предприятия)
		|						И Подразделение В (&Подразделение),
		|				,
		|				) КАК Годовой
		|		ПО ТекущаяЗаявка.СтатьяДДС = Годовой.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
		|			СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС) КАК СуммаДДС
		|		ИЗ
		|			Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
		|		ГДЕ
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
		|			И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Ссылка = &Ссылка
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО В ИЕРАРХИИ(&Предприятия)
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение В(&Подразделение)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС) КАК ФактЗаявки
		|		ПО ТекущаяЗаявка.СтатьяДДС = ФактЗаявки.СтатьяДДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
		|			СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС) КАК Сумма
		|		ИЗ
		|			Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
		|		ГДЕ
		|			НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Ссылка = &Ссылка
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие В ИЕРАРХИИ(&Предприятия)
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Подразделение В(&Подразделение)
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|			И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО В ИЕРАРХИИ (&Предприятия)
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ПереносЛимита = ИСТИНА
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС) КАК СуммаПланаМинус
		|		ПО ТекущаяЗаявка.СтатьяДДС = СуммаПланаМинус.СтатьяДДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
		|			СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС) КАК СуммаДДС
		|		ИЗ
		|			Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
		|		ГДЕ
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО В ИЕРАРХИИ(&Предприятия)
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ПереносЛимита = ИСТИНА
		|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение В(&Подразделение)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС) КАК СуммаПланаПлюс
		|		ПО ТекущаяЗаявка.СтатьяДДС = СуммаПланаПлюс.СтатьяДДС";
		
		
		МассивСчетов = Новый Массив;
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5001());
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5101());
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5501());
		
		СтруктураБюджетов = БюджетныйНаСервере.ПолучитьВидыБюджетовНаДату(ТекущаяДата());
		ТекПП = ?(НЕ ЗначениеЗаполнено(ТекЗаявка.Предприятие.Родитель), ТекЗаявка.Предприятие, ТекЗаявка.Предприятие.Родитель);
		Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ТекЗаявка.Дата));
		Запрос.УстановитьПараметр("Дата2", КонецМесяца(ТекЗаявка.Дата));
		Запрос.УстановитьПараметр("Ссылка", ТекЗаявка);
		Запрос.УстановитьПараметр("Предприятия", ТекЗаявка.Предприятие);
		Запрос.УстановитьПараметр("Подразделение", ТекЗаявка.Подразделение);
		Запрос.УстановитьПараметр("ДенежныеСчета", МассивСчетов);
		Запрос.УстановитьПараметр("Сценарий", БюджетныйНаСервере.ПолучитьАктуальныйСценарий(ТекЗаявка.Дата));
		
		
		
		РезультатДанные = Запрос.Выполнить();
		ВыборкаДанные = РезультатДанные.Выбрать();
		
		
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = ТекЗаявка;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ТабДок.Вывести(ОбластьЗаявкаБезналШапка);
		
		СуммаВсего = 0;
		Пока ВыборкаДанные.Следующий() Цикл
			
			ОбластьЗаявкаБезнал.Параметры.Заполнить(ВыборкаДанные);
			ТабДок.Вывести(ОбластьЗаявкаБезнал);
			
		КонецЦикла;
		
		
		//ОбластьИтого.Параметры.СуммаДДСВсего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтого);
		
	КонецЦикла; 
КонецПроцедуры

Процедура ПроверкаТекущегоСчета(ТабДок, МассивСсылок) Экспорт
	
	
	Макет = Документы.Д_ЗаявкаНаОплату.ПолучитьМакет("ПроверкаТекущегоСчета");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаявкаБезналШапка = Макет.ПолучитьОбласть("ЗаявкаБезналШапка");
	ОбластьЗаявкаБезнал = Макет.ПолучитьОбласть("ЗаявкаБезнал");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабДок.Очистить();
	
	
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Для каждого ТекЗаявка Из МассивСсылок Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТекущаяЗаявка.Предприятие,
		|	ЕСТЬNULL(Казна100.СуммаОстатокКт, 0) - ЕСТЬNULL(Казна100.СуммаОстатокДт, 0) КАК Факт100,
		|	ЕСТЬNULL(Казна200.СуммаОстатокДт, 0) - ЕСТЬNULL(Казна200.СуммаОстатокКт, 0) КАК Факт200,
		|	ТекущаяЗаявка.СуммаДДС КАК ТекЗаявка,
		|	ЕСТЬNULL(Казна100.СуммаОстатокКт, 0) - ЕСТЬNULL(Казна100.СуммаОстатокДт, 0) - ЕСТЬNULL(ТекущаяЗаявка.СуммаДДС, 0) КАК Факт,
		|	ЕСТЬNULL(Казна200.СуммаОстатокДт, 0) - ЕСТЬNULL(Казна200.СуммаОстатокКт, 0) - (ЕСТЬNULL(Казна100.СуммаОстатокКт, 0) - ЕСТЬNULL(Казна100.СуммаОстатокДт, 0) - ЕСТЬNULL(ТекущаяЗаявка.СуммаДДС, 0)) КАК Отклонение
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС) КАК СуммаДДС,
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО КАК Предприятие
		|	ИЗ
		|		Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
		|	ГДЕ
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = &Ссылка
		|		И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Самооплата = ЛОЖЬ
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО) КАК ТекущаяЗаявка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Казна.Остатки(
		|				&Дата2,
		|				Счет В (ЗНАЧЕНИЕ(ПланСчетов.Казна.ТекущиеСчета)),
		|				,
		|				Предприятия В (&ПредприятиеКазна)
		|					И Субконто1 В (&Предприятия)) КАК Казна100
		|		ПО ТекущаяЗаявка.Предприятие = Казна100.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Казна.Остатки(
		|				&Дата2,
		|				Счет В (ЗНАЧЕНИЕ(ПланСчетов.Казна.Кредиты)),
		|				,
		|				Предприятия В (&ПредприятиеКазна)
		|					И Субконто1 В (&Предприятия)) КАК Казна200
		|		ПО ТекущаяЗаявка.Предприятие = Казна200.Субконто1";
		
		
		МассивСчетов = Новый Массив;
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5001());
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5101());
		МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет5501());
		
		СтруктураБюджетов = БюджетныйНаСервере.ПолучитьВидыБюджетовНаДату(ТекущаяДата());
		ТекПП = ?(Не ЗначениеЗаполнено(ТекЗаявка.Предприятие.Родитель), ТекЗаявка.Предприятие, ТекЗаявка.Предприятие.Родитель);
		Запрос.УстановитьПараметр("ПредприятиеКазна", Константы.сабПредприятиеКазна.Получить());
		Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ТекЗаявка.Дата));
		Запрос.УстановитьПараметр("Дата2", ТекЗаявка.Дата);
		Запрос.УстановитьПараметр("Ссылка", ТекЗаявка);
		Запрос.УстановитьПараметр("Предприятия", ТекЗаявка.ЗаявкаБезнал.ВыгрузитьКолонку("ЦФО"));
		
		
		
		РезультатДанные = Запрос.Выполнить();
		ВыборкаДанные = РезультатДанные.Выбрать();
		
		
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = ТекЗаявка;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ТабДок.Вывести(ОбластьЗаявкаБезналШапка);
		
		СуммаВсего = 0;
		Пока ВыборкаДанные.Следующий() Цикл
			
			ОбластьЗаявкаБезнал.Параметры.Заполнить(ВыборкаДанные);
			ТабДок.Вывести(ОбластьЗаявкаБезнал);
		КонецЦикла;
		
		
		//ОбластьИтого.Параметры.СуммаДДСВсего = СуммаВсего;
		ТабДок.Вывести(ОбластьИтого);
		
	КонецЦикла; 
КонецПроцедуры

Процедура ПроверкаЗадолженности(ТабДок, МассивСсылок, Макет = Неопределено) экспорт
	
	Если Макет = Неопределено Тогда
		Макет = Документы.Д_ЗаявкаНаОплату.ПолучитьМакет("ПроверкаЗадолженности");
		ТабДок.Очистить();
	КонецЕсли;	
	
	ОбластьЗаголовокИШапка = Макет.ПолучитьОбласть("ЗаголовокЗадолженность");
	ОбластьСтрокиИтого = Макет.ПолучитьОбласть("СтрокиИтогоЗадолженность");
	ОбластьСтрокиИтого_Отклонение = Макет.ПолучитьОбласть("СтрокиИтогоЗадолженность_Отклонение");
	ОбластьСтроки = Макет.ПолучитьОбласть("СтрокиЗадолженность");
	ОбластьСтроки_Отклонение = Макет.ПолучитьОбласть("СтрокиЗадолженность_Отклонение");
	ОбластьСтрокиСуб2 = Макет.ПолучитьОбласть("СтрокиСуб2Задолженность");
	ОбластьСтрокиСуб2_Отклонение = Макет.ПолучитьОбласть("СтрокиСуб2Задолженность_Отклонение");    
	ОбластьСтрокиПредприятия = Макет.ПолучитьОбласть("СтрокиПредприятияЗадолженность");
	ОбластьСтрокиПредприятия_Отклонение = Макет.ПолучитьОбласть("СтрокиПредприятияЗадолженность_Отклонение");
	
	МассивСчетов = Новый Массив;
	//МассивСчетов.Добавить(ПланыСчетов.Учетный.РасчетыСПодотчетными);
	МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет60());
	МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет62());
	МассивСчетов.Добавить(ПланыСчетов.Учетный.Счет76());
	
	Если Не ТипЗнч(МассивСсылок) = Тип("Массив") Тогда
		ТекЗаявка = МассивСсылок; 
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(МассивСсылок);	
	КонецЕсли;
	
	МассивКонтрагентов = Новый Массив;
	Для каждого ТекЗаявка Из МассивСсылок Цикл
		Если ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
			МассивКонтрагентов.Добавить(ТекЗаявка.Контрагент);		
		ИначеЕсли ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
			Для каждого ТекСтрока Из ТекЗаявка.ЗаявкаБезнал Цикл
				МассивКонтрагентов.Добавить(ТекСтрока.Контрагент);		
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Счета", МассивСчетов);
	Запрос.УстановитьПараметр("ПредприятиеКазна",Справочники.Предприятия.ПустаяСсылка()); 
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("МассивКонтрагентов", МассивКонтрагентов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент КАК Подотчетчик,
	               |	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	УчетныйОстатки.Счет КАК Счет,
	               |	УчетныйОстатки.СуммаОстатокДт КАК ОстатокДт,
	               |	УчетныйОстатки.СуммаОстатокКт КАК ОстатокКт,
	               |	УчетныйОстатки.Субконто2 КАК Субконто2,
	               |	УчетныйОстатки.Предприятия КАК Предприятия,
	               |	ВЫБОР
	               |		КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор
	               |			ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаДДС,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор
	               |				ТОГДА УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт - Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	               |			ИНАЧЕ УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт
	               |		КОНЕЦ, 0) КАК Отклонение
	               |ИЗ
	               |	Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Остатки(&Дата, Счет В ИЕРАРХИИ (&Счета), , Субконто1 В (&МассивКонтрагентов)) КАК УчетныйОстатки
	               |		ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент = УчетныйОстатки.Субконто1
	               |ГДЕ
	               |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка В(&МассивСсылок)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Контрагент,
	               |	УчетныйОстатки.Счет,
	               |	УчетныйОстатки.СуммаОстатокДт,
	               |	УчетныйОстатки.СуммаОстатокКт,
	               |	УчетныйОстатки.Субконто2,
	               |	УчетныйОстатки.Предприятия,
	               |	ВЫБОР
	               |		КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор
	               |			ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор,
	               |	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0),
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаОплатуЗаявкаБезнал.Договор
	               |				ТОГДА УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт - Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	               |			ИНАЧЕ УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт
	               |		КОНЕЦ, 0)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Д_ЗаявкаНаФинансирование.Контрагент,
	               |	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0),
	               |	УчетныйОстатки.Счет,
	               |	УчетныйОстатки.СуммаОстатокДт,
	               |	УчетныйОстатки.СуммаОстатокКт,
	               |	УчетныйОстатки.Субконто2,
	               |	УчетныйОстатки.Предприятия,
	               |	ВЫБОР
	               |		КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаФинансирование.Договор
	               |			ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаФинансирование.Договор
	               |				ТОГДА УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт - Д_ЗаявкаНаФинансирование.Сумма
	               |			ИНАЧЕ УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт
	               |		КОНЕЦ, 0)
	               |ИЗ
	               |	Документ.Д_ЗаявкаНаФинансирование КАК Д_ЗаявкаНаФинансирование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Остатки(&Дата, Счет В ИЕРАРХИИ (&Счета), , Субконто1 В (&МассивКонтрагентов)) КАК УчетныйОстатки
	               |		ПО Д_ЗаявкаНаФинансирование.Контрагент = УчетныйОстатки.Субконто1
	               |ГДЕ
	               |	Д_ЗаявкаНаФинансирование.Ссылка В(&МассивСсылок)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_ЗаявкаНаФинансирование.Контрагент,
	               |	УчетныйОстатки.Счет,
	               |	УчетныйОстатки.СуммаОстатокДт,
	               |	УчетныйОстатки.СуммаОстатокКт,
	               |	УчетныйОстатки.Субконто2,
	               |	УчетныйОстатки.Предприятия,
	               |	Д_ЗаявкаНаФинансирование.Договор,
	               |	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0),
	               |	ВЫБОР
	               |		КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаФинансирование.Договор
	               |			ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА УчетныйОстатки.Субконто2 = Д_ЗаявкаНаФинансирование.Договор
	               |				ТОГДА УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт - Д_ЗаявкаНаФинансирование.Сумма
	               |			ИНАЧЕ УчетныйОстатки.СуммаОстатокКт - УчетныйОстатки.СуммаОстатокДт
	               |		КОНЕЦ, 0)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Счет,
	               |	Подотчетчик
	               |ИТОГИ
	               |	СУММА(ОстатокДт),
	               |	СУММА(ОстатокКт),
	               |	СУММА(СуммаДДС),
	               |	СУММА(Отклонение)
	               |ПО
	               |	Подотчетчик,
	               |	Счет,
	               |	Предприятия
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	
	Макет.НачатьАвтогруппировкуСтрок();
	
	ОбластьЗаголовокИШапка.Параметры.ТекДата = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy") ;
	Табдок.Вывести(ОбластьЗаголовокИШапка);
	
	
	ВыборкаСчетПодотчетчик = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подотчетчик");
	Пока ВыборкаСчетПодотчетчик.Следующий() Цикл
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		Если ВыборкаСчетПодотчетчик.Отклонение < 0 Тогда
			ОбластьСтрокиИтого_Отклонение.Параметры.Заполнить(ВыборкаСчетПодотчетчик);
			ТабДок.Вывести(ОбластьСтрокиИтого_Отклонение, 1,, Ложь);
		Иначе  	
			ОбластьСтрокиИтого.Параметры.Заполнить(ВыборкаСчетПодотчетчик);
			ТабДок.Вывести(ОбластьСтрокиИтого, 1,, Ложь);
		КонецЕсли;
		ВыборкаСчет = ВыборкаСчетПодотчетчик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Счет");
		Пока ВыборкаСчет.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаСчет.Счет) Тогда
				Продолжить;			
			КонецЕсли;
			
			Если ВыборкаСчет.Отклонение < 0 Тогда
				ОбластьСтроки_Отклонение.Параметры.Заполнить(ВыборкаСчет);
				ТабДок.Вывести(ОбластьСтроки_Отклонение, 2,, Ложь);
			Иначе  	
				ОбластьСтроки.Параметры.Заполнить(ВыборкаСчет);
				ТабДок.Вывести(ОбластьСтроки, 2,, Ложь);
			КонецЕсли;
			
			//ОбластьСтроки.Параметры.Заполнить(ВыборкаСчет);
			//ТабДок.Вывести(ОбластьСтроки, 2,, Ложь);
			
			ВыборкаПредприятия = ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Предприятия");
			Пока ВыборкаПредприятия.Следующий() Цикл
				Если ВыборкаПредприятия.Отклонение < 0 Тогда
					ОбластьСтрокиПредприятия_Отклонение.Параметры.Заполнить(ВыборкаПредприятия);
					ТабДок.Вывести(ОбластьСтрокиПредприятия_Отклонение, 3,, Ложь);
				Иначе  	
					ОбластьСтрокиПредприятия.Параметры.Заполнить(ВыборкаПредприятия);
					ТабДок.Вывести(ОбластьСтрокиПредприятия, 3,, Ложь);
				КонецЕсли;
				
				ВыборкаДетальныеЗаписи = ВыборкаПредприятия.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "");
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					
					Если ВыборкаДетальныеЗаписи.Отклонение < 0 Тогда
						ОбластьСтрокиСуб2_Отклонение.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Субконто2) Тогда
							ОбластьСтрокиСуб2.Параметры.Субконто2 = "<...>";						
						КонецЕсли;
						
						ТабДок.Вывести(ОбластьСтрокиСуб2_Отклонение, 4,, Ложь);
					Иначе 
						ОбластьСтрокиСуб2.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
						Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Субконто2) Тогда
							ОбластьСтрокиСуб2.Параметры.Субконто2 = "<...>";						
						КонецЕсли;
						ТабДок.Вывести(ОбластьСтрокиСуб2, 4,, Ложь);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ТабДок.ЗакончитьАвтогруппировкуСтрок();
			
		КонецЦикла;
	КонецЦикла;
	
	
	Макет.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.ФиксацияСверху = 5;
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ТекЭл = Справочники.сабМониторВнедрения.НайтиПоНаименованию("ИспользоватьБизнесПроцессы", Истина);
	Если ЗначениеЗаполнено(ТекЭл) И ТекЭл.Значение Тогда
		Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
			СтандартнаяОбработка = Ложь;
			ПараметрыСеанса.СтруктураПараметровФормСпискаДокументооборота = Новый ФиксированнаяСтруктура(Новый Структура("ВидВнутреннегоДокумента, ИмяДокумента, ФормаВыбора", Справочники.Д_ВидыВнутреннихДокументов.ПолучитьЭлементПредопределенный("ЗаявкаНаОплату"), "Д_ЗаявкаНаОплату", ВидФормы = "ФормаВыбора"));
			ВыбраннаяФорма = "Документ.Д_ЗаявкаНаОплату.Форма.ФормаСпискаБП";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПрогнозныйФакт(ИнвПроектТЧДок, ДатаДокумента)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!		
	ФактВсего = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТекЗаявка.СтатьяДДС,
	|	СУММА(ЕСТЬNULL(ТекЗаявка.СуммаДДС, 0)) КАК ФактВсего,
	|	ТекЗаявка.ЦФО КАК ЦФО,
	|	ТекЗаявка.Подразделение КАК Подразделение,
	|	ТекЗаявка.ИнвПроект,
	|	СУММА(ТекЗаявка.Исполнено) КАК Факт,
	|	СУММА(ЕСТЬNULL(ТекЗаявка.СуммаДДС, 0) - ТекЗаявка.Исполнено) КАК Заявлено,
	|	ЕСТЬNULL(План.План1, 0) КАК План1,
	|	ЕСТЬNULL(План.План2, 0) КАК План2,
	|	ЕСТЬNULL(План.План3, 0) КАК План3,
	|	ЕСТЬNULL(План.План4, 0) КАК План4,
	|	ЕСТЬNULL(План.План_четыре, 0) - ЕСТЬNULL(ТекЗаявка.СуммаДДС, 0) КАК Отклонение,
	|	ЕСТЬNULL(План.ПланНаСогласовании, 0) КАК ПланНаСогласовании
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.СтатьяДДС КАК СтатьяДДС,
	|		СУММА(ВложенныйЗапрос.СуммаДДС) КАК СуммаДДС,
	|		ВложенныйЗапрос.ЦФО КАК ЦФО,
	|		ВложенныйЗапрос.Подразделение КАК Подразделение,
	|		ВложенныйЗапрос.ИнвПроект КАК ИнвПроект,
	|		СУММА(ВложенныйЗапрос.Исполнено) КАК Исполнено
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
	|			СУММА(ВЫБОР
	|					КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	|						ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК СуммаДДС,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО КАК ЦФО,
	|			ВЫБОР
	|				КОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО.УчетПоПодразделениям
	|					ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение
	|				ИНАЧЕ ""Основное""
	|			КОНЕЦ КАК Подразделение,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка КАК Ссылка,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата КАК Дата,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект КАК ИнвПроект,
	|			СУММА(ВЫБОР
	|					КОГДА Согласование1.Завершен = ИСТИНА
	|						ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Исполнено
	|		ИЗ
	|			Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Согласование1 КАК Согласование1
	|				ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Согласование1.Заявка
	|					И (Согласование1.ПометкаУдаления = ЛОЖЬ)
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	|				ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.УИДСтрокиДокОснования
	|					И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	|					И (Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|					И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование
	|		ГДЕ
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
	|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	|			И (Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие В (&ДоступныеПредприятия)
	|					ИЛИ Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО В (&ДоступныеПредприятия)
	|					ИЛИ Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Автор В (&Автор))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата,
	|			Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект,
	|			ВЫБОР
	|				КОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО.УчетПоПодразделениям
	|					ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение
	|				ИНАЧЕ ""Основное""
	|			КОНЕЦ
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма,
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	|			ВЫБОР
	|				КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие.УчетПоПодразделениям
	|					ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение
	|				ИНАЧЕ ""Основное""
	|			КОНЕЦ,
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка,
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Дата,
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект,
	|			 Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	|		ИЗ
	|			Документ.Д_ЗаявкаНаАвансовыйОтчет.Затраты КАК Д_ЗаявкаНаАвансовыйОтчетЗатраты
	|		ГДЕ
	|			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ПометкаУдаления = ЛОЖЬ
	|			И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			И (Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Предприятие В (&ДоступныеПредприятия)
	|					ИЛИ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие В (&ДоступныеПредприятия)
	|					ИЛИ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Автор В (&Автор))) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.СтатьяДДС,
	|		ВложенныйЗапрос.ЦФО,
	|		ВложенныйЗапрос.Подразделение,
	|		ВложенныйЗапрос.ИнвПроект) КАК ТекЗаявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(ВложенныйЗапрос.План1) КАК План1,
	|			СУММА(ВложенныйЗапрос.План2) КАК План2,
	|			СУММА(ВложенныйЗапрос.План3) КАК План3,
	|			СУММА(ВложенныйЗапрос.План4) КАК План4,
	|			ВложенныйЗапрос.Статья КАК Статья,
	|			ВложенныйЗапрос.Подразделение КАК Подразделение,
	|			ВложенныйЗапрос.Предприятия КАК Предприятия,
	|			ВложенныйЗапрос.ИнвПроект КАК ИнвПроект,
	|			СУММА(ВложенныйЗапрос.ПланНаСогласовании) КАК ПланНаСогласовании,
	|			СУММА(ВложенныйЗапрос.План_четыре) КАК План_четыре
	|		ИЗ
	|			(ВЫБРАТЬ
	|				СУММА(-ВЫБОР
	|						КОГДА БюджетныйОбороты.СценарийПлана = &СценарийГод
	|								ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийГод)
	|									И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|							ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК План1,
	|				СУММА(-ВЫБОР
	|						КОГДА БюджетныйОбороты.СценарийПлана = &СценарийКвартал
	|								ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийКвартал)
	|									И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|							ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК План2,
	|				СУММА(-ВЫБОР
	|						КОГДА БюджетныйОбороты.СценарийПлана = &СценарийМесяц
	|								ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийМесяц)
	|									И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|							ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК План3,
	|				СУММА(-ВЫБОР
	|						КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|								ИЛИ БюджетныйОбороты.СценарийПлана = &ПланПоСЗ
	|								ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|									И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|							ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|						ИНАЧЕ 0
	|					КОНЕЦ) КАК План4,
	|				БюджетныйОбороты.Субконто1 КАК Статья,
	|				ВЫБОР
	|					КОГДА БюджетныйОбороты.Предприятия.УчетПоПодразделениям
	|						ТОГДА БюджетныйОбороты.Подразделение
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ КАК Подразделение,
	|				БюджетныйОбороты.Предприятия КАК Предприятия,
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	|							И НЕ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|						ТОГДА БюджетныйОбороты.КорСубконто2
	|					КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	|							И НЕ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|						ТОГДА БюджетныйОбороты.КорСубконто2
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ КАК ИнвПроект,
	|				0 КАК ПланНаСогласовании,
	|				-ВЫБОР
	|					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|							ИЛИ БюджетныйОбороты.СценарийПлана = &ПланПоСЗ
	|							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|						ТОГДА ВЫБОР
	|								КОГДА Б_ПараметрыБюджета.Утвержден
	|										ИЛИ БюджетныйОбороты.СценарийПлана = &ПланПоСЗ
	|									ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК План_четыре
	|			ИЗ
	|				РегистрБухгалтерии.Учетный.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						,
	|						Счет В ИЕРАРХИИ (&СчетаДС),
	|						,
	|						СценарийПлана = &СценарийГод
	|							ИЛИ СценарийПлана = &СценарийКвартал
	|							ИЛИ СценарийПлана = &СценарийМесяц
	|							ИЛИ СценарийПлана = Неопределено
	|							ИЛИ СценарийПлана = &СценарийАктуальный
	|							ИЛИ СценарийПлана В
	|								(ВЫБРАТЬ
	|									СценарииПланирования.Ссылка
	|								ИЗ
	|									Справочник.СценарииПланирования КАК СценарииПланирования
	|								ГДЕ
	|									(СценарииПланирования.Родитель = &СценарийГод
	|										ИЛИ СценарииПланирования.Родитель = &СценарийКвартал
	|										ИЛИ СценарииПланирования.Родитель = &СценарийМесяц
	|										ИЛИ СценарииПланирования.Родитель = Неопределено
	|										ИЛИ СценарииПланирования.Родитель = &СценарийАктуальный)
	|									И СценарииПланирования.ВлкючатьВПлан = ИСТИНА),
	|						,
	|						) КАК БюджетныйОбороты
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПараметрыБюджета КАК Б_ПараметрыБюджета
	|					ПО БюджетныйОбороты.Предприятия = Б_ПараметрыБюджета.Предприятие
	|						И БюджетныйОбороты.СценарийПлана = Б_ПараметрыБюджета.Сценарий
	|			
	|			СГРУППИРОВАТЬ ПО
	|				БюджетныйОбороты.Субконто1,
	|				БюджетныйОбороты.Предприятия,
	|				ВЫБОР
	|					КОГДА БюджетныйОбороты.Предприятия.УчетПоПодразделениям
	|						ТОГДА БюджетныйОбороты.Подразделение
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	|							И НЕ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|						ТОГДА БюджетныйОбороты.КорСубконто2
	|					КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	|							И НЕ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|						ТОГДА БюджетныйОбороты.КорСубконто2
	|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	|				КОНЕЦ,
	|				-ВЫБОР
	|					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|							ИЛИ БюджетныйОбороты.СценарийПлана = &ПланПоСЗ
	|							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|						ТОГДА ВЫБОР
	|								КОГДА Б_ПараметрыБюджета.Утвержден
	|										ИЛИ БюджетныйОбороты.СценарийПлана = &ПланПоСЗ
	|									ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				0,
	|				0,
	|				0,
	|				0,
	|				Д_ЗаявкаНаКорректировкуБюджетаСЗ.СтатьяБДДС,
	|				ВЫБОР
	|					КОГДА Д_ЗаявкаНаКорректировкуБюджетаСЗ.ЦФО.УчетПоПодразделениям
	|						ТОГДА Д_ЗаявкаНаКорректировкуБюджетаСЗ.ВидДеятельности
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ,
	|				Д_ЗаявкаНаКорректировкуБюджетаСЗ.ЦФО,
	|				ВЫБОР
	|					КОГДА Д_ЗаявкаНаКорректировкуБюджетаСЗ.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|							ИЛИ Д_ЗаявкаНаКорректировкуБюджетаСЗ.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					ИНАЧЕ Д_ЗаявкаНаКорректировкуБюджетаСЗ.ИнвПроект
	|				КОНЕЦ,
	|				Д_ЗаявкаНаКорректировкуБюджетаСЗ.СуммаБДДС,
	|				0
	|			ИЗ
	|				Справочник.Согласование2 КАК Согласование2
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаКорректировкуБюджета.СЗ КАК Д_ЗаявкаНаКорректировкуБюджетаСЗ
	|					ПО Согласование2.Заявка = Д_ЗаявкаНаКорректировкуБюджетаСЗ.Ссылка
	|			ГДЕ
	|				Согласование2.ПометкаУдаления = ЛОЖЬ
	|				И Согласование2.Стартован = ИСТИНА
	|				И Согласование2.Завершен = ЛОЖЬ) КАК ВложенныйЗапрос
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.Статья,
	|			ВложенныйЗапрос.Подразделение,
	|			ВложенныйЗапрос.Предприятия,
	|			ВложенныйЗапрос.ИнвПроект) КАК План
	|		ПО ТекЗаявка.СтатьяДДС = План.Статья
	|			И ТекЗаявка.ЦФО = План.Предприятия
	|			И ТекЗаявка.Подразделение = План.Подразделение
	|			И (ВЫБОР
	|				КОГДА ТекЗаявка.ИнвПроект = НЕОПРЕДЕЛЕНО
	|						ИЛИ ТекЗаявка.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|						ИЛИ ТекЗаявка.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|					ТОГДА План.ИнвПроект = НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ ТекЗаявка.ИнвПроект = План.ИнвПроект
	|			КОНЕЦ)
	|ГДЕ
	|	ТекЗаявка.ИнвПроект = &ИнвПроект
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекЗаявка.СтатьяДДС,
	|	ТекЗаявка.ЦФО,
	|	ТекЗаявка.Подразделение,
	|	ТекЗаявка.ИнвПроект,
	|	ЕСТЬNULL(План.План1, 0),
	|	ЕСТЬNULL(План.План2, 0),
	|	ЕСТЬNULL(План.План3, 0),
	|	ЕСТЬNULL(План.План4, 0),
	|	ЕСТЬNULL(План.ПланНаСогласовании, 0),
	|	ЕСТЬNULL(План.План_четыре, 0) - ЕСТЬNULL(ТекЗаявка.СуммаДДС, 0)";
	
	Запрос.УстановитьПараметр("КонецПериода", ДатаДокумента);
	Запрос.УстановитьПараметр("НачалоПериода", Дата(2016, 08, 01));
	Запрос.УстановитьПараметр("СценарийАктуальный", БюджетныйНаСервере.ПолучитьАктуальныйСценарий(КонецДня(ДатаДокумента), Ложь));
	Запрос.УстановитьПараметр("СценарийГод", БюджетныйНаСервере.ПолучитьСценарийГод(НачалоДня(Дата(2016, 08, 01))));
	Запрос.УстановитьПараметр("СценарийКвартал", БюджетныйНаСервере.ПолучитьСценарийКвартал(НачалоДня(Дата(2016, 08, 01))));
	Запрос.УстановитьПараметр("СценарийМесяц", БюджетныйНаСервере.ПолучитьСценарийМесяц(НачалоДня(Дата(2016, 08, 01))));
	Запрос.УстановитьПараметр("Автор", БПСервер.ПолучитьМассивПользователей());
	Запрос.УстановитьПараметр("ДоступныеПредприятия", БюджетныйНаСервере.ПолучитьПредприятия());
	Запрос.УстановитьПараметр("ИнвПроект", ИнвПроектТЧДок);
	Запрос.УстановитьПараметр("СчетаДС", УЧ_Сервер.Счета5051());
	Запрос.УстановитьПараметр("ПланПоСЗ", Справочники.СценарииПланирования.НайтиПоНаименованию("План по СЗ", Истина));
	
	РезультатЗапроса = Запрос.Выполнить();
	РезультатТЗ = РезультатЗапроса.Выгрузить();
	
	Если РезультатТЗ.Количество() Тогда 
		РезультатТЗ.Свернуть("ИнвПроект","ФактВсего");
		СтрокаФактВсего = РезультатТЗ.Получить(0);
		ФактВсего = СтрокаФактВсего.ФактВсего;
	КонецЕсли;
	
	Возврат ФактВсего;
	
КонецФункции	

Функция ПроверитьСогласованностьУсловий(ПараметрКоманды) экспорт
	
	Если Константы.МодульПроизводствоСпирта.Получить() И Константы.МодульКвотированиеСпирта.Получить() Тогда
		Для Каждого ТекСтрокаЗаявки Из ПараметрКоманды.Заявкабезнал Цикл     
			Если ТекСтрокаЗаявки.СтатьяДДС = ПредопределенноеЗначение("Справочник.СтатьиДвиженияДенежныхСредств.ПрочеЗатратыПоРеализации") И Не ПроверитьНаличиеУсловийКонтрагента(ТекСтрокаЗаявки.Контрагент) Тогда
				Сообщить("Для оплаты по статье ДДС " + ТекСтрокаЗаявки.СтатьяДДС + " необходимо согласовать условия контрагента (" + ТекСтрокаЗаявки.Контрагент + ")");
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции	

Функция ПроверитьНаличиеУсловийКонтрагента(Контрагент) экспорт
	
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.КС_УсловияКонтрагента.СрезПоследних(&ТекДата, Контрагент = &Контрагент) КАК КС_УсловияКонтрагентаСрезПоследних";
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции


Функция РасчитатьЛимиты(Ссылка, ПараметрыПолученияБезДокумента = Неопределено) Экспорт
	
	Если ПараметрыПолученияБезДокумента = Неопределено Тогда
		Возврат РассчитатьЛимитыПоЗаявке(Ссылка);	
	Иначе
		Возврат РассчитатьЛимитыБезЗаявки(ПараметрыПолученияБезДокумента);
	КонецЕсли;
	
КонецФункции

Функция РассчитатьЛимитыПоЗаявке(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТекЗаявка.СтатьяДДС КАК СтатьяДДС,
	               |	ТекЗаявка.СуммаДДС КАК СуммаДДС,
	               |	ТекЗаявка.ЦФО КАК ЦФО,
	               |	ТекЗаявка.Подразделение КАК Подразделение,
	               |	Заявки.НаПодготовке КАК НаПодготовке,
	               |	Заявки.НаСогласовании КАК НаСогласовании,
	               |	Заявки.НаИсполнении КАК НаИсполнении,
	               |	Заявки.Исполнено КАК Исполнено,
	               |	ВложенныйЗапрос.План1 КАК Годовой,
	               |	ВложенныйЗапрос.План2 КАК Квартальный,
	               |	ВложенныйЗапрос.План3 КАК Месячный,
	               |	ВложенныйЗапрос.План4 КАК Текущий,
	               |	ТекЗаявка.ТекущаяЗаявка КАК ТекущаяЗаявка,
	               |	ТекЗаявка.Предприятие КАК Предприятие,
	               |	ТекЗаявка.СтатьяДДС.Код КАК КодСтатьи,
	               |	ТекЗаявка.Валюта КАК Валюта,
	               |	Заявки.Валюта КАК ВалютаФакта,
	               |	ВложенныйЗапрос.АктуальныйСценарий КАК АктуальныйСценарий,
	               |	ТекЗаявка.ИнвПроект КАК ИнвПроект,
	               |	ВложенныйЗапрос.СценарийГод КАК СценарийГод,
	               |	ВложенныйЗапрос.СценарийКвартал КАК СценарийКвартал,
	               |	ВложенныйЗапрос.СценарийМесяц КАК СценарийМесяц
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.СтатьяДДС КАК СтатьяДДС,
	               |		СУММА(ВложенныйЗапрос.СуммаДДС) КАК СуммаДДС,
	               |		ВложенныйЗапрос.ЦФО КАК ЦФО,
	               |		ВложенныйЗапрос.Подразделение КАК Подразделение,
	               |		СУММА(ВложенныйЗапрос.ТекущаяЗаявка) КАК ТекущаяЗаявка,
	               |		ВложенныйЗапрос.Предприятие КАК Предприятие,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL
	               |				ТОГДА НЕОПРЕДЕЛЕНО
	               |			ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	               |		КОНЕЦ КАК ИнвПроект,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапрос.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.Валюта ЕСТЬ NULL
	               |				ТОГДА &НацВалюта
	               |			ИНАЧЕ ВложенныйЗапрос.Валюта
	               |		КОНЕЦ КАК Валюта
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.СтатьяДДС, Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС) КАК СтатьяДДС,
	               |			ВЫБОР
	               |				КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |					ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаДДС,
	               |			ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.ЦФО, Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО) КАК ЦФО,
	               |			ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Подразделение, Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение) КАК Подразделение,
	               |			ВЫБОР
	               |				КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |					ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК ТекущаяЗаявка,
	               |			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Предприятие КАК Предприятие,
	               |			Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект КАК ИнвПроект,
	               |			Д_ЗаявкаНаОплатуЗаявкаБезнал.Валюта КАК Валюта,
	               |			NULL КАК ДокОснование
	               |		ИЗ
	               |			Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	               |				ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.УИДСтрокиДокОснования
	               |					И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	               |					И (Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка.ПометкаУдаления = ЛОЖЬ)
	               |					И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаОплату.РасшифровкиСтрок КАК Д_ЗаявкаНаОплатуРасшифровкиСтрок
	               |				ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаОплатуРасшифровкиСтрок.УИДСтрокиЗаявки
	               |					И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	               |		ГДЕ
	               |			Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка В(&ТекЗаявка)
	               |			И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Предприятие,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект,
	               |			ВЫБОР
	               |				КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |					ТОГДА &НацВалюта
	               |				ИНАЧЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта
	               |			КОНЕЦ,
	               |			МИНИМУМ(Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование)
	               |		ИЗ
	               |			Документ.Д_ЗаявкаНаАвансовыйОтчет.Затраты КАК Д_ЗаявкаНаАвансовыйОтчетЗатраты
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	               |				ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка
	               |		ГДЕ
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |			И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |			И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка В(&ТекЗаявка)
	               |			И Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование.Дата МЕЖДУ &Дата1 И &Дата2
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Предприятие,
	               |			ВЫБОР
	               |				КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |					ТОГДА &НацВалюта
	               |				ИНАЧЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта
	               |			КОНЕЦ,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма,
	               |			Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.СтатьяБДДС,
	               |			0,
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.ЦФО,
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.ВидДеятельности,
	               |			0,
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.Ссылка.Предприятие,
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.ИнвПроект,
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.Валюта,
	               |			NULL
	               |		ИЗ
	               |			Документ.Д_ЗаявкаНаКорректировкуБюджета.СЗ КАК Д_ЗаявкаНаКорректировкуБюджетаСЗ
	               |		ГДЕ
	               |			Д_ЗаявкаНаКорректировкуБюджетаСЗ.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |			И Д_ЗаявкаНаКорректировкуБюджетаСЗ.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |			И Д_ЗаявкаНаКорректировкуБюджетаСЗ.Ссылка В(&ТекЗаявка)
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.СтатьяДДС, Д_ЗаявкаНаФинансирование.СтатьяДДС),
	               |			ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Сумма, Д_ЗаявкаНаФинансирование.Сумма),
	               |			ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Предприятие, Д_ЗаявкаНаФинансирование.Предприятие),
	               |			ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Подразделение, Д_ЗаявкаНаФинансирование.Подразделение),
	               |			ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Сумма, Д_ЗаявкаНаФинансирование.Сумма),
	               |			Д_ЗаявкаНаФинансирование.Ссылка.Предприятие,
	               |			Д_ЗаявкаНаФинансирование.ИнвПроект,
	               |			Д_ЗаявкаНаФинансирование.Валюта,
	               |			NULL
	               |		ИЗ
	               |			Документ.Д_ЗаявкаНаФинансирование КАК Д_ЗаявкаНаФинансирование
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаФинансирование.ТабличнаяЧасть КАК Д_ЗаявкаНаФинансированиеТабличнаяЧасть
	               |				ПО Д_ЗаявкаНаФинансирование.Ссылка = Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Ссылка
	               |		ГДЕ
	               |			Д_ЗаявкаНаФинансирование.Дата МЕЖДУ &Дата1 И &Дата2
	               |			И Д_ЗаявкаНаФинансирование.ПометкаУдаления = ЛОЖЬ
	               |			И Д_ЗаявкаНаФинансирование.Ссылка В(&ТекЗаявка)) КАК ВложенныйЗапрос
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВложенныйЗапрос.СтатьяДДС,
	               |		ВложенныйЗапрос.ЦФО,
	               |		ВложенныйЗапрос.Подразделение,
	               |		ВложенныйЗапрос.Предприятие,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL
	               |				ТОГДА НЕОПРЕДЕЛЕНО
	               |			ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапрос.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	               |					ИЛИ ВложенныйЗапрос.Валюта ЕСТЬ NULL
	               |				ТОГДА &НацВалюта
	               |			ИНАЧЕ ВложенныйЗапрос.Валюта
	               |		КОНЕЦ) КАК ТекЗаявка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВложенныйЗапрос.СтатьяДДС КАК СтатьяДДС,
	               |			ВложенныйЗапрос.ЦФО КАК ЦФО,
	               |			СУММА(ВложенныйЗапрос.НаПодготовке) КАК НаПодготовке,
	               |			СУММА(ВложенныйЗапрос.НаСогласовании) КАК НаСогласовании,
	               |			СУММА(ВложенныйЗапрос.НаИсполнении) КАК НаИсполнении,
	               |			СУММА(ВложенныйЗапрос.Исполнено) КАК Исполнено,
	               |			ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |						ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |						ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL
	               |					ТОГДА НЕОПРЕДЕЛЕНО
	               |				ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	               |			КОНЕЦ КАК ИнвПроект,
	               |			ВЫБОР
	               |				КОГДА ВложенныйЗапрос.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |					ТОГДА &НацВалюта
	               |				ИНАЧЕ ВложенныйЗапрос.Валюта
	               |			КОНЕЦ КАК Валюта,
	               |			ВложенныйЗапрос.Подразделение КАК Подразделение
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.СтатьяДДС, Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС) КАК СтатьяДДС,
	               |				ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.ЦФО, Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО) КАК ЦФО,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И Согласование1.Ссылка ЕСТЬ NULL
	               |						ТОГДА ВЫБОР
	               |								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |									ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ КАК НаПодготовке,
	               |				ВЫБОР
	               |					КОГДА НЕ(Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	               |										ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |											И Согласование1.Ссылка ЕСТЬ NULL)
	               |								И НЕ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И НЕ Согласование1.Ссылка ЕСТЬ NULL
	               |								И НЕ Согласование1.Завершен = ИСТИНА
	               |						ТОГДА ВЫБОР
	               |								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |									ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ КАК НаСогласовании,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	               |						ТОГДА ВЫБОР
	               |								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |									ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ КАК НаИсполнении,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ТекущийБизнесПроцесс = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.ПустаяСсылка)
	               |						ТОГДА ""На подготовке""
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие2)
	               |								ТОГДА ""На согласовании""
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие3)
	               |										ТОГДА ""На проверке""
	               |									ИНАЧЕ ВЫБОР
	               |											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	               |												ТОГДА ""На исполнении""
	               |											ИНАЧЕ  ""На согласовании""
	               |											
	               |										КОНЕЦ
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ КАК Состояние,
	               |				ВЫБОР
	               |					КОГДА Согласование1.Завершен = ИСТИНА
	               |						ТОГДА ВЫБОР
	               |								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL
	               |									ТОГДА ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.Сумма, Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ КАК Исполнено,
	               |				Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект КАК ИнвПроект,
	               |				Д_ЗаявкаНаОплатуЗаявкаБезнал.Валюта КАК Валюта,
	               |				ЕСТЬNULL(Д_ЗаявкаНаОплатуРасшифровкиСтрок.ЦФО.ВидДеятельности, Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО.ВидДеятельности) КАК Подразделение,
	               |				NULL КАК ДокОснование,
	               |				Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка КАК Ссылка
	               |			ИЗ
	               |				Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	               |					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Задача.Заявка
	               |						И (Задача.Выполнена = ЛОЖЬ)
	               |						И (Задача.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Согласование1 КАК Согласование1
	               |					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Согласование1.Заявка
	               |						И (Согласование1.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	               |					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.УИДСтрокиДокОснования
	               |						И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	               |						И (Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка.ПометкаУдаления = ЛОЖЬ)
	               |						И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаОплату.РасшифровкиСтрок КАК Д_ЗаявкаНаОплатуРасшифровкиСтрок
	               |					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаОплатуРасшифровкиСтрок.УИДСтрокиЗаявки
	               |						И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	               |			ГДЕ
	               |				Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |				И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |				И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка В (&ТекЗаявка)
	               |				И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	               |				И ЕСТЬNULL(НЕ(Согласование1.Завершен
	               |								И Согласование1.НеСогласовано), ИСТИНА)
	               |				И Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение В ИЕРАРХИИ(&ПодразделенияТекЗаявки)
	               |				И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.ЗаявкаНаФинансирование В (&ТекЗаявка)
	               |			
	               |			ОБЪЕДИНИТЬ ВСЕ
	               |			
	               |			ВЫБРАТЬ
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И СогласованиеОбщее.Ссылка ЕСТЬ NULL
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	               |							ИЛИ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ТекущийБизнесПроцесс = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.ПустаяСсылка)
	               |						ТОГДА ""На подготовке""
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	               |								ТОГДА ""На согласовании""
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	               |										ТОГДА ""На проверке""
	               |									ИНАЧЕ ВЫБОР
	               |											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |												ТОГДА ""На исполнении""
	               |											ИНАЧЕ ""На согласовании""
	               |												
	               |										КОНЕЦ
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА СогласованиеОбщее.Завершен = ИСТИНА
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект,
	               |				ВЫБОР
	               |					КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |						ТОГДА &НацВалюта
	               |					ИНАЧЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта
	               |				КОНЕЦ,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение,
	               |				МИНИМУМ(Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование),
	               |				NULL
	               |			ИЗ
	               |				Документ.Д_ЗаявкаНаАвансовыйОтчет.Затраты КАК Д_ЗаявкаНаАвансовыйОтчетЗатраты
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	               |					ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = Задача.Заявка
	               |						И (Задача.Выполнена = ЛОЖЬ)
	               |						И (Задача.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СогласованиеОбщее КАК СогласованиеОбщее
	               |					ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = СогласованиеОбщее.Заявка
	               |						И (СогласованиеОбщее.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	               |					ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка
	               |			ГДЕ
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	               |				И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |				И НЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка В (&ТекЗаявка)
	               |				И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение В ИЕРАРХИИ(&ПодразделенияТекЗаявки)
	               |				И Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование.Дата МЕЖДУ &Дата1 И &Дата2
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	               |				Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ТекущийБизнесПроцесс = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.ПустаяСсылка)
	               |						ТОГДА ""На подготовке""
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	               |								ТОГДА ""На согласовании""
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	               |										ТОГДА ""На проверке""
	               |									ИНАЧЕ ВЫБОР
	               |											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |												ТОГДА ""На исполнении""
	               |											ИНАЧЕ ""На согласовании""
	               |												
	               |										КОНЕЦ
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |						ТОГДА &НацВалюта
	               |					ИНАЧЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Валюта
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И СогласованиеОбщее.Ссылка ЕСТЬ NULL
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	               |							ИЛИ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА СогласованиеОбщее.Завершен = ИСТИНА
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |			
	               |			ОБЪЕДИНИТЬ ВСЕ
	               |			
	               |			ВЫБРАТЬ
	               |				ЕСТЬNULL(Д_ЗаявкаНаФинансированиеТабличнаяЧасть.СтатьяДДС, Д_ЗаявкаНаФинансирование.СтатьяДДС),
	               |				Д_ЗаявкаНаФинансирование.Предприятие,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И СогласованиеОбщее.Ссылка ЕСТЬ NULL
	               |						ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА НЕ(Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |										ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |											И СогласованиеОбщее.Ссылка ЕСТЬ NULL)
	               |								И НЕ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |								И НЕ СогласованиеОбщее.Ссылка ЕСТЬ NULL
	               |								И НЕ СогласованиеОбщее.Завершен = ИСТИНА
	               |						ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |						ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	               |							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL
	               |						ТОГДА ""На подготовке""
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	               |								ТОГДА ""На согласовании""
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	               |										ТОГДА ""На проверке""
	               |									ИНАЧЕ ВЫБОР
	               |											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	               |												ТОГДА ""На исполнении""
	               |											ИНАЧЕ ВЫБОР
	               |													КОГДА СогласованиеОбщее.Завершен = ИСТИНА
	               |														ТОГДА ""Исполнено""
	               |													ИНАЧЕ ""На согласовании""
	               |												КОНЕЦ
	               |										КОНЕЦ
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ,
	               |				ВЫБОР
	               |					КОГДА СогласованиеОбщее.Завершен = ИСТИНА
	               |						ТОГДА Д_ЗаявкаНаФинансирование.Сумма
	               |					ИНАЧЕ 0
	               |				КОНЕЦ,
	               |				Д_ЗаявкаНаФинансирование.ИнвПроект,
	               |				Д_ЗаявкаНаФинансирование.Валюта,
	               |				Д_ЗаявкаНаФинансирование.Подразделение,
	               |				NULL,
	               |				Д_ЗаявкаНаФинансирование.Ссылка
	               |			ИЗ
	               |				Документ.Д_ЗаявкаНаФинансирование КАК Д_ЗаявкаНаФинансирование
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	               |					ПО Д_ЗаявкаНаФинансирование.Ссылка = Задача.Заявка
	               |						И (Задача.Выполнена = ЛОЖЬ)
	               |						И (Задача.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СогласованиеОбщее КАК СогласованиеОбщее
	               |					ПО Д_ЗаявкаНаФинансирование.Ссылка = СогласованиеОбщее.Заявка
	               |						И (СогласованиеОбщее.ПометкаУдаления = ЛОЖЬ)
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаФинансирование.ТабличнаяЧасть КАК Д_ЗаявкаНаФинансированиеТабличнаяЧасть
	               |					ПО Д_ЗаявкаНаФинансирование.Ссылка = Д_ЗаявкаНаФинансированиеТабличнаяЧасть.Ссылка
	               |			ГДЕ
	               |				Д_ЗаявкаНаФинансирование.Дата МЕЖДУ &Дата1 И &Дата2
	               |				И Д_ЗаявкаНаФинансирование.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |				И НЕ Д_ЗаявкаНаФинансирование.Ссылка В (&ТекЗаявка)
	               |				И ЕСТЬNULL(НЕ(СогласованиеОбщее.Завершен
	               |								И СогласованиеОбщее.НеСогласовано), ИСТИНА)
	               |				И Д_ЗаявкаНаФинансирование.Подразделение В ИЕРАРХИИ(&ПодразделенияТекЗаявки)
	               |				И (Д_ЗаявкаНаФинансирование.РеестрЗаявок = ЗНАЧЕНИЕ(Документ.Д_ЗаявкаНаОплату.ПустаяСсылка)
	               |						ИЛИ Д_ЗаявкаНаФинансирование.РеестрЗаявок = НЕОПРЕДЕЛЕНО)) КАК ВложенныйЗапрос
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВложенныйЗапрос.СтатьяДДС,
	               |			ВложенныйЗапрос.ЦФО,
	               |			ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |						ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |						ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL
	               |					ТОГДА НЕОПРЕДЕЛЕНО
	               |				ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	               |			КОНЕЦ,
	               |			ВЫБОР
	               |				КОГДА ВложенныйЗапрос.Валюта = ЗНАЧЕНИЕ(справочник.валюты.пустаяссылка)
	               |					ТОГДА &НацВалюта
	               |				ИНАЧЕ ВложенныйЗапрос.Валюта
	               |			КОНЕЦ,
	               |			ВложенныйЗапрос.Подразделение) КАК Заявки
	               |		ПО ТекЗаявка.СтатьяДДС = Заявки.СтатьяДДС
	               |			И ТекЗаявка.ЦФО = Заявки.ЦФО
	               |			И (ВЫБОР
	               |				КОГДА ТекЗаявка.ИнвПроект = НЕОПРЕДЕЛЕНО
	               |					ТОГДА Заявки.ИнвПроект = НЕОПРЕДЕЛЕНО
	               |				ИНАЧЕ ТекЗаявка.ИнвПроект = Заявки.ИнвПроект
	               |			КОНЕЦ)
	               |			И ТекЗаявка.Подразделение = Заявки.Подразделение
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			СУММА(-ВЫБОР
	               |					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийГод
	               |							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийГод)
	               |								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	               |						ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК План1,
	               |			СУММА(-ВЫБОР
	               |					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийКвартал
	               |							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийКвартал)
	               |								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	               |						ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК План2,
	               |			СУММА(-ВЫБОР
	               |					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийМесяц
	               |							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийМесяц)
	               |								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	               |						ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК План3,
	               |			СУММА(-ВЫБОР
	               |					КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	               |							ИЛИ БюджетныйОбороты.СценарийПлана = Неопределено
	               |							ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	               |								И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	               |								И БюджетныйОбороты.СценарийПлана.ВлкючатьВПлан = ИСТИНА
	               |						ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК План4,
	               |			БюджетныйОбороты.Субконто1 КАК Статья,
	               |			БюджетныйОбороты.Предприятия КАК Предприятия,
	               |			ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	               |						ИЛИ ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	               |					ТОГДА ВЫБОР
	               |							КОГДА БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |									ИЛИ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |								ТОГДА НЕОПРЕДЕЛЕНО
	               |							ИНАЧЕ БюджетныйОбороты.КорСубконто2
	               |						КОНЕЦ
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ КАК ИнвПроект,
	               |			МАКСИМУМ(ВЫБОР
	               |					КОГДА БюджетныйОбороты.СценарийПлана = Неопределено
	               |						ТОГДА &СценарийАктуальный
	               |					ИНАЧЕ &СценарийАктуальный
	               |				КОНЕЦ) КАК АктуальныйСценарий,
	               |			БюджетныйОбороты.Подразделение КАК Подразделение,
	               |			МАКСИМУМ(&СценарийГод) КАК СценарийГод,
	               |			МАКСИМУМ(&СценарийКвартал) КАК СценарийКвартал,
	               |			МАКСИМУМ(&СценарийМесяц) КАК СценарийМесяц
	               |		ИЗ
	               |			РегистрБухгалтерии.Учетный.Обороты(
	               |					&Дата1,
	               |					&Дата2,
	               |					,
	               |					Счет В (&Счет50)
	               |						ИЛИ Счет В (&Счет51)
	               |						,
	               |					,
	               |					СценарийПлана = &СценарийГод
	               |						ИЛИ СценарийПлана = &СценарийКвартал
	               |						ИЛИ СценарийПлана = &СценарийМесяц
	               |						ИЛИ СценарийПлана = &ПланПоСЗ
	               |						ИЛИ СценарийПлана = &СценарийАктуальный
	               |						ИЛИ СценарийПлана В
	               |							(ВЫБРАТЬ
	               |								СценарииПлана.Ссылка
	               |							ИЗ
	               |								Справочник.СценарииПланирования КАК СценарииПлана
	               |							ГДЕ
	               |								(СценарииПлана.Родитель = &СценарийГод
	               |									ИЛИ СценарииПлана.Родитель = &СценарийКвартал
	               |									ИЛИ СценарииПлана.Родитель = &СценарийМесяц
	               |									ИЛИ СценарииПлана.Родитель = &СценарийАктуальный)
	               |								И СценарииПлана.ВлкючатьВПлан = ИСТИНА
	               |								И СценарииПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)),
	               |					,
	               |					) КАК БюджетныйОбороты
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПараметрыБюджета КАК Б_ПараметрыБюджета
	               |				ПО БюджетныйОбороты.Предприятия = Б_ПараметрыБюджета.Предприятие
	               |					И БюджетныйОбороты.СценарийПлана = Б_ПараметрыБюджета.Сценарий
	               |		ГДЕ
	               |			(БюджетныйОбороты.Подразделение В ИЕРАРХИИ (&ПодразделенияТекЗаявки)
	               |				)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			БюджетныйОбороты.Субконто1,
	               |			БюджетныйОбороты.Предприятия,
	               |			ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	               |						ИЛИ ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	               |					ТОГДА ВЫБОР
	               |							КОГДА БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	               |									ИЛИ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	               |								ТОГДА НЕОПРЕДЕЛЕНО
	               |							ИНАЧЕ БюджетныйОбороты.КорСубконто2
	               |						КОНЕЦ
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ,
	               |			БюджетныйОбороты.Подразделение) КАК ВложенныйЗапрос
	               |		ПО ТекЗаявка.СтатьяДДС = ВложенныйЗапрос.Статья
	               |			И ТекЗаявка.ЦФО = ВложенныйЗапрос.Предприятия
	               |			И (ВЫБОР
	               |				КОГДА ТекЗаявка.ИнвПроект = НЕОПРЕДЕЛЕНО
	               |					ТОГДА ВложенныйЗапрос.ИнвПроект = НЕОПРЕДЕЛЕНО
	               |				ИНАЧЕ ТекЗаявка.ИнвПроект = ВложенныйЗапрос.ИнвПроект
	               |			КОНЕЦ)
	               |			И ТекЗаявка.Подразделение = ВложенныйЗапрос.Подразделение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.СтатьяДДС КАК СтатьяДДС,
	               |	ВТ_Данные.СуммаДДС КАК СуммаДДС,
	               |	ВТ_Данные.ЦФО КАК ЦФО,
	               |	ВТ_Данные.Подразделение КАК Подразделение,
	               |	ВТ_Данные.НаПодготовке КАК НаПодготовке,
	               |	ВТ_Данные.НаСогласовании КАК НаСогласовании,
	               |	ВТ_Данные.НаИсполнении КАК НаИсполнении,
	               |	ВТ_Данные.Исполнено КАК Исполнено,
	               |	ВТ_Данные.Годовой КАК Годовой,
	               |	ВТ_Данные.Квартальный КАК Квартальный,
	               |	ВТ_Данные.Месячный КАК Месячный,
	               |	ВТ_Данные.Текущий КАК Текущий,
	               |	ВТ_Данные.ТекущаяЗаявка КАК ТекущаяЗаявка,
	               |	ВТ_Данные.Предприятие КАК Предприятие,
	               |	ВТ_Данные.КодСтатьи КАК КодСтатьи,
	               |	ВЫБОР
	               |		КОГДА ВТ_Данные.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	               |			ТОГДА &НацВалюта
	               |		ИНАЧЕ ВТ_Данные.Валюта
	               |	КОНЕЦ КАК ЭквивалентнаяВалюта,
	               |	ВложенныйЗапрос.Валюта1 КАК Валюта,
	               |	ВЫБОР
	               |		КОГДА ВТ_Данные.ВалютаФакта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	               |			ТОГДА &НацВалюта
	               |		ИНАЧЕ ВТ_Данные.ВалютаФакта
	               |	КОНЕЦ КАК ВалютаФакта,
	               |	ВТ_Данные.АктуальныйСценарий КАК АктуальныйСценарий,
	               |	ВТ_Данные.ИнвПроект КАК ИнвПроект,
	               |	ВТ_Данные.СценарийГод КАК СценарийГод,
	               |	ВТ_Данные.СценарийКвартал КАК СценарийКвартал,
	               |	ВТ_Данные.СценарийМесяц КАК СценарийМесяц
	               |ПОМЕСТИТЬ ВТ_ДанныеВал
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			МАКСИМУМ(ВалютаПредприятийСрезПоследнихСценарий1.Валюта) КАК Валюта1,
	               |			ВТ_Данные.ЦФО КАК ЦФО
	               |		ИЗ
	               |			ВТ_Данные КАК ВТ_Данные
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПараметрыБюджета КАК ВалютаПредприятийСрезПоследнихСценарий1
	               |				ПО ВТ_Данные.ЦФО = ВалютаПредприятийСрезПоследнихСценарий1.Предприятие
	               |					И (ВалютаПредприятийСрезПоследнихСценарий1.Сценарий = &СценарийАктуальный)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВТ_Данные.ЦФО) КАК ВложенныйЗапрос
	               |		ПО ВТ_Данные.ЦФО = ВложенныйЗапрос.ЦФО
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеВал.СтатьяДДС КАК СтатьяДДС,
	               |	ЕСТЬNULL(ВТ_ДанныеВал.СуммаДДС, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаПодготовке
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаПодготовке / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаПодготовке * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаСогласовании
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаСогласовании / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаСогласовании * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаИсполнении
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаИсполнении / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаИсполнении * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.Исполнено
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.Исполнено / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.Исполнено * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) КАК СуммаДДС,
	               |	ВТ_ДанныеВал.ЦФО КАК ЦФО,
	               |	ВТ_ДанныеВал.Подразделение КАК Подразделение,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |			ТОГДА ВТ_ДанныеВал.НаПодготовке
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |								ТОГДА ВТ_ДанныеВал.НаПодготовке / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |				ИНАЧЕ ВТ_ДанныеВал.НаПодготовке * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК НаПодготовке,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |			ТОГДА ВТ_ДанныеВал.НаСогласовании
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |								ТОГДА ВТ_ДанныеВал.НаСогласовании / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |				ИНАЧЕ ВТ_ДанныеВал.НаСогласовании * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК НаСогласовании,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |			ТОГДА ВТ_ДанныеВал.НаИсполнении
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |								ТОГДА ВТ_ДанныеВал.НаИсполнении / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |				ИНАЧЕ ВТ_ДанныеВал.НаИсполнении * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК НаИсполнении,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |			ТОГДА ВТ_ДанныеВал.Исполнено
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |								ТОГДА ВТ_ДанныеВал.Исполнено / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |				ИНАЧЕ ВТ_ДанныеВал.Исполнено * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Исполнено,
	               |	ВТ_ДанныеВал.Годовой КАК Годовой,
	               |	ВТ_ДанныеВал.Квартальный КАК Квартальный,
	               |	ВТ_ДанныеВал.Месячный КАК Месячный,
	               |	ВТ_ДанныеВал.ТекущаяЗаявка КАК ТекущаяЗаявка,
	               |	ВТ_ДанныеВал.Предприятие КАК Предприятие,
	               |	ВТ_ДанныеВал.КодСтатьи КАК КодСтатьи,
	               |	ВТ_ДанныеВал.ЭквивалентнаяВалюта КАК ЭквивалентнаяВалюта,
	               |	ВТ_ДанныеВал.Валюта КАК Валюта,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеВал.Валюта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |			ТОГДА ВТ_ДанныеВал.Текущий
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВТ_ДанныеВал.Валюта = &НацВалюта
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	               |								ТОГДА ВТ_ДанныеВал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	               |							ИНАЧЕ 0
	               |						КОНЕЦ
	               |				ИНАЧЕ ВТ_ДанныеВал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Текущий,
	               |	ВТ_ДанныеВал.АктуальныйСценарий КАК АктуальныйСценарий,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.Валюта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.Текущий
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.Валюта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) - (ЕСТЬNULL(ВТ_ДанныеВал.СуммаДДС, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаПодготовке
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаПодготовке / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаПодготовке * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаСогласовании
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаСогласовании / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаСогласовании * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаИсполнении
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаИсполнении / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаИсполнении * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.Исполнено
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.Исполнено / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.Исполнено * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0)) КАК ОсталосьПоСтатье,
	               |	ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.Валюта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.Текущий
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.Валюта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) - (ЕСТЬNULL(ВТ_ДанныеВал.СуммаДДС, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаСогласовании
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаСогласовании / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаСогласовании * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.НаИсполнении
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.НаИсполнении / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.НаИсполнении * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0) + ЕСТЬNULL(ВЫБОР
	               |			КОГДА ВТ_ДанныеВал.ВалютаФакта = ВТ_ДанныеВал.ЭквивалентнаяВалюта
	               |				ТОГДА ВТ_ДанныеВал.Исполнено
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТ_ДанныеВал.ВалютаФакта = &НацВалюта
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0) <> 0
	               |									ТОГДА ВТ_ДанныеВал.Исполнено / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты_Заявки.Курс, 0)
	               |								ИНАЧЕ 0
	               |							КОНЕЦ
	               |					ИНАЧЕ ВТ_ДанныеВал.Исполнено * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Курс, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ, 0)) КАК ОсталосьПоСтатье2,
	               |	ВТ_ДанныеВал.ИнвПроект КАК ИнвПроект,
	               |	ВТ_ДанныеВал.СценарийГод КАК СценарийГод,
	               |	ВТ_ДанныеВал.СценарийКвартал КАК СценарийКвартал,
	               |	ВТ_ДанныеВал.СценарийМесяц КАК СценарийМесяц
	               |ИЗ
	               |	ВТ_ДанныеВал КАК ВТ_ДанныеВал
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(&ДатаКурсаБюджСц1, Сценарий = &СценарийАктуальный) КАК Б_ПлановыеКурсыВалютСрезПоследних
	               |		ПО ВТ_ДанныеВал.Валюта = Б_ПлановыеКурсыВалютСрезПоследних.Валюта1
	               |			И ВТ_ДанныеВал.ЭквивалентнаяВалюта = Б_ПлановыеКурсыВалютСрезПоследних.Валюта2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(&ДатаКурсаБюджСц1, Сценарий = &СценарийАктуальный) КАК ПлановыйКурсЭквивалентнойВалюты
	               |		ПО ВТ_ДанныеВал.Валюта = ПлановыйКурсЭквивалентнойВалюты.Валюта2
	               |			И ВТ_ДанныеВал.ЭквивалентнаяВалюта = ПлановыйКурсЭквивалентнойВалюты.Валюта1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(&ДатаКурсаБюджСц1, Сценарий = &СценарийАктуальный) КАК Б_ПлановыеКурсыВалютСрезПоследних_Заявки
	               |		ПО ВТ_ДанныеВал.ВалютаФакта = Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Валюта1
	               |			И ВТ_ДанныеВал.ЭквивалентнаяВалюта = Б_ПлановыеКурсыВалютСрезПоследних_Заявки.Валюта2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(&ДатаКурсаБюджСц1, Сценарий = &СценарийАктуальный) КАК ПлановыйКурсЭквивалентнойВалюты_Заявки
	               |		ПО ВТ_ДанныеВал.ВалютаФакта = ПлановыйКурсЭквивалентнойВалюты_Заявки.Валюта2
	               |			И ВТ_ДанныеВал.ЭквивалентнаяВалюта = ПлановыйКурсЭквивалентнойВалюты_Заявки.Валюта1";	
	Дата1 = НачалоМесяца(Ссылка.Дата); 
	Дата2 = КонецМесяца(Ссылка.Дата);  
	
	СтруктураБюджетов = БюджетныйНаСервере.ПолучитьВидыБюджетовНаДату(Дата1, Ложь);
	
	//отражаем заявки на стадии подготовки для финика в столбце "другие заявки" и скрываем для остальных
	ОтражатьНаПодготовке = ?(ПараметрыСеанса.ТекущийПользователь.ПринадлежитЭлементу(Справочники.Пользователи.НайтиПоНаименованию("Финансовый")), Истина, Ложь);
	// запрос сценария с видом вариант
	АктуальныйСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Дата2, Ложь);
	СценарийВариант = ПолучитьСценарийВидаВариант(СтруктураБюджетов, АктуальныйСценарий);
	ПодразделениеШапкиМагазины = Ложь;
	
	ПодразделенияЗаявки = Новый Массив;
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
		ПодразделенияЗаявки.Добавить(Ссылка.Подразделение);
		
		Если Ссылка.Подразделение = Справочники.СтруктураПредприятия.НайтиПоНаименованию("Магазины", Истина,,Ссылка.Предприятие) Тогда
			ПодразделениеШапкиМагазины = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из Ссылка.ЗаявкаБезнал Цикл
			
			Если Не ПодразделенияЗаявки.Найти(Строка.Подразделение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПодразделенияЗаявки.Добавить(Строка.Подразделение);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
		
		Для Каждого Строка Из Ссылка.ТабличнаяЧасть Цикл
			
			Если Не ПодразделенияЗаявки.Найти(Строка.Подразделение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПодразделенияЗаявки.Добавить(Строка.Подразделение);
		КонецЦикла;
		
		Если ПодразделенияЗаявки.Найти(Ссылка.Подразделение) = Неопределено Тогда
			ПодразделенияЗаявки.Добавить(Ссылка.Подразделение);
		КонецЕсли;

	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаАвансовыйОтчет") Тогда
		
		Для Каждого Строка Из Ссылка.Затраты Цикл
			
			Если Не ПодразделенияЗаявки.Найти(Строка.Подразделение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПодразделенияЗаявки.Добавить(Строка.Подразделение);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаКорректировкуБюджета") Тогда
		ПодразделенияЗаявки.Добавить(Ссылка.Подразделение);
		
		Для Каждого Строка Из Ссылка.СЗ Цикл
			
			Если Не ПодразделенияЗаявки.Найти(Строка.ВидДеятельности) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПодразделенияЗаявки.Добавить(Строка.ВидДеятельности);
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("ТекЗаявка", Ссылка);
	Запрос.УстановитьПараметр("Предприятие", Ссылка);
	Запрос.УстановитьПараметр("СценарийГод", СтруктураБюджетов.ГодовойБюджет);
	Запрос.УстановитьПараметр("СценарийКвартал", СтруктураБюджетов.КвартальныйБюджет);
	Запрос.УстановитьПараметр("СценарийМесяц", СтруктураБюджетов.МесячныйБюджет);
	Запрос.УстановитьПараметр("СценарийВариант", СценарийВариант);
	Запрос.УстановитьПараметр("СценарийАктуальный", АктуальныйСценарий);
	Запрос.УстановитьПараметр("ДатаКурсаБюджСц1", АктуальныйСценарий.АктуальнаяДата);
	Запрос.УстановитьПараметр("ПодразделенияТекЗаявки", ПодразделенияЗаявки);
	Запрос.УстановитьПараметр("НацВалюта", УЧ_Сервер.НациональнаяВалюта());
	Запрос.УстановитьПараметр("ПланПоСЗ", Справочники.СценарииПланирования.НайтиПоНаименованию("План по СЗ", Истина));
	Запрос.УстановитьПараметр("Счет50", ПланыСчетов.Учетный.Счет50());
	Запрос.УстановитьПараметр("Счет51", ПланыСчетов.Учетный.Счет51());
	
	//Запрос.УстановитьПараметр("ПодразделениеМагазины", ПодразделениеШапкиМагазины);
	//Запрос.УстановитьПараметр("ПодразделениеМагазиныЗначение", Справочники.СтруктураПредприятия.НайтиПоНаименованию("Магазины",,,Ссылка.Предприятие));
	
	Запрос.УстановитьПараметр("ПредприятиеКазна", Справочники.Предприятия.ПустаяСсылка());
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция РассчитатьЛимитыБезЗаявки(ПараметрыПолучения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Заявки.НаПодготовке, 0) + ЕСТЬNULL(Заявки.НаСогласовании, 0) + ЕСТЬNULL(Заявки.НаИсполнении, 0) + ЕСТЬNULL(Заявки.Исполнено, 0) КАК СуммаДДС,
	|	Заявки.НаПодготовке КАК НаПодготовке,
	|	Заявки.НаСогласовании КАК НаСогласовании,
	|	Заявки.НаИсполнении КАК НаИсполнении,
	|	Заявки.Исполнено КАК Исполнено,
	|	ВложенныйЗапрос.План1 КАК Годовой,
	|	ВложенныйЗапрос.План2 КАК Квартальный,
	|	ВложенныйЗапрос.План3 КАК Месячный,
	|	ВложенныйЗапрос.План4 КАК Текущий,
	|	ЕСТЬNULL(ВложенныйЗапрос.План4, 0) - (ЕСТЬNULL(Заявки.НаСогласовании, 0) + ЕСТЬNULL(Заявки.НаИсполнении, 0) + ЕСТЬNULL(Заявки.Исполнено, 0)) КАК ОсталосьПоСтатье,
	|	ЕСТЬNULL(ВложенныйЗапрос.План4, 0) - (ЕСТЬNULL(Заявки.НаСогласовании, 0) + ЕСТЬNULL(Заявки.НаИсполнении, 0) + ЕСТЬNULL(Заявки.Исполнено, 0)) КАК ОсталосьПоСтатье2,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Статья ЕСТЬ NULL 
	|			ТОГДА Заявки.СтатьяДДС
	|		ИНАЧЕ ВложенныйЗапрос.Статья
	|	КОНЕЦ КАК СтатьяДДС,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Подразделение ЕСТЬ NULL 
	|			ТОГДА Заявки.Подразделение
	|		ИНАЧЕ ВложенныйЗапрос.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Предприятия ЕСТЬ NULL 
	|			ТОГДА Заявки.ЦФО
	|		ИНАЧЕ ВложенныйЗапрос.Предприятия
	|	КОНЕЦ КАК ЦФО,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ИнвПроект = НЕОПРЕДЕЛЕНО
	|			ТОГДА Заявки.ИнвПроект
	|		ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	|	КОНЕЦ КАК ИнвПроект,
	|	ВложенныйЗапрос.АктуальныйСценарий
	|ПОМЕСТИТЬ ВТ_Общ
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(-ВЫБОР
	|				КОГДА БюджетныйОбороты.СценарийПлана = &СценарийГод
	|						ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийГод)
	|							И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|					ТОГДА ВЫБОР
	|							КОГДА Б_ПараметрыБюджета.Утвержден
	|								ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК План1,
	|		СУММА(-ВЫБОР
	|				КОГДА БюджетныйОбороты.СценарийПлана = &СценарийКвартал
	|						ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийКвартал)
	|							И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|					ТОГДА ВЫБОР
	|							КОГДА Б_ПараметрыБюджета.Утвержден
	|								ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК План2,
	|		СУММА(-ВЫБОР
	|				КОГДА БюджетныйОбороты.СценарийПлана = &СценарийМесяц
	|						ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийМесяц)
	|							И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|					ТОГДА ВЫБОР
	|							КОГДА Б_ПараметрыБюджета.Утвержден
	|								ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК План3,
	|		СУММА(-ВЫБОР
	|				КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|						ИЛИ БюджетныйОбороты.СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПланПоСЗ)
	|						ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|							И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|							И БюджетныйОбороты.СценарийПлана.ВлкючатьВПлан = ИСТИНА
	|					ТОГДА ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК План4,
	|		БюджетныйОбороты.Субконто1 КАК Статья,
	|		ВЫБОР
	|			КОГДА БюджетныйОбороты.Предприятия.УчетПоПодразделениям = ИСТИНА
	|					ИЛИ (БюджетныйОбороты.Предприятия = &ПредприятиеКазна И НЕ БюджетныйОбороты.Подразделение.Владелец = &ПредприятиеКазна)
	|				ТОГДА БюджетныйОбороты.Подразделение
	|			ИНАЧЕ ""Основное""
	|		КОНЕЦ КАК Подразделение,
	|		БюджетныйОбороты.Предприятия КАК Предприятия,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	|					ИЛИ ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	|				ТОГДА ВЫБОР
	|						КОГДА БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|								ИЛИ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|							ТОГДА НЕОПРЕДЕЛЕНО
	|						ИНАЧЕ БюджетныйОбороты.КорСубконто2
	|					КОНЕЦ
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ИнвПроект,
	|		ВЫБОР
	|			КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|					ИЛИ БюджетныйОбороты.СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПланПоСЗ)
	|					ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|						И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|						И БюджетныйОбороты.СценарийПлана.ВлкючатьВПлан = ИСТИНА
	|				ТОГДА БюджетныйОбороты.СценарийПлана
	|		КОНЕЦ КАК АктуальныйСценарий
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетный.Обороты(
	|				&Дата1,
	|				&Дата2,
	|				,
	|				Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Касса))
	|					ИЛИ Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.РасчетныйСчет))
	|					ИЛИ Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.КазнаОсн)),
	|				,
	|				СценарийПлана = &СценарийГод
	|					ИЛИ СценарийПлана = &СценарийКвартал
	|					ИЛИ СценарийПлана = &СценарийМесяц
	|					ИЛИ СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПланПоСЗ)
	|					ИЛИ СценарийПлана = &СценарийАктуальный
	|					ИЛИ СценарийПлана В
	|						(ВЫБРАТЬ
	|							СценарииПлана.Ссылка
	|						ИЗ
	|							Справочник.СценарииПланирования КАК СценарииПлана
	|						ГДЕ
	|							(СценарииПлана.Родитель = &СценарийГод
	|								ИЛИ СценарииПлана.Родитель = &СценарийКвартал
	|								ИЛИ СценарииПлана.Родитель = &СценарийМесяц
	|								ИЛИ СценарииПлана.Родитель = &СценарийАктуальный)
	|							И СценарииПлана.ВлкючатьВПлан = ИСТИНА
	|							И СценарииПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)),
	|				,
	|				) КАК БюджетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПараметрыБюджета КАК Б_ПараметрыБюджета
	|			ПО БюджетныйОбороты.Предприятия = Б_ПараметрыБюджета.Предприятие
	|				И БюджетныйОбороты.СценарийПлана = Б_ПараметрыБюджета.Сценарий
	|	
	|	СГРУППИРОВАТЬ ПО
	|		БюджетныйОбороты.Субконто1,
	|		БюджетныйОбороты.Предприятия,
	|		ВЫБОР
	|			КОГДА БюджетныйОбороты.Предприятия.УчетПоПодразделениям = ИСТИНА
	|					ИЛИ (БюджетныйОбороты.Предприятия = &ПредприятиеКазна И НЕ БюджетныйОбороты.Подразделение.Владелец = &ПредприятиеКазна)
	|				ТОГДА БюджетныйОбороты.Подразделение
	|			ИНАЧЕ ""Основное""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ОбъектыСтроительства)
	|					ИЛИ ТИПЗНАЧЕНИЯ(БюджетныйОбороты.КорСубконто2) = ТИП(Справочник.ПредставительскиеРасходы)
	|				ТОГДА ВЫБОР
	|						КОГДА БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|								ИЛИ БюджетныйОбороты.КорСубконто2 = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|							ТОГДА НЕОПРЕДЕЛЕНО
	|						ИНАЧЕ БюджетныйОбороты.КорСубконто2
	|					КОНЕЦ
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА БюджетныйОбороты.СценарийПлана = &СценарийАктуальный
	|					ИЛИ БюджетныйОбороты.СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.ПланПоСЗ)
	|					ИЛИ БюджетныйОбороты.СценарийПлана.Родитель В (&СценарийАктуальный)
	|						И БюджетныйОбороты.СценарийПлана.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)
	|						И БюджетныйОбороты.СценарийПлана.ВлкючатьВПлан = ИСТИНА
	|				ТОГДА БюджетныйОбороты.СценарийПлана
	|		КОНЕЦ) КАК ВложенныйЗапрос
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.СтатьяДДС КАК СтатьяДДС,
	|			ВложенныйЗапрос.ЦФО КАК ЦФО,
	|			ВложенныйЗапрос.Подразделение КАК Подразделение,
	|			СУММА(ВложенныйЗапрос.НаПодготовке) КАК НаПодготовке,
	|			СУММА(ВложенныйЗапрос.НаСогласовании) КАК НаСогласовании,
	|			СУММА(ВложенныйЗапрос.НаИсполнении) КАК НаИсполнении,
	|			СУММА(ВложенныйЗапрос.Исполнено) КАК Исполнено,
	|			ВЫБОР
	|				КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|						ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|						ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL 
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	|			КОНЕЦ КАК ИнвПроект
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС КАК СтатьяДДС,
	|				Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО КАК ЦФО,
	|				ВЫБОР
	|					КОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО.УчетПоПодразделениям = ИСТИНА
	|							ИЛИ (Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО = &ПредприятиеКазна И НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение.Владелец = &ПредприятиеКазна)
	|						ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.Подразделение
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ КАК Подразделение,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	|							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|								И Согласование1.Ссылка ЕСТЬ NULL 
	|						ТОГДА ВЫБОР
	|								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL 
	|									ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК НаПодготовке,
	|				ВЫБОР
	|					КОГДА НЕ(Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	|										ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|											И Согласование1.Ссылка ЕСТЬ NULL )
	|								И НЕ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	|							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|								И НЕ Согласование1.Ссылка ЕСТЬ NULL 
	|								И НЕ Согласование1.Завершен = ИСТИНА
	|						ТОГДА ВЫБОР
	|								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL 
	|									ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК НаСогласовании,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	|						ТОГДА ВЫБОР
	|								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL 
	|									ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК НаИсполнении,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	|							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|								И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ТекущийБизнесПроцесс = ЗНАЧЕНИЕ(Справочник.Согласование1.ПустаяСсылка)
	|						ТОГДА ""На подготовке""
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие2)
	|								ТОГДА ""На согласовании""
	|							ИНАЧЕ ВЫБОР
	|									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие3)
	|										ТОГДА ""На проверке""
	|									ИНАЧЕ ВЫБОР
	|											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	|												ТОГДА ""На исполнении""
	|											ИНАЧЕ ВЫБОР
	|													КОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ТекущийБизнесПроцесс.Завершен = ИСТИНА
	|														ТОГДА ""Исполнено""
	|													ИНАЧЕ ""На согласовании""
	|												КОНЕЦ
	|										КОНЕЦ
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ КАК Состояние,
	|				ВЫБОР
	|					КОГДА Согласование1.Завершен = ИСТИНА
	|						ТОГДА ВЫБОР
	|								КОГДА Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка ЕСТЬ NULL 
	|									ТОГДА Д_ЗаявкаНаОплатуЗаявкаБезнал.СуммаДДС
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК Исполнено,
	|				Д_ЗаявкаНаОплатуЗаявкаБезнал.ИнвПроект КАК ИнвПроект
	|			ИЗ
	|				Документ.Д_ЗаявкаНаОплату.ЗаявкаБезнал КАК Д_ЗаявкаНаОплатуЗаявкаБезнал
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	|					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Задача.Заявка
	|						И (Задача.Выполнена = ЛОЖЬ)
	|						И (Задача.ПометкаУдаления = ЛОЖЬ)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Согласование1 КАК Согласование1
	|					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Согласование1.Заявка
	|						И (Согласование1.ПометкаУдаления = ЛОЖЬ)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
	|					ПО Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.УИДСтрокиДокОснования
	|						И (НЕ Д_ЗаявкаНаОплатуЗаявкаБезнал.УИДСтроки = """")
	|						И (Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|						И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка = Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование
	|			ГДЕ
	|				Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|				И Д_ЗаявкаНаОплатуЗаявкаБезнал.Ссылка.ПометкаУдаления = ЛОЖЬ
	|				И Д_ЗаявкаНаОплатуЗаявкаБезнал.ОтменаОплаты = ЛОЖЬ
	|				И НЕ(Согласование1.Завершен
	|							И Согласование1.НеСогласовано)
	|				И Д_ЗаявкаНаОплатуЗаявкаБезнал.СтатьяДДС = &СтатьяДДС
	|				И Д_ЗаявкаНаОплатуЗаявкаБезнал.ЦФО = &ЦФО
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья,
	|				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие,
	|				ВЫБОР
	|					КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие.УчетПоПодразделениям = ИСТИНА
	|							ИЛИ (Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие = &ПредприятиеКазна И НЕ Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение.Владелец = &ПредприятиеКазна)
	|						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Подразделение
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	|							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|								И СогласованиеОбщее.Ссылка ЕСТЬ NULL 
	|						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	|							ИЛИ Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	|						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	|						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие1)
	|							ИЛИ Задача.ТочкаМаршрута ЕСТЬ NULL 
	|								И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ТекущийБизнесПроцесс = ЗНАЧЕНИЕ(Справочник.СогласованиеОбщее.ПустаяСсылка)
	|						ТОГДА ""На подготовке""
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие2)
	|								ТОГДА ""На согласовании""
	|							ИНАЧЕ ВЫБОР
	|									КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие3)
	|										ТОГДА ""На проверке""
	|									ИНАЧЕ ВЫБОР
	|											КОГДА Задача.ТочкаМаршрута = ЗНАЧЕНИЕ(Перечисление.СогласованиеОбщееТочкиМаршрута.Действие5)
	|												ТОГДА ""На исполнении""
	|											ИНАЧЕ ВЫБОР
	|													КОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ТекущийБизнесПроцесс.Завершен = ИСТИНА
	|														ТОГДА ""Исполнено""
	|													ИНАЧЕ ""На согласовании""
	|												КОНЕЦ
	|										КОНЕЦ
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА СогласованиеОбщее.Завершен = ИСТИНА
	|						ТОГДА Д_ЗаявкаНаАвансовыйОтчетЗатраты.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				Д_ЗаявкаНаАвансовыйОтчетЗатраты.ИнвПроект
	|			ИЗ
	|				Документ.Д_ЗаявкаНаАвансовыйОтчет.Затраты КАК Д_ЗаявкаНаАвансовыйОтчетЗатраты
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Задача КАК Задача
	|					ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = Задача.Заявка
	|						И (Задача.Выполнена = ЛОЖЬ)
	|						И (Задача.ПометкаУдаления = ЛОЖЬ)
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СогласованиеОбщее КАК СогласованиеОбщее
	|					ПО Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка = СогласованиеОбщее.Заявка
	|						И (СогласованиеОбщее.ПометкаУдаления = ЛОЖЬ)
	|			ГДЕ
	|				Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
	|				И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Ссылка.ПометкаУдаления = ЛОЖЬ
	|				И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Статья = &СтатьяДДС
	|				И Д_ЗаявкаНаАвансовыйОтчетЗатраты.Предприятие = &ЦФО
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ДвиженияПоЗаявкамНаОплатуОбороты.СтатьяДДС,
	|				ДвиженияПоЗаявкамНаОплатуОбороты.ЦФО,
	|				ВЫБОР
	|					КОГДА ДвиженияПоЗаявкамНаОплатуОбороты.ЦФО.УчетПоПодразделениям = ИСТИНА
	|							ИЛИ (ДвиженияПоЗаявкамНаОплатуОбороты.ЦФО = &ПредприятиеКазна И НЕ ДвиженияПоЗаявкамНаОплатуОбороты.Подразделение.Владелец = &ПредприятиеКазна)
	|						ТОГДА ДвиженияПоЗаявкамНаОплатуОбороты.Подразделение
	|					ИНАЧЕ ""Основное""
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие1)
	|							ИЛИ ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = НЕОПРЕДЕЛЕНО
	|						ТОГДА -ДвиженияПоЗаявкамНаОплатуОбороты.СуммаОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие2)
	|							ИЛИ ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие3)
	|							ИЛИ ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие4)
	|						ТОГДА -ДвиженияПоЗаявкамНаОплатуОбороты.СуммаОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ВЫБОР
	|					КОГДА ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.Согласование1ТочкиМаршрута.Действие5)
	|						ТОГДА -ДвиженияПоЗаявкамНаОплатуОбороты.СуммаОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки,
	|				ВЫБОР
	|					КОГДА ДвиженияПоЗаявкамНаОплатуОбороты.СостояниеЗаявки = ""Исполнено""
	|						ТОГДА -ДвиженияПоЗаявкамНаОплатуОбороты.СуммаОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ,
	|				ДвиженияПоЗаявкамНаОплатуОбороты.ДополнительныйСрез
	|			ИЗ
	|				РегистрНакопления.ДвиженияПоЗаявкамНаОплату.Обороты(
	|						&Дата1,
	|						&Дата2,
	|						Месяц,
	|						СтатьяДДС = &СтатьяДДС
	|							И ЦФО = &ЦФО) КАК ДвиженияПоЗаявкамНаОплатуОбороты) КАК ВложенныйЗапрос
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.СтатьяДДС,
	|			ВложенныйЗапрос.ЦФО,
	|			ВложенныйЗапрос.Подразделение,
	|			ВЫБОР
	|				КОГДА ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
	|						ИЛИ ВложенныйЗапрос.ИнвПроект = ЗНАЧЕНИЕ(Справочник.ПредставительскиеРасходы.ПустаяСсылка)
	|						ИЛИ ВложенныйЗапрос.ИнвПроект ЕСТЬ NULL 
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ ВложенныйЗапрос.ИнвПроект
	|			КОНЕЦ) КАК Заявки
	|		ПО ВложенныйЗапрос.Предприятия = Заявки.ЦФО
	|			И ВложенныйЗапрос.Статья = Заявки.СтатьяДДС
	|			И ВложенныйЗапрос.Подразделение = Заявки.Подразделение
	|			И (ВЫБОР
	|				КОГДА Заявки.ИнвПроект = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Заявки.ИнвПроект = ВложенныйЗапрос.ИнвПроект
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Общ.СуммаДДС,
	|	ВТ_Общ.НаПодготовке,
	|	ВТ_Общ.НаСогласовании,
	|	ВТ_Общ.НаИсполнении,
	|	ВТ_Общ.Исполнено,
	|	ВТ_Общ.Годовой,
	|	ВТ_Общ.Квартальный,
	|	ВТ_Общ.Месячный,
	|	ВТ_Общ.Текущий,
	|	ВТ_Общ.ОсталосьПоСтатье,
	|	ВТ_Общ.ОсталосьПоСтатье2,
	|	ВТ_Общ.СтатьяДДС,
	|	ВЫБОР
	|		КОГДА ВТ_Общ.ЦФО.УчетПоПодразделениям = ИСТИНА
	|			ТОГДА ВТ_Общ.Подразделение
	|		ИНАЧЕ ""Основное""
	|	КОНЕЦ КАК Подразделение,
	|	ВТ_Общ.ЦФО,
	|	ВТ_Общ.ИнвПроект,
	|	ВТ_Общ.СтатьяДДС.Код КАК КодСтатьи,
	|	ВложенныйЗапрос.Валюта1 КАК Валюта,
	|	ВТ_Общ.АктуальныйСценарий
	|ПОМЕСТИТЬ ВТ_Общ_Вал
	|ИЗ
	|	ВТ_Общ КАК ВТ_Общ,
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВалютаПредприятийСрезПоследнихСценарий1.Валюта) КАК Валюта1,
	|		ВТ_Общ.ЦФО КАК ЦФО
	|	ИЗ
	|		ВТ_Общ КАК ВТ_Общ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПараметрыБюджета КАК ВалютаПредприятийСрезПоследнихСценарий1
	|			ПО ВТ_Общ.ЦФО = ВалютаПредприятийСрезПоследнихСценарий1.Предприятие
	|				И (ВалютаПредприятийСрезПоследнихСценарий1.Сценарий = &СценарийАктуальный)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_Общ.ЦФО) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Общ_Вал.СуммаДДС,
	|	ВТ_Общ_Вал.НаПодготовке,
	|	ВТ_Общ_Вал.НаСогласовании,
	|	ВТ_Общ_Вал.НаИсполнении,
	|	ВТ_Общ_Вал.Исполнено,
	|	ВТ_Общ_Вал.Годовой,
	|	ВТ_Общ_Вал.Квартальный,
	|	ВТ_Общ_Вал.Месячный,
	|	ВЫБОР
	|		КОГДА ВТ_Общ_Вал.Валюта = &ЭквивалентнаяВалюта
	|			ТОГДА ВТ_Общ_Вал.Текущий
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Общ_Вал.Валюта = &НацВалюта
	|					ТОГДА ВЫБОР
	|							КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	|								ТОГДА ВТ_Общ_Вал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ ВТ_Общ_Вал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК Текущий,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ВТ_Общ_Вал.Валюта = &ЭквивалентнаяВалюта
	|				ТОГДА ВТ_Общ_Вал.Текущий
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ_Общ_Вал.Валюта = &НацВалюта
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	|									ТОГДА ВТ_Общ_Вал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ ВТ_Общ_Вал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	|				КОНЕЦ
	|		КОНЕЦ, 0) - (ЕСТЬNULL(ВТ_Общ_Вал.НаСогласовании, 0) + ЕСТЬNULL(ВТ_Общ_Вал.НаИсполнении, 0) + ЕСТЬNULL(ВТ_Общ_Вал.Исполнено, 0)) КАК ОсталосьПоСтатье,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ВТ_Общ_Вал.Валюта = &ЭквивалентнаяВалюта
	|				ТОГДА ВТ_Общ_Вал.Текущий
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ_Общ_Вал.Валюта = &НацВалюта
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0) <> 0
	|									ТОГДА ВТ_Общ_Вал.Текущий / ЕСТЬNULL(ПлановыйКурсЭквивалентнойВалюты.Курс, 0)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ ВТ_Общ_Вал.Текущий * ЕСТЬNULL(Б_ПлановыеКурсыВалютСрезПоследних.Курс, 0)
	|				КОНЕЦ
	|		КОНЕЦ, 0) - (ЕСТЬNULL(ВТ_Общ_Вал.НаСогласовании, 0) + ЕСТЬNULL(ВТ_Общ_Вал.НаИсполнении, 0) + ЕСТЬNULL(ВТ_Общ_Вал.Исполнено, 0)) КАК ОсталосьПоСтатье2,
	|	ВТ_Общ_Вал.СтатьяДДС,
	|	ВТ_Общ_Вал.Подразделение,
	|	ВТ_Общ_Вал.ЦФО,
	|	ВТ_Общ_Вал.ИнвПроект,
	|	ВТ_Общ_Вал.КодСтатьи,
	|	ВТ_Общ_Вал.Валюта,
	|	ВТ_Общ_Вал.АктуальныйСценарий
	|ИЗ
	|	ВТ_Общ_Вал КАК ВТ_Общ_Вал
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(
	|				&ДатаКурсаБюджСц1,
	|				Сценарий = &СценарийАктуальный
	|					И Валюта2 = &ЭквивалентнаяВалюта) КАК Б_ПлановыеКурсыВалютСрезПоследних
	|		ПО ВТ_Общ_Вал.Валюта = Б_ПлановыеКурсыВалютСрезПоследних.Валюта1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б_ПлановыеКурсыВалют.СрезПоследних(
	|				&ДатаКурсаБюджСц1,
	|				Сценарий = &СценарийАктуальный
	|					И Валюта1 = &ЭквивалентнаяВалюта) КАК ПлановыйКурсЭквивалентнойВалюты
	|		ПО ВТ_Общ_Вал.Валюта = ПлановыйКурсЭквивалентнойВалюты.Валюта2";
	
	Дата1 = НачалоМесяца(ПараметрыПолучения.Дата); 
	Дата2 = КонецМесяца(ПараметрыПолучения.Дата);  
	
	СтруктураБюджетов = БюджетныйНаСервере.ПолучитьВидыБюджетовНаДату(Дата1, Ложь);
	
	//отражаем заявки на стадии подготовки для финика в столбце "другие заявки" и скрываем для остальных
	ОтражатьНаПодготовке = ?(ПараметрыСеанса.ТекущийПользователь.ПринадлежитЭлементу(Справочники.Пользователи.НайтиПоНаименованию("Финансовый")), Истина, Ложь);
	// запрос сценария с видом вариант
	АктуальныйСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Дата2, Ложь);
	СценарийВариант = ПолучитьСценарийВидаВариант(СтруктураБюджетов, АктуальныйСценарий);
	
	Запрос.УстановитьПараметр("ПредприятиеКазна",Константы.сабПредприятиеКазна.Получить());
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СценарийГод", СтруктураБюджетов.ГодовойБюджет);
	Запрос.УстановитьПараметр("СценарийКвартал", СтруктураБюджетов.КвартальныйБюджет);
	Запрос.УстановитьПараметр("СценарийМесяц", СтруктураБюджетов.МесячныйБюджет);
	Запрос.УстановитьПараметр("СценарийВариант", СценарийВариант);
	Запрос.УстановитьПараметр("СценарийАктуальный", АктуальныйСценарий);
	Запрос.УстановитьПараметр("ДатаКурсаБюджСц1", АктуальныйСценарий.АктуальнаяДата);
	Запрос.УстановитьПараметр("СтатьяДДС", ПараметрыПолучения.СтатьяДДС);
	Запрос.УстановитьПараметр("ЦФО", ПараметрыПолучения.ЦФО);
	Запрос.УстановитьПараметр("ЭквивалентнаяВалюта", ПараметрыПолучения.ЭквивалентнаяВалюта);
	Запрос.УстановитьПараметр("НацВалюта", УЧ_Сервер.НациональнаяВалюта());
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьСценарийВидаВариант(ТекущиеСценарии, АктуальныйСценарий) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СценарииПланирования.Ссылка
	|ИЗ
	|	Справочник.СценарииПланирования КАК СценарииПланирования
	|ГДЕ
	|	(СценарииПланирования.Родитель = &СценарийГод
	|			ИЛИ СценарииПланирования.Родитель = &СценарийКвартал
	|			ИЛИ СценарииПланирования.Родитель = &СценарийМесяц
	|			ИЛИ СценарииПланирования.Родитель = &СценарийАктуальный)
	|	И СценарииПланирования.ВлкючатьВПлан = ИСТИНА
	|	И СценарииПланирования.ВидБюджета = ЗНАЧЕНИЕ(Перечисление.Д_ВидыБюджета.ВариантБюджета)";
	
	Запрос.УстановитьПараметр("СценарийГод", ТекущиеСценарии.ГодовойБюджет);
	Запрос.УстановитьПараметр("СценарийКвартал", ТекущиеСценарии.КвартальныйБюджет);
	Запрос.УстановитьПараметр("СценарийМесяц", ТекущиеСценарии.МесячныйБюджет);
	Запрос.УстановитьПараметр("СценарийАктуальный", АктуальныйСценарий);
	
	МассивСц = Новый Массив;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивСц.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивСц;
	
КонецФункции

Функция ПолучитьИсполнителяОплаты(ТекДокумент) Экспорт 
	
	ТекБП = БПСервер.ПоискБП("Согласование1", ТекДокумент);
	Если ТекБП = Неопределено Тогда
		
		Если ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
			Если ТекДокумент.ЗаявкаБезНал.Количество() = 0 Тогда
				Возврат Неопределено;
			КонецЕсли;
			
			Если ТекДокумент.ТипИсточника = Перечисления.Д_ИсточникиСредств.БезНал Тогда
				ТекСчет = ТекДокумент.ЗаявкаБезНал[0].БанковскийСчет;
			Иначе
				ТекСчет = ТекДокумент.ЗаявкаБезНал[0].Источник;
			КонецЕсли;	
		ИначеЕсли ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
			Если ТекДокумент.ТипИсточника = Перечисления.Д_ИсточникиСредств.БезНал Тогда
				ТекСчет = ТекДокумент.БанковскийСчет;
			Иначе
				ТекСчет = ТекДокумент.Источник;
			КонецЕсли;	
		КонецЕсли;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Д_ИсточникППСрезПоследних.ОтветственноеЛицо
		|ИЗ
		|	РегистрСведений.Д_ИсточникПП.СрезПоследних(&Период, БанковскиеСчета = &Счет) КАК Д_ИсточникППСрезПоследних";
		Запрос.УстановитьПараметр("Период", ТекДокумент.Дата);
		Запрос.УстановитьПараметр("Счет", ТекСчет);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИсполнительОплаты = Выборка.ОтветственноеЛицо;
			КонецЦикла;	
		Иначе	
			ИсполнительОплаты = Неопределено;
		КонецЕсли;
	Иначе	
		//Если БПСервер.МеханизмСНесколькимиИсполнителями(ТекДокумент.Предприятие) Или БПСервер.ИспользуетсяМеханизмЧастичнойОплаты(ТекДокумент.Предприятие) Тогда
		//	НайденныеСтроки = ТекБП.ДопИсполнение.Найти("ИсполнительОплаты", "РольПользователя");
		//	Если НайденныеСтроки = Неопределено Тогда
		//		ИсполнительОплаты = ТекБП.ДопИсполнение.Найти(Справочники.РолиИсполнителей.ИсполнительОплаты, "РольПользователя").Исполнитель;
		//	Иначе
		//		ИсполнительОплаты = НайденныеСтроки.Исполнитель;
		//	КонецЕсли;	
		//Иначе
			Если ТекБП.ДопИсполнение.Количество() Тогда
				ИсполнительОплаты = ТекБП.ДопИсполнение[0].Исполнитель;
			Иначе	
				ИсполнительОплаты = Неопределено;	
			КонецЕсли;
		//КонецЕсли;	
	КонецЕсли;
	
	Возврат ИсполнительОплаты;
	
КонецФункции	

Функция ПолучитьИсполнителейОплаты(ТекДокумент) Экспорт 
	
	ТекСчета = Новый Массив;
	
	Если ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
		
		Для каждого ТекСтрока Из ТекДокумент.ЗаявкаБезНал Цикл
			ТекСчета.Добавить(?(ЗначениеЗаполнено(ТекСтрока.БанковскийСчет), ТекСтрока.БанковскийСчет, ТекСтрока.Источник));
		КонецЦикла; 
		
	ИначеЕсли ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
		Если ТекДокумент.ТипИсточника = Перечисления.Д_ИсточникиСредств.БезНал Тогда
			ТекСчета.Добавить(ТекДокумент.БанковскийСчет);
		Иначе
			ТекСчета.Добавить(ТекДокумент.Источник);
		КонецЕсли;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Д_ИсточникППСрезПоследних.ОтветственноеЛицо КАК ОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.Д_ИсточникПП.СрезПоследних(&Период, БанковскиеСчета В (&Счета)) КАК Д_ИсточникППСрезПоследних";
	Запрос.УстановитьПараметр("Период", ТекДокумент.Дата);
	Запрос.УстановитьПараметр("Счета", ТекСчета);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОтветственноеЛицо");
	
КонецФункции	

Функция СформироватьНазначениеДляУчета(Назначение) Экспорт
	
	ПозицияСуммы = Найти(Назначение, "Сумма ");
	Если ПозицияСуммы = 0
		И ЗначениеЗаполнено(Назначение) Тогда
		ТекстНазначение = Назначение;
	Иначе
		ТекстНазначение = Лев(Назначение, ПозицияСуммы - 1);
	КонецЕсли;
	Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
		ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
	КонецЕсли;
	Возврат ТекстНазначение;
	
КонецФункции
