
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.СуммаДокумента = Объект.Состав.Итог("Сумма");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Элементы.Группа4.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ Объект.Состав.Количество() Тогда
		НоваяСтрока = Объект.Состав.Добавить();
	КонецЕсли;
	
	Элементы.Состав.ТекущаяСтрока = 0;
	
	
	СчетПриИзменении(Неопределено);
	СчетДоходаПриИзменении(Неопределено);
	СоставСчетЗатрат1ПриИзменении(Неопределено);
	РасшифровкаПриИзменении(Неопределено);
	
	Расшифровка = Объект.Расшифровка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	СчетДоходаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	Наименование1 = ПолучитьСубконто(1);
	Наименование2 = ПолучитьСубконто(2);
	Наименование3 = ПолучитьСубконто(3);
	
	//Элементы.Субконто1.Заголовок = Наименование1;
	//Элементы.Субконто2.Заголовок = Наименование2;
	//Элементы.Субконто3.Заголовок = Наименование3;
	
	Если Наименование1 = "" Тогда
		Элементы.Субконто1.Доступность = Ложь;
	Иначе
		Элементы.Субконто1.Доступность = Истина;
	КонецЕсли;
	
	Если Наименование2 = "" Тогда
		Элементы.Субконто2.Доступность = Ложь;
	Иначе
		Элементы.Субконто2.Доступность = Истина;
	КонецЕсли;
	
	//Если Наименование3 = "" Тогда
	//	Элементы.Субконто3.Доступность = Ложь;
	//Иначе
	//	Элементы.Субконто3.Доступность = Истина;
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьСубконто(НомерСубконто)
	
	Если Объект.Счет = Неопределено ИЛИ НомерСубконто > Объект.Счет.ВидыСубконто.Количество() Тогда
		Возврат "";
	Иначе
		Возврат Объект.Счет.ВидыСубконто[НомерСубконто - 1].ВидСубконто.Наименование;			
	КонецЕсли;
		
КонецФункции // ()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПриИзменении(Элемент)
	Элементы.Группа4.ТекущаяСтраница = ?(Объект.Расшифровка, Элементы.Группа5, Элементы.Группа3);
КонецПроцедуры

&НаКлиенте
Процедура СчетДоходаПриИзменении(Элемент)
	СчетДоходаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СчетДоходаПриИзмененииНаСервере()
	
	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.СчетДохода, Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.КорСубконто1.ПодсказкаВвода = Наименование1;
	Элементы.КорСубконто2.ПодсказкаВвода = Наименование2;
	Элементы.КорСубконто3.ПодсказкаВвода = Наименование3;
	Элементы.КорСубконто1.Заголовок = Наименование1;
	Элементы.КорСубконто2.Заголовок = Наименование2;
	Элементы.КорСубконто3.Заголовок = Наименование3;
	
	Элементы.Подразделение.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	
	Элементы.КорСубконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.КорСубконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	Элементы.КорСубконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	Элементы.Подразделение.Видимость = УчетПоПодразделениям;
КонецПроцедуры

&НаКлиенте
Процедура СоставСчетЗатрат1ПриИзменении(Элемент)
	СчетЗатратПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СчетЗатратПриИзмененииНаСервере()
	
	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.Состав[0].СчетЗатрат, Объект.Состав[0].Субконто1);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.СоставКорСубконто1.ПодсказкаВвода = Наименование1;
	Элементы.СоставКорСубконто2.ПодсказкаВвода = Наименование2;
	Элементы.СоставКорСубконто3.ПодсказкаВвода = Наименование3;
	Элементы.СоставКорСубконто1.Заголовок = Наименование1;
	Элементы.СоставКорСубконто2.Заголовок = Наименование2;
	Элементы.СоставКорСубконто3.Заголовок = Наименование3;
	
	Элементы.СоставПодразделение1.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	
	Элементы.СоставКорСубконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.СоставКорСубконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	Элементы.СоставКорСубконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	Элементы.СоставПодразделение1.Видимость = УчетПоПодразделениям;
КонецПроцедуры


&НаКлиенте
Процедура Расшифровка1ПриИзменении(Элемент)
	
	Если Объект.Состав.Количество() > 1 И НЕ Расшифровка Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("Расшифровка1ПриИзмененииЗавершение", ЭтотОбъект), "Табличная часть содержит более 1 строки. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		Расшифровка1ПриИзмененииПродолжить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расшифровка1ПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		Для ТекИндекс = -Объект.Состав.Количество() По -2 Цикл
			Объект.Состав.Удалить(-ТекИндекс - 1);
		КонецЦикла;
		Расшифровка1ПриИзмененииПродолжить();
		Элементы.Состав.ТекущаяСтрока = 0;
	Иначе
		Расшифровка = 1;
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Расшифровка1ПриИзмененииПродолжить()
	
	Объект.Расшифровка = Расшифровка;
	Модифицированность = Истина;
	Элементы.Группа4.ТекущаяСтраница = ?(Объект.Расшифровка, Элементы.Группа5, Элементы.Группа3);
	
КонецПроцедуры


&НаКлиенте
Процедура СоставСчетЗатратПриИзменении(Элемент)
	ПоляОбъекта = Новый Структура("Счет, Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
	"СчетЗатрат", "КорСубконто1", "КорСубконто2", "КорСубконто3", Элементы.Состав.ТекущиеДанные.Субконто1, "Подразделение", Элементы, "СоставСубконто1", "СоставСубконто2", "СоставСубконто3", "СоставПодразделение");
	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.Состав.ТекущиеДанные, ПоляОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.СчетЗатрат КАК Счет,
	               |	Табл.Субконто1 КАК Субконто1
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&Табл КАК Табл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(Предприятия.УчетПоПодразделениям) КАК УчетПоПодразделениям,
	               |	Предприятия.Ссылка КАК Предприятие
	               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Предприятия КАК Предприятия
	               |		ПО (Предприятия.Ссылка = Врем.Субконто1)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Предприятия.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ)) КАК Количественный,
	               |	Врем.Счет КАК Счет,
	               |	МАКСИМУМ(ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ)) КАК Валютный,
	               |	УчетПоПодразделениямПредприятия.Предприятие КАК Предприятие,
	               |	МАКСИМУМ(УчетПоПодразделениямПредприятия.УчетПоПодразделениям) КАК УчетПоПодразделениям
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	               |		ПО Врем.Счет = Учетный.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	               |		ПО Врем.Субконто1 = УчетПоПодразделениямПредприятия.Предприятие
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Врем.Счет,
	               |	УчетПоПодразделениямПредприятия.Предприятие";
	
	Запрос.УстановитьПараметр("Табл", Объект.Состав.Выгрузить());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	//Соотв = Новый Соответствие;
	//Пока Выборка.Следующий() Цикл
	//	Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	//КонецЦикла;
	
	
	Для Каждого СтрокаТаблицы Из Объект.Состав Цикл
				
		НайденныеСвойства = Выборка.НайтиСтроки(Новый Структура("Счет, Предприятие", СтрокаТаблицы.СчетЗатрат, СтрокаТаблицы.Субконто1));
		Для каждого ТекНайденнаяСтрока Из НайденныеСвойства Цикл
			
			КоличествоСубконто   = ТекНайденнаяСтрока.Счет.ВидыСубконто.Количество();
			Для Индекс = 1 По 3 Цикл
				СтрокаТаблицы["КорСубконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
			КонецЦикла;
			//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
			СтрокаТаблицы["Подразделение"   + "Доступность"] = ТекНайденнаяСтрока.УчетПоПодразделениям;
			//Валютный = СтруСчета.Валютный;
			//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
			//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
			
		КонецЦикла; 
		
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

