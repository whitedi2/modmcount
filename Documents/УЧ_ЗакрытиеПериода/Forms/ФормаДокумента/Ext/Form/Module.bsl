
&НаКлиенте
Процедура НоменклатураПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		
		Элементы.Номенклатура.ТекущиеДанные.СчетЗатрат = сабОбщегоНазначенияБУХ.ПолучитьСчетПоКоду("90.02");
		
		//ПоляОбъекта = Новый Структура("Счет, Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
		//"СчетЗатрат", "Субконто1", "Субконто2", "Субконто3", Объект.Предприятие, "Подразделение", Элементы, "НоменклатураСубконто1", "НоменклатураСубконто2", "НоменклатураСубконто3", "НоменклатураПодразделение");
		//БюджетныйНаКлиенте.УстановитьДоступность(Элементы.Номенклатура.ТекущиеДанные, ПоляОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Списание25903ПриИзменении(Неопределено);
	
	ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Дата", "МесяцНачисленияСтрокой");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделения()
	Объект.Статьи.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Издержки,
		|	УчетныйОбороты.СуммаОборотДт - УчетныйОбороты.СуммаОборотКт КАК Оборот,
		|	УчетныйОбороты.Подразделение КАК ВидыДеятельности
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачалоМесяца, &КонецМесяца, , Счет = &Счет25, , Предприятия = &Предприятие, , ) КАК УчетныйОбороты
		|ГДЕ
		|	УчетныйОбороты.СуммаОборотДт <> УчетныйОбороты.СуммаОборотКт";

	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Объект.Дата));

	Результат = Запрос.Выполнить();

	// обращение №442, база УК
	ТекНоменклатура = Неопределено;	
	Если Объект.Номенклатура.Количество() Тогда
		ТекНоменклатура = Объект.Номенклатура[0].Номенклатура;
	КонецЕсли;	
	//
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтатья = Объект.Статьи.Добавить();
		НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;		
		// обращение №442, база УК
		Если ЗначениеЗаполнено(ТекНоменклатура) Тогда
			НоваяСтатья.Номенклатура = ТекНоменклатура;	
		КонецЕсли;
		//
		НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
		НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
		НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанные()
	Объект.Статьи.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Издержки,
		|	УчетныйОбороты.СуммаОборотДт - УчетныйОбороты.СуммаОборотКт КАК Оборот,
		|	УчетныйОбороты.Подразделение КАК ВидыДеятельности,
		|	ВЫБОР
		|		КОГДА УчетныйОбороты.Подразделение В (&ВидыДеятельности)
		|			ТОГДА Ложь
		|		ИНАЧЕ Истина
		|	КОНЕЦ КАК ПризнакОбщегоПодразделения
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачалоМесяца, &КонецМесяца, , Счет = &Счет25, , Предприятия = &Предприятие, , ) КАК УчетныйОбороты";

		
	ВидыДеятельности = Новый СписокЗначений;
	Для каждого ТекСтрока Из Объект.Номенклатура Цикл
		ВидыДеятельности.Добавить(ТекСтрока.ВидДеятельности);
	КонецЦикла;
	
	УчетПоПодр = Объект.Предприятие.УчетПоПодразделениям;
	ОсновноеПодр = Объект.Предприятие.ВидДеятельности;
	Если НЕ УчетПоПодр Тогда
		ВидыДеятельности.Добавить(ОсновноеПодр);	
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("ВидыДеятельности", ВидыДеятельности);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Объект.Дата));
	
	Результат = Запрос.Выполнить();
	
	Если Объект.Списание25903 = 2 Тогда
		//Процент = ТекСтрока.Процент;
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		//СтруктураПоиска = Новый Структура("ВидыДеятельности",?(УчетПоПодр, ВидДеятельности, ОсновноеПодр));
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл//НайтиСледующий(СтруктураПоиска) Цикл
			НоваяСтатья = Объект.Статьи.Добавить();
			//НоваяСтатья.Номенклатура = Номенклатура;
			//НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;
			НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
			НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
			НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот;
		КонецЦикла;
	Иначе	
		Для каждого ТекСтрока Из Объект.Номенклатура Цикл
			Номенклатура = ТекСтрока.Номенклатура;
			ВидДеятельности = ТекСтрока.ВидДеятельности;
			Процент = ТекСтрока.Процент;
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			СтруктураПоиска = Новый Структура("ПризнакОбщегоПодразделения, ВидыДеятельности", Ложь, ВидДеятельности);
			Пока ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Цикл//НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтатья = Объект.Статьи.Добавить();
				НоваяСтатья.Номенклатура = Номенклатура;
				НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;
				НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
				НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
				НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот * Процент/100;
			КонецЦикла;
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			СтруктураПоиска = Новый Структура("ПризнакОбщегоПодразделения",Истина);
			Пока ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Цикл//НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтатья = Объект.Статьи.Добавить();
				НоваяСтатья.Номенклатура = Номенклатура;
				НоваяСтатья.ВидДеятельности = ВидДеятельности;
				НоваяСтатья.Подразделение25 = ВыборкаДетальныеЗаписи.ВидыДеятельности;
				НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
				НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
				НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот * Процент/100;
			КонецЦикла;
			
			
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.ВсеПодразделения Тогда
		ЗаполнитьПодразделения();
	Иначе
		ПолучитьДанные();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	ПредприятиеПриИзмененииНаСервере();
	ЗаполнитьРаспределениеПрибылиНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДолиУчредителейПроекта(Проект, ДатаПолучения)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ДоляУчредителяСрезПоследних.Учредитель КАК Учредитель,
	//               |	ДоляУчредителяСрезПоследних.ДоляУчредителя КАК ДоляУчредителяПроцент
	//               |ИЗ
	//               |	РегистрСведений.ДоляУчредителя.СрезПоследних(&ДатаПолучения, Предприятие = &Проект) КАК ДоляУчредителяСрезПоследних";
	//Запрос.УстановитьПараметр("ДатаПолучения", ДатаПолучения);
	//Запрос.УстановитьПараметр("Проект", Проект);
	//
	//Результат = Запрос.Выполнить();
	//
	//Возврат Результат.Выгрузить();
	
КонецФункции

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	ЗаполнитьНоменклатуруСервер()
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьНоменклатуруСервер()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1,
		|	УчетныйОбороты.КоличествоОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачПериода, &КонПериода, , Счет = &Счет41, , Предприятия = &ВыбПредприятие, КорСчет = &Счет9002, ) КАК УчетныйОбороты";

	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ВыбПредприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	Запрос.УстановитьПараметр("Счет9002", ПланыСчетов.Учетный.Счет9002());

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.Субконто1 = ВыборкаДетальныеЗаписи.Субконто1;
		НоваяСтрока.КоличествоРеализовано = ВыборкаДетальныеЗаписи.КоличествоОборотКт;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьПроценты(Команда)
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		ТекСтрока.Процент=ТекСтрока.КоличествоРеализовано/Объект.Номенклатура.Итог("КоличествоРеализовано")*100;
	КонецЦикла;
	ТекСтрока.Процент = ТекСтрока.Процент  + (100 - Объект.Номенклатура.Итог("Процент"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПродукцию(Команда)
	ЗаполнитьПродукциюСервер(Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПродукциюСервер(ИмяКоманды)

	Документы.УЧ_ЗакрытиеПериода.ЗаполнитьПродукцию(ИмяКоманды, Объект.Предприятие, Объект.Дата, Объект.Номенклатура, Элементы.НоменклатураСубконто3.Заголовок);
	
	Если ИмяКоманды = "НоменклатураЗаполнитьПродукцию" Тогда
		Объект.ВариантРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.сабВариантыРаспределенияЗатратЗакрытия.ПоКоличествуПроизводства");
	ИначеЕсли ИмяКоманды = "НоменклатураЗаполнитьПродукциюСумма" Тогда
		Объект.ВариантРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.сабВариантыРаспределенияЗатратЗакрытия.ПоСуммеПрямыхЗатрат");
	Иначе
		Объект.ВариантРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.сабВариантыРаспределенияЗатратЗакрытия.ПоСуммеВыручки");
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
		
		Объект.Дата = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
	КонецЕсли;	
	
	ЗаполнитьЗаголовкиСубконто();
	
	Элементы.НоменклатураСчетЗатрат.РежимВыбораИзСписка = Истина;
	Элементы.НоменклатураСчетЗатрат.СписокВыбора.ЗагрузитьЗначения(Документы.УЧ_ЗакрытиеПериода.СчетаЗакрытия())
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаголовкиСубконто()

	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(ПланыСчетов.Учетный.Счет9002(), Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.НоменклатураСубконто1.Заголовок = Наименование1;
	Элементы.НоменклатураСубконто2.Заголовок = Наименование2;
	Элементы.НоменклатураСубконто3.Заголовок = Наименование3;
	
	Если Объект.Номенклатура.Количество() Тогда
		Если ЗначениеЗаполнено(Объект.Номенклатура[0].Субконто3) Тогда
			Элементы.НоменклатураСубконто3.Заголовок = Объект.Номенклатура[0].Субконто3.Метаданные().Синоним;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.НоменклатураСубконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.НоменклатураСубконто2.Видимость = Ложь; // Статьи затрат не нужны
	Элементы.НоменклатураСубконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	
	Элементы.НоменклатураПодразделение.Видимость = УчетПоПодразделениям;

КонецПроцедуры
 

&НаКлиенте
Процедура РассчитатьПроцентыПоЛитражу(Команда)

	
	ИтогоЛитраж = 0;
	
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		Попытка 
			ИтогоЛитраж = ИтогоЛитраж + БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока.Номенклатура, "Литраж") * ТекСтрока.КоличествоРеализовано;
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен литраж! " + ТекСтрока.Номенклатура;
			Сообщение.Сообщить();
			Возврат;
		КонецПопытки;
	КонецЦикла;	
	
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		ТекСтрока.Процент = (БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока.Номенклатура, "Литраж") * ТекСтрока.КоличествоРеализовано) / ИтогоЛитраж * 100;
	КонецЦикла;
	
	ТекСтрока.Процент = ТекСтрока.Процент  + (100 - Объект.Номенклатура.Итог("Процент"));
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Списание25903ПриИзменении(Элемент)
	Если Объект.Списание25903 = 2 Тогда
		Элементы.ГруппаНоменклатура.Видимость = Ложь;
		Элементы.Статья91.Видимость = Истина;
		//Элементы.СтатьиНоменклатура.Видимость = Ложь;
		//Если НЕ Элемент = Неопределено Тогда
		//	ПолучитьДанные();		
		//КонецЕсли;
	Иначе
		Элементы.ГруппаНоменклатура.Видимость = Истина;
		Элементы.Статья91.Видимость = Ложь;
		//Элементы.СтатьиНоменклатура.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.СчетЗатрат КАК Счет
	//               |ПОМЕСТИТЬ Врем
	//               |ИЗ
	//               |	&Табл КАК Табл
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	//               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	//               |ИЗ
	//               |	Справочник.Предприятия КАК Предприятия
	//               |ГДЕ
	//               |	Предприятия.Ссылка В(&Предприятие)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ) КАК Количественный,
	//               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет) КАК Счет,
	//               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ) КАК Валютный,
	//               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	//               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	//               |ИЗ
	//               |	Врем КАК Врем
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	//               |		ПО Врем.Счет = Учетный.Ссылка,
	//               |	УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет),
	//               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ),
	//               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ),
	//               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	//               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям";
	//
	//ТЧ = Объект.Номенклатура.Выгрузить();
	//
	//Запрос.УстановитьПараметр("Табл", ТЧ);
	//Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Соотв = Новый Соответствие;
	//Пока Выборка.Следующий() Цикл
	//	Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	//КонецЦикла;
	//
	//
	//Для Каждого СтрокаТаблицы Из Объект.Номенклатура Цикл
	//	СтруСчета = Соотв.Получить(СтрокаТаблицы.СчетЗатрат);
	//	КоличествоСубконто   = СтруСчета.КоличествоСубконто;
	//	Для Индекс = 1 По 3 Цикл
	//		СтрокаТаблицы["Субконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
	//	КонецЦикла;
	//	//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
	//	СтрокаТаблицы["Подразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
	//	//Валютный = СтруСчета.Валютный;
	//	//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
	//	//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
	//	
	//КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРаспределениеПрибылиНаСервере()
	
	//Объект.РаспределениеПрибыли.Очистить();
	//ТЗ_Доли = ПолучитьДолиУчредителейПроекта(Объект.Предприятие, Объект.Дата);
	//
	//Для Каждого ТекСтрокаДУ Из ТЗ_Доли Цикл
	//	НСтрРаспределения = Объект.РаспределениеПрибыли.Добавить();
	//	НСтрРаспределения.Учредитель = ТекСтрокаДУ.Учредитель;
	//	НСтрРаспределения.Процент = ТекСтрокаДУ.ДоляУчредителяПроцент;
	//КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьРаспределениеПрибыли(Команда)
	ЗаполнитьРаспределениеПрибылиНаСервере();
КонецПроцедуры

&НаСервере
Функция ПроверкаНаНаличиеРаннихДокументовБезГалочкиЗаблокироватьИзмененияДокументов()
	
	//Проверка на наличие ранних документов без галочки ЗаблокироватьИзмененияДокументов
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ЗакрытиеПериода.Ссылка КАК Ссылка,
	|	УЧ_ЗакрытиеПериода.Дата КАК Дата,
	|	УЧ_ЗакрытиеПериода.Предприятие КАК Предприятие,
	|	УЧ_ЗакрытиеПериода.ЗаблокироватьИзмененияДокументов КАК ЗаблокироватьИзмененияДокументов
	|ИЗ
	|	Документ.УЧ_ЗакрытиеПериода КАК УЧ_ЗакрытиеПериода
	|ГДЕ
	|	УЧ_ЗакрытиеПериода.Предприятие = &Предприятие
	|	И УЧ_ЗакрытиеПериода.Проведен = ИСТИНА
	|	И УЧ_ЗакрытиеПериода.Дата < &ДатаБлокировкиИзмененияДокументов
	|	И УЧ_ЗакрытиеПериода.ЗаблокироватьИзмененияДокументов = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ДатаБлокировкиИзмененияДокументов", Объект.Дата);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Истина;
	КонецЦикла;
	Возврат Ложь;

КонецФункции

&НаСервере
Функция ПроверкаНаНаличиеПозднихДокументовСГалочкойЗаблокироватьИзмененияДокументов()
	
	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УЧ_ЗакрытиеПериода.Ссылка КАК Ссылка,
		|	УЧ_ЗакрытиеПериода.Дата КАК Дата,
		|	УЧ_ЗакрытиеПериода.Предприятие КАК Предприятие,
		|	УЧ_ЗакрытиеПериода.ЗаблокироватьИзмененияДокументов КАК ЗаблокироватьИзмененияДокументов
		|ИЗ
		|	Документ.УЧ_ЗакрытиеПериода КАК УЧ_ЗакрытиеПериода
		|ГДЕ
		|	УЧ_ЗакрытиеПериода.Предприятие = &Предприятие
		|	И УЧ_ЗакрытиеПериода.Проведен = ИСТИНА
		|	И УЧ_ЗакрытиеПериода.Дата > &ДатаБлокировкиИзмененияДокументов
		|	И УЧ_ЗакрытиеПериода.ЗаблокироватьИзмененияДокументов = ИСТИНА";
		
		Запрос.УстановитьПараметр("ДатаБлокировкиИзмененияДокументов", Объект.Дата);
		Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат Истина;
		КонецЦикла;
		Возврат Ложь;
		
КонецФункции

&НаКлиенте
Процедура ЗаблокироватьИзмененияДокументовПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ЗаблокироватьИзмененияДокументов = Ложь;
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Для изменения данного свойства необходимо записать документ");
		Возврат;		
	КонецЕсли;
	Если Объект.ЗаблокироватьИзмененияДокументов = Истина Тогда
		Если ПроверкаНаНаличиеРаннихДокументовБезГалочкиЗаблокироватьИзмененияДокументов() Тогда
			Объект.ЗаблокироватьИзмененияДокументов = Ложь;
			Оповещение = Новый ОписаниеОповещения();
			ПоказатьПредупреждение(Оповещение, "Сначала необходимо установить галочку ""Заблокировать Изменения Документов"" у более ранних документов ""Закрытие периода""");
			Возврат;		
		КонецЕсли;
	КонецЕсли;
	Если Объект.ЗаблокироватьИзмененияДокументов = Ложь Тогда
		Если ПроверкаНаНаличиеПозднихДокументовСГалочкойЗаблокироватьИзмененияДокументов() Тогда
			
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСнятьГалочкиУПоследующих",
      ЭтотОбъект);	
 
    	ПоказатьВопрос(Оповещение,
        "Существуют более поздние ""Закрытия периода"" с признаком заблокировать изменения документов. Снять признак у этих документов?",
        РежимДиалогаВопрос.ДаНетОтмена,
        0,
        КодВозвратаДиалога.Да,
        // Заголовок
    		); 
			
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаСнятьГалочкиУПоследующих(Результат, Параметры) Экспорт
 
	Если Результат = КодВозвратаДиалога.Да Тогда
		СнятьПризнакЗаблокироватьИзмененияДокументов();
		ЭтаФорма.Прочитать();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Объект.ЗаблокироватьИзмененияДокументов = Истина;
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Объект.ЗаблокироватьИзмененияДокументов = Истина;
		Возврат;		
	КонецЕсли;	
 
КонецПроцедуры

&НаСервере
Процедура СнятьПризнакЗаблокироватьИзмененияДокументов()
	Отбор=Новый Структура;
	Отбор.Вставить("ЗаблокироватьИзмененияДокументов",Истина);
	ВыборкаДокументов = Документы.УЧ_ЗакрытиеПериода.Выбрать(Объект.Дата,);
	Пока ВыборкаДокументов.Следующий() Цикл
		Если ВыборкаДокументов.ЗаблокироватьИзмененияДокументов Тогда
			ДокОбъект = ВыборкаДокументов.ПолучитьОбъект();
			ДокОбъект.ЗаблокироватьИзмененияДокументов = Ложь;
			ДокОбъект.Записать();			
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	сабОбщегоНазначенияБУХ.ФормаДокументаУУОбработкаБУПередЗаписью(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

#Область РаботаСПериодом

&НаКлиенте
Процедура ЗаполнитьМесяцПоДате(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления)
	
	Значение = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
	
КонецПроцедуры

Функция ПолучитьПредставлениеМесяца(ДатаНачалаМесяца) Экспорт
	
	Возврат Формат(ДатаНачалаМесяца, "ДФ='ММММ гггг'");
	
КонецФункции

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Дата", "МесяцНачисленияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ВводМесяцаРегулирование(ЭтаФорма, "Объект.Дата", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаПриИзменении(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления, Модифицированность = Ложь) Экспорт
	
	ЗначениеПредставления = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления);
	Значение              = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	
	ДатаКакМесяцПодобратьДатуПоТексту(ЗначениеПредставления, Значение);
	
	УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
	УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, Значение);
	
	Модифицированность = Истина;
	
КонецПроцедуры 

&НаКлиенте
Функция ДатаКакМесяцПодобратьДатуПоТексту(Текст, ДатаПоТексту = НеОпределено)
	
	СписокВозврата = Новый СписокЗначений;
	ТекущийГод = Год(ДатаСеанса());
	
	Если ПустаяСтрока(Текст) Тогда
		ДатаПоТексту = Дата(1, 1, 1);
		Возврат СписокВозврата;
	КонецЕсли;
	
	Если СтрНайти(Текст, ".") <> 0 Тогда
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, ".");
	ИначеЕсли СтрНайти(Текст, ",") <> 0 Тогда
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, ",");
	ИначеЕсли СтрНайти(Текст, "-") <> 0 Тогда
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, "-");
	ИначеЕсли СтрНайти(Текст, "/") <> 0 Тогда
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, "/");
	ИначеЕсли СтрНайти(Текст, "\") <> 0 Тогда
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, "\");
	Иначе
		Подстроки = РазложитьСтрокуВМассивПодстрок(Текст, " ");
	КонецЕсли;
	
	Если Подстроки.Количество() = 1 Тогда
		
		Если ТолькоЦифрыВСтроке(Текст) Тогда
			МесяцЧислом = Число(Текст);
			Если МесяцЧислом >= 1 И МесяцЧислом <=12 Тогда
				ДатаПоТексту = Дата(ТекущийГод, МесяцЧислом, 1);
				Если СтрДлина(Текст) = 1 Тогда
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='М/гг'"));
				Иначе
					СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММ/гг'"));
				КонецЕсли;
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
		Иначе
			СписокМесяцев = СписокМесяцевПоСтроке(Текст);
			Для Каждого Месяц Из СписокМесяцев Цикл
				ДатаПоТексту = Дата(ТекущийГод, Месяц, 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли Подстроки.Количество() = 2 Тогда
		
		Если ТолькоЦифрыВСтроке(Подстроки[1]) Тогда
			
			Если ПустаяСтрока(Подстроки[1]) Тогда
				ГодЧислом = 0;
				Подстроки[1] = "0";
				ТекстВозврата = Текст + "0";
			Иначе
				ГодЧислом = Число(Подстроки[1]);
				ТекстВозврата = "";
			КонецЕсли;
			
			Если ГодЧислом > 3000 Тогда
				Возврат СписокВозврата;
			КонецЕсли;
			
			Если СтрДлина(Подстроки[1]) <= 1 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 3) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 2 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 2) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 3 Тогда
				ГодЧислом = Число(Лев(Формат(ТекущийГод, "ЧГ="), 1) + Подстроки[1]);
			ИначеЕсли СтрДлина(Подстроки[1]) = 4 Тогда
				ГодЧислом = Число(Подстроки[1]);
			КонецЕсли;                    
			
		Иначе
			
			Возврат СписокВозврата;
			
		КонецЕсли;                
		Если ЗначениеЗаполнено(Подстроки[0]) И ТолькоЦифрыВСтроке(Подстроки[0]) Тогда
			
			МесяцЧислом = Число(Подстроки[0]);
			Если МесяцЧислом >= 1 И МесяцЧислом <= 12 Тогда
				ДатаПоТексту = Дата(ГодЧислом, МесяцЧислом, 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			Иначе
				Возврат СписокВозврата;
			КонецЕсли;                
			
		Иначе
			
			СписокМесяцев = СписокМесяцевПоСтроке(Подстроки[0]);
			
			Если СписокМесяцев.Количество() = 1 Тогда
				ДатаПоТексту = Дата(ГодЧислом, СписокМесяцев[0], 1);
				СписокВозврата.Добавить(Формат(ДатаПоТексту, "ДФ='ММММ гггг'"));
			Иначе
				Для Каждого Месяц Из СписокМесяцев Цикл
					ДатаПоТексту = Дата(ГодЧислом, Месяц, 1);
					СписокВозврата.Добавить(Формат(Дата(ГодЧислом, Месяц, 1), "ДФ='ММММ гггг'"));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокВозврата;
	
КонецФункции

&НаКлиенте
Процедура ВводМесяцаРегулирование(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления, Направление, Модифицированность = Ложь, ЗначениеМесяцаПоУмолчанию = Неопределено) Экспорт
	
	Значение = ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	
	Если Значение <= '19000101' Тогда
		
		Если ЗначениеМесяцаПоУмолчанию = Неопределено Тогда
			Значение = НачалоМесяца(ДатаСеанса());
		Иначе
			Значение = НачалоМесяца(ЗначениеМесяцаПоУмолчанию);
		КонецЕсли;
		
		НовоеЗначение = Значение;
		
	Иначе
		НовоеЗначение = ДобавитьМесяц(Значение, Направление);
	КонецЕсли; 
	
	Если НовоеЗначение >= '00010101' Тогда
		
		Значение = НовоеЗначение;
		
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита, Значение);
		УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
		
		Модифицированность = Истина;
	 	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если Текст <> "" Тогда
		ДанныеВыбора = ДатаКакМесяцПодобратьДатуПоТексту(Текст);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если Не ПустаяСтрока(Текст) Тогда
		ДанныеВыбора = ДатаКакМесяцПодобратьДатуПоТексту(Текст);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция СписокМесяцевПоСтроке(Текст)
	
	СписокМесяцев  = Новый СписокЗначений;
	Месяцы         = Новый Соответствие;
	МесяцыВозврата = Новый Массив;
	
	Для Счетчик = 1 По 12 Цикл
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='ММММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
		Представление = Формат(Дата(2000, Счетчик, 1), "ДФ='МММ'");
		СписокМесяцев.Добавить(Счетчик, Представление);
	КонецЦикла;
	
	Для Каждого ЭлементСписка Из СписокМесяцев Цикл
		Если ВРег(Текст) = ВРег(Лев(ЭлементСписка.Представление, СтрДлина(Текст))) Тогда
			Месяцы[ЭлементСписка.Значение] = 0;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из Месяцы Цикл
		МесяцыВозврата.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	Возврат МесяцыВозврата;
	
КонецФункции

Функция ТолькоЦифрыВСтроке(Знач СтрокаПроверки, Знач УчитыватьЛидирующиеНули = Истина, Знач УчитыватьПробелы = Истина) Экспорт
	
	Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не УчитыватьПробелы Тогда
		СтрокаПроверки = СтрЗаменить(СтрокаПроверки, " ", "");
	КонецЕсли;
		
	Если ПустаяСтрока(СтрокаПроверки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не УчитыватьЛидирующиеНули Тогда
		Позиция = 1;
		// Взятие символа за границей строки возвращает пустую строку.
		Пока Сред(СтрокаПроверки, Позиция, 1) = "0" Цикл
			Позиция = Позиция + 1;
		КонецЦикла;
		СтрокаПроверки = Сред(СтрокаПроверки, Позиция);
	КонецЕсли;
	
	// Если содержит только цифры, то в результате замен должна быть получена пустая строка.
	// Проверять при помощи ПустаяСтрока нельзя, так как в исходной строке могут быть пробельные символы.
	Возврат СтрДлина(
		СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить(
		СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( 
			СтрокаПроверки, "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", "")) = 0;
	
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = СтрНайти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ДатаСеанса() Экспорт
	Возврат ТекущаяДата();
КонецФункции

&НаКлиенте
Процедура УстановитьРеквизитФормыПоПути(Форма, ПутьРеквизита, Значение, ТолькоЕслиНеЗаполнен = Ложь) Экспорт
	
	МассивИмен = СтрРазделить(ПутьРеквизита, ".");
	
	Объект1        = Форма;
	ПоследнееПоле = МассивИмен[МассивИмен.Количество()-1];
	
	Для Сч = 0 По МассивИмен.Количество()-2 Цикл
		Объект1 = Объект1[МассивИмен[Сч]]
	КонецЦикла;
	Если НЕ ТолькоЕслиНеЗаполнен ИЛИ НЕ ЗначениеЗаполнено(Объект1[ПоследнееПоле]) Тогда
		Объект1[ПоследнееПоле] = Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита) Экспорт
	
	МассивИмен = СтрРазделить(ПутьРеквизита, ".");
	
	Объект1        = Форма;
	ПоследнееПоле = МассивИмен[МассивИмен.Количество()-1];
	
	Для Сч = 0 По МассивИмен.Количество()-2 Цикл
		Объект1 = Объект1[МассивИмен[Сч]]
	КонецЦикла;
	
	Возврат Объект1[ПоследнееПоле];
	
КонецФункции

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата));
	ОписаниеОповещения     = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбораПериода, Элементы.МесяцНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Дата = РезультатВыбора.НачалоПериода;
	
КонецПроцедуры

#КонецОбласти 

