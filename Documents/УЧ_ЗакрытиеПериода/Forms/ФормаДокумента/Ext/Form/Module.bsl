
&НаКлиенте
Процедура НоменклатураПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		
		Элементы.Номенклатура.ТекущиеДанные.СчетЗатрат = сабОбщегоНазначенияБУХ.ПолучитьСчетПоКоду("90.02");
		
		//ПоляОбъекта = Новый Структура("Счет, Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
		//"СчетЗатрат", "Субконто1", "Субконто2", "Субконто3", Объект.Предприятие, "Подразделение", Элементы, "НоменклатураСубконто1", "НоменклатураСубконто2", "НоменклатураСубконто3", "НоменклатураПодразделение");
		//БюджетныйНаКлиенте.УстановитьДоступность(Элементы.Номенклатура.ТекущиеДанные, ПоляОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Списание25903ПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделения()
	Объект.Статьи.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Издержки,
		|	УчетныйОбороты.СуммаОборотДт - УчетныйОбороты.СуммаОборотКт КАК Оборот,
		|	УчетныйОбороты.Подразделение КАК ВидыДеятельности
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачалоМесяца, &КонецМесяца, , Счет = &Счет25, , Предприятия = &Предприятие, , ) КАК УчетныйОбороты
		|ГДЕ
		|	УчетныйОбороты.СуммаОборотДт <> УчетныйОбороты.СуммаОборотКт";

	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Объект.Дата));

	Результат = Запрос.Выполнить();

	// обращение №442, база УК
	ТекНоменклатура = Неопределено;	
	Если Объект.Номенклатура.Количество() Тогда
		ТекНоменклатура = Объект.Номенклатура[0].Номенклатура;
	КонецЕсли;	
	//
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтатья = Объект.Статьи.Добавить();
		НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;		
		// обращение №442, база УК
		Если ЗначениеЗаполнено(ТекНоменклатура) Тогда
			НоваяСтатья.Номенклатура = ТекНоменклатура;	
		КонецЕсли;
		//
		НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
		НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
		НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанные()
	Объект.Статьи.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Издержки,
		|	УчетныйОбороты.СуммаОборотДт - УчетныйОбороты.СуммаОборотКт КАК Оборот,
		|	УчетныйОбороты.Подразделение КАК ВидыДеятельности,
		|	ВЫБОР
		|		КОГДА УчетныйОбороты.Подразделение В (&ВидыДеятельности)
		|			ТОГДА Ложь
		|		ИНАЧЕ Истина
		|	КОНЕЦ КАК ПризнакОбщегоПодразделения
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачалоМесяца, &КонецМесяца, , Счет = &Счет25, , Предприятия = &Предприятие, , ) КАК УчетныйОбороты";

		
	ВидыДеятельности = Новый СписокЗначений;
	Для каждого ТекСтрока Из Объект.Номенклатура Цикл
		ВидыДеятельности.Добавить(ТекСтрока.ВидДеятельности);
	КонецЦикла;
	
	УчетПоПодр = Объект.Предприятие.УчетПоПодразделениям;
	ОсновноеПодр = Объект.Предприятие.ВидДеятельности;
	Если НЕ УчетПоПодр Тогда
		ВидыДеятельности.Добавить(ОсновноеПодр);	
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("ВидыДеятельности", ВидыДеятельности);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Объект.Дата));
	
	Результат = Запрос.Выполнить();
	
	Если Объект.Списание25903 = 2 Тогда
		//Процент = ТекСтрока.Процент;
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		//СтруктураПоиска = Новый Структура("ВидыДеятельности",?(УчетПоПодр, ВидДеятельности, ОсновноеПодр));
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл//НайтиСледующий(СтруктураПоиска) Цикл
			НоваяСтатья = Объект.Статьи.Добавить();
			//НоваяСтатья.Номенклатура = Номенклатура;
			//НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;
			НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
			НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
			НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот;
		КонецЦикла;
	Иначе	
		Для каждого ТекСтрока Из Объект.Номенклатура Цикл
			Номенклатура = ТекСтрока.Номенклатура;
			ВидДеятельности = ТекСтрока.ВидДеятельности;
			Процент = ТекСтрока.Процент;
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			СтруктураПоиска = Новый Структура("ПризнакОбщегоПодразделения, ВидыДеятельности", Ложь, ВидДеятельности);
			Пока ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Цикл//НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтатья = Объект.Статьи.Добавить();
				НоваяСтатья.Номенклатура = Номенклатура;
				НоваяСтатья.ВидДеятельности = ВыборкаДетальныеЗаписи.ВидыДеятельности;
				НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
				НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
				НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот * Процент/100;
			КонецЦикла;
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			СтруктураПоиска = Новый Структура("ПризнакОбщегоПодразделения",Истина);
			Пока ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Цикл//НайтиСледующий(СтруктураПоиска) Цикл
				НоваяСтатья = Объект.Статьи.Добавить();
				НоваяСтатья.Номенклатура = Номенклатура;
				НоваяСтатья.ВидДеятельности = ВидДеятельности;
				НоваяСтатья.Подразделение25 = ВыборкаДетальныеЗаписи.ВидыДеятельности;
				НоваяСтатья.Издержки = ВыборкаДетальныеЗаписи.Издержки;
				НоваяСтатья.Сумма = ВыборкаДетальныеЗаписи.Оборот;
				НоваяСтатья.СуммаПроц = ВыборкаДетальныеЗаписи.Оборот * Процент/100;
			КонецЦикла;
			
			
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.ВсеПодразделения Тогда
		ЗаполнитьПодразделения();
	Иначе
		ПолучитьДанные();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	ПредприятиеПриИзмененииНаСервере();
	ЗаполнитьРаспределениеПрибылиНаСервере();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДолиУчредителейПроекта(Проект, ДатаПолучения)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ДоляУчредителяСрезПоследних.Учредитель КАК Учредитель,
	//               |	ДоляУчредителяСрезПоследних.ДоляУчредителя КАК ДоляУчредителяПроцент
	//               |ИЗ
	//               |	РегистрСведений.ДоляУчредителя.СрезПоследних(&ДатаПолучения, Предприятие = &Проект) КАК ДоляУчредителяСрезПоследних";
	//Запрос.УстановитьПараметр("ДатаПолучения", ДатаПолучения);
	//Запрос.УстановитьПараметр("Проект", Проект);
	//
	//Результат = Запрос.Выполнить();
	//
	//Возврат Результат.Выгрузить();
	
КонецФункции

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	ЗаполнитьНоменклатуруСервер()
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьНоменклатуруСервер()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1,
		|	УчетныйОбороты.КоличествоОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(&НачПериода, &КонПериода, , Счет = &Счет41, , Предприятия = &ВыбПредприятие, КорСчет = &Счет9002, ) КАК УчетныйОбороты";

	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ВыбПредприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет91());
	Запрос.УстановитьПараметр("Счет9002", ПланыСчетов.Учетный.Счет9002());

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока =Объект.Номенклатура.Добавить();
		НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Субконто1;
		НоваяСтрока.КоличествоРеализовано = ВыборкаДетальныеЗаписи.КоличествоОборотКт;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьПроценты(Команда)
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		ТекСтрока.Процент=ТекСтрока.КоличествоРеализовано/Объект.Номенклатура.Итог("КоличествоРеализовано")*100;
	КонецЦикла;
	ТекСтрока.Процент = ТекСтрока.Процент  + (100 - Объект.Номенклатура.Итог("Процент"));
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьПродукциюСервер(ИмяКоманды)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Номенклатура,
		|	УчетныйОбороты.КоличествоОборотДт КАК КоличествоРеализовано,
		|	УчетныйОбороты.ПодразделениеКор КАК ВидДеятельности,
		|	ВЫБОР
		|		КОГДА УчетныйОбороты1.КоличествоОборотДт = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОбороты.КоличествоОборотДт / УчетныйОбороты1.КоличествоОборотДт
		|	КОНЕЦ * 100 КАК Процент,
		|	УчетныйОбороты.Субконто3 КАК Субконто3,
		|	УчетныйОбороты.КоличествоОборот КАК Количество,
		|	0 КАК Сумма,
		|	УчетныйОбороты.КорСубконто1 КАК НоменклатурнаяГруппа,
		|	ИСТИНА КАК ЭтоПроизводство
		|ПОМЕСТИТЬ Продукция
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет = &Счет43,
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И СценарийПлана = &СценарийФакт,
		|			КорСчет = &Счет40,
		|			) КАК УчетныйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет43,
		|				,
		|				Предприятия = &ВыбПредприятие
		|					И СценарийПлана = &СценарийФакт,
		|				КорСчет = &Счет40,
		|				) КАК УчетныйОбороты1
		|		ПО УчетныйОбороты.Предприятия = УчетныйОбороты1.Предприятия
		|			И УчетныйОбороты.КорСубконто1 = УчетныйОбороты1.КорСубконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетныйОбороты.Субконто1 КАК Субконто1,
		|	УчетныйОбороты.СуммаОборот КАК КоличествоРеализовано,
		|	УчетныйОбороты.Подразделение КАК ВидДеятельности,
		|	ВЫБОР
		|		КОГДА УчетныйОбороты1.СуммаОборот = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОбороты.СуммаОборот / УчетныйОбороты1.СуммаОборот
		|	КОНЕЦ * 100 КАК Процент,
		|	УчетныйОбороты.Субконто3 КАК Субконто3,
		|	&Счет9002 КАК СчетЗатрат,
		|	0 КАК Количество,
		|	УчетныйОбороты.СуммаОборот КАК Сумма,
		|	NULL КАК НоменклатурнаяГруппа,
		|	ЛОЖЬ КАК ЭтоПроизводство
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет = &СчетРасчета,
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							Продукция.Номенклатура КАК Номенклатура
		|						ИЗ
		|							Продукция КАК Продукция)
		|				И СценарийПлана = &СценарийФакт
		|				И ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Номенклатура),
		|			,
		|			) КАК УчетныйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &СчетРасчета,
		|				,
		|				Предприятия = &ВыбПредприятие
		|					И НЕ Субконто1 В
		|							(ВЫБРАТЬ
		|								Продукция.Номенклатура КАК Номенклатура
		|							ИЗ
		|								Продукция КАК Продукция)
		|					И СценарийПлана = &СценарийФакт
		|					И ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Номенклатура),
		|				,
		|				) КАК УчетныйОбороты1
		|		ПО УчетныйОбороты.Предприятия = УчетныйОбороты1.Предприятия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Продукция.Номенклатура,
		|	Продукция.КоличествоРеализовано,
		|	Продукция.ВидДеятельности,
		|	Продукция.Процент,
		|	Продукция.Субконто3,
		|	&Счет9002,
		|	Продукция.Количество,
		|	Продукция.Сумма,
		|	Продукция.НоменклатурнаяГруппа,
		|	Продукция.ЭтоПроизводство
		|ИЗ
		|	Продукция КАК Продукция";

	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ВыбПредприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Счет9002", ПланыСчетов.Учетный.Счет9002());
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
	Запрос.УстановитьПараметр("Счет40", ПланыСчетов.Учетный.Счет40());
	Запрос.УстановитьПараметр("СценарийФакт", Справочники.СценарииПланирования.СценарийФакт());
	Запрос.УстановитьПараметр("СчетРасчета", ?(ИмяКоманды = "ЗаполнитьПродукциюВыручка", ПланыСчетов.Учетный.НайтиПоКоду("90.01"), ПланыСчетов.Учетный.НайтиПоКоду("20")));

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Объект.Номенклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	Если НЕ Объект.Номенклатура.Количество() Тогда
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.СчетЗатрат = ПланыСчетов.Учетный.Счет9002();
		НоваяСтрока.Субконто1 = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
		НоваяСтрока.Процент = 100;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПродукцию(Команда)
  ЗаполнитьПродукциюСервер(Команда.Имя)
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;	
	
	ЗаполнитьЗаголовкиСубконто();
	
	Элементы.НоменклатураСчетЗатрат.РежимВыбораИзСписка = Истина;
	Элементы.НоменклатураСчетЗатрат.СписокВыбора.ЗагрузитьЗначения(Документы.УЧ_ЗакрытиеПериода.СчетаЗакрытия())
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаголовкиСубконто()

	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(ПланыСчетов.Учетный.Счет9002(), Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.НоменклатураСубконто1.Заголовок = Наименование1;
	Элементы.НоменклатураСубконто2.Заголовок = Наименование2;
	Элементы.НоменклатураСубконто3.Заголовок = Наименование3;
	
	Элементы.НоменклатураСубконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.НоменклатураСубконто2.Видимость = Ложь; // Статьи затрат не нужны
	Элементы.НоменклатураСубконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	
	Элементы.НоменклатураПодразделение.Видимость = УчетПоПодразделениям;

КонецПроцедуры
 

&НаКлиенте
Процедура РассчитатьПроцентыПоЛитражу(Команда)

	
	ИтогоЛитраж = 0;
	
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		Попытка 
			ИтогоЛитраж = ИтогоЛитраж + БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока.Номенклатура, "Литраж") * ТекСтрока.КоличествоРеализовано;
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен литраж! " + ТекСтрока.Номенклатура;
			Сообщение.Сообщить();
			Возврат;
		КонецПопытки;
	КонецЦикла;	
	
	Для Каждого ТекСтрока Из Объект.Номенклатура Цикл
		ТекСтрока.Процент = (БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока.Номенклатура, "Литраж") * ТекСтрока.КоличествоРеализовано) / ИтогоЛитраж * 100;
	КонецЦикла;
	
	ТекСтрока.Процент = ТекСтрока.Процент  + (100 - Объект.Номенклатура.Итог("Процент"));
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Списание25903ПриИзменении(Элемент)
	Если Объект.Списание25903 = 2 Тогда
		Элементы.ГруппаНоменклатура.Видимость = Ложь;
		Элементы.Статья91.Видимость = Истина;
		//Элементы.СтатьиНоменклатура.Видимость = Ложь;
		//Если НЕ Элемент = Неопределено Тогда
		//	ПолучитьДанные();		
		//КонецЕсли;
	Иначе
		Элементы.ГруппаНоменклатура.Видимость = Истина;
		Элементы.Статья91.Видимость = Ложь;
		//Элементы.СтатьиНоменклатура.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Табл.СчетЗатрат КАК Счет
	//               |ПОМЕСТИТЬ Врем
	//               |ИЗ
	//               |	&Табл КАК Табл
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	//               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	//               |ИЗ
	//               |	Справочник.Предприятия КАК Предприятия
	//               |ГДЕ
	//               |	Предприятия.Ссылка В(&Предприятие)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ) КАК Количественный,
	//               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет) КАК Счет,
	//               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ) КАК Валютный,
	//               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	//               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	//               |ИЗ
	//               |	Врем КАК Врем
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	//               |		ПО Врем.Счет = Учетный.Ссылка,
	//               |	УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет),
	//               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ),
	//               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ),
	//               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	//               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям";
	//
	//ТЧ = Объект.Номенклатура.Выгрузить();
	//
	//Запрос.УстановитьПараметр("Табл", ТЧ);
	//Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Соотв = Новый Соответствие;
	//Пока Выборка.Следующий() Цикл
	//	Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	//КонецЦикла;
	//
	//
	//Для Каждого СтрокаТаблицы Из Объект.Номенклатура Цикл
	//	СтруСчета = Соотв.Получить(СтрокаТаблицы.СчетЗатрат);
	//	КоличествоСубконто   = СтруСчета.КоличествоСубконто;
	//	Для Индекс = 1 По 3 Цикл
	//		СтрокаТаблицы["Субконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
	//	КонецЦикла;
	//	//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
	//	СтрокаТаблицы["Подразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
	//	//Валютный = СтруСчета.Валютный;
	//	//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
	//	//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
	//	
	//КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРаспределениеПрибылиНаСервере()
	
	//Объект.РаспределениеПрибыли.Очистить();
	//ТЗ_Доли = ПолучитьДолиУчредителейПроекта(Объект.Предприятие, Объект.Дата);
	//
	//Для Каждого ТекСтрокаДУ Из ТЗ_Доли Цикл
	//	НСтрРаспределения = Объект.РаспределениеПрибыли.Добавить();
	//	НСтрРаспределения.Учредитель = ТекСтрокаДУ.Учредитель;
	//	НСтрРаспределения.Процент = ТекСтрокаДУ.ДоляУчредителяПроцент;
	//КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьРаспределениеПрибыли(Команда)
	ЗаполнитьРаспределениеПрибылиНаСервере();
КонецПроцедуры
