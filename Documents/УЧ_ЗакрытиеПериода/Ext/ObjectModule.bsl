
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Если РучнаяКорректировка Тогда		
	//	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//		НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = ТекстСообщения;
	//	Сообщение.КлючДанных = Ссылка;
	//	Сообщение.Сообщить();		
	//	
	//	Возврат;
	//КонецЕсли;

	Движения.Учетный.Записывать = Истина;

	ВыборкаОстатки = ВернутьОстатки();
	
	Если СписыватьРасходыБудующихПериодов Тогда
		Закрытие97(ВыборкаОстатки);
	КонецЕсли;
	
	Если НачислятьАмортизацию Тогда
		Закрытие01(ВыборкаОстатки);
		Закрытие04(ВыборкаОстатки);
	КонецЕсли;
	
	Закрытие25(ВыборкаОстатки);
	
	Счет26 = ПланыСчетов.Учетный.НайтиПоКоду("26");
	Если ЗначениеЗаполнено(Счет26) Тогда
		Закрытие25(ВыборкаОстатки, Счет26);
	КонецЕсли;
	
	Закрытие44(ВыборкаОстатки);
		
	Закрытие20ПустаяНом(ВыборкаОстатки);
		
	Закрытие20(ВыборкаОстатки);
	
	Закрытие40(ВыборкаОстатки);
	
	Закрытие9091(ВыборкаОстатки);
	
	Закрытие99(ВыборкаОстатки);
	
КонецПроцедуры

Функция ВернутьОстатки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
	               |	УчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
	               |	УчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
	               |	УчетныйОстаткиИОбороты.Субконто3 КАК Субконто3,
	               |	УчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	УчетныйОстаткиИОбороты.СуммаОборот КАК СуммаОборот,
	               |	УчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаОстаток,
	               |	УчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	               |	УчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
	               |	УчетныйОстаткиИОбороты.КоличествоОборотДт КАК КоличествоОборотДт,
	               |	УчетныйОстаткиИОбороты.КоличествоОборотКт КАК КоличествоОборотКт,
	               |	УчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	               |	УчетныйОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
	               |			&ДатаНачала,
	               |			&ДатаОкончания,
	               |			,
	               |			,
	               |			Счет = &Счет25
	               |				ИЛИ Счет = &Счет44
	               |				ИЛИ Счет = &Счет26
	               |				ИЛИ Счет = &Счет20
				    |				ИЛИ Счет = &Счет43
	               |				ИЛИ Счет В ИЕРАРХИИ (&Счет90)
	               |				ИЛИ Счет В ИЕРАРХИИ (&Счет91)
	               |				ИЛИ Счет В ИЕРАРХИИ (&Счет97)
	               |				ИЛИ Счет В ИЕРАРХИИ (&Счет01)
	               |				ИЛИ Счет В ИЕРАРХИИ (&Счет04),
	               |			,
	               |			Предприятия = &Предприятие
	               |				И СценарийПлана = &Сценарий) КАК УчетныйОстаткиИОбороты";
	
		
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Учетный.НайтиПоКоду("44"));
	Запрос.УстановитьПараметр("Счет26", ПланыСчетов.Учетный.НайтиПоКоду("26"));
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Учетный.Счет20());
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Учетный.Счет90());
	Запрос.УстановитьПараметр("Счет97", ПланыСчетов.Учетный.Счет97());
	Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Учетный.Счет01());
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
	Запрос.УстановитьПараметр("Счет04", ПланыСчетов.Учетный.НайтиПоКоду("04"));
	Запрос.УстановитьПараметр("Счет91", ПланыСчетов.Учетный.Счет91());
	Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	
	Результат = Запрос.Выполнить();
	Выборка25 = Результат.Выгрузить();
	ВыборкаСчет = Выборка25.Скопировать();
	ВыборкаСчет.Свернуть("Счет");
	
	ВыборкаВрем = Выборка25.Скопировать();
	
	Стру = Новый Соответствие;
	Для каждого ТекСчет Из ВыборкаСчет Цикл
		ВыборкаВрем.Очистить();
		НайденныеСтроки = Выборка25.НайтиСтроки(Новый Структура("Счет", ТекСчет.Счет));
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ВыборкаВрем.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЦикла;
		Стру.Вставить(ТекСчет.Счет, ВыборкаВрем.Скопировать());
	КонецЦикла; 
		
	Возврат Стру;	

КонецФункции // ()

Функция ПолучитьБазуРаспределения()
	
	РезультатБаза = Номенклатура.Выгрузить();
	
	Масс = Новый Массив;
	Масс.Добавить(РезультатБаза);
		
	Возврат Масс;

КонецФункции // ()

Процедура Закрытие97(ВыборкаОстатки)
	
	Счет97 = ПланыСчетов.Учетный.Счет97();
	Счет25 = ПланыСчетов.Учетный.Счет25();
	
	Выборка = ВыборкаОстатки.Получить(Счет97);
	Если Выборка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.СуммаОстаток Тогда
			
			Реквизиты97 = БюджетныйНаСервере.ВернутьРеквизиты(ТекСтрока.Субконто1, "СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3, ДатаНачалаСписания, ДатаОкончанияСписания, Сумма");
			
			КоличествоДней = 0;
			КоличествоДнейМесяца = 0;
			КоличествоДнейНачалоМесяца = 0;
			КоличествоДнейКонецМесяца = 0;
			КоличествоДнейВМесяце = 0;
			КоличествоМесяцев = 0;
			
			Если Реквизиты97.ДатаНачалаСписания = Дата('00010101') ИЛИ Реквизиты97.ДатаОкончанияСписания = Дата('00010101') Тогда
				Продолжить;			
			КонецЕсли;

			Если НачалоМесяца(Дата) > Реквизиты97.ДатаОкончанияСписания Тогда
				Продолжить;			
			КонецЕсли;
			
			ТекДата = Реквизиты97.ДатаНачалаСписания;
			Пока ТекДата <= Реквизиты97.ДатаОкончанияСписания Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДней = КоличествоДней + 1;			
			КонецЦикла;
			
			ТекДата = МАКС(НачалоМесяца(Дата), Реквизиты97.ДатаНачалаСписания);
			Пока ТекДата <= МИН(Реквизиты97.ДатаОкончанияСписания, КонецМесяца(Дата)) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейМесяца = КоличествоДнейМесяца + 1;			
			КонецЦикла;
			
			ТекДата = Реквизиты97.ДатаНачалаСписания;
			Пока ТекДата <= КонецМесяца(Реквизиты97.ДатаНачалаСписания) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейНачалоМесяца = КоличествоДнейНачалоМесяца + 1;			
			КонецЦикла;
			
			ТекДата = НачалоМесяца(Реквизиты97.ДатаОкончанияСписания);
			Пока ТекДата <= Реквизиты97.ДатаОкончанияСписания Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейКонецМесяца = КоличествоДнейКонецМесяца + 1;			
			КонецЦикла;

			ТекДата = НачалоМесяца(Дата);
			Пока ТекДата <= КонецМесяца(Дата) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейВМесяце = КоличествоДнейВМесяце + 1;			
			КонецЦикла;
			
			ТекДата = НачалоМесяца(Реквизиты97.ДатаНачалаСписания);
			Пока ТекДата <= КонецМесяца(Реквизиты97.ДатаОкончанияСписания) Цикл
				Если НачалоМесяца(ТекДата) = НачалоМесяца(Реквизиты97.ДатаНачалаСписания) Тогда
					КоличествоМесяцев = КоличествоМесяцев + (КоличествоДнейНачалоМесяца/КоличествоДнейВМесяце);
				ИначеЕсли НачалоМесяца(ТекДата) = НачалоМесяца(Реквизиты97.ДатаОкончанияСписания) Тогда	
					КоличествоМесяцев = КоличествоМесяцев + (КоличествоДнейКонецМесяца/КоличествоДнейВМесяце);	
				Иначе
					КоличествоМесяцев = КоличествоМесяцев + 1;			
				КонецЕсли;
				ТекДата = ДобавитьМесяц(ТекДата, 1);
			КонецЦикла;

			Сумма = ?(КоличествоМесяцев, Реквизиты97.Сумма / КоличествоМесяцев / КоличествоДнейВМесяце * КоличествоДнейМесяца, 0);
			//Сумма = ?(КоличествоДней, Реквизиты97.Сумма / КоличествоДней * КоличествоДнейМесяца, 0);
			Если Окр(Сумма, 0) = Окр(ТекСтрока.СуммаОстаток, 0) ИЛИ Сумма > ТекСтрока.СуммаОстаток Тогда //копейки
				Сумма = ТекСтрока.СуммаОстаток;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Реквизиты97.СчетЗатрат) Тогда
				Стру = сабОбщегоНазначенияБУХ.ПолучитьСоотвСчетовИСубконто(Новый Структура("Счет, Субконто1, Субконто2, Субконто3", Реквизиты97.СчетЗатрат, Реквизиты97.СубконтоЗатрат1, Реквизиты97.СубконтоЗатрат2, Реквизиты97.СубконтоЗатрат3));
				Реквизиты97.СчетЗатрат = Стру.Счет;
				Реквизиты97.СубконтоЗатрат1 = Стру.Субконто1;
				Реквизиты97.СубконтоЗатрат2 = Стру.Субконто2;
				Реквизиты97.СубконтоЗатрат3 = Стру.Субконто3;
			КонецЕсли;
			
			сабОбщегоНазначения.НоваяСтрокаРегистраБух(
			Движения,
			Дата,
			Предприятие,
			Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
			"Списание затрат с 97 сч.",
			?(ЗначениеЗаполнено(Реквизиты97.СчетЗатрат), Реквизиты97.СчетЗатрат, Счет25), // счетДт
			Реквизиты97.СубконтоЗатрат1, //СубконтоДт1
			Реквизиты97.СубконтоЗатрат2, //СубконтоДт2
			Реквизиты97.СубконтоЗатрат3, //СубконтоДт3
			ТекСтрока.Подразделение, //ПодразделениеДт
			0,
			, //ВалютаДт
			0, //ВалСуммаДт
			Счет97,
			ТекСтрока.Субконто1, //СубконтоКт1
			ТекСтрока.Субконто2, //СубконтоКт2
			ТекСтрока.Субконто3, //СубконтоКт3
			ТекСтрока.Подразделение, //ПодразделениеКт
			0, //КоличествоКт
			, //ВалютаКт
			0, //ВалСуммаКт
			Сумма, //Сумма
			Истина, //Приход = Истина
			, //ФинЦФО = Неопределено
			//ФинПодразделениеЦФО = Неопределено
			);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие01(ВыборкаОстатки)
	
	ВыборкаСоотв = УЧ_Сервер.ПолучитьСоотвСчетовБУУУ();
	
	Счет01 = ПланыСчетов.Учетный.Счет01();
	Счет02 = ПланыСчетов.Учетный.Счет02();
	Счет25 = ПланыСчетов.Учетный.Счет25();
	
	Выборка = ВыборкаОстатки.Получить(Счет01);
	Если Выборка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.СуммаОстаток Тогда
			
			Реквизиты01 = Новый Структура("СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3, СпособНачисленияАмортизации, СчетУчета, СрокПолезногоИспользования, ДатаПостановкиНаУчет, ПервоначальнаяСтоимость, ДатаВыбытия, НачислятьАмортизацию, Подразделение");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
			               |	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособПоступления КАК СпособПоступления,
			               |	ИСТИНА КАК НачислятьАмортизацию,
			               |	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
			               |	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
			               |	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
			               |	1 КАК Коэффициент,
			               |	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК СубконтоЗатрат1,
			               |	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат КАК СчетЗатрат,
			               |	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК СубконтоЗатрат2,
			               |	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК СубконтоЗатрат3,
			               |	СпособыОтраженияРасходовПоАмортизацииСпособы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			               |	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.Период КАК ДатаПостановкиНаУчет
			               |ИЗ
			               |	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ТекДата, ОсновноеСредство = &НМА) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ТекДата, ОсновноеСредство = &НМА) КАК СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетСрезПоследних
			               |		ПО ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ТекДата, ОсновноеСредство = &НМА) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
			               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
			               |			ПО ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
			               |		ПО ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";

			Запрос.УстановитьПараметр("ТекДата", Дата);
			Запрос.УстановитьПараметр("НМА", ТекСтрока.Субконто1);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Реквизиты01, Выборка);
				Реквизиты01.СчетУчета = Счет01;
				
				Реквизиты01.СчетЗатрат = Счет25;
				Соотв = ВыборкаСоотв.НайтиСтроки(Новый Структура("СчетБУ", Выборка.СчетЗатрат));
				Для каждого ТекСчет Из Соотв Цикл
					Реквизиты01.СчетЗатрат = ТекСчет.СчетУУ;
					Прервать;
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не Выборка.Количество() Тогда
				Продолжить;			
			КонецЕсли;
			
			КоличествоМесяцев = Реквизиты01.СрокПолезногоИспользования;
			
			Если НЕ Реквизиты01.НачислятьАмортизацию ИЛИ НЕ КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			КоличествоМесяцевПрошло = 0;
			ТекДата = Реквизиты01.ДатаПостановкиНаУчет; 
			Пока ТекДата <= КонецМесяца(Дата) Цикл
				ТекДата = ДобавитьМесяц(ТекДата, 1);
				КоличествоМесяцевПрошло = КоличествоМесяцевПрошло + 1;			
			КонецЦикла;
			
			Если КоличествоМесяцевПрошло > КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			Сумма = ?(КоличествоМесяцев, Реквизиты01.ПервоначальнаяСтоимость / КоличествоМесяцев, 0);
			Если Окр(Сумма, 0) = Окр(ТекСтрока.СуммаОстаток, 0) ИЛИ Сумма > ТекСтрока.СуммаОстаток Тогда //копейки
				Сумма = ТекСтрока.СуммаОстаток;
			КонецЕсли;
			
			сабОбщегоНазначения.НоваяСтрокаРегистраБух(
			Движения,
			Дата,
			Предприятие,
			Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
			"Начисление амотризации по 02 сч.",
			Счет25, // счетДт
			Реквизиты01.СубконтоЗатрат1, //СубконтоДт1
			Реквизиты01.СубконтоЗатрат2, //СубконтоДт2
			Реквизиты01.СубконтоЗатрат3, //СубконтоДт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеДт
			0,
			, //ВалютаДт
			0, //ВалСуммаДт
			Счет02,
			ТекСтрока.Субконто1, //СубконтоКт1
			, //СубконтоКт2
			, //СубконтоКт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеКт
			0, //КоличествоКт
			, //ВалютаКт
			0, //ВалСуммаКт
			Сумма, //Сумма
			Истина, //Приход = Истина
			, //ФинЦФО = Неопределено
			//ФинПодразделениеЦФО = Неопределено
			);
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура Закрытие04(ВыборкаОстатки)
	
	ВыборкаСоотв = УЧ_Сервер.ПолучитьСоотвСчетовБУУУ();
	
	Счет01 = ПланыСчетов.Учетный.НайтиПоКоду("04");
	Счет02 = ПланыСчетов.Учетный.НайтиПоКоду("05");
	Счет25 = ПланыСчетов.Учетный.Счет25();
	
	Выборка = ВыборкаОстатки.Получить(Счет01);
	Если Выборка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.СуммаОстаток Тогда
			
			Реквизиты01 = Новый Структура("СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3, СпособНачисленияАмортизации, СчетУчета, СрокПолезногоИспользования, ДатаПостановкиНаУчет, ПервоначальнаяСтоимость, ДатаВыбытия, НачислятьАмортизацию, Подразделение");
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособПоступления КАК СпособПоступления,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.Коэффициент КАК Коэффициент,
			|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК СубконтоЗатрат1,
			|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат КАК СчетЗатрат,
			|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК СубконтоЗатрат2,
			|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК СубконтоЗатрат3,
			|	СпособыОтраженияРасходовПоАмортизацииСпособы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.Период КАК ДатаПостановкиНаУчет
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ТекДата, НематериальныйАктив = &НМА) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет.СрезПоследних(&ТекДата, НематериальныйАктив = &НМА) КАК СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
			|			ПО СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетСрезПоследних.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
			|		ПО ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив = СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив";
			
			Запрос.УстановитьПараметр("ТекДата", Дата);
			Запрос.УстановитьПараметр("НМА", ТекСтрока.Субконто1);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Реквизиты01, Выборка);
				Реквизиты01.СчетУчета = Счет01;
				
				Реквизиты01.СчетЗатрат = Счет25;
				Соотв = ВыборкаСоотв.НайтиСтроки(Новый Структура("СчетБУ", Выборка.СчетЗатрат));
				Для каждого ТекСчет Из Соотв Цикл
					Реквизиты01.СчетЗатрат = ТекСчет.СчетУУ;
					Прервать;
				КонецЦикла;
				
			КонецЦикла;
			
			Если Не Выборка.Количество() Тогда
				Продолжить;			
			КонецЕсли;
			
			КоличествоМесяцев = Реквизиты01.СрокПолезногоИспользования;
			
			Если НЕ Реквизиты01.НачислятьАмортизацию ИЛИ НЕ КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			КоличествоМесяцевПрошло = 0;
			ТекДата = Реквизиты01.ДатаПостановкиНаУчет; 
			Пока ТекДата <= КонецМесяца(Дата) Цикл
				ТекДата = ДобавитьМесяц(ТекДата, 1);
				КоличествоМесяцевПрошло = КоличествоМесяцевПрошло + 1;			
			КонецЦикла;
			
			Если КоличествоМесяцевПрошло > КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			Сумма = ?(КоличествоМесяцев, Реквизиты01.ПервоначальнаяСтоимость / КоличествоМесяцев, 0);
			Если Окр(Сумма, 0) = Окр(ТекСтрока.СуммаОстаток, 0) ИЛИ Сумма > ТекСтрока.СуммаОстаток Тогда //копейки
				Сумма = ТекСтрока.СуммаОстаток;
			КонецЕсли;
			
			сабОбщегоНазначения.НоваяСтрокаРегистраБух(
			Движения,
			Дата,
			Предприятие,
			Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
			"Начисление амотризации",
			Реквизиты01.СчетЗатрат, // счетДт
			Реквизиты01.СубконтоЗатрат1, //СубконтоДт1
			Реквизиты01.СубконтоЗатрат2, //СубконтоДт2
			Реквизиты01.СубконтоЗатрат3, //СубконтоДт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеДт
			0,
			, //ВалютаДт
			0, //ВалСуммаДт
			Счет02,
			ТекСтрока.Субконто1, //СубконтоКт1
			, //СубконтоКт2
			, //СубконтоКт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеКт
			0, //КоличествоКт
			, //ВалютаКт
			0, //ВалСуммаКт
			Сумма, //Сумма
			Истина, //Приход = Истина
			, //ФинЦФО = Неопределено
			//ФинПодразделениеЦФО = Неопределено
			);
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура Закрытие25(ВыборкаОстатки, Счет25 = Неопределено)
	
	Если Счет25 = Неопределено Тогда
		Счет25 = ПланыСчетов.Учетный.Счет25();	
	КонецЕсли;
	
	Выборка = ВыборкаОстатки.Получить(Счет25);
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	//НоменклатураПростой = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
	Счет20 = ПланыСчетов.Учетный.Счет20();
	//Счет25 = ПланыСчетов.Учетный.Счет25();
	Счет91 = ПланыСчетов.Учетный.Счет91();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Ст91 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("Прочие внереализационные доходы и расходы", Истина);
	
	Данные25Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет25, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет25)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные25Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если  НЕ ТекДвижение["СубконтоДт" + Индекс2] = Неопределено И  Данные25Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");

	База = ПолучитьБазуРаспределения();
	
	ВыборкаБаза = База[0];
	
	Если Не РаспределятьКосвенныеЗатраты Тогда
		ВыборкаБаза.Очистить();
		НоваяСтрока = ВыборкаБаза.Добавить();
		НоваяСтрока.СчетЗатрат = ПланыСчетов.Учетный.Счет9003();
		НоваяСтрока.Процент = 100;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				сабОбщегоНазначения.НоваяСтрокаРегистраБух(
				Движения,
				Дата,
				Предприятие,
				Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
				"Закрытие 25",
				СчетЗакрытия, // счетДт
				?(Закрытие91, Субкното1, ?(ЗначениеЗаполнено(СтрокаРаботы.НоменклатурнаяГруппа), СтрокаРаботы.НоменклатурнаяГруппа, СтрокаРаботы.Субконто1)), //СубконтоДт1
				?(Закрытие91, Неопределено, ТекСтрока.Субконто1), //СубконтоДт2
				?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
				ТекСтрока.Подразделение, //ПодразделениеДт
				0,
				, //ВалютаДт
				0, //ВалСуммаДт
				Счет25,
				ТекСтрока.Субконто1, //СубконтоКт1
				, //СубконтоКт2
				, //СубконтоКт3
				ТекСтрока.Подразделение, //ПодразделениеКт
				0, //КоличествоКт
				, //ВалютаКт
				0, //ВалСуммаКт
				Сумма, //Сумма
				Истина, //Приход = Истина
				, //ФинЦФО = Неопределено
				//ФинПодразделениеЦФО = Неопределено
				);
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие44(ВыборкаОстатки)
	
	Выборка = ВыборкаОстатки.Получить(ПланыСчетов.Учетный.НайтиПоКоду("44"));
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	//НоменклатураПростой = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
	Счет20 = ПланыСчетов.Учетный.Счет20();
	Счет25 = ПланыСчетов.Учетный.НайтиПоКоду("44");
	Счет91 = ПланыСчетов.Учетный.Счет91();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Ст91 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("Прочие внереализационные доходы и расходы", Истина);
	
	Данные25Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет25, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет25)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные25Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если  НЕ ТекДвижение["СубконтоДт" + Индекс2] = Неопределено И Данные25Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");

	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	
	Если Не РаспределятьКосвенныеЗатраты Тогда
		ВыборкаБаза.Очистить();
		НоваяСтрока = ВыборкаБаза.Добавить();
		НоваяСтрока.СчетЗатрат = ПланыСчетов.Учетный.Счет9003();
		НоваяСтрока.Процент = 100;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				сабОбщегоНазначения.НоваяСтрокаРегистраБух(
				Движения,
				Дата,
				Предприятие,
				Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
				"Закрытие 44",
				СчетЗакрытия, // счетДт
				?(Закрытие91, Субкното1, ?(ЗначениеЗаполнено(СтрокаРаботы.НоменклатурнаяГруппа), СтрокаРаботы.НоменклатурнаяГруппа, СтрокаРаботы.Субконто1)), //СубконтоДт1
				?(Закрытие91, Неопределено, ТекСтрока.Субконто1), //СубконтоДт2
				?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
				ТекСтрока.Подразделение, //ПодразделениеДт
				0,
				, //ВалютаДт
				0, //ВалСуммаДт
				Счет25,
				ТекСтрока.Субконто1, //СубконтоКт1
				, //СубконтоКт2
				, //СубконтоКт3
				ТекСтрока.Подразделение, //ПодразделениеКт
				0, //КоличествоКт
				, //ВалютаКт
				0, //ВалСуммаКт
				Сумма, //Сумма
				Истина, //Приход = Истина
				, //ФинЦФО = Неопределено
				//ФинПодразделениеЦФО = Неопределено
				);
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие20ПустаяНом(ВыборкаОстатки)
	
	Счет25 = ПланыСчетов.Учетный.Счет20();
	
	СценарийФакт = Справочники.СценарииПланирования.СценарийФакт();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйОбороты.СуммаОборот КАК СуммаОстаток,
	               |	УчетныйОбороты.Счет КАК Счет,
	               |	УчетныйОбороты.КорСчет КАК КорСчет,
	               |	УчетныйОбороты.Субконто1 КАК Субконто1,
	               |	УчетныйОбороты.Субконто2 КАК Субконто2,
	               |	УчетныйОбороты.Субконто3 КАК Субконто3,
	               |	УчетныйОбороты.КорСубконто1 КАК КорСубконто1,
	               |	УчетныйОбороты.КорСубконто2 КАК КорСубконто2,
	               |	УчетныйОбороты.КорСубконто3 КАК КорСубконто3,
	               |	УчетныйОбороты.Предприятия КАК Предприятия,
	               |	УчетныйОбороты.СценарийПлана КАК СценарийПлана,
	               |	УчетныйОбороты.Подразделение КАК Подразделение,
	               |	УчетныйОбороты.ПодразделениеКор КАК ПодразделениеКор,
	               |	УчетныйОбороты.НомерСтроки КАК НомерСтроки,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ВыпускПродукции)
	               |				И УчетныйОбороты.КорСчет.Код = ""70""
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоТрудозатратыИзСпецификации,
	               |	ВЫБОР
	               |		КОГДА УчетныйОбороты.КорСчет.Код = ""70"" И УчетныйОбороты.Субконто1 = Значение(Справочник.Номенклатура.ПустаяСсылка)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоТрудозатраты
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Запись,
	               |			Счет.Код = ""20"",
	               |			,
	               |			Предприятия В (&Предприятие)
	               |				И СценарийПлана = &СценарийФакт,
	               |			,
	               |			) КАК УчетныйОбороты";
	
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("СценарийФакт", СценарийФакт);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	//Выборка = ВыборкаОстатки.Получить(Счет25);
	//Если Выборка = Неопределено Тогда
	//	Выборка = Новый ТаблицаЗначений;
	//	Выборка.Колонки.Добавить("Субконто1");
	//	Выборка.Колонки.Добавить("Субконто2");
	//	Выборка.Колонки.Добавить("Субконто3");
	//	Выборка.Колонки.Добавить("Подразделение");
	//	Выборка.Колонки.Добавить("СуммаОстаток");
	//КонецЕсли;
	
	//НоменклатураПростой = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
	Счет20 = ПланыСчетов.Учетный.Счет20();
	Счет43 = ПланыСчетов.Учетный.Счет43();
	Счет91 = ПланыСчетов.Учетный.Счет91();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Ст91 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("Прочие внереализационные доходы и расходы", Истина);
	
	Данные25Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет25, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет25)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные25Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если  НЕ ТекДвижение["СубконтоДт" + Индекс2] = Неопределено И Данные25Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	ВыборкаПервичная = Выборка.Скопировать();
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение, ЭтоТрудозатраты", "СуммаОстаток");
	
	//для всех затрат кроме зарплаты
	
	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	
	ПринудительноеСписаниеВЗатраты = Ложь;
	Если ВыборкаБаза.Количество() = 1 И Не ЗначениеЗаполнено(ВыборкаБаза[0].Субконто1) Тогда //подозреваем списание всех затрат на 90.03, тогда пропускаем
		ПринудительноеСписаниеВЗатраты = Истина;;
	КонецЕсли;;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Субконто1) И НЕ ПринудительноеСписаниеВЗатраты Тогда
			Продолжить;		
		КонецЕсли;
		
		Если НЕ ТекСтрока.ЭтоТрудозатраты = Неопределено И ТекСтрока.ЭтоТрудозатраты Тогда
			Продолжить;		
		КонецЕсли;
		
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				
				Если Не РаспределятьПрямыеЗатраты И СчетЗакрытия = Счет20 Тогда
					
					сабОбщегоНазначения.НоваяСтрокаРегистраБух(
					Движения,
					Дата,
					Предприятие,
					СценарийФакт,
					"Закрытие 20 пустой номенклатуры",
					Счет43, // счетДт
					СтрокаРаботы.Субконто1, //СубконтоДт1
					СтрокаРаботы.Субконто2, //СубконтоДт2
					СтрокаРаботы.Субконто3, //СубконтоДт3
					ТекСтрока.Подразделение, //ПодразделениеДт
					0,
					, //ВалютаДт
					0, //ВалСуммаДт
					Счет25,
					ТекСтрока.Субконто1, //СубконтоКт1
					ТекСтрока.Субконто2, //СубконтоКт2
					ТекСтрока.Субконто3, //СубконтоКт3
					ТекСтрока.Подразделение, //ПодразделениеКт
					0, //КоличествоКт
					, //ВалютаКт
					0, //ВалСуммаКт
					Сумма, //Сумма
					Истина, //Приход = Истина
					, //ФинЦФО = Неопределено
					//ФинПодразделениеЦФО = Неопределено
					);
					
				Иначе
					сабОбщегоНазначения.НоваяСтрокаРегистраБух(
					Движения,
					Дата,
					Предприятие,
					СценарийФакт,
					"Закрытие 20 пустой номенклатуры",
					СчетЗакрытия, // счетДт
					?(Закрытие91, Субкното1, ?(ЗначениеЗаполнено(СтрокаРаботы.НоменклатурнаяГруппа), СтрокаРаботы.НоменклатурнаяГруппа, СтрокаРаботы.Субконто1)), //СубконтоДт1
					?(Закрытие91, Неопределено, ТекСтрока.Субконто2), //СубконтоДт2
					?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
					ТекСтрока.Подразделение, //ПодразделениеДт
					0,
					, //ВалютаДт
					0, //ВалСуммаДт
					Счет25,
					ТекСтрока.Субконто1, //СубконтоКт1
					ТекСтрока.Субконто2, //СубконтоКт2
					ТекСтрока.Субконто3, //СубконтоКт3
					ТекСтрока.Подразделение, //ПодразделениеКт
					0, //КоличествоКт
					, //ВалютаКт
					0, //ВалСуммаКт
					Сумма, //Сумма
					Истина, //Приход = Истина
					, //ФинЦФО = Неопределено
					//ФинПодразделениеЦФО = Неопределено
					);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	//трудозатраты сторнируем из общих начислений
	СуммаТрудозатрат = 0;
	НайденныеСтроки = ВыборкаПервичная.НайтиСтроки(Новый Структура("ЭтоТрудозатратыИзСпецификации", Истина));
	Для каждого ТекСтрока Из НайденныеСтроки Цикл
		СуммаТрудозатрат = СуммаТрудозатрат + ТекСтрока.СуммаОстаток;
	КонецЦикла;
	
	НайденныеСтроки = ВыборкаПервичная.НайтиСтроки(Новый Структура("ЭтоТрудозатратыИзСпецификации, ЭтоТрудозатраты", Ложь, Истина));
	Выборка = ВыборкаПервичная.Скопировать();
	Выборка.Очистить();
	Для каждого ТекСтрока Из НайденныеСтроки Цикл
		НоваяСтрока = Выборка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	КонецЦикла;
	
	Выборка.Свернуть("Счет, Субконто1, Субконто2, Субконто3, Подразделение, КорСчет, КорСубконто1, КорСубконто2, КорСубконто3, ПодразделениеКор", "СуммаОстаток");
	
	ИтогоСумма = Выборка.Итог("СуммаОстаток");

	Для Каждого ТекСтрока Из Выборка Цикл
		
		ТекСумма = ТекСтрока.СуммаОстаток/ИтогоСумма * СуммаТрудозатрат;
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		СценарийФакт,
		"Сторно начислений трудозатрат по спецификации",
		ТекСтрока.Счет, // счетДт
		ТекСтрока.Субконто1, //СубконтоДт1
		ТекСтрока.Субконто2, //СубконтоДт2
		ТекСтрока.Субконто3, //СубконтоДт3
		ТекСтрока.Подразделение, //ПодразделениеДт
		0,
		, //ВалютаДт
		0, //ВалСуммаДт
		ТекСтрока.КорСчет,
		, //СубконтоКт1
		, //СубконтоКт2
		, //СубконтоКт3
		ТекСтрока.ПодразделениеКор, //ПодразделениеКт
		0, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		-ТекСумма, //Сумма
		Истина, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		);
		
		ТекСтрока.СуммаОстаток = ТекСтрока.СуммаОстаток - ТекСтрока.СуммаОстаток/ИтогоСумма * СуммаТрудозатрат;
		
	КонецЦикла;
	
	// для зарплаты распределяем только на номенклатуру без трудозатрат
	
	//удаляем номенклутару с прямыми трудозатратами и пересчитываем процент
	МассивУд = Новый Массив;
	Для каждого ТекСтрока Из ВыборкаБаза Цикл
		Если ВыборкаПервичная.НайтиСтроки(Новый Структура("Субконто1, ЭтоТрудозатратыИзСпецификации", ТекСтрока.Субконто1, Истина)).Количество() Тогда
			МассивУд.Добавить(ТекСтрока);	
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекУд Из МассивУд Цикл
		ВыборкаБаза.Удалить(ТекУд);
	КонецЦикла;
	
	ПроцентИтого = ВыборкаБаза.Итог("Процент");
	ПроцентНарастающий = 0;
	Для каждого ТекСтрока Из ВыборкаБаза Цикл
		ТекСтрока.Процент = ТекСтрока.Процент / ПроцентИтого * 100;
		ПроцентНарастающий = ПроцентНарастающий + ТекСтрока.Процент;
		Если ВыборкаБаза.Индекс(ТекСтрока) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
			ТекСтрока.Процент = ТекСтрока.Процент + (100 - ПроцентНарастающий);				
		КонецЕсли;
	КонецЦикла; 
	
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				
				Если Не РаспределятьПрямыеЗатраты И СчетЗакрытия = Счет20 Тогда
					
					сабОбщегоНазначения.НоваяСтрокаРегистраБух(
					Движения,
					Дата,
					Предприятие,
					СценарийФакт,
					"Закрытие 20 пустой номенклатуры",
					Счет43, // счетДт
					СтрокаРаботы.Субконто1, //СубконтоДт1
					СтрокаРаботы.Субконто2, //СубконтоДт2
					СтрокаРаботы.Субконто3, //СубконтоДт3
					ТекСтрока.Подразделение, //ПодразделениеДт
					0,
					, //ВалютаДт
					0, //ВалСуммаДт
					Счет25,
					ТекСтрока.Субконто1, //СубконтоКт1
					ТекСтрока.Субконто2, //СубконтоКт2
					ТекСтрока.Субконто3, //СубконтоКт3
					ТекСтрока.Подразделение, //ПодразделениеКт
					0, //КоличествоКт
					, //ВалютаКт
					0, //ВалСуммаКт
					Сумма, //Сумма
					Истина, //Приход = Истина
					, //ФинЦФО = Неопределено
					//ФинПодразделениеЦФО = Неопределено
					);
					
				Иначе
					сабОбщегоНазначения.НоваяСтрокаРегистраБух(
					Движения,
					Дата,
					Предприятие,
					СценарийФакт,
					"Закрытие 20 пустой номенклатуры",
					СчетЗакрытия, // счетДт
					?(Закрытие91, Субкното1, ?(ЗначениеЗаполнено(СтрокаРаботы.НоменклатурнаяГруппа), СтрокаРаботы.НоменклатурнаяГруппа, СтрокаРаботы.Субконто1)), //СубконтоДт1
					?(Закрытие91, Неопределено, ТекСтрока.Субконто2), //СубконтоДт2
					?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
					ТекСтрока.Подразделение, //ПодразделениеДт
					0,
					, //ВалютаДт
					0, //ВалСуммаДт
					Счет25,
					ТекСтрока.Субконто1, //СубконтоКт1
					ТекСтрока.Субконто2, //СубконтоКт2
					ТекСтрока.Субконто3, //СубконтоКт3
					ТекСтрока.Подразделение, //ПодразделениеКт
					0, //КоличествоКт
					, //ВалютаКт
					0, //ВалСуммаКт
					Сумма, //Сумма
					Истина, //Приход = Истина
					, //ФинЦФО = Неопределено
					//ФинПодразделениеЦФО = Неопределено
					);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие20(ВыборкаОстатки)
	
	Счет20 = ПланыСчетов.Учетный.Счет20();
	Счет40 = ПланыСчетов.Учетный.Счет40();
	Счет9002 = ПланыСчетов.Учетный.Счет9002();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Счет91 = ПланыСчетов.Учетный.Счет91();
	
	Выборка = ВыборкаОстатки.Получить(Счет20);
	НетОстатки20 = Выборка = Неопределено;
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	Выборка.Колонки.Добавить("НоменклатурнаяГруппа");
	
	Если НетОстатки20 ИЛИ РаспределятьКосвенныеЗатраты ИЛИ РаспределятьПрямыеЗатраты Тогда
		
		Данные20Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет20, Предприятие);
		
		НайденныеДвижения = Движения.Учетный.Выгрузить();
		НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет20)); 	
		Для каждого ТекДвижение Из НайденныеДвижения Цикл
			НоваяСтрока = Выборка.Добавить();
			Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
				Если Данные20Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
					Продолжить;						
				КонецЕсли;
				Для Индекс2 = 1 По 3 Цикл
					Если НЕ ТекДвижение["СубконтоДт" + Индекс2] = Неопределено И Данные20Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
						НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
					КонецЕсли;
				КонецЦикла; 
			КонецЦикла; 
			//НоваяСтрока.Субконто1 = ТекДвижение.СубконтоДт1;
			//НоваяСтрока.Субконто2 = ТекДвижение.СубконтоДт2;
			//НоваяСтрока.Субконто3 = ТекДвижение.СубконтоДт3;
			НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
			НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
		КонецЦикла;
		
		Выборка.Свернуть("Субконто1, Субконто2, Субконто3, НоменклатурнаяГруппа, Подразделение", "СуммаОстаток");
	КонецЕсли;

	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	
	Если Не РаспределятьПрямыеЗатраты Тогда
		ВыборкаБаза.Очистить();
		НоваяСтрока = ВыборкаБаза.Добавить();
		НоваяСтрока.СчетЗатрат = ПланыСчетов.Учетный.Счет9003();
		НоваяСтрока.Процент = 100;
	КонецЕсли;
	
	//заменаНГ
	ВыборкаНГ = Выборка.Скопировать();
	ВыборкаНГ.Очистить();
	Для каждого ТекСтрока Из Выборка Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Субконто1)  Тогда
			Продолжить;			
		КонецЕсли;
		
		Если ТипЗнч(ТекСтрока.Субконто1) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			СуммаЦелая = ТекСтрока.СуммаОстаток;
			СуммаНарастующая = 0;
			ИтогоПроцент = 0;
			ВыборкаБазаНайденныеСтроки = ВыборкаБаза.НайтиСтроки(Новый Структура("НоменклатурнаяГруппа", ТекСтрока.Субконто1));
			
			Если Не ВыборкаБазаНайденныеСтроки.Количество() Тогда //если не выпускаемая НГ, то на всю номенкл
				ВыборкаБазаНайденныеСтроки = ВыборкаБаза;
				Если ВыборкаБазаНайденныеСтроки.Количество() = 1 И Не ЗначениеЗаполнено(ВыборкаБазаНайденныеСтроки[0].Субконто1) Тогда //подозреваем списание всех затрат на 90.03, тогда пропускаем
					Продолжить;
				КонецЕсли;;
			КонецЕсли;
			
			Для каждого СтрокаРаботы Из ВыборкаБазаНайденныеСтроки Цикл
				ИтогоПроцент = ИтогоПроцент + СтрокаРаботы.Процент;
			КонецЦикла;
			
			ИндексСтроки = 0;
			Для каждого СтрокаРаботы Из ВыборкаБазаНайденныеСтроки Цикл
				
				ИндексСтроки = ИндексСтроки + 1;
								
				Сумма = Окр(СтрокаРаботы.Процент / ИтогоПроцент * ТекСтрока.СуммаОстаток, 2);
				СуммаНарастующая = СуммаНарастующая + Сумма;
				
				Если Сумма Тогда
					Если ИндексСтроки = ВыборкаБазаНайденныеСтроки.Количество() Тогда //округления копеек
						Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
					КонецЕсли;
					НоваяСтрока = Выборка.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.НоменклатурнаяГруппа = ТекСтрока.Субконто1;
					НоваяСтрока.Субконто1 = СтрокаРаботы.Субконто1;
					НоваяСтрока.СуммаОстаток = Сумма;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Субконто1)  Тогда
			Продолжить;			
		КонецЕсли;
		
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;
		ИтогоПроцент = 0;
		
		ВыборкаБазаНайденныеСтроки = ВыборкаБаза.НайтиСтроки(Новый Структура("Субконто1", ТекСтрока.Субконто1));
						
		Для каждого СтрокаРаботы Из ВыборкаБазаНайденныеСтроки Цикл
			ИтогоПроцент = ИтогоПроцент + СтрокаРаботы.Процент;
		КонецЦикла;
		
		ИндексСтроки = 0;
		Для каждого СтрокаРаботы Из ВыборкаБазаНайденныеСтроки Цикл
			
			ИндексСтроки = ИндексСтроки + 1;
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Счет91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет9002;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;
			
			Сумма = Окр(СтрокаРаботы.Процент / ИтогоПроцент * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ИндексСтроки = ВыборкаБазаНайденныеСтроки.Количество() Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				ЭтоПроизводство = СтрокаРаботы.ЭтоПроизводство;
				
				сабОбщегоНазначения.НоваяСтрокаРегистраБух(
				Движения,
				Дата,
				Предприятие,
				Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
				"Закрытие 20",
				?(ЭтоПроизводство, Счет40, Счет9002), // счетДт
				СтрокаРаботы.Субконто1, //СубконтоДт1
				ТекСтрока.Субконто2, //СубконтоДт2
				СтрокаРаботы.Субконто3, //СубконтоДт3
				ТекСтрока.Подразделение, //ПодразделениеДт
				0,
				, //ВалютаДт
				0, //ВалСуммаДт
				Счет20,
				?(ЗначениеЗаполнено(ТекСтрока.НоменклатурнаяГруппа), ТекСтрока.НоменклатурнаяГруппа, ТекСтрока.Субконто1), //СубконтоКт1
				ТекСтрока.Субконто2, //СубконтоКт2
				ТекСтрока.Субконто3, //СубконтоКт3
				ТекСтрока.Подразделение, //ПодразделениеКт
				0, //КоличествоКт
				, //ВалютаКт
				0, //ВалСуммаКт
				Сумма, //Сумма
				Истина, //Приход = Истина
				, //ФинЦФО = Неопределено
				//ФинПодразделениеЦФО = Неопределено
				);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие40(ВыборкаОстатки)
	
	Сч40 = ПланыСчетов.Учетный.Счет40();
	Сч20 = ПланыСчетов.Учетный.Счет20();
	Сч43 = ПланыСчетов.Учетный.Счет43();
	Счет9002 = ПланыСчетов.Учетный.Счет9002();
	СубНом = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина);
	СубСклад = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина);
	СубСерия = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Серии номенклатуры", Истина);
	СубНомНГ = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура / ном.группа", Истина);
	СубСтатья = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина);
	Суб3Вид = ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты и организации", Истина);
	
	Выборка = Неопределено;
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	Выборка9002 = Новый ТаблицаЗначений;
	Выборка9002.Колонки.Добавить("Субконто1");
	Выборка9002.Колонки.Добавить("Субконто2");
	Выборка9002.Колонки.Добавить("Субконто3");
	Выборка9002.Колонки.Добавить("Подразделение");
	Выборка9002.Колонки.Добавить("СуммаОборотДт");
	Выборка9002.Колонки.Добавить("СуммаОборотКт");
	Выборка9002.Колонки.Добавить("КоличествоОборотДт");
	Выборка9002.Колонки.Добавить("КоличествоОборотКт");
	Выборка9002.Колонки.Добавить("Счет");
	
	Выборка43 = ВыборкаОстатки.Получить(Сч43);
	
	Данные40Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Сч40, Предприятие);
	
	НайденныеДвижения0 = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения0.НайтиСтроки(Новый Структура("СчетДт", Сч40));
	
	Если НЕ НайденныеДвижения.Количество() И Не РаспределятьПрямыеЗатраты Тогда
		Данные40Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Сч43, Предприятие);
		НайденныеДвижения = НайденныеДвижения0.НайтиСтроки(Новый Структура("СчетДт", Сч43));
	КонецЕсли;
	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные40Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если НЕ ТекДвижение["СубконтоДт" + Индекс2] = Неопределено И Данные40Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		//НоваяСтрока.Субконто1 = ТекДвижение.СубконтоДт1;
		Если ТекДвижение.СчетДт = Сч43 И ТекДвижение.СчетКт = Сч40 Тогда
			НоваяСтрока.Субконто2 = ТекДвижение.СубконтоДт2;
		КонецЕсли;
		//НоваяСтрока.Субконто3 = ТекДвижение.СубконтоДт3;
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
		
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");
	
	ТаблицаВесовНоменклатуры = Выборка.Скопировать();
	ТаблицаВесовНоменклатуры.Очистить();
	ТаблицаВесовНоменклатуры.Колонки.Добавить("Номенклатура"); 
	ТаблицаВесовНоменклатуры.Колонки.Добавить("Склад"); 
	ТаблицаВесовНоменклатуры.Колонки.Добавить("Серия"); 
	ТаблицаВесовНоменклатуры.Колонки.Добавить("Количество");
		
	Если Выборка.Количество() Тогда
		
		МассивНоменклатур = Новый Массив;
		МассивНоменклатур.Добавить(Новый Структура("Номенклатура, Серии", Номенклатура.Выгрузить().ВыгрузитьКолонку("Субконто1"), Номенклатура.Выгрузить().ВыгрузитьКолонку("Субконто2")));
		
		НоменклатураПеределСквозная = Выборка.Скопировать();
		НоменклатураПеределСквозная.Очистить();
		
		Для каждого ТекМассивНоменк Из МассивНоменклатур Цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	УчетныйОбороты.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрБухгалтерии.Учетный.Обороты(
			|			&НачПериода,
			|			&КонПериода,
			|			Регистратор,
			|			Счет = &Счет43,
			|			,
			|			Предприятия = &ВыбПредприятие
			|				И СценарийПлана = &Сценарий
			|				И Субконто1 В (&Номенклатура)
			|				И (Субконто3 В (&Серии)
			|					ИЛИ Субконто3 ЕСТЬ NULL
			|					ИЛИ НЕ ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.СерииНоменклатуры)),
			|			,
			|			) КАК УчетныйОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	УчетныйОбороты.Регистратор
			|
			|УПОРЯДОЧИТЬ ПО
			|	УчетныйОбороты.Регистратор.МоментВремени";
			
			Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
			Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Дата));
			Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Дата));
			Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
			Запрос.УстановитьПараметр("Номенклатура", ТекМассивНоменк.Номенклатура);
			Запрос.УстановитьПараметр("Серии", ТекМассивНоменк.Серии);
			Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
			
			Результат = Запрос.Выполнить();
			
			НоменклатураПередел = Выборка.Скопировать();
			НоменклатураПередел.Очистить();
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Проводки = РегистрыБухгалтерии.Учетный.СоздатьНаборЗаписей();
				Проводки.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
				Проводки.Прочитать();
				
				Для каждого ТекСтрока Из Выборка Цикл
					
					Количество = 0;
					Сумма = 0;
					//ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3));
					//Если Не ОтобранныеСтрокиТЧ0.Количество() Тогда
					//	ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, NULL));
					//КонецЕсли;
					//Для каждого ТекСтрокаТЧ Из ОтобранныеСтрокиТЧ0 Цикл
					//	Количество = Количество + ТекСтрокаТЧ.Количество; 
					//КонецЦикла;
					
					ОтобранныеСтрокиТЧ = Выборка43.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3));
					Если Не ОтобранныеСтрокиТЧ.Количество() Тогда
						ОтобранныеСтрокиТЧ = Выборка43.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, NULL));
					КонецЕсли;
					Для каждого ТекСтрокаТЧ Из ОтобранныеСтрокиТЧ Цикл
						Количество = Количество + ТекСтрокаТЧ.КоличествоНачальныйОстаток + ?(Не РаспределятьПрямыеЗатраты, ТекСтрокаТЧ.КоличествоОборотДт, 0);
						//Если Не ОтобранныеСтрокиТЧ0.Количество() Тогда
						//	Количество = Количество + ТекСтрокаТЧ.КоличествоОборотДт;
						//КонецЕсли;
						Сумма = Сумма + ТекСтрокаТЧ.СуммаНачальныйОстаток + ?(Не РаспределятьПрямыеЗатраты, ТекСтрокаТЧ.СуммаОборотДт, 0);
					КонецЦикла;
					
					ОтобранныеСтрокиВеса = ТаблицаВесовНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, Склад, Серия", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3));
					Если Не ОтобранныеСтрокиВеса.Количество() Тогда
						ОтобранныеСтрокиВеса = ТаблицаВесовНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, Склад, Серия", ТекСтрока.Субконто1, ТекСтрока.Субконто2, NULL));
					КонецЕсли;
					Для каждого ТекСтрокаТЧ Из ОтобранныеСтрокиВеса Цикл
						Сумма = Сумма + ТекСтрокаТЧ.СуммаОстаток;
						Количество = Количество + ТекСтрокаТЧ.Количество;
					КонецЦикла;				
					                                                                                                                                                              
					Себестоимость = ?(Количество, ТекСтрока.СуммаОстаток / Количество, 0);
					СебестоимостьСредняя = ?(Количество, (Сумма + ТекСтрока.СуммаОстаток) / Количество, 0);
					
					НужнаЗапись = Ложь;
					Для каждого ТекСтрокаПроводка Из Проводки Цикл
						Если ТекСтрокаПроводка.СчетДт = Сч43 И ТекСтрокаПроводка.СубконтоДт[СубНом] = ТекСтрока.Субконто1 И ТекСтрокаПроводка.СчетКт = Сч40 Тогда
							ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоДт * Себестоимость;
							НужнаЗапись = Истина;
							//ИначеЕсли ТекСтрокаПроводка.СчетДт = Сч43 И ТекСтрокаПроводка.СубконтоДт[СубНом] = ТекСтрока.Субконто1 И НЕ ТекСтрокаПроводка.СчетКт = Сч40 И НЕ ТекСтрокаПроводка.СчетКт = Сч20 Тогда
							//	ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоДт * СебестоимостьСредняя;
							//	НужнаЗапись = Истина;
						ИначеЕсли ТекСтрокаПроводка.СчетКт = Сч43 И ТекСтрокаПроводка.СубконтоКт[СубНом] = ТекСтрока.Субконто1 И ТекСтрокаПроводка.СубконтоКт[СубСклад] = ТекСтрока.Субконто2 И (ТекСтрокаПроводка.СубконтоКт[СубСерия] = ТекСтрока.Субконто3 ИЛИ Не ЗначениеЗаполнено(ТекСтрокаПроводка.СубконтоКт[СубСерия])) Тогда
							
							НужнаЗапись = Истина;
							Если ТекСтрокаПроводка.СчетДт = Счет9002 Тогда
								
								НоваяСтрока9002 = Выборка9002.Добавить();
								НоваяСтрока9002.Субконто1 = ТекСтрокаПроводка.СубконтоДт[СубНом];
								НоваяСтрока9002.Субконто2 = ТекСтрокаПроводка.СубконтоДт[СубСтатья];
								НоваяСтрока9002.Субконто3 = ТекСтрокаПроводка.СубконтоДт[Суб3Вид];
								НоваяСтрока9002.СуммаОборотКт = 0;
								НоваяСтрока9002.КоличествоОборотДт = 0;
								НоваяСтрока9002.КоличествоОборотКт = 0;
								НоваяСтрока9002.Счет = Счет9002;
								ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоКт * СебестоимостьСредняя;
								НоваяСтрока9002.СуммаОборотДт = ТекСтрокаПроводка.Сумма;
								
							ИначеЕсли ТипЗнч(ТекСтрокаПроводка.СубконтоДт[СубНом]) = Тип("СправочникСсылка.Номенклатура") И ТипЗнч(ТекСтрокаПроводка.КоличествоДт) = Тип("Число") И ТекСтрокаПроводка.КоличествоДт Тогда
								
								ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], ТекСтрокаПроводка.СубконтоДт[СубСерия]));
								Если Не ОтобранныеСтрокиТЧ0.Количество() Тогда
									ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], NULL));
								КонецЕсли;
								
								НайдСтрокиПередела = НоменклатураПеределСквозная.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], ТекСтрокаПроводка.СубконтоДт[СубСерия]));
								Если Не НайдСтрокиПередела.Количество() Тогда
									НайдСтрокиПередела = НоменклатураПеределСквозная.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], NULL));
								КонецЕсли;
								
								Если Не ОтобранныеСтрокиТЧ0.Количество() И Не НайдСтрокиПередела.Количество() Тогда
									
									НоваяСтрока = НоменклатураПередел.Добавить();
									НоваяСтрока.Субконто1 = ТекСтрокаПроводка.СубконтоДт[СубНом];
									НоваяСтрока.Субконто2 = ТекСтрокаПроводка.СубконтоДт[СубСклад];
									НоваяСтрока.Субконто3 = ТекСтрокаПроводка.СубконтоДт[СубСерия];
									НоваяСтрока.СуммаОстаток = 0;
									//НоваяСтрокаПередел = НоменклатураПередел.Добавить();
									//ЗаполнитьЗначенияСвойств(НоваяСтрокаПередел, НоваяСтрока);
									ОтобранныеСтрокиТЧ = Выборка43.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", НоваяСтрока.Субконто1, НоваяСтрока.Субконто2, НоваяСтрока.Субконто3));
									Если Не ОтобранныеСтрокиТЧ.Количество() Тогда
										ОтобранныеСтрокиТЧ = Выборка43.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", НоваяСтрока.Субконто1, НоваяСтрока.Субконто2, NULL));
									КонецЕсли;
									Для каждого ТекСтрокаТЧ Из ОтобранныеСтрокиТЧ Цикл
										Если ТекСтрокаПроводка.КоличествоДт = ТекСтрокаПроводка.КоличествоКт Тогда
											ТекСтрокаТЧ.СуммаОборотДт = 0;
											ТекСтрокаТЧ.КоличествоОборотДт = 0;
										КонецЕсли;
									КонецЦикла;
									
									НоваяСтрокаСквозная = НоменклатураПеределСквозная.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрокаСквозная, НоваяСтрока);
									
								КонецЕсли;
								
								НоваяСтрокаВеса = ТаблицаВесовНоменклатуры.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрокаВеса, ТекСтрока);
								НоваяСтрокаВеса.Номенклатура = ТекСтрокаПроводка.СубконтоДт[СубНом];
								НоваяСтрокаВеса.Склад = ТекСтрокаПроводка.СубконтоДт[СубСклад];
								НоваяСтрокаВеса.Серия = ТекСтрокаПроводка.СубконтоДт[СубСерия];
								НоваяСтрокаВеса.Количество = ТекСтрокаПроводка.КоличествоДт;
								НоваяСтрокаВеса.СуммаОстаток = ТекСтрокаПроводка.КоличествоКт * СебестоимостьСредняя;
								
								//ИначеЕсли ТекСтрокаПроводка.СубконтоКт[СубСклад] = ТекСтрока.Субконто2 И ТипЗнч(ТекСтрокаПроводка.КоличествоДт) = Тип("Число") И ТекСтрокаПроводка.КоличествоДт Тогда
								//	ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоКт * СебестоимостьСредняя;
							КонецЕсли;
							ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоКт * СебестоимостьСредняя;
						ИначеЕсли ТекСтрокаПроводка.СчетДт = Сч43 И ТекСтрокаПроводка.СубконтоДт[СубНом] = ТекСтрока.Субконто1 И ТекСтрокаПроводка.СубконтоДт[СубСклад] = ТекСтрока.Субконто2 И (ТекСтрокаПроводка.СубконтоДт[СубСерия] = ТекСтрока.Субконто3 ИЛИ Не ЗначениеЗаполнено(ТекСтрокаПроводка.СубконтоДт[СубСерия])) И ТекСтрокаПроводка.СчетКт = Счет9002 Тогда
							
							НужнаЗапись = Истина;
							
							НоваяСтрока9002 = Выборка9002.Добавить();
							НоваяСтрока9002.Субконто1 = ТекСтрокаПроводка.СубконтоКт[СубНом];
							НоваяСтрока9002.Субконто2 = ТекСтрокаПроводка.СубконтоКт[СубСтатья];
							НоваяСтрока9002.Субконто3 = ТекСтрокаПроводка.СубконтоКт[Суб3Вид];
							НоваяСтрока9002.СуммаОборотДт = 0;
							НоваяСтрока9002.КоличествоОборотДт = 0;
							НоваяСтрока9002.КоличествоОборотКт = 0;
							НоваяСтрока9002.Счет = Счет9002;
							
							ТекСтрокаПроводка.Сумма = - ТекСтрокаПроводка.КоличествоДт * СебестоимостьСредняя;
							НоваяСтрока9002.СуммаОборотКт = ТекСтрокаПроводка.Сумма;
							
						ИначеЕсли ТекСтрокаПроводка.СчетДт = Сч43 И ТекСтрокаПроводка.СубконтоДт[СубНом] = ТекСтрока.Субконто1 И ТекСтрокаПроводка.СубконтоДт[СубСклад] = ТекСтрока.Субконто2 И (ТекСтрокаПроводка.СубконтоДт[СубСерия] = ТекСтрока.Субконто3 ИЛИ Не ЗначениеЗаполнено(ТекСтрокаПроводка.СубконтоДт[СубСерия])) И Не ТекСтрокаПроводка.СчетКт = Сч40 Тогда
							
							ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], ТекСтрокаПроводка.СубконтоДт[СубСерия]));
							Если Не ОтобранныеСтрокиТЧ0.Количество() Тогда
								ОтобранныеСтрокиТЧ0 = Номенклатура.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрокаПроводка.СубконтоДт[СубНом], ТекСтрокаПроводка.СубконтоДт[СубСклад], NULL));
							КонецЕсли;
							
							Если Не ОтобранныеСтрокиТЧ0.Количество() Тогда
								НовыйВес = Ложь;
								
								Инд = 1; Суб1 = Неопределено; Суб2 = Неопределено; Суб3 = Неопределено;
								Для каждого Суб Из ТекСтрокаПроводка.СубконтоКт Цикл
									Если Инд = 1 Тогда
										Суб1 = Суб.Значение;
									КонецЕсли;
									Если Инд = 2 Тогда
										Суб2 = Суб.Значение;
									КонецЕсли;
									Если Инд = 3 Тогда
										Суб3 = Суб.Значение;
									КонецЕсли;
									Инд = Инд + 1;
								КонецЦикла;
								//Если ТипЗнч(ТекСтрокаПроводка.СубконтоКт[СубНом]) = Тип("СправочникСсылка.Номенклатура") И ТипЗнч(ТекСтрокаПроводка.КоличествоКт) = Тип("Число") И ТекСтрокаПроводка.КоличествоКт Тогда	
								НайденныеСтрокиВесов = ТаблицаВесовНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, Склад, Серия, Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3, Суб1, Суб2, Суб3));
								Если Не НайденныеСтрокиВесов.Количество() Тогда
									НайденныеСтрокиВесов = ТаблицаВесовНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, Склад, Серия, Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3, Суб1, Суб2, NULL));
								КонецЕсли;
								Если Не НайденныеСтрокиВесов.Количество() Тогда
									НовыйВес = Истина;
								КонецЕсли;
								//Иначе
								//	НовыйВес = Истина;	
								//КонецЕсли;
								Если НовыйВес Тогда // оприходования
									
									НоваяСтрокаВеса = ТаблицаВесовНоменклатуры.Добавить();
									Инд = 1;
									Для каждого Суб Из ТекСтрокаПроводка.СубконтоКт Цикл
										НоваяСтрокаВеса["Субконто" + Строка(Инд)] = Суб.Значение;
										Инд = Инд + 1;
									КонецЦикла;
									НоваяСтрокаВеса.Номенклатура = ТекСтрока.Субконто1;
									НоваяСтрокаВеса.Склад = ТекСтрока.Субконто2;
									НоваяСтрокаВеса.Серия = ТекСтрока.Субконто3;
									НоваяСтрокаВеса.Количество = ТекСтрокаПроводка.КоличествоДт;
									НоваяСтрокаВеса.СуммаОстаток = ТекСтрокаПроводка.Сумма;
									
									//отправляем на пересчет с/с                 
									НайденныеСтрокиПередел = НоменклатураПеределСквозная.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3));
									Если Не НайденныеСтрокиПередел.Количество() Тогда
										НайденныеСтрокиПередел = НоменклатураПеределСквозная.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, NULL));
									КонецЕсли;
									Если Не НайденныеСтрокиПередел.Количество() И МассивНоменклатур.Найти(ТекСтрока.Субконто1) = Неопределено Тогда
										НоваяСтрока = НоменклатураПередел.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
										НоваяСтрока.СуммаОстаток = 0;
										
										НоваяСтрокаСквозная = НоменклатураПеределСквозная.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрокаСквозная, НоваяСтрока);										
									КонецЕсли;
									
								КонецЕсли;
							КонецЕсли;	
						КонецЕсли;
					КонецЦикла;
					Если НужнаЗапись Тогда
						Проводки.Записать();
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
			
			Выборка = НоменклатураПередел.Скопировать();
			
			Если Выборка.Количество() Тогда
				МассивНоменклатур.Добавить(Новый Структура("Номенклатура, Серии", Выборка.ВыгрузитьКолонку("Субконто1"),  Выборка.ВыгрузитьКолонку("Субконто2")));
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//добавление оборотов не участвующих в выпуске (например остатки на складе без производства)
	Выборка = ВыборкаОстатки.Получить(Счет9002);
	Если Не Выборка = Неопределено Тогда
		Для каждого ТекСтрока Из Выборка Цикл
			НайденныеСтроки = Выборка9002.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, ТекСтрока.Субконто3));
			Если Не НайденныеСтроки.Количество() Тогда
				НайденныеСтроки = Выборка9002.НайтиСтроки(Новый Структура("Субконто1, Субконто2, Субконто3", ТекСтрока.Субконто1, ТекСтрока.Субконто2, NULL));
			КонецЕсли;
			Если Не НайденныеСтроки.Количество() Тогда
				НоваяСтрока = Выборка9002.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Выборка9002.Свернуть("Счет, Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОборотДт, СуммаОборотКт, КоличествоОборотДт, КоличествоОборотКт");
	
	//Выборка90022 = Выборка9002.Скопировать();
	//Выборка90022.Очистить();
	//
	//МассивНоменклатуры = Новый Массив;
	//Выборка = ВыборкаОстатки.Получить(Счет9002);
	//Если Не Выборка = Неопределено Тогда
	//	Для каждого ТекСтрока Из Выборка Цикл
	//		Если Не Выборка9002.НайтиСтроки(Новый Структура("Субконто1", ТекСтрока.Субконто1)).Количество() Тогда
	//			НоваяСтрока = Выборка90022.Добавить();
	//			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	//		Иначе
	//			МассивНоменклатуры.Добавить(ТекСтрока.Субконто1);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	//
	//Для каждого ТекСтрока Из Выборка90022 Цикл
	//	НоваяСтрока = Выборка9002.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
	//КонецЦикла;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	УчетныйОбороты.Субконто1 КАК Субконто1,
	//               |	УчетныйОбороты.Подразделение КАК Подразделение,
	//               |	УчетныйОбороты.Субконто2 КАК Субконто2,
	//               |	УчетныйОбороты.Субконто3 КАК Субконто3,
	//               |	УчетныйОбороты.Счет КАК Счет,
	//               |	УчетныйОбороты.СуммаОборот КАК СуммаОборот,
	//               |	УчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
	//               |	УчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт,
	//               |	УчетныйОбороты.КоличествоОборотДт КАК КоличествоОборотДт,
	//               |	УчетныйОбороты.КоличествоОборотКт КАК КоличествоОборотКт
	//               |ИЗ
	//               |	РегистрБухгалтерии.Учетный.Обороты(
	//               |			&ДатаНачала,
	//               |			&ДатаОкончания,
	//               |			,
	//               |			Счет В ИЕРАРХИИ (&Счет90),
	//               |			,
	//               |			Предприятия = &Предприятие
	//               |				И СценарийПлана = &Сценарий
	//               |				И Субконто1 В (&МассивНоменклатуры),
	//               |			НЕ КорСчет В ИЕРАРХИИ (&Счет43),
	//               |			) КАК УчетныйОбороты";
	//
	//	
	//Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	//Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	//Запрос.УстановитьПараметр("Предприятие", Предприятие);
	//Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Учетный.Счет9002());
	//Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
	//Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	//Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	НоваяСтрока = Выборка9002.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);		
	//КонецЦикла;
	
	ВыборкаОстатки.Вставить(Счет9002, Выборка9002);
	
	//замена номенклатуры на НГ
	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	Для каждого ТекДвижение Из Движения.Учетный Цикл
		Если ТекДвижение.СчетДт = Сч40 Тогда
			ВыборкаБазаНайденныеСтроки = ВыборкаБаза.НайтиСтроки(Новый Структура("Субконто1", ТекДвижение.СубконтоДт[СубНомНГ]));
			Для каждого ТекСтрока Из ВыборкаБазаНайденныеСтроки Цикл
				Если ЗначениеЗаполнено(ТекСтрока.НоменклатурнаяГруппа) Тогда
					ТекДвижение.СубконтоДт[СубНомНГ] = ТекСтрока.НоменклатурнаяГруппа;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие9091(ВыборкаОстатки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Учетный.Ссылка КАК Ссылка
	|ИЗ
	|	ПланСчетов.Учетный КАК Учетный
	|ГДЕ
	|	Учетный.Ссылка В ИЕРАРХИИ(&Счет90) ИЛИ Учетный.Ссылка В ИЕРАРХИИ(&Счет91)";
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Учетный.Счет90());
	Запрос.УстановитьПараметр("Счет91", ПланыСчетов.Учетный.Счет91());
	Результат = Запрос.Выполнить();
	Сч9091 = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Сч99 = ПланыСчетов.Учетный.Счет99();
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	ВремТЧ = Движения.Учетный.Выгрузить();
	ВремТЧ.Очистить();
	Для каждого ТекСчет Из Сч9091 Цикл
		
		ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(ТекСчет, Предприятие);
		
		Для каждого ТекСтрока Из НайденныеДвижения Цикл
			Если ТекСчет = ТекСтрока.СчетДт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
					Если ДанныеСчета["ВидСубконто" + Индекс1] = Неопределено Тогда
						Продолжить;						
					КонецЕсли;
					Для Индекс2 = 1 По 3 Цикл
						Если НЕ ТекСтрока["СубконтоДт" + Индекс2] = Неопределено И ДанныеСчета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекСтрока["СубконтоДт" + Индекс2])) Тогда
							НоваяСтрока["СубконтоДт" + Индекс1] = ТекСтрока["СубконтоДт" + Индекс2];
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла; 
				НоваяСтрока.СчетКт = Сч99;
			ИначеЕсли ТекСчет = ТекСтрока.СчетКт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
					Если ДанныеСчета["ВидСубконто" + Индекс1] = Неопределено Тогда
						Продолжить;						
					КонецЕсли;
					Для Индекс2 = 1 По 3 Цикл
						Если НЕ ТекСтрока["СубконтоДт" + Индекс2] = Неопределено И ДанныеСчета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекСтрока["СубконтоКт" + Индекс2])) Тогда
							НоваяСтрока["СубконтоКт" + Индекс1] = ТекСтрока["СубконтоКт" + Индекс2];
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла; 
				НоваяСтрока.СчетДт = Сч99;
			КонецЕсли;			
		КонецЦикла;
		
		Выборка = ВыборкаОстатки.Получить(ТекСчет);
		Если Выборка = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		
		СчетКоличественный = ТекСчет.Количественный;
		
		Для каждого ТекСтрока Из Выборка Цикл
			
			Если ТекСчет = ТекСтрока.Счет Тогда
				Если ТекСтрока.СуммаОборотДт Тогда
					НоваяСтрока = ВремТЧ.Добавить();
					НоваяСтрока.СчетДт = ТекСтрока.Счет;
					НоваяСтрока.СчетКт = Сч99;
					НоваяСтрока.СубконтоДт1 = ТекСтрока.Субконто1;
					НоваяСтрока.СубконтоДт2 = ТекСтрока.Субконто2;
					НоваяСтрока.СубконтоДт3 = ТекСтрока.Субконто3;
					НоваяСтрока.ПодразделениеДт = ТекСтрока.Подразделение;
					НоваяСтрока.Сумма = ТекСтрока.СуммаОборотДт - ТекСтрока.СуммаОборотКт;
					Если СчетКоличественный Тогда
						НоваяСтрока.КоличествоДт = ТекСтрока.КоличествоОборотДт - ТекСтрока.КоличествоОборотКт;
					КонецЕсли;
				Иначе
					НоваяСтрока = ВремТЧ.Добавить();
					НоваяСтрока.СчетДт = Сч99;
					НоваяСтрока.СчетКт = ТекСтрока.Счет;
					НоваяСтрока.СубконтоКт1 = ТекСтрока.Субконто1;
					НоваяСтрока.СубконтоКт2 = ТекСтрока.Субконто2;
					НоваяСтрока.СубконтоКт3 = ТекСтрока.Субконто3;
					НоваяСтрока.ПодразделениеКт = ТекСтрока.Подразделение;
					НоваяСтрока.Сумма = ТекСтрока.СуммаОборотКт - ТекСтрока.СуммаОборотДт;
					Если СчетКоличественный Тогда
						НоваяСтрока.КоличествоКт = ТекСтрока.КоличествоОборотКт - ТекСтрока.КоличествоОборотДт;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			
		КонецЦикла; 

	КонецЦикла;
	
	ВремТЧ.Свернуть("СчетДт, СчетКт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СубконтоКт1, СубконтоКт2, СубконтоКт3, ПодразделениеДт, ПодразделениеКт", "Сумма, КоличествоДт, КоличествоКт");
	
	Для каждого ТекСтрока Из ВремТЧ Цикл
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
		"Закрытие 90-91",
		ТекСтрока.СчетКт, // счетДт
		ТекСтрока.СубконтоКт1, //СубконтоДт1
		ТекСтрока.СубконтоКт2, //СубконтоДт2
		ТекСтрока.СубконтоКт3, //СубконтоДт3
		ТекСтрока.ПодразделениеКт, //ПодразделениеДт
		ТекСтрока.КоличествоКт,
		, //ВалютаДт
		0, //ВалСуммаДт
		ТекСтрока.СчетДт,
		ТекСтрока.СубконтоДт1, //СубконтоКт1
		ТекСтрока.СубконтоДт2, //СубконтоКт2
		ТекСтрока.СубконтоДт3, //СубконтоКт3
		ТекСтрока.ПодразделениеДт, //ПодразделениеКт
		ТекСтрока.КоличествоДт, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		ТекСтрока.Сумма, //Сумма
		Истина, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		)	
		
	КонецЦикла;		

КонецПроцедуры

Процедура Закрытие99(ВыборкаОстатки)
	
	Сч9091 = Новый Массив;
	Сч9091.Добавить(ПланыСчетов.Учетный.Счет99());
	
	Сч7502 = ПланыСчетов.Учетный.Счет7502();
	Сч84 = ПланыСчетов.Учетный.Счет84();
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	ВремТЧ = Движения.Учетный.Выгрузить();
	ВремТЧ.Очистить();
	ВыборкаБаза = РаспределениеПрибыли.Выгрузить();
	
	Для каждого ТекСчет Из Сч9091 Цикл
		Для каждого ТекСтрока Из НайденныеДвижения Цикл
			СуммаЦелая = ТекСтрока.Сумма;
			СуммаНарастующая = 0;
			
			Если ТекСчет = ТекСтрока.СчетДт ИЛИ ТекСчет = ТекСтрока.СчетКт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СчетДт = ТекСчет;
				НоваяСтрока.СчетКт = Сч84;
				НоваяСтрока.СубконтоКт1 = Неопределено;
				НоваяСтрока.СубконтоКт2 = Неопределено;
				НоваяСтрока.СубконтоКт3 = Неопределено;
				НоваяСтрока.СубконтоДт1 = Неопределено;
				НоваяСтрока.СубконтоДт2 = Неопределено;
				НоваяСтрока.СубконтоДт3 = Неопределено;
				НоваяСтрока.Сумма = ТекСтрока.Сумма;
				Если ТекСчет = ТекСтрока.СчетДт Тогда
					НоваяСтрока.Сумма = - НоваяСтрока.Сумма;
				КонецЕсли;
			КонецЕсли;
			
			Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
				
				Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.Сумма, 2);
				СуммаНарастующая = СуммаНарастующая + Сумма;
				
				Если Сумма Тогда
					Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
						Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
					КонецЕсли;
					
					Если ТекСчет = ТекСтрока.СчетДт ИЛИ ТекСчет = ТекСтрока.СчетКт Тогда
						НоваяСтрока = ВремТЧ.Добавить();			
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
						НоваяСтрока.СчетДт = Сч84;
						НоваяСтрока.СчетКт = Сч7502;
						НоваяСтрока.СубконтоКт1 = СтрокаРаботы.Учредитель;
						НоваяСтрока.СубконтоКт2 = Неопределено;
						НоваяСтрока.СубконтоКт3 = Неопределено;
						НоваяСтрока.СубконтоДт1 = Неопределено;
						НоваяСтрока.СубконтоДт2 = Неопределено;
						НоваяСтрока.СубконтоДт3 = Неопределено;
						НоваяСтрока.Сумма = Сумма;
						Если ТекСчет = ТекСтрока.СчетДт Тогда
							НоваяСтрока.Сумма = - НоваяСтрока.Сумма;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла; 
	КонецЦикла;
	
	ВремТЧ.Свернуть("СчетДт, СчетКт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СубконтоКт1, СубконтоКт2, СубконтоКт3", "Сумма");
	
	
	//распределение прибыли
	Для каждого ТекСтрока Из ВремТЧ Цикл
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
		"Закрытие 99",
		ТекСтрока.СчетКт, // счетДт
		ТекСтрока.СубконтоКт1, //СубконтоДт1
		ТекСтрока.СубконтоКт2, //СубконтоДт2
		ТекСтрока.СубконтоКт3, //СубконтоДт3
		, //ПодразделениеДт
		0,
		, //ВалютаДт
		0, //ВалСуммаДт
		ТекСтрока.СчетДт,
		ТекСтрока.СубконтоДт1, //СубконтоКт1
		ТекСтрока.СубконтоДт2, //СубконтоКт2
		ТекСтрока.СубконтоДт3, //СубконтоКт3
		, //ПодразделениеКт
		0, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		ТекСтрока.Сумма, //Сумма
		Ложь, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		)	
		
	КонецЦикла;		

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РучнаяКорректировка = Ложь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение и РучнаяКорректировка Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Дата = КонецМесяца(Дата);
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры
