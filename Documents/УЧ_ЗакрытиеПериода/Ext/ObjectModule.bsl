
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Если РучнаяКорректировка Тогда		
	//	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//		НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = ТекстСообщения;
	//	Сообщение.КлючДанных = Ссылка;
	//	Сообщение.Сообщить();		
	//	
	//	Возврат;
	//КонецЕсли;

	Движения.Учетный.Записывать = Истина;

	ВыборкаОстатки = ВернутьОстатки();
	
	Если СписыватьРасходыБудующихПериодов Тогда
		Закрытие97(ВыборкаОстатки);
	КонецЕсли;
	
	Если НачислятьАмортизацию Тогда
		Закрытие01(ВыборкаОстатки);
	КонецЕсли;
	
	Закрытие25(ВыборкаОстатки);
	
	Счет26 = ПланыСчетов.Учетный.НайтиПоКоду("26");
	Если ЗначениеЗаполнено(Счет26) Тогда
		Закрытие25(ВыборкаОстатки, Счет26);
	КонецЕсли;
	
	Закрытие44(ВыборкаОстатки);
	
	Закрытие20(ВыборкаОстатки);
	
	Закрытие40(ВыборкаОстатки);
	
	Закрытие9091(ВыборкаОстатки);
	
	Закрытие99(ВыборкаОстатки);
	
	
КонецПроцедуры

Функция ВернутьОстатки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
	               |	УчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
	               |	УчетныйОстаткиИОбороты.Субконто2 КАК Субконто2,
	               |	УчетныйОстаткиИОбороты.Субконто3 КАК Субконто3,
	               |	УчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	УчетныйОстаткиИОбороты.СуммаОборот КАК СуммаОборот,
	               |	УчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаОстаток,
	               |	УчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	               |	УчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.ОстаткиИОбороты(
	               |			&ДатаНачала,
	               |			&ДатаОкончания,
				   |			,
				   |			,
				   |			Счет = &Счет25
				   |				ИЛИ Счет = &Счет44
				   |				ИЛИ Счет = &Счет26
				   |				ИЛИ Счет = &Счет20
				   |				ИЛИ Счет В ИЕРАРХИИ (&Счет90)
				   |				ИЛИ Счет В ИЕРАРХИИ (&Счет91)
				   |				ИЛИ Счет В ИЕРАРХИИ (&Счет97)
				   |				ИЛИ Счет В ИЕРАРХИИ (&Счет01),
				   |			,
				   |			Предприятия = &Предприятие
				   |				И СценарийПлана = &Сценарий) КАК УчетныйОстаткиИОбороты";
	
		
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Учетный.Счет25());
	Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Учетный.НайтиПоКоду("44"));
	Запрос.УстановитьПараметр("Счет26", ПланыСчетов.Учетный.НайтиПоКоду("26"));
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Учетный.Счет20());
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Учетный.Счет90());
	Запрос.УстановитьПараметр("Счет97", ПланыСчетов.Учетный.Счет97());
	Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Учетный.Счет01());
	Запрос.УстановитьПараметр("Счет91", ПланыСчетов.Учетный.Счет91());
	Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	
	Результат = Запрос.Выполнить();
	Выборка25 = Результат.Выгрузить();
	ВыборкаСчет = Выборка25.Скопировать();
	ВыборкаСчет.Свернуть("Счет");
	
	ВыборкаВрем = Выборка25.Скопировать();
	
	Стру = Новый Соответствие;
	Для каждого ТекСчет Из ВыборкаСчет Цикл
		ВыборкаВрем.Очистить();
		НайденныеСтроки = Выборка25.НайтиСтроки(Новый Структура("Счет", ТекСчет.Счет));
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ВыборкаВрем.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЦикла;
		Стру.Вставить(ТекСчет.Счет, ВыборкаВрем.Скопировать());
	КонецЦикла; 
		
	Возврат Стру;	

КонецФункции // ()

Функция ПолучитьБазуРаспределения()
	
	РезультатБаза = Номенклатура.Выгрузить();
	
	Масс = Новый Массив;
	Масс.Добавить(РезультатБаза);
		
	Возврат Масс;

КонецФункции // ()

Процедура Закрытие97(ВыборкаОстатки)
	
	Счет97 = ПланыСчетов.Учетный.Счет97();
	Счет25 = ПланыСчетов.Учетный.Счет25();
	
	Выборка = ВыборкаОстатки.Получить(Счет97);
	Если Выборка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.СуммаОстаток Тогда
			
			Реквизиты97 = БюджетныйНаСервере.ВернутьРеквизиты(ТекСтрока.Субконто1, "СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3, ДатаНачалаСписания, ДатаОкончанияСписания, Сумма");
			
			КоличествоДней = 0;
			КоличествоДнейМесяца = 0;
			КоличествоДнейНачалоМесяца = 0;
			КоличествоДнейКонецМесяца = 0;
			КоличествоДнейВМесяце = 0;
			КоличествоМесяцев = 0;
			
			Если Реквизиты97.ДатаНачалаСписания = Дата('00010101') ИЛИ Реквизиты97.ДатаОкончанияСписания = Дата('00010101') Тогда
				Продолжить;			
			КонецЕсли;

			Если НачалоМесяца(Дата) > Реквизиты97.ДатаОкончанияСписания Тогда
				Продолжить;			
			КонецЕсли;
			
			ТекДата = Реквизиты97.ДатаНачалаСписания;
			Пока ТекДата <= Реквизиты97.ДатаОкончанияСписания Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДней = КоличествоДней + 1;			
			КонецЦикла;
			
			ТекДата = МАКС(НачалоМесяца(Дата), Реквизиты97.ДатаНачалаСписания);
			Пока ТекДата <= МИН(Реквизиты97.ДатаОкончанияСписания, КонецМесяца(Дата)) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейМесяца = КоличествоДнейМесяца + 1;			
			КонецЦикла;
			
			ТекДата = Реквизиты97.ДатаНачалаСписания;
			Пока ТекДата <= КонецМесяца(Реквизиты97.ДатаНачалаСписания) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейНачалоМесяца = КоличествоДнейНачалоМесяца + 1;			
			КонецЦикла;
			
			ТекДата = НачалоМесяца(Реквизиты97.ДатаОкончанияСписания);
			Пока ТекДата <= Реквизиты97.ДатаОкончанияСписания Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейКонецМесяца = КоличествоДнейКонецМесяца + 1;			
			КонецЦикла;

			ТекДата = НачалоМесяца(Дата);
			Пока ТекДата <= КонецМесяца(Дата) Цикл
				ТекДата = ТекДата + 24*60*60;
				КоличествоДнейВМесяце = КоличествоДнейВМесяце + 1;			
			КонецЦикла;
			
			ТекДата = НачалоМесяца(Реквизиты97.ДатаНачалаСписания);
			Пока ТекДата <= КонецМесяца(Реквизиты97.ДатаОкончанияСписания) Цикл
				Если НачалоМесяца(ТекДата) = НачалоМесяца(Реквизиты97.ДатаНачалаСписания) Тогда
					КоличествоМесяцев = КоличествоМесяцев + (КоличествоДнейНачалоМесяца/КоличествоДнейВМесяце);
				ИначеЕсли НачалоМесяца(ТекДата) = НачалоМесяца(Реквизиты97.ДатаОкончанияСписания) Тогда	
					КоличествоМесяцев = КоличествоМесяцев + (КоличествоДнейКонецМесяца/КоличествоДнейВМесяце);	
				Иначе
					КоличествоМесяцев = КоличествоМесяцев + 1;			
				КонецЕсли;
				ТекДата = ДобавитьМесяц(ТекДата, 1);
			КонецЦикла;

			Сумма = ?(КоличествоМесяцев, Реквизиты97.Сумма / КоличествоМесяцев / КоличествоДнейВМесяце * КоличествоДнейМесяца, 0);
			//Сумма = ?(КоличествоДней, Реквизиты97.Сумма / КоличествоДней * КоличествоДнейМесяца, 0);
			Если Окр(Сумма, 0) = Окр(ТекСтрока.СуммаОстаток, 0) ИЛИ Сумма > ТекСтрока.СуммаОстаток Тогда //копейки
				Сумма = ТекСтрока.СуммаОстаток;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Реквизиты97.СчетЗатрат) Тогда
				Стру = сабОбщегоНазначенияБУХ.ПолучитьСоотвСчетовИСубконто(Новый Структура("Счет, Субконто1, Субконто2, Субконто3", Реквизиты97.СчетЗатрат, Реквизиты97.СубконтоЗатрат1, Реквизиты97.СубконтоЗатрат2, Реквизиты97.СубконтоЗатрат3));
				Реквизиты97.СчетЗатрат = Стру.Счет;
				Реквизиты97.СубконтоЗатрат1 = Стру.Субконто1;
				Реквизиты97.СубконтоЗатрат2 = Стру.Субконто2;
				Реквизиты97.СубконтоЗатрат3 = Стру.Субконто3;
			КонецЕсли;
			
			сабОбщегоНазначения.НоваяСтрокаРегистраБух(
			Движения,
			Дата,
			Предприятие,
			Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
			"Списание затрат с 97 сч.",
			?(ЗначениеЗаполнено(Реквизиты97.СчетЗатрат), Реквизиты97.СчетЗатрат, Счет25), // счетДт
			Реквизиты97.СубконтоЗатрат1, //СубконтоДт1
			Реквизиты97.СубконтоЗатрат2, //СубконтоДт2
			Реквизиты97.СубконтоЗатрат3, //СубконтоДт3
			ТекСтрока.Подразделение, //ПодразделениеДт
			0,
			, //ВалютаДт
			0, //ВалСуммаДт
			Счет97,
			ТекСтрока.Субконто1, //СубконтоКт1
			ТекСтрока.Субконто2, //СубконтоКт2
			ТекСтрока.Субконто3, //СубконтоКт3
			ТекСтрока.Подразделение, //ПодразделениеКт
			0, //КоличествоКт
			, //ВалютаКт
			0, //ВалСуммаКт
			Сумма, //Сумма
			Истина, //Приход = Истина
			, //ФинЦФО = Неопределено
			//ФинПодразделениеЦФО = Неопределено
			);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие01(ВыборкаОстатки)
	
	Счет01 = ПланыСчетов.Учетный.Счет01();
	Счет02 = ПланыСчетов.Учетный.Счет02();
	Счет25 = ПланыСчетов.Учетный.Счет25();
	
	Выборка = ВыборкаОстатки.Получить(Счет01);
	Если Выборка = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Выборка Цикл
		
		Если ТекСтрока.СуммаОстаток Тогда
			
			Реквизиты01 = БюджетныйНаСервере.ВернутьРеквизиты(ТекСтрока.Субконто1, "СчетЗатрат, СубконтоЗатрат1, СубконтоЗатрат2, СубконтоЗатрат3, СпособНачисленияАмортизации, СчетУчета, СрокПолезногоИспользования, ДатаПостановкиНаУчет, ПервоначальнаяСтоимость, ДатаВыбытия, НачислятьАмотризацию, Подразделение");
			
			КоличествоМесяцев = Реквизиты01.СрокПолезногоИспользования;
			
			Если НЕ Реквизиты01.НачислятьАмотризацию ИЛИ НЕ КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			КоличествоМесяцевПрошло = 0;
			ТекДата = Реквизиты01.ДатаПостановкиНаУчет; 
			Пока ТекДата <= КонецМесяца(Дата) Цикл
				ТекДата = ДобавитьМесяц(ТекДата, 1);
				КоличествоМесяцевПрошло = КоличествоМесяцевПрошло + 1;			
			КонецЦикла;
			
			Если КоличествоМесяцевПрошло > КоличествоМесяцев Тогда
				Продолжить;			
			КонецЕсли;
			
			Сумма = ?(КоличествоМесяцев, Реквизиты01.ПервоначальнаяСтоимость / КоличествоМесяцев, 0);
			Если Окр(Сумма, 0) = Окр(ТекСтрока.СуммаОстаток, 0) ИЛИ Сумма > ТекСтрока.СуммаОстаток Тогда //копейки
				Сумма = ТекСтрока.СуммаОстаток;
			КонецЕсли;
			
			сабОбщегоНазначения.НоваяСтрокаРегистраБух(
			Движения,
			Дата,
			Предприятие,
			Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
			"Начисление амотризации по 02 сч.",
			Счет25, // счетДт
			Реквизиты01.СубконтоЗатрат1, //СубконтоДт1
			Реквизиты01.СубконтоЗатрат2, //СубконтоДт2
			Реквизиты01.СубконтоЗатрат3, //СубконтоДт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеДт
			0,
			, //ВалютаДт
			0, //ВалСуммаДт
			Счет02,
			ТекСтрока.Субконто1, //СубконтоКт1
			, //СубконтоКт2
			, //СубконтоКт3
			?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Реквизиты01.Подразделение), //ПодразделениеКт
			0, //КоличествоКт
			, //ВалютаКт
			0, //ВалСуммаКт
			Сумма, //Сумма
			Истина, //Приход = Истина
			, //ФинЦФО = Неопределено
			//ФинПодразделениеЦФО = Неопределено
			);
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура Закрытие25(ВыборкаОстатки, Счет25 = Неопределено)
	
	Если Счет25 = Неопределено Тогда
		Счет25 = ПланыСчетов.Учетный.Счет25();	
	КонецЕсли;
	
	Выборка = ВыборкаОстатки.Получить(Счет25);
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	//НоменклатураПростой = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
	Счет20 = ПланыСчетов.Учетный.Счет20();
	//Счет25 = ПланыСчетов.Учетный.Счет25();
	Счет91 = ПланыСчетов.Учетный.Счет91();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Ст91 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("Прочие внереализационные доходы и расходы", Истина);
	
	Данные25Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет25, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет25)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные25Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если Данные25Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");

	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	
	Для Каждого ТекСтрока Из Выборка Цикл
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				сабОбщегоНазначения.НоваяСтрокаРегистраБух(
				Движения,
				Дата,
				Предприятие,
				Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
				"Закрытие 25",
				СчетЗакрытия, // счетДт
				?(Закрытие91, Субкното1, СтрокаРаботы.Субконто1), //СубконтоДт1
				?(Закрытие91, Неопределено, ТекСтрока.Субконто1), //СубконтоДт2
				?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
				ТекСтрока.Подразделение, //ПодразделениеДт
				0,
				, //ВалютаДт
				0, //ВалСуммаДт
				Счет25,
				ТекСтрока.Субконто1, //СубконтоКт1
				, //СубконтоКт2
				, //СубконтоКт3
				ТекСтрока.Подразделение, //ПодразделениеКт
				0, //КоличествоКт
				, //ВалютаКт
				0, //ВалСуммаКт
				Сумма, //Сумма
				Истина, //Приход = Истина
				, //ФинЦФО = Неопределено
				//ФинПодразделениеЦФО = Неопределено
				);
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие44(ВыборкаОстатки)
	
	Выборка = ВыборкаОстатки.Получить(ПланыСчетов.Учетный.НайтиПоКоду("44"));
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	//НоменклатураПростой = Справочники.Номенклатура.НайтиПоНаименованию("Простой", Истина);
	Счет20 = ПланыСчетов.Учетный.Счет20();
	Счет25 = ПланыСчетов.Учетный.НайтиПоКоду("44");
	Счет91 = ПланыСчетов.Учетный.Счет91();
	Счет9003 = ПланыСчетов.Учетный.Счет9003();
	Ст91 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("Прочие внереализационные доходы и расходы", Истина);
	
	Данные25Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Счет25, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Счет25)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные25Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если Данные25Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");

	База = ПолучитьБазуРаспределения();
	ВыборкаБаза = База[0];
	
	Для Каждого ТекСтрока Из Выборка Цикл
		СуммаЦелая = ТекСтрока.СуммаОстаток;
		СуммаНарастующая = 0;		
		
		Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
			
			Если СтрокаРаботы.СчетЗатрат = Счет91 Тогда
				СчетЗакрытия = Счет91;
				Субкното1 = Ст91;
				Закрытие91 = Истина
			ИначеЕсли СтрокаРаботы.СчетЗатрат = Счет9003 Тогда
				СчетЗакрытия = Счет9003;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			Иначе
				СчетЗакрытия = Счет20;
				Субкното1 = Неопределено;
				Закрытие91 = Ложь;
			КонецЕсли;

			Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.СуммаОстаток, 2);
			СуммаНарастующая = СуммаНарастующая + Сумма;
			
			Если Сумма Тогда
				
				Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
					Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
				КонецЕсли;
				
				сабОбщегоНазначения.НоваяСтрокаРегистраБух(
				Движения,
				Дата,
				Предприятие,
				Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
				"Закрытие 44",
				СчетЗакрытия, // счетДт
				?(Закрытие91, Субкното1, СтрокаРаботы.Субконто1), //СубконтоДт1
				?(Закрытие91, Неопределено, ТекСтрока.Субконто1), //СубконтоДт2
				?(Закрытие91, Неопределено, СтрокаРаботы.Субконто3), //СубконтоДт3
				ТекСтрока.Подразделение, //ПодразделениеДт
				0,
				, //ВалютаДт
				0, //ВалСуммаДт
				Счет25,
				ТекСтрока.Субконто1, //СубконтоКт1
				, //СубконтоКт2
				, //СубконтоКт3
				ТекСтрока.Подразделение, //ПодразделениеКт
				0, //КоличествоКт
				, //ВалютаКт
				0, //ВалСуммаКт
				Сумма, //Сумма
				Истина, //Приход = Истина
				, //ФинЦФО = Неопределено
				//ФинПодразделениеЦФО = Неопределено
				);
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрытие20(ВыборкаОстатки)
	
	Сч20 = ПланыСчетов.Учетный.Счет20();
	Сч40 = ПланыСчетов.Учетный.Счет40();
	Сч9002 = ПланыСчетов.Учетный.Счет9002();
	ТипПроизводство = Перечисления.ТипыНоменклатуры.ОсновнаяПродукция;
	
	Выборка = ВыборкаОстатки.Получить(Сч20);
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	Данные20Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Сч20, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Сч20)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные20Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если Данные20Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		//НоваяСтрока.Субконто1 = ТекДвижение.СубконтоДт1;
		//НоваяСтрока.Субконто2 = ТекДвижение.СубконтоДт2;
		//НоваяСтрока.Субконто3 = ТекДвижение.СубконтоДт3;
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");
	
	Для каждого ТекСтрока Из Выборка Цикл
		
		Если НЕ ТекСтрока.СуммаОстаток Тогда
			Продолжить;	
		КонецЕсли;		
		
		ЭтоПроизводство = ?(ТипЗнч(ТекСтрока.Субконто1) = Тип("СправочникСсылка.Номенклатура") И ТекСтрока.Субконто1.ТипНоменклатуры = ТипПроизводство, Истина, Ложь);
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
		"Закрытие 20",
		?(ЭтоПроизводство, Сч40, Сч9002), // счетДт
		ТекСтрока.Субконто1, //СубконтоДт1
		ТекСтрока.Субконто2, //СубконтоДт2
		ТекСтрока.Субконто3, //СубконтоДт3
		ТекСтрока.Подразделение, //ПодразделениеДт
		0,
		, //ВалютаДт
		0, //ВалСуммаДт
		Сч20,
		ТекСтрока.Субконто1, //СубконтоКт1
		ТекСтрока.Субконто2, //СубконтоКт2
		ТекСтрока.Субконто3, //СубконтоКт3
		ТекСтрока.Подразделение, //ПодразделениеКт
		0, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		ТекСтрока.СуммаОстаток, //Сумма
		Истина, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		)	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура Закрытие40(ВыборкаОстатки)
	
	Сч40 = ПланыСчетов.Учетный.Счет40();
	Сч43 = ПланыСчетов.Учетный.Счет43();
	ТипПроизводство = Перечисления.ТипыНоменклатуры.ОсновнаяПродукция;
	
	Выборка = ВыборкаОстатки.Получить(Сч40);
	Если Выборка = Неопределено Тогда
		Выборка = Новый ТаблицаЗначений;
		Выборка.Колонки.Добавить("Субконто1");
		Выборка.Колонки.Добавить("Субконто2");
		Выборка.Колонки.Добавить("Субконто3");
		Выборка.Колонки.Добавить("Подразделение");
		Выборка.Колонки.Добавить("СуммаОстаток");
	КонецЕсли;
	
	Данные40Счета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Сч40, Предприятие);
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	НайденныеДвижения = НайденныеДвижения.НайтиСтроки(Новый Структура("СчетДт", Сч40)); 	
	Для каждого ТекДвижение Из НайденныеДвижения Цикл
		НоваяСтрока = Выборка.Добавить();
		Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
			Если Данные40Счета["ВидСубконто" + Индекс1] = Неопределено Тогда
				Продолжить;						
			КонецЕсли;
			Для Индекс2 = 1 По 3 Цикл
				Если Данные40Счета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекДвижение["СубконтоДт" + Индекс2])) Тогда
					НоваяСтрока["Субконто" + Индекс1] = ТекДвижение["СубконтоДт" + Индекс2];
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла; 
		//НоваяСтрока.Субконто1 = ТекДвижение.СубконтоДт1;
		//НоваяСтрока.Субконто2 = ТекДвижение.СубконтоДт2;
		//НоваяСтрока.Субконто3 = ТекДвижение.СубконтоДт3;
		НоваяСтрока.Подразделение = ТекДвижение.ПодразделениеДт;
		НоваяСтрока.СуммаОстаток = ТекДвижение.Сумма;
	КонецЦикла;
	
	Выборка.Свернуть("Субконто1, Субконто2, Субконто3, Подразделение", "СуммаОстаток");
	
	Если Выборка.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Регистратор,
		|			Счет = &Счет43,
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И СценарийПлана = &Сценарий,
		|			,
		|			) КАК УчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	УчетныйОбороты.Регистратор";
		
		Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
		Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Дата));
		Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
		Запрос.УстановитьПараметр("Сценарий", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Для каждого ТекСтрока Из Выборка Цикл
				
				Себестоимость = 0;
				ОтобранныеСтрокиТЧ = Номенклатура.НайтиСтроки(Новый Структура("Субконто1", ТекСтрока.Субконто1));
				Для каждого ТекСтрокаТЧ Из ОтобранныеСтрокиТЧ Цикл
					Себестоимость = ?(ТекСтрокаТЧ.Количество, ТекСтрока.СуммаОстаток / ТекСтрокаТЧ.Количество, 0);
				КонецЦикла;
				
				Проводки = РегистрыБухгалтерии.Учетный.СоздатьНаборЗаписей();
				Проводки.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
				Проводки.Прочитать();
				Для каждого ТекСтрокаПроводка Из Проводки Цикл
					Если ТекСтрокаПроводка.СчетДт = Сч43 И ТекСтрокаПроводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрока.Субконто1 Тогда
						ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоДт * Себестоимость;
					ИначеЕсли ТекСтрокаПроводка.СчетКт = Сч43 И ТекСтрокаПроводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрока.Субконто1 Тогда
						ТекСтрокаПроводка.Сумма = ТекСтрокаПроводка.КоличествоКт * Себестоимость;
					КонецЕсли;
				КонецЦикла;
				Проводки.Записать();
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;

	
КонецПроцедуры

Процедура Закрытие9091(ВыборкаОстатки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Учетный.Ссылка КАК Ссылка
	|ИЗ
	|	ПланСчетов.Учетный КАК Учетный
	|ГДЕ
	|	Учетный.Ссылка В ИЕРАРХИИ(&Счет90) ИЛИ Учетный.Ссылка В ИЕРАРХИИ(&Счет91)";
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Учетный.Счет90());
	Запрос.УстановитьПараметр("Счет91", ПланыСчетов.Учетный.Счет91());
	Результат = Запрос.Выполнить();
	Сч9091 = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Сч99 = ПланыСчетов.Учетный.Счет99();
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	ВремТЧ = Движения.Учетный.Выгрузить();
	ВремТЧ.Очистить();
	Для каждого ТекСчет Из Сч9091 Цикл
		
		ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(ТекСчет, Предприятие);
		
		Для каждого ТекСтрока Из НайденныеДвижения Цикл
			Если ТекСчет = ТекСтрока.СчетДт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
					Если ДанныеСчета["ВидСубконто" + Индекс1] = Неопределено Тогда
						Продолжить;						
					КонецЕсли;
					Для Индекс2 = 1 По 3 Цикл
						Если ДанныеСчета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекСтрока["СубконтоДт" + Индекс2])) Тогда
							НоваяСтрока["СубконтоДт" + Индекс1] = ТекСтрока["СубконтоДт" + Индекс2];
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла; 
				НоваяСтрока.СчетКт = Сч99;
			ИначеЕсли ТекСчет = ТекСтрока.СчетКт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				Для Индекс1 = 1 По 3 Цикл // в выгружаемой таблице значениек кривые индексы субконто(
					Если ДанныеСчета["ВидСубконто" + Индекс1] = Неопределено Тогда
						Продолжить;						
					КонецЕсли;
					Для Индекс2 = 1 По 3 Цикл
						Если ДанныеСчета["ВидСубконто" + Индекс1 + "ТипЗначения"].СодержитТип(ТипЗнч(ТекСтрока["СубконтоКт" + Индекс2])) Тогда
							НоваяСтрока["СубконтоКт" + Индекс1] = ТекСтрока["СубконтоКт" + Индекс2];
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла; 
				НоваяСтрока.СчетДт = Сч99;
			КонецЕсли;			
		КонецЦикла;
		
		Выборка = ВыборкаОстатки.Получить(ТекСчет);
		Если Выборка = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		
		Для каждого ТекСтрока Из Выборка Цикл
			
			Если ТекСчет = ТекСтрока.Счет Тогда
				Если ТекСтрока.СуммаОборотДт Тогда
					НоваяСтрока = ВремТЧ.Добавить();
					НоваяСтрока.СчетДт = ТекСтрока.Счет;
					НоваяСтрока.СчетКт = Сч99;
					НоваяСтрока.СубконтоДт1 = ТекСтрока.Субконто1;
					НоваяСтрока.СубконтоДт2 = ТекСтрока.Субконто2;
					НоваяСтрока.СубконтоДт3 = ТекСтрока.Субконто3;
					НоваяСтрока.ПодразделениеДт = ТекСтрока.Подразделение;
					НоваяСтрока.Сумма = ТекСтрока.СуммаОборотДт - ТекСтрока.СуммаОборотКт;
				Иначе
					НоваяСтрока = ВремТЧ.Добавить();
					НоваяСтрока.СчетДт = Сч99;
					НоваяСтрока.СчетКт = ТекСтрока.Счет;
					НоваяСтрока.СубконтоКт1 = ТекСтрока.Субконто1;
					НоваяСтрока.СубконтоКт2 = ТекСтрока.Субконто2;
					НоваяСтрока.СубконтоКт3 = ТекСтрока.Субконто3;
					НоваяСтрока.ПодразделениеКт = ТекСтрока.Подразделение;
					НоваяСтрока.Сумма = ТекСтрока.СуммаОборотКт;
				КонецЕсли;
			КонецЕсли;
			
			
		КонецЦикла; 

	КонецЦикла;
	
	ВремТЧ.Свернуть("СчетДт, СчетКт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СубконтоКт1, СубконтоКт2, СубконтоКт3, ПодразделениеДт, ПодразделениеКт", "Сумма");
	
	Для каждого ТекСтрока Из ВремТЧ Цикл
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
		"Закрытие 90-91",
		ТекСтрока.СчетКт, // счетДт
		ТекСтрока.СубконтоКт1, //СубконтоДт1
		ТекСтрока.СубконтоКт2, //СубконтоДт2
		ТекСтрока.СубконтоКт3, //СубконтоДт3
		ТекСтрока.ПодразделениеКт, //ПодразделениеДт
		0,
		, //ВалютаДт
		0, //ВалСуммаДт
		ТекСтрока.СчетДт,
		ТекСтрока.СубконтоДт1, //СубконтоКт1
		ТекСтрока.СубконтоДт2, //СубконтоКт2
		ТекСтрока.СубконтоДт3, //СубконтоКт3
		ТекСтрока.ПодразделениеДт, //ПодразделениеКт
		0, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		ТекСтрока.Сумма, //Сумма
		Истина, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		)	
		
	КонецЦикла;		

КонецПроцедуры

Процедура Закрытие99(ВыборкаОстатки)
	
	Сч9091 = Новый Массив;
	Сч9091.Добавить(ПланыСчетов.Учетный.Счет99());
	
	Сч7502 = ПланыСчетов.Учетный.Счет7502();
	Сч84 = ПланыСчетов.Учетный.Счет84();
	
	НайденныеДвижения = Движения.Учетный.Выгрузить();
	ВремТЧ = Движения.Учетный.Выгрузить();
	ВремТЧ.Очистить();
	ВыборкаБаза = РаспределениеПрибыли.Выгрузить();
	
	Для каждого ТекСчет Из Сч9091 Цикл
		Для каждого ТекСтрока Из НайденныеДвижения Цикл
			СуммаЦелая = ТекСтрока.Сумма;
			СуммаНарастующая = 0;
			
			Если ТекСчет = ТекСтрока.СчетДт ИЛИ ТекСчет = ТекСтрока.СчетКт Тогда
				НоваяСтрока = ВремТЧ.Добавить();			
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СчетДт = ТекСчет;
				НоваяСтрока.СчетКт = Сч84;
				НоваяСтрока.СубконтоКт1 = Неопределено;
				НоваяСтрока.СубконтоКт2 = Неопределено;
				НоваяСтрока.СубконтоКт3 = Неопределено;
				НоваяСтрока.СубконтоДт1 = Неопределено;
				НоваяСтрока.СубконтоДт2 = Неопределено;
				НоваяСтрока.СубконтоДт3 = Неопределено;
				НоваяСтрока.Сумма = ТекСтрока.Сумма;
				Если ТекСчет = ТекСтрока.СчетДт Тогда
					НоваяСтрока.Сумма = - НоваяСтрока.Сумма;
				КонецЕсли;
			КонецЕсли;
			
			Для каждого СтрокаРаботы Из ВыборкаБаза Цикл
				
				Сумма = Окр(СтрокаРаботы.Процент / 100 * ТекСтрока.Сумма, 2);
				СуммаНарастующая = СуммаНарастующая + Сумма;
				
				Если Сумма Тогда
					Если ВыборкаБаза.Индекс(СтрокаРаботы) = ВыборкаБаза.Количество() - 1 Тогда //округления копеек
						Сумма = Сумма + (СуммаЦелая - СуммаНарастующая);				
					КонецЕсли;
					
					Если ТекСчет = ТекСтрока.СчетДт ИЛИ ТекСчет = ТекСтрока.СчетКт Тогда
						НоваяСтрока = ВремТЧ.Добавить();			
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
						НоваяСтрока.СчетДт = Сч84;
						НоваяСтрока.СчетКт = Сч7502;
						НоваяСтрока.СубконтоКт1 = СтрокаРаботы.Учредитель;
						НоваяСтрока.СубконтоКт2 = Неопределено;
						НоваяСтрока.СубконтоКт3 = Неопределено;
						НоваяСтрока.СубконтоДт1 = Неопределено;
						НоваяСтрока.СубконтоДт2 = Неопределено;
						НоваяСтрока.СубконтоДт3 = Неопределено;
						НоваяСтрока.Сумма = Сумма;
						Если ТекСчет = ТекСтрока.СчетДт Тогда
							НоваяСтрока.Сумма = - НоваяСтрока.Сумма;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла; 
	КонецЦикла;
	
	ВремТЧ.Свернуть("СчетДт, СчетКт, СубконтоДт1, СубконтоДт2, СубконтоДт3, СубконтоКт1, СубконтоКт2, СубконтоКт3", "Сумма");
	
	
	//распределение прибыли
	Для каждого ТекСтрока Из ВремТЧ Цикл
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина),
		"Закрытие 99",
		ТекСтрока.СчетКт, // счетДт
		ТекСтрока.СубконтоКт1, //СубконтоДт1
		ТекСтрока.СубконтоКт2, //СубконтоДт2
		ТекСтрока.СубконтоКт3, //СубконтоДт3
		, //ПодразделениеДт
		0,
		, //ВалютаДт
		0, //ВалСуммаДт
		ТекСтрока.СчетДт,
		ТекСтрока.СубконтоДт1, //СубконтоКт1
		ТекСтрока.СубконтоДт2, //СубконтоКт2
		ТекСтрока.СубконтоДт3, //СубконтоКт3
		, //ПодразделениеКт
		0, //КоличествоКт
		, //ВалютаКт
		0, //ВалСуммаКт
		ТекСтрока.Сумма, //Сумма
		Ложь, //Приход = Истина
		, //ФинЦФО = Неопределено
		//ФинПодразделениеЦФО = Неопределено
		)	
		
	КонецЦикла;		

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РучнаяКорректировка = Ложь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение и РучнаяКорректировка Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры
