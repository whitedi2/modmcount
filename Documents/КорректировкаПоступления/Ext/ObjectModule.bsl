
&Перед("ПередЗаписью")
Процедура УУ_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения) 

	Если Модифицированность() Тогда
		Если ДополнительныеСвойства.Свойство("НеДобавлятьЗаписьВРегистрИзмененных") Тогда
			Если Не ДополнительныеСвойства.НеДобавлятьЗаписьВРегистрИзмененных Тогда
				сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
			КонецЕсли;
		Иначе
			сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура УУ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда 
		Если Не ЭтоНовый() Тогда 
			сабОперОбщегоНазначения.СинхронизацияНомераСтрокиОсновнойТЧССериямиБух(Товары,Ссылка.Товары,СерииНоменклатуры,ЭтотОбъект);
		КонецЕсли;
		сабОперОбщегоНазначения.ПерезаполнитьТЧСерииНоменклатурыПередЗаписью(Товары,СерииНоменклатуры,Истина);
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура УУ_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Источник = ДанныеЗаполнения;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Источник = ДанныеЗаполнения.Сделка;
	КонецЕсли;
	Если ТипЗнч(Источник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		Если Не ОбщегоНазначения.КоллекцииИдентичны(Товары, Источник.Товары,"НомерСтроки,ИдентификаторСтроки",,Истина) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "Выбрать * 
			|ПОМЕСТИТЬ ВТКорректировкаТовары
			|ИЗ
			|	&ТЗКорректировкаТовары КАК ТЗКорректировкаТоварыа
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////   
			|Выбрать 
			|ТЗДанныеЗаполненияТовары.НомерСтроки КАК НомерСтрокиДЗ, 
			|ТЗДанныеЗаполненияТовары.ИдентификаторСтроки КАК ИдентификаторСтрокиДЗ
			|ПОМЕСТИТЬ ВТДанныеЗаполненияТовары
			|ИЗ
			|	&ТЗДанныеЗаполненияТовары КАК ТЗДанныеЗаполненияТовары
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ *
			|ИЗ
			|	ВТКорректировкаТовары КАК ВТКорректировкаТовары
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеЗаполненияТовары КАК ВТДанныеЗаполненияТовары
			|	По ВТКорректировкаТовары.ИдентификаторСтроки = ВТДанныеЗаполненияТовары.ИдентификаторСтрокиДЗ
			|	УПОРЯДОЧИТЬ ПО НомерСтрокиДЗ";
			Запрос.УстановитьПараметр("ТЗКорректировкаТовары",Товары.Выгрузить());
			Запрос.УстановитьПараметр("ТЗДанныеЗаполненияТовары",Источник.Товары.Выгрузить(,"НомерСтроки,ИдентификаторСтроки"));
			РезультатЗапроса = Запрос.Выполнить();
			ТЗТоварыССортировкой = РезультатЗапроса.Выгрузить();
			ТЗТоварыССортировкой.Колонки.Удалить("НомерСтроки"); 
			ТЗТоварыССортировкой.Колонки.Удалить("НомерСтрокиДЗ");
			ТЗТоварыССортировкой.Колонки.Удалить("ИдентификаторСтрокиДЗ");
			Товары.Загрузить(ТЗТоварыССортировкой);
		КонецЕсли;
	КонецЕсли;
	Документы.КорректировкаПоступления.ЗаполнитьСерииИзДокументаОснования(Источник,Товары,СерииНоменклатуры);
	// Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
	//	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
	//		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КорректировкаПоступления")
	//		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	ДокументОснованиеТовары.НомерСтроки КАК НомерСтроки,
	//		|	ДокументОснованиеТовары.Номенклатура КАК Номенклатура,
	//		|	ДокументОснованиеТовары.СерияНоменклатуры КАК СерияНоменклатуры
	//		|ИЗ " + ДанныеЗаполнения.ПолноеИмя() + ".Товары КАК ДокументОснованиеТовары
	//		|ГДЕ
	//		|	ДокументОснованиеТовары.Ссылка = &Ссылка";
	//		
	//		Запрос.УстановитьПараметр("Ссылка",  ДанныеЗаполнения);
	//		
	//		РезультатЗапроса = Запрос.Выполнить();
	//		
	//		Выборка = РезультатЗапроса.Выбрать();
	//		
	//		Для Каждого СтрокаТЧТоваты Из Товары Цикл
	//			Выборка.Сбросить();
	//			СтрутураДляПоискаСтроки = Новый Структура("НомерСтроки, Номенклатура",СтрокаТЧТоваты.НомерСтроки,СтрокаТЧТоваты.Номенклатура);
	//			Если Выборка.НайтиСледующий(СтрутураДляПоискаСтроки) Тогда
	//				СтрокаТЧТоваты.СерияНоменклатуры = 	Выборка.СерияНоменклатуры;
	//			КонецЕсли;
	//		КонецЦикла;
	//		
	//		СерииНоменклатуры.Очистить();
	//		Для Каждого СтрокаТЧСерииНоменклатуры Из ДанныеЗаполнения.СерииНоменклатуры Цикл
	//			НоваяСтрокаТЧСерииНоменклатуры = СерииНоменклатуры.Добавить();
	//			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧСерииНоменклатуры,СтрокаТЧСерииНоменклатуры);
	//			НоваяСтрокаТЧСерииНоменклатуры.КоличествоДоИзменения = СтрокаТЧСерииНоменклатуры.Количество;
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;
	
	
	
	
	
	
	
	
	
	
	
КонецПроцедуры
