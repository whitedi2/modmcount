
&НаСервере
Процедура УУ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТЧСерии = Новый ТаблицаЗначений;
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеПредприятийВетис.Предприятие КАК Предприятие
			|ИЗ
			|	РегистрСведений.сабСоответствиеПредприятийВетис КАК сабСоответствиеПредприятийВетис
			|ГДЕ
			|	сабСоответствиеПредприятийВетис.ПодразделениеКонтрагента = &ПодразделениеКонтрагента";
			
			Запрос.УстановитьПараметр("ПодразделениеКонтрагента", Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Объект.ГрузополучательПредприятие = Выборка.Предприятие;			
			КонецЦикла;
			
			//связаные доки
			НоваяСтрока = Объект.СвязанныеДокументы.Добавить();
			НоваяСтрока.ТипДокумента = Перечисления.ТипыДокументовВЕТИС.УПД;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СчетФактураВыданный.Ссылка КАК Ссылка,
			|	СчетФактураВыданный.Дата КАК Дата,
			|	СчетФактураВыданный.Номер КАК Номер
			|ИЗ
			|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|ГДЕ
			|	СчетФактураВыданный.Проведен = ИСТИНА
			|	И СчетФактураВыданный.ДокументОснование = &ДокументОснование ";
			
			Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Если Выборка.Следующий() Тогда
				НоваяСтрока.Дата = Выборка.Дата;
				НоваяСтрока.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина);;
			Иначе	
				НоваяСтрока.Дата = Объект.ДокументОснование.Дата;
				НоваяСтрока.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.ДокументОснование.Номер, Истина, Истина);;
			КонецЕсли;
			
			ТЧРеализация = Объект.ДокументОснование.Товары.Выгрузить();
			ТЧСерии = Объект.ДокументОснование.СерииНоменклатуры.Выгрузить();
			Для каждого ТекСтрока Из ТЧСерии Цикл
				НайдСтроки = ТЧРеализация.НайтиСтроки(Новый Структура("Номенклатура, НомерСтроки", ТекСтрока.Номенклатура, ТекСтрока.НомерСтрокиРеализации));
				Для каждого ТекНайдСтрока Из НайдСтроки Цикл
					ТекСтрока.ИдентификаторСтрокиРеализации = ТекНайдСтрока.ИдентификаторСтроки;					
				КонецЦикла;
			КонецЦикла;
			
			Для каждого ТекСтрока Из Объект.Товары Цикл
				НайдСтроки = ТЧСерии.НайтиСтроки(Новый Структура("ИдентификаторСтрокиРеализации", ТекСтрока.ИдентификаторСтроки));
				Для каждого ТекНайдСтрока Из НайдСтроки Цикл
					ТекСтрока.ДатаПроизводстваНачалоПериода = ТекНайдСтрока.ДатаПроизводства;			
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		//партии
		Запрос = Новый Запрос;   		
		Запрос.Текст = "ВЫБРАТЬ
		|	РеализацияТоваровУслугСерииНоменклатуры.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугСерииНоменклатуры.СерияНоменклатуры КАК СерияНоменклатуры,
		|	РеализацияТоваровУслугСерииНоменклатуры.ДатаПроизводства КАК ДатаПроизводства,
		|	РеализацияТоваровУслугСерииНоменклатуры.Количество КАК КоличествоПоСерии
		|ПОМЕСТИТЬ ВТ_ПродукцияОснования
		|ИЗ
		|	Документ." + Объект.ДокументОснование.Метаданные().Имя + ".СерииНоменклатуры КАК РеализацияТоваровУслугСерииНоменклатуры
		|ГДЕ
		|	РеализацияТоваровУслугСерииНоменклатуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		|	ВТ_ПродукцияОснования.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ВТ_ПродукцияОснования.ДатаПроизводства КАК ДатаПроизводства,
		|	ВТ_ПродукцияОснования.КоличествоПоСерии КАК КоличествоПоСерии
		|ПОМЕСТИТЬ ВТ_ПродукцияОснованияПоСериям
		|ИЗ
		|	ВТ_ПродукцияОснования КАК ВТ_ПродукцияОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		|		ПО ВТ_ПродукцияОснования.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		|	ОстаткиПродукцииВЕТИС.Предприятие КАК Предприятие,
		|	ОстаткиПродукцииВЕТИС.Продукция КАК Продукция,
		|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ОстаткиПродукцииВЕТИС.КоличествоВЕТИС КАК КоличествоВЕТИС,
		|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства,
		|	ВТ_ПродукцияОснованияПоСериям.КоличествоПоСерии КАК КоличествоПоСерии
		|ИЗ
		|	ВТ_ПродукцияОснованияПоСериям КАК ВТ_ПродукцияОснованияПоСериям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
		|		ПО ВТ_ПродукцияОснованияПоСериям.Продукция = ОстаткиПродукцииВЕТИС.Продукция
		|			И ВТ_ПродукцияОснованияПоСериям.СерияНоменклатуры.ДатаПроизводства = ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		|АВТОУПОРЯДОЧИВАНИЕ";
				
		Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование); 
		//Запрос.УстановитьПараметр("ВТ_Товары", Объект.Товары.Выгрузить());
		//Запрос.УстановитьПараметр("ТекущаяДата", Объект.ДокументОснование.Дата);
		
		Результат = Запрос.Выполнить();  
		Выборка = Результат.Выгрузить();
		
		Цель = Справочники.ЦелиВЕТИС.НайтиПоНаименованию("реализация в пищу людям", Истина);
		Экспертиза = Перечисления.РезультатыЛабораторныхИсследованийВЕТИС.ИзготовленаИзСырьяПрошедшегоВСЭ;
		
		Для каждого ТекСтрока Из Объект.Товары Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока.ЗаписьСкладскогоЖурнала) Тогда
				Продолжить;			
			КонецЕсли;
			
			Коэф = 1;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	КоэффициентыЕдиницИзмеренияВЕТИС.КоэффициентЕдиницыВЕТИС КАК КоэффициентЕдиницыВЕТИС
			|ИЗ
			|	РегистрСведений.КоэффициентыЕдиницИзмеренияВЕТИС КАК КоэффициентыЕдиницИзмеренияВЕТИС
			|ГДЕ
			|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура = &Номенклатура
			|	И КоэффициентыЕдиницИзмеренияВЕТИС.Продукция = &Продукция
			|	И КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС = &ЕдиницаИзмеренияВЕТИС";
			
			Запрос.УстановитьПараметр("Номенклатура", ТекСтрока.Номенклатура);
			Запрос.УстановитьПараметр("Продукция", ТекСтрока.Продукция);
			Запрос.УстановитьПараметр("ЕдиницаИзмеренияВЕТИС", ТекСтрока.ЕдиницаИзмеренияВЕТИС);
			
			Результат = Запрос.Выполнить();
			Выборка1 = Результат.Выбрать();
			
			Пока Выборка1.Следующий() Цикл
				Коэф = Выборка1.КоэффициентЕдиницыВЕТИС;
			КонецЦикла;
			
			НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Продукция, ДатаПроизводства", ТекСтрока.Продукция, ТекСтрока.ДатаПроизводстваНачалоПериода));
			Если Не НайденныеСтроки.Количество() Тогда
				НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Продукция", ТекСтрока.Продукция));
			КонецЕсли;
			
			НужноКоличество = ТекСтрока.Количество * Коэф;
			
			Для каждого ТекНайденнаяСтрока Из НайденныеСтроки Цикл
				
				ТекКоличествоВЕТИС = Мин(ТекНайденнаяСтрока.КоличествоВЕТИС, ТекНайденнаяСтрока.КоличествоПоСерии);
				
				Если НужноКоличество > ТекКоличествоВЕТИС Тогда
					НужноКоличество = НужноКоличество - ТекКоличествоВЕТИС;
					ЗаполнитьЗначенияСвойств(ТекСтрока, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала);
					ТекСтрока.Количество = ТекКоличествоВЕТИС / Коэф;
					ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС;
					
					Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И (ТекСтрока.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
						
						Если НЕ Цел(ТекСтрока.Количество) = ТекСтрока.Количество Тогда
							ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС - (ТекСтрока.Количество - Цел(ТекСтрока.Количество)) * Коэф;
							НужноКоличество = НужноКоличество + (ТекСтрока.Количество - Цел(ТекСтрока.Количество)) * Коэф;
							ТекСтрока.Количество = Цел(ТекСтрока.Количество);
						КонецЕсли;
						
					КонецЕсли;      
					
					ТекСтрока.НадписьСрокГодности = Новый ФорматированнаяСтрока(Формат(ТекСтрока.СрокГодностиНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"СрокГодности");
					ТекСтрока.НадписьДатаПроизводства = Новый ФорматированнаяСтрока(Формат(ТекСтрока.ДатаПроизводстваНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"ДатаПроизводства");
					Произв = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.Производители.Выгрузить();
					Произв.Колонки.Добавить("НомераПредприятий");
					ТекСтрока.НадписьПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
					Произв,
					ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(НСтр("ru = '<не указаны>'")));
					ТекСтрока.ЗаписьСкладскогоЖурнала = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала;
					ТекСтрока.ЭкспертизаРезультат = Экспертиза;
					ТекСтрока.Цель = Цель;
					
					Если ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС.Количество() Тогда
						НоваяСтрокаУп = Объект.УпаковкиВЕТИС.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаУп, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС[0]);
						НоваяСтрокаУп.ИдентификаторСтрокиТовары = ТекСтрока.ИдентификаторСтроки;
						
						МассивСтрок = Новый Массив;
						МассивСтрок.Добавить(НоваяСтрокаУп);
						ТекстНадписи = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
						МассивСтрок,
						ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
						
						ТекСтрока.ПредставлениеУпаковкиШтрихкоды = Новый ФорматированнаяСтрока(ТекстНадписи, , , , "УпаковкиВЕТИС");
					КонецЕсли;
					
					НоваяСтрока = Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
					
					Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И (ТекСтрока.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
						НоваяСтрока.Количество = Окр(НужноКоличество / Коэф);
					Иначе
						НоваяСтрока.Количество = НужноКоличество / Коэф;
					КонецЕсли;
					
					НоваяСтрока.КоличествоВЕТИС = 0;
					НоваяСтрока.ЗаписьСкладскогоЖурнала = Неопределено;
					ТекСтрока.ЭкспертизаРезультат = Экспертиза;
					ТекСтрока.Цель = Цель;
					Выборка.Удалить(ТекНайденнаяСтрока);
				Иначе
					ЗаполнитьЗначенияСвойств(ТекСтрока, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала);
					ТекСтрока.КоличествоВЕТИС = НужноКоличество;
					НужноКоличество = 0;
					ТекСтрока.НадписьСрокГодности = Новый ФорматированнаяСтрока(Формат(ТекСтрока.СрокГодностиНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"СрокГодности");
					ТекСтрока.НадписьДатаПроизводства = Новый ФорматированнаяСтрока(Формат(ТекСтрока.ДатаПроизводстваНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"ДатаПроизводства");
					Произв = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.Производители.Выгрузить();
					Произв.Колонки.Добавить("НомераПредприятий");
					ТекСтрока.НадписьПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
					Произв,
					ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(НСтр("ru = '<не указаны>'")));
					ТекСтрока.ЗаписьСкладскогоЖурнала = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала;
					ТекСтрока.ЭкспертизаРезультат = Экспертиза;
					ТекСтрока.Цель = Цель;
					
					Если ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС.Количество() Тогда
						НоваяСтрокаУп = Объект.УпаковкиВЕТИС.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаУп, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС[0]);
						НоваяСтрокаУп.ИдентификаторСтрокиТовары = ТекСтрока.ИдентификаторСтроки;
						
						МассивСтрок = Новый Массив;
						МассивСтрок.Добавить(НоваяСтрокаУп);
						ТекстНадписи = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
						МассивСтрок,
						ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
						
						ТекСтрока.ПредставлениеУпаковкиШтрихкоды = Новый ФорматированнаяСтрока(ТекстНадписи, , , , "УпаковкиВЕТИС");
					КонецЕсли;
					
					Выборка.Удалить(ТекНайденнаяСтрока);
				КонецЕсли; 
				
				Прервать;
			КонецЦикла;
			
			ТекСтрока.ЭкспертизаРезультат = Экспертиза;
			ТекСтрока.Цель = Цель;
			
		КонецЦикла;
		
		//вкладка ТС
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка.ТранспортноеСредство КАК ТранспортноеСредство
		|ИЗ
		|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
		|ГДЕ
		|	сабМаршрутныйЛистТабличнаяЧасть.Реализация = &Реализация";
		
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Номер = Выборка.ТранспортноеСредство.РегистрационныйЗнак;
			Для каждого ТекСтрока Из Объект.Маршрут Цикл
				Если Не ЗначениеЗаполнено(ТекСтрока.ТранспортноеСредство) Тогда
					ТекСтрока.НомерТранспортногоСредства = Номер;
					ТекСтрока.ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.Автомобиль;
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;
		
		Объект.СпособХранения = Перечисления.СпособыХраненияПриТранспортировкеВЕТИС.Охлажденный;
		
		// вкладка Дополнительно
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СчетФактураВыданный.Номер КАК Номер,
		               |	СчетФактураВыданный.Дата КАК Дата
		               |ИЗ
		               |	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		               |ГДЕ
		               |	СчетФактураВыданный.ДокументОснование = &Реализация И СчетФактураВыданный.Проведен = Истина"; 
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда
			Объект.ТТНУказан = Истина;
			Объект.НомерТТН = Выборка.Номер;
			Объект.ДатаТТН = Выборка.Дата;
			Объект.ТипТТН = Перечисления.ТипыДокументовВЕТИС.ТТН;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, Элементы.Товары.ТекущаяСтрока)
	
	
КонецПроцедуры

&НаСервере
Процедура УУ_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
		
		НоваяЗаписьРегистра = РегистрыСведений.сабСоответствиеПредприятийВетис.СоздатьМенеджерЗаписи();
		НоваяЗаписьРегистра.ПодразделениеКонтрагента = Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента;
		НоваяЗаписьРегистра.Предприятие = Объект.ГрузополучательПредприятие;
		НоваяЗаписьРегистра.Записать();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
&Вместо("ТоварыЗаписьСкладскогоЖурналаНачалоВыбора")
Процедура УУ_ТоварыЗаписьСкладскогоЖурналаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыФормы.Вставить("Продукция", ТекущиеДанные.Продукция);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТекущиеДанные.ЗаписьСкладскогоЖурнала);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ХозяйствующийСубъект", Объект.ГрузоотправительХозяйствующийСубъект);
	СтруктураОтбора.Вставить("Предприятие", Объект.ГрузоотправительПредприятие);
	СтруктураОтбора.Вставить("Продукция", ТекущиеДанные.Продукция);
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормы.Вставить("ИсключитьПросроченные", Истина);
	
	ОткрытьФорму("РегистрСведений.ОстаткиПродукцииВЕТИС.ФормаСписка",
	ПараметрыФормы, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура УУ_ГрузополучательХозяйствующийСубъектПриИзмененииПосле(Элемент)
	
	ГрузополучательХСПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ГрузополучательХСПриИзмененииСервер()

	Если Не ЗначениеЗаполнено(Объект.ГрузополучательПредприятие) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеПредприятийВетис.Предприятие КАК Предприятие
			|ИЗ
			|	РегистрСведений.сабСоответствиеПредприятийВетис КАК сабСоответствиеПредприятийВетис
			|ГДЕ
			|	сабСоответствиеПредприятийВетис.ПодразделениеКонтрагента = &ПодразделениеКонтрагента";
			
			Запрос.УстановитьПараметр("ПодразделениеКонтрагента", Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл 
				
				Если ЗначениеЗаполнено(Объект.ГрузополучательХозяйствующийСубъект) И Объект.ГрузополучательХозяйствующийСубъект.Контрагент = Объект.ДокументОснование.Контрагент Тогда
					Объект.ГрузополучательПредприятие = Выборка.Предприятие;			
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&Вместо("ПерезаполнитьПоОснованиюНаСервере")
Процедура УУ_ПерезаполнитьПоОснованиюНаСервере(ОбработатьТабличнуюЧасть, ОбработатьШапку)
	
	Если ОбработатьТабличнуюЧасть Тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ДополнительныеСвойства.Вставить("НеЗаполнятьШапку");
		ДокументОбъект.Заполнить(ДокументОбъект.ДокументОснование);
		ЗначениеВДанныеФормы(ДокументОбъект,Объект);
		Для Каждого СтрокаТЧТекущийОбъект Из ДокументОбъект.Маршрут Цикл
			СтрокаТЧОбъект = Объект.Маршрут[ДокументОбъект.Маршрут.Индекс(СтрокаТЧТекущийОбъект)];
			СтрокаТЧОбъект.ДанныеАдресаСтруктура = СтрокаТЧТекущийОбъект.ДанныеАдреса.Получить();
		КонецЦикла;
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	Если ОбработатьШапку Тогда
		
		ЗаполнитьОтборыПоОснованию(Объект.ДокументОснование, ЭтотОбъект);	
				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		УстановитьПривилегированныйРежим(Истина);
		// вкладка Дополнительно
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СчетФактураВыданный.Номер КАК Номер,
		|	СчетФактураВыданный.Дата КАК Дата
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.ДокументОснование = &Реализация И СчетФактураВыданный.Проведен = Истина"; 
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда
			Объект.ТТНУказан = Истина;
			Объект.НомерТТН = Выборка.Номер;
			Объект.ДатаТТН = Выборка.Дата;
			Объект.ТипТТН = Перечисления.ТипыДокументовВЕТИС.ТТН;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры
