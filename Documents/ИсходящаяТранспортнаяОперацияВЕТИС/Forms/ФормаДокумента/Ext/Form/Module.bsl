
&НаСервере
Процедура УУ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//Возврат;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьПривилегированныйРежим(Истина);
		ЗаполнитьТоварыВЕТИС(Объект, Объект.ДокументОснование);
		ТЧСерии = Новый ТаблицаЗначений;
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеПредприятийВетис.Предприятие КАК Предприятие
			|ИЗ
			|	РегистрСведений.сабСоответствиеПредприятийВетис КАК сабСоответствиеПредприятийВетис
			|ГДЕ
			|	сабСоответствиеПредприятийВетис.ПодразделениеКонтрагента = &ПодразделениеКонтрагента";
			
			Запрос.УстановитьПараметр("ПодразделениеКонтрагента", Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Объект.ГрузополучательПредприятие = Выборка.Предприятие;			
			КонецЦикла;
			
			//связаные доки
			НоваяСтрока = Объект.СвязанныеДокументы.Добавить();
			НоваяСтрока.ТипДокумента = Перечисления.ТипыДокументовВЕТИС.УПД;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СчетФактураВыданный.Ссылка КАК Ссылка,
			|	СчетФактураВыданный.Дата КАК Дата,
			|	СчетФактураВыданный.Номер КАК Номер
			|ИЗ
			|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|ГДЕ
			|	СчетФактураВыданный.Проведен = ИСТИНА
			|	И СчетФактураВыданный.ДокументОснование = &ДокументОснование ";
			
			Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Если Выборка.Следующий() Тогда
				НоваяСтрока.Дата = Выборка.Дата;
				НоваяСтрока.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Истина, Истина);;
			Иначе	
				НоваяСтрока.Дата = Объект.ДокументОснование.Дата;
				НоваяСтрока.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.ДокументОснование.Номер, Истина, Истина);;
			КонецЕсли;
			
			ТЧРеализация = Объект.ДокументОснование.Товары.Выгрузить();
			ТЧСерии = Объект.ДокументОснование.СерииНоменклатуры.Выгрузить();  
			
		КонецЕсли;
		
		//Запрос = Новый Запрос;   		
		//Запрос.Текст = "ВЫБРАТЬ
		//|	РеализацияТоваровУслугСерииНоменклатуры.Номенклатура КАК Номенклатура,
		//|	РеализацияТоваровУслугСерииНоменклатуры.СерияНоменклатуры КАК СерияНоменклатуры,
		//|	РеализацияТоваровУслугСерииНоменклатуры.ДатаПроизводства КАК ДатаПроизводства,
		//|	РеализацияТоваровУслугСерииНоменклатуры.Количество КАК КоличествоПоСерии
		//|ПОМЕСТИТЬ ВТ_ПродукцияОснования
		//|ИЗ
		//|	Документ." + Объект.ДокументОснование.Метаданные().Имя + ".СерииНоменклатуры КАК РеализацияТоваровУслугСерииНоменклатуры
		//|ГДЕ
		//|	РеализацияТоваровУслугСерииНоменклатуры.Ссылка = &Ссылка
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		//|	ВТ_ПродукцияОснования.СерияНоменклатуры КАК СерияНоменклатуры,
		//|	ВТ_ПродукцияОснования.ДатаПроизводства КАК ДатаПроизводства,
		//|	ВТ_ПродукцияОснования.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_ПродукцияОснования.Номенклатура КАК Номенклатура
		//|ПОМЕСТИТЬ ВТ_ПродукцияОснованияПоСериям
		//|ИЗ
		//|	ВТ_ПродукцияОснования КАК ВТ_ПродукцияОснования
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		//|		ПО ВТ_ПродукцияОснования.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		//|	ОстаткиПродукцииВЕТИС.Предприятие КАК Предприятие,
		//|	ОстаткиПродукцииВЕТИС.Продукция КАК Продукция,
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		//|	ОстаткиПродукцииВЕТИС.КоличествоВЕТИС КАК КоличествоВЕТИС,
		//|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства,
		//|	ВТ_ПродукцияОснованияПоСериям.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_ПродукцияОснованияПоСериям.Номенклатура КАК Номенклатура
		//|ИЗ
		//|	ВТ_ПродукцияОснованияПоСериям КАК ВТ_ПродукцияОснованияПоСериям
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
		//|		ПО ВТ_ПродукцияОснованияПоСериям.Продукция = ОстаткиПродукцииВЕТИС.Продукция
		//|			И ВТ_ПродукцияОснованияПоСериям.СерияНоменклатуры.ДатаПроизводства = ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		//|АВТОУПОРЯДОЧИВАНИЕ";
		//		
		//Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование); 
		//партии 
		#Область ИсходныйЗапрос
		//Запрос = Новый Запрос;   		
		//Запрос.Текст = "ВЫБРАТЬ
		//|	РеализацияТоваровУслугСерииНоменклатуры.Номенклатура КАК Номенклатура,
		//|	РеализацияТоваровУслугСерииНоменклатуры.СерияНоменклатуры КАК СерияНоменклатуры,
		//|	РеализацияТоваровУслугСерииНоменклатуры.ДатаПроизводства КАК ДатаПроизводства,
		//|	РеализацияТоваровУслугСерииНоменклатуры.Количество КАК КоличествоПоСерии
		//|ПОМЕСТИТЬ ВТ_ПродукцияОснования
		//|ИЗ
		//|	Документ." + Объект.ДокументОснование.Метаданные().Имя + ".СерииНоменклатуры КАК РеализацияТоваровУслугСерииНоменклатуры
		//|ГДЕ
		//|	РеализацияТоваровУслугСерииНоменклатуры.Ссылка = &Ссылка
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		//|	ВТ_ПродукцияОснования.СерияНоменклатуры КАК СерияНоменклатуры,
		//|	ВТ_ПродукцияОснования.ДатаПроизводства КАК ДатаПроизводства,
		//|	ВТ_ПродукцияОснования.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_ПродукцияОснования.Номенклатура КАК Номенклатура
		//|ПОМЕСТИТЬ ВТ_ПродукцияОснованияПоСериям
		//|ИЗ
		//|	ВТ_ПродукцияОснования КАК ВТ_ПродукцияОснования
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		//|		ПО ВТ_ПродукцияОснования.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		//|	ОстаткиПродукцииВЕТИС.Предприятие КАК Предприятие,
		//|	ОстаткиПродукцииВЕТИС.Продукция КАК Продукция,
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		//|	ОстаткиПродукцииВЕТИС.КоличествоВЕТИС КАК КоличествоВЕТИС,
		//|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства,
		//|	ВТ_ПродукцияОснованияПоСериям.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_ПродукцияОснованияПоСериям.Номенклатура КАК Номенклатура
		//|ИЗ
		//|	ВТ_ПродукцияОснованияПоСериям КАК ВТ_ПродукцияОснованияПоСериям
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
		//|		ПО ВТ_ПродукцияОснованияПоСериям.Продукция = ОстаткиПродукцииВЕТИС.Продукция
		//|			И ВТ_ПродукцияОснованияПоСериям.СерияНоменклатуры.ДатаПроизводства = ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		//|АВТОУПОРЯДОЧИВАНИЕ";
		//
		//Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование); 
		////Запрос.УстановитьПараметр("ВТ_Товары", Объект.Товары.Выгрузить());
		////Запрос.УстановитьПараметр("ТекущаяДата", Объект.ДокументОснование.Дата);
		#КонецОбласти
		Запрос = Новый Запрос;   		
		//Запрос.Текст = "ВЫБРАТЬ
		//|	Товары.Серия КАК СерияНоменклатуры,
		//|	Товары.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства,
		//|	Товары.Количество КАК КоличествоПоСерии,
		//|	Товары.Номенклатура КАК Номенклатура,
		//|	Товары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		//|	Товары.НомерСтроки КАК НомерСтроки
		//|ПОМЕСТИТЬ ВТ_Товары
		//|ИЗ
		//|	&Товары КАК Товары
		//|;
		//|//////////////////////////////////////////////////////////////////////////////// 
		//|ВЫБРАТЬ
		//|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		//|	ВТ_Товары.СерияНоменклатуры КАК СерияНоменклатуры,
		//|	ВТ_Товары.ДатаПроизводства КАК ДатаПроизводства,
		//|	ВТ_Товары.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_Товары.Номенклатура КАК Номенклатура,
		//|	ВТ_Товары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		//|	ВТ_Товары.НомерСтроки КАК НомерСтроки
		//|ПОМЕСТИТЬ ВТ_ПродукцияОснованияПоСериям
		//|ИЗ
		//|	ВТ_Товары КАК ВТ_Товары
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		//|		ПО ВТ_Товары.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
		//|;
		//|////////////////////////////////////////////////////////////////////////////////
		//
		//|ВЫБРАТЬ
		//|	ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		//|	ОстаткиПродукцииВЕТИС.Предприятие КАК Предприятие,
		//|	ВТ_ПродукцияОснованияПоСериям.Продукция КАК Продукция,
		////	|	ОстаткиПродукцииВЕТИС.Продукция.ФасовкаКоличествоЕдиницВУпаковке КАК ФасовкаКоличествоЕдиницВУпаковке,
		//|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		//|	ЕСТЬNULL(ОстаткиПродукцииВЕТИС.КоличествоВЕТИС,0) КАК КоличествоВЕТИС,
		//|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИСВРегистреОстатков,
		//|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмеренияИзВетис,
		////|	ОстаткиПродукцииВЕТИС.Продукция.ФасовкаЕдиницаИзмерения КАК ФасовкаЕдиницаИзмеренияПродукции,
		//|	ВЫБОР Когда ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС <> Неопределено И 
		//|ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС <> Значение(Справочник.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка) Тогда
		//|ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС Иначе
		//|ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС Конец КАК ЕдиницаИзмеренияВЕТИС,
		////|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства, 
		//|	ВТ_ПродукцияОснованияПоСериям.ДатаПроизводства КАК ДатаПроизводства,
		//|	ВТ_ПродукцияОснованияПоСериям.КоличествоПоСерии КАК КоличествоПоСерии,
		//|	ВТ_ПродукцияОснованияПоСериям.Номенклатура КАК Номенклатура,
		////|	ВТ_ПродукцияОснованияПоСериям.ДатаПроизводства КАК ДатаПроизводстваСерияТЧ,
		//|	ВТ_ПродукцияОснованияПоСериям.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНоменклатуры,
		//|	ВТ_ПродукцияОснованияПоСериям.НомерСтроки КАК НомерСтроки
		//|ИЗ
		//|	ВТ_ПродукцияОснованияПоСериям КАК ВТ_ПродукцияОснованияПоСериям
		//|		Левое СОЕДИНЕНИЕ РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
		//|		ПО (ВТ_ПродукцияОснованияПоСериям.Продукция = ОстаткиПродукцииВЕТИС.Продукция)
		//|			И (ВТ_ПродукцияОснованияПоСериям.ДатаПроизводства = ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода)
		//|УПОРЯДОЧИТЬ ПО
		//|ОстаткиПродукцииВЕТИС.Продукция
		//|ИТОГИ ПО
		//|	НомерСтроки
		//|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.Текст = "ВЫБРАТЬ
		|	Товары.Серия КАК СерияНоменклатуры,
		|	Товары.ДатаПроизводстваНачалоПериода КАК ДатаПроизводства,
		|	Товары.Количество КАК КоличествоПоСерии,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		|	ВТ_Товары.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ВТ_Товары.ДатаПроизводства КАК ДатаПроизводства,
		|	ВТ_Товары.КоличествоПоСерии КАК КоличествоПоСерии,
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНоменклатуры,
		|	ВТ_Товары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ПродукцияОснованияПоСериям
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		|		ПО ВТ_Товары.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПродукцииВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		|	ОстаткиПродукцииВЕТИС.Предприятие КАК Предприятие,
		|	ВТ_ПродукцияОснованияПоСериям.Продукция КАК Продукция,
		|	ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ЕСТЬNULL(ОстаткиПродукцииВЕТИС.КоличествоВЕТИС, 0) КАК КоличествоВЕТИС,
		|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИСВРегистреОстатков,
		|	ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмеренияИзВетис,
		|	ВЫБОР
		|		КОГДА ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС <> НЕОПРЕДЕЛЕНО
		|				И ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка)
		|			ТОГДА ВТ_ПродукцияОснованияПоСериям.ЕдиницаИзмеренияВЕТИС
		|		ИНАЧЕ ОстаткиПродукцииВЕТИС.ЕдиницаИзмеренияВЕТИС
		|	КОНЕЦ КАК ЕдиницаИзмеренияВЕТИС,
		|	ВТ_ПродукцияОснованияПоСериям.ДатаПроизводства КАК ДатаПроизводства,
		|	ВТ_ПродукцияОснованияПоСериям.КоличествоПоСерии КАК КоличествоПоСерии,
		|	ВТ_ПродукцияОснованияПоСериям.Номенклатура КАК Номенклатура,
		|	ВТ_ПродукцияОснованияПоСериям.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	ВТ_ПродукцияОснованияПоСериям КАК ВТ_ПродукцияОснованияПоСериям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиПродукцииВЕТИС КАК ОстаткиПродукцииВЕТИС
		|		ПО ВТ_ПродукцияОснованияПоСериям.Продукция = ОстаткиПродукцииВЕТИС.Продукция
		|			И ВТ_ПродукцияОснованияПоСериям.ДатаПроизводства = ОстаткиПродукцииВЕТИС.ЗаписьСкладскогоЖурнала.ДатаПроизводстваНачалоПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.СерияНоменклатуры КАК СерияНоменклатуры,
		|	ВТ_Товары.ДатаПроизводства КАК ДатаПроизводства,
		|	ВТ_Товары.КоличествоПоСерии КАК КоличествоПоСерии,
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНоменклатуры,
		|	ВТ_Товары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
		|	ВТОстатки.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
		|	ВТОстатки.Предприятие КАК Предприятие,
		|	ВТОстатки.Продукция КАК Продукция,
		|	ВТОстатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ЕСТЬNULL(ВТОстатки.КоличествоВЕТИС, 0) КАК КоличествоВЕТИС,
		|	ВТОстатки.ЕдиницаИзмеренияВЕТИСВРегистреОстатков КАК ЕдиницаИзмеренияВЕТИСВРегистреОстатков,
		|	ВТОстатки.БазоваяЕдиницаИзмеренияИзВетис КАК БазоваяЕдиницаИзмеренияИзВетис,
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки1
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатки КАК ВТОстатки
		|		ПО (ВТ_Товары.НомерСтроки = ВТОстатки.НомерСтроки)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	КоличествоВЕТИС
		|ИТОГИ
		|	МИНИМУМ(ДатаПроизводства),
		|	СУММА(КоличествоВЕТИС)
		|ПО
		|	НомерСтроки";
		Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование); 
		Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить()); 
		//Запрос.УстановитьПараметр("Предприятие", Объект.ГрузоотправительПредприятие); 
		Результат = Запрос.Выполнить();  
		//Результат = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		ВыбокаНомерСтроки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Цель = Справочники.ЦелиВЕТИС.НайтиПоНаименованию("реализация в пищу людям", Истина);
		Экспертиза = Перечисления.РезультатыЛабораторныхИсследованийВЕТИС.ИзготовленаИзСырьяПрошедшегоВСЭ; 
		
		Пока ВыбокаНомерСтроки.Следующий() Цикл
			ТекСтрока = Объект.Товары[ВыбокаНомерСтроки.НомерСтроки-1];
			Если ЗначениеЗаполнено(ТекСтрока.ЗаписьСкладскогоЖурнала) Тогда
				Продолжить;			
			КонецЕсли;
			Если ВыбокаНомерСтроки.КоличествоВЕТИС <= 0 Тогда
				ПродукцияДляЗаполнения = ПодобратьСопоставленнуюПродукцию(ТекСтрока.Номенклатура);
				Если ПродукцияДляЗаполнения <> Неопределено Тогда
					ТекСтрока.Продукция = ПродукцияДляЗаполнения;
				КонецЕсли;
				//ТекСтрока.СопоставлениеТекст = "Нет остатков сопоставленной продукции для указанной серии"; 
				ТекСтрока.ДатаПроизводстваСтрока = Строка(Формат(ВыбокаНомерСтроки.ДатаПроизводства,"ДФ=dd.MM.yyyy"));
				ТекСтрока.НадписьДатаПроизводства = Формат(ВыбокаНомерСтроки.ДатаПроизводства,"ДФ=dd.MM.yyyy");
				ТекСтрока.ЭкспертизаРезультат = Экспертиза;
				ТекСтрока.Цель = Цель;
				Продолжить;
			КонецЕсли;
			ВыборкаДетальныеЗаписи = ВыбокаНомерСтроки.Выбрать();
			ОсталосьСписать = ТекСтрока.Количество;
			КоличествоПоСтроке = ТекСтрока.Количество;
			СтрокаДляДобавленияИзлишка = Неопределено;
			КоличествоСписано = 0;
			ДобавляемСтроку = Ложь;
			Пока ВыборкаДетальныеЗаписи.Следующий() И ОсталосьСписать > 0 Цикл 
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Продукция) Тогда
					ПродукцияДляЗаполнения = ПодобратьСопоставленнуюПродукцию(ВыборкаДетальныеЗаписи.Номенклатура);
					Если ПродукцияДляЗаполнения <> Неопределено Тогда
						ТекСтрока.Продукция = ПродукцияДляЗаполнения;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				//Если ВыборкаДетальныеЗаписи.КоличествоВЕТИС <= 0 Тогда 
				//	Продолжить;
				//КонецЕсли;
				Если ВыборкаДетальныеЗаписи.БазоваяЕдиницаИзмеренияИзВетис = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияНоменклатуры Тогда
					Коэф = 1;
				Иначе
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	Максимум(КоэффициентыЕдиницИзмеренияВЕТИС.КоэффициентЕдиницыВЕТИС) КАК КоэффициентЕдиницыВЕТИС,
					|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура КАК Номенклатура,
					|	КоэффициентыЕдиницИзмеренияВЕТИС.Продукция КАК Продукция,
					|	КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС
					|ИЗ
					|	РегистрСведений.КоэффициентыЕдиницИзмеренияВЕТИС КАК КоэффициентыЕдиницИзмеренияВЕТИС
					|ГДЕ
					|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура = &Номенклатура
					|	И КоэффициентыЕдиницИзмеренияВЕТИС.Продукция = &Продукция
					|	И КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС = &ЕдиницаИзмеренияВЕТИС
					|
					|СГРУППИРОВАТЬ ПО
					|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура,
					|	КоэффициентыЕдиницИзмеренияВЕТИС.Продукция,
					|	КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС";
					
					Запрос.УстановитьПараметр("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
					Запрос.УстановитьПараметр("Продукция", ВыборкаДетальныеЗаписи.Продукция);
					Запрос.УстановитьПараметр("ЕдиницаИзмеренияВЕТИС", ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияВЕТИС);
					
					Результат = Запрос.Выполнить();
					Если Результат.Пустой() Тогда
						Запрос.Текст = "ВЫБРАТЬ
						|	Максимум(КоэффициентыЕдиницИзмеренияВЕТИС.КоэффициентЕдиницыВЕТИС) КАК КоэффициентЕдиницыВЕТИС,
						|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура КАК Номенклатура,
						|	КоэффициентыЕдиницИзмеренияВЕТИС.Продукция КАК Продукция,
						|	КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС
						|ИЗ
						|	РегистрСведений.КоэффициентыЕдиницИзмеренияВЕТИС КАК КоэффициентыЕдиницИзмеренияВЕТИС
						|ГДЕ
						|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура = &Номенклатура
						|	И КоэффициентыЕдиницИзмеренияВЕТИС.Продукция = &Продукция
						|
						|СГРУППИРОВАТЬ ПО
						|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура,
						|	КоэффициентыЕдиницИзмеренияВЕТИС.Продукция,
						|	КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС";
						Запрос.УстановитьПараметр("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
						Запрос.УстановитьПараметр("Продукция", ВыборкаДетальныеЗаписи.Продукция);
						Результат = Запрос.Выполнить();
					КонецЕсли;
					Если Результат.Пустой() Тогда
						Коэф = 1;
					Иначе
						Выборка1 = Результат.Выбрать();
						Выборка1.Следующий();
						Коэф = ?(Выборка1.КоэффициентЕдиницыВЕТИС = 0, 1,Выборка1.КоэффициентЕдиницыВЕТИС); 
					КонецЕсли;
				КонецЕсли;
				ОсталосьСписатьВетис = ОсталосьСписать * Коэф;
				
				
				ТекКоличествоВЕТИС = Мин(ВыборкаДетальныеЗаписи.КоличествоВЕТИС, ОсталосьСписатьВетис); 
				
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура) И (ВыборкаДетальныеЗаписи.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
					КоличествоДляПроверки = ТекКоличествоВЕТИС / Коэф;
					Если КоличествоДляПроверки < 1 Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если ДобавляемСтроку Тогда 
					НоваяСтрокаТЧ = Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,ТекСтрока,,"НомерСтроки");
					НоваяСтрокаТЧ.ИдентификаторСтроки = Новый УникальныйИдентификатор;
					ТекСтрока = НоваяСтрокаТЧ;
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ТекСтрока, ВыборкаДетальныеЗаписи.ЗаписьСкладскогоЖурнала);
				НужноКоличество = ОсталосьСписать * Коэф;
				ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС;
				ТекСтрока.Количество = ТекКоличествоВЕТИС / Коэф;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура) И (ВыборкаДетальныеЗаписи.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
					Если НЕ Цел(ТекСтрока.Количество) = ТекСтрока.Количество Тогда
						ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС - (ТекСтрока.Количество - Цел(ТекСтрока.Количество)) * Коэф;
						ТекСтрока.Количество = Цел(ТекСтрока.Количество);
					КонецЕсли;
				КонецЕсли;
				
				Если ТекСтрока.КоличествоВЕТИС <> ТекСтрока.Количество Тогда
					СтрокаДляДобавленияИзлишка = ТекСтрока;
				КонецЕсли;
				ТекСтрока.НадписьСрокГодности = Новый ФорматированнаяСтрока(Формат(ТекСтрока.СрокГодностиНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"СрокГодности");
				ТекСтрока.НадписьДатаПроизводства = Новый ФорматированнаяСтрока(Формат(ТекСтрока.ДатаПроизводстваНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"ДатаПроизводства");
				Произв = ВыборкаДетальныеЗаписи.ЗаписьСкладскогоЖурнала.Производители.Выгрузить();
				Произв.Колонки.Добавить("НомераПредприятий");
				ТекСтрока.НадписьПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
				Произв,
				ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(НСтр("ru = '<не указаны>'")));
				ТекСтрока.ЗаписьСкладскогоЖурнала = ВыборкаДетальныеЗаписи.ЗаписьСкладскогоЖурнала;
				ТекСтрока.ЭкспертизаРезультат = Экспертиза;
				ТекСтрока.Цель = Цель;
				
				Если ВыборкаДетальныеЗаписи.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС.Количество() Тогда
					НоваяСтрокаУп = Объект.УпаковкиВЕТИС.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаУп, ВыборкаДетальныеЗаписи.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС[0]);
					НоваяСтрокаУп.ИдентификаторСтрокиТовары = ТекСтрока.ИдентификаторСтроки;
					
					МассивСтрок = Новый Массив;
					МассивСтрок.Добавить(НоваяСтрокаУп);
					ТекстНадписи = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
					МассивСтрок,
					ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
					
					ТекСтрока.ПредставлениеУпаковкиШтрихкоды = Новый ФорматированнаяСтрока(ТекстНадписи, , , , "УпаковкиВЕТИС");
				КонецЕсли;
				ОсталосьСписать = ОсталосьСписать - ТекСтрока.Количество; 
				КоличествоСписано = КоличествоСписано + ТекСтрока.Количество; 
				ДобавляемСтроку = Истина;
			КонецЦикла;
			Если ОсталосьСписать = 0 Тогда
				Если СтрокаДляДобавленияИзлишка <> Неопределено И КоличествоПоСтроке <> КоличествоСписано Тогда
					СтрокаДляДобавленияИзлишка.Количество = СтрокаДляДобавленияИзлишка.Количество + (КоличествоПоСтроке - КоличествоСписано);
				КонецЕсли;
			КонецЕсли; 
			Если ОсталосьСписать > 0 Тогда
			НоваяСтрокаТЧ = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,ТекСтрока,,"НомерСтроки,ЕдиницаИзмеренияВЕТИС,ЗаписьСкладскогоЖурнала,ИдентификаторСтроки,СрокГодностиНачалоПериода,НадписьСрокГодности,НадписьПроизводители,НадписьДатаПроизводства");
			НоваяСтрокаТЧ.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			НоваяСтрокаТЧ.Количество = ОсталосьСписать;
			НоваяСтрокаТЧ.КоличествоВЕТИС = 0; 
			НоваяСтрокаТЧ.НадписьДатаПроизводства = Формат(ВыбокаНомерСтроки.ДатаПроизводства,"ДФ=dd.MM.yyyy");
			ОсталосьСписать = 0;
			//НоваяСтрокаТЧ.СопоставлениеТекст = "Нет остатков сопоставленной продукции для указанной серии";
		КонецЕсли;

		КонецЦикла;
		//Если ОсталосьСписать > 0 Тогда
		//	НоваяСтрокаТЧ = Объект.Товары.Добавить();
		//	ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,ТекСтрока,,"НомерСтроки,ЕдиницаИзмеренияВЕТИС,ЗаписьСкладскогоЖурнала,ИдентификаторСтроки,Продукция,СрокГодностиНачалоПериода,НадписьСрокГодности");
		//	НоваяСтрокаТЧ.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		//	НоваяСтрокаТЧ.Количество = ОсталосьСписать;
		//	НоваяСтрокаТЧ.КоличествоВЕТИС = 0; 
		//	НоваяСтрокаТЧ.СопоставлениеТекст = "Нет остатков сопоставленной продукции для указанной серии";
		//КонецЕсли;
		
		Объект.Товары.Сортировать("Номенклатура, ДатаПроизводстваНачалоПериода");
		#Область ИсходныйКод
		//Для каждого ТекСтрока Из Объект.Товары Цикл
		//	
		//	Если ЗначениеЗаполнено(ТекСтрока.ЗаписьСкладскогоЖурнала) Тогда
		//		Продолжить;			
		//	КонецЕсли;
		//	
		//	Коэф = 1;
		//	
		//	Запрос = Новый Запрос;
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	КоэффициентыЕдиницИзмеренияВЕТИС.КоэффициентЕдиницыВЕТИС КАК КоэффициентЕдиницыВЕТИС
		//	|ИЗ
		//	|	РегистрСведений.КоэффициентыЕдиницИзмеренияВЕТИС КАК КоэффициентыЕдиницИзмеренияВЕТИС
		//	|ГДЕ
		//	|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура = &Номенклатура
		//	|	И КоэффициентыЕдиницИзмеренияВЕТИС.Продукция = &Продукция
		//	|	И КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС = &ЕдиницаИзмеренияВЕТИС";
		//	
		//	Запрос.УстановитьПараметр("Номенклатура", ТекСтрока.Номенклатура);
		//	Запрос.УстановитьПараметр("Продукция", ТекСтрока.Продукция);
		//	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВЕТИС", ТекСтрока.ЕдиницаИзмеренияВЕТИС);
		//	
		//	Результат = Запрос.Выполнить();
		//	Выборка1 = Результат.Выбрать();
		//	
		//	Пока Выборка1.Следующий() Цикл
		//		Коэф = Выборка1.КоэффициентЕдиницыВЕТИС;
		//	КонецЦикла;
		//	
		//	НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Продукция, ДатаПроизводства", ТекСтрока.Продукция, ТекСтрока.ДатаПроизводстваНачалоПериода));
		//	
		//	Если Не НайденныеСтроки.Количество() Тогда
		//		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Продукция", ТекСтрока.Продукция));
		//	КонецЕсли;  
		//	
		//	Если Не НайденныеСтроки.Количество() И Не ЗначениеЗаполнено(ТекСтрока.Продукция) Тогда
		//		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
		//	КонецЕсли;
		//	
		//	НужноКоличество = ТекСтрока.Количество * Коэф;
		//	
		//	Для каждого ТекНайденнаяСтрока Из НайденныеСтроки Цикл
		//		
		//		ТекКоличествоВЕТИС = Мин(ТекНайденнаяСтрока.КоличествоВЕТИС, ТекНайденнаяСтрока.КоличествоПоСерии * Коэф);
		//		
		//		Если Не ЗначениеЗаполнено(ТекСтрока.Продукция) Тогда
		//			ТекСтрока.Продукция = ТекНайденнаяСтрока.Продукция;
		//		КонецЕсли;
		//		
		//		Если НужноКоличество > ТекКоличествоВЕТИС Тогда
		//			НужноКоличество = НужноКоличество - ТекКоличествоВЕТИС;
		//			ЗаполнитьЗначенияСвойств(ТекСтрока, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала);
		//			ТекСтрока.Количество = ТекКоличествоВЕТИС / Коэф;
		//			ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС;
		//			
		//			Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И (ТекСтрока.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
		//				
		//				Если НЕ Цел(ТекСтрока.Количество) = ТекСтрока.Количество Тогда
		//					ТекСтрока.КоличествоВЕТИС = ТекКоличествоВЕТИС - (ТекСтрока.Количество - Цел(ТекСтрока.Количество)) * Коэф;
		//					НужноКоличество = НужноКоличество + (ТекСтрока.Количество - Цел(ТекСтрока.Количество)) * Коэф;
		//					ТекСтрока.Количество = Цел(ТекСтрока.Количество);
		//				КонецЕсли;
		//				
		//			КонецЕсли;      
		//			
		//			ТекСтрока.НадписьСрокГодности = Новый ФорматированнаяСтрока(Формат(ТекСтрока.СрокГодностиНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"СрокГодности");
		//			ТекСтрока.НадписьДатаПроизводства = Новый ФорматированнаяСтрока(Формат(ТекСтрока.ДатаПроизводстваНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"ДатаПроизводства");
		//			Произв = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.Производители.Выгрузить();
		//			Произв.Колонки.Добавить("НомераПредприятий");
		//			ТекСтрока.НадписьПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
		//			Произв,
		//			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(НСтр("ru = '<не указаны>'")));
		//			ТекСтрока.ЗаписьСкладскогоЖурнала = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала;
		//			ТекСтрока.ЭкспертизаРезультат = Экспертиза;
		//			ТекСтрока.Цель = Цель;
		//			
		//			Если ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС.Количество() Тогда
		//				НоваяСтрокаУп = Объект.УпаковкиВЕТИС.Добавить();
		//				ЗаполнитьЗначенияСвойств(НоваяСтрокаУп, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС[0]);
		//				НоваяСтрокаУп.ИдентификаторСтрокиТовары = ТекСтрока.ИдентификаторСтроки;
		//				
		//				МассивСтрок = Новый Массив;
		//				МассивСтрок.Добавить(НоваяСтрокаУп);
		//				ТекстНадписи = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
		//				МассивСтрок,
		//				ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
		//				
		//				ТекСтрока.ПредставлениеУпаковкиШтрихкоды = Новый ФорматированнаяСтрока(ТекстНадписи, , , , "УпаковкиВЕТИС");
		//			КонецЕсли;
		//			
		//			НоваяСтрока = Объект.Товары.Добавить();
		//			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		//			НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		//			
		//			Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И (ТекСтрока.Номенклатура.ЕдиницаИзмерения.Код = "796" ИЛИ ТекСтрока.ЕдиницаИзмерения = "шт") Тогда //если шт
		//				НоваяСтрока.Количество = Окр(НужноКоличество / Коэф);
		//			Иначе
		//				НоваяСтрока.Количество = НужноКоличество / Коэф;
		//			КонецЕсли;
		//			
		//			НоваяСтрока.КоличествоВЕТИС = 0;
		//			НоваяСтрока.ЗаписьСкладскогоЖурнала = Неопределено;
		//			ТекСтрока.ЭкспертизаРезультат = Экспертиза;
		//			ТекСтрока.Цель = Цель;
		//			Выборка.Удалить(ТекНайденнаяСтрока);
		//		Иначе
		//			ЗаполнитьЗначенияСвойств(ТекСтрока, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала);
		//			ТекСтрока.КоличествоВЕТИС = НужноКоличество;
		//			НужноКоличество = 0;
		//			ТекСтрока.НадписьСрокГодности = Новый ФорматированнаяСтрока(Формат(ТекСтрока.СрокГодностиНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"СрокГодности");
		//			ТекСтрока.НадписьДатаПроизводства = Новый ФорматированнаяСтрока(Формат(ТекСтрока.ДатаПроизводстваНачалоПериода, "ДФ=dd.MM.yyyy"),,ЦветаСтиля.ЦветГиперссылкиГосИС,,"ДатаПроизводства");
		//			Произв = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.Производители.Выгрузить();
		//			Произв.Колонки.Добавить("НомераПредприятий");
		//			ТекСтрока.НадписьПроизводители = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
		//			Произв,
		//			ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиПроизводителей(НСтр("ru = '<не указаны>'")));
		//			ТекСтрока.ЗаписьСкладскогоЖурнала = ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала;
		//			ТекСтрока.ЭкспертизаРезультат = Экспертиза;
		//			ТекСтрока.Цель = Цель;
		//			
		//			Если ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС.Количество() Тогда
		//				НоваяСтрокаУп = Объект.УпаковкиВЕТИС.Добавить();
		//				ЗаполнитьЗначенияСвойств(НоваяСтрокаУп, ТекНайденнаяСтрока.ЗаписьСкладскогоЖурнала.УпаковкиВЕТИС[0]);
		//				НоваяСтрокаУп.ИдентификаторСтрокиТовары = ТекСтрока.ИдентификаторСтроки;
		//				
		//				МассивСтрок = Новый Массив;
		//				МассивСтрок.Добавить(НоваяСтрокаУп);
		//				ТекстНадписи = ИнтеграцияВЕТИСКлиентСервер.СформироватьНадписьПоДаннымТабличнойЧасти(
		//				МассивСтрок,
		//				ИнтеграцияВЕТИСКлиентСервер.ПараметрыПредставленияТабличнойЧастиУпаковок(2));
		//				
		//				ТекСтрока.ПредставлениеУпаковкиШтрихкоды = Новый ФорматированнаяСтрока(ТекстНадписи, , , , "УпаковкиВЕТИС");
		//			КонецЕсли;
		//			
		//			Выборка.Удалить(ТекНайденнаяСтрока);
		//		КонецЕсли; 
		//		
		//		Прервать;
		//	КонецЦикла;
		//	
		//	ТекСтрока.ЭкспертизаРезультат = Экспертиза;
		//	ТекСтрока.Цель = Цель;
		//	
		//КонецЦикла;
		#КонецОбласти
		//вкладка ТС
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сабМаршрутныйЛистТабличнаяЧасть.Ссылка.ТранспортноеСредство КАК ТранспортноеСредство
		|ИЗ
		|	Документ.сабМаршрутныйЛист.ТабличнаяЧасть КАК сабМаршрутныйЛистТабличнаяЧасть
		|ГДЕ
		|	сабМаршрутныйЛистТабличнаяЧасть.Реализация = &Реализация";
		
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Номер = Выборка.ТранспортноеСредство.РегистрационныйЗнак;
			Для каждого ТекСтрока Из Объект.Маршрут Цикл
				Если Не ЗначениеЗаполнено(ТекСтрока.ТранспортноеСредство) Тогда
					ТекСтрока.НомерТранспортногоСредства = Номер;
					ТекСтрока.ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.Автомобиль;
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;
		
		Объект.СпособХранения = Перечисления.СпособыХраненияПриТранспортировкеВЕТИС.Охлажденный;
		
		// вкладка Дополнительно
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СчетФактураВыданный.Номер КАК Номер,
		|	СчетФактураВыданный.Дата КАК Дата
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.ДокументОснование = &Реализация И СчетФактураВыданный.Проведен = Истина"; 
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда
			Объект.ТТНУказан = Истина;
			Объект.НомерТТН = Выборка.Номер;
			Объект.ДатаТТН = Выборка.Дата;
			Объект.ТипТТН = Перечисления.ТипыДокументовВЕТИС.ТТН;
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, Элементы.Товары.ТекущаяСтрока)
	
	
КонецПроцедуры

&НаСервере
Процедура УУ_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
		
		НоваяЗаписьРегистра = РегистрыСведений.сабСоответствиеПредприятийВетис.СоздатьМенеджерЗаписи();
		НоваяЗаписьРегистра.ПодразделениеКонтрагента = Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента;
		НоваяЗаписьРегистра.Предприятие = Объект.ГрузополучательПредприятие;
		НоваяЗаписьРегистра.Записать();
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
&Вместо("ТоварыЗаписьСкладскогоЖурналаНачалоВыбора")
Процедура УУ_ТоварыЗаписьСкладскогоЖурналаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыФормы.Вставить("Продукция", ТекущиеДанные.Продукция);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ТекущиеДанные.ЗаписьСкладскогоЖурнала);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ХозяйствующийСубъект", Объект.ГрузоотправительХозяйствующийСубъект);
	СтруктураОтбора.Вставить("Предприятие", Объект.ГрузоотправительПредприятие);
	СтруктураОтбора.Вставить("Продукция", ТекущиеДанные.Продукция);
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормы.Вставить("ИсключитьПросроченные", Истина);
	
	ОткрытьФорму("РегистрСведений.ОстаткиПродукцииВЕТИС.ФормаСписка",
	ПараметрыФормы, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УУ_ГрузополучательХозяйствующийСубъектПриИзмененииПосле(Элемент)
	
	ГрузополучательХСПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ГрузополучательХСПриИзмененииСервер()
	
	Если Не ЗначениеЗаполнено(Объект.ГрузополучательПредприятие) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ) И ЗначениеЗаполнено(Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	сабСоответствиеПредприятийВетис.Предприятие КАК Предприятие
			|ИЗ
			|	РегистрСведений.сабСоответствиеПредприятийВетис КАК сабСоответствиеПредприятийВетис
			|ГДЕ
			|	сабСоответствиеПредприятийВетис.ПодразделениеКонтрагента = &ПодразделениеКонтрагента";
			
			Запрос.УстановитьПараметр("ПодразделениеКонтрагента", Объект.ДокументОснование.Заказ.ПодразделениеКонтрагента);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл 
				
				Если ЗначениеЗаполнено(Объект.ГрузополучательХозяйствующийСубъект) И Объект.ГрузополучательХозяйствующийСубъект.Контрагент = Объект.ДокументОснование.Контрагент Тогда
					Объект.ГрузополучательПредприятие = Выборка.Предприятие;			
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&Вместо("ПерезаполнитьПоОснованиюНаСервере")
Процедура УУ_ПерезаполнитьПоОснованиюНаСервере(ОбработатьТабличнуюЧасть, ОбработатьШапку)
	
	Если ОбработатьТабличнуюЧасть Тогда
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ДополнительныеСвойства.Вставить("НеЗаполнятьШапку");
		ДокументОбъект.Заполнить(ДокументОбъект.ДокументОснование);
		ЗначениеВДанныеФормы(ДокументОбъект,Объект);
		Для Каждого СтрокаТЧТекущийОбъект Из ДокументОбъект.Маршрут Цикл
			СтрокаТЧОбъект = Объект.Маршрут[ДокументОбъект.Маршрут.Индекс(СтрокаТЧТекущийОбъект)];
			СтрокаТЧОбъект.ДанныеАдресаСтруктура = СтрокаТЧТекущийОбъект.ДанныеАдреса.Получить();
		КонецЦикла;
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	Если ОбработатьШапку Тогда
		
		ЗаполнитьОтборыПоОснованию(Объект.ДокументОснование, ЭтотОбъект);	
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		УстановитьПривилегированныйРежим(Истина);
		// вкладка Дополнительно
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СчетФактураВыданный.Номер КАК Номер,
		|	СчетФактураВыданный.Дата КАК Дата
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.ДокументОснование = &Реализация И СчетФактураВыданный.Проведен = Истина"; 
		Запрос.УстановитьПараметр("Реализация", Объект.ДокументОснование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда
			Объект.ТТНУказан = Истина;
			Объект.НомерТТН = Выборка.Номер;
			Объект.ДатаТТН = Выборка.Дата;
			Объект.ТипТТН = Перечисления.ТипыДокументовВЕТИС.ТТН;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыВЕТИС(ДокументОбъект, ДанныеЗаполнения)
	
	//ДокументОбъект.Товары.Очистить();
	//Реквизиты основания
	МетаданныеОснования  = ДанныеЗаполнения.Метаданные();
	ИмяОснования         = МетаданныеОснования.Имя;
	
	МетаданныеДокумента  = ДокументОбъект.Ссылка.Метаданные();
	ИмяДокумента         = МетаданныеДокумента.Имя;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустаяСерия"      , "");
	
	БлагополучиеМестности = ЗаполнениеОбъектовПоСтатистикеВЕТИС.БлагополучиеМестностиПоПредприятию(ДокументОбъект.ГрузоотправительПредприятие);
	Запрос.УстановитьПараметр("БлагополучиеМестности", БлагополучиеМестности[0]);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО (СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовВЕТИС.Статус В (&КонечныеСтатусы)
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ТЧСерии.Количество, ТЧТовары.Количество)) КАК Количество,
	|	ЕСТЬNULL(ТЧСерии.СерияНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводстваНачалоПериода
	|ПОМЕСТИТЬ ВТТоварыССериями
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТЧТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.СерииНоменклатуры КАК ТЧСерии
	|		ПО ТЧТовары.Номенклатура = ТЧСерии.Номенклатура
	|			И ТЧТовары.НомерСтроки = ТЧСерии.НомерСтрокиРеализации
	|			И ТЧТовары.Ссылка = ТЧСерии.Ссылка
	|ГДЕ
	|	ТЧТовары.Ссылка = &ДокументОснование
	
	|СГРУППИРОВАТЬ ПО
	|	ТЧТовары.Номенклатура,
	|	ЕСТЬNULL(ТЧСерии.СерияНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1))
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварыССериями.Номенклатура КАК Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	ВТТоварыССериями.ДатаПроизводстваНачалоПериода КАК ДатаПроизводстваНачалоПериода,
	|	ВТТоварыССериями.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ВТТоварыССериями КАК ВТТоварыССериями
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТТоварыССериями.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|;
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.ДатаПроизводстваНачалоПериода КАК ДатаПроизводстваНачалоПериода,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Товары КАК Товары
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	ОформленныеТовары.ДатаПроизводстваНачалоПериода,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|	;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	ТоварыКОформлению.ДатаПроизводстваНачалоПериода КАК ДатаПроизводстваНачалоПериода,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.ДатаПроизводстваНачалоПериода
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	//|;
	//
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	//|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.ЗаписьСкладскогоЖурнала, СоответствиеНоменклатурыВЕТИС2.ЗаписьСкладскогоЖурнала)) КАК ЗаписьСкладскогоЖурнала,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК ПродукцияКоличествоРазличные,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.ЗаписьСкладскогоЖурнала, СоответствиеНоменклатурыВЕТИС2.ЗаписьСкладскогоЖурнала)) КАК ЗаписьСкладскогоЖурналаКоличествоРазличные,
	//|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	//|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	//|	ТабличнаяЧасть.Серия КАК Серия,
	//|	ТабличнаяЧасть.ДатаПроизводстваНачалоПериода КАК ДатаПроизводстваНачалоПериода
	//|ПОМЕСТИТЬ СопоставленыеПозиции
	//|ИЗ
	//|	ТоварыКОформлению КАК ТабличнаяЧасть
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	//|		ПО (СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	//|			И (СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика)
	//|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	//|		ПО (СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	//|			И (СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	//|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	//
	//|СГРУППИРОВАТЬ ПО
	//|	ТабличнаяЧасть.Номенклатура,
	//|	ТабличнаяЧасть.Характеристика,
	//|	ТабличнаяЧасть.Серия,
	//|	ТабличнаяЧасть.ДатаПроизводстваНачалоПериода
	//|;
	//
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	//|	ТоварыКОформлению.Характеристика КАК Характеристика,
	//|	ТоварыКОформлению.Серия КАК Серия,
	//|	ТоварыКОформлению.ДатаПроизводстваНачалоПериода КАК ДатаПроизводстваНачалоПериода,
	//|	&БлагополучиеМестности КАК БлагополучиеМестности,
	//|	СопоставленыеПозиции.Продукция КАК Продукция,
	//|	СопоставленыеПозиции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	//|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоВЕТИС,
	//|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	//|ИЗ
	//|	ТоварыКОформлению КАК ТоварыКОформлению
	//|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	//|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	//|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	//|			И (СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия)
	//|			И (СопоставленыеПозиции.ДатаПроизводстваНачалоПериода = ТоварыКОформлению.ДатаПроизводстваНачалоПериода)
	//|СГРУППИРОВАТЬ ПО
	//|	ТоварыКОформлению.Номенклатура,
	//|	ТоварыКОформлению.Характеристика,
	//|	ТоварыКОформлению.Серия,
	//|	ТоварыКОформлению.ДатаПроизводстваНачалоПериода,
	//|	СопоставленыеПозиции.Продукция,
	//|	СопоставленыеПозиции.ЗаписьСкладскогоЖурнала
	
	//|	ВЫБОР
	//|		КОГДА СопоставленыеПозиции.ПродукцияКоличествоРазличные = 1
	//|			ТОГДА СопоставленыеПозиции.Продукция
	//|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|	КОНЕЦ,
	//|	ВЫБОР
	//|		КОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурналаКоличествоРазличные = 1
	//|			ТОГДА СопоставленыеПозиции.ЗаписьСкладскогоЖурнала
	//|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|	КОНЕЦ
	//
	//|ИМЕЮЩИЕ
	//|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровПоставщику", ИмяОснования);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИсходящаяТранспортнаяОперацияВЕТИС", ИмяДокумента);
	Запрос.Текст = ТекстЗапроса;
	//Запрос.ВыполнитьПакетСПромежуточнымиДанными()[0].Выгрузить()
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать();
	ДокументОбъект.Товары.Очистить();
	ЕстьИдентификаторСтроки = ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("ИдентификаторСтроки", МетаданныеДокумента, "Товары");
	Пока ВыборкаНоменклатура.Следующий() Цикл
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура); 
		НоваяСтрока.ЕдиницаИзмерения = ВыборкаНоменклатура.Номенклатура.ЕдиницаИзмерения; 
		НоваяСтрока.БлагополучиеМестности = БлагополучиеМестности[0];
		Если ЕстьИдентификаторСтроки Тогда
			НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
		Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
			НоваяСтрока.КоличествоВЕТИС = ИнтеграцияВЕТИСКлиентСерверПереопределяемый.ПересчитатьКоличествоЕдиницВЕТИС(
			НоваяСтрока.Количество,
			НоваяСтрока.Номенклатура,
			НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
			НЕОПРЕДЕЛЕНО,
			"");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ПодобратьСопоставленнуюПродукцию(НоменклатураСсылка)
	
	ЗапросПродукции = Новый Запрос;
	ЗапросПродукции.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|ГДЕ СоответствиеНоменклатурыВЕТИС.Номенклатура = &Номенклатура";
	ЗапросПродукции.УстановитьПараметр("Номенклатура",НоменклатураСсылка);
	ВыбокаПродукция = ЗапросПродукции.Выполнить().Выбрать();
	Если ВыбокаПродукция.Следующий() Тогда
		Возврат ВыбокаПродукция.Продукция;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции