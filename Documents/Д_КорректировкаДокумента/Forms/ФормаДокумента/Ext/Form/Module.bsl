
&НаСервере
Процедура ЗаполнитьРеквизиты()
	Для каждого Реквизит Из Объект.ДокОснование.Метаданные().Реквизиты Цикл
		Если Реквизит.Комментарий = "Корректируется" Тогда
			СписокРеквизитов.Добавить(Реквизит.Имя, Реквизит.Синоним);
			Если Реквизит.Имя = "Количество" Тогда
				СинонимРеквизита = "Количество (производитель 1), дал"
			ИначеЕсли Реквизит.Имя = "Количество2" Тогда
				СинонимРеквизита = "Количество (производитель 2), дал"
			//ИначеЕсли Реквизит.Имя = "Абсолют" Тогда
			//	СинонимРеквизита = "Абсолют (производитель 1)"
			//ИначеЕсли Реквизит.Имя = "Абсолют2" Тогда
			//	СинонимРеквизита = "Абсолют (производитель 2)"
			Иначе
				СинонимРеквизита = Реквизит.Синоним;
			КонецЕсли;
			Элементы.ТЧРеквизит.СписокВыбора.Добавить(СинонимРеквизита, СинонимРеквизита);
		КонецЕсли;
	КонецЦикла;
	СписокРеквизитов.СортироватьПоПредставлению();
	Элементы.ТЧРеквизит.СписокВыбора.СортироватьПоПредставлению();
КонецПроцедуры

&НаКлиенте
Процедура ТЧРеквизитПриИзменении(Элемент)
	// Создание описателя типов для таблицы значений
	ТекЭлемент = Элементы.ТЧРеквизит.СписокВыбора.НайтиПоЗначению(Элементы.ТЧ.ТекущиеДанные.Реквизит);
	Если ТекЭлемент = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	ТекЗнач = СписокРеквизитов[Элементы.ТЧРеквизит.СписокВыбора.Индекс(ТекЭлемент)].Значение;
	
	Элементы.ТЧ.ТекущиеДанные.ЗначениеДо = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, ТекЗнач);
	Элементы.ТЧ.ТекущиеДанные.ЗначениеПосле = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, ТекЗнач);
	ПрименитьВыборКСтроке(ТекЗнач);
	
	// 05.06.13 di 
	Если ТекЗнач = "Грузополучатель" Тогда
		
		УдалитьЗависимыеРеквизиты();
		
		Предприятие = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, "Док");
		Контрагент = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, "Грузополучатель");
		
		ТекЗначения = БюджетныйНаСервере.ПолучитьДоговор(Предприятие, Контрагент, Объект.Дата);
		
		НСтрДоговор = Объект.ТЧ.Добавить();
		НСтрДоговор.Реквизит = "Договор";
		ДоговорЗначение = БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, "Договор");
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов");
		НСтрДоговор.ЗначениеДо = ОписаниеТипов.ПривестиЗначение(ДоговорЗначение);  
		НСтрДоговор.ЗначениеПосле = ТекЗначения.Договор;
		
		НСтрОтсрочка = Объект.ТЧ.Добавить();
		НСтрОтсрочка.Реквизит = СписокРеквизитов.НайтиПоЗначению("Отсрочка").Представление;
		НСтрОтсрочка.ЗначениеДо = ПолучитьОтсрочкуПоДоговору(ДоговорЗначение);
		НСтрОтсрочка.ЗначениеПосле = ПолучитьОтсрочкуПоДоговору(ТекЗначения.Договор);
		
		НСтрПредоплата = Объект.ТЧ.Добавить();
		НСтрПредоплата.Реквизит = СписокРеквизитов.НайтиПоЗначению("ПроцентПредоплаты").Представление;
		НСтрПредоплата.ЗначениеДо = БюджетныйНаСервере.ВернутьРеквизит(ДоговорЗначение, "Предоплата");
		НСтрПредоплата.ЗначениеПосле = БюджетныйНаСервере.ВернутьРеквизит(ТекЗначения.Договор, "Предоплата");

		
		НСтрПротокол = Объект.ТЧ.Добавить();
		НСтрПротокол.Реквизит = "Протокол";
		ПротоколЗначение =  БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, "Протокол"); 
		ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.КС_ПротоколыСогласования");
		НСтрПротокол.ЗначениеДо =  ОписаниеТипов.ПривестиЗначение(ПротоколЗначение); 
		НСтрПротокол.Значениепосле = ТекЗначения.Протокол;
		
		НСтрЦена = Объект.ТЧ.Добавить();
		НСтрЦена.Реквизит = СписокРеквизитов.НайтиПоЗначению("Цена").Представление;
		НСтрЦена.ЗначениеДо = БюджетныйНаСервере.ВернутьРеквизит(ПротоколЗначение, "Цена");
		НСтрЦена.ЗначениеПосле = БюджетныйНаСервере.ВернутьРеквизит(ТекЗначения.Протокол, "Цена");
		
		НесколькоВерховСтарогоПротокола = ?(ПротоколЗначение = Неопределено ИЛИ ТипЗнч(ПротоколЗначение) = Тип("Строка"), Ложь, БюджетныйНаСервере.ВернутьРеквизит(ПротоколЗначение, "НесколькоВерхов"));
		НесколькоВерховНовогоПротокола = ?(ТекЗначения.Протокол = Неопределено ИЛИ ТипЗнч(ТекЗначения.Протокол) = Тип("Строка"), Ложь, БюджетныйНаСервере.ВернутьРеквизит(ТекЗначения.Протокол, "НесколькоВерхов"));
		
		Если НесколькоВерховСтарогоПротокола И НесколькоВерховНовогоПротокола Тогда
			
			СтруктураВерховСтарогоПротокола = ПолучитьВерхиПротокола(ПротоколЗначение);
			СтруктураВерховНовогоПротокола = ПолучитьВерхиПротокола(ТекЗначения.Протокол);

			НСтрВерх1 = Объект.ТЧ.Добавить();
			НСтрВерх1.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх1").Представление;
			НСтрВерх1.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх1;
			НСтрВерх1.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх1;
			
			НСтрВерх2 = Объект.ТЧ.Добавить();
			НСтрВерх2.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх2").Представление;
			НСтрВерх2.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх2;
			НСтрВерх2.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх2;
			
			НСтрВерх3 = Объект.ТЧ.Добавить();
			НСтрВерх3.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх3").Представление;
			НСтрВерх3.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх3;
			НСтрВерх3.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх3;	
			
			НСтрВерх4 = Объект.ТЧ.Добавить();
			НСтрВерх4.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх4").Представление;
			НСтрВерх4.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх4;
			НСтрВерх4.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх4;		
								
		ИначеЕсли НесколькоВерховСтарогоПротокола И Не НесколькоВерховНовогоПротокола Тогда
			
			СтруктураВерховСтарогоПротокола = ПолучитьВерхиПротокола(ПротоколЗначение);
			ВерхНовогоПротокола = БюджетныйНаСервере.ВернутьРеквизит(ТекЗначения.Протокол, "СтавкаВерха"); 
			
			НСтрВерх1 = Объект.ТЧ.Добавить();
			НСтрВерх1.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх1").Представление;
			НСтрВерх1.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх1;
			НСтрВерх1.ЗначениеПосле = ВерхНовогоПротокола;
			
			НСтрВерх2 = Объект.ТЧ.Добавить();
			НСтрВерх2.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх2").Представление;
			НСтрВерх2.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх2;
			
			НСтрВерх3 = Объект.ТЧ.Добавить();
			НСтрВерх3.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх3").Представление;
			НСтрВерх3.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх3;
			
			НСтрВерх4 = Объект.ТЧ.Добавить();
			НСтрВерх4.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх4").Представление;
			НСтрВерх4.ЗначениеДо = СтруктураВерховСтарогоПротокола.Верх4;
			
		ИначеЕсли НесколькоВерховНовогоПротокола И Не НесколькоВерховСтарогоПротокола Тогда
			
			ВерхСтарогоПротокола = БюджетныйНаСервере.ВернутьРеквизит(ПротоколЗначение, "СтавкаВерха"); 
			СтруктураВерховНовогоПротокола = ПолучитьВерхиПротокола(ТекЗначения.Протокол);
			
			НСтрВерх1 = Объект.ТЧ.Добавить();
			НСтрВерх1.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх1").Представление;
			НСтрВерх1.ЗначениеДо = ВерхСтарогоПротокола;
			НСтрВерх1.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх1;
			
			НСтрВерх2 = Объект.ТЧ.Добавить();
			НСтрВерх2.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх2").Представление;
			НСтрВерх2.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх2;
			
			НСтрВерх3 = Объект.ТЧ.Добавить();
			НСтрВерх3.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх3").Представление;
			НСтрВерх3.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх3;
			
			НСтрВерх4 = Объект.ТЧ.Добавить();
			НСтрВерх4.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх4").Представление;
			НСтрВерх4.ЗначениеПосле = СтруктураВерховНовогоПротокола.Верх4;
			
		ИначеЕсли Не НесколькоВерховНовогоПротокола И Не НесколькоВерховСтарогоПротокола Тогда
			
			ВерхСтарогоПротокола = БюджетныйНаСервере.ВернутьРеквизит(ПротоколЗначение, "СтавкаВерха"); 
			ВерхНовогоПротокола = БюджетныйНаСервере.ВернутьРеквизит(ТекЗначения.Протокол, "СтавкаВерха"); 

			НСтрВерх1 = Объект.ТЧ.Добавить();
			НСтрВерх1.Реквизит = СписокРеквизитов.НайтиПоЗначению("Верх1").Представление;
			НСтрВерх1.ЗначениеДо = ВерхСтарогоПротокола;
			НСтрВерх1.ЗначениеПосле = ВерхНовогоПротокола;
						
		КонецЕсли;
		ОграничитьДоступность();				
	КонецЕсли;
		
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьВыборКСтроке(ТекЗнач)
	Элементы.ТЧЗначениеДо.СписокВыбора.Очистить();
	Элементы.ТЧЗначениеПосле.СписокВыбора.Очистить();
	Если ТекЗнач = "ТипСырья" Тогда
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("зерно");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("патока");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("прочее");
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("зерно");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("патока");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("прочее");
	ИначеЕсли ТекЗнач = "ВидДоставки" Тогда
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("жд", "Ж/Д");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("Авто");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("прочее");
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("жд", "Ж/Д");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("Авто");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("прочее");
	ИначеЕсли ТекЗнач = "ФормаОплаты" Тогда
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("БезНал");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("Нал");
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("БезНал");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("Нал");
	ИначеЕсли ТекЗнач = "ПриемПоВесам" Тогда
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("Свои");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("Чужие");
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("Свои");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("Чужие");
	ИначеЕсли ТекЗнач = "Грузополучатель" Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
		МассивТипов.Добавить(Тип("СправочникСсылка.КС_ПротоколыСогласования"));
		МассивТипов.Добавить(Тип("Строка"));
		Элементы.ТЧЗначениеДо.ВыбиратьТип = Истина;
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		Элементы.ТЧЗначениеДо.ОграничениеТипа = ОписаниеТипов;
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
		МассивТипов.Добавить(Тип("СправочникСсылка.КС_ПротоколыСогласования"));
		МассивТипов.Добавить(Тип("Строка"));
		Элементы.ТЧЗначениеПосле.ВыбиратьТип = Истина;
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		Элементы.ТЧЗначениеПосле.ОграничениеТипа = ОписаниеТипов;
	ИначеЕсли ТекЗнач = "Абсолют" ИЛИ ТекЗнач = "Абсолют2" Тогда
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("По абсолюту");
		Элементы.ТЧЗначениеДо.СписокВыбора.Добавить("По объему");
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Истина;
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("По абсолюту");
		Элементы.ТЧЗначениеПосле.СписокВыбора.Добавить("По объему");
	Иначе
		Элементы.ТЧЗначениеДо.РежимВыбораИзСписка = Ложь;
		Элементы.ТЧЗначениеПосле.РежимВыбораИзСписка = Ложь;
		Элементы.ТЧЗначениеПосле.ВыбиратьТип = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЧПриАктивизацииСтроки(Элемент)
	Если НЕ Элементы.ТЧ.ТекущиеДанные = Неопределено Тогда
		
		ТекЭлемент = Элементы.ТЧРеквизит.СписокВыбора.НайтиПоЗначению(Элементы.ТЧ.ТекущиеДанные.Реквизит);
		Если ТекЭлемент = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		ТекЗнач = СписокРеквизитов[Элементы.ТЧРеквизит.СписокВыбора.Индекс(ТекЭлемент)].Значение;
		
		ПрименитьВыборКСтроке(ТекЗнач);
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытьФорму" Тогда
		Закрыть();
	ИначеЕсли ИмяСобытия = "УстановитьДоступность" Тогда
		Объект.ТекущийБизнесПроцесс = Параметр.ТекущийБизнесПроцесс;
		Записать();
	ИначеЕсли ИмяСобытия = "Пересчитать" Тогда
		Закрыть();
	КонецЕсли;
	ПриОткрытии(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//проверяем стадию согласования документа-основания
	Если ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.Д_ЗаявкаНаОтгрузку") Тогда
		БП = БПСервер.НайтиТекущийБПСервер(Объект.ДокОснование);
		Если НЕ БП = Неопределено Тогда
			БПВФинальнойСтадии = БюджетныйНаСервере.ВернутьРеквизит(БП, "Завершен") ИЛИ БПСервер.СравнитьСтадию("Действие5", Объект.ДокОснование) ИЛИ БПСервер.СравнитьСтадию("Действие3", Объект.ДокОснование);
		Иначе	
			БПВФинальнойСтадии = Ложь;
		КонецЕсли;
		Если НЕ БПВФинальнойСтадии Тогда
			Предупреждение("Корректировка не может быть создана для несогласованного документа. Для внесения изменений в основной документ необходимо вернуть его на доработку.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;				
	КонецЕсли;
	ЗаполнитьРеквизиты();
	БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, БюджетныйНаСервере.ВернутьРеквизит(Объект.ТекущийБизнесПроцесс, "ОснованиеЗаблокирован"));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для каждого ТекСтрока Из Объект.ТЧ Цикл
		
		ТекЭлемент = Элементы.ТЧРеквизит.СписокВыбора.НайтиПоЗначению(ТекСтрока.Реквизит);
		Если ТекЭлемент = Неопределено Тогда
			ТекСтрока.РеквизитИмя = ТекСтрока.Реквизит;
		Иначе
			ТекСтрока.РеквизитИмя = СписокРеквизитов[Элементы.ТЧРеквизит.СписокВыбора.Индекс(ТекЭлемент)].Значение;	
		КонецЕсли;
		
	КонецЦикла; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВерхиПротокола(Протокол)
	
	СтруктураВозврата = Новый Структура;
	
	Для Инд = 0 По Протокол.ТаблицаВерхов.Количество() - 1 Цикл
		СтруктураВозврата.Вставить("Верх"+(Инд + 1), Протокол.ТаблицаВерхов[Инд].Верх);
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ТЧЗначениеДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	МассивТипов = Новый Массив;
	
	Если ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.ЗначениеДо) Тогда
		
		МассивТипов.Добавить(ТипЗнч(Элемент.Родитель.ТекущиеДанные.ЗначениеДо))
		
	Иначе
		
		ТекРеквизит = Неопределено;
		
		Если Элемент.Родитель.ТекущиеДанные.Реквизит <> "Договор" И Элемент.Родитель.ТекущиеДанные.Реквизит <> "Протокол" Тогда
						
			Для Каждого Эл Из СписокРеквизитов Цикл
			
				Если Эл.Представление <> Элемент.Родитель.ТекущиеДанные.Реквизит Тогда
					Продолжить;
				КонецЕсли;
			
				ТекРеквизит = Эл.Значение;
				
			КонецЦикла;
		
			Если ТекРеквизит = Неопределено Тогда
				Возврат;
			КонецЕсли;
		
			ДобавитьТипыЗначенияТекущегоРеквизита(МассивТипов, ТекРеквизит)
			
		Иначе	
			
			ДобавитьТипыЗначенияТекущегоРеквизита(МассивТипов, Элемент.Родитель.ТекущиеДанные.Реквизит)
			
		КонецЕсли;	
				
	КонецЕсли;
	
	ТипЗнач = Новый ОписаниеТипов(МассивТипов);	
	ВвестиЗначение(ДанныеВыбора,,ТипЗнач);	
	
	Если Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 1, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 2, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 3, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Отсрочка, дни" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Предоплата, %" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Цена, р/дал" Тогда 
		
		РедактированиеРеквизита = ПроверитьВозможностьРедактированияРеквизита(Элемент.Родитель.ТекущиеДанные.Реквизит);
		
		Если РедактированиеРеквизита Тогда
			Элемент.Родитель.ТекущиеДанные.ЗначениеДо = ДанныеВыбора;
		КонецЕсли;
		
	Иначе
		
		Элемент.Родитель.ТекущиеДанные.ЗначениеДо = ДанныеВыбора;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧЗначениеПослеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	МассивТипов = Новый Массив;
	
	Если ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.ЗначениеПосле) Тогда
		
		МассивТипов.Добавить(ТипЗнч(Элемент.Родитель.ТекущиеДанные.ЗначениеПосле));
		
	Иначе
		
		ТекРеквизит = Неопределено;
		
		Если Элемент.Родитель.ТекущиеДанные.Реквизит <> "Договор" И Элемент.Родитель.ТекущиеДанные.Реквизит <> "Протокол" Тогда
						
			Для Каждого Эл Из СписокРеквизитов Цикл
			
				Если Эл.Представление <> Элемент.Родитель.ТекущиеДанные.Реквизит Тогда
					Продолжить;
				КонецЕсли;
			
				ТекРеквизит = Эл.Значение;
				
			КонецЦикла;
		
			Если ТекРеквизит = Неопределено Тогда
				Возврат;
			КонецЕсли;
		
			ДобавитьТипыЗначенияТекущегоРеквизита(МассивТипов, ТекРеквизит)
			
		Иначе	
			
			ДобавитьТипыЗначенияТекущегоРеквизита(МассивТипов, Элемент.Родитель.ТекущиеДанные.Реквизит)
			
		КонецЕсли;	
			
	КонецЕсли;
	
	Если Элемент.Родитель.ТекущиеДанные.Реквизит = "Номенклатура" Тогда
		А = Новый Структура("ТекущееПредприятие", БюджетныйНаСервере.ВернутьРеквизит(Объект.ДокОснование, "Предприятие"));
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", А, Элемент);
	Иначе
		ТипЗнач = Новый ОписаниеТипов(МассивТипов);	
		ВвестиЗначение(ДанныеВыбора,,ТипЗнач);	
	КонецЕсли;
	
	Если Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 1, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 2, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Верх 3, р/дал" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Отсрочка, дни" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Предоплата, %" ИЛИ  Элемент.Родитель.ТекущиеДанные.Реквизит = "Цена, р/дал" Тогда 
		
		РедактированиеРеквизита = ПроверитьВозможностьРедактированияРеквизита(Элемент.Родитель.ТекущиеДанные.Реквизит);
		
		Если РедактированиеРеквизита Тогда
			Элемент.Родитель.ТекущиеДанные.ЗначениеПосле = ДанныеВыбора;
		КонецЕсли;
		
	Иначе
		
		Элемент.Родитель.ТекущиеДанные.ЗначениеПосле = ДанныеВыбора;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьТипыЗначенияТекущегоРеквизита(МассивТипов, Реквизит)
	
	Р = Объект.ДокОснование.Метаданные().Реквизиты.Найти(Реквизит);	
	
	Для Каждого Эл Из Р.Тип.Типы() Цикл
		МассивТипов.Добавить(Эл);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьРедактированияРеквизита(Реквизит)
	
	Если Реквизит = "Отсрочка, дни" ИЛИ Реквизит = "Предоплата, %" Тогда
	
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Реквизит", "Договор");
		СтрДоговор = Объект.ТЧ.НайтиСтроки(СтруктураОтбора);
		
		Возврат Не СтрДоговор.Количество();
		
	ИначеЕсли	Реквизит = "Верх 1, р/дал" ИЛИ	Реквизит = "Верх 2, р/дал" ИЛИ Реквизит = "Верх 3, р/дал" ИЛИ Реквизит = "Цена, р/дал" Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Реквизит", "Протокол");
		СтрПротокол = Объект.ТЧ.НайтиСтроки(СтруктураОтбора);
		
		Возврат Не СтрПротокол.Количество();
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте 
Процедура УдалитьЗависимыеРеквизиты()
	
	КолСтр = Объект.ТЧ.Количество();
	
	Для ОбрИнд = 1 По Объект.ТЧ.Количество() Цикл
		
		Если Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Отсрочка, дни" ИЛИ Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Предоплата, %" ИЛИ Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Верх 1, р/дал" ИЛИ Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Верх 2, р/дал" ИЛИ Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Верх 3, р/дал" ИЛИ Объект.ТЧ[КолСтр - ОбрИнд].Реквизит = "Цена, р/дал" Тогда
			Объект.ТЧ.Удалить(КолСтр - ОбрИнд);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьДоступность()
	Для каждого ТекСтрока Из Объект.ТЧ Цикл
		Если ТекСтрока.Реквизит = "Отсрочка, дни" Тогда
			ТекСтрока.ОграничитьДоступность = Истина;
		КонецЕсли;	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОграничитьДоступность();
КонецПроцедуры

&НаСервере
Функция ПолучитьОтсрочкуПоДоговору(Договор)
	
	Отсрочка = РегистрыСведений.ОтсрочкаПоДоговорам.ПолучитьПоследнее(Объект.Дата, Новый Структура("Договор", Договор)).Отсрочка;
	
	Возврат ?(Отсрочка = Неопределено, 0, Отсрочка);
	
КонецФункции





