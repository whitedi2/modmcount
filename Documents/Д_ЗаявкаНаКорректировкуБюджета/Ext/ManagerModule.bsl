Функция РасчитатьЛимиты(Предприятия, МассивСтатей, Ссылка)
	/////////////////////////////////////////////////////////////////Расчет лимитов/////////////////////
	
	ПолныйПросмотрЛимитов = сабОбщегоНазначения.ПолучитьЗначениеСвойства(ПараметрыСеанса.ТекущийПользователь, ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПривилегированныйПросмотрЛимитов);

	Если ПолныйПросмотрЛимитов = Истина Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	АктуальныйСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Ссылка.Дата, Ложь);
	
	МассивСценариев = Новый Массив;
	МассивСценариев.Добавить(АктуальныйСценарий);
	МассивСценариев.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
	
	////запрос для расчета лимитов на начало (суммируются корреспонденции 20-40 + 90.3)
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	-ЕСТЬNULL(Затраты.СуммаОборот, 0) + ЕСТЬNULL(Затраты903.СуммаОборот, 0) КАК СуммаПП,
	//|	ВЫБОР
	//|		КОГДА Затраты.Предприятия ЕСТЬ NULL 
	//|			ТОГДА Затраты903.Предприятия
	//|		ИНАЧЕ Затраты.Предприятия
	//|	КОНЕЦ КАК Предприятия,
	//|	ВЫБОР
	//|		КОГДА Затраты.Субконто2 ЕСТЬ NULL 
	//|			ТОГДА Затраты903.Субконто2
	//|		ИНАЧЕ Затраты.Субконто2
	//|	КОНЕЦ КАК Статья,
	//|	ВЫБОР
	//|		КОГДА Затраты903.КорСубконто2.Ссылка ЕСТЬ NULL 
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	//|		ИНАЧЕ Затраты903.КорСубконто2.Ссылка
	//|	КОНЕЦ КАК Деятельность,
	//|	ВЫБОР
	//|		КОГДА Затраты.Счет ЕСТЬ NULL 
	//|			ТОГДА Затраты903.Счет
	//|		ИНАЧЕ Затраты.Счет
	//|	КОНЕЦ КАК Счет
	//|ИЗ
	//|	РегистрБухгалтерии.Бюджетный.Обороты(
	//|			&Дата1,
	//|			&Дата2,
	//|			Регистратор,
	//|			Счет = &Счет2,
	//|			,
	//|			СценарийПлана В (&Сценарий)
	//|				И Предприятия В ИЕРАРХИИ (&Предприятия)
	//|				И Субконто2 В (&Статьи),
	//|			КорСчет = &КорСчет2,
	//|			) КАК Затраты
	//|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.Обороты(
	//|				&Дата1,
	//|				&Дата2,
	//|				Регистратор,
	//|				Счет = &Счет3,
	//|				,
	//|				СценарийПлана В (&Сценарий)
	//|					И Предприятия В ИЕРАРХИИ (&Предприятия)
	//|					И Субконто2 В (&Статьи),
	//|				,
	//|				) КАК Затраты903
	//|		ПО Затраты.Предприятия = Затраты903.Предприятия
	//|			И Затраты.Субконто2 = Затраты903.Субконто2
	//|ГДЕ
	//|	((НЕ Затраты.Регистратор В (&Регистратор))
	//|			ИЛИ (НЕ Затраты903.Регистратор В (&Регистратор)))";
	//
	//
	//
	//Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	//Запрос.УстановитьПараметр("Предприятия", Предприятия);
	//Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипНоменклатуры.ОсновнаяПродукция);
	//Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет20());
	//Запрос.УстановитьПараметр("Счет3", ПланыСчетов.Учетный.Счет9003());
	//Запрос.УстановитьПараметр("КорСчет2", ПланыСчетов.Учетный.Счет40());
	//Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//
	//РезультатЗатраты = Запрос.Выполнить();
	
	////запрос для расчета лимитов денег на начало
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Деньги.Предприятия,
	//|	СУММА(-Деньги.СуммаОборот) КАК СуммаППДДС,
	//|	Деньги.Субконто1 КАК Статья
	//|ИЗ
	//|	РегистрБухгалтерии.Бюджетный.Обороты(
	//|			&Дата1,
	//|			&Дата2,
	//|			Регистратор,
	//|			Счет В ИЕРАРХИИ (&Счет1),
	//|			,
	//|			СценарийПлана В (&Сценарий)
	//|				И Предприятия В (&Предприятия)
	//|				И Субконто1 В (&Статьи),
	//|			,
	//|			) КАК Деньги
	//|ГДЕ
	//|	(НЕ Деньги.Регистратор В (&Регистратор))
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Деньги.Предприятия,
	//|	Деньги.Субконто1";
	//
	//
	//ДенежныеСчета = Новый Массив;
	//ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
	//ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());
	//ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5501());
	//
	//
	//Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	//Запрос.УстановитьПараметр("Предприятия", Предприятия);
	//Запрос.УстановитьПараметр("Счет1", ДенежныеСчета);
	//Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//
	//РезультатДеньги = Запрос.Выполнить();
	
	
	////запрос для расчета лимитов 91 счета
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ФР.Предприятия,
	//|	СУММА(ФР.СуммаОборот) КАК СуммаПП,
	//|	ФР.Субконто1 КАК Статья,
	//|	ФР.Субконто2 КАК Деятельность
	//|ИЗ
	//|	РегистрБухгалтерии.Бюджетный.Обороты(
	//|			&Дата1,
	//|			&Дата2,
	//|			Регистратор,
	//|			Счет В ИЕРАРХИИ (&Счет1),
	//|			,
	//|			СценарийПлана В (&Сценарий)
	//|				И Предприятия В ИЕРАРХИИ (&Предприятия)
	//|				И Субконто1 В (&Статьи),
	//|			,
	//|			) КАК ФР
	//|ГДЕ
	//|	(НЕ ФР.Регистратор В (&Регистратор))
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ФР.Предприятия,
	//|	ФР.Субконто1,
	//|	ФР.Субконто2";
	//
	//
	//Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	//Запрос.УстановитьПараметр("Предприятия", Предприятия);
	//Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет91());
	//Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//
	//РезультатЗатраты91 = Запрос.Выполнить();
	
	
	//запрос для расчета объема производства на единицу
	Попытка
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	БюджетныйОбороты.Предприятия КАК Предприятия,
		|	СУММА(ЕСТЬNULL(БюджетныйОбороты.КоличествоОборот, 0)) КАК КоличествоОборот
		|ИЗ
		|	РегистрБухгалтерии.Бюджетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет,
		|			,
		|			СценарийПлана В (&Сценарий)
		|				И Предприятия В ИЕРАРХИИ (&Предприятия)
		|				И Субконто1.ТипНоменклатуры = &ТипНоменклатуры,
		|			КорСчет = &КорСчет,
		|			) КАК БюджетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетныйОбороты.Предприятия";
		
		ОсновноеСырье = Новый Массив;
		ОсновноеСырье.Добавить(Справочники.СтатьиЗатрат.ЗатратыОсн);
		ОсновноеСырье.Добавить(Справочники.СтатьиЗатрат.ЗатратыВсп);
		
		Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
		Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
		Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Учетный.Счет43());
		Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Учетный.Счет40());
		Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет20());
		Запрос.УстановитьПараметр("КорСчет2", ПланыСчетов.Учетный.Счет40());
		Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
		
		Запрос.УстановитьПараметр("Предприятия", Предприятия);
		Запрос.УстановитьПараметр("ОсновноеСырье", ОсновноеСырье);
		
		Результат1 = Запрос.Выполнить();
	Исключение
		Результат1 = Неопределено;
	КонецПопытки;
	
	
	
	Возврат Новый Структура("РезультатСырье, РезультатЗатраты, РезультатДеньги, РезультатЗатраты91, Результат1, АктуальныйСценарий",
	Неопределено, Неопределено, Неопределено, Неопределено, Результат1, АктуальныйСценарий);
КонецФункции

Функция РасчитатьЛимитыДо01042011(Предприятия, МассивСтатей, Ссылка)
	/////////////////////////////////////////////////////////////////Расчет лимитов/////////////////////
	////запрос для расчета основного сырья
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	БюджетныйОбороты.Предприятия КАК Предприятия,
	//			   |	СУММА(ВЫБОР
	//			   |			КОГДА (НЕ БюджетныйОбороты.КоличествоКорОборот = 0)
	//			   |				ТОГДА БюджетныйОбороты.СуммаОборот / БюджетныйОбороты.КоличествоКорОборот
	//			   |			ИНАЧЕ 0
	//			   |		КОНЕЦ) КАК Цена,
	//			   |	БюджетныйОбороты.КорСубконто1 КАК Сырье
	//			   |ИЗ
	//			   |	РегистрБухгалтерии.Бюджетный.Обороты(
	//			   |			&Дата1,
	//			   |			&Дата2,
	//			   |			,
	//			   |			Счет = &Счет2,
	//			   |			,
	//			   |			СценарийПлана В (&Сценарий)
	//			   |				И Предприятия В ИЕРАРХИИ (&Предприятия)
	//			   |				И Субконто1.ТипНоменклатуры = &ТипНоменклатуры
	//			   |				И Субконто2 В (&ОсновноеСырье),
	//			   |			КорСчет = &КорСчет2,
	//			   |			) КАК БюджетныйОбороты
	//			   |
	//			   |СГРУППИРОВАТЬ ПО
	//			   |	БюджетныйОбороты.КорСубконто1,
	//			   |	БюджетныйОбороты.Предприятия";
	//
	//
	АктуальныйСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Ссылка.Дата);
	
	МассивСценариев = Новый Массив;
	МассивСценариев.Добавить(АктуальныйСценарий);
	МассивСценариев.Добавить(Справочники.СценарииПланирования.ПланПоСЗ);
	
	//Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	//Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	//Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет20());
	//Запрос.УстановитьПараметр("КорСчет2", ПланыСчетов.Учетный.Счет1001());
	//Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипНоменклатуры.ОсновнаяПродукция);
	//Запрос.УстановитьПараметр("ОсновноеСырье", Справочники.ИздержкиОбращения.ЗатратыОсн);
	//Запрос.УстановитьПараметр("Предприятия", Предприятия);
	//
	//РезультатСырье = Запрос.Выполнить();
	
	
	//запрос для расчета лимитов на начало (суммируются корреспонденции 20-40 + 90.3)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	-ЕСТЬNULL(Затраты.СуммаОборот, 0) + ЕСТЬNULL(Затраты903.СуммаОборот, 0) КАК СуммаПП,
	|	ВЫБОР
	|		КОГДА Затраты.Предприятия ЕСТЬ NULL 
	|			ТОГДА Затраты903.Предприятия
	|		ИНАЧЕ Затраты.Предприятия
	|	КОНЕЦ КАК Предприятия,
	|	ВЫБОР
	|		КОГДА Затраты.Субконто2 ЕСТЬ NULL 
	|			ТОГДА Затраты903.Субконто2
	|		ИНАЧЕ Затраты.Субконто2
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА Затраты903.КорСубконто2.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ Затраты903.КорСубконто2.Ссылка
	|	КОНЕЦ КАК Деятельность,
	|	ВЫБОР
	|		КОГДА Затраты.Счет ЕСТЬ NULL 
	|			ТОГДА Затраты903.Счет
	|		ИНАЧЕ Затраты.Счет
	|	КОНЕЦ КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			Регистратор,
	|			Счет = &Счет2,
	|			,
	|			СценарийПлана В (&Сценарий)
	|				И Предприятия В ИЕРАРХИИ (&Предприятия)
	|				И Субконто2 В (&Статьи),
	|			КорСчет = &КорСчет2,
	|			) КАК Затраты
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.Обороты(
	|				&Дата1,
	|				&Дата2,
	|				Регистратор,
	|				Счет = &Счет3,
	|				,
	|				СценарийПлана В (&Сценарий)
	|					И Предприятия В ИЕРАРХИИ (&Предприятия)
	|					И Субконто2 В (&Статьи),
	|				,
	|				) КАК Затраты903
	|		ПО Затраты.Предприятия = Затраты903.Предприятия
	|			И Затраты.Субконто2 = Затраты903.Субконто2
	|ГДЕ
	|	((НЕ Затраты.Регистратор В (&Регистратор))
	|			ИЛИ (НЕ Затраты903.Регистратор В (&Регистратор)))";
	
	
	
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	Запрос.УстановитьПараметр("Предприятия", Предприятия);
	Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
	Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет20());
	Запрос.УстановитьПараметр("Счет3", ПланыСчетов.Учетный.Счет9003());
	Запрос.УстановитьПараметр("КорСчет2", ПланыСчетов.Учетный.Счет40());
	Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗатраты = Запрос.Выполнить();
	
	//запрос для расчета лимитов денег на начало
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Деньги.Предприятия,
	|	СУММА(-Деньги.СуммаОборот) КАК СуммаППДДС,
	|	Деньги.Субконто1 КАК Статья
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (&Счет1),
	|			,
	|			СценарийПлана В (&Сценарий)
	|				И Предприятия В (&Предприятия)
	|				И Субконто1 В (&Статьи),
	|			,
	|			) КАК Деньги
	|ГДЕ
	|	(НЕ Деньги.Регистратор В (&Регистратор))
	|
	|СГРУППИРОВАТЬ ПО
	|	Деньги.Предприятия,
	|	Деньги.Субконто1";
	
	
	ДенежныеСчета = Новый Массив;
	ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5001());
	ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5101());
	ДенежныеСчета.Добавить(ПланыСчетов.Учетный.Счет5501());
	
	
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	Запрос.УстановитьПараметр("Предприятия", Предприятия);
	Запрос.УстановитьПараметр("Счет1", ДенежныеСчета);
	Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатДеньги = Запрос.Выполнить();
	
	
	//запрос для расчета лимитов 91 счета
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФР.Предприятия,
	|	СУММА(ФР.СуммаОборот) КАК СуммаПП,
	|	ФР.Субконто1 КАК Статья,
	|	ФР.Субконто2 КАК Деятельность
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (&Счет1),
	|			,
	|			СценарийПлана В (&Сценарий)
	|				И Предприятия В ИЕРАРХИИ (&Предприятия)
	|				И Субконто1 В (&Статьи),
	|			,
	|			) КАК ФР
	|ГДЕ
	|	(НЕ ФР.Регистратор В (&Регистратор))
	|
	|СГРУППИРОВАТЬ ПО
	|	ФР.Предприятия,
	|	ФР.Субконто1,
	|	ФР.Субконто2";
	
	
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
	Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
	Запрос.УстановитьПараметр("Предприятия", Предприятия);
	Запрос.УстановитьПараметр("Счет1", ПланыСчетов.Учетный.Счет91());
	Запрос.УстановитьПараметр("Статьи", МассивСтатей);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗатраты91 = Запрос.Выполнить();
	
	
	//запрос для расчета переработки и основного сырья на единицу
	Попытка
		
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	БюджетныйОбороты.Предприятия КАК Предприятия,
		|	СУММА(ЕСТЬNULL(БюджетныйОбороты.КоличествоОборот, 0)) КАК КоличествоОборот
		|ИЗ
		|	РегистрБухгалтерии.Бюджетный.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Счет = &Счет,
		|			,
		|			СценарийПлана В (&Сценарий)
		|				И Предприятия В ИЕРАРХИИ (&Предприятия)
		|				И Субконто1.ТипНоменклатуры = &ТипНоменклатуры,
		|			КорСчет = &КорСчет,
		|			) КАК БюджетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетныйОбороты.Предприятия";
		
		ОсновноеСырье = Новый Массив;
		ОсновноеСырье.Добавить(Справочники.СтатьиЗатрат.ЗатратыОсн);
		ОсновноеСырье.Добавить(Справочники.СтатьиЗатрат.ЗатратыВсп);
		
		Запрос.УстановитьПараметр("Сценарий", МассивСценариев);
		Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Ссылка.Дата));
		Запрос.УстановитьПараметр("Дата2", КонецМесяца(Ссылка.Дата));
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Учетный.Счет43());
		Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Учетный.Счет40());
		Запрос.УстановитьПараметр("Счет2", ПланыСчетов.Учетный.Счет20());
		Запрос.УстановитьПараметр("КорСчет2", ПланыСчетов.Учетный.Счет40());
		Запрос.УстановитьПараметр("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
		
		Запрос.УстановитьПараметр("Предприятия", Предприятия);
		Запрос.УстановитьПараметр("ОсновноеСырье", ОсновноеСырье);
		Результат1 = Запрос.Выполнить();
	Исключение
		Результат1 = Неопределено;
	КонецПопытки; 
	
	
	
	Возврат Новый Структура("РезультатСырье, РезультатЗатраты, РезультатДеньги, РезультатЗатраты91, Результат1, АктуальныйСценарий",
	Неопределено, РезультатЗатраты, РезультатДеньги, РезультатЗатраты91, Результат1, АктуальныйСценарий);
КонецФункции


Процедура Печать(ТабДокИтог, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено) Экспорт
		
	Макет = Документы.Д_СлужебнаяЗаписка.ПолучитьМакет("Печать");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	// статус
	ОбластьШапкаСтатус = Макет.ПолучитьОбласть("ШапкаСтатус");
	ОбластьТекстовка = Макет.ПолучитьОбласть("Текстовка");
	ОбластьШапкаЗаг = Макет.ПолучитьОбласть("ШтампыЗаголовок");
	ОбластьШтампы = Макет.ПолучитьОбласть("Штампы");
	ОбластьСогласование = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьОзнакомлениеШапка = Макет.ПолучитьОбласть("ШапкаОзнакомление");
	ОбластьОзнакомление = Макет.ПолучитьОбласть("ШтампыОзнакомление");
	ОбластьПрикрепление = Макет.ПолучитьОбласть("Прикрепление");
	ОбластьПустыеСтроки = Макет.ПолучитьОбласть("ПустыеСтроки");
	ОбластьИнициатор = Макет.ПолучитьОбласть("ШтампыИнициатор");
	ОбластьОтступ = Макет.ПолучитьОбласть("ОтступСтрока|ОтступСтолбец");
	ОбластьЛимитДЗ = Макет.ПолучитьОбласть("ЛимитДЗ");
	ОбластьЛимитДЗ1 = Макет.ПолучитьОбласть("ЛимитДЗ1");
	ОбластьЛимитДЗ2 = Макет.ПолучитьОбласть("ЛимитДЗ2");
	ОбластьЛимитДЗ3 = Макет.ПолучитьОбласть("ЛимитДЗ3");
	ОбластьЛимитДЗ4 = Макет.ПолучитьОбласть("ЛимитДЗ4");
	//ОбластьКомандировка = Макет.ПолучитьОбласть("ЗаявкаНаКомандировку");
	
	ОбластьСтроительство = Макет.ПолучитьОбласть("ШапкаСтроительство");
	
	Предприятия = Новый Массив;
	МассивСтатей = Новый Массив;
	//Формируем массив предприятий
	Для каждого Т Из Ссылка Цикл
		Если Предприятия.Найти(Т.ЦФО) = Неопределено Тогда
			Предприятия.Добавить(Т.ЦФО);
			Для каждого ТекСтрока Из Т.СЗ Цикл
				Если МассивСтатей.Найти(ТекСтрока.СтатьяБДДС) = Неопределено Тогда
					МассивСтатей.Добавить(ТекСтрока.СтатьяБДДС);	
				КонецЕсли;
				Если МассивСтатей.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено Тогда
					МассивСтатей.Добавить(ТекСтрока.СтатьяЗатрат);	
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;		
	КонецЦикла;
	
	ТабДокИтог.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	ТабДок = Новый ТабличныйДокумент;
	
	//////////////////////////вывод СЗ на печать
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.Д_ЗаявкаНаКорректировкуБюджета КАК Д_ЗаявкаНаКорректировкуБюджета
	|ГДЕ
	|	Д_ЗаявкаНаКорректировкуБюджета.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.СогласованиеДоговораСтроительство Тогда
			
			ОбластьСтроительство.Параметры.Ссылка 				= Выборка.Ссылка;
			ОбластьСтроительство.Параметры.НаименованиеДоговора	= Выборка.НаименованиеДоговора;
			ОбластьСтроительство.Параметры.НомерСтр 			= Выборка.НомерДоговора;
			ОбластьСтроительство.Параметры.ЧислоСтр 			= Формат(Выборка.ДатаДоговора, "ДФ=dd");
			ОбластьСтроительство.Параметры.МесяцСтр 			= Формат(Выборка.ДатаДоговора, "ДФ=ММММ");
			ОбластьСтроительство.Параметры.ГодСтр 				= Формат(Выборка.ДатаДоговора, "ДФ=гггг");
			ОбластьСтроительство.Параметры.КонтрагентСтр 		= Выборка.Контрагент;
			ОбластьСтроительство.Параметры.ЮрЛицоСтр 			= Выборка.ЮрЛицоКомпании;
			ОбластьСтроительство.Параметры.ПредметДоговораСтр 	= Выборка.Текстовка;
			ОбластьСтроительство.Параметры.ЦФОСтр 				= Выборка.СтрЦФО;
			ОбластьСтроительство.Параметры.КомментарийСтр 		= Выборка.Комментарий;
			ОбластьСтроительство.Параметры.ПроектСтр 			= Выборка.Предприятие;
			ОбластьСтроительство.Параметры.СтатьяДДССтр 		= Выборка.СтатьяБДДС;
			ОбластьСтроительство.Параметры.ОбъектСтр			= Выборка.Объект;
			ТабДок.Вывести(ОбластьСтроительство);
			
			Пока ВыборкаПоФайлам.Следующий() Цикл 
				ОбластьПрикрепление.Параметры.Вложение = Строка(ВыборкаПоФайлам.Файл);
				ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
				ТабДок.Вывести(ОбластьПрикрепление);
			КонецЦикла;	
			
		Иначе
			//Если Выборка.ЦФОвТЧ Тогда
			СуфиксЦФО = "ЦФО";
			//Иначе
			//	СуфиксЦФО = "";		
			//КонецЕсли;
			
			ТабличнаяЧастьСЗ = Выборка.СЗ.Выгрузить();
			
			ВыводитьВалютуДокументаКорректировки = Ложь;
			
			Для Каждого ТекСтр Из ТабличнаяЧастьСЗ Цикл
				ВалютаВСтроке = ?(ЗначениеЗаполнено(ТекСтр.Валюта), ТекСтр.Валюта, УЧ_Сервер.НациональнаяВалюта());
				Если Не ТекСтр.ЦФО.ОсновнаяВалютаУчета = ВалютаВСтроке Тогда
					ВыводитьВалютуДокументаКорректировки = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			СуффиксВал = ?(ВыводитьВалютуДокументаКорректировки, "Вал", "");
			
			ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ШапкаТЧ" + СуфиксЦФО + СуффиксВал);
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал" + СуфиксЦФО);
						
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.Приказ Тогда
				ОбластьЗаголовок.Параметры.Ссылка = "Приказ " + Прав(Выборка.Ссылка, 34);
			Иначе	
				ОбластьЗаголовок.Параметры.Ссылка = Выборка.Ссылка;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьЗаголовок);
			
			ОбластьШапка.Параметры.Дата = Выборка.Дата;
			ОбластьШапка.Параметры.Комментарий = Выборка.Комментарий;
			ОбластьШапка.Параметры.ВидСЗ = ?(Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаКадровоеДвижение, "" + Выборка.ВидСЗ + " (" + Выборка.ВидКадровогоДвижения + ")", Выборка.ВидСЗ);
			// имя пользователя и должность
			ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, ?(ПустаяСтрока(Выборка.Автор), Выборка.Предприятие.Финансист, Выборка.Автор));
			ОбластьШапка.Параметры.ОтКого = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
			
			// закомментированно 01.03.13 строка
			//ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Кому);
			//ОбластьШапка.Параметры.Кому = ?(ПустаяСтрока(Выборка.Кому), "ДКФ", Строка(ИмяДолжность.ПредставлениеПользователя) + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), " " + "(" + Строка(ИмяДолжность.Должность) + ")", ""));
			
			СтрокаКому = "";		
			Для ИндСтр = 0 По Выборка.Ссылка.Рецензенты.Количество() - 1 Цикл
				
				ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Ссылка.Рецензенты[ИндСтр].Пользователь);
				СтрокаКому = СтрокаКому + Строка(ИмяДолжность.ПредставлениеПользователя) + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), " " + ИмяДолжность.Должность, "") + ?(ИндСтр <> Выборка.Ссылка.Рецензенты.Количество() - 1, "; ", ""); 
				
			КонецЦикла;
			
			ОбластьШапка.Параметры.Кому = ?(ПустаяСтрока(Выборка.Кому), "ДКФ", СтрокаКому);
			
			ОбластьШапка.Параметры.ЦФО = Строка(Выборка.Предприятие) + ?(Выборка.Предприятие.УчетПоПодразделениям, " (" + Строка(Выборка.Подразделение) + ")", "");
			
			ТабДок.Вывести(ОбластьШапка);
			
			// статус 
			ОбластьШапкаСтатус.Параметры.ТекущийСтатус = БПСервер.ПолучитьТекущуюТочкуМаршрута(Ссылка);
			Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.Приказ Тогда
				ОбластьШапкаСтатус.Параметры.Действующий = "(" +Строка(?(Выборка.НеДействующий, "Не действующий", "Действующий"))+")";
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьШапкаСтатус);
			
			//Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаКомандировочные Тогда
			//	ЗаполнитьЗначенияСвойств(ОбластьКомандировка.Параметры, Выборка);
			//	ТабДок.Вывести(ОбластьКомандировка);
			//КонецЕсли;	
			
			Пока ВыборкаПоФайлам.Следующий() Цикл 
				ОбластьПрикрепление.Параметры.Вложение = Строка(ВыборкаПоФайлам.Файл);
				ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
				ТабДок.Вывести(ОбластьПрикрепление);
			КонецЦикла;	
			//Иначе
			//	ТабДок.Вывести(ОбластьПустыеСтроки);
			//КонецЕсли;
			
			СтруктураПоиска = Новый Структура("Заявка", Выборка);
			
			//выводим позиции СЗ
			СуммаВсегоДДС = 0;
			СуммаВсегоФР = 0;
			СуммаВсегоСеб = 0;
			ОбъемПрва = 0;
			
			//ТабличнаяЧастьСЗ = Новый ТаблицаЗначений;
			ТабличнаяЧастьСЗ.Колонки.Добавить("СуммаКП",,"СуммаКП",);
			ТабличнаяЧастьСЗ.Колонки.Добавить("СуммаКПДДС",,"СуммаКПДДС",);
			
			//вывод для лимитов
			//Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.СогласованиеУсловийКлиента Тогда
			//	
			//	ЗначенияЛимитов = РасчитатьЛимиты(Предприятия, МассивСтатей, Выборка);	
			//	ТЗ = Выборка.УсловияКлиента.Выгрузить();
			//	
			//	Для каждого ТекСтрока Из ТЗ Цикл
			//		ОбластьЛимитДЗ1.Параметры.Заполнить(ТекСтрока);
			//		ОбластьЛимитДЗ1.Параметры.Дата = Формат(ТекСтрока.Дата, "ДФ=dd.MM.yyyy");
			//		 
			//		ТабДок.Вывести(ОбластьЛимитДЗ1);		
			//		Если НачалоМесяца(Выборка.Дата) > ТекСтрока.Дата Тогда
			//			ТабДок.Вывести(ОбластьЛимитДЗ2);		
			//		Иначе
			//		КонецЕсли;
			//		ОбластьЛимитДЗ.Параметры.Заполнить(ТекСтрока);
			//		ТабДок.Вывести(ОбластьЛимитДЗ);
			//		
			//	    //Выводим реестр договоренностей
			//		ТЗ_Договоренностей = Выборка.ДоговоренностиКлиента.Выгрузить();
			//		СтруктураПоиска = Новый Структура("Контрагент", ТекСтрока.Контрагент);
			//		ОтобранныеСтр = ТЗ_Договоренностей.НайтиСтроки(СтруктураПоиска);
			//		Если ТЗ_Договоренностей.Количество() Тогда
			//			Для каждого ТекСТрока2 Из ОтобранныеСтр Цикл
			//				ОбластьЛимитДЗ4.Параметры.Заполнить(ТекСтрока2);
			//				ТабДок.Вывести(ОбластьЛимитДЗ4);
			//			КонецЦикла; 
			//		Иначе	
			//			ОбластьЛимитДЗ4.Параметры.Заполнить(ТекСтрока);
			//			ТабДок.Вывести(ОбластьЛимитДЗ4);
			//		КонецЕсли;
			//		//конец вывода реестра договоренностей
			//		ОбластьЛимитДЗ3.Параметры.Заполнить(ТекСтрока);
			//		ТабДок.Вывести(ОбластьЛимитДЗ3);
			//	КонецЦикла; 
			//КонецЕсли;
			
			Если Не ПустаяСтрока(Выборка.Текстовка) Тогда
				ОбластьТекстовка.Параметры.Текстовка = Выборка.Текстовка;
				ТабДок.Вывести(ОбластьТекстовка);		
			КонецЕсли;
			
			
			Если Выборка.ДобавитьТаблицу Тогда
				ТабличныеДанные = Выборка.ТабличныеДанные.Получить();
				ТабДок.Вывести(ОбластьОтступ);
				ТабДок.Присоединить(ТабличныеДанные);		
			КонецЕсли;
			
			Если ТабличнаяЧастьСЗ.Количество() Тогда
				АктСценарий = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(Выборка.Дата);
				ОбластьШапкаТЧ.Параметры.СценарийПлана = АктСценарий;
				//Если НЕ Выборка.ЦФОвТЧ Тогда
				//	ОбластьШапкаТЧ.Параметры.ЦФО = Выборка.ЦФО;			
				//КонецЕсли;			
				Строчка = Строка(АктСценарий.ВидБюджета);
				НомерВхождения = Найти(Строчка, "Бюджет");
				Вид = Лев(Строчка, СтрДлина(Строчка) - 6); 
				ОбластьШапкаТЧ.Параметры.ВидБюджета = Вид + " бюджет";
				
				ТабДок.Вывести(ОбластьШапкаТЧ);
			КонецЕсли;
			
			Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаКадровоеДвижение Тогда
				
				ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
				Если ТекПользователь.ДоступенУправленческийУчет Тогда
					ВидСодержанияКадры = ?(Выборка.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение,"|СодержаниеКадрыПолноеПеремещение" ,"|СодержаниеКадрыПолное");
				Иначе
					ВидСодержанияКадры = ?(Выборка.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение,"|СодержаниеКадрыБезУпрУчетаПеремещение" ,"|СодержаниеКадрыБезУпрУчета");
				КонецЕсли;

				ЗаявкаКадры = Выборка.Ссылка;
				
				ПоляИРазделыШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + "|ПоляИРазделыКадры");
				ТабДок.Вывести(ПоляИРазделыШапкаКадры);
								
				Если ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.ПриемНаРаботу Тогда
					ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьШапкаКадры);
					
					ПоляИРазделыМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыМотивацияПрием);
					
					ОбластьМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьМотивацияПрием.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьМотивацияПрием);
					
					ПоляИРазделыПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыПрочееПрием);
					
					ОбластьПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьПрочееПрием.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьПрочееПрием);
				ИначеЕсли ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение Тогда	
					ЗапросПоТекущимДанным = Новый Запрос;
					ЗапросПоТекущимДанным.Текст = 
					"ВЫБРАТЬ
					|	КадровоеСостояниеСотрудниковРегл.Сотрудник,
					|	КадровоеСостояниеСотрудниковРегл.Должность КАК ДолжностьРеглТек,
					|	КадровоеСостояниеСотрудниковРегл.ЮрЛицо КАК ЮрЛицоТек,
					|	КадровоеСостояниеСотрудниковРегл.Подразделение КАК ПодразделениеЮрЛицаТек,
					|	КадровоеСостояниеСотрудниковРегл.РазмерЗП КАК РазмерОфициальнойЗПТек,
					|	КадровыеДвижения.ПолнаяСтавка КАК ПолнаяСтавкаТек,
					|	КадровыеДвижения.ПроцентСтавки КАК ПроцентСтавкиТек,
					|	КадровыеДвижения.ОбщийРазмерЗП КАК ОбщийРазмерЗПТек,
					|	КадровыеДвижения.ПремиальнаяЧасть КАК ПремиальнаяЧастьТек,
					|	КадровыеДвижения.КомпенсацияАрендыЖилья КАК КомпенсацияАрендыЖильяТек,
					|	КадровыеДвижения.КомпенсацияСотовойСвязи КАК КомпенсацияСотовойСвязиТек,
					|	КадровыеДвижения.ДатаРегл КАК ДатаРеглТек,
					|	КадровыеДвижения.Период КАК ПериодТек,
					|	КадровыеДвижения.ПрочаяИнформация КАК ПрочаяИнформацияТек,
					|	NULL КАК ПредприятиеУпрТек,
					|	NULL КАК ДолжностьУпрТек,
					|	NULL КАК ПодразделениеУпрТек,
					|	NULL КАК РазмерУчетнойЗПТек
					|ИЗ
					|	Документ.КадровыеДвижения КАК КадровыеДвижения
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровоеСостояниеСотрудниковРегл КАК КадровоеСостояниеСотрудниковРегл
					|		ПО КадровыеДвижения.Ссылка = КадровоеСостояниеСотрудниковРегл.Регистратор
					|ГДЕ
					|	КадровоеСостояниеСотрудниковРегл.НомерСтроки = &НомерСтроки
					|	И &РегламентированныйУчет
					|	И КадровыеДвижения.Ссылка = &Ссылка
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	КадровоеСостояниеСотрудниковУпр.Сотрудник,
					|	NULL,
					|	NULL,
					|	NULL,
					|	NULL,
					|	КадровыеДвижения.ПолнаяСтавка,
					|	КадровыеДвижения.ПроцентСтавки,
					|	КадровыеДвижения.ОбщийРазмерЗП,
					|	КадровыеДвижения.ПремиальнаяЧасть,
					|	КадровыеДвижения.КомпенсацияАрендыЖилья,
					|	КадровыеДвижения.КомпенсацияСотовойСвязи,
					|	КадровыеДвижения.ДатаРегл,
					|	КадровыеДвижения.Период,
					|	КадровыеДвижения.ПрочаяИнформация,
					|	КадровоеСостояниеСотрудниковУпр.Предприятие,
					|	КадровоеСостояниеСотрудниковУпр.Должность,
					|	КадровоеСостояниеСотрудниковУпр.Подразделение,
					|	КадровоеСостояниеСотрудниковУпр.РазмерЗП
					|ИЗ
					|	Документ.КадровыеДвижения КАК КадровыеДвижения
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровоеСостояниеСотрудниковУпр КАК КадровоеСостояниеСотрудниковУпр
					|		ПО КадровыеДвижения.Ссылка = КадровоеСостояниеСотрудниковУпр.Регистратор
					|ГДЕ
					|	КадровоеСостояниеСотрудниковУпр.НомерСтроки = &НомерСтроки
					|	И &УправленческийУчет
					|	И КадровыеДвижения.Ссылка = &Ссылка";
					ЗапросПоТекущимДанным.УстановитьПараметр("Ссылка", Выборка.ДокументКадровогоДвижения);
					ЗапросПоТекущимДанным.УстановитьПараметр("НомерСтроки", Выборка.НомерСтрокиКадровогоДвижения);
					ЗапросПоТекущимДанным.УстановитьПараметр("УправленческийУчет", Выборка.УправленческийУчет);
					ЗапросПоТекущимДанным.УстановитьПараметр("РегламентированныйУчет", Выборка.РегламентированныйУчет);
					ВыборкаПоТекущимДанным = ЗапросПоТекущимДанным.Выполнить().Выбрать();
					ВыборкаПоТекущимДанным.Следующий();
					
					ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
					ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ВыборкаПоТекущимДанным);
					ТабДок.Присоединить(ОбластьШапкаКадры);
					
					ПоляИРазделыМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыМотивацияПрием);
					
					ОбластьМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьМотивацияПрием.Параметры, ЗаявкаКадры);
					ЗаполнитьЗначенияСвойств(ОбластьМотивацияПрием.Параметры, ВыборкаПоТекущимДанным);
					ТабДок.Присоединить(ОбластьМотивацияПрием);
					
					ПоляИРазделыПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыПрочееПрием);
					
					ОбластьПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьПрочееПрием.Параметры, ЗаявкаКадры);
					ЗаполнитьЗначенияСвойств(ОбластьПрочееПрием.Параметры, ВыборкаПоТекущимДанным);
					ТабДок.Присоединить(ОбластьПрочееПрием);
				ИначеЕсли ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Увольнение Тогда
					ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьШапкаКадры);
					
					ПоляИРазделыУсловияУвольнения = Макет.ПолучитьОбласть("УсловияУвольнения" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыУсловияУвольнения);
					
					ОбластьУсловияУвольнения = Макет.ПолучитьОбласть("УсловияУвольнения" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьУсловияУвольнения.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьУсловияУвольнения);
					
					ПоляИРазделыПрочееУвольнение = Макет.ПолучитьОбласть("ПрочееУвольнение" + "|ПоляИРазделыКадры");
					ТабДок.Вывести(ПоляИРазделыПрочееУвольнение);
					
					ОбластьПрочееУвольнение = Макет.ПолучитьОбласть("ПрочееУвольнение" + ВидСодержанияКадры);
					ЗаполнитьЗначенияСвойств(ОбластьПрочееУвольнение.Параметры, ЗаявкаКадры);
					ТабДок.Присоединить(ОбластьПрочееУвольнение);
				КонецЕсли;
				
			КонецЕсли;	
			
			Для каждого Выборка2 Из ТабличнаяЧастьСЗ Цикл
				
				Если Выборка.ЦФОвТЧ Тогда
					ТекПредприятие = Выборка2.ЦФО;
				Иначе
					ТекПредприятие = Выборка.ЦФО;			
				КонецЕсли;
				//Сообщить(ТекПредприятие);
				
				ЗапретПлана = БПСервер.ЗапретПлана(Выборка.Предприятие, Выборка.ЦФО, Выборка2.СтатьяБДДС);
				
				//СтруктураПоискаСтатьиЗатрат = Новый Структура("Предприятия, Статья, Деятельность", ТекПредприятие, Выборка2.СтатьяЗатрат, Выборка2.ВидДеятельности);
				//СтруктураПоискаСтатьиДенег = Новый Структура("Предприятия, Статья", ТекПредприятие, Выборка2.СтатьяБДДС);
				//СтруктураПоискаСтатьи91 = Новый Структура("Предприятия, Статья", ТекПредприятие, Выборка2.СтатьяЗатрат);
				СтруктураРезультат1 = Новый Структура("Предприятия", ТекПредприятие);
				
				НомерСтрочки = 4;
				
				Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
					НомерСтрочки = 1;				
				КонецЕсли;
				
				//Если Выборка2.Признак = Перечисления.Д_ПризнакСписания.Деньги Тогда
				//	НомерСтрочки = 3;				
				//КонецЕсли;
				
				ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + СуфиксЦФО + СуффиксВал);
				//ОбластьДанные.Параметры.СуммаКП = 0;
				//Если НомерСтрочки = 0 ИЛИ НомерСтрочки = 4 ИЛИ НомерСтрочки = 1 Тогда
				//	ОбластьДанные.Параметры.СуммаКПДДС = 0;
				//КонецЕсли;
				
				
				//находим лимиты в выборке
				//ВыборкаЗатраты = ЗначенияЛимитов.РезультатЗатраты.Выбрать();
				//ВыборкаДеньги = ЗначенияЛимитов.РезультатДеньги.Выбрать();
				//ВыборкаЗатраты91 = ЗначенияЛимитов.РезультатЗатраты91.Выбрать();
				//Если Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.СогласованиеУсловийКлиента И НЕ ЗначенияЛимитов.Результат1 = Неопределено Тогда
				//	ВыборкаОбъем = ЗначенияЛимитов.Результат1.Выбрать();
				//	Если ВыборкаОбъем.НайтиСледующий(СтруктураРезультат1) Тогда
				//		ОбъемПрва = ВыборкаОбъем.КоличествоОборот;
				//	КонецЕсли;
				//КонецЕсли;
				
				//Если ВыборкаДеньги.НайтиСледующий(СтруктураПоискаСтатьиДенег) И НЕ ЗапретПлана Тогда
				//	ЛимитДенег = ВыборкаДеньги.СуммаППДДС;
				//Иначе
				ЛимитДенег = 0;
				//КонецЕсли;
				
				ЛимитСебест = 0;
				УменьшьшениеСС = Ложь;
				
				//Если Выборка.ЛимитВручную Тогда //если стоит галочка лимит вручную
				
				Если Выборка2.СуммаПП = Выборка2.СуммаППДДС Тогда
					НомерСтрочки = 0;
					Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
						НомерСтрочки = 2;
					КонецЕсли;
				КонецЕсли;
				ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + СуфиксЦФО + СуффиксВал);
				
				Если Выборка2.СуммаСеб Тогда
					УменьшьшениеСС = Истина;
				КонецЕсли;
				
				ОбластьДанные.Параметры.СуммаПП = ?(НомерСтрочки = 3, Выборка2.СуммаППДДС, Выборка2.СуммаПП);
				
				СтруктураРасшифровки = Новый Структура;
				СтруктураРасшифровки.Вставить("Заявка", Выборка.Ссылка);
				СтруктураРасшифровки.Вставить("НомерСтроки", Выборка2.НомерСтроки);
				СтруктураРасшифровки.Вставить("ОтменаОплаты", Выборка2.ОтменаОплаты);
				//ОбластьДанные.Параметры.ТекСтрокаЗаявки = СтруктураРасшифровки;
				
				//Если Выборка2.ОтменаОплаты Тогда
				//	//ОбластьДанные.ТекущаяОбласть.Шрифт = ШрифтыСтиля.ШрифтТекста.Зачеркивание;
				//	ОбластьДанные.Параметры.Пояснение = Строка(Выборка2.Рецензент) + " отменил пункт СЗ. Комментарии:";
				//	Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
				//Иначе
				//	ОбластьДанные.Параметры.Пояснение = "";
				//	Картинка = БиблиотекаКартинок.Остановить;
				//КонецЕсли;
				
				//ОбластьДанные.Рисунки["ОтменаОплатыКартинка" + НомерСтрочки + СуфиксЦФО].Картинка = Картинка;
				
				Выборка2.СуммаКП = Выборка2.СуммаПП + Выборка2.СуммаСеб;
				Выборка2.СуммаКПДДС = Выборка2.СуммаППДДС + Выборка2.СуммаБДДС;
				
				//Если НомерСтрочки = 0 ИЛИ НомерСтрочки = 4 ИЛИ НомерСтрочки = 1 Тогда
				//	ОбластьДанные.Параметры.СуммаКПДДС = ОбластьДанные.Параметры.СуммаКПДДС + Выборка2.СуммаБДДС;				
				//КонецЕсли;
				
				ОбластьДанные.Параметры.Заполнить(Выборка2);
				
				ОбластьДанные.Параметры.Вал = Выборка2.ЦФО.ОсновнаяВалютаУчета;
				
				Если ЗначениеЗаполнено(СуффиксВал) Тогда
					ОбластьДанные.Параметры.ВалКорр = ?(ЗначениеЗаполнено(Выборка2.Валюта), Выборка2.Валюта, УЧ_Сервер.НациональнаяВалюта());
				КонецЕсли;
				
				ТабДок.Вывести(ОбластьДанные);
				
				СуммаВсегоФР = СуммаВсегоФР + ?(НЕ УменьшьшениеСС И НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаСеб, 0);
				СуммаВсегоСеб = СуммаВсегоСеб + ?(УменьшьшениеСС И НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаСеб, 0);
				СуммаВсегоДДС = СуммаВсегоДДС + ?(НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаБДДС, 0);
				
			КонецЦикла;
			
			Если ТабличнаяЧастьСЗ.Количество() Тогда
				
				ОбластьПодвал.Параметры.Итого = "Итого доп. расходов ДС:";
				ОбластьПодвал.Параметры.СуммаЗатрат = СуммаВсегоДДС;
				ТабДок.Вывести(ОбластьПодвал);
				
				//Если СуммаВсегоСеб Тогда
				ОбластьПодвал.Параметры.Итого = "Итого увеличение себестоимости " + ?(ОбъемПрва, "(" + Строка(Окр(СуммаВсегоСеб / ОбъемПрва, 2)) + " р./дал)", "") + ":";
				ОбластьПодвал.Параметры.СуммаЗатрат = ?(СуммаВсегоСеб, СуммаВсегоСеб, "Нет");
				ТабДок.Вывести(ОбластьПодвал);		
				//КонецЕсли;
				
				////Если СуммаВсегоФР Тогда
				//ОбластьПодвал.Параметры.Итого = "Итого уменьшение ФинРеза:";
				//ОбластьПодвал.Параметры.СуммаЗатрат = ?(СуммаВсегоФР, СуммаВсегоФР, "Нет");
				//ТабДок.Вывести(ОбластьПодвал);		
				//КонецЕсли;
			КонецЕсли;
			
			//показ этапов согласования СЗ/ознакомления
			
		КонецЕсли;
		
		// печать проверки соответствия {
		ТабДокПроверкаСоответствия = Новый ТабличныйДокумент;
		Документы.Д_ЗаявкаНаОплату.ПроверкаСоответствия(ТабДокПроверкаСоответствия, Ссылка);
		//}
		
		ТабДокРецензенты = Новый ТабличныйДокумент;
		БПСервер.ПоказатьРецензентов(ТабДокРецензенты, Выборка.Ссылка, Неопределено, Ссылка, "Штампы", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
		
		ТабДокИтог.Вывести(ТабДок);
		ТабДокИтог.Вывести(ТабДокПроверкаСоответствия,, "СтолбцыПроверкиСоответствия");
		ТабДокИтог.Вывести(ТабДокРецензенты);
		ТабДокИтог.Автомасштаб = Истина;
		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьДо01042011(ТабДок, Ссылка) Экспорт
	Макет = Документы.Д_СлужебнаяЗаписка.ПолучитьМакет("ПечатьДо010411");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТекстовка = Макет.ПолучитьОбласть("Текстовка");
	ОбластьШапкаЗаг = Макет.ПолучитьОбласть("ШтампыЗаголовок");
	ОбластьШтампы = Макет.ПолучитьОбласть("Штампы");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Согласование2.Ссылка КАК БизнесПроцесс,
	|	Согласование2.ДатаНачала КАК ДатаНачала,
	|	Согласование2.ДатаЗавершения,
	|	Согласование2.Описание,
	|	ВЫБОР
	|		КОГДА Согласование2.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(Согласование2.ДатаНачала, &ТекДата, МИНУТА) / 60
	|		ИНАЧЕ РАЗНОСТЬДАТ(Согласование2.ДатаНачала, Согласование2.ДатаЗавершения, МИНУТА) / 60
	|	КОНЕЦ КАК ДлительностьЧас,
	|	ВЫБОР
	|		КОГДА Согласование2.Завершен = ЛОЖЬ
	|			ТОГДА ""(в процессе)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВПроцессе,
	|	ВЫБОР
	|		КОГДА Согласование2.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(Согласование2.ДатаНачала, &ТекДата, МИНУТА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(Согласование2.ДатаНачала, Согласование2.ДатаЗавершения, МИНУТА)
	|	КОНЕЦ КАК ДлительностьМин,
	|	Согласование2.Заявка,
	|	Согласование2.ПроверенОФК,
	|	Согласование2.СогласованОФК,
	|	Согласование2.КомментарииОФК,
	|	Согласование2.ПользовательОФК,
	|	Согласование2.Автор
	|ИЗ
	|	БизнесПроцесс.Согласование2 КАК Согласование2
	|ГДЕ
	|	Согласование2.Заявка.Ссылка В(&Заявка)";
	Запрос.Параметры.Вставить("Заявка", Ссылка);
	Запрос.Параметры.Вставить("ТекДата", ТекущаяДата());
	
	РезультатБП = Запрос.Выполнить();
	
	Предприятия = Новый Массив;
	МассивСтатей = Новый Массив;
	//Формируем массив предприятий
	Для каждого Т Из Ссылка Цикл
		Если Предприятия.Найти(Т.ЦФО) = Неопределено Тогда
			Предприятия.Добавить(Т.ЦФО);
			Для каждого ТекСтрока Из Т.СЗ Цикл
				Если МассивСтатей.Найти(ТекСтрока.СтатьяБДДС) = Неопределено Тогда
					МассивСтатей.Добавить(ТекСтрока.СтатьяБДДС);	
				КонецЕсли;
				Если МассивСтатей.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено Тогда
					МассивСтатей.Добавить(ТекСтрока.СтатьяЗатрат);	
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;		
	КонецЦикла;
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	
	//////////////////////////вывод СЗ на печать
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	
	ВставлятьРазделительСтраниц = Ложь;
	Для каждого Выборка Из Ссылка цикл
		
		Если Выборка.ЦФОвТЧ Тогда
			СуфиксЦФО = "ЦФО";
		Иначе
			СуфиксЦФО = "";		
		КонецЕсли;
		
		ОбластьШапкаТЧ = Макет.ПолучитьОбласть("ШапкаТЧ" + СуфиксЦФО);
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал" + СуфиксЦФО);
		
		ЗначенияЛимитов = РасчитатьЛимитыДо01042011(Предприятия, МассивСтатей, Выборка);
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = Выборка;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Дата = Выборка.Дата;
		ОбластьШапка.Параметры.Комментарий = Выборка.Комментарий;
		ОбластьШапка.Параметры.ОтКого = ?(ПустаяСтрока(Выборка.Автор), Выборка.Предприятие.Финансист, Выборка.Автор);;
		ОбластьШапка.Параметры.Кому = ?(ПустаяСтрока(Выборка.Кому), "ДКФ", Выборка.Кому);
		
		
		ТабДок.Вывести(ОбластьШапка);
		
		СтруктураПоиска = Новый Структура("Заявка", Выборка);
		
		
		//выводим позиции СЗ
		СуммаВсегоДДС = 0;
		СуммаВсегоФР = 0;
		СуммаВсегоСеб = 0;
		ОбъемПрва = 0;
		
		ТабличнаяЧастьСЗ = Выборка.СЗ.Выгрузить();
		
		//ТабличнаяЧастьСЗ = Новый ТаблицаЗначений;
		ТабличнаяЧастьСЗ.Колонки.Добавить("СуммаКП",,"СуммаКП",);
		ТабличнаяЧастьСЗ.Колонки.Добавить("СуммаКПДДС",,"СуммаКПДДС",);
		
		
		
		Если Не ПустаяСтрока(Выборка.Текстовка) Тогда
			ОбластьТекстовка.Параметры.Текстовка = Выборка.Текстовка;
			ТабДок.Вывести(ОбластьТекстовка);		
		КонецЕсли;
		
		Если ТабличнаяЧастьСЗ.Количество() Тогда
			ОбластьШапкаТЧ.Параметры.СценарийПлана = ЗначенияЛимитов.АктуальныйСценарий;
			Если НЕ Выборка.ЦФОвТЧ Тогда
				ОбластьШапкаТЧ.Параметры.ЦФО = Выборка.ЦФО;			
			КонецЕсли;			
			Строчка = Строка(ЗначенияЛимитов.АктуальныйСценарий.ВидБюджета);
			НомерВхождения = Найти(Строчка, "Бюджет");
			Вид = Лев(Строчка, СтрДлина(Строчка) - 6); 
			ОбластьШапкаТЧ.Параметры.ВидБюджета = Вид + " бюджет";
			
			ТабДок.Вывести(ОбластьШапкаТЧ);
		КонецЕсли;
		
		
		
		
		Для каждого Выборка2 Из ТабличнаяЧастьСЗ Цикл
			
			
			Если Выборка.ЦФОвТЧ Тогда
				ТекПредприятие = Выборка2.ЦФО;
			Иначе
				ТекПредприятие = Выборка.ЦФО;			
			КонецЕсли;
			//Сообщить(ТекПредприятие);
			
			
			ЗапретПлана = БПСервер.ЗапретПлана(Выборка.Предприятие, Выборка.ЦФО, Выборка2.СтатьяБДДС);
			
			СтруктураПоискаСтатьиЗатрат = Новый Структура("Предприятия, Статья, Деятельность", ТекПредприятие, Выборка2.СтатьяЗатрат, Выборка2.ВидДеятельности);
			СтруктураПоискаСтатьиДенег = Новый Структура("Предприятия, Статья", ТекПредприятие, Выборка2.СтатьяБДДС);
			СтруктураПоискаСтатьи91 = Новый Структура("Предприятия, Статья", ТекПредприятие, Выборка2.СтатьяЗатрат);
			СтруктураРезультат1 = Новый Структура("Предприятия", ТекПредприятие);
			
			
			НомерСтрочки = 4;
			
			Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
				НомерСтрочки = 1;				
			КонецЕсли;
			
			//Если Выборка2.Признак = Перечисления.Д_ПризнакСписания.Деньги Тогда
			//	НомерСтрочки = 3;				
			//КонецЕсли;
			
			ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + СуфиксЦФО);
			//ОбластьДанные.Параметры.СуммаКП = 0;
			//Если НомерСтрочки = 0 ИЛИ НомерСтрочки = 4 ИЛИ НомерСтрочки = 1 Тогда
			//	ОбластьДанные.Параметры.СуммаКПДДС = 0;
			//КонецЕсли;
			
			
			//находим лимиты в выборке
			ВыборкаЗатраты = ЗначенияЛимитов.РезультатЗатраты.Выбрать();
			ВыборкаДеньги = ЗначенияЛимитов.РезультатДеньги.Выбрать();
			ВыборкаЗатраты91 = ЗначенияЛимитов.РезультатЗатраты91.Выбрать();
			
			Если НЕ ЗначенияЛимитов.Результат1 = Неопределено Тогда
				ВыборкаОбъем = ЗначенияЛимитов.Результат1.Выбрать();
				Если ВыборкаОбъем.НайтиСледующий(СтруктураРезультат1) Тогда
					ОбъемПрва = ВыборкаОбъем.КоличествоОборот;
				КонецЕсли;
			КонецЕсли;
			
			
			
			
			Если ВыборкаДеньги.НайтиСледующий(СтруктураПоискаСтатьиДенег) И НЕ ЗапретПлана Тогда
				ЛимитДенег = ВыборкаДеньги.СуммаППДДС;
			Иначе
				ЛимитДенег = 0;
			КонецЕсли;
			
			ЛимитСебест = 0;
			УменьшьшениеСС = Ложь;
			
			Если Выборка.ЛимитВручную Тогда //если стоит галочка лимит вручную
				
				Если Выборка2.СуммаПП = Выборка2.СуммаППДДС Тогда
					НомерСтрочки = 0;
					Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
						НомерСтрочки = 2;
					КонецЕсли;
				КонецЕсли;
				ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + СуфиксЦФО);
				
				Если Выборка2.СуммаПП Тогда
					Если Выборка2.Признак = Перечисления.Д_ПризнакСписания.Себестоимость Тогда
						УменьшьшениеСС = Истина;
					КонецЕсли;					
				КонецЕсли;
				
				
			Иначе  //если лимит считается автоматически
				
				ПоискСеб = ВыборкаЗатраты.НайтиСледующий(СтруктураПоискаСтатьиЗатрат); 
				ПоискФР = ВыборкаЗатраты91.НайтиСледующий(СтруктураПоискаСтатьи91);
				
				Выборка2.СуммаППДДС =ЛимитДенег;
				
				Если ПоискСеб ИЛИ ПоискФР И НЕ ЗапретПлана Тогда
					
					ВыборкаЗатраты = ?(ПоискСеб, ВыборкаЗатраты, ВыборкаЗатраты91); 
					ЛимитСебест = ВыборкаЗатраты.СуммаПП;
					Если ЛимитСебест = ЛимитДенег Тогда
						НомерСтрочки = 0;
						Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
							НомерСтрочки = 2;
						КонецЕсли;
					КонецЕсли;
					ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + СуфиксЦФО);
					
					//Выборка2.СуммаППДДС =ЛимитДенег;
					Выборка2.СуммаПП =ЛимитСебест;
					
					Если ПоискСеб Тогда
						Если ВыборкаЗатраты.Счет = ПланыСчетов.Учетный.Счет20() Тогда
							УменьшьшениеСС = Истина;
						КонецЕсли;					
					КонецЕсли;
				конецесли;				
				
				
			КонецЕсли;
			
			
			
			ОбластьДанные.Параметры.СуммаПП = ?(НомерСтрочки = 3, Выборка2.СуммаППДДС, Выборка2.СуммаПП);
			
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Заявка", Выборка.Ссылка);
			СтруктураРасшифровки.Вставить("НомерСтроки", Выборка2.НомерСтроки);
			СтруктураРасшифровки.Вставить("ОтменаОплаты", Выборка2.ОтменаОплаты);
			//ОбластьДанные.Параметры.ТекСтрокаЗаявки = СтруктураРасшифровки;
			
			//Если Выборка2.ОтменаОплаты Тогда
			//	//ОбластьДанные.ТекущаяОбласть.Шрифт = ШрифтыСтиля.ШрифтТекста.Зачеркивание;
			//	ОбластьДанные.Параметры.Пояснение = Строка(Выборка2.Рецензент) + " отменил пункт СЗ. Комментарии:";
			//	Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
			//Иначе
			//	ОбластьДанные.Параметры.Пояснение = "";
			//	Картинка = БиблиотекаКартинок.Остановить;
			//КонецЕсли;
			
			//ОбластьДанные.Рисунки["ОтменаОплатыКартинка" + НомерСтрочки + СуфиксЦФО].Картинка = Картинка;
			
			
			Выборка2.СуммаКП = Выборка2.СуммаПП + Выборка2.СуммаСеб;
			Выборка2.СуммаКПДДС = Выборка2.СуммаППДДС + Выборка2.СуммаБДДС;
			
			
			//Если НомерСтрочки = 0 ИЛИ НомерСтрочки = 4 ИЛИ НомерСтрочки = 1 Тогда
			//	ОбластьДанные.Параметры.СуммаКПДДС = ОбластьДанные.Параметры.СуммаКПДДС + Выборка2.СуммаБДДС;				
			//КонецЕсли;
			
			ОбластьДанные.Параметры.Заполнить(Выборка2);
			
			ОбластьДанные.Параметры.Вал = ?(ЗначениеЗаполнено(Выборка2.Валюта), Выборка2.Валюта, УЧ_Сервер.НациональнаяВалюта());
			
			ТабДок.Вывести(ОбластьДанные);
			
			СуммаВсегоФР = СуммаВсегоФР + ?(НЕ УменьшьшениеСС И НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаСеб, 0);
			СуммаВсегоСеб = СуммаВсегоСеб + ?(УменьшьшениеСС И НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаСеб, 0);
			СуммаВсегоДДС = СуммаВсегоДДС + ?(НЕ Выборка2.ОтменаОплаты, Выборка2.СуммаБДДС, 0);
			
			
		КонецЦикла;
		
		
		Если ТабличнаяЧастьСЗ.Количество() Тогда
			
			ОбластьПодвал.Параметры.Итого = "Итого доп. расходов ДС:";
			ОбластьПодвал.Параметры.СуммаЗатрат = СуммаВсегоДДС;
			ТабДок.Вывести(ОбластьПодвал);
			
			//Если СуммаВсегоСеб Тогда
			ОбластьПодвал.Параметры.Итого = "Итого увеличение себестоимости " + ?(ОбъемПрва, "(" + Строка(Окр(СуммаВсегоСеб / ОбъемПрва, 2)) + " р./дал)", "") + ":";
			ОбластьПодвал.Параметры.СуммаЗатрат = ?(СуммаВсегоСеб, СуммаВсегоСеб, "Нет");
			ТабДок.Вывести(ОбластьПодвал);		
			//КонецЕсли;
			
			//Если СуммаВсегоФР Тогда
			ОбластьПодвал.Параметры.Итого = "Итого уменьшение ФинРеза:";
			ОбластьПодвал.Параметры.СуммаЗатрат = ?(СуммаВсегоФР, СуммаВсегоФР, "Нет");
			ТабДок.Вывести(ОбластьПодвал);		
			//КонецЕсли;
		КонецЕсли;
		
		
		
		//показ этапов согласования СЗ
		ТабДок.НачатьГруппуСтрок("Показать согласование", Истина);
		
		
		// 09.10.12 должность из регистра сведений
		
		ЗапросСогласование = Новый Запрос;
		ЗапросСогласование.УстановитьПараметр("ДатаБП", Ссылка[0].ТекущийБизнесПроцесс.Дата);
		ЗапросСогласование.УстановитьПараметр("Ссылка", Ссылка);			
		ЗапросСогласование.Текст = "ВЫБРАТЬ
		|	Согласование2ДопСогласование.Ссылка КАК Ссылка,
		|	Согласование2ДопСогласование.НомерСтроки КАК НомерСтроки,
		|	Согласование2ДопСогласование.СубъектСогласования КАК СубъектСогласования,
		|	Согласование2ДопСогласование.Согласовано КАК Согласовано,
		|	Согласование2ДопСогласование.ТочкаДействия КАК ТочкаДействия,
		|	Согласование2ДопСогласование.Пройден КАК Пройден,
		|	Согласование2ДопСогласование.Пользователь КАК Пользователь,
		|	ДолжностиПользователяСрезПоследних.Должность КАК Должность,
		|	Согласование2ДопСогласование.Комментарии КАК Комментарии,
		|	Согласование2ДопСогласование.Автор КАК Автор
		|ИЗ
		|	БизнесПроцесс.Согласование2.ДопСогласование КАК Согласование2ДопСогласование
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДолжностиПользователя.СрезПоследних(&ДатаБП, ) КАК ДолжностиПользователяСрезПоследних
		|		ПО Согласование2ДопСогласование.Пользователь = ДолжностиПользователяСрезПоследних.Пользователь
		|ГДЕ
		|	Согласование2ДопСогласование.Ссылка.Заявка В(&Ссылка)";
		
		ВыборкаСогласование = ЗапросСогласование.Выполнить().Выбрать();
		
		ВыборкаБп = РезультатБП.Выбрать();
		Пока ВыборкаБп.НайтиСледующий(СтруктураПоиска) Цикл
			
			ОбластьШапкаЗаг.Параметры.Заполнить(ВыборкаБп);
			
			ОбластьШапкаЗаг.Параметры.ПроверенОФК = ВыборкаБп.ПроверенОФК;
			ОбластьШапкаЗаг.Параметры.СогласованОФК = ВыборкаБп.СогласованОФК;
			ОбластьШапкаЗаг.Параметры.КомментарииОФК = ВыборкаБп.КомментарииОФК + "(" + Строка(ВыборкаБп.ПользовательОФК) + ")";
			//ОбластьШапкаЗаг.Параметры.ПользовательОФК = ВыборкаБп.ПользовательОФК;
			Оттиск = ВыборкаБп.ПользовательОФК.ФайлКартинки;
			Если НЕ ПустаяСтрока(Оттиск) Тогда
				Картинка = Оттиск.ФайлХранилище.Получить();
			Иначе	
				Картинка = Новый Картинка;
			КонецЕсли;
			Если Не Картинка = Неопределено Тогда
				ОбластьШапкаЗаг.Рисунки.ОттискОФК.Картинка = Картинка;
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьШапкаЗаг, 1, "Показать согласование", Ложь);
			Пока ВыборкаСогласование.Следующий() Цикл
				
				Если НЕ ПустаяСтрока(ВыборкаСогласование.Пользователь) Тогда
					ОбластьШтампы.Параметры.Заполнить(ВыборкаСогласование);
					Если НЕ ПустаяСтрока(ВыборкаСогласование.Должность) Тогда
						ОбластьШтампы.Параметры.Должность = "(" + Строка(ВыборкаСогласование.Должность) + ")";					
					КонецЕсли;					
					Оттиск = ВыборкаСогласование.Пользователь.ФайлКартинки;
					Если НЕ ПустаяСтрока(Оттиск) Тогда
						Картинка = Оттиск.ФайлХранилище.Получить();
					Иначе	
						Картинка = Новый Картинка;
					КонецЕсли;
					Если Не Картинка = Неопределено Тогда
						ОбластьШтампы.Рисунки.Оттиск.Картинка = Картинка;
					КонецЕсли;
					ОбластьШтампы.Параметры.Отметка = ?(ВыборкаСогласование.Согласовано, "Да.", "Нет.");
					ТабДок.Вывести(ОбластьШтампы, 1, "Показать согласование", Ложь);
				КонецЕсли;
			КонецЦикла;
			
			
		КонецЦикла; 
		
		ТабДок.ЗакончитьГруппуСтрок();
		
		
		
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура ПрямоеПревышениеБюджетаПечать(ТабДок, Ссылка) Экспорт
	
	СКД = ПолучитьМакет("ПревышениеБюджета");
	
	СКД.Параметры.НачалоПериода.Значение = НачалоМесяца(Ссылка.Дата);
	СКД.Параметры.КонецПериода.Значение = КонецМесяца(Ссылка.Дата);
	СКД.Параметры.Ссылка.Значение = Ссылка;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, СКД.НастройкиПоУмолчанию, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры	

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыСеанса.СтруктураПараметровФормСпискаДокументооборота = Новый ФиксированнаяСтруктура(Новый Структура("ВидВнутреннегоДокумента, ИмяДокумента, ФормаВыбора", Справочники.Д_ВидыВнутреннихДокументов.КорректировкаБюджета, "Д_ЗаявкаНаКорректировкуБюджета", ВидФормы = "ФормаВыбора"));
		ВыбраннаяФорма = "ЖурналДокументов.ВнутренниеДокументы.Форма.ФормаСписка";
	КонецЕсли;
КонецПроцедуры
