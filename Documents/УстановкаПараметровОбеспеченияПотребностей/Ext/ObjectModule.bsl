
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПредприятия.Ссылка КАК Подразделение,
	|	СтруктураПредприятия.Родитель
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	СтруктураПредприятия.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктураПредприятия.Ссылка,
	|	СтруктураПредприятия.Родитель.Родитель
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	СтруктураПредприятия.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Предприятие);
	ТаблицаПодразделений = Запрос.Выполнить().Выгрузить();
	
	Движения.ПараметрыОбеспеченияПотребности.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		СтрокиПодразделений = ТаблицаПодразделений.НайтиСтроки(Новый Структура("Родитель", ТекСтрокаТовары.Подразделение));
		Если СтрокиПодразделений.Количество() = 0 Тогда
			Движение = Движения.ПараметрыОбеспеченияПотребности.Добавить();
			Движение.Период = Дата;
			Движение.Предприятие = Предприятие;
			Движение.Подразделение = ТекСтрокаТовары.Подразделение;
			Движение.Склад = Склад;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.МетодОбеспечения = ТекСтрокаТовары.МетодОбеспечения;
			Движение.СпособОбеспечения = ТекСтрокаТовары.СпособОбеспечения;
			Движение.НормаПотребления = ТекСтрокаТовары.НормаПотребления;
			Движение.МинимальныйЗапас = ТекСтрокаТовары.МинимальныйЗапас;
			Движение.МаксимальныйЗапас = ТекСтрокаТовары.МаксимальныйЗапас;
			Движение.Упаковка = ТекСтрокаТовары.Упаковка;
			Движение.СрокИсполнения = ТекСтрокаТовары.СрокИсполнения;
			Движение.ВыведенИзАссортимента = Ложь;
			Движение.КратностьПоставки = ТекСтрокаТовары.КратностьПоставки;
			Движение.ЗаказВОфисе = ТекСтрокаТовары.ЗаказВОфисе;
		Иначе
			Для Каждого СтрокаПодразделений Из СтрокиПодразделений Цикл
				Движение = Движения.ПараметрыОбеспеченияПотребности.Добавить();
				Движение.Период = Дата;
				Движение.Предприятие = Предприятие;
				Движение.Подразделение = СтрокаПодразделений.Подразделение;
				Движение.Склад = Склад;
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.МетодОбеспечения = ТекСтрокаТовары.МетодОбеспечения;
				Движение.СпособОбеспечения = ТекСтрокаТовары.СпособОбеспечения;
				Движение.НормаПотребления = ТекСтрокаТовары.НормаПотребления;
				Движение.МинимальныйЗапас = ТекСтрокаТовары.МинимальныйЗапас;
				Движение.МаксимальныйЗапас = ТекСтрокаТовары.МаксимальныйЗапас;
				Движение.Упаковка = ТекСтрокаТовары.Упаковка;
				Движение.СрокИсполнения = ТекСтрокаТовары.СрокИсполнения;
				Движение.ВыведенИзАссортимента = Ложь;
				Движение.КратностьПоставки = ТекСтрокаТовары.КратностьПоставки;
				Движение.ЗаказВОфисе = ТекСтрокаТовары.ЗаказВОфисе;
			КонецЦикла;
		КонецЕсли;	
	КонецЦикла;
	Для Каждого ТекСтрокаТовары Из ВыводИзАссортимента Цикл
		СтрокиПодразделений = ТаблицаПодразделений.НайтиСтроки(Новый Структура("Родитель", ТекСтрокаТовары.Подразделение));
		Если СтрокиПодразделений.Количество() = 0 Тогда
			Движение = Движения.ПараметрыОбеспеченияПотребности.Добавить();
			Движение.Период = Дата;
			Движение.Предприятие = Предприятие;
			Движение.Подразделение = ТекСтрокаТовары.Подразделение;
			Движение.Склад = Склад;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.ВыведенИзАссортимента = Истина;
		Иначе
			Для Каждого СтрокаПодразделений Из СтрокиПодразделений Цикл
				Движение = Движения.ПараметрыОбеспеченияПотребности.Добавить();
				Движение.Период = Дата;
				Движение.Предприятие = Предприятие;
				Движение.Подразделение = СтрокаПодразделений.Подразделение;
				Движение.Склад = Склад;
				Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
				Движение.ВыведенИзАссортимента = Истина;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Если Не ЗначениеЗаполнено(ТекСтрокаТовары.Подразделение) Тогда
			ТекСтрокаТовары.Подразделение = Подразделение;
		КонецЕсли;
	КонецЦикла;	
	
	Для Каждого ТекСтрокаТовары Из ВыводИзАссортимента Цикл
		Если Не ЗначениеЗаполнено(ТекСтрокаТовары.Подразделение) Тогда
			ТекСтрокаТовары.Подразделение = Подразделение;
		КонецЕсли;
	КонецЦикла;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
		
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры
