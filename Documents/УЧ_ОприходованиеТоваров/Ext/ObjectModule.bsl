Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();		
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ДатаДокументаИзменена") Тогда
		Движения.Учетный.Записать();	
	КонецЕсли;
	
	ПеренесеноИзАстор = (УчетПартий.Количество() > 0);
	
	СоответствиеСчета = ПолучитьСоответствияСчетовНоменклатуры();
	
	СчетНедостач = ПланыСчетов.Учетный.НайтиПоКоду("94");
	СоответствияСчетаСписания = Новый Соответствие;
	СоответствияСчетаСписания.Вставить(ПланыСчетов.Учетный.Счет41(), ПланыСчетов.Учетный.Счет9002());
	СоответствияСчетаСписания.Вставить(ПланыСчетов.Учетный.Счет43(), ПланыСчетов.Учетный.Счет9002());
	СоответствияСчетаСписания.Вставить(ПланыСчетов.Учетный.ПустаяСсылка(), ПланыСчетов.Учетный.Счет9002());
	//СоответствияСчетаСписания.Вставить(ПланыСчетов.Учетный.Счет1001(), СчетПроизводство);
	ПодразделениеПоУмолчанию = Справочники.СтруктураПредприятия.НайтиПоНаименованию("Производство_Основное", Истина);
	СтатьяПоУмолчанию = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Списание материалов и ГП (недостачи/излишки)", Истина);
	СлужбаПоУмолчанию = Справочники.Субконто.НайтиПоНаименованию("Производство_общее");
	ПроизводственноеПодразделение = Подразделение.ПроизводственноеПодразделение;
	СчетЗатратыПроизводство = ПланыСчетов.Учетный.Счет25();//.ОсновноеПрво;
	СчетСебестоимость = ПланыСчетов.Учетный.Счет9002();//.Себестоимость;
	//ДвижениеПоЦенамНоменклатуры();//Сож+ МРЦ

	
	Движения.Учетный.Записывать = Истина;
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
		
		//Если УЧ_Сервер.НеЗаполненностьКоличестваИЦеныВТЧДок(ТекСтрокаТабличнаяЧасть) = Истина Тогда
		//	Отказ = Истина;
		//	Сообщить("У документа "+ ЭтотОбъект + ", в строке №"+ТекСтрокаТабличнаяЧасть.НомерСтроки+" не заполнено количество и цена.");
		//КонецЕсли;

		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		Движение.Предприятия = Предприятие;
		
		Если ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.СчетУчета) Тогда
			Движение.СчетДт = ТекСтрокаТабличнаяЧасть.СчетУчета;
		Иначе
			Движение.СчетДт = СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Товар);
		КонецЕсли;
		
		Если УЧ_Сервер.ЕстьВидСубконто(Движение.СчетДт,"Материалы") Или УЧ_Сервер.ЕстьВидСубконто(Движение.СчетДт,"Номенклатура") Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,ТекСтрокаТабличнаяЧасть.Товар);
		КонецЕсли;
		Если УЧ_Сервер.ЕстьВидСубконто(Движение.СчетДт,"Склады") Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,Склад);
		КонецЕсли;
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.СчетЗатрат) Тогда
			Движение.СчетКт = СчетНедостач;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаТабличнаяЧасть.Товар);
		Иначе
			Движение.СчетКт = ТекСтрокаТабличнаяЧасть.СчетЗатрат;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаТабличнаяЧасть.Субконто1);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,ТекСтрокаТабличнаяЧасть.Субконто2);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,3,ТекСтрокаТабличнаяЧасть.Субконто3);
		КонецЕсли;
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;
		КонецЕсли;
		
		Если Движение.СчетКт.Количественный Тогда
			Движение.КоличествоКт = ТекСтрокаТабличнаяЧасть.Количество;
		КонецЕсли;
		
		Если Движение.СчетДт.Количественный Тогда
			Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество;
		КонецЕсли;
		
		Если ПеренесеноИзАстор Тогда
			НайденныеСтроки = УчетПартий.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаТабличнаяЧасть.Товар));
			ПолученнаяСумма = 0;
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ПолученнаяСумма = ПолученнаяСумма + НайденнаяСтрока.СуммаНДС + НайденнаяСтрока.СуммаБезНДС;
			КонецЦикла;
			Движение.Сумма = ПолученнаяСумма;
		Иначе	
			Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма;
		КонецЕсли;
		
		Движение.Содержание = Комментарий;
		
		//Проводки по доведению себестоимости
		Если НЕ Окр(ТекСтрокаТабличнаяЧасть.КорректировкаСебестоимости) = 0 Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.Период = Дата;
			Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
			Движение.Предприятия = Предприятие;
			
			Если ПроизводственноеПодразделение Тогда
				Движение.СчетДт = СчетЗатратыПроизводство;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,СтатьяПоУмолчанию);
				Если Движение.СчетДт.ВидыСубконто.Количество() >= 2 Тогда
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,СлужбаПоУмолчанию);
				КонецЕсли;
			Иначе	
				Движение.СчетДт = СчетСебестоимость;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,ТекСтрокаТабличнаяЧасть.Товар);
			КонецЕсли;	
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли;
			Движение.СчетКт = ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.СчетУчета), ТекСтрокаТабличнаяЧасть.СчетУчета, СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Товар));
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;	
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаТабличнаяЧасть.Товар);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Склад);
			
			Движение.Сумма = ТекСтрокаТабличнаяЧасть.КорректировкаСебестоимости;
			Движение.Содержание = "Корректировка до с/с последнего оприходования " + Формат(ТекСтрокаТабличнаяЧасть.Цена, "ЧДЦ=2") ;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьСоответствияСчетовНоменклатуры()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧДокумента.Товар
	|ПОМЕСТИТЬ ВТ_ТЧДокумента
	|ИЗ
	|	&ТЧДокумента КАК ТЧДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЧДокумента.Товар,
	|	Номенклатура.Счет10 КАК ТоварСчет10
	|ПОМЕСТИТЬ ВТ_ТЧДокументаСоСчетами
	|ИЗ
	|	ВТ_ТЧДокумента КАК ВТ_ТЧДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТЧДокумента.Товар = Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЧДокументаСоСчетами.Товар КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_ТЧДокументаСоСчетами.ТоварСчет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ ВТ_ТЧДокументаСоСчетами.ТоварСчет10
	|	КОНЕЦ КАК Счет
	|ИЗ
	|	ВТ_ТЧДокументаСоСчетами КАК ВТ_ТЧДокументаСоСчетами
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЧДокументаСоСчетами.Товар,
	|	ВЫБОР
	|		КОГДА ВТ_ТЧДокументаСоСчетами.ТоварСчет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	|			ТОГДА &Счет41
	|		ИНАЧЕ ВТ_ТЧДокументаСоСчетами.ТоварСчет10
	|	КОНЕЦ";
	ТЧДокумента = Новый ТаблицаЗначений;
	ТЧДокумента.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
		СтрокаТЧДокумента = ТЧДокумента.Добавить();
		СтрокаТЧДокумента.Товар = СтрокаТЧ.Товар;
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("ТЧДокумента", ТЧДокумента);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Null, ПланыСчетов.Учетный.Счет41());
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПланыСчетов.Учетный.Счет41());
	Возврат Соответствия;	
	
КонецФункции // ()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("КоличественныеПоказателиПроводокДляПроверки", сабОперОбщегоНазначения.ПолучитьКоличественныеПоказателиПроводок(Ссылка));
	
	ПеренесеноИзАстор = (УчетПартий.Количество() > 0);

	Если Не ПеренесеноИзАстор Тогда
		УстановитьПривилегированныйРежим(Истина);
		
		СоответствиеСчета = ПолучитьСоответствияСчетовНоменклатуры();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧДокумента.Товар,
		|	ТЧДокумента.Количество,
		|	ТЧДокумента.Предприятие,
		|	ТЧДокумента.Склад,
		|	ТЧДокумента.ВидДеятельности,
		|	ТЧДокумента.УчетПоПодразделениям
		|ПОМЕСТИТЬ ВТ_ТЧДокумента
		|ИЗ
		|	&ТЧДокумента КАК ТЧДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧДокумента.Товар КАК Номенклатура,
		|	СУММА(ВТ_ТЧДокумента.Количество) КАК Количество,
		|	ВТ_ТЧДокумента.Предприятие,
		|	ВТ_ТЧДокумента.Склад,
		|	ВТ_ТЧДокумента.ВидДеятельности КАК Подразделение,
		|	ВТ_ТЧДокумента.УчетПоПодразделениям
		|ПОМЕСТИТЬ ТЧДока
		|ИЗ
		|	ВТ_ТЧДокумента КАК ВТ_ТЧДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЧДокумента.Товар,
		|	ВТ_ТЧДокумента.Предприятие,
		|	ВТ_ТЧДокумента.Склад,
		|	ВТ_ТЧДокумента.ВидДеятельности,
		|	ВТ_ТЧДокумента.УчетПоПодразделениям
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетныйОстатки.Субконто1 КАК Номенклатура,
		|	УчетныйОстатки.Субконто2 КАК Склад,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Цена,
		|	УчетныйОстатки.Счет,
		|	УчетныйОстатки.Предприятия,
		|	УчетныйОстатки.Подразделение
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Остатки(
		|			&ПозицияДокумента,
		|			Счет В (&ВыбСчет),
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И Субконто1 В (&ВыбТовары)
		|				И Субконто2 = &ВыбСклад
		|				И Подразделение В (&Подразделение)) КАК УчетныйОстатки";
		ВыбСклад = Склад;
		ВыбСчет = Новый Массив;
		ВыбТовары = Новый Массив;
		Для каждого ТекСтрока Из СоответствиеСчета Цикл
			Если ЗначениеЗаполнено(ТекСтрока.Ключ) Тогда
				ВыбТовары.Добавить(ТекСтрока.Ключ);
				Если ВыбСчет.Найти(ТекСтрока.Значение) = Неопределено Тогда
					ВыбСчет.Добавить(ТекСтрока.Значение);
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла;
		
		МоментКонца = МоментВремени();
		
		ТЧДокумента = Новый ТаблицаЗначений;
		ТЧДокумента.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТЧДокумента.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
		ТЧДокумента.Колонки.Добавить("Предприятие", Новый ОписаниеТипов("СправочникСсылка.Предприятия"));
		ТЧДокумента.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		ТЧДокумента.Колонки.Добавить("ВидДеятельности", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		ТЧДокумента.Колонки.Добавить("УчетПоПодразделениям", Новый ОписаниеТипов("Булево",,,,, Новый КвалификаторыДвоичныхДанных()));
		УчетПоПодразделениям = Предприятие.УчетПоПодразделениям;
		Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			СтрокаТЧДокумента = ТЧДокумента.Добавить();
			СтрокаТЧДокумента.Товар = СтрокаТЧ.Товар;
			СтрокаТЧДокумента.Количество = СтрокаТЧ.Количество;
			СтрокаТЧДокумента.Предприятие = Предприятие;
			СтрокаТЧДокумента.Склад = Склад;
			СтрокаТЧДокумента.ВидДеятельности = Подразделение;
			СтрокаТЧДокумента.УчетПоПодразделениям = УчетПоПодразделениям;
		КонецЦикла;	
		
		Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
		Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.УстановитьПараметр("ВыбСклад", ВыбСклад);
		Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
		Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
		Запрос.УстановитьПараметр("ТЧДокумента", ТЧДокумента);
		Запрос.УстановитьПараметр("Период", Дата);
		
		МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		
		РезультатОстатки = МассивЗапросов[2].Выгрузить();
		//РезультатЦены = МассивЗапросов[3].Выгрузить();
		
		Для Каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
			СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрокаТабличнаяЧасть.Товар, Склад, СоответствиеСчета.Получить(ТекСтрокаТабличнаяЧасть.Товар));
			ВыборкаДетальныеЗаписи = РезультатОстатки.НайтиСтроки(СтруктураПоиска);
			Если ВыборкаДетальныеЗаписи.Количество() Тогда
				Если ТекСтрокаТабличнаяЧасть.Количество <> 0 Тогда
					Если Не ВыборкаДетальныеЗаписи[0].Цена = 0 Тогда 
						ТекСтрокаТабличнаяЧасть.Цена = ВыборкаДетальныеЗаписи[0].Цена;
						ТекСтрокаТабличнаяЧасть.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрокаТабличнаяЧасть.Количество;
					КонецЕсли;
				КонецЕсли;
				Если ВыборкаДетальныеЗаписи[0].Количество < 0 Тогда
					ТекСтрокаТабличнаяЧасть.КорректировкаСебестоимости = (ВыборкаДетальныеЗаписи[0].Сумма + ТекСтрокаТабличнаяЧасть.Сумма) - ТекСтрокаТабличнаяЧасть.Цена * (ТекСтрокаТабличнаяЧасть.Количество + ВыборкаДетальныеЗаписи[0].Количество);	
				Иначе
					ТекСтрокаТабличнаяЧасть.КорректировкаСебестоимости = 0;
				КонецЕсли;	
			Иначе
				//СтрокиЗакупочныхЦен = РезультатЦены.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаТабличнаяЧасть.Товар));
				//Для Каждого СтрокаЦен Из СтрокиЗакупочныхЦен Цикл
				//	Если ТекСтрокаТабличнаяЧасть.Количество <> 0 Тогда
				//		Если Не СтрокаЦен.Цена = 0 Тогда
				//			ТекСтрокаТабличнаяЧасть.Цена = СтрокаЦен.Цена;
				//			ТекСтрокаТабличнаяЧасть.Сумма = СтрокаЦен.Цена * ТекСтрокаТабличнаяЧасть.Количество;
				//		КонецЕсли;
				//	КонецЕсли;
				//КонецЦикла;
			КонецЕсли;
		КонецЦикла;	
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	СуммаДокумента = ТабличнаяЧасть.Итог("Сумма");
	
	//дата изменена
	Если ЗначениеЗаполнено(Ссылка) И НЕ Дата = Ссылка.Дата Тогда
		ДополнительныеСвойства.Вставить("ДатаДокументаИзменена", Истина);		
	КонецЕсли;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_Инвентаризация") Тогда
		//Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка);
		//Если НЕ Отказ = Неопределено Тогда
		//	Возврат;		
		//КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, ,"Дата, Номер, Комментарий");
		ДокОснование = ДанныеЗаполнения.Ссылка;
		Склад = сабОперОбщегоНазначения.ПолучитьСкладПоДопСвойству(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Склад инвентаризаций (Склады)", Истина), Предприятие);
		Подразделение = ДанныеЗаполнения.Подразделение;
		Организация = ДанныеЗаполнения.Организация;
		//Сож+
		Дата = ДанныеЗаполнения.Дата;
		//Сож-
		Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
			
			Если СтрокаТЧ.Номенклатура.АлкогольнаяПродукция Тогда //д1 кроме алко, алко в отдельной команде
				Продолжить;			
			КонецЕсли;
			
			Если СтрокаТЧ.КоличествоОтклонение > 0 Или (СтрокаТЧ.КоличествоОтклонение = 0 И СтрокаТЧ.СуммаОтклонение > 0) Тогда
				СтрокаТЧСписания = ТабличнаяЧасть.Добавить();
				СтрокаТЧСписания.Товар = СтрокаТЧ.Номенклатура;
				СтрокаТЧСписания.Количество = СтрокаТЧ.КоличествоОтклонение;
				СтрокаТЧСписания.Сумма = СтрокаТЧ.СуммаОтклонение;
				СтрокаТЧСписания.Цена = ?(СтрокаТЧ.КоличествоОтклонение = 0, 0, СтрокаТЧ.СуммаОтклонение/СтрокаТЧ.КоличествоОтклонение);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Склад = Справочники.Склады.ПустаяСсылка();	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Если Не Подразделение.ПроизводственноеПодразделение Тогда
	//	ТЧДока = Новый ТаблицаЗначений;
	//	ТЧДока.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	//	ТЧДока.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", , , Новый КвалификаторыЧисла(15,3)));
	//	
	//	Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
	//		СтрокаТЧДока = ТЧДока.Добавить();
	//		СтрокаТЧДока.Номенклатура = СтрокаТЧ.Товар;
	//		СтрокаТЧДока.НомерСтроки = СтрокаТЧ.НомерСтроки;
	//	КонецЦикла;	
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТЧДокумента.НомерСтроки,
	//	|	ТЧДокумента.Номенклатура
	//	|ПОМЕСТИТЬ ВТ_ТЧДока
	//	|ИЗ
	//	|	&ТЧДокумента КАК ТЧДокумента
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_ТЧДока.НомерСтроки,
	//	|	ВТ_ТЧДока.Номенклатура,
	//	|	ВТ_ТЧДока.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	//	|ИЗ
	//	|	ВТ_ТЧДока КАК ВТ_ТЧДока
	//	|ГДЕ
	//	|	(ВТ_ТЧДока.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Сырье)
	//	|			ИЛИ ВТ_ТЧДока.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Материалы))";
	//	Запрос.УстановитьПараметр("ТЧДокумента", ТЧДока);
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	Если Не РезультатЗапроса.Пустой() Тогда
	//		Отказ = Истина;
	//		Выборка = РезультатЗапроса.Выбрать();
	//		Пока Выборка.Следующий() Цикл
	//			Сообщение = Новый СообщениеПользователю();
	//			Сообщение.Поле = "ТабличнаяЧасть[" + Строка(Выборка.НомерСтроки - 1) + "].Товар";
	//			Сообщение.Текст = "В строке " + Выборка.НомерСтроки + " выбрана номенклатура с неправильным типом: " + Выборка.ТипНоменклатуры;
	//			Сообщение.УстановитьДанные(ЭтотОбъект);
	//			Сообщение.Сообщить();
	//		КонецЦикла;
	//	КонецЕсли; 
	//КонецЕсли;	
	
КонецПроцедуры

Процедура ДвижениеПоЦенамНоменклатуры()
	//Сож+ движения цен номенклатуры по МРЦ	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(УЧ_ОприходованиеТоваровТабличнаяЧасть.МРЦ) КАК МРЦ,
		|	УЧ_ОприходованиеТоваровТабличнаяЧасть.Товар КАК Товар
		|ИЗ
		|	Документ.УЧ_ОприходованиеТоваров.ТабличнаяЧасть КАК УЧ_ОприходованиеТоваровТабличнаяЧасть
		|ГДЕ
		|	УЧ_ОприходованиеТоваровТабличнаяЧасть.Ссылка = &Ссылка
		|	И УЧ_ОприходованиеТоваровТабличнаяЧасть.МРЦ > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	УЧ_ОприходованиеТоваровТабличнаяЧасть.Товар";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Движения.ЦеныНоменклатуры.Записывать = Истина;	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Запись = Движения.ЦеныНоменклатуры.Добавить();
			Запись.Предприятие = Предприятие;
			Запись.Подразделение = Подразделение;
			Запись.ВидЦены = Справочники.ВидыЦен.Сигареты2;
			Запись.Номенклатура = ВыборкаДетальныеЗаписи.Товар;
			Запись.Цена = ВыборкаДетальныеЗаписи.МРЦ;
			Запись.МРЦ = ВыборкаДетальныеЗаписи.МРЦ;
			Запись.Период = Дата;
			Запись.Регистратор = Ссылка;
		КонецЦикла;	
	КонецЕсли;
	//Сож-

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РучнаяКорректировка = Ложь;
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры
