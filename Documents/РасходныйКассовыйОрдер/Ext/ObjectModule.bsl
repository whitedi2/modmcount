
&После("ПередЗаписью")
Процедура УУ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Модифицированность() Тогда
		сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);	
	КонецЕсли;
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура УУ_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") ИЛИ 
		(ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ЗаявкаНаФинансирование") И НЕ ДанныеЗаполнения.Свойство("ЭтоПКО")) Тогда
		// Заполнение шапки
		
		ЕстьСтруктура = Ложь;
		СуммаОстатка = 0;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ЗаявкаНаФинансирование") 
			 И ЗначениеЗаполнено(ДанныеЗаполнения.ЗаявкаНаФинансирование) Тогда
			ЕстьСтруктура = Истина;
			СуммаОстатка = ДанныеЗаполнения.СуммаДокумента - ДанныеЗаполнения.СуммаОплачено;
			
			Если СуммаОстатка < 0 Тогда
				СуммаОстатка = 0;			
			КонецЕсли;
			
			ДанныеЗаполнения = ДанныеЗаполнения.ЗаявкаНаФинансирование;
			
		КонецЕсли;
		
		ЭтоДанныеРеестра = Ложь;
		Реестр = Неопределено;
		ДанныеЗаявки = ДанныеЗаполнения;
		
		Если (ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("РеестрЗаявок") И ЗначениеЗаполнено(ДанныеЗаполнения.РеестрЗаявок)) 
			ИЛИ (ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование")) Тогда //получаем данные из строки
			
			НайденныеСтрокиРеестра = ДанныеЗаполнения.РеестрЗаявок.ЗаявкаБезнал.НайтиСтроки(Новый Структура("ЗаявкаНаФинансирование", ДанныеЗаполнения.Ссылка));
			Если НайденныеСтрокиРеестра.Количество() Тогда
				Реестр = ДанныеЗаполнения.РеестрЗаявок; 
				ДанныеЗаполнения = НайденныеСтрокиРеестра[0];
				ЭтоДанныеРеестра = Истина;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ТипЗнч(ДанныеЗаполнения.Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда // реестр без заявок
			
			НайденныеСтрокиРеестра = ДанныеЗаполнения.Заявка.ЗаявкаБезнал.НайтиСтроки(Новый Структура("УИДСтроки", ДанныеЗаполнения.УИДСтроки));

			Если НайденныеСтрокиРеестра.Количество() Тогда
				Реестр = ДанныеЗаполнения.Заявка;
				ДанныеЗаполнения = НайденныеСтрокиРеестра[0];
				ЭтоДанныеРеестра = Истина;
				ДанныеЗаявки = Новый Структура;
				ДанныеЗаявки.Вставить("Комментарий", Реестр.Комментарий);
				ДанныеЗаявки.Вставить("Ссылка", Реестр);
				ДанныеЗаявки.Вставить("ТипИсточника", Реестр.ТипИсточника);
				ДанныеЗаявки.Вставить("ВидОперации", ДанныеЗаполнения.ВидОперации);
				ДанныеЗаявки.Вставить("НазначениеПлатежаУчет", ДанныеЗаполнения.НазначениеПлатежа);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Дата, Номер, Проведен");
		Иначе
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		КонецЕсли;
		
		Содержание = ДанныеЗаполнения.НазначениеПлатежа + " / " + ДанныеЗаявки.Комментарий;
		СуммаДокумента = ?(СуммаОстатка, СуммаОстатка, ?(ЭтоДанныеРеестра, ДанныеЗаполнения.СуммаДДС, ДанныеЗаполнения.Сумма));
		
		Субконто2 = ДанныеЗаполнения.Источник;
		Если ЗначениеЗаполнено(Субконто2) Тогда
			Счет = УЧ_Сервер.ВернутьСчетПоИсточнику(Субконто2);
			Валюта1 = Субконто2.ВалютаДенежныхСредств;
			Организация = Субконто2.Владелец;
			//Если Не ЗначениеЗаполнено(Предприятие) Тогда
			//	Предприятие = ПП_Сервер.ПолучитьПредприятие(Дата, Субконто2);
			//КонецЕсли;
			//Если Не ЗначениеЗаполнено(Предприятие) Тогда
			//	Предприятие = ДанныеЗаполнения.ЦФО;
			//КонецЕсли;
		КонецЕсли;
		ГУИДОснования = ?(ЭтоДанныеРеестра, ДанныеЗаполнения.УИДСтроки, Неопределено);
		ДокОснование = ДанныеЗаявки.Ссылка;
		Если ДанныеЗаявки.ТипИсточника = Перечисления.Д_ИсточникиСредств.Нал Тогда
			ВидОперации = Перечисления.ВидыОперацийДвиженияДС.КассовыйОрдер;
		ИначеЕсли ДанныеЗаявки.ТипИсточника = Перечисления.Д_ИсточникиСредств.Казна Тогда
			ВидОперации = Перечисления.ВидыОперацийДвиженияДС.Взаимозачет;
		Иначе	
			ВидОперации = Перечисления.ВидыОперацийДвиженияДС.БанковскаяВыписка;
		КонецЕсли;
		Если ВидОперации = Перечисления.ВидыОперацийДвиженияДС.Взаимозачет Тогда
			ПриходРасход = Перечисления.ВидыОперацийПлатежноеПоручение.ВозмещениеОплат;	
		Иначе	
			ПриходРасход = ДанныеЗаявки.ВидОперации;
		КонецЕсли;
		
		Если ЭтоДанныеРеестра Тогда
			ДанныеРасшифровки = Реестр.РасшифровкиСтрок.НайтиСтроки(Новый Структура("УИДСтрокиЗаявки", ДанныеЗаполнения.УИДСтроки));
			КоличествоСтрокРасшифровки = ДанныеРасшифровки.Количество();
			Если НЕ КоличествоСтрокРасшифровки Тогда
				Если ЗначениеЗаполнено(ДанныеЗаполнения.ЗаявкаНаФинансирование) Тогда
					НовыйДокШаблон = Документы.Д_ЗаявкаНаОплату.СоздатьДокумент();
					ДанныеРасшифровки = НовыйДокШаблон.РасшифровкиСтрок.Выгрузить();
					Если ДанныеЗаполнения.ЗаявкаНаФинансирование.РасшифровкаПлатежа Тогда
						Для каждого ТекСтрока Из ДанныеЗаполнения.ЗаявкаНаФинансирование.ТабличнаяЧасть Цикл
							НоваяСтрокаДока = ДанныеРасшифровки.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаДока, ТекСтрока);
							НоваяСтрокаДока.ЦФО = ТекСтрока.Предприятие;
							НоваяСтрокаДока.ВалютнаяСумма = ТекСтрока.ВалСумма;
							НоваяСтрокаДока.УИДСтрокиЗаявки = ДанныеЗаполнения.УИДСтроки;
						КонецЦикла; 
					КонецЕсли;
					КоличествоСтрокРасшифровки = ДанныеРасшифровки.Количество();
				КонецЕсли;
			КонецЕсли;
		Иначе	
			ДанныеРасшифровки = ДанныеЗаполнения.ТабличнаяЧасть;
			КоличествоСтрокРасшифровки = ?(ДанныеЗаполнения.РасшифровкаПлатежа, ДанныеЗаполнения.ТабличнаяЧасть.Количество(), 0);
		КонецЕсли;
		
		Для ТекИндексСтроки = 0 По МАКС(КоличествоСтрокРасшифровки, 1) - 1 Цикл
			Если КоличествоСтрокРасшифровки Тогда
				ТекСтрока = ДанныеРасшифровки[ТекИндексСтроки];
			Иначе
				ТекСтрока = ДанныеЗаполнения;			
			КонецЕсли;
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.СуммаПлатежа = ?(СуммаОстатка, СуммаОстатка, ?(ЭтоДанныеРеестра, ТекСтрока.СуммаДДС, ТекСтрока.Сумма));
			//НоваяСтрока.ФинСтатья = ТекСтрока.СтатьяДДС;
			//НоваяСтрока.ФинЦФО = ТекСтрока.ЦФО;
			//НоваяСтрока.ФинПодразделение = ТекСтрока.Подразделение;
			//НоваяСтрока.КорСчет = Неопределено;
			//НоваяСтрока.Содержание = ДанныеЗаявки.НазначениеПлатежаУчет;
			
			//Если ТипЗнч(ДанныеЗаявки.Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
			//	Если КоличествоСтрокРасшифровки = 0 Тогда
			//		СтрокиБюджета = ДанныеЗаявки.Ссылка.СтрокиГрафикаБюджета.НайтиСтроки(Новый Структура("Использовать", Истина));
			//	Иначе	
			//		СтрокиБюджета =  ДанныеЗаявки.Ссылка.СтрокиГрафикаБюджета.НайтиСтроки(Новый Структура("УИДСтрокиРасшифровки, Использовать", ТекСтрока.УИДСтроки, Истина));
			//	КонецЕсли;
			//	Для каждого ТекСтрокаБюджета Из СтрокиБюджета Цикл
			//		НоваяСтрока.КлючАналитикиБюджета = Справочники.КлючиАналитикиБюджетов.НайтиПоРеквизиту("УИДСтроки", ТекСтрокаБюджета.УИДСтроки);
			//	КонецЦикла; 
			//КонецЕсли;
			
			//Если ВидОперации = Перечисления.ВидыОперацийДвиженияДС.Взаимозачет Тогда
			//	НоваяСтрока.КорСчет = ПланыСчетов.Учетный.НайтиПоКоду("79.01");
			//	НоваяСтрока.КорСубконто1 = ДанныеЗаполнения.Контрагент;
			//	НоваяСтрока.КорСубконто2 = ДанныеЗаполнения.Договор;
			//	
			//ИначеЕсли ПриходРасход = Перечисления.ВидыОперацийПлатежноеПоручение.ОплатаВНХ Тогда
			//	
			//Иначе
			//	
			//КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&После("ПриЗаписи")
Процедура УУ_ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(ДокОснование) Тогда
		
		ТекДокОсн = ДокОснование;
		ТекУИД = ГУИДОснования;
		
		НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ТекДокОсн);
		НаборЗаписей.Прочитать();
		НомерСтрокиЗаявки = ТекУИД;
		МассивКУдалению = Новый Массив;
		Для каждого ТекСтрока Из НаборЗаписей Цикл
			Если ТекСтрока.УИДСтрокиДокумента = НомерСтрокиЗаявки Тогда
				МассивКУдалению.Добавить(ТекСтрока);	
			КонецЕсли;
		КонецЦикла;
		Для каждого ТекСтрокаУд Из МассивКУдалению Цикл
			НаборЗаписей.Удалить(ТекСтрокаУд);		
		КонецЦикла; 
		//НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
		
		Если ЗначениеЗаполнено(ТекУИД) Тогда
			НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.УИДСтрокиДокумента.Установить(ТекУИД);
			НаборЗаписей.Прочитать();
			МассивКУдалению = Новый Массив;
			Для каждого ТекСтрока Из НаборЗаписей Цикл
				МассивКУдалению.Добавить(ТекСтрока);	
			КонецЦикла;
			Для каждого ТекСтрокаУд Из МассивКУдалению Цикл
				НаборЗаписей.Удалить(ТекСтрокаУд);		
			КонецЦикла; 
			//НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры


