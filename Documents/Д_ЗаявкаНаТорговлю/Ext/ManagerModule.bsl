
Процедура Печать(ТабДок, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено) Экспорт
	МакетТрейдЗакупка = Документы.Д_ЗаявкаНаТорговлю.ПолучитьМакет("МакетТрейд");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_ЗаявкаНаТорговлю.Ссылка,
	               |	Д_ЗаявкаНаТорговлю.ВерсияДанных,
	               |	Д_ЗаявкаНаТорговлю.ПометкаУдаления,
	               |	Д_ЗаявкаНаТорговлю.Номер,
	               |	Д_ЗаявкаНаТорговлю.Дата,
	               |	Д_ЗаявкаНаТорговлю.Проведен,
	               |	Д_ЗаявкаНаТорговлю.Автор,
	               |	Д_ЗаявкаНаТорговлю.Предприятие,
	               |	Д_ЗаявкаНаТорговлю.Подразделение,
	               |	Д_ЗаявкаНаТорговлю.Доступность,
	               |	Д_ЗаявкаНаТорговлю.СостояниеДокумента,
	               |	Д_ЗаявкаНаТорговлю.Файл,
	               |	Д_ЗаявкаНаТорговлю.ФизическийОбъем,
	               |	Д_ЗаявкаНаТорговлю.Цена,
	               |	Д_ЗаявкаНаТорговлю.ТранспортныеРасходы,
	               |	Д_ЗаявкаНаТорговлю.ВидДоставки,
	               |	Д_ЗаявкаНаТорговлю.Задолженность,
	               |	Д_ЗаявкаНаТорговлю.Примечания,
	               |	Д_ЗаявкаНаТорговлю.ТекущаяЗадача,
	               |	Д_ЗаявкаНаТорговлю.ТекущийБизнесПроцесс,
	               |	Д_ЗаявкаНаТорговлю.Номенклатура,
	               |	Д_ЗаявкаНаТорговлю.Верхи,
	               |	Д_ЗаявкаНаТорговлю.ФормаОплаты,
	               |	Д_ЗаявкаНаТорговлю.ОтсрочкаПлатежа,
	               |	Д_ЗаявкаНаТорговлю.ДатаПоставкиНач,
	               |	Д_ЗаявкаНаТорговлю.ОтветственноеЛицо,
	               |	Д_ЗаявкаНаТорговлю.КонтактноеЛицо,
	               |	Д_ЗаявкаНаТорговлю.Расстояние,
	               |	Д_ЗаявкаНаТорговлю.ПрочиеРасходы,
	               |	Д_ЗаявкаНаТорговлю.ПрочиеРасходыКомментарий,
	               |	Д_ЗаявкаНаТорговлю.ЦенаНДС,
	               |	Д_ЗаявкаНаТорговлю.ВерхНДС,
	               |	Д_ЗаявкаНаТорговлю.ТранспортныеРасходыНДС,
	               |	Д_ЗаявкаНаТорговлю.ПрочиеРасходыНДС,
	               |	Д_ЗаявкаНаТорговлю.Цена + Д_ЗаявкаНаТорговлю.ТранспортныеРасходы + Д_ЗаявкаНаТорговлю.Верхи + Д_ЗаявкаНаТорговлю.ПрочиеРасходы КАК ЦенаИтого,
	               |	Д_ЗаявкаНаТорговлю.АрхивЗаявок.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Автор,
	               |		Предприятие,
	               |		Подразделение,
	               |		Контрагент,
	               |		ФизическийОбъем,
	               |		Цена,
	               |		ТранспортныеРасходы,
	               |		ВидДоставки,
	               |		Задолженность,
	               |		Примечания,
	               |		Верхи,
	               |		ОтсрочкаПлатежа,
	               |		ДатаПоставкиНач,
	               |		ДатаАрхивации,
	               |		Номенклатура,
	               |		ФормаОплаты,
	               |		ОтветственноеЛицо,
	               |		КонтактноеЛицо,
	               |		Расстояние,
	               |		Сорность,
	               |		Влажность,
	               |		Крахмалистость,
	               |		ПрочиеРасходы,
	               |		ПрочиеРасходыКомментарий,
	               |		ЦенаНДС,
	               |		ВерхНДС,
	               |		ТранспортныеРасходыНДС,
	               |		ПрочиеРасходыНДС
	               |	),
	               |	Д_ЗаявкаНаТорговлю.ДатаПоставкиКон,
	               |	Д_ЗаявкаНаТорговлю.Грузоотправитель,
	               |	Д_ЗаявкаНаТорговлю.ЮрЛицо,
	               |	Д_ЗаявкаНаТорговлю.НомерДоговора,
	               |	Д_ЗаявкаНаТорговлю.ДатаДоговора,
	               |	Д_ЗаявкаНаТорговлю.ТипСырья,
	               |	Д_ЗаявкаНаТорговлю.ПроцентПредоплаты,
	               |	Д_ЗаявкаНаТорговлю.ВидЗаявки,
	               |	Д_ЗаявкаНаТорговлю.ВидТрейдинга
	               |ИЗ
	               |	Документ.Д_ЗаявкаНаТорговлю КАК Д_ЗаявкаНаТорговлю
	               |ГДЕ
	               |	Д_ЗаявкаНаТорговлю.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	
	// 11.10.2012 печать с учетом корректировок
	
	ЗапросКорр = Новый Запрос;
	ЗапросКорр.УстановитьПараметр("Ссылка", Ссылка);
	ЗапросКорр.Текст = "ВЫБРАТЬ
	                   |	Д_КорректировкаДокументаТЧ.Ссылка КАК Ссылка,
	                   |	Д_КорректировкаДокументаТЧ.Реквизит,
	                   |	Д_КорректировкаДокументаТЧ.ЗначениеДо,
	                   |	Д_КорректировкаДокументаТЧ.ЗначениеПосле,
	                   |	Д_КорректировкаДокументаТЧ.Основание,
	                   |	Д_КорректировкаДокументаТЧ.РеквизитИмя
	                   |ИЗ
	                   |	Документ.Д_КорректировкаДокумента.ТЧ КАК Д_КорректировкаДокументаТЧ
	                   |ГДЕ
	                   |	Д_КорректировкаДокументаТЧ.Ссылка.ДокОснование В(&Ссылка)
	                   |
	                   |УПОРЯДОЧИТЬ ПО
	                   |	Ссылка";
				  
	ТЗ_Корр = ЗапросКорр.Выполнить().Выгрузить();		
	
	ДеревоКорректировок = Новый ДеревоЗначений;
	ДеревоКорректировок.Колонки.Добавить("Ссылка");
	ДеревоКорректировок.Колонки.Добавить("Реквизит");
	ДеревоКорректировок.Колонки.Добавить("ЗначениеДо");
	ДеревоКорректировок.Колонки.Добавить("ЗначениеПосле");
	ДеревоКорректировок.Колонки.Добавить("Основание");
	ДеревоКорректировок.Колонки.Добавить("РеквизитИмя");
			
	Для Каждого СтрокаКорр Из ТЗ_Корр Цикл
		
		Если ДеревоКорректировок.Строки.Найти(СтрокаКорр.Ссылка, "Ссылка") = Неопределено Тогда
			
			НоваяСтрокаДок = ДеревоКорректировок.Строки.Добавить();
			НоваяСтрокаДок.Ссылка = СтрокаКорр.Ссылка;	
			НоваяСтрокаРеквизитов = НоваяСтрокаДок.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизитов, СтрокаКорр);
			
		Иначе
			
			СтрокаДок = ДеревоКорректировок.Строки.Найти(СтрокаКорр.Ссылка, "Ссылка");
			НоваяСтрокаРеквизитов = СтрокаДок.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизитов, СтрокаКорр);
			
		КонецЕсли;
		
	КонецЦикла;
	
	//
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	
	//////////////////////////вывод заявки на отгрузку на печать
	
	
	ВставлятьРазделительСтраниц = Ложь;
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекМакет = МакетТрейдЗакупка;
		
		ОбластьЗаголовок = ТекМакет.ПолучитьОбласть("Заголовок");
		ОбластьШапка = ТекМакет.ПолучитьОбласть("Шапка");
		// статус
		ОбластьШапкаСтатус = ТекМакет.ПолучитьОбласть("ШапкаСтатус");
		ОбластьПрикрепление = ТекМакет.ПолучитьОбласть("Прикрепление");
		ОбластьПустыеСтроки = ТекМакет.ПолучитьОбласть("ПустыеСтроки");
		ОбластьШтампы = ТекМакет.ПолучитьОбласть("Штампы");
		ОбластьСогласование = ТекМакет.ПолучитьОбласть("ШапкаСогласование");
		ОбластьСодержание = ТекМакет.ПолучитьОбласть("Содержание");
		ОбластьРеквизиты = ТекМакет.ПолучитьОбласть("Содержание|Реквизиты");
		ОбластьОригинал = ТекМакет.ПолучитьОбласть("Содержание|Оригинал");
		// учет корректировок
		ОбластьКорректировка = ТекМакет.ПолучитьОбласть("Содержание|Корректировка");
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = "Заявка на закупку " + Строка(Выборка.Номер) + " от " + Строка(Выборка.Дата);
		Если Выборка.ВидТрейдинга = "продажа" Тогда
			ОбластьЗаголовок.Параметры.Ссылка = "Заявка на продажу " + Строка(Выборка.Номер) + " от " + Строка(Выборка.Дата);
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Дата = Выборка.Дата;
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Автор);
		ОбластьШапка.Параметры.ОтКого = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		ТабДок.Вывести(ОбластьШапка);
		
		// статус
		ОбластьШапкаСтатус.Параметры.ТекущийСтатус = БПСервер.ПолучитьТекущуюТочкуМаршрута(Ссылка);
		ТабДок.Вывести(ОбластьШапкаСтатус);
		
		Пока ВыборкаПоФайлам.Следующий() Цикл 
			ОбластьПрикрепление.Параметры.Вложение = Строка(ВыборкаПоФайлам.Файл);
			ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
			ТабДок.Вывести(ОбластьПрикрепление);
		КонецЦикла;	
		//Иначе
		//	ТабДок.Вывести(ОбластьПустыеСтроки);
		//КонецЕсли;
		
		ОбластьОригинал.Параметры.Заполнить(Выборка);
		
		ОбластьОригинал.Параметры.ПериодПоставки = Формат(Выборка.ДатаПоставкиНач, "ДФ=dd.MM.yyyy") + " - " + Формат(Выборка.ДатаПоставкиКон, "ДФ=dd.MM.yyyy");
			
		//ТабДок.Вывести(ОбластьСодержание);
		ТабДок.Присоединить(ОбластьРеквизиты);
		ТабДок.Присоединить(ОбластьОригинал);
		
		// печать с учетом корректировок
		
		Для Каждого СтрокаДок Из ДеревоКорректировок.Строки Цикл
			
			ОбластьКорректировка.Параметры.КорректировкаСсылка = СтрокаДок.Ссылка;
			
			СтруктураПустыхЗначений = Новый Структура;

			Для Каждого СтрокаРеквизита Из СтрокаДок.Строки Цикл
				
				СтруктураЗначений = Новый Структура;
				СтруктураЗначений.Вставить(?(ЗначениеЗаполнено(СтрокаРеквизита.РеквизитИмя), СтрокаРеквизита.РеквизитИмя, СтрокаРеквизита.Реквизит), СтрокаРеквизита.ЗначениеПосле); 
				СтруктураПустыхЗначений.Вставить(?(ЗначениеЗаполнено(СтрокаРеквизита.РеквизитИмя), СтрокаРеквизита.РеквизитИмя, СтрокаРеквизита.Реквизит), "");				
				
				ОбластьКорректировка.Параметры.Заполнить(СтруктураЗначений);
				
			КонецЦикла;
			
			ТабДок.Присоединить(ОбластьКорректировка);
			
			ОбластьКорректировка.Параметры.Заполнить(СтруктураПустыхЗначений);
			
		КонецЦикла;

		
		
		//показ этапов согласования СЗ
		БПСервер.ПоказатьРецензентов(ТабДок, Выборка.Ссылка, Неопределено, Ссылка, "Отметка", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
		
		//ТабДок.НачатьГруппуСтрок("Показать согласование", Истина);
		//
		//СтруктураПоиска = Новый Структура("Заявка", Выборка.Ссылка);
		//ВыборкаБп = РезультатБП.Выбрать();
		//Пока ВыборкаБп.НайтиСледующий(СтруктураПоиска) Цикл
		//	
		//	ВыводимШапку = Истина;
		//	
		//	Пока ВыборкаСогласование.Следующий() Цикл
		//		
		//		Если НЕ ПустаяСтрока(ВыборкаСогласование.Пользователь) Тогда
		//			
		//			Если ВыводимШапку Тогда
		//				ТабДок.Вывести(ОбластьСогласование, 1, "Показать согласование", Ложь);			
		//				ВыводимШапку = Ложь;
		//			КонецЕсли;
		//			
		//			// 11.02.13 di имя пользователя и должность
		//			
		//			ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(ВыборкаСогласование.Ссылка.Дата, ВыборкаСогласование.Пользователь); 
		//						
		//			ОбластьШтампы.Параметры.Пользователь = ИмяДолжность.ПредставлениеПользователя;
		//			ОбластьШтампы.Параметры.Должность = ?(ЗначениеЗаполнено(ИмяДолжность.Должность), "(" + Строка(ИмяДолжность.Должность) + ")", "");
		//												
		//			Оттиск = ВыборкаСогласование.Пользователь.ФайлКартинки;
		//			Если НЕ ПустаяСтрока(Оттиск) Тогда
		//				Картинка = Оттиск.ФайлХранилище.Получить();
		//			Иначе	
		//				Картинка = Новый Картинка;
		//			КонецЕсли;
		//			Если Не Картинка = Неопределено Тогда
		//				ОбластьШтампы.Рисунки.Оттиск.Картинка = Картинка;
		//			КонецЕсли;
		//			ОбластьШтампы.Параметры.Отметка = ?(ВыборкаСогласование.Согласовано, "Да.", "Нет!");
		//			ТабДок.Вывести(ОбластьШтампы, 1, "Показать согласование", Ложь);
		//		КонецЕсли;
		//	КонецЦикла;
		//	
		//	
		//КонецЦикла; 
		//
		//ТабДок.ЗакончитьГруппуСтрок();
		//
		//
		//
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	//}}
КонецПроцедуры


Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		СтандартнаяОбработка = Ложь;
		//НовыйОтбор = Новый Структура("Тип", Тип("ДокументСсылка.Д_ЗаявкаНаТорговлю"));
		ПараметрыСеанса.СтруктураПараметровФормСпискаДокументооборота = Новый ФиксированнаяСтруктура(Новый Структура("ВидВнутреннегоДокумента, ФормаВыбора", Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаЗакупкуПродажу, ВидФормы = "ФормаВыбора"));
		ВыбраннаяФорма = "ЖурналДокументов.ВнутренниеДокументы.Форма.ФормаСписка";
	КонецЕсли;
КонецПроцедуры

