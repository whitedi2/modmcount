
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Функция создает страницу на форме.
//
Функция СоздатьСтраницу(ИмяСтраницы, Заголовок, Родитель, ВидГруппыФормы)

	НовыйЭлемент = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид                      = ВидГруппыФормы;
	НовыйЭлемент.Заголовок                = Заголовок;
	НовыйЭлемент.РастягиватьПоВертикали   = Истина;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;

	Возврат НовыйЭлемент;

КонецФункции // СоздатьСтраницу()

&НаСервере
// Функция создает имя страницы регистра.
//
Функция ПолучитьИмяСтраницыРегистра(ИмяРегистра)

	Возврат "Страница" + ИмяРегистра;

КонецФункции // ПолучитьИмяСтраницыРегистра()

&НаСервере
// Процедура удаляет страницу на форме, соответствующую регистру.
//
Процедура УдалитьСтраницуРегистра(ИмяРегистра)

	Элементы.Удалить(Элементы.Найти(ПолучитьИмяСтраницыРегистра(ИмяРегистра)));

КонецПроцедуры // УдалитьСтраницуРегистра()

&НаСервере
// Процедура создает на форме таблицу для регистра.
//
Процедура СоздатьТаблицуРегистра(ИмяРегистра, Колонки, Родитель)

	ТаблицаФормы = Элементы.Добавить("ТаблицаДвижений" + ИмяРегистра, Тип("ТаблицаФормы"), Родитель);
	ТаблицаФормы.ПутьКДанным      = "Объект.Движения." + ИмяРегистра;
	Родитель.ПутьКДаннымЗаголовка = ТаблицаФормы.ПутьКДанным + ".КоличествоСтрок";

	Для Каждого Колонка Из Колонки Цикл

		Если Колонка.Значение <> Неопределено Тогда
			
			ПолеФормы = Элементы.Добавить(ТаблицаФормы.Имя + Колонка.Ключ, Тип("ПолеФормы"), ТаблицаФормы);
			ПолеФормы.ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Колонка.Ключ;
			ПолеФормы.Заголовок   = Колонка.Значение;
			ПолеФормы.Вид         = ВидПоляФормы.ПолеВвода;
			
		КонецЕсли;	

	КонецЦикла;

КонецПроцедуры // СоздатьТаблицуРегистра()

&НаСервере
// Процедура отрисовывает таблицу регистра на странице формы.
//
Процедура ПоказатьТаблицуРегистраНаСтранице(Знач СтрокаТЧ)

	Если Метаданные.РегистрыНакопления.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровНакопления;
		ПредставлениеРегистра = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя];
		
	ИначеЕсли Метаданные.РегистрыСведений.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровСведений;
		ПредставлениеРегистра = Метаданные.РегистрыСведений[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыСведений[СтрокаТЧ.Имя];
		
	Иначе
		
		Возврат;	
		
	КонецЕсли;	
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("Период");
	СтруктураРегистра.Вставить("НомерСтроки");
	СтруктураРегистра.Вставить("Активность");
	СтруктураРегистра.Вставить("ВидДвижения");
	
	Для каждого СтандартныйРеквизит из Регистр.СтандартныеРеквизиты Цикл
		Если СтруктураРегистра.Свойство(СтандартныйРеквизит.Имя) Тогда
			СтруктураРегистра[СтандартныйРеквизит.Имя] = СтандартныйРеквизит.Синоним;
		КонецЕсли;		
	КонецЦикла;	
	
	Для каждого Измерение из Регистр.Измерения Цикл
		СтруктураРегистра.Вставить(Измерение.Имя, Измерение.Синоним);
	КонецЦикла;
	
	Для каждого Ресурс из Регистр.Ресурсы Цикл
		СтруктураРегистра.Вставить(Ресурс.Имя, Ресурс.Синоним);
	КонецЦикла;
	
	Для каждого Реквизит из Регистр.Реквизиты Цикл
		СтруктураРегистра.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
		
	СтраницаДляРегистра = СоздатьСтраницу(ПолучитьИмяСтраницыРегистра(СтрокаТЧ.Имя), ПредставлениеРегистра, СтраницаРегистра, 
										  ВидГруппыФормы.Страница);

	СоздатьТаблицуРегистра(СтрокаТЧ.Имя, СтруктураРегистра, СтраницаДляРегистра);

КонецПроцедуры // ПоказатьТаблицуРегистраНаСтранице()

&НаСервере
// Процедура отрисовывает регистры на форме.
//
Процедура ПоказатьРегистры(ТаблицаРегистров)

	Для Каждого Строка Из ТаблицаРегистров Цикл

		ПоказатьТаблицуРегистраНаСтранице(Строка);

	КонецЦикла;

КонецПроцедуры // ПоказатьРегистры()

&НаСервере
// Процедура служит для включения/исключение регистров из списка редактируемых.
//
Процедура ОбработатьИзменениеРегистров(СписокРегистров)

	Для Каждого Элемент Из СписокРегистров Цикл

		// Нужно добавить новый регистр.
		Если Элемент.Пометка Тогда

			СтрокаТЧ = Объект.ТаблицаРегистров.Добавить();
			СтрокаТЧ.Имя           = Элемент.Значение;

			ПоказатьТаблицуРегистраНаСтранице(СтрокаТЧ);

		Иначе

			Для Каждого Строка Из Объект.ТаблицаРегистров.НайтиСтроки(Новый Структура("Имя", Элемент.Значение)) Цикл
				Объект.ТаблицаРегистров.Удалить(Строка);
			КонецЦикла;

			Объект.Движения[Элемент.Значение].Очистить();
			УдалитьСтраницуРегистра(Элемент.Значение);

		КонецЕсли;

	КонецЦикла;

	Модифицированность = Истина;

КонецПроцедуры // ОбработатьИзменениеРегистров()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьШапкуДокумента(Объект);
	
	ПоказатьРегистры(Объект.ТаблицаРегистров);

	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	//ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события ПослеЗаписи.
//
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
// Процедура вызывается при нажатии кнопки "Настройка состава регистров" 
// командной панели формы.
//
Процедура НастройкаСоставаРегистров(Команда)
	
	СписокИспользуемыхРегистров = Новый СписокЗначений;

	Для Каждого Строка Из Объект.ТаблицаРегистров Цикл
		СписокИспользуемыхРегистров.Добавить(Строка.Имя);
	КонецЦикла;

	Результат = ОткрытьФормуМодально("Документ.КорректировкаРегистров.Форма.ФормаВыбораРегистра",
				Новый Структура("СписокИспользуемыхРегистров", СписокИспользуемыхРегистров));

	Если ТипЗнч(Результат) = Тип("СписокЗначений") Тогда

		ОбработатьИзменениеРегистров(Результат);

	КонецЕсли;
	
КонецПроцедуры // НастройкаСоставаРегистров()

&НаСервере
Процедура ЗаполнитьШапкуДокумента(Объект) Экспорт
	
	Пользователь 		= ПараметрыСеанса.ТекущийПользователь;
	МетаданныеДокумента = Объект.Ссылка.Метаданные();
	РазрешеноПроведение = МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Автор				= Пользователь;
		СостояниеДокумента			= "Новый";
		КартинкаСостоянияДокумента	= 1;
	КонецЕсли;
	
КонецПроцедуры	

// Процедура обновляет состояние документа.
//
&НаКлиенте
Процедура ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение) Экспорт
	
	Если Объект.Проведен Тогда
		СостояниеДокумента = "Проведен";
		КартинкаСостоянияДокумента = 2;
	ИначеЕсли РазрешеноПроведение Тогда
		СостояниеДокумента = "Не проведен";
		КартинкаСостоянияДокумента = 1;
	Иначе
		СостояниеДокумента = "Записан";
		КартинкаСостоянияДокумента = 4;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьСостояниеДокумента()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИз77(Команда)
	
	ЧислоСтрок = 0;
	ВвестиЧисло(ЧислоСтрок, "Введите число строк:"); 
	ПутьКФайлу = БюджетныйНаКлиенте.ВыбратьФайлExcel();
	

	Если НЕ ПутьКФайлу = Неопределено Тогда
		
		XLSОбъект = Новый COMОбъект("Excel.Application");
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		
		Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(ЧислоСтрок + 1,11));	
		Данные = Область.Value.Выгрузить();
		КоличествоСтраниц = 1;
		
		Для ТекНомер = 1 По КоличествоСтраниц Цикл
			
			счСтроки = 2;
			
			Для счСтроки = 0 По ЧислоСтрок - 1 Цикл
				
				Состояние("Загрузка", счСтроки / ЧислоСтрок * 100);
				
				СтрОбъект = СокрЛП(Строка(Данные[0][счСтроки]));
				Задача = СокрЛП(Строка(Данные[1][счСтроки]));
				ВидРабот = СокрЛП(Строка(Данные[2][счСтроки]));
				ПроектСтрока = СокрЛП(Строка(Данные[5][счСтроки]));
				Проект = НайтиПроект(ПроектСтрока);
				Если Проект = Неопределено Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Не найдено предприятие!";
					Сообщение.Сообщить();
					Возврат;
				КонецЕсли;	
				ВидЗатратСтрока = СокрЛП(Строка(Данные[4][счСтроки]));
				ВидЗатрат = ВернутьВидЗатрат(ВидЗатратСтрока);
				СтруктураСтроки = Новый Структура;
				СтруктураСтроки.Вставить("Объект" ,ДобавитьЭлементСпр("Номенклатура", СтрОбъект, Проект));
				СтруктураСтроки.Вставить("Задача" ,ДобавитьЭлементСпр("Стр_Задачи", Задача, Проект));
				СтруктураСтроки.Вставить("ВидРабот" ,ДобавитьЭлементСпр("стр_ВидыРабот", ВидРабот, Проект));
				СтруктураСтроки.Вставить("Очередь" ,СокрЛП(Строка(Данные[3][счСтроки])));
				СтруктураСтроки.Вставить("Проект" , Проект);
				СтруктураСтроки.Вставить("ВидЗатрат" ,ВидЗатрат);
				СтруктураСтроки.Вставить("Объем", Строка(Данные[6][счСтроки]));
				СтруктураСтроки.Вставить("Сумма", Строка(Данные[7][счСтроки]));
				СтруктураСтроки.Вставить("ОбъемРабот", Строка(Данные[8][счСтроки]));
				//добавляем запись в табличную часть
				НоваяСтрока = Объект.Движения.Стр_ФактПоОбъекту.Добавить();
				НоваяСтрока.Период = Объект.Дата;
				НоваяСтрока.Активность = Истина;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСтроки);
				
			КонецЦикла;
			
		КонецЦикла;	
		
		Сообщить("Загрузка успешно выполнена.");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВернутьВидЗатрат(ВидЗатратСтрока)
	
	Если ВидЗатратСтрока = "Материалы" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.Материалы;		
	ИначеЕсли ВидЗатратСтрока = "Оборудование" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.Оборудование;
	ИначеЕсли ВидЗатратСтрока = "ОплатаТруда" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.ОплатаТруда;
	ИначеЕсли ВидЗатратСтрока = "НакладныеРасходы" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.НакладныеРасходы;
	ИначеЕсли ВидЗатратСтрока = "Услуги" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.Услуги;
	ИначеЕсли ВидЗатратСтрока = "Прибыль" Тогда
		ВидЗатрат = Перечисления.ВидыЗатрат.Прибыль;
	КонецЕсли;	
	Возврат ВидЗатрат;
	
КонецФункции	

&НаСервере
Функция НайтиПроект(Наименование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Предприятия.Ссылка
	|ИЗ
	|	Справочник.Предприятия КАК Предприятия
	|ГДЕ
	|	Предприятия.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;	
	
КонецФункции	

&НаСервере
Функция ДобавитьЭлементСпр(ТипСпр, Наименование, Предприятие)
	
	Если ПустаяСтрока(СокрЛП(Наименование)) Тогда
		Возврат "";	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Если ТипСпр = "Стр_Задачи" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Код = &Код";
	ИначеЕсли ТипСпр = "стр_ВидыРабот" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Наименование = &Наименование";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Предприятие = &Предприятие
		|	И Материалы1.Наименование = &Наименование";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Код", Наименование);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
	Иначе
		НовыйЭлемент = Справочники[ТипСпр].СоздатьЭлемент();
		НовыйЭлемент.Наименование = Наименование;
		Если Не ТипСпр = "стр_ВидыРабот" Тогда
			НовыйЭлемент.Предприятие = Предприятие;
		КонецЕсли;	
		НовыйЭлемент.Записать();
		УжеСуществует = НовыйЭлемент.Ссылка;
		Сообщить(ТипСпр + " " + Строка(Наименование) + " создан!");
	КонецЕсли;
	
	Возврат УжеСуществует;
	
КонецФункции


