
&После("ПередЗаписью")
Процедура УУ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если Модифицированность() Тогда
	//	сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);	
	//КонецЕсли;  
	
	Если Модифицированность() Тогда
		Если ДополнительныеСвойства.Свойство("НеДобавлятьЗаписьВРегистрИзмененных") Тогда
			Если Не ДополнительныеСвойства.НеДобавлятьЗаписьВРегистрИзмененных Тогда
				сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
			КонецЕсли;
		Иначе
			сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
		КонецЕсли;
	КонецЕсли;  
	
	//Синхронизация серий
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда 
		Если Не ЭтоНовый() Тогда 
			сабОперОбщегоНазначения.СинхронизацияНомераСтрокиОсновнойТЧССериямиБух(Товары,Ссылка.Товары,СерииНоменклатуры,ЭтотОбъект);
		КонецЕсли;
		
		сабОперОбщегоНазначения.ПерезаполнитьТЧСерииНоменклатурыПередЗаписью(Товары,СерииНоменклатуры,Истина);
	КонецЕсли;

КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура УУ_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				
		Если ЭтотОбъект.Метаданные().ТабличныеЧасти.Найти("СерииНоменклатуры") <> Неопределено И ДанныеЗаполнения.Метаданные().ТабличныеЧасти.Найти("СерииНоменклатуры") <> Неопределено Тогда
			
			Для Каждого ТекСтрокаСерии Из ДанныеЗаполнения.СерииНоменклатуры Цикл
				НоваяСтрокаСерии = ЭтотОбъект.СерииНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, ТекСтрокаСерии);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&Перед("ПередЗаписью")
Процедура УУ_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЭтоНовый() Тогда
		Если ОбменДанными.Загрузка И АвтообновленияЗаблокированы Тогда
			ИгнорироватьБлокАвтообновления = Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("сабИгнорироватьБлокировкуАвтообновленийДокументов");
			Если Не ИгнорироватьБлокАвтообновления Тогда
				ЭтотОбъект.Прочитать();
				ОбменДанными.Загрузка = Истина;   
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура УУ_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() И Не Отказ Тогда
	//	Если Не ЭтоНовый() Тогда
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = 
	//		"   ВЫБРАТЬ
	//		|	ТЧТовары.НомерСтроки КАК НомерСтроки,
	//		|	ТЧТовары.Номенклатура КАК Номенклатура
	//		|   Поместить ВТТЧТовары
	//		|ИЗ &ТЧТовары КАК ТЧТовары
	//		|;
	//		|////////////////////////// 
	//		|ВЫБРАТЬ
	//		|	ТЧСерии.НомерСтрокиРеализации КАК НомерСтрокиРеализации,
	//		|	ТЧСерии.ИдентификаторСтрокиРеализации КАК ИдентификаторСтрокиРеализации,
	//		|	ТЧСерии.Номенклатура КАК Номенклатура,
	//		|ТЧСерии.Количество КАК Количество,
	//		|ТЧСерии.СерияНоменклатуры КАК СерияНоменклатуры
	//		|Поместить ВТТЧСерии
	//		|ИЗ &ТЧСерии КАК ТЧСерии
	//		|;
	//		|////////////////////////// 
	//		|
	//		|ВЫБРАТЬ
	//		|	ВТТЧТовары.НомерСтроки КАК НомерСтрокиРеализации,
	//		|	ВТТЧТовары.Номенклатура КАК Номенклатура,
	//		|	ЕСТЬNULL(ВТТЧСерии.ИдентификаторСтрокиРеализации, """") КАК ИдентификаторСтрокиРеализации,
	//		|	ЕСТЬNULL(ВТТЧСерии.Количество, 0) КАК Количество,
	//		|	ЕСТЬNULL(ВТТЧСерии.СерияНоменклатуры, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК СерияНоменклатуры,
	//		|	ЕСТЬNULL(ВТТЧСерии.СерияНоменклатуры.ДатаПроизводства, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводства
	//		|ИЗ
	//		|	ВТТЧТовары КАК ВТТЧТовары
	//		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТЧСерии КАК ВТТЧСерии
	//		|		ПО ВТТЧТовары.Номенклатура = ВТТЧСерии.Номенклатура
	//		|			И ВТТЧТовары.НомерСтроки = ВТТЧСерии.НомерСтрокиРеализации";
	//		Запрос.УстановитьПараметр("ТЧТовары",Товары.Выгрузить(,"НомерСтроки,Номенклатура"));
	//		Запрос.УстановитьПараметр("ТЧСерии", СерииНоменклатуры.Выгрузить());
	//		РезультатЗапроса = Запрос.Выполнить();
	//		
	//		Выборка = РезультатЗапроса.Выбрать();
	//		СерииНоменклатуры.Очистить();
	//		Пока Выборка.Следующий() Цикл
	//			СтрокаСерииНоменклатуры = СерииНоменклатуры.Добавить();
	//			ЗаполнитьЗначенияСвойств(СтрокаСерииНоменклатуры,Выборка);
	//		КонецЦикла;
	//		Для Каждого СтрокаТЧТовары Из Товары Цикл 
	//			СтруктураОтбораТЧСерии = Новый Структура("НомерСтрокиРеализации,Номенклатура",СтрокаТЧТовары.НомерСтроки,СтрокаТЧТовары.Номенклатура);
	//			МассивСтрокТЧСерии = СерииНоменклатуры.НайтиСтроки(СтруктураОтбораТЧСерии);
	//			Если МассивСтрокТЧСерии.Количество() = 1 Тогда
	//				СтрокаТЧТовары.СерияНоменклатуры = МассивСтрокТЧСерии[0].СерияНоменклатуры;
	//			Иначе
	//			    СтрокаТЧТовары.СерияНоменклатуры = ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
	//			КонецЕсли;	
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры
