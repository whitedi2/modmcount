
&НаСервере
Процедура ОбновитьНаСервере()
	
	Элементы.ТЧДанныеГалочка1.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.СчетОтправлен;
	Элементы.ТЧДанныеГалочка2.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.АктОтправленЭлектронно;
	Элементы.ТЧДанныеГалочка3.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.АктОтправленБумажно;
	Элементы.ТЧДанныеГалочка4.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.СчетОплачен;
	Элементы.ТЧДанныеГалочка5.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.АктПолученЭлектронно;
	Элементы.ТЧДанныеГалочка6.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.АктПолученБумажно;
	Элементы.ТЧДанныеГалочка7.Заголовок = Перечисления.сабСтатусыАктовСчетовфактур.ОбменЗавершен;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УЧ_Реализация.Ссылка КАК Документ,
	               |	УЧ_Реализация.Дата КАК Дата,
	               |	УЧ_Реализация.Номер КАК Номер,
	               |	УЧ_Реализация.Предприятие КАК Предприятие,
	               |	УЧ_Реализация.Контрагент КАК Контрагент,
	               |	УЧ_Реализация.Договор КАК Договор,
	               |	УЧ_Реализация.Организация КАК Организация,
	               |	УЧ_Реализация.СуммаДокумента КАК СуммаДокумента,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК СчетОтправлен,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних1.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК АктОтправленЭлектронно,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних2.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК АктОтправленБумажно,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних3.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК СчетОплачен,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних4.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК АктПолученЭлектронно,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних5.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК АктПолученБумажно,
	               |	ВЫБОР
	               |		КОГДА сабТекущиеСтатусыАктовСчетовФактурСрезПоследних6.ТекущийСтатус ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ОбменЗавершен
	               |ИЗ
	               |	Документ.УЧ_Реализация КАК УЧ_Реализация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.СчетОтправлен))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних1
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних1.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних1.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.АктОтправленЭлектронно))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних2
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних2.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних2.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.АктОтправленБумажно))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних3
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних3.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних3.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.СчетОплачен))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних4
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних4.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних4.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.АктПолученЭлектронно))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних5
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних5.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних5.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.АктПолученБумажно))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабТекущиеСтатусыАктовСчетовФактур.СрезПоследних КАК сабТекущиеСтатусыАктовСчетовФактурСрезПоследних6
	               |		ПО УЧ_Реализация.Ссылка = сабТекущиеСтатусыАктовСчетовФактурСрезПоследних6.Документ
	               |			И (сабТекущиеСтатусыАктовСчетовФактурСрезПоследних6.ТекущийСтатус = ЗНАЧЕНИЕ(Перечисление.сабСтатусыАктовСчетовфактур.ОбменЗавершен))
	               |ГДЕ
	               |	УЧ_Реализация.Предприятие В(&ДоступныеПредприятия)
	               |	И УЧ_Реализация.Проведен = Истина
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата";
	
	Запрос.УстановитьПараметр("ДоступныеПредприятия", ПараметрыСеанса.ДоступныеПредприятия);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТЧДанные.Очистить();
	
	ИтогоГалочка1 = 0;
	ИтогоГалочка2 = 0;
	ИтогоГалочка3 = 0;
	ИтогоГалочка4 = 0;
	ИтогоГалочка5 = 0;
	ИтогоГалочка6 = 0;
	ИтогоГалочка7 = 0;
	ИтогоСтрок = 0;
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТЧДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Галочка1 = Выборка.СчетОтправлен;
		НоваяСтрока.Галочка2 = Выборка.АктОтправленЭлектронно;
		НоваяСтрока.Галочка3 = Выборка.АктОтправленБумажно;
		НоваяСтрока.Галочка4 = Выборка.СчетОплачен;
		НоваяСтрока.Галочка5 = Выборка.АктПолученЭлектронно;
		НоваяСтрока.Галочка6 = Выборка.АктПолученБумажно;
		НоваяСтрока.Галочка7 = Выборка.ОбменЗавершен;
		
		ИтогоГалочка1 = ИтогоГалочка1 + НоваяСтрока.Галочка1;
		ИтогоГалочка2 = ИтогоГалочка2 + НоваяСтрока.Галочка2;
		ИтогоГалочка3 = ИтогоГалочка3 + НоваяСтрока.Галочка3;
		ИтогоГалочка4 = ИтогоГалочка4 + НоваяСтрока.Галочка4;
		ИтогоГалочка5 = ИтогоГалочка5 + НоваяСтрока.Галочка5;
		ИтогоГалочка6 = ИтогоГалочка6 + НоваяСтрока.Галочка6;
		ИтогоГалочка7 = ИтогоГалочка7 + НоваяСтрока.Галочка7;
		
		ИтогоСтрок = ИтогоСтрок + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТЧДанныеГалочка1ПриИзмененииНаСервере(СтруктураГалочки)
	Если СтруктураГалочки.Установлена Тогда
		Запись = РегистрыСведений.сабТекущиеСтатусыАктовСчетовФактур.СоздатьМенеджерЗаписи();
		Запись.Период = ТекущаяДата();
		Запись.Документ = СтруктураГалочки.Документ;
		Запись.ТекущийСтатус = Перечисления.сабСтатусыАктовСчетовфактур[СтруктураГалочки.ИмяГалочки];
		Запись.Действие = Перечисления.сабСтатусыАктовСчетовфактур[СтруктураГалочки.ИмяГалочки];
		Запись.Записать();
	Иначе
		Запись = РегистрыСведений.сабТекущиеСтатусыАктовСчетовФактур.СоздатьНаборЗаписей();
		Запись.Отбор.Документ.Установить(СтруктураГалочки.Документ);
		Запись.Прочитать();
		МассивКУдалению = Новый Массив;
		
		Для каждого ТекСтрокаЗаписи Из Запись Цикл
			Если ТекСтрокаЗаписи.ТекущийСтатус = Перечисления.сабСтатусыАктовСчетовфактур[СтруктураГалочки.ИмяГалочки] Тогда
				МассивКУдалению.Добавить(ТекСтрокаЗаписи);			
			КонецЕсли;		
		КонецЦикла; 
		
		Для каждого ТекСтрокаУд Из МассивКУдалению Цикл
			Запись.Удалить(ТекСтрокаУд);		
		КонецЦикла; 
		
		Запись.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТЧДанныеДокумент" Тогда
		ПоказатьЗначение(, Элементы.ТЧДанные.ТекущиеДанные.Документ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка1ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "СчетОтправлен", Элементы.ТЧДанные.ТекущиеДанные.Галочка1, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка2ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "АктОтправленЭлектронно", Элементы.ТЧДанные.ТекущиеДанные.Галочка2, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка3ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "АктОтправленБумажно", Элементы.ТЧДанные.ТекущиеДанные.Галочка3, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка4ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "СчетОплачен", Элементы.ТЧДанные.ТекущиеДанные.Галочка4, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка5ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "АктПолученЭлектронно", Элементы.ТЧДанные.ТекущиеДанные.Галочка5, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка6ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "АктПолученБумажно", Элементы.ТЧДанные.ТекущиеДанные.Галочка6, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры

&НаКлиенте
Процедура ТЧДанныеГалочка7ПриИзменении(Элемент)
	ТЧДанныеГалочка1ПриИзмененииНаСервере(Новый Структура("ИмяГалочки, Установлена, Документ", "ОбменЗавершен", Элементы.ТЧДанные.ТекущиеДанные.Галочка1, Элементы.ТЧДанные.ТекущиеДанные.Документ));
КонецПроцедуры
