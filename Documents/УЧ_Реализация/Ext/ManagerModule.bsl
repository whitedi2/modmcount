
// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ13",
			НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'"), 
			ПечатьТОРГ13(МассивОбъектов));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
			НСтр("ru = '1-Т (Товарно - транспортная накладная)'"),
			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ12",
			НСтр("ru = 'ТОРГ-12 (Товарная накладная на возврат)'"), 
			ПечатьТОРГ12(МассивОбъектов));
		
	КонецЕсли;
         
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_НакладнаяУпр") Тогда
		
		Если ПараметрыПечати.Свойство("ФиксированныйКомплект") И ПараметрыПечати.ФиксированныйКомплект Тогда
			ПечатьКомплекта = Истина;
		Иначе
			ПечатьКомплекта = Ложь;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ПФ_MXL_НакладнаяУпр",
		НСтр("ru = 'Товарна накладная (упр)'"),			
		ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПечатьКомплекта));
		
		ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;

	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
	//	
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
	//			ПараметрыПечати.Представление,
	//			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	//	
	//КонецЕсли;
			
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати);
	КонецЕсли;		

КонецПроцедуры

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТОРГ12", НСтр("ru = 'ТОРГ-12'"), 2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетФактура", НСтр("ru = 'Счет фактура'"), 2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТОРГ13", НСтр("ru = 'ТОРГ-13'"), 2);
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе

		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
			Метаданные.Документы.УЧ_ПеремещениеТоваров.ПолноеИмя(),
			МассивОбъектов, Неопределено);
		
	КонецЕсли;
		
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураТипов = Новый Соответствие;
	СтруктураТипов.Вставить("Документ.УЧ_Реализация", МассивОбъектов);
	
	ИмяМакета = "ТОРГ12";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.УЧ_Реализация", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакета,
		ТекущийКомплект[0].Представление,
		ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати, ТекущийКомплект));
	КонецЕсли;
	
	ИмяМакета = "ТОРГ13";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.УЧ_Реализация", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакета,
		ТекущийКомплект[0].Представление,
		ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати, ТекущийКомплект));
	КонецЕсли;
	
	ИмяМакета = "СчетФактура";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.УЧ_Реализация", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакета,
		ТекущийКомплект[0].Представление,
		Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуСчетФактура(ТекущаяСтруктураТипов, ОбъектыПечати, Новый Структура("ПечатьВВалюте", Ложь), ТекущийКомплект));
	КонецЕсли;
		
	РегистрыСведений.НастройкиПечатиОбъектов.СформироватьКомплектВнешнихПечатныхФорм(
			"Документ.УЧ_Реализация",
			МассивОбъектов,
			ПараметрыПечати,
			КоллекцияПечатныхФорм,
			ОбъектыПечати);
	
КонецФункции

// Функция формирует печатную форму документа.
//
Функция ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	ДокументКПечати.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.ПодразделениеВн КАК ПодразделениеВн
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ТОРГ12";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_Реализация.ПФ_MXL_ТОРГ12");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента = ДанныеПечати.Номер;
		ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		Иначе
			
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		// Выводим коды
		ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
		ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОПоставщике.КодПоОКПО;
		ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
		ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ОснованиеНомер             = "";
		ОбластьМакета.Параметры.ОснованиеДата              = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		//Если Не ЗначениеЗаполнено(ОбластьМакета.Параметры.АдресДоставки) Тогда
		//	ОбластьМакета.Параметры.АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПодразделениеВн);
		//КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по странице.
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМест", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Мест", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("МассаБрутто", 0);
		ДанныеСтроки.Вставить("МассаНетто", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			//Ходин. Не выводим строки с пустой суммой
			Если СтрокаТовары.Сумма = 0 И СтрокаТовары.СуммаНДС = 0 Тогда Продолжить КонецЕсли;
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
					ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
					ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
					ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
					ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по странице.
			ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
			
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом.
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		
		Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
			
			ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
			
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.Количество КАК КоличествоУпаковок,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Сумма,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Товар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.УЧ_Реализация.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
Процедура ПоместитьВременнуюТаблицуУслуг(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_РеализацияУслуги.Ссылка,
	|	УЧ_РеализацияУслуги.НомерСтроки,
	|	ВЫРАЗИТЬ(УЧ_РеализацияУслуги.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	УЧ_РеализацияУслуги.Количество,
	|	УЧ_РеализацияУслуги.Количество КАК КоличествоУпаковок,
	|	УЧ_РеализацияУслуги.Цена,
	|	УЧ_РеализацияУслуги.Сумма,
	|	УЧ_РеализацияУслуги.СтавкаНДС,
	|	УЧ_РеализацияУслуги.СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС,
	|	Ложь Как ЭтоТовар
	|ПОМЕСТИТЬ ТаблицаУслуг
	|ИЗ
	|	Документ.УЧ_Реализация.Услуги КАК УЧ_РеализацияУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО УЧ_РеализацияУслуги.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДокументов.Ссылка КАК Ссылка,
	               |	ДанныеДокументов.Организация КАК Организация,
	               |	ДанныеДокументов.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	               |	ДанныеДокументов.Подразделение КАК Подразделение
	               |ПОМЕСТИТЬ ТаблицаДанныхДокументов
	               |ИЗ
	               |	Документ.УЧ_Реализация КАК ДанныеДокументов
	               |ГДЕ
	               |	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ПоместитьВременнуюТаблицуУслуг(МенеджерВременныхТаблиц);
	ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВНХТоварные)
	|			ТОГДА РеализацияТоваров.ОрганизацияВн
	|		ИНАЧЕ РеализацияТоваров.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	РеализацияТоваров.Договор.Организация КАК Организация,
	|	РеализацияТоваров.Договор.Организация.Код КАК Префикс,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Счет = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВНХТоварные)
	|			ТОГДА РеализацияТоваров.ОрганизацияВн
	|		ИНАЧЕ РеализацияТоваров.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	РеализацияТоваров.Договор.Организация КАК Грузоотправитель,
	|	РеализацияТоваров.АдресДоставки КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	РеализацияТоваров.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.УЧ_Реализация КАК РеализацияТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО РеализацияТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО РеализацияТоваров.Ссылка = СчетаФактуры.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаТоваров.Ссылка КАК Ссылка,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьУслуги,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьТовары
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаТоваров.Ссылка) КАК НоменклатураДокументов
	|		ПО РеализацияТоваров.Ссылка = НоменклатураДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ТаблицаДокумента.Номенклатура
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументаУслуги.Ссылка КАК Ссылка,
	|	ТаблицаДокументаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаДокументаУслуги.Номенклатура КАК НоменклатураНаименование,
	|	ТаблицаДокументаУслуги.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокументаУслуги.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокументаУслуги.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокументаУслуги.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокументаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокументаУслуги.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументаУслуги.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокументаУслуги.Сумма
	|		ИНАЧЕ ТаблицаДокументаУслуги.Сумма + ТаблицаДокументаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументаУслуги.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокументаУслуги.Сумма - ТаблицаДокументаУслуги.СуммаНДС
	|		ИНАЧЕ ТаблицаДокументаУслуги.Сумма + ТаблицаДокументаУслуги.СуммаНДС - ТаблицаДокументаУслуги.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументаУслуги.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокументаУслуги.Сумма - ТаблицаДокументаУслуги.СуммаНДС) / ТаблицаДокументаУслуги.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокументаУслуги.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокументаУслуги.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаУслуг КАК ТаблицаДокументаУслуги
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	РезультатПоТабличнойЧасти_Услуги = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоТабличнойЧасти_Услуги",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоТабличнойЧасти_Услуги);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую данные счетов-фактур по таблице данных документов-оснований.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу
//	                                                    ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Организация,
//		Подразделение,
//		Склад.
//
Процедура ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	СчетаФактуры.ДокументОснование КАК ДокументОснование,
	//|	ВЫБОР
	//|		КОГДА СчетаФактуры.Исправление
	//|			ТОГДА ЕСТЬNULL(СчетаФактуры.СчетФактураОснование.Дата, НЕОПРЕДЕЛЕНО)
	//|		ИНАЧЕ СчетаФактуры.Дата
	//|	КОНЕЦ КАК Дата,
	//|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	//|ПОМЕСТИТЬ НомераИсправлений
	//|ИЗ
	//|	Документ.СчетФактураВыданный КАК СчетаФактуры
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	//|		ПО СчетаФактуры.ДокументОснование = ДанныеДокументов.Ссылка
	//|ГДЕ
	//|	НЕ СчетаФактуры.ПометкаУдаления
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СчетаФактуры.ДокументОснование,
	//|	ВЫБОР
	//|		КОГДА СчетаФактуры.Исправление
	//|			ТОГДА ЕСТЬNULL(СчетаФактуры.СчетФактураОснование.Дата, НЕОПРЕДЕЛЕНО)
	//|		ИНАЧЕ СчетаФактуры.Дата
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СчетаФактуры.ДокументОснование КАК ДокументОснование,
	//|	СчетаФактуры.Исправление КАК Исправление,
	//|	СчетаФактуры.Номер КАК Номер,
	//|	ВЫБОР
	//|		КОГДА СчетаФактуры.Исправление
	//|			ТОГДА ЕСТЬNULL(СчетаФактуры.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1, 1, 1))
	//|		ИНАЧЕ СчетаФактуры.Дата
	//|	КОНЕЦ КАК Дата,
	//|	ВЫБОР
	//|		КОГДА СчетаФактуры.Исправление
	//|			ТОГДА СчетаФактуры.НомерИсправления
	//|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|	КОНЕЦ КАК НомерИсправления,
	//|	ВЫБОР
	//|		КОГДА СчетаФактуры.Исправление
	//|			ТОГДА СчетаФактуры.Дата
	//|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|	КОНЕЦ КАК ДатаИсправления,
	//|	СчетаФактуры.Организация КАК Организация,
	//|	СчетаФактуры.Валюта КАК Валюта,
	//|	СчетаФактуры.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПлатежноРасчетныеДокументы,
	//|	СчетаФактуры.Организация КАК Грузоотправитель
	//|ПОМЕСТИТЬ ТаблицаСчетовФактур
	//|ИЗ
	//|	НомераИсправлений КАК НомераИсправлений
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетаФактуры
	//|		ПО НомераИсправлений.ДокументОснование = СчетаФактуры.ДокументОснование
	//|			И (НомераИсправлений.Дата = ВЫБОР
	//|				КОГДА СчетаФактуры.Исправление
	//|					ТОГДА ЕСТЬNULL(СчетаФактуры.СчетФактураОснование.Дата, НЕОПРЕДЕЛЕНО)
	//|				ИНАЧЕ СчетаФактуры.Дата
	//|			КОНЕЦ)
	//|			И НомераИсправлений.НомерИсправления = СчетаФактуры.НомерИсправления
	//|			И (НЕ СчетаФактуры.ПометкаУдаления)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ НомераИсправлений";
	
	"ВЫБРАТЬ
	|	УЧ_Реализация.Ссылка КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.ИсправлениеСФ
	|			ТОГДА УЧ_РеализацияИсправленныеСФ.ДатаИсправления
	|		ИНАЧЕ УЧ_Реализация.ДатаСчетФактуры
	|	КОНЕЦ КАК Дата,
	|	МАКСИМУМ(УЧ_РеализацияИсправленныеСФ.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация.ИсправленныеСФ КАК УЧ_РеализацияИсправленныеСФ
	|			ПО УЧ_Реализация.Ссылка = УЧ_РеализацияИсправленныеСФ.Ссылка
	|		ПО ТаблицаДанныхДокументов.Ссылка = УЧ_Реализация.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_Реализация.Ссылка,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.ИсправлениеСФ
	|			ТОГДА УЧ_РеализацияИсправленныеСФ.ДатаИсправления
	|		ИНАЧЕ УЧ_Реализация.ДатаСчетФактуры
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УЧ_Реализация.Ссылка КАК ДокументОснование,
	|	УЧ_Реализация.ИсправлениеСФ КАК Исправление,
	|	УЧ_Реализация.НомерСчетФактуры КАК Номер,
	|	УЧ_Реализация.Организация,
	|	УЧ_Реализация.Организация КАК Грузоотправитель,
	|	УЧ_Реализация.Валюта,
	|	УЧ_Реализация.СтрокаПлатежноРасчетныеДокументы,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.ИсправлениеСФ
	|			ТОГДА ЕСТЬNULL(УЧ_Реализация.ДатаСчетФактуры, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ НомераИсправлений.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.ИсправлениеСФ
	|			ТОГДА НомераИсправлений.НомерИсправления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.ИсправлениеСФ
	|			ТОГДА НомераИсправлений.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаИсправления
	|ПОМЕСТИТЬ ТаблицаСчетовФактур
	|ИЗ
	|	Документ.УЧ_Реализация КАК УЧ_Реализация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераИсправлений КАК НомераИсправлений
	|		ПО УЧ_Реализация.Ссылка = НомераИсправлений.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НомераИсправлений";
	
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати = Неопределено, ПечатьКомплекта = Ложь) Экспорт

	КолонкаКодов       = "Код";
	ВыводитьКоды       = Истина;
	//ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Реализация товаров'");
	
	СерииНоменклатурыИспользуются = Справочники.СерииНоменклатуры.СерииНоменклатурыИспользуются();
	//ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Подразделение КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Автор КАК Ответственный,
	|	ВЫБОР
	|		КОГДА Документ.Счет = &Счет7902
	|			ТОГДА Документ.ПодразделениеВн.Организация
	|		ИНАЧЕ Документ.Контрагент
	|	КОНЕЦ КАК Получатель,
	|	ВЫБОР
	|		КОГДА Документ.Счет = &Счет7902
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Документ.ПодразделениеВн.Организация)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Документ.Контрагент)
	|	КОНЕЦ КАК ПредставлениеПолучателя,
	|	Документ.УчитыватьНДС КАК УчитыватьНДС,
	|	Документ.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	Документ.АдресДоставки КАК АдресДоставки,
	|	Документ.Предприятие.НаименованиеОрганизацииДляПечати КАК НаименованиеОрганизацииДляПечати
	|ИЗ
	|	Документ.УЧ_Реализация КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК КолонкаКодов,
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ТаблицаТовары.Номенклатура.Наименование
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураПредставление,  
	|	ТаблицаТовары.СерияНоменклатуры КАК СерияНоменклатуры, 
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Сумма КАК СуммаБезСкидки,
	|	0 КАК Скидка,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Документ.УЧ_Реализация.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_Реализация.ПФ_MXL_НакладнаяУпр");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаТовар          = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьШапкаЦенаКоличество = Макет.ПолучитьОбласть("ШапкаТаблицы|ЦенаКоличество");
	ОбластьШапкаСкидок         = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	ОбластьШапкаСерии          = Макет.ПолучитьОбласть("ШапкаТаблицы|СерияНоменклатуры");	 
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	
	Если НЕ СерииНоменклатурыИспользуются тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("СерияНоменклатуры").ШиринаКолонки*2.5;
	иначе
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("СерияНоменклатуры").ШиринаКолонки*2;
	КонецЕсли;
	
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаТовар          = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьСтрокаЦенаКоличество = Макет.ПолучитьОбласть("Строка|ЦенаКоличество");
	ОбластьСтрокаСкидок         = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма"); 
	ОбластьСтрокаСерии          = Макет.ПолучитьОбласть("Строка|СерияНоменклатуры");
	
	ОбластьИтогоНДСНомера 		= Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов 		= Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных 		= Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьИтогоНДСТовар 		= Макет.ПолучитьОбласть("ИтогоНДС|Товар"); 
	ОбластьИтогоНДСЦенаКоличество	= Макет.ПолучитьОбласть("ИтогоНДС|ЦенаКоличество");
	ОбластьИтогоНДССкидок 		= Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
	ОбластьИтогоНДССуммы 		= Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	ОбластьИтогоНДССерии 		= Макет.ПолучитьОбласть("ИтогоНДС|СерияНоменклатуры");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоТовар          = Макет.ПолучитьОбласть("Итого|Товар"); 
	ОбластьИтогоЦенаКоличество = Макет.ПолучитьОбласть("Итого|ЦенаКоличество");
	ОбластьИтогоСкидок         = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	ОбластьИтогоСерии          = Макет.ПолучитьОбласть("Итого|СерияНоменклатуры");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);					
		Если ВыборкаПоДокументам.НаименованиеОрганизацииДляПечати = "" Тогда
			ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");	
		Иначе
			ПредставлениеПоставщика = ВыборкаПоДокументам.НаименованиеОрганизацииДляПечати;	
		КонецЕсли;
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;		
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		//Если ЗначениеЗаполнено(МассивОбъектов.АдресДоставки) Тогда
		//	АдресДоставки = МассивОбъектов.АдресДоставки; 
		//Иначе
		//	АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(МассивОбъектов.ПодразделениеВн);
		//КонецЕсли;
		//ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя + ", " + АдресДоставки;//Сож+ адрес доставки
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Шапка
		
		ЕстьСкидка 		  = Ложь;
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если ВыборкаПоСтрокамТЧ.Скидка Тогда
				ЕстьСкидка = Истина;			
			КонецЕсли;	
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		
		//ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТовар);	
		Если СерииНоменклатурыИспользуются Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаСерии);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаЦенаКоличество);
		
		Если ЕстьСкидка Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		
		// СТРОКИ ТЧ
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);
				
			КонецЕсли;

			//ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			//ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление);
			//ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			ОбластьСтрокаТовар.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТовар);	
			Если СерииНоменклатурыИспользуются Тогда
				ОбластьСтрокаСерии.Параметры.СерияНоменклатуры = ВыборкаПоСтрокамТЧ["СерияНоменклатуры"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаСерии);
			КонецЕсли;
			ОбластьСтрокаЦенаКоличество.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаЦенаКоличество);
			
			Если ЕстьСкидка Тогда
				ОбластьСтрокаСкидок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);
			КонецЕсли;
			
			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		// Вывести Итого
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;
		
		//ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ТабличныйДокумент.Присоединить(ОбластьИтогоТовар);
		Если СерииНоменклатурыИспользуются Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоСерии);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьИтогоЦенаКоличество);
		
		Если ЕстьСкидка Тогда
			ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
			ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		КонецЕсли;
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		КонецЕсли;
		
		//ОбластьИтогоНДСДанных.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'"));
		//ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);	
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСТовар);
		Если СерииНоменклатурыИспользуются Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДССерии);
		КонецЕсли;
		ОбластьИтогоНДСЦенаКоличество.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'"));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСЦенаКоличество);
		
		Если ЕстьСкидка Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДССкидок);
		КонецЕсли;
		
		Если НЕ ВыборкаПоДокументам.УчитыватьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без НДС'");
		Иначе
			СуммаНДССтрока = Строка(СуммаНДС);
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
		Если ПечатьКомплекта И Не ОбъектыПечати = Неопределено Тогда 
			ФормированиеПечатныхФормСервер.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		КонецЕсли;
			
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой акта об
// об оказании услуг.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта.
//
Функция ПечатьАктаОбОказанииУслуг(МассивОбъектов, СинонимДокумента = Неопределено, Учетный = Ложь) Экспорт
		
	//ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	Если Не ЗначениеЗаполнено(СинонимДокумента) Тогда
		СинонимДокумента = НСтр("ru='Акт'");
	КонецЕсли;
	
	//ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_Акт";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номер КАК Номер,
	|	ВложенныйЗапрос.Дата КАК Дата,
	|	ВложенныйЗапрос.Получатель КАК Получатель,
	|	ВЫБОР
	|		КОГДА &Учетный
	|			ТОГДА ВложенныйЗапрос.Предприятие
	|		ИНАЧЕ ВложенныйЗапрос.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.СуммаДокумента КАК СуммаДокумента,
	|	ВложенныйЗапрос.УчитыватьНДС КАК УчитыватьНДС,
	|	ВложенныйЗапрос.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВложенныйЗапрос.ЕстьСкидки КАК ЕстьСкидки,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ОтветственныеЮрЛицСрезПоследних.ФизическоеЛицо КАК ЗаместительПоПриказу,
	|	ВложенныйЗапрос.Договор КАК Договор
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.Ссылка.Номер КАК Номер,
	|		Документ.Ссылка.Дата КАК Дата,
	|		Документ.Ссылка.Контрагент КАК Получатель,
	|		Документ.Ссылка.Договор.Организация КАК Поставщик,
	|		Документ.Ссылка.Организация КАК Организация,
	|		Документ.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|		Документ.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
	|		Документ.Ссылка.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА Документ.Цена * Документ.Количество = Документ.Сумма
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ЕстьСкидки,
	|		Документ.Ссылка КАК Ссылка,
	|		Документ.Ссылка.Договор КАК Договор,
	|		Документ.Ссылка.Предприятие КАК Предприятие
	|	ИЗ
	|		Документ.УЧ_Реализация.Услуги КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В(&МассивОбъектов)
	|		И Документ.Ссылка.Проведен
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документ.Ссылка,
	|		Документ.Ссылка.Номер,
	|		Документ.Ссылка.Дата,
	|		Документ.Ссылка.Контрагент,
	|		Документ.Ссылка.СуммаДокумента,
	|		Документ.Ссылка.УчитыватьНДС,
	|		Документ.Ссылка.СуммаВключаетНДС,
	|		Документ.Ссылка.Договор.Организация,
	|		Документ.Ссылка.Организация,
	|		Документ.Ссылка.Договор,
	|		Документ.Ссылка.Предприятие) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(, ) КАК ОтветственныеЮрЛицСрезПоследних
	|		ПО ВложенныйЗапрос.Организация = ОтветственныеЮрЛицСрезПоследних.СтруктурнаяЕдиница
	|			И (ОтветственныеЮрЛицСрезПоследних.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Наименование КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СодержаниеУслуги = """"
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).НаименованиеПолное = """"
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Наименование
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаТовары.СодержаниеУслуги
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|		КОНЕЦ) КАК Цена,
	|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТовары.Цена * ТаблицаТовары.Количество - ТаблицаТовары.Сумма) КАК Скидка,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Артикул КАК Артикул
	|ИЗ
	|	Документ.УЧ_Реализация.Услуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Артикул,
	|	ТаблицаТовары.Ссылка,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Наименование,
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СодержаниеУслуги = """"
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).НаименованиеПолное = """"
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).Наименование
	|					ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Субконто1 КАК Справочник.Номенклатура).НаименованиеПолное
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаТовары.СодержаниеУслуги
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка
	|ИТОГИ ПО
	|	Ссылка";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Учетный", Учетный);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_Реализация.ПФ_MXL_Акт");
	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаСоСкидкой  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
	ОбластьСтрокиСоСкидкой = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
	ОбластьШапкаБезСкидок  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокиБезСкидок = Макет.ПолучитьОбласть("Строка");
	
	ОбластьИтого         = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС      = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	ОбластьПечати		= Макет.ПолучитьОбласть("ОбластьПечати");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		Если НЕ Учетный Тогда
			СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата);
			СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата);
			ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");	
		Иначе
			ПредставлениеПоставщика = ВыборкаПоДокументам.Поставщик;
			ПредставлениеПолучателя = ВыборкаПоДокументам.Получатель;
		КонецЕсли;
	
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		Если ВыборкаПоДокументам.ЕстьСкидки Тогда
			ТабличныйДокумент.Вывести(ОбластьШапкаСоСкидкой);
			ОбластьСтроки = ОбластьСтрокиСоСкидкой;
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаБезСкидок);
			ОбластьСтроки = ОбластьСтрокиБезСкидок;
		КонецЕсли;
		
		// СТРОКИ ТЧ
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ Учетный И Не ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Сумма) Тогда
				Продолжить;		
			КонецЕсли;
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтроки.Параметры.НомерСтроки = ВсегоНаименований;
			ОбластьСтроки.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление);
			
			Если ВыборкаПоДокументам.ЕстьСкидки Тогда
				
				ОбластьСтроки.Параметры.Скидка         = ВыборкаПоСтрокамТЧ.Скидка;
				ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФормСервер.ФорматСумм(ВыборкаПоСтрокамТЧ.Сумма + ВыборкаПоСтрокамТЧ.Скидка);
				
			КонецЕсли;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
			ОбластьСтроки.Параметры.Цена = ?(ВыборкаПоСтрокамТЧ.Количество, ВыборкаПоСтрокамТЧ.Сумма / ВыборкаПоСтрокамТЧ.Количество, 0);
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ОбластьИтого.Параметры.Всего = ФормированиеПечатныхФормСервер.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		Если ВыборкаПоДокументам.УчитыватьНДС ИЛИ СуммаНДС Тогда
			ОбластьИтогоНДС.Параметры.ВсегоНДС = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаНДС);
			ОбластьИтогоНДС.Параметры.НДС      = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), " " + НСтр("ru = 'Сумма НДС'"));
		Иначе
			ОбластьИтогоНДС.Параметры.ВсегоНДС = "-";
			ОбластьИтогоНДС.Параметры.НДС      = "Без налога (НДС)";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего оказано услуг %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		//Сож+
		Если  ЗначениеЗаполнено(ВыборкаПоДокументам.Организация.ФайлПодписиРуководителя) Тогда
			ДанныеФайла = сабОбщегоНазначения.ДанныеФайлаДляОткрытия(ВыборкаПоДокументам.Организация.ФайлПодписиРуководителя,);			
			Картинка = Новый Картинка(ДанныеФайла);
			ОбластьПодписей.Рисунки.ФайлПодписиРуководителя.Картинка = Картинка;
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		Если НЕ Учетный И ЗначениеЗаполнено(ВыборкаПоДокументам.Организация.ФайлПечати) Тогда
			ДанныеФайла = сабОбщегоНазначения.ДанныеФайлаДляОткрытия(ВыборкаПоДокументам.Организация.ФайлПечати,);			
			Картинка = Новый Картинка(ДанныеФайла);
			ОбластьПечати.Рисунки.ФайлПечати.Картинка = Картинка;	
			ТабличныйДокумент.Вывести(ОбластьПечати);
		КонецЕсли;
		//Сож-
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	//ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт

	КолонкаКодов = "Код";
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ДокументКПечати.Ссылка КАК Ссылка,
	                      |	ДокументКПечати.Номер КАК Номер,
	                      |	ДокументКПечати.Дата КАК Дата,
	                      |	ДокументКПечати.Организация КАК Организация,
	                      |	ДокументКПечати.Организация.Код КАК Префикс,
	                      |	ДокументКПечати.Подразделение КАК ОтправительПодразделение,
	                      |	ДокументКПечати.ПодразделениеВн КАК ПолучательПодразделение
	                      |ИЗ
	                      |	Документ.УЧ_Реализация КАК ДокументКПечати
	                      |ГДЕ
	                      |	ДокументКПечати.Ссылка В(&МассивДокументов)
	                      |	И ДокументКПечати.Проведен
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВложенныйЗапрос.Ссылка КАК Ссылка,
	                      |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	                      |	ВЫБОР
	                      |		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	                      |			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	                      |		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	                      |	КОНЕЦ КАК ТоварНаименование,
	                      |	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	                      |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	                      |	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	                      |	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                      |	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	                      |	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	                      |	ВложенныйЗапрос.Цена КАК Цена,
	                      |	ВложенныйЗапрос.Количество КАК Количество,
	                      |	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0) КАК КоличествоМест,
	                      |	ВложенныйЗапрос.Сумма КАК Сумма,
	                      |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                      |	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		Товары.Ссылка КАК Ссылка,
	                      |		Товары.Номенклатура КАК Номенклатура,
	                      |		1 КАК Коэффициент,
	                      |		Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                      |		1 КАК КоэффициентМест,
	                      |		Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	                      |		Товары.Количество * Товары.Номенклатура.ВесБрутто КАК МассаБрутто,
	                      |		ВЫБОР
	                      |			КОГДА Товары.Количество = 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ Товары.Сумма / Товары.Количество
	                      |		КОНЕЦ КАК Цена,
	                      |		Товары.Количество КАК Количество,
	                      |		Товары.Количество КАК КоличествоМест,
	                      |		Товары.Сумма КАК Сумма,
	                      |		Товары.НомерСтроки КАК НомерСтроки
	                      |	ИЗ
	                      |		Документ.УЧ_Реализация.Товары КАК Товары
	                      |	ГДЕ
	                      |		Товары.Ссылка В(&МассивДокументов)
	                      |		И Товары.Ссылка.Проведен
	                      |		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВложенныйЗапрос.Ссылка,
	                      |	НомерСтроки
	                      |ИТОГИ ПО
	                      |	Ссылка");
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";
			
		ЕдиницаИзмеренияВеса           = Неопределено;
		
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 5;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ13");
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			//Для печати комплектов
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
				Если КомплектПечатиПоСсылке = Неопределено Тогда
					КомплектПечатиПоСсылке = КомплектыПечати[0];
				КонецЕсли;
				Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			СведенияОбОрганизации     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.НомерДокумента = ДанныеПечати.Номер;
			ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
				
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
						
			// Выводим коды
			ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
				
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
						
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("Сумма", 0);

						
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			КоличествоСтрок = ВыборкаПоДокументам.Количество();
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
								
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеСтроки.Цена  = СтрокаТовары.Цена;
				ДанныеСтроки.Сумма = СтрокаТовары.Сумма;
				
				ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
								
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
								
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
								
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.ИтогоСуммаПрописью = ЧислоПрописью(Цел(ИтоговыеСуммы.ИтогоСумма),,",,,,,,,,0");
			КопеекЦифрами = (ИтоговыеСуммы.ИтогоСумма - Цел(ИтоговыеСуммы.ИтогоСумма))*100;
			ОбластьМакета.Параметры.ИтогоСуммаКопейки  = Формат(КопеекЦифрами, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выведем нужное количество экземпляров (при печати комплектов)
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
			КонецЕсли;
			
			Если Не ОбъектыПечати = Неопределено Тогда
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			КонецЕсли;	
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
		
	КолонкаКодов = "Код";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УЧ_Реализация.Ссылка КАК Ссылка,
	|	УЧ_Реализация.Номер КАК Номер,
	|	УЧ_Реализация.Дата КАК Дата,
	|	УЧ_Реализация.Организация КАК Организация,
	|	УЧ_Реализация.Организация КАК Руководители,
	|	УЧ_Реализация.ОрганизацияВн КАК Грузополучатель,
	|	УЧ_Реализация.Организация КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	УЧ_Реализация.Организация.Код КАК Префикс,
	|	&СрокДоставки КАК СрокДоставки,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&МаркаПрицепа КАК Прицеп,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК ПредставлениеПеревозчик,
	|	&Заказчик КАК ПредставлениеЗаказчик,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&ЛицензионнаяКарточка КАК ЛицензионнаяКарточка,
	|	&ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	НаименованиеТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(1) КАК Количество,
	|		СписокТоваров.Ссылка КАК Ссылка
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			УЧ_РеализацияРеализация.Ссылка КАК Ссылка,
	|			УЧ_РеализацияРеализация.Номенклатура КАК Номенклатура
	|		ИЗ
	|			Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияРеализация
	|		ГДЕ
	|			УЧ_РеализацияРеализация.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокТоваров.Ссылка) КАК НаименованиеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_Реализация КАК УЧ_Реализация
	|		ПО НаименованиеТоваров.Ссылка = УЧ_Реализация.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УЧ_Реализация.Ссылка.Дата КАК ДатаТТН,
	|	УЧ_Реализация.Ссылка КАК Ссылка,
	|	УЧ_Реализация.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА УЧ_Реализация.Номенклатура.Наименование
	|		ИНАЧЕ УЧ_Реализация.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	УЧ_Реализация.Номенклатура.Код КАК ТоварКод,
	|	УЧ_Реализация.Количество КАК Количество,
	|	УЧ_Реализация.Номенклатура.ЕдиницаИзмерения.Наименование КАК ВидУпаковки,
	|	УЧ_Реализация.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяединицаНаименование,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ УЧ_Реализация.Сумма / УЧ_Реализация.Количество
	|	КОНЕЦ КАК Цена,
	|	УЧ_Реализация.Количество * УЧ_Реализация.Номенклатура.ВесБрутто КАК МассаБрутто,
	|	УЧ_Реализация.Количество * УЧ_Реализация.Номенклатура.ВесНетто КАК МассаНетто,
	|	УЧ_Реализация.Количество КАК КоличествоМест,
	|	УЧ_Реализация.Сумма КАК Сумма,
	|	0 КАК СуммаНДС,
	|	УЧ_Реализация.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА УЧ_Реализация.Номенклатура.PLU = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Весовой
	|ИЗ
	|	Документ.УЧ_Реализация.Товары КАК УЧ_Реализация
	|ГДЕ
	|	УЧ_Реализация.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТТН,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("СрокДоставки", ПараметрыПечати.СрокДоставки);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("МаркаПрицепа", ПараметрыПечати.МаркаПрицепа);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("Заказчик", ПараметрыПечати.Заказчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
	Запрос.УстановитьПараметр("ЛицензионнаяКарточка", ПараметрыПечати.ЛицензионнаяКарточка);
	Запрос.УстановитьПараметр("ВодительскоеУдостоверение", ПараметрыПечати.ВодительскоеУдостоверение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
	

	
	
	
КонецФункции	

// Функция формирует табличный документ с печатной формой акта на
// передачу прав.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта.
//
Функция ПечатьАктаНаПередачуПрав(МассивОбъектов, СинонимДокумента = Неопределено, Учетный = Ложь) Экспорт
		
	//ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	Если Не ЗначениеЗаполнено(СинонимДокумента) Тогда
		СинонимДокумента = НСтр("ru='Акт'");
	КонецЕсли;
	
	//ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_Акт";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.НомерСчетФактуры = """"
	|			ТОГДА ВложенныйЗапрос.Номер
	|		ИНАЧЕ ВложенныйЗапрос.НомерСчетФактуры
	|	КОНЕЦ КАК Номер,
	|	ВложенныйЗапрос.Дата КАК Дата,
	|	ВложенныйЗапрос.Получатель КАК Получатель,
	|	ВЫБОР
	|		КОГДА &Учетный
	|			ТОГДА ВложенныйЗапрос.Предприятие
	|		ИНАЧЕ ВложенныйЗапрос.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.СуммаДокумента КАК СуммаДокумента,
	|	ВложенныйЗапрос.УчитыватьНДС КАК УчитыватьНДС,
	|	ВложенныйЗапрос.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВложенныйЗапрос.ЕстьСкидки КАК ЕстьСкидки,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ОтветственныеЮрЛицСрезПоследних.ФизическоеЛицо КАК ЗаместительПоПриказу,
	|	ВложенныйЗапрос.Договор КАК Договор
	|ИЗ
	|	(ВЫБРАТЬ
	|		УЧ_РеализацияРеализация.Ссылка.Номер КАК Номер,
	|		УЧ_РеализацияРеализация.Ссылка.Дата КАК Дата,
	|		УЧ_РеализацияРеализация.Ссылка.Контрагент КАК Получатель,
	|		УЧ_РеализацияРеализация.Ссылка.Договор.Организация КАК Поставщик,
	|		УЧ_РеализацияРеализация.Ссылка.Организация КАК Организация,
	|		УЧ_РеализацияРеализация.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|		УЧ_РеализацияРеализация.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
	|		УЧ_РеализацияРеализация.Ссылка.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА УЧ_РеализацияРеализация.Цена * УЧ_РеализацияРеализация.Количество = УЧ_РеализацияРеализация.Сумма
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ЕстьСкидки,
	|		УЧ_РеализацияРеализация.Ссылка КАК Ссылка,
	|		УЧ_РеализацияРеализация.Ссылка.Договор КАК Договор,
	|		УЧ_РеализацияРеализация.Ссылка.Предприятие КАК Предприятие,
	|		УЧ_РеализацияРеализация.Ссылка.НомерСчетФактуры КАК НомерСчетФактуры
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияРеализация
	|	ГДЕ
	|		УЧ_РеализацияРеализация.Ссылка В(&МассивОбъектов)
	|		И УЧ_РеализацияРеализация.Ссылка.Проведен
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УЧ_РеализацияРеализация.Ссылка,
	|		УЧ_РеализацияРеализация.Ссылка.Номер,
	|		УЧ_РеализацияРеализация.Ссылка.Дата,
	|		УЧ_РеализацияРеализация.Ссылка.Контрагент,
	|		УЧ_РеализацияРеализация.Ссылка.СуммаДокумента,
	|		УЧ_РеализацияРеализация.Ссылка.УчитыватьНДС,
	|		УЧ_РеализацияРеализация.Ссылка.СуммаВключаетНДС,
	|		УЧ_РеализацияРеализация.Ссылка.Договор.Организация,
	|		УЧ_РеализацияРеализация.Ссылка.Организация,
	|		УЧ_РеализацияРеализация.Ссылка.Договор,
	|		УЧ_РеализацияРеализация.Ссылка.Предприятие,
	|		УЧ_РеализацияРеализация.Ссылка.НомерСчетФактуры) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(, ) КАК ОтветственныеЮрЛицСрезПоследних
	|		ПО ВложенныйЗапрос.Организация = ОтветственныеЮрЛицСрезПоследних.СтруктурнаяЕдиница
	|			И (ОтветственныеЮрЛицСрезПоследних.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(УЧ_РеализацияРеализация.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА УЧ_РеализацияРеализация.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ УЧ_РеализацияРеализация.Сумма / УЧ_РеализацияРеализация.Количество
	|		КОНЕЦ) КАК Цена,
	|	СУММА(УЧ_РеализацияРеализация.Сумма) КАК Сумма,
	|	УЧ_РеализацияРеализация.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(УЧ_РеализацияРеализация.СуммаНДС) КАК СуммаНДС,
	|	СУММА(УЧ_РеализацияРеализация.Цена * УЧ_РеализацияРеализация.Количество - УЧ_РеализацияРеализация.Сумма) КАК Скидка,
	|	УЧ_РеализацияРеализация.Ссылка КАК Ссылка,
	|	УЧ_РеализацияРеализация.Номенклатура.Наименование КАК Номенклатура,
	|	УЧ_РеализацияРеализация.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	УЧ_РеализацияРеализация.Номенклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|		КОГДА УЧ_РеализацияРеализация.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА УЧ_РеализацияРеализация.Номенклатура.Наименование
	|		ИНАЧЕ УЧ_РеализацияРеализация.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК НоменклатураПредставление
	|ИЗ
	|	Документ.УЧ_Реализация.Товары КАК УЧ_РеализацияРеализация
	|ГДЕ
	|	УЧ_РеализацияРеализация.Ссылка В(&МассивОбъектов)
	|	И УЧ_РеализацияРеализация.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_РеализацияРеализация.Ссылка,
	|	УЧ_РеализацияРеализация.СтавкаНДС,
	|	УЧ_РеализацияРеализация.Номенклатура.Наименование,
	|	УЧ_РеализацияРеализация.Номенклатура.ЕдиницаИзмерения,
	|	УЧ_РеализацияРеализация.Номенклатура.Артикул,
	|	ВЫБОР
	|		КОГДА УЧ_РеализацияРеализация.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА УЧ_РеализацияРеализация.Номенклатура.Наименование
	|		ИНАЧЕ УЧ_РеализацияРеализация.Номенклатура.НаименованиеПолное
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	УЧ_РеализацияРеализация.Ссылка
	|ИТОГИ ПО
	|	Ссылка";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Учетный", Учетный);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_Реализация.ПФ_MXL_АктНаПередачуПрав");
	
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	//ОбластьШапкаСоСкидкой  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
	//ОбластьСтрокиСоСкидкой = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
	ОбластьШапкаБезСкидок  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокиБезСкидок = Макет.ПолучитьОбласть("Строка");
	
	ОбластьИтого         = Макет.ПолучитьОбласть("Итого");
	//ОбластьИтогоНДС      = Макет.ПолучитьОбласть("ИтогоНДС");
	//ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		//ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		Если НЕ Учетный Тогда
			СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата);
			СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата);
			ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");	
		Иначе
			ПредставлениеПоставщика = ВыборкаПоДокументам.Поставщик;
			ПредставлениеПолучателя = ВыборкаПоДокументам.Получатель;
		КонецЕсли;
	
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//Если ВыборкаПоДокументам.ЕстьСкидки Тогда
		//	ТабличныйДокумент.Вывести(ОбластьШапкаСоСкидкой);
		//	ОбластьСтроки = ОбластьСтрокиСоСкидкой;
		//Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаБезСкидок);
			ОбластьСтроки = ОбластьСтрокиБезСкидок;
		//КонецЕсли;
		
		// СТРОКИ ТЧ
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		КоличествоВсего   = 0;
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ Учетный И Не ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Сумма) Тогда
				Продолжить;		
			КонецЕсли;
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтроки.Параметры.НомерСтроки = ВсегоНаименований;
			ОбластьСтроки.Параметры.Номенклатура = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление);
			
			//Если ВыборкаПоДокументам.ЕстьСкидки Тогда
			//	
			//	ОбластьСтроки.Параметры.Скидка         = ВыборкаПоСтрокамТЧ.Скидка;
			//	ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФормСервер.ФорматСумм(ВыборкаПоСтрокамТЧ.Сумма + ВыборкаПоСтрокамТЧ.Скидка);
			//	
			//КонецЕсли;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			КоличествоВсего = КоличествоВсего + ВыборкаПоСтрокамТЧ.Количество;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ОбластьИтого.Параметры.Всего = Сумма;
		ОбластьИтого.Параметры.КоличествоВсего = КоличествоВсего;
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		//Если ВыборкаПоДокументам.УчитыватьНДС ИЛИ СуммаНДС Тогда
		//	ОбластьИтогоНДС.Параметры.ВсегоНДС = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаНДС);
		//	ОбластьИтогоНДС.Параметры.НДС      = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), " " + НСтр("ru = 'Сумма НДС'"));
		//Иначе
		//	ОбластьИтогоНДС.Параметры.ВсегоНДС = "-";
		//	ОбластьИтогоНДС.Параметры.НДС      = "Без налога (НДС)";
		//КонецЕсли;
		//ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
		
		//ТекстИтоговойСтроки = НСтр("ru = 'Всего оказано услуг %ВсегоНаименований%, на сумму %Итого%'");
		//
		//ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		//ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		//ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		//ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		//
		//ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		ОбластьПодписей.Параметры.КоличествоЗаписей = ЧислоПрописью(ВсегоНаименований, , ",,,,,,,,0");
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//+ lud 26/05/23 по обр. №1720 от 04.05.23
Функция ПечатьСчетФактура(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено, Макет) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	ДокументКПечати.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.ПодразделениеВн КАК ПодразделениеВн,
	|	ДокументКПечати.Валюта КАК Валюта
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Реализация_СчФактура";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.ПФ_MXL_СчетФактура534");
    
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		НомерДляПечати = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Истина, Истина); 
		ОбластьМакета.Параметры.Номер = НомерДляПечати;
		ОбластьМакета.Параметры.Дата  = Формат(ДанныеПечати.Дата,"ДЛФ=DD");
		
					
		//ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		//"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = СведенияОПоставщике.ПолноеНаименование;
		ОбластьМакета.Параметры.АдресПоставщика = СведенияОПоставщике.ЮридическийАдрес;
		ОбластьМакета.Параметры.ИННПоставщика = СведенияОПоставщике.ИНН+"/"+СведенияОПоставщике.КПП; 
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "он же"
		Иначе
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ЮридическийАдрес");
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ФактическийАдрес");
		
		ОбластьМакета.Параметры.ДокументыОбОтгрузке = "№ п/п 1 №"+НомерДляПечати+" от "+Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy");
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = СведенияОПокупателе.ПолноеНаименование; 
		ОбластьМакета.Параметры.АдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		ОбластьМакета.Параметры.ИННПокупателя = СведенияОПокупателе.ИНН+"/"+СведенияОПокупателе.КПП; 

		// Выводим коды
		//ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
		//ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		//ОбластьМакета.Параметры.ОснованиеНомер             = "";
		//ОбластьМакета.Параметры.ОснованиеДата              = "";
		//ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		//ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		//Если Не ЗначениеЗаполнено(ОбластьМакета.Параметры.АдресДоставки) Тогда
		//	ОбластьМакета.Параметры.АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПодразделениеВн);
		//КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоВсего", 0);
		ИтоговыеСуммы.Вставить("ИтогоСтоимость", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНДС", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("Стоимость", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("Всего", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьВсего            = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			//Ходин. Не выводим строки с пустой суммой
			Если СтрокаТовары.Сумма = 0 И СтрокаТовары.СуммаНДС = 0 Тогда Продолжить КонецЕсли;
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.Всего   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.Стоимость = ДанныеСтроки.Всего - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.Стоимость / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
								
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСтоимость   = ИтоговыеСуммы.ИтогоСтоимость   + ДанныеСтроки.Стоимость;
			ИтоговыеСуммы.ИтогоСуммаНДС    = ИтоговыеСуммы.ИтогоСуммаНДС    + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоВсего       = ИтоговыеСуммы.ИтогоВсего       + ДанныеСтроки.Всего;
			
		КонецЦикла;
		
		// Выводим итоги по документу в целом.
		ОбластьВсего.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоВсего));
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьПодвал.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьПодвал.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		//СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции   

Функция ПечатьУПД(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|   ДокументКПечати.Договор КАК Договор,
	|	ДокументКПечати.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.ПодразделениеВн КАК ПодразделениеВн,
	|	ДокументКПечати.Валюта КАК Валюта
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Реализация_УПД";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьУПД.ПФ_MXL_УниверсальныйПередаточныйДокумент534");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		НомерДляПечати = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Истина, Истина); 
		ОбластьМакета.Параметры.Номер = НомерДляПечати;
		ОбластьМакета.Параметры.Дата  = Формат(ДанныеПечати.Дата,"ДЛФ=DD");
		
					
		//ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		//"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = СведенияОПоставщике.ПолноеНаименование;
		ОбластьМакета.Параметры.АдресПоставщика = СведенияОПоставщике.ЮридическийАдрес;
		ОбластьМакета.Параметры.ИННПоставщика = СведенияОПоставщике.ИНН+"/"+СведенияОПоставщике.КПП; 
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "он же"
		Иначе
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ЮридическийАдрес");
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ФактическийАдрес");
		
		ОбластьМакета.Параметры.ДокументыОбОтгрузке = "№ п/п 1 №"+НомерДляПечати+" от "+Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy");
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = СведенияОПокупателе.ПолноеНаименование; 
		ОбластьМакета.Параметры.АдресПокупателя = СведенияОПокупателе.ЮридическийАдрес;
		ОбластьМакета.Параметры.ИННПокупателя = СведенияОПокупателе.ИНН+"/"+СведенияОПокупателе.КПП; 

		// Выводим коды
		//ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
		//ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
		//ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		//ОбластьМакета.Параметры.ОснованиеНомер             = "";
		//ОбластьМакета.Параметры.ОснованиеДата              = "";
		//ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		//ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		//Если Не ЗначениеЗаполнено(ОбластьМакета.Параметры.АдресДоставки) Тогда
		//	ОбластьМакета.Параметры.АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПодразделениеВн);
		//КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоВсего", 0);
		ИтоговыеСуммы.Вставить("ИтогоСтоимость", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНДС", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Мест", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("Стоимость", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("Всего", 0);
		ДанныеСтроки.Вставить("МассаБрутто", 0);
		ДанныеСтроки.Вставить("МассаНетто", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьВсего            = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");   
		ОбластьПодвалНакладной  = Макет.ПолучитьОбласть("ПодвалНакладной");

		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			//Ходин. Не выводим строки с пустой суммой
			Если СтрокаТовары.Сумма = 0 И СтрокаТовары.СуммаНДС = 0 Тогда Продолжить КонецЕсли;
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.Всего   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.Стоимость = ДанныеСтроки.Всего - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.Стоимость / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
								
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСтоимость   = ИтоговыеСуммы.ИтогоСтоимость   + ДанныеСтроки.Стоимость;
			ИтоговыеСуммы.ИтогоСуммаНДС    = ИтоговыеСуммы.ИтогоСуммаНДС    + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоВсего       = ИтоговыеСуммы.ИтогоВсего       + ДанныеСтроки.Всего;
			
		КонецЦикла;
		
		// Выводим итоги по документу в целом.
		ОбластьВсего.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоВсего));
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьПодвал.Параметры.ФИОГлавногоБухгалтера = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьПодвал.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		//СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал); 
		
		// Выводим подвал накладной документа
		
		ОбластьПодвалНакладной.Параметры.Основание = ДанныеПечати.Договор;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалнакладной); 
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);  
		УправлениеПечатьюБП.УдалитьВсеОбластиФаксимиле(ТабличныйДокумент);

		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции   

Функция ПечатьТранспортнаяНакладная(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Реализация_ТранспортнаяНакладная";
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Результат = Запрос.Выполнить();
	ДанныеПечати = Результат.Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТранспортнойНакладной.ПФ_MXL_ТранспортнаяНакладная2116");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьЛицеваяСторона = Макет.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона"); 
		ОбластьОборотнаяСторона = Макет.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона");

		НомерДляПечати = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Истина, Истина); 
		//ОбластьМакета.Параметры.Номер = НомерДляПечати;
		ОбластьЛицеваяСторона.Параметры.Пункт0_2  = Формат(ДанныеПечати.Дата,"ДФ=dd.MM.yyyy");
		
					
		ОбластьЛицеваяСторона.Параметры.Пункт1_1 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		
		ОбластьЛицеваяСторона.Параметры.Пункт2_1 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ЮридическийАдрес,Телефоны");   
		
		ОбластьЛицеваяСторона.Параметры.Пункт6_1 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");

		ТабличныйДокумент.Вывести(ОбластьЛицеваяСторона); 
		
		ОбластьОборотнаяСторона.Параметры.Пункт8_1 = СведенияОГрузоотправитель.ФактическийАдрес;   
		ОбластьОборотнаяСторона.Параметры.Пункт10_3 = СведенияОГрузополучателе.ФактическийАдрес;
		
		ТабличныйДокумент.Вывести(ОбластьОборотнаяСторона);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТоварноТранспортнаяНакладная(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	ДокументКПечати.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Плательщик,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.ПодразделениеВн КАК ПодразделениеВн
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Реализация_ТТН";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_ТТН");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента = ДанныеПечати.Номер;
		ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		// Выводим коды
		ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОГрузоотправитель.КодПоОКПО;
		ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОГрузоотправитель.КодПоОКПО;
		ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		
		//Если Не ЗначениеЗаполнено(ОбластьМакета.Параметры.АдресДоставки) Тогда
		//	ОбластьМакета.Параметры.АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПодразделениеВн);
		//КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по странице.
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМест", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Мест", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("МассаБрутто", 0);
		ДанныеСтроки.Вставить("МассаНетто", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");  
		ОбластьТранспортногоРаздела = Макет.ПолучитьОбласть("ТранспортныйРаздел");  
		ОбластьСведенийОГрузе = Макет.ПолучитьОбласть("СведенияОГрузе");
		ОбластьПогрузочныхОперация = Макет.ПолучитьОбласть("ПогрузочныеОперации");  
		ОбластьПрочихСведений = Макет.ПолучитьОбласть("ПрочиеСведения");  
		ОбластьПодвалаСведенийОгрузе = Макет.ПолучитьОбласть("ПодвалСведенийОГрузе");  

		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			//Ходин. Не выводим строки с пустой суммой
			Если СтрокаТовары.Сумма = 0 И СтрокаТовары.СуммаНДС = 0 Тогда Продолжить КонецЕсли;
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
					ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
					ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
					ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
					ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по странице.
			ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
			
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом.
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		
		Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
			
			ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
			
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);   
		
		ТабличныйДокумент.Вывести(ОбластьТранспортногоРаздела);  
		ТабличныйДокумент.Вывести(ОбластьСведенийОГрузе);
		ТабличныйДокумент.Вывести(ОбластьПогрузочныхОперация);  
		ТабличныйДокумент.Вывести(ОбластьПрочихСведений);  
		ТабличныйДокумент.Вывести(ОбластьПодвалаСведенийОгрузе);  

		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		УправлениеПечатьюБП.УдалитьВсеОбластиФаксимиле(ТабличныйДокумент);

	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОтпускМатериаловНаСторону(МассивОбъектов, ОбъектыПечати = Неопределено, КомплектыПечати = Неопределено) Экспорт
	
	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	ДокументКПечати.Организация КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДокументКПечати.Счет = &Счет7902
	|			ТОГДА ДокументКПечати.ОрганизацияВн
	|		ИНАЧЕ ДокументКПечати.Контрагент
	|	КОНЕЦ КАК Получатель,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.ПодразделениеВн КАК ПодразделениеВн,
	|   ДокументКПечати.Склад КАК СкладНаименование,
	|   ДокументКПечати.Договор КАК Основание
	|ИЗ
	|	Документ.УЧ_Реализация КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Наименование
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Счет КАК Счет,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|       Товары.Счет КАК Счет
	|	ИЗ
	|		Документ.УЧ_Реализация.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("Счет7902", ПланыСчетов.Учетный.Счет7902());
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Реализация_М15";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.ПФ_MXL_М15");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Получатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента = ДанныеПечати.Номер;
		ОбластьМакета.Параметры.ДатаСоставления  = ДанныеПечати.Дата;
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		ОбластьМакета.Параметры.КонтрагентНаименование = СведенияОПокупателе.ПолноеНаименование;
		
		// Выводим коды
		ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		
		//Если Не ЗначениеЗаполнено(ОбластьМакета.Параметры.АдресДоставки) Тогда
		//	ОбластьМакета.Параметры.АдресДоставки = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПодразделениеВн);
		//КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			//Ходин. Не выводим строки с пустой суммой
			Если СтрокаТовары.Сумма = 0 И СтрокаТовары.СуммаНДС = 0 Тогда Продолжить КонецЕсли;
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
			
		КонецЦикла;
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью; 
		ОбластьМакета.Параметры.ИтогНДС = ИтоговыеСуммы.ИтогоНДС; 
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		УправлениеПечатьюБП.УдалитьВсеОбластиФаксимиле(ТабличныйДокумент);

	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

