
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();		
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Движения.Учетный.Записывать = Истина;
	
	Возврат; //не делаем проводки, оставлеем 3-е субконто по 70 оборотным
	
	Для каждого Строка Из ТабличнаяЧасть Цикл
		
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.Содержание = ?(ЗначениеЗаполнено(Строка.Комментарий), Строка.Комментарий, Комментарий);
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		
		Если ПустаяСтрока(СчетСписания) Тогда
			Движение.СчетДт = ПланыСчетов.Учетный.Счет70();
		Иначе 
			Движение.СчетДт = СчетСписания;
		КонецЕсли;
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,Работники);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,Строка.ВидНачисления);
		
		Движение.СчетКт = ПланыСчетов.Учетный.Счет70();
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,Строка.Сотрудник);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Строка.ВидНачисления);
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;
		КонецЕсли;
		
		Движение.Сумма = - Строка.Сумма;
		
	    Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.Содержание = ?(ЗначениеЗаполнено(Строка.Комментарий), Строка.Комментарий, Комментарий);
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		
		Если ПустаяСтрока(СчетСписания) Тогда
			Движение.СчетДт = ПланыСчетов.Учетный.Счет70();
		Иначе 
			Движение.СчетДт = СчетСписания;
		КонецЕсли;
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,Работники);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,Строка.ВидНачисления);
		
		Движение.СчетКт = ПланыСчетов.Учетный.Счет70();
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,Строка.Сотрудник);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Строка.ВидНачисления);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,3,Ссылка);
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;
		КонецЕсли;
		
		Движение.Сумма = Строка.Сумма;		
	КонецЦикла;
	//
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = ТабличнаяЧасть.Итог("Сумма");
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РучнаяКорректировка = Ложь;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	ДокументОснование = Неопределено;
	
	Для каждого ТекСтрока Из ТабличнаяЧасть Цикл
		ТекСтрока.ДокументВыплаты = Неопределено;	
		ТекСтрока.СуммаВыплачено = 0;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_НачислениеЗП") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	УчетныйОстатки.Субконто1 КАК Сотрудник,
		               |	УчетныйОстатки.СуммаОстатокКт КАК СуммаКВыплате,
		               |	УчетныйОстатки.Субконто2 КАК ВидНачисления
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Остатки(
		               |			&Дата,
		               |			Счет В (&Счет70),
		               |			,
		               |			Предприятия = &Предприятие
		               |				И Субконто1 В (&Сотрудники)) КАК УчетныйОстатки";
		
		Запрос.УстановитьПараметр("Сотрудники", ДанныеЗаполнения.ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("Предприятие", ДанныеЗаполнения.Предприятие);
		Запрос.УстановитьПараметр("Дата", КонецМесяца(ДанныеЗаполнения.Дата));
		Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Учетный.Счет70());
		
		Результат = Запрос.Выполнить();
		ВыборкаЗадолженность = Результат.Выгрузить();		
		
		НачислениеВРазрезеПредприятий = ДанныеЗаполнения.НачислениеВРазрезеПредприятий;
		ЭтотОбъект.Дата = ТекущаяДата();
		ЭтотОбъект.Предприятие  = ДанныеЗаполнения.Предприятие;
		ЭтотОбъект.ЮрЛицо = ДанныеЗаполнения.ЮрЛицо;
		ЭтотОбъект.Затраты = ДанныеЗаполнения.Субконто1;
		ЭтотОбъект.Комментарий = ДанныеЗаполнения.Комментарий;
		ЭтотОбъект.Работники = ДанныеЗаполнения.Работники;
		ТЧ = ДанныеЗаполнения.ТабличнаяЧасть.Выгрузить(,"НомерСтроки ,Сотрудник, Предприятие, Подразделение, ВидНачисления, Сумма, КорПодразделение");
		ТЧ.Свернуть("Сотрудник, Предприятие, Подразделение, ВидНачисления, КорПодразделение","Сумма");
		ЭтотОбъект.ТабличнаяЧасть.Загрузить(ТЧ);
		ЭтотОбъект.Подразделение = ДанныеЗаполнения.Подразделение;
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		Для каждого ТекСтрока Из ТабличнаяЧасть Цикл
			НайденныеЗадолженности = ВыборкаЗадолженность.НайтиСтроки(Новый Структура("Сотрудник, ВидНачисления", ТекСтрока.Сотрудник, ТекСтрока.ВидНачисления)); 
			Для каждого текНайденная Из НайденныеЗадолженности Цикл
				ТекСтрока.Сумма = текНайденная.СуммаКВыплате;	
			КонецЦикла; 		
			//НайденныеУдержания = ДанныеЗаполнения.Удержания.НайтиСтроки(Новый Структура("Сотрудник, ВидНачисления", ТекСтрока.Сотрудник, ТекСтрока.ВидНачисления));
			//Для каждого текНайденная Из НайденныеУдержания Цикл
			//	ТекСтрока.Сумма = ТекСтрока.Сумма - текНайденная.Сумма;	
			//КонецЦикла; 		
		КонецЦикла; 
		
		//Попытка
		//	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
		//Исключение
		//	Сообщить("Не удалось провести документ. " + ОписаниеОшибки());
		//КонецПопытки;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДанныеЗаполнения = ДанныеЗаполнения.Ссылка;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	УчетныйОстатки.Субконто1 КАК Сотрудник,
		               |	УчетныйОстатки.СуммаОстатокКт КАК СуммаКВыплате,
		               |	УчетныйОстатки.Субконто2 КАК ВидНачисления
		               |ИЗ
		               |	РегистрБухгалтерии.Учетный.Остатки(&Дата, Счет В (&Счет70), , Предприятия = &Предприятие) КАК УчетныйОстатки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Сотрудник";
		
		//Запрос.УстановитьПараметр("Сотрудники", ДанныеЗаполнения.ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("Предприятие", ДанныеЗаполнения.Предприятие);
		Запрос.УстановитьПараметр("Дата", КонецМесяца(ДанныеЗаполнения.Дата));
		Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Учетный.Счет70());
		
		Результат = Запрос.Выполнить();
		ВыборкаЗадолженность = Результат.Выгрузить();		
		
		НачислениеВРазрезеПредприятий = ДанныеЗаполнения.НачислениеВРазрезеПредприятий;
		ЭтотОбъект.Дата = ТекущаяДата();
		ЭтотОбъект.Предприятие  = ДанныеЗаполнения.Предприятие;
		ЭтотОбъект.ЮрЛицо = ДанныеЗаполнения.ЮрЛицо;
		ЭтотОбъект.Затраты = ДанныеЗаполнения.Субконто1;
		ЭтотОбъект.Комментарий = ДанныеЗаполнения.Комментарий;
		ЭтотОбъект.Работники = ДанныеЗаполнения.Работники;
		//ТЧ = ДанныеЗаполнения.ТабличнаяЧасть.Выгрузить(,"НомерСтроки ,Сотрудник, Предприятие, Подразделение, ВидНачисления, Сумма, КорПодразделение");
		//ТЧ.Свернуть("Сотрудник, Предприятие, Подразделение, ВидНачисления, КорПодразделение","Сумма");
		//ЭтотОбъект.ТабличнаяЧасть.Загрузить(ТЧ);
		ЭтотОбъект.Подразделение = ДанныеЗаполнения.Подразделение;
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		Для каждого ТекСтрока Из ВыборкаЗадолженность Цикл
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			//НайденныеЗадолженности = ВыборкаЗадолженность.НайтиСтроки(Новый Структура("Сотрудник, ВидНачисления", ТекСтрока.Сотрудник, ТекСтрока.ВидНачисления)); 
			//Для каждого текНайденная Из НайденныеЗадолженности Цикл
				НоваяСтрока.Сумма = ТекСтрока.СуммаКВыплате;	
			//КонецЦикла; 		
			//НайденныеУдержания = ДанныеЗаполнения.Удержания.НайтиСтроки(Новый Структура("Сотрудник, ВидНачисления", ТекСтрока.Сотрудник, ТекСтрока.ВидНачисления));
			//Для каждого текНайденная Из НайденныеУдержания Цикл
			//	ТекСтрока.Сумма = ТекСтрока.Сумма - текНайденная.Сумма;	
			//КонецЦикла; 		
		КонецЦикла;	
		
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры
