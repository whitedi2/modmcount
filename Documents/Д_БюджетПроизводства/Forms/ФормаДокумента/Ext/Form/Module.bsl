&НаСервере
Функция ПолучитьПараметрыНоменклатуры(Номенклатура)
	ОтборНоменклатуры = Новый Структура("Номенклатура, СценарийПлана", Номенклатура,
	Объект.Сценарий);
	возврат РегистрыСведений.Д_ПараметрыНоменклатуры.ПолучитьПоследнее(
	Объект.Дата, ОтборНоменклатуры);
	
КонецФункции

&НаКлиенте
Процедура Расчитать(Команда)
	ЗаполнитьПараметрыСервер();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСервер()
	Если НЕ Объект.ЗаполненОбъемРеализации Тогда 
		Сообщить("Не заполнен объем реализации. Себестоимость продукции расчитана не будет!");
	КонецЕсли;
	
	ТекущийСценарийПлана = БюджетныйНаСервере.ПолучитьАктуальныйСценарий(ТекущаяДата());
	
	
	ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
	ТекДата = ДатаНачала;
	Объект.Дата = ТекДата;
	
	ТаблицаСебестоимости = ПолучитьОстаткиПоПредприятию();
	
	////////////////////////неоптимальный код!!!!! запрос в цикле!!!
	Пока ТекДата <= ДатаОкончания Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрСведений.Д_ПараметрыНоменклатуры.СрезПоследних(
		|			&Дата,
		|			Номенклатура.ПризнакНоменклатуры = ""Производство""
		|				И СценарийПлана = &Сценарий) КАК Д_ПараметрыНоменклатурыСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", ТекДата);
		Запрос.УстановитьПараметр("Сценарий", ТекущийСценарийПлана);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.ПараметрыПроизводства.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Месяц = ТекДата;
			Структура = Новый структура("Предприятия, Номенклатура", Выборка.Предприятие, Выборка.Номенклатура);
			СтрокаОстатков = ТаблицаСебестоимости.НайтиСтроки(Структура);
			Если ЗначениеЗаполнено(СтрокаОстатков) Тогда 
				НоваяСтрока.СебестоимостьНаСкладе = СтрокаОстатков[0].Средняя;       
			КонецЕсли;
		КонецЦикла;
		
		ТекДата = ДобавитьМесяц(ТекДата, 1);  		
		
	КонецЦикла;   	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаткиПоПредприятию()
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БюджетныйОстатки.Субконто1 КАК Номенклатура,
	|	БюджетныйОстатки.СуммаОстаток,
	|	БюджетныйОстатки.КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА БюджетныйОстатки.КоличествоОстаток > 0
	|			ТОГДА БюджетныйОстатки.СуммаОстаток / БюджетныйОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Средняя,
	|	БюджетныйОстатки.Предприятия
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Остатки(
	|			&ДатаОстатков,
	|			Счет В ИЕРАРХИИ (&Счет41)
	|				ИЛИ Счет В ИЕРАРХИИ (&Счет43),
	|			,
	|			) КАК БюджетныйОстатки";
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());	
	Запрос.УстановитьПараметр("ДатаОстатков", Объект.Дата);
	Возврат Запрос.Выполнить().Выгрузить()
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СценарийДО = Объект.Сценарий;
	СценарийПриИзменении(Неопределено);
	МесяцПриИзменении(0);
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПоДням(Команда)
	ТекДанные = Элементы.ДвиженияДокумента.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		
		ОткрытьФорму("Документ.Д_БюджетПроизводства.Форма.ФормаДетализацииОбъема", Новый Структура("Месяц, Номенклатура, Объем", ТекДанные.Месяц, ТекДанные.Номенклатура, ТекДанные.Объем) ,ЭтаФорма); 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
		
	Если НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") И НЕ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") Тогда
		
		ЗапретРедактирования = Ложь;
		ПараметрыТекущегоБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Объект.Предприятие, Объект.Сценарий);
		
		Если ЗначениеЗаполнено(ПараметрыТекущегоБюджета) Тогда
			ЗапретРедактирования = ПараметрыТекущегоБюджета.ПризнакРедактирования;
		КонецЕсли;
		
		Если НЕ Объект.Ссылка.Пустая() Тогда
			Элементы.Сценарий.Доступность = Ложь;
		Иначе
			Элементы.Страницы.Доступность = 1 - ЗапретРедактирования;
		КонецЕсли;
		
	КонецЕсли;
	
	МассивПредставлений = Новый Массив;
	МассивПредставлений.Добавить("");
	МассивПредставлений.Добавить("Январь");
	МассивПредставлений.Добавить("Февраль");
	МассивПредставлений.Добавить("Март");
	МассивПредставлений.Добавить("Апрель");
	МассивПредставлений.Добавить("Май");
	МассивПредставлений.Добавить("Июнь");
	МассивПредставлений.Добавить("Июль");
	МассивПредставлений.Добавить("Август");
	МассивПредставлений.Добавить("Сентябрь");
	МассивПредставлений.Добавить("Октябрь");
	МассивПредставлений.Добавить("Ноябрь");
	МассивПредставлений.Добавить("Декабрь");
	Элементы.Месяц.СписокВыбора.Очистить();
	
	Если НЕ Объект.Сценарий.Пустая() Тогда
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
		ТекДата = ДатаНачала;
		Объект.Дата = ТекДата;
		
		Пока ТекДата <= ДатаОкончания Цикл
			Элементы.Месяц.СписокВыбора.Добавить(НачалоМесяца(ТекДата), МассивПредставлений[Месяц(ТекДата)] + " " + Строка(Год(ТекДата)));
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		Если Не Элемент = Неопределено Тогда
						
			Если НЕ ЗначениеЗаполнено(Объект.Месяц) Тогда
				Объект.Месяц = Элементы.Месяц.СписокВыбора[0].Значение;
			Иначе
				Объект.Месяц = Объект.Месяц;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//считае месяцы по сценариюДО
	//Если Не СценарийДО.Пустая() Тогда
	//	
	//	ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаНачала") + 60 * 60 * 24);
	//	ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаКонца"));
	//	ТекДата = ДатаНачала;
	//	КоличествоМесяцевДо = 0;
	//	Пока ТекДата <= ДатаОкончания Цикл
	//		КоличествоМесяцевДо = КоличествоМесяцевДо + 1;
	//		ТекДата = ДобавитьМесяц(ТекДата, 1);
	//	КонецЦикла;
	
	//Если КоличествоМесяцевДо > Элементы.Месяц.СписокВыбора.Количество() Тогда
	//КонецЕсли;
	
	Если НЕ Элемент = Неопределено Тогда
		Утвердительно = Ложь;
		
		Если ПроверкаЛишнихМесяцев() Тогда
			
			Если Вопрос("Вы изменили сценарий бюджета, при этом ВСЕ данные, по месяцам не входящим в текущий сценарий, будут удалены. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
				УдалитьЛишниеМесяцы();	
				Утвердительно = Истина;	
			КонецЕсли;
			
		Иначе
			Утвердительно = Истина;
		КонецЕсли;
		
		Если НЕ Утвердительно Тогда
			Объект.Сценарий = СценарийДО;
			СценарийПриИзменении(Неопределено);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	//КонецЕсли;
	
	Элементы.Месяц.СписокВыбора.Вставить(0, Дата(3000, 12, 31), "Все",,БиблиотекаКартинок.УстановитьФлажки);

	Объект.Месяц = Дата(3000, 12, 31);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаЛишнихМесяцев()
	ТЗ = Объект.ПараметрыПроизводства.Выгрузить(,"Месяц");
	ТЗ.Свернуть("Месяц");
	Для каждого ТекСтрока Из ТЗ Цикл
		Если Элементы.Месяц.СписокВыбора.НайтиПоЗначению(ТекСтрока.Месяц) = Неопределено Тогда
			Возврат Истина;		
		КонецЕсли;	
	КонецЦикла; 
	
	Возврат Ложь;
КонецФункции // ()


&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ИзменитьТабличныеЧасти();
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		ВидимостьМесяца = Истина;
	Иначе
		ВидимостьМесяца = Ложь;
	КонецЕсли;
	//делаем видимыми/неведимыми все поля месяцы
	Элементы.ДвиженияДокументаМесяц.Видимость = ВидимостьМесяца;
	Элементы.ПараметрыПроизводстваМесяц.Видимость = ВидимостьМесяца;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишниеМесяцы()
	Для каждого ТекЭлемент Из Элементы Цикл
		Если Тип(ТекЭлемент) = Тип("ТаблицаФормы") Тогда
			Попытка
				Для ТекСтрока = 0 По Объект[ТекЭлемент.Имя].Количество() - 1 Цикл
					ТекЗначение = Объект[ТекЭлемент.Имя][ТекСтрока];
					Если Элементы.Месяц.СписокВыбора.НайтиПоЗначению(ТекЗначение.Месяц) = Неопределено Тогда
						Объект[ТекЭлемент.Имя].Удалить(ТекЗначение);
						ТекСтрока = -1;
					КонецЕсли;		
				КонецЦикла; 
			Исключение
				
			КонецПопытки;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТабличныеЧасти()
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		Элементы.ДвиженияДокумента.ОтборСтрок = Неопределено;	
		Элементы.ПараметрыПроизводства.ОтборСтрок = Неопределено;
	Иначе
		СтруктураПоиска = Новый Структура("Месяц", Объект.Месяц);
		ФиксСтруктураПоиска = Новый ФиксированнаяСтруктура(СтруктураПоиска);
		
		Элементы.ДвиженияДокумента.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.ПараметрыПроизводства.ОтборСтрок = ФиксСтруктураПоиска;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДвиженияДокументаМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	ВыбМесяц = ВыбратьИзСписка(СписокМесяцев, Элемент);
	Если НЕ ВыбМесяц = Неопределено Тогда
		Элементы.ДвиженияДокумента.ТекущиеДанные.Месяц = ВыбМесяц.Значение;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПараметрыПроизводстваМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	ВыбМесяц = ВыбратьИзСписка(СписокМесяцев, Элемент);
	Если НЕ ВыбМесяц = Неопределено Тогда
		Элементы.ПараметрыПроизводства.ТекущиеДанные.Месяц = ВыбМесяц.Значение;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КопироватьСтрокиОбъемПроизводства(Команда)
	КопироватьСтроки(Элементы.ДвиженияДокумента, Объект.ДвиженияДокумента);
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтроки(ЭлТЧ, ТЧ)
	
	ТекСписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	ТекСписокМесяцев.Удалить(0);
	ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();
	
	СпискоМесяцев = ОткрытьФормуМодально("Документ.Д_Бюджет.Форма.ФормаКопированияСтрок", Новый Структура("СписокМесяцев", ТекСписокМесяцев)); 
	Если ТипЗнч(СпискоМесяцев) = Тип("СписокЗначений")  Тогда
		Для каждого ТекМесяц Из СпискоМесяцев Цикл
			Если ТекМесяц.Пометка Тогда
				Для каждого ТекСтрока Из ЭлТЧ.ВыделенныеСтроки Цикл
					НоваяСтрока = ТЧ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЧ.НайтиПоИдентификатору(ТекСтрока));
					НоваяСтрока.Месяц = ТекМесяц.Значение;
					Если НоваяСтрока.Свойство("АвторЗаписи") Тогда
						НоваяСтрока.АвторЗаписи = ТекПользователь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура КопироватьСтрокиПараметры(Команда)
	КопироватьСтроки(Элементы.ПараметрыПроизводства, Объект.ПараметрыПроизводства);
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДокументаПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.ДвиженияДокумента.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		Стр = Новый ФиксированнаяСтруктура(Новый Структура("Предприятие, Номенклатура, Месяц", ТекДанные.Предприятие, ТекДанные.Номенклатура, ТекДанные.Месяц));
		Элементы.ОбъемПроизводстваДетально.ОтборСтрок = Стр;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроизводстваПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОбъемРеализации(Команда)
	ЗаполнитьОбъемРеализацииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъемРеализацииНаСервере()
	
	Объект.ЗаполненОбъемРеализации = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БюджетныйОборотыДтКт.Предприятия,
	|	БюджетныйОборотыДтКт.СубконтоКт1,
	|	БюджетныйОборотыДтКт.КоличествоОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			СчетДт В ИЕРАРХИИ (&Счет9202),
	|			,
	|			СчетКт В ИЕРАРХИИ (&Счет41)
	|				ИЛИ СчетКт В ИЕРАРХИИ (&Счет43),
	|			,
	|			) КАК БюджетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачалоПериода", Объект.Сценарий.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", объект.Сценарий.ДатаКонца);
	Запрос.УстановитьПараметр("Счет9202" , ПланыСчетов.Учетный.Счет9002());
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	Запрос.УстановитьПараметр("Счет43" ,ПланыСчетов.Учетный.Счет43());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		НоваяСтрока = Объект.ОбъемРеализации.Добавить();
		НоваяСтрока.Предприятие = Выборка.Предприятия;
		НоваяСтрока.Номенклатура = Выборка.СубконтоКт1;
		НоваяСтрока.Количество = Выборка.КоличествоОборотКт;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРАсходыНаРеализация()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БюджетныйОбороты.СуммаОборот,
	|	БюджетныйОбороты.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Счет = &Счет9003,
	|			,
	|			Субконто2 = &НДС
	|				ИЛИ Субконто2 = &НДС_
	|				ИЛИ Субконто2 = &НДСНП
	|				ИЛИ Субконто2 = &НП
	|				ИЛИ Субконто2 = &НалогНаП
	|				ИЛИ Субконто2 = &НалогНаПрибыль
	|				ИЛИ Субконто2 = &НДСНПЗДок,
	|			,
	|			) КАК БюджетныйОбороты";
	Запрос.УстановитьПараметр("НачалоПериода", Объект.Сценарий.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода" ,Объект.Сценарий.ДатаКонца);
	Запрос.УстановитьПараметр("Счет9003", ПланыСчетов.Учетный.Счет9003());
	
	Запрос.УстановитьПараметр("НДС",Справочники.СтатьиЗатрат.НДСПрочий );
	Запрос.УстановитьПараметр("НДС_", Справочники.СтатьиЗатрат.НДС);
	Запрос.УстановитьПараметр("НДСНП", Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС+НП"));
	Запрос.УстановитьПараметр("НП", Справочники.СтатьиЗатрат.НайтиПоНаименованию("НП"));
	Запрос.УстановитьПараметр("НалогНаП", Справочники.СтатьиЗатрат.НалогНаП);
	Запрос.УстановитьПараметр("НалогНаПрибыль", Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на прибыль (с реализации)"));
	Запрос.УстановитьПараметр("НДСНПЗДок", Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС+НП+Затраты на документы"));
	
	Выгрузка = запрос.Выполнить().Выгрузить();
	
	Возврат Выгрузка
	
КонецФункции

&НаКлиенте
Процедура ТипБюджетаПриИзменении(Элемент)
	//Если Объект.ТипБюджета = "Предварительный" И Объект.ДвиженияДокумента Тогда
	//	Если Вопрос("Детальный график будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	//		Объект.ДвиженияДокумента.Очистить();
	//		Объект.ОбъемПроизводстваДетально.Очистить();		
	//	КонецЕсли;
	//ИначеЕсли  Объект.ПараметрыПроизводства.Количество() Тогда
	//	Если Вопрос("Параметры номенклатуры будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	//		Объект.ПараметрыПроизводства.Очистить();
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьОбъемы(Команда)
	Если Объект.ДвиженияДокумента.Количество() Тогда
		Если НЕ Вопрос("Таблица объемов не пустая. Очистить и распределить объемы заново?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	ДатаНачала = БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "АктуальнаяДата");
	Для каждого ТекСтрока Из Объект.ПараметрыПроизводства Цикл
		
		НоваяСтрокаДвижения = Объект.ДвиженияДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДвижения, ТекСтрока);
		НоваяСтрокаДвижения.Объем = ТекСтрока.МаксимальнаяПроизводительность;
		
		
		ТекДата = ДобавитьМесяц(ДатаНачала, ТекСтрока.Месяц - Месяц(ДатаНачала));
		КоличествоДней = Окр((КонецМесяца(ТекДата) - НачалоМесяца(ТекДата)) / (60*60*24), 0);
		Для ТекДень = 1 По КоличествоДней Цикл
			НоваяСтрокаДетализация = Объект.ОбъемПроизводстваДетально.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДетализация, ТекСтрока);
			НоваяСтрокаДетализация.День = ТекДень;
			НоваяСтрокаДетализация.Объем = НоваяСтрокаДвижения.Объем / КоличествоДней;
		КонецЦикла; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияДокументаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Текданные = Элементы.ДвиженияДокумента.ТекущиеДанные;
	ОбновитьОтгрузкиДетальные(Текданные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтгрузкиДетальные(Текданные)
	
	ДатаНачала = БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "АктуальнаяДата");
	
	ТекДата = ДобавитьМесяц(ДатаНачала, Текданные.Месяц - Месяц(ДатаНачала));
	КоличествоДней = Окр((КонецМесяца(ТекДата) - НачалоМесяца(ТекДата)) / (60*60*24), 0);
	
	КоличествоСтрокСПростоем = Объект.ОбъемПроизводстваДетально.НайтиСтроки(Новый Структура("Предприятие, Номенклатура, Месяц, Простой", Текданные.Предприятие, Текданные.Номенклатура, Текданные.Месяц, Истина)).Количество(); 
	ОтобранныеСтроки = Объект.ОбъемПроизводстваДетально.НайтиСтроки(Новый Структура("Предприятие, Номенклатура, Месяц", Текданные.Предприятие, Текданные.Номенклатура, Текданные.Месяц)); 
	
	ПоследняяСтрока = 0;
	ТекСумма = 0;
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		Если НЕ ТекСтрока.Простой Тогда
			ТекСтрока.Объем = Текданные.Объем / (КоличествоДней - КоличествоСтрокСПростоем);
			ПоследняяСтрока = ТекСтрока.НомерСтроки;
			ТекСумма = ТекСумма + ТекСтрока.Объем;
		Иначе
			ТекСтрока.Объем = 0;	
		КонецЕсли;
	КонецЦикла;
	
	Если ОтобранныеСтроки.Количество() Тогда
		Объект.ОбъемПроизводстваДетально[ПоследняяСтрока - 1].Объем = Объект.ОбъемПроизводстваДетально[ПоследняяСтрока - 1].Объем + Текданные.Объем - ТекСумма;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбъемПроизводстваДетальноПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Текданные = Элементы.ДвиженияДокумента.ТекущиеДанные;
	ОбновитьОтгрузкиДетальные(Текданные);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСебестоимость(Команда)
	ОбновитьСебестоимостьСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСебестоимостьСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БюджетныйОбороты.Субконто1 КАК НоменлатураКом,
	               |	БюджетныйОбороты.Предприятия КАК ПредприятияКом,
	               |	ВЫБОР
	               |		КОГДА БюджетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Себестоимость)
	               |			ТОГДА БюджетныйОбороты.СуммаОборот
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаКом,
	               |	-БюджетныйОбороты.КоличествоОборот КАК КоличествоКом,
	               |	НАЧАЛОПЕРИОДА(БюджетныйОбороты.Период, МЕСЯЦ) КАК Месяц
	               |ПОМЕСТИТЬ СебестоимостьКС
	               |ИЗ
	               |	РегистрБухгалтерии.Бюджетный.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВыручкаОтРеал))
	               |				ИЛИ Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Себестоимость)),
	               |			,
	               |			СценарийПлана = &СценарийПлана,
	               |			,
	               |			) КАК БюджетныйОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	БюджетныйОбороты.Субконто1.НоменклатураПервичная,
	               |	БюджетныйОбороты.Субконто1.Производитель,
	               |	ВЫБОР
	               |		КОГДА БюджетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Себестоимость)
	               |			ТОГДА БюджетныйОбороты.СуммаОборот
	               |		ИНАЧЕ 0
	               |	КОНЕЦ,
	               |	-БюджетныйОбороты.КоличествоОборот,
	               |	НАЧАЛОПЕРИОДА(БюджетныйОбороты.Период, МЕСЯЦ)
	               |ИЗ
	               |	РегистрБухгалтерии.Бюджетный.Обороты(
	               |			&Дата1,
	               |			&Дата2,
	               |			Месяц,
	               |			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВыручкаОтРеал))
	               |				ИЛИ Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.Себестоимость)),
	               |			,
	               |			СценарийПлана = &СценарийПлана,
	               |			,
	               |			) КАК БюджетныйОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СебестоимостьКС.НоменлатураКом,
	               |	СебестоимостьКС.ПредприятияКом,
	               |	СУММА(СебестоимостьКС.СуммаКом) КАК СуммаКом,
	               |	СУММА(СебестоимостьКС.КоличествоКом) КАК КоличествоКом,
	               |	СебестоимостьКС.Месяц
	               |ПОМЕСТИТЬ СебестоимостКСГрупп
	               |ИЗ
	               |	СебестоимостьКС КАК СебестоимостьКС
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СебестоимостьКС.НоменлатураКом,
	               |	СебестоимостьКС.ПредприятияКом,
	               |	СебестоимостьКС.Месяц
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(БюджетныйОбороты.Субконто1, БюджетныйОстаткиИОбороты.Субконто1) КАК Номенклатура,
	               |	ЕСТЬNULL(БюджетныйОбороты.Предприятия, БюджетныйОстаткиИОбороты.Предприятия) КАК Предприятия,
	               |	ЕСТЬNULL(БюджетныйОбороты.СуммаОборот, 0) + ЕСТЬNULL(БюджетныйОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК Сумма,
	               |	ЕСТЬNULL(БюджетныйОбороты.КоличествоОборот, БюджетныйОстаткиИОбороты.КоличествоНачальныйОстаток) КАК Количество,
	               |	ЕСТЬNULL(НАЧАЛОПЕРИОДА(БюджетныйОбороты.Период, МЕСЯЦ), НАЧАЛОПЕРИОДА(БюджетныйОстаткиИОбороты.Период, МЕСЯЦ)) КАК Месяц
	               |ПОМЕСТИТЬ Производство
	               |ИЗ
	               |	РегистрБухгалтерии.Бюджетный.Обороты(&Дата1, &Дата2, Месяц, Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ГотоваяПродукция)), , СценарийПлана = &СценарийПлана, КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ВыпускПродукции)), ) КАК БюджетныйОбороты
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Бюджетный.ОстаткиИОбороты(&Дата1, &Дата2, Месяц, , Счет В (ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ГотоваяПродукция)), , СценарийПлана = &СценарийПлана) КАК БюджетныйОстаткиИОбороты
	               |		ПО БюджетныйОбороты.Субконто1 = БюджетныйОстаткиИОбороты.Субконто1
	               |			И БюджетныйОбороты.Предприятия = БюджетныйОстаткиИОбороты.Предприятия
	               |			И (НАЧАЛОПЕРИОДА(БюджетныйОбороты.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(БюджетныйОстаткиИОбороты.Период, МЕСЯЦ))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Производство.Номенклатура, СебестоимостКСГрупп.НоменлатураКом) КАК Номенклатура,
	               |	ЕСТЬNULL(Производство.Предприятия, СебестоимостКСГрупп.ПредприятияКом) КАК Предприятие,
	               |	ЕСТЬNULL(Производство.Месяц, СебестоимостКСГрупп.Месяц) КАК Месяц,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(Производство.Количество, 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЕСТЬNULL(Производство.Сумма, 0) / Производство.Количество
	               |	КОНЕЦ КАК СебестоимостьПроизводства,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(СебестоимостКСГрупп.КоличествоКом, 0) = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЕСТЬNULL(СебестоимостКСГрупп.СуммаКом, 0) / СебестоимостКСГрупп.КоличествоКом
	               |	КОНЕЦ КАК СебестоимостьКоммерческиеРасходы
	               |ИЗ
	               |	Производство КАК Производство
	               |		ПОЛНОЕ СОЕДИНЕНИЕ СебестоимостКСГрупп КАК СебестоимостКСГрупп
	               |		ПО Производство.Номенклатура = СебестоимостКСГрупп.НоменлатураКом
	               |			И Производство.Предприятия = СебестоимостКСГрупп.ПредприятияКом
	               |			И Производство.Месяц = СебестоимостКСГрупп.Месяц";
	
	Запрос.УстановитьПараметр("Дата1", Объект.Сценарий.АктуальнаяДата);
	Запрос.УстановитьПараметр("Дата2", Объект.Сценарий.ДатаКонца);
	Запрос.УстановитьПараметр("СценарийПлана", Объект.Сценарий);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Для каждого ТекСтрока Из Объект.ПараметрыПроизводства Цикл
		ОтобранныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура, Предприятие, Месяц", ТекСтрока.Номенклатура,ТекСтрока.Предприятие,ТекСтрока.Месяц)); 		
		Для каждого ТекСтрокаВыборки Из ОтобранныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(ТекСтрока, ТекСтрокаВыборки);	
		КонецЦикла;
		Если НЕ ОтобранныеСтроки.Количество() Тогда
			
			ТекСтрока.СебестоимостьПроизводства = 0;
			ТекСтрока.СебестоимостьКоммерческиеРасходы = 0;
			ТекСтрока.СебестоимостьНалоги = 0;
			ТекСтрока.СебестоимостьМагистраль = 0;
			ТекСтрока.Себестоимость91 = 0;
			ТекСтрока.СебестоимостьПрочие = 0;
			
		КонецЕсли;
	КонецЦикла; 
	
	
	ПересчитатьСебестоимостьИтого();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроизводстваДляССПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчитатьСебестоимостьИтого();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСебестоимостьИтого()
	
	Для каждого ТекСтрока Из Объект.ПараметрыПроизводства Цикл
		ТекСтрока.СебестоимостьИтого = ТекСтрока.СебестоимостьПроизводства + ТекСтрока.СебестоимостьКоммерческиеРасходы + 	
		ТекСтрока.Себестоимость91 + ТекСтрока.СебестоимостьПрочие + ТекСтрока.СебестоимостьМагистраль + ТекСтрока.СебестоимостьНалоги;
	КонецЦикла; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПересчитатьСебестоимостьИтого();
КонецПроцедуры


