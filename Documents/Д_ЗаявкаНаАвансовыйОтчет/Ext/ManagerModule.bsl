
Процедура Печать(ТабДок, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено) Экспорт
	
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.Д_ЗаявкаНаАвансовыйОтчет.ПолучитьМакет("Печать");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Д_ЗаявкаНаАвансовыйОтчет.Автор,
	|	Д_ЗаявкаНаАвансовыйОтчет.Дата,
	|	Д_ЗаявкаНаАвансовыйОтчет.Номер,
	|	Д_ЗаявкаНаАвансовыйОтчет.Комментарий,
	|	Д_ЗаявкаНаАвансовыйОтчет.Затраты.(
	|		Ссылка,
	|		НомерСтроки,
	|		Сумма,
	|		Описание,
	|		Предприятие,
	|		Подразделение,
	|		Статья,
	|		ИнвПроект,
	|		СуммаБУ,
	|		Валюта,
	|		ВалютнаяСумма,
	|		Курс
	|	),
	|	Д_ЗаявкаНаАвансовыйОтчет.ДокОснование,
	|	Д_ЗаявкаНаАвансовыйОтчет.Ссылка,
	|	Д_ЗаявкаНаАвансовыйОтчет.ВозвратДенежныхСредств,
	|	Д_ЗаявкаНаАвансовыйОтчет.Кассир,
	|	Д_ЗаявкаНаАвансовыйОтчет.Файл,
	|	ЕСТЬNULL(Д_ЗаявкаНаАвансовыйОтчет.ТекущийБизнесПроцесс.Завершен, ЛОЖЬ) КАК ТекущийБизнесПроцессЗавершен,
	|	Д_ЗаявкаНаАвансовыйОтчет.ПодотчетноеЛицо,
	|	Д_ЗаявкаНаАвансовыйОтчет.ДатаПолучения,
	|	Д_ЗаявкаНаАвансовыйОтчет.ВозвратДенежныхСредствБУ,
	|	Д_ЗаявкаНаАвансовыйОтчет.Предприятие,
	|	Д_ЗаявкаНаАвансовыйОтчет.Валюта,
	|	Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату.(
	|		ДокОснование
	|	)
	|ИЗ
	|	Документ.Д_ЗаявкаНаАвансовыйОтчет КАК Д_ЗаявкаНаАвансовыйОтчет
	|ГДЕ
	|	Д_ЗаявкаНаАвансовыйОтчет.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);

		
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьШтампы = Макет.ПолучитьОбласть("Штампы");
	ОбластьСогласование = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьКомментарий = Макет.ПолучитьОбласть("Комментарий");
	ОбластьПрикрепление = Макет.ПолучитьОбласть("Прикрепление");

	Шапка1 = Макет.ПолучитьОбласть("Шапка1");
	Шапка2 = Макет.ПолучитьОбласть("Шапка2");
	ШапкаДокОснование = Макет.ПолучитьОбласть("ШапкаДокОснование");
	// статус
	ШапкаСтатус = Макет.ПолучитьОбласть("ШапкаСтатус");
	
	ОбластьТЧШапка		= Макет.ПолучитьОбласть("ТЧШапка");
	ОбластьТЧ 			= Макет.ПолучитьОбласть("ТЧ");
	ОбластьТЧ_Недоступно= Макет.ПолучитьОбласть("ТЧ_Недоступно");
	ОбластьТЧИтого 		= Макет.ПолучитьОбласть("ТЧ_Итого");
	ОбластьТЧШапка_Валюта 		= Макет.ПолучитьОбласть("ТЧШапка_Валюта");
	ОбластьТЧ_Валюта 			= Макет.ПолучитьОбласть("ТЧ_Валюта");
	ОбластьТЧ_Недоступно_Валюта = Макет.ПолучитьОбласть("ТЧ_Недоступно_Валюта");
	ОбластьТЧИтого_Валюта 		= Макет.ПолучитьОбласть("ТЧ_Итого_Валюта");
	
	ТабДок.Очистить();
	
	//добавлено Д1. разграничение доступности предприятий
	ДоступныеПредприятия = ПараметрыСеанса.ДоступныеПредприятия;
	СтрокаПредупрежденияОНедоступныхПредприятиях = "Внимание! В данном документе есть данные по недоступным вам предприятиям/проектам:";
	//конец добавления д1

	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
        ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка1.Параметры.Заполнить(Выборка);
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Автор);
		Шапка1.Параметры.Автор = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		
		ТабДок.Вывести(Шапка1, Выборка.Уровень());
		
		ТаблицаЗаявок = Выборка.СтрокиЗаявкиНаОплату.Выгрузить();
		ТаблицаЗаявок.Свернуть("ДокОснование");
		Если ТаблицаЗаявок.Количество() > 1 Тогда
			Для Каждого СтрокаЗаявокНаОплату Из ТаблицаЗаявок Цикл
				ШапкаДокОснование.Параметры.Заполнить(СтрокаЗаявокНаОплату);
				ТабДок.Вывести(ШапкаДокОснование);
			КонецЦикла;
		Иначе
			ШапкаДокОснование.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ШапкаДокОснование);
		КонецЕсли;
		
		Шапка2.Параметры.Заполнить(Выборка);
		
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Кассир);
		Шапка2.Параметры.Кассир = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		
		ТабДок.Вывести(Шапка2, Выборка.Уровень());
		
		// статус
		ШапкаСтатус.Параметры.ТекущийСтатус = БПСервер.ПолучитьТекущуюТочкуМаршрута(Ссылка);
		ТабДок.Вывести(ШапкаСтатус, Выборка.Уровень());
		
		Пока ВыборкаПоФайлам.Следующий() Цикл
			ОбластьПрикрепление.Параметры.Вложение = "Прикрепленный файл: " + Строка(ВыборкаПоФайлам.Файл);
			ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
			ТабДок.Вывести(ОбластьПрикрепление);		
		КонецЦикла;
		
		ТабДок.Вывести(?(Выборка.Валюта, ОбластьТЧШапка_Валюта, ОбластьТЧШапка));
		
		ВалютнаяСуммаПоДокументу = 0;
		СуммаПоДокументу 		 = 0;
		СуммаПоДокументуБУ 		 = 0;
		
		// 12.05.2016 решено отойти от данного алгоритма {
		//ТекущийПользовательАвтор = (НЕ ПараметрыСеанса.ДоступныеПользователи.Найти(Выборка.Автор) = Неопределено) ИЛИ (НЕ ПараметрыСеанса.ДоступныеПользователи.Найти(Выборка.Кассир) = Неопределено) ИЛИ РольДоступна("ОператорКазны");
		//НЕДоступноПредприятиеШапки = ДоступныеПредприятия.Найти(Выборка.Предприятие) = Неопределено;
		//СтатьиИсключение = БПСервер.ПолучитьСтатьиИсключения();
		//}
		
		Если Выборка.Валюта Тогда
			ЗаявкаВОднойВалюте = Истина;
			ВалютаПервойСтрочки = Неопределено;
		КонецЕсли;
		
		ВыборкаТЧ = Выборка.Затраты.Выбрать();
		
		Пока ВыборкаТЧ.Следующий() Цикл
			
			// 12.05.2016 решено отойти от данного алгоритма {			
			//Если ДоступныеПредприятия.Найти(ВыборкаТЧ.Предприятие) = Неопределено И НЕ ТекущийПользовательАвтор И НЕДоступноПредприятиеШапки И СтатьиИсключение.Найти(ВыборкаТЧ.Статья) = Неопределено Тогда //предприятие недоступно формируем строку предупреждения
			//	
			//	Если Выборка.Валюта Тогда
			//		ВыводимаяОбластьТЧ = ОбластьТЧ_Недоступно_Валюта;
			//	Иначе
			//		ВыводимаяОбластьТЧ = ОбластьТЧ_Недоступно;
			//	КонецЕсли;
			//	
			//Иначе	
				
				Если Выборка.Валюта Тогда
					ВыводимаяОбластьТЧ = ОбластьТЧ_Валюта;
				Иначе
					ВыводимаяОбластьТЧ = ОбластьТЧ;
				КонецЕсли;
				
			//КонецЕсли;
			//}
			
			ВыводимаяОбластьТЧ.Параметры.Заполнить(ВыборкаТЧ);
			
			Если (РольДоступна("ОФК") И НЕ Выборка.ТекущийБизнесПроцессЗавершен) ИЛИ БюджетныйНаСервере.РольАдминаДоступнаСервер()  Тогда
				ВыводимаяОбластьТЧ.Параметры.РасшифровкаСтатья = Новый Структура("Ссылка, НомерСтроки, Статья", Выборка.ССылка, ВыборкаТЧ.НомерСтроки, ВыборкаТЧ.Статья); 
				ВыводимаяОбластьТЧ.Параметры.РасшифровкаПодразделение = Новый Структура("Ссылка, НомерСтроки, Подразделение, Предприятие", Выборка.ССылка, ВыборкаТЧ.НомерСтроки, ВыборкаТЧ.Подразделение, ВыборкаТЧ.Предприятие); 
			КонецЕсли;
			
			Если Выборка.Валюта Тогда    //Если все строки заявки в одной валюте, то покажем валютную сумму в итогах, иначе ничего не выведем
				
				Если ВалютаПервойСтрочки = Неопределено Тогда
					ВалютаПервойСтрочки = ВыборкаТЧ.Валюта;
				КонецЕсли;
				
				Если ВалютаПервойСтрочки <> ВыборкаТЧ.Валюта Тогда
					ЗаявкаВОднойВалюте = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДок.Вывести(ВыводимаяОбластьТЧ, ВыборкаТЧ.Уровень());
			
			ВалютнаяСуммаПоДокументу = ВалютнаяСуммаПоДокументу + ВыборкаТЧ.ВалютнаяСумма;
			СуммаПоДокументу = СуммаПоДокументу + ВыборкаТЧ.Сумма;
			СуммаПоДокументуБУ = СуммаПоДокументуБУ + ВыборкаТЧ.СуммаБУ;
		КонецЦикла;
		
		Если Выборка.Валюта Тогда
			ОбластьТЧИтого_Валюта.Параметры.ВалютнаяСуммаИтого 	= ?(ЗаявкаВОднойВалюте, ВалютнаяСуммаПоДокументу, "");
			ОбластьТЧИтого_Валюта.Параметры.СуммаИтого 			= СуммаПоДокументу;
			ОбластьТЧИтого_Валюта.Параметры.СуммаБУИтого 		= СуммаПоДокументуБУ;
			ТабДок.Вывести(ОбластьТЧИтого_Валюта, Выборка.Уровень());
		Иначе
			ОбластьТЧИтого.Параметры.СуммаИтого = СуммаПоДокументу;
			ОбластьТЧИтого.Параметры.СуммаБУИтого = СуммаПоДокументуБУ;
			ТабДок.Вывести(ОбластьТЧИтого, Выборка.Уровень());
		КонецЕсли;
		
		// 07.11.13 остаток задолженности по подотчетному лицу
		//УстановитьПривилегированныйРежим(Истина);
		//ЗапросОстаткаЗадолженности = Новый Запрос;               
		//ЗапросОстаткаЗадолженности.УстановитьПараметр("ТекДата", Выборка.Ссылка.Дата); //ТекущаяДата() берется дата Из ЗаявкиАО т.к. при "текдате" уже в запросе вычислялся остаток задолжности
		//ЗапросОстаткаЗадолженности.УстановитьПараметр("Сотрудник", Выборка.ПодотчетноеЛицо);
		//ЗапросОстаткаЗадолженности.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//                                   |	СУММА(ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0)) КАК СуммаОстатокУчетный,
		//                                   |	СУММА(ЕСТЬNULL(КазнаОстатки.СуммаОстаток, 0)) КАК СуммаОстатокКазна
		//                                   |ИЗ
		//                                   |	РегистрБухгалтерии.Казна.Остатки(
		//                                   |			&ТекДата,
		//                                   |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Казна.Подотчет),
		//                                   |			,
		//                                   |			Субконто1 = &Сотрудник
		//                                   |				И Предприятия В
		//                                   |					(ВЫБРАТЬ
		//                                   |						сабПредприятиеКазна.Значение
		//                                   |					ИЗ
		//                                   |						Константа.сабПредприятиеКазна КАК сабПредприятиеКазна)) КАК КазнаОстатки,
		//                                   |	РегистрБухгалтерии.Учетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.РасчетыСПодотчетными)), , Субконто1 = &Сотрудник) КАК УчетныйОстатки";
		//								   
		//ТЗОстатки = ЗапросОстаткаЗадолженности.Выполнить().Выгрузить();
		//УстановитьПривилегированныйРежим(Ложь);
		//
		//ОбластьОстатокЗадолженности = Макет.ПолучитьОбласть("Остаток");
		//ОбластьОстатокЗадолженности.Параметры.СуммаНачКазна   = ТЗОстатки.Итог("СуммаОстатокКазна");	
		//ОбластьОстатокЗадолженности.Параметры.СуммаНачУчетный = ТЗОстатки.Итог("СуммаОстатокУчетный");	
		//ОбластьОстатокЗадолженности.Параметры.СуммаДок        = СуммаПоДокументу;
		//ОбластьОстатокЗадолженности.Параметры.СуммаКон        = ТЗОстатки.Итог("СуммаОстатокКазна") + ТЗОстатки.Итог("СуммаОстатокУчетный") - СуммаПоДокументу;
		//ТабДок.Вывести(ОбластьОстатокЗадолженности);
		//
		//ОбластьКомментарий.Параметры.КомментарийДок = Выборка.Комментарий;
		//ТабДок.Вывести(ОбластьКомментарий);
		
		//показ этапов согласования СЗ
						
		БПСервер.ПоказатьРецензентов(ТабДок, Выборка.Ссылка, Неопределено, Ссылка, "Штампы|Отметка", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
			
		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	//}}
КонецПроцедуры

Функция ПолучитьСтатьиИсключения() Экспорт

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ПользователиДоступныеСтатьи.СтатьяДДС
|ИЗ
|	Справочник.Пользователи.ДоступныеСтатьи КАК ПользователиДоступныеСтатьи
|ГДЕ
|	ПользователиДоступныеСтатьи.Ссылка В(&Ссылка)";

Запрос.УстановитьПараметр("Ссылка", БПСервер.ПолучитьМассивПользователей());

Результат = Запрос.Выполнить();
Возврат Результат.Выгрузить().ВыгрузитьКолонку("СтатьяДДС");
		

КонецФункции // ()

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаСписка" ИЛИ ВидФормы = "ФормаВыбора" Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыСеанса.СтруктураПараметровФормСпискаДокументооборота = Новый ФиксированнаяСтруктура(Новый Структура("ВидВнутреннегоДокумента, ИмяДокумента, ФормаВыбора", Справочники.Д_ВидыВнутреннихДокументов.ПолучитьЭлементПредопределенный("ЗаявкаНаАвансовыйОтчет"), "Д_ЗаявкаНаАвансовыйОтчет", ВидФормы = "ФормаВыбора"));
		ВыбраннаяФорма = "Документ.Д_ЗаявкаНаАвансовыйОтчет.Форма.ФормаСпискаБП";
	КонецЕсли;
КонецПроцедуры
