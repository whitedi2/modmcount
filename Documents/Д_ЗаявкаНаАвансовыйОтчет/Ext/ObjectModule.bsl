
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
		// Заполнение шапки
		Предприятие = ДанныеЗаполнения.Предприятие;
		ДокОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ДатаПолучения = ДанныеЗаполнения.Дата;
		
		ОтобранныеСтроки = ДанныеЗаполнения.ЗаявкаБезнал.НайтиСтроки(Новый Структура("ВыдачаВПодОтчет", Истина));
		Если ОтобранныеСтроки.Количество() = 1 Тогда
			ПодотчетноеЛицо = ОтобранныеСтроки[0].Контрагент;	
			УИДСтрокиДокОснования = ОтобранныеСтроки[0].УИДСтроки;
			
			НоваяСтрока = Затраты.Добавить();
			НоваяСтрока.Предприятие = ОтобранныеСтроки[0].ЦФО;
			НоваяСтрока.Подразделение = ОтобранныеСтроки[0].Подразделение;
			НоваяСтрока.ИнвПроект = ОтобранныеСтроки[0].ИнвПроект;
			НоваяСтрока.Статья = ОтобранныеСтроки[0].СтатьяДДС;
			НоваяСтрока.Сумма = ОтобранныеСтроки[0].СуммаДДС;
			НоваяСтрока.Описание = ОтобранныеСтроки[0].НазначениеПлатежа;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
		// Заполнение шапки
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	СуммаДокумента = Затраты.Итог("Сумма") + ВозвратДенежныхСредств;
	//при установки пометки удаления проверка на состояние согласования
	
	//Запишем док. основание если одна заявка на оплату
	ЗаписатьДокОснование();
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ТекущаяЗадача = "";
	Автор = "";
	ТекущийБизнесПроцесс = "";
	НеСогласована = Ложь;
	Доступность = Ложь;
	УИДСтрокиДокОснования = "";
	СтрокиЗаявкиНаОплату.Очистить();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Движения.Бюджетный.Записывать = Истина;
	//Для Каждого ТекСтрокаЗаявка Из Затраты Цикл
	//	// регистр Бюджетный 
	//	Движение = Движения.Бюджетный.Добавить();
	//	Движение.СчетДт = ПланыСчетов.Учетный.Счет7601();
	//	Движение.СчетКт = ПланыСчетов.Учетный.Счет5001();
	//	Движение.ПодразделениеКт = ТекСтрокаЗаявка.Подразделение;
	//	Движение.Период = Дата;
	//	Движение.Предприятия = ТекСтрокаЗаявка.Предприятие;
	//	Движение.СценарийПлана = Справочники.СценарииПланирования.ПланПоЗаявкам;
	//	Движение.Сумма = ТекСтрокаЗаявка.Сумма;
	//	Движение.Содержание = ТекСтрокаЗаявка.Описание;
	//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СтатьиДДС] = ТекСтрокаЗаявка.Статья;
	//	//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаЗаявка.Контрагент;
	//	
	//КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//ищем дубли
	Если ЗначениеЗаполнено(ДокОснование) И ЗначениеЗаполнено(УИДСтрокиДокОснования) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка
		|ИЗ
		|	Документ.Д_ЗаявкаНаАвансовыйОтчет.СтрокиЗаявкиНаОплату КАК Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату
		|ГДЕ
		|	Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.УИДСтрокиДокОснования = &УИДСтрокиДокОснования
		|	И Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.ДокОснование = &ДокОснование
		|	И НЕ Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка = &Ссылка
		|	И Д_ЗаявкаНаАвансовыйОтчетСтрокиЗаявкиНаОплату.Ссылка.ПометкаУдаления = ЛОЖЬ";
		
		Если УИДСтрокиДокОснования = "Несколько строк..." Тогда
			
			Для Каждого Строка Из СтрокиЗаявкиНаОплату Цикл
				
				Запрос.УстановитьПараметр("УИДСтрокиДокОснования", Строка.УИДСтрокиДокОснования);
				Запрос.УстановитьПараметр("ДокОснование", ДокОснование);
				Запрос.УстановитьПараметр("Ссылка", Ссылка);
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Количество() Тогда
					сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					"По строке заявки " + Строка.НомерСтроки + " уже существуют авансовые отчеты.",
					,
					,
					"УИДСтрокиДокОснования",
					Отказ);
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			Запрос.УстановитьПараметр("УИДСтрокиДокОснования", УИДСтрокиДокОснования);
			Запрос.УстановитьПараметр("ДокОснование", ДокОснование);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Если Выборка.Количество() Тогда
				сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				"По строке заявки уже существуют авансовые отчеты.",
				,
				,
				"УИДСтрокиДокОснования",
				Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для каждого ТекСтрока Из Затраты Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.Сумма) И НЕ ЗначениеЗаполнено(ТекСтрока.СуммаБУ) Тогда
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			"Не заполнена СуммаУУ и СуммаБУ.",
			"Затраты",
			ТекСтрока.НомерСтроки,
			"Сумма",
			Отказ);
		КонецЕсли;
		
	КонецЦикла; 
	
	
КонецПроцедуры

Процедура ЗаписатьДокОснование()
	
	ТаблицаЗаявок = СтрокиЗаявкиНаОплату.Выгрузить(, "ДокОснование");
	ТаблицаЗаявок.Свернуть("ДокОснование");
	Если ТаблицаЗаявок.Количество() = 1 Тогда
		ДокОснование = ТаблицаЗаявок[0].ДокОснование; 	
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры
