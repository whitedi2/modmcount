
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр		 = "Файл Excel (*.xls)|*.xls*";
	ДиалогВыбораФайла.Расширение	 = "xls";
	ДиалогВыбораФайла.Заголовок		 = "Выберите файл";
	ДиалогВыбораФайла.ПолноеИмяФайла = ПутьКФайлу;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) ИЛИ Не ЗначениеЗаполнено(СтрокаНачала) Или НЕ ЗначениеЗаполнено(СтрокаОкончания) Тогда
		Сообщить("Не указан путь, либо параметры начала и окончания загрузки."); 	
	Иначе  			
		XLSОбъект = Новый COMОбъект("Excel.Application");
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		
		//Получааем количество строк в книге
		//ВсегоСтрок = Лист.UsedRange.Rows.Count;
		
		Область = Лист.Range(Лист.Cells(СтрокаНачала,1), Лист.Cells(СтрокаОкончания,13));	
		
		//получаем массив колонок)))
		Данные = Область.Value.Выгрузить();
		//ДанныеКонтрагент = Данные[6];
		 		
				
		ТЧ = ВладелецФормы;
		
		Для ТекСтрока = 0 по СтрокаОкончания - СтрокаНачала - 1 Цикл
			
			
			////добавляем запись в табличную часть
			ТЧ.ДобавитьСтроку();
			ТЧ.ТекущиеДанные.Основание = Данные[6][ТекСтрока];
			ТЧ.ТекущиеДанные.Месяц = Дата(СокрЛП(Данные[0][ТекСтрока]));
			
			Попытка
				Данные[2][ТекСтрока] = Число(Данные[2][ТекСтрока]);
			Исключение
			    Данные[2][ТекСтрока] = 0;
			КонецПопытки;
			Попытка
				Данные[3][ТекСтрока] = Число(Данные[3][ТекСтрока]);
			Исключение
				Данные[3][ТекСтрока] = 0;
			КонецПопытки;
			ТЧ.ТекущиеДанные.СуммаСеб = Данные[2][ТекСтрока];
			ТЧ.ТекущиеДанные.СуммаБДДС = Данные[3][ТекСтрока];
			
			ЦФО = ПолучитьЦФО(СокрЛП(Строка(Данные[4][ТекСтрока])), ТЧ.ТекущиеДанные.НомерСтроки, "ЦФО");
			Подразделение = ПолучитьПодразделение(СокрЛП(Строка(Данные[5][ТекСтрока])), ЦФО, ТЧ.ТекущиеДанные.НомерСтроки, "Подразделение"); 
			ТЧ.ТекущиеДанные.ЦФО = ЦФО;
			
			Если ТЧ.Имя = "ЗатратыКП" Тогда
				ТЧ.ТекущиеДанные.ВидДеятельности = Подразделение;
			Иначе
				ТЧ.ТекущиеДанные.Подразделение = Подразделение;
			КонецЕсли;
			
			КодСтатьи = Данные[1][ТекСтрока];			
			СтатьяБДДС = НайтиСтатьюВБДДС(КодСтатьи);
			
			Если ПустаяСтрока(СтатьяБДДС) Тогда
				СтатьяСебестоимости = НайтиСтатьюССПоКоду(КодСтатьи);
				Если ПустаяСтрока(СтатьяСебестоимости) Тогда
					Сообщить ("Не найдена статья по коду " + КодСтатьи + " в справочнике СтатьиДДС и С/с (строка " + ТЧ.ТекущиеДанные.НомерСтроки + ")");
					СтатьяБДДС = "";
				КонецЕсли;
			иначе
				СтатьяСебестоимости = НайтиСтатьюВСебестоимости(СтатьяБДДС);
				НомерПризнака = 1;
				Если ПустаяСтрока(СтатьяСебестоимости) Тогда
					СтатьяСебестоимости = НайтиСтатьюВФР(СтатьяБДДС);
					НомерПризнака = 2;
					Если ПустаяСтрока(СтатьяСебестоимости) Тогда
						сообщить("Не найдено соответствие статьи затрат со статьей БДДС по коду " + КодСтатьи + " (строка " + ТЧ.ТекущиеДанные.НомерСтроки + ")");
						СтатьяСебестоимости = "";
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
			ТЧ.ТекущиеДанные.СтатьяЗатрат = СтатьяСебестоимости;
			
			Если Не ТЧ.Имя = "ЗатратыКП" Тогда
				ТЧ.ТекущиеДанные.Признак = ПолучитьПризнак(НомерПризнака);
			КонецЕсли;	
			
			ТЧ.ТекущиеДанные.СтатьяБДДС = СтатьяБДДС;
							
			//ТЧ.ТекущиеДанные.Деятельность = ПолучитьДеятельность(ЦФО);
			
		КонецЦикла;
		
		XLSОбъект.Application.Quit();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЦФО(ЦФО, НомерСтроки, Кто)
	ЦФО2 = Справочники.Предприятия.НайтиПоНаименованию(СокрЛП(ЦФО), 1);
	Если ПустаяСтрока(ЦФО2) Тогда
		Сообщить(Кто + " " + ЦФО + " не найден в справочнике Предприятия (строка " + НомерСтроки + ")");	
	КонецЕсли;
	Возврат ЦФО2;
КонецФункции

&НаСервере
Функция ПолучитьПодразделение(Подразделение, ЦФО, НомерСтроки, Кто)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыДеятельности.Ссылка
	               |ИЗ
	               |	Справочник.СтруктураПредприятия КАК ВидыДеятельности
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &Наименование = ""Основное""
	               |				ТОГДА ВидыДеятельности.Наименование ПОДОБНО ""%Основное%""
	               |			ИНАЧЕ ВидыДеятельности.Наименование = &Наименование
	               |		КОНЕЦ
	               |	И ВидыДеятельности.Владелец = &Владелец
	               |	И ВидыДеятельности.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидыДеятельности.Код";
	
	Запрос.УстановитьПараметр("Владелец", ЦФО);
	Если НРег(Прав(Подразделение, 8)) = "основное" Тогда
		Подразделение = "Основное"
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование", Подразделение);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();	
	
	Если НЕ Выборка.Количество() Тогда
		Сообщить(Кто + " " + Подразделение + " не найдено в справочнике Подразделений (строка " + НомерСтроки + ")");	
	Иначе
		Возврат Выборка[0].Ссылка;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция ПолучитьДеятельность(ЦФО)
	Возврат ЦФО.ВидДеятельности;	
КонецФункции

&НаСервере
Функция НайтиСтатьюССПоКоду(КодСтатьи)
	Возврат Справочники.СтатьиЗатрат.НайтиПоКоду(КодСтатьи);	
КонецФункции // НайтиСтатьюССПоКоду()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Месяц = Параметры.Месяц;
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Сообщить("Не указан путь к файлу."); 	
	Иначе  	
		
		XLSОбъект = Новый COMОбъект("Excel.Application");
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		
		//Получааем количество строк в книге
		СтрокаОкончания = Лист.UsedRange.Rows.Count;
	КонецЕсли;
КонецПроцедуры

 
&НаСервере
Функция НайтиСтатьюВБДДС(КодСтатьи)
	Возврат Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду(КодСтатьи);
КонецФункции

&НаСервере
Функция НайтиСтатьюВФР(СтатьяБДДС)
	Возврат Справочники.СтатьиДоходовРасходов.НайтиПоРеквизиту("СтатьяБДДС", СтатьяБДДС);	
КонецФункции

&НаСервере
Функция НайтиСтатьюВСебестоимости(СтатьяБДДС)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.СтатьяБДДС = &СтатьяБДДС";
	
	Запрос.УстановитьПараметр("СтатьяБДДС", СтатьяБДДС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;	
	Иначе
		Возврат Справочники.СтатьиЗатрат.ПустаяСсылка();
	КонецЕсли;
	//Возврат Справочники.ИздержкиОбращения.НайтиПоРеквизиту("СтатьяБДДС", СтатьяБДДС);	
КонецФункции


&НаСервере
Функция ПолучитьПризнак(Номер)
	Если Номер = 1 Тогда
		возврат Перечисления.Д_ПризнакСписания.Себестоимость;
	иначе
		возврат Перечисления.Д_ПризнакСписания.ФинРез;
	КонецЕсли;  
КонецФункции	
