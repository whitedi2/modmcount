
#Область ОбработчикиСобытийИРеквизитовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("НомерСтроки") Тогда
		//Сообщить(Параметры.НомерСтроки);	
	КонецЕсли;
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма, Ложь);
	СценарийДоИзменения = Объект.Сценарий;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ГруппаБюджет = БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел");
	
	Если ЗначениеЗаполнено(Объект.Сценарий) Тогда
		СценарийПриИзменении(0);
	КонецЕсли;
	
	МесяцПриИзменении(0);
	ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();
			
	СценарийДО = Объект.Сценарий;
	
	Если ФоновоеПроведение() Тогда
		ПодключитьОбработчикОжидания("ПроверитьПроведение", 1);
	КонецЕсли;
		
	// связка бюджет-оперативный_бюджет
	ЗаблокироватьДанныеФормыДляРедактирования();
	ПолучитьАктуальныеДанныеПоСтрокамСервер();
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Блокировка" Тогда
		Если Параметр.Ссылка = Объект.Ссылка Тогда
			ПриОткрытии(Неопределено);			
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда
		сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		
		Для каждого ТекСтрока Из Объект.ЗатратыКП Цикл
			
			Если Не ЗначениеЗаполнено(ТекСтрока.УИД) Тогда
				ТекСтрока.УИД = новый УникальныйИдентификатор;	
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ЦФО) Тогда
				
				Если Не БПСервер.ПолучитьКонстантуНаСервере("сабИспользоватьНесколькоПредприятий") Тогда
					ТекСтрока.ЦФО = БюджетныйНаСервере.ПолучитьПредприятие();
				КонецЕсли;
			
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ИнвПроект) Тогда 
				ТекСтрока.ИнвПроект = Неопределено;
			КонецЕсли;	
			
		КонецЦикла
		
	Иначе
		
		Для каждого ТекСтрока Из Объект.Затраты Цикл
			
			Если Не ЗначениеЗаполнено(ТекСтрока.УИД) Тогда
				ТекСтрока.УИД = новый УникальныйИдентификатор;	
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ЦФО) Тогда
				
				Если Не БПСервер.ПолучитьКонстантуНаСервере("сабИспользоватьНесколькоПредприятий") Тогда
					ТекСтрока.ЦФО = БюджетныйНаСервере.ПолучитьПредприятие();
				КонецЕсли;
			
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ИнвПроект) Тогда 
				ТекСтрока.ИнвПроект = Неопределено;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ФоновоеПроведение() Тогда
		ПодключитьОбработчикОжидания("ПроверитьПроведение", 1);
	КонецЕсли;
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТекТЧ = Объект.ЗатратыКП
	Иначе
		ТекТЧ = Объект.Затраты
	КонецЕсли;
	
	НовыеБюджеты.Очистить();
	
	Для Каждого Строка Из ТекТЧ Цикл
		Если Не ЗначениеЗаполнено(Строка.Бюджет) Тогда
			продолжить;
		КонецЕсли;
		Если НовыеБюджеты.НайтиПоЗначению(Строка.Бюджет) = Неопределено Тогда
			НовыеБюджеты.Добавить(Строка.Бюджет);
		КонецЕсли;
	КонецЦикла;
	
	ПровестиДокументыБюджета();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СценарийДО = Объект.Сценарий;
	Если Объект.СценарийПП.Пустая() Тогда
		Объект.СценарийПП = Объект.Сценарий;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
		
	ЗаполнитьСписокВыбораМесяцев();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	СтруктураДанных = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Предприятие, "УчетПоПодразделениям, ВидДеятельности"); 
	
	Если НЕ СтруктураДанных = Неопределено Тогда
		Элементы.Подразделение.Доступность = СтруктураДанных.УчетПоПодразделениям;
		Если НЕ Элемент = Неопределено Тогда 
			Если СтруктураДанных.УчетПоПодразделениям Тогда
				Объект.Подразделение = СтруктураДанных.ВидДеятельности;
			Иначе
				Объект.Подразделение = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)

	ИзменитьТабличныеЧасти();
		
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункцииОбработчиковФормы

 &НаКлиенте
Процедура ЗаполнитьСписокВыбораМесяцев()
	
	МассивПредставлений = Новый Массив;
	МассивПредставлений.Добавить("");
	МассивПредставлений.Добавить("Январь");
	МассивПредставлений.Добавить("Февраль");
	МассивПредставлений.Добавить("Март");
	МассивПредставлений.Добавить("Апрель");
	МассивПредставлений.Добавить("Май");
	МассивПредставлений.Добавить("Июнь");
	МассивПредставлений.Добавить("Июль");
	МассивПредставлений.Добавить("Август");
	МассивПредставлений.Добавить("Сентябрь");
	МассивПредставлений.Добавить("Октябрь");
	МассивПредставлений.Добавить("Ноябрь");
	МассивПредставлений.Добавить("Декабрь");
	Элементы.Месяц.СписокВыбора.Очистить();
	
	Если НЕ Объект.Сценарий.Пустая() Тогда
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
		ТекДата = ДатаНачала;
		Объект.Дата = ТекДата;
		
		Пока ТекДата <= ДатаОкончания Цикл
			Элементы.Месяц.СписокВыбора.Добавить(НачалоМесяца(ТекДата), МассивПредставлений[Месяц(ТекДата)] + " " + Строка(Год(ТекДата)));
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(Объект.Месяц) Тогда
			Объект.Месяц = Элементы.Месяц.СписокВыбора[0].Значение;
		Иначе
			Объект.Месяц = Объект.Месяц;
		КонецЕсли;
		
	КонецЕсли;
		
	Элементы.Месяц.СписокВыбора.Вставить(0, Дата(3000, 12, 31), "Все",,БиблиотекаКартинок.УстановитьФлажки);
	Объект.Месяц = Дата(3000, 12, 31);

	Если Не Элементы.Месяц.СписокВыбора.Количество() = 2 Тогда
		
		Если НЕ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
			Объект.Затраты.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		ЭтоКоррБюдет = РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий);
		Элементы.СценарийПП.Видимость = ЭтоКоррБюдет;
		Элементы.ЗатратыКП.Видимость = ЭтоКоррБюдет;
		Элементы.Затраты.ТолькоПросмотр = ЭтоКоррБюдет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПроведение()
	
	ЭтаФорма.Доступность = 1 - ПроверитьПроведениеСервер();
	Если НЕ ЭтаФорма.Доступность Тогда
		//Состояние("Проведение");
	Иначе
		ОтключитьОбработчикОжидания("ПроверитьПроведение");
		ЭтаФорма.Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьПроведениеСервер()
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Объект.Ссылка);
	
	ТекЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Конец", Объект.Номер, Дата('00010101000000')));
	Если ТекЗадания.Количество() Тогда
		Возврат Истина;
	Иначе
		Возврат ложь;
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ФоновоеПроведение()
	Возврат Константы.сабФоновоеПроведение.Получить();
КонецФункции

&НаКлиенте
Процедура ИзменитьТабличныеЧасти()
	
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		Элементы.Затраты.ОтборСтрок = Неопределено;	
		Элементы.ЗатратыКП.ОтборСтрок = Неопределено;
	Иначе
		СтруктураПоиска = Новый Структура("Месяц", Объект.Месяц);
		ФиксСтруктураПоиска = Новый ФиксированнаяСтруктура(СтруктураПоиска);
		
		Элементы.Затраты.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.ЗатратыКП.ОтборСтрок = ФиксСтруктураПоиска;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПровестиДокументыБюджета()
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТекТЧ = Объект.ЗатратыКП
	Иначе
		ТекТЧ = Объект.Затраты
	КонецЕсли;
	
	КолвоСтрок = НовыеБюджеты.Количество();
	
	Для ОбратныйИндексБюджета = 1 По НовыеБюджеты.Количество() Цикл
		
		// связка бюджет-оперативный_бюджет
		ОтобранныеСтроки = ТекТЧ.НайтиСтроки(Новый Структура("Бюджет", НовыеБюджеты[КолвоСтрок - ОбратныйИндексБюджета].Значение));
		Попытка
			ЗаблокироватьДанныеДляРедактирования(НовыеБюджеты[КолвоСтрок - ОбратныйИндексБюджета].Значение);		
			ТекБюджетОбъект = НовыеБюджеты[КолвоСтрок - ОбратныйИндексБюджета].Значение.ПолучитьОбъект();
			Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
				Если Не ТекСтрока.ВнесенаВБюджет Тогда
					ТекСтрока.Бюджет = Документы.Д_Бюджет.ПустаяСсылка();
				КонецЕсли;	
			КонецЦикла;
			ТекБюджетОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
				РасчетыБюджет.ОчиститьНаборЗаписейПоУникальномуИдентификатору(ТекБюджетОбъект.Ссылка, Объект.Ссылка, ТекСтрока.УИД);
			КонецЦикла;
			НовыеБюджеты.Удалить(КолвоСтрок - ОбратныйИндексБюджета);
		Исключение
			Ошибка = "";
			НомераНеобработанныхСтрок = "";
			Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
				РасчетыБюджет.ДобавитьСтрокуИзОперативногоБюджета(ТекСтрока.Бюджет, Объект.Ссылка, ТекСтрока.УИД, ТекСтрока.ВнесенаВБюджет); // регистр, не удалось внести
				НомераНеобработанныхСтрок = НомераНеобработанныхСтрок + Строка(ТекТЧ.Индекс(ТекСтрока) + 1) + ?(ТекТЧ.Индекс(ТекСтрока) = ОтобранныеСтроки.Количество() - 1, ". ", ", ");
			КонецЦикла;
			ТекстОшибки = ОписаниеОшибки();
			Знач1 = Найти(ТекстОшибки, "пользователь:");
			Знач2 = Найти(ТекстОшибки, "сеанс:");
			Ошибка = Строка(НовыеБюджеты[КолвоСтрок - ОбратныйИндексБюджета].Значение) + " открыт пользователем: " + Сред(ТекстОшибки, Знач1 + 14, Знач2-Знач1 - 16);
			Сообщить(Ошибка);
		КонецПопытки;
		//	
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВнестиВБюджет(Команда)

	Если Модифицированность Тогда
		Если Вопрос("Данные будут записаны. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДобавитьСтрокиВБюджет(РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВсеСтрокиВБюджеты(Команда)
	ДобавитьСтрокиВБюджетНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыделенныеСтрокиВБюджеты(Команда)
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТаблицаНепринятыхСтрокОБ = Объект.ЗатратыКП;
		Корр = Истина
	Иначе
		ТаблицаНепринятыхСтрокОБ = Объект.Затраты;
		Корр = Ложь;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	Если Корр Тогда
		Для каждого ТекСтрока Из Элементы.ЗатратыКП.ВыделенныеСтроки Цикл
			Если Элементы.ЗатратыКП.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет Тогда
				Элементы.ЗатратыКП.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет = Ложь;
			Иначе
				Элементы.ЗатратыКП.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет = Истина;
			КонецЕсли;
			МассивСтрок.Добавить(Объект.ЗатратыКП.Индекс(Объект.ЗатратыКП.НайтиПоИдентификатору(ТекСтрока)));
		КонецЦикла; 
		ДобавитьСтрокиВБюджетНаСервере(МассивСтрок);
	Иначе
		Для каждого ТекСтрока Из Элементы.Затраты.ВыделенныеСтроки Цикл
			Если Элементы.Затраты.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет Тогда
				Элементы.Затраты.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет = Ложь;
			Иначе
				Элементы.Затраты.ДанныеСтроки(ТекСтрока).ВнесенаВБюджет = Истина;
			КонецЕсли;
			МассивСтрок.Добавить(Объект.Затраты.Индекс(Объект.Затраты.НайтиПоИдентификатору(ТекСтрока)));
		КонецЦикла; 
		ДобавитьСтрокиВБюджетНаСервере(МассивСтрок);
	КонецЕсли;
КонецПроцедуры

// загрузка из excel

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	//Если Объект.Месяц = Дата(3000, 12, 31) Тогда
	//	сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
	//	Объект,
	//	"Укажите конкретный месяц для загрузки данных.",
	//	,
	//	,
	//	"ВсеМесяцы",
	//	Истина);
	//	Возврат;	
	//КонецЕсли;
	
	ОткрытьФорму("Документ.Д_БюджетПрочихПроектов.Форма.ФормаЗагрузкиЗатрат",,Элементы.Затраты);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКорректировкиИзExcel(Команда)
	
	ОткрытьФорму("Документ.Д_БюджетПрочихПроектов.Форма.ФормаЗагрузкиЗатрат",,Элементы.ЗатратыКП);
		
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиКорректировки(Команда)
	КопироватьСтроки(Элементы.ЗатратыКП, Объект.ЗатратыКП);	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиРасходы(Команда)
	КопироватьСтроки(Элементы.Затраты, Объект.Затраты);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАктуальныеДанныеПоСтрокам(Команда)
	
	ПолучитьАктуальныеДанныеПоСтрокамСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЛимитыПоСтроке(Команда)
	Если Объект.СценарийПП.Пустая() Тогда
		Предупреждение("Для расчета лимитов, укажите Сценарий ПП!");
		Возврат;
	КонецЕсли;
	Если НЕ Команда = Неопределено И Команда.Имя = "РассчитатьЛимитыПоСтрокеИнв" Тогда
		ТекДанные = Элементы.ЗатратыКПИнвестиции.ТекущиеДанные;
		Инв = Истина;
	Иначе	
		ТекДанные = Элементы.ЗатратыКП.ТекущиеДанные;
		Инв = Ложь;
	КонецЕсли;
	Если НЕ ТекДанные = Неопределено Тогда
		СтатьяДДС = ?(ПустаяСтрока(ТекДанные.СтатьяБДДС), БюджетныйНаСервере.ВернутьРеквизит(ТекДанные.СтатьяЗатрат, "СтатьяБДДС"),  ТекДанные.СтатьяБДДС);
		ИнвестиционныйПроект = ?(Инв, ТекДанные.ИнвПроект, Неопределено);
		СтруктураЛимитов = ПолучитьЛимитыНаНачало(ТекДанные.СтатьяЗатрат, СтатьяДДС, ТекДанные.Месяц, Объект.СценарийПП, ТекДанные.ЦФО, ТекДанные.ВидДеятельности);
		Если СтруктураЛимитов.Ошибка Тогда
			Предупреждение("Бюджет по сценарию " + Строка(Объект.СценарийПП) + " не найден!");
			Возврат;
		Иначе
			ТекДанные.ЛимитНаНачало = СтруктураЛимитов.ЛимитСС;
			ТекДанные.ЛимитНаНачалоДДС = СтруктураЛимитов.ЛимитДДС;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункцииОбработчиковКомандФормы

&НаСервере
Процедура ДобавитьСтрокиВБюджет(КорректировочныйБюджет)

	БюджетыДляДобавления = Новый Соответствие;
	
	Если КорректировочныйБюджет Тогда
		Для Каждого Строка Из Объект.ЗатратыКП Цикл
			Если ЗначениеЗаполнено(Строка.Бюджет) Тогда
				Продолжить
			КонецЕсли;
			СоответствиеБюджетаИПредприятия = БюджетыДляДобавления.Получить(Строка.ЦФО);
			Если СоответствиеБюджетаИПредприятия = Неопределено Тогда
				БюджетДляВнесения = ПолучитьБюджетДляВнесения(Строка.ЦФО, Объект.Сценарий);
				Если БюджетДляВнесения = Неопределено Тогда
					Сообщить("Бюджет для предприятия " + Строка(Строка.ЦФО) + " по сценарию " + Строка(Объект.Сценарий) + " не найден. Строка добавлена не будет!");
					Продолжить
				Иначе
					БюджетыДляДобавления.Вставить(Строка.ЦФО, БюджетДляВнесения);
				КонецЕсли;
				СоответствиеБюджетаИПредприятия = БюджетыДляДобавления.Получить(Строка.ЦФО);
			КонецЕсли;
			ДокОбъект = СоответствиеБюджетаИПредприятия.ПолучитьОбъект();
			НоваяСтрокаКорр = ДокОбъект.ЗатратыКП.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорр, Строка);
			НоваяСтрокаКорр.ПодразделениеЗаявителя = Объект.Подразделение; 
			ДокОбъект.Записать();
			Строка.Бюджет = СоответствиеБюджетаИПредприятия;
		КонецЦикла;
	Иначе
		Для Каждого Строка Из Объект.Затраты Цикл
			Если ЗначениеЗаполнено(Строка.Бюджет) Тогда
				Продолжить
			КонецЕсли;
			СоответствиеБюджетаИПредприятия = БюджетыДляДобавления.Получить(Строка.ЦФО);
			Если СоответствиеБюджетаИПредприятия = Неопределено Тогда
				БюджетДляВнесения = ПолучитьБюджетДляВнесения(Строка.ЦФО, Объект.Сценарий);
				Если БюджетДляВнесения = Неопределено Тогда
					Сообщить("Бюджет для предприятия " + Строка(Строка.ЦФО) + " по сценарию " + Строка(Объект.Сценарий) + " не найден. Строка добавлена не будет!");
					Продолжить
				Иначе
					БюджетыДляДобавления.Вставить(Строка.ЦФО, БюджетДляВнесения);
				КонецЕсли;
				СоответствиеБюджетаИПредприятия = БюджетыДляДобавления.Получить(Строка.ЦФО);
			КонецЕсли;
			ДокОбъект = СоответствиеБюджетаИПредприятия.ПолучитьОбъект();
			Если ДокОбъект.БезБюджетаПроизводства Тогда
				НоваяСтрокаЗ = ДокОбъект.Затраты.Добавить();
			Иначе
				НоваяСтрокаЗ = ДокОбъект.БюджетСебестоимости.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(НоваяСтрокаЗ, Строка);
			НоваяСтрокаЗ.ПодразделениеЗаявителя = Объект.Подразделение; 
			ДокОбъект.Записать();
			Строка.Бюджет = СоответствиеБюджетаИПредприятия;
		КонецЦикла;
	КонецЕсли;
	ЭтаФорма.Записать();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиВБюджетНаСервере(ВыделенныеСтроки = Неопределено)
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТекТЧ = Объект.ЗатратыКП
	Иначе
		ТекТЧ = Объект.Затраты
	КонецЕсли;
	
	МассивПредприятий = Новый Массив;
	Если НЕ ВыделенныеСтроки = Неопределено Тогда
		Для каждого ТекСтрока Из ВыделенныеСтроки Цикл
			МассивПредприятий.Добавить(ТекТЧ[ТекСтрока].ЦФО);
		КонецЦикла; 
	Иначе
		МассивПредприятий = ТекТЧ.Выгрузить().ВыгрузитьКолонку("ЦФО");	
	КонецЕсли;
		
	Выборка = ПолучитьБюджетыПоТекущимДанным(МассивПредприятий, Объект.Сценарий);
		
	Если НЕ ВыделенныеСтроки = Неопределено Тогда		
		МассивСтрок = Новый Массив;
		Для каждого ТекСтрока Из ВыделенныеСтроки Цикл
			МассивСтрок.Добавить(ТекТЧ[ТекСтрока])
		КонецЦикла; 
	Иначе
		МассивСтрок = Новый Массив;
		Для каждого ТекСтрока Из ТекТЧ Цикл
			МассивСтрок.Добавить(ТекСтрока);		
		КонецЦикла
	КонецЕсли; 
	
	Для каждого ТекСтрока Из МассивСтрок Цикл
		ОтобранныеСтроки = Выборка.НайтиСтроки(Новый Структура("Сценарий, Предприятие", Объект.Сценарий, ТекСтрока.ЦФО));
		Если ОтобранныеСтроки.Количество() Тогда
			Если ВыделенныеСтроки = Неопределено Тогда
				ТекСтрока.ВнесенаВБюджет = Истина;
				ТекСтрока.Бюджет = ОтобранныеСтроки[0].Ссылка;
			Иначе
				ТекСтрока.Бюджет = ОтобранныеСтроки[0].Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтроки(ЭлТЧ, ТЧ)
	
	ТекСписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	ТекСписокМесяцев.Удалить(0);
	ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();
	
	СпискоМесяцев = ОткрытьФормуМодально("Документ.Д_Бюджет.Форма.ФормаКопированияСтрок", Новый Структура("СписокМесяцев", ТекСписокМесяцев)); 
	Если ТипЗнч(СпискоМесяцев) = Тип("СписокЗначений")  Тогда
		Для каждого ТекМесяц Из СпискоМесяцев Цикл
			Если ТекМесяц.Пометка Тогда
				Для каждого ТекСтрока Из ЭлТЧ.ВыделенныеСтроки Цикл
					НоваяСтрока = ТЧ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЧ.НайтиПоИдентификатору(ТекСтрока),,"Бюджет");
					НоваяСтрока.Месяц = ТекМесяц.Значение;
					Если НоваяСтрока.Свойство("АвторЗаписи") Тогда
						НоваяСтрока.АвторЗаписи = ТекПользователь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьАктуальныеДанныеПоСтрокамСервер()
	
	ИзмененныеСтрокиУбранные = РасчетыБюджет.ПолучитьИзмененныеСтрокиОперативногоБюджета(Объект.Ссылка, Ложь);
	ИзмененныеСтрокиДобавленные = РасчетыБюджет.ПолучитьИзмененныеСтрокиОперативногоБюджета(Объект.Ссылка, Истина);
	
	Для Каждого Строка Из ИзмененныеСтрокиУбранные Цикл
		
		ТекСтрокаЗатраты = Объект.Затраты.НайтиСтроки(Новый Структура("УИД", Строка.УИДСтроки));
		ТекСтрокаКорректировки = Объект.ЗатратыКП.НайтиСтроки(Новый Структура("УИД", Строка.УИДСтроки));
		
		Если ТекСтрокаЗатраты.Количество() Тогда
			ТекСтрокаЗатраты[0].ВнесенаВБюджет = Ложь;
			//РасчетыБюджет.ОчиститьНаборЗаписейПоУникальномуИдентификатору(Строка.Бюджет, Объект.Ссылка, Строка.УИДСтроки);
			ТекСтрокаЗатраты[0].Бюджет = Документы.Д_Бюджет.ПустаяСсылка();
		ИначеЕсли ТекСтрокаКорректировки.Количество() Тогда
			ТекСтрокаКорректировки[0].ВнесенаВБюджет = Ложь;
			РасчетыБюджет.ОчиститьНаборЗаписейПоУникальномуИдентификатору(Строка.Бюджет, Объект.Ссылка, Строка.УИДСтроки);
			ТекСтрокаЗатраты[0].Бюджет = Документы.Д_Бюджет.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строка Из ИзмененныеСтрокиДобавленные Цикл
		
		ТекСтрокаЗатраты = Объект.Затраты.НайтиСтроки(Новый Структура("УИД", Строка.УИДСтроки));
		ТекСтрокаКорректировки = Объект.ЗатратыКП.НайтиСтроки(Новый Структура("УИД", Строка.УИДСтроки));
		
		Если ТекСтрокаЗатраты.Количество() Тогда
			ТекСтрокаЗатраты[0].ВнесенаВБюджет = Истина;
			ТекСтрокаЗатраты[0].Бюджет = Строка.Бюджет;
			//РасчетыБюджет.ОчиститьНаборЗаписейПоУникальномуИдентификатору(ТекСтрокаЗатраты[0].Бюджет, Объект.Ссылка, Строка.УИДСтроки);
		ИначеЕсли ТекСтрокаКорректировки.Количество() Тогда
			ТекСтрокаКорректировки[0].ВнесенаВБюджет = Истина;
			ТекСтрокаКорректировки[0].Бюджет = Строка.Бюджет;
			//РасчетыБюджет.ОчиститьНаборЗаписейПоУникальномуИдентификатору(ТекСтрокаКорректировки[0].Бюджет, Объект.Ссылка, Строка.УИДСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЛимитыНаНачало(СтатьяСеб, СтатьяДДС, Месяц, Сценарий, ЦФО, Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_БюджетПрочихПроектовЗатраты.Подразделение,
	               |	Д_БюджетПрочихПроектовЗатраты.СуммаСеб,
	               |	Д_БюджетПрочихПроектовЗатраты.СуммаБДДС,
	               |	Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС,
	               |	Д_БюджетПрочихПроектовЗатраты.Номенклатура,
	               |	Д_БюджетПрочихПроектовЗатраты.НаЕдиницу
	               |ИЗ
	               |	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
	               |ГДЕ
	               |	Д_БюджетПрочихПроектовЗатраты.Ссылка.Сценарий = &Сценарий
	               |	И Д_БюджетПрочихПроектовЗатраты.ЦФО = &Предприятие
	               |	И Д_БюджетПрочихПроектовЗатраты.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И Д_БюджетПрочихПроектовЗатраты.Месяц = &Месяц
	               |	И Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат = &СтатьяСеб
	               |	И Д_БюджетПрочихПроектовЗатраты.ВнесенаВБюджет = ИСТИНА";
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Предприятие", ЦФО);
	Запрос.УстановитьПараметр("СтатьяСеб", СтатьяСеб);
	//Запрос.УстановитьПараметр("Подразделение", ?(ЦФО.УчетПоПодразделениям, Подразделение, Null));
	Запрос.УстановитьПараметр("Месяц", Месяц);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ЗапросБюджетаОсновного = Новый Запрос;
	ЗапросБюджетаОсновного.Текст = "ВЫБРАТЬ
	               |	Д_Бюджет.Ссылка
	               |ИЗ
	               |	Документ.Д_Бюджет КАК Д_Бюджет
	               |ГДЕ
	               |	Д_Бюджет.Сценарий = &Сценарий
	               |	И Д_Бюджет.Предприятие = &Предприятие
	               |	И Д_Бюджет.ПометкаУдаления = ЛОЖЬ";
	ЗапросБюджетаОсновного.УстановитьПараметр("Сценарий", Сценарий);
	ЗапросБюджетаОсновного.УстановитьПараметр("Предприятие", ЦФО);
	
	РезультатОснБюджет = ЗапросБюджетаОсновного.Выполнить();
	ТЗ_Рез = РезультатОснБюджет.Выгрузить(); 
	
	Если ТЗ_Рез.Количество() Тогда
		ОснБюджет = ТЗ_Рез[0].Ссылка
	Иначе
		ОснБюджет = Неопределено
	КонецЕсли;
	
 	СтруктураВозврата = Новый Структура;
		
	Если Выборка.Количество() Тогда
		
		СтруктураВозврата.Вставить("Ошибка", Ложь);		
		СуммаЗатраты = 0; СуммаДДС = 0;
		
		Пока Выборка.Следующий() Цикл	
			
			Если ЦФО.УчетПоПодразделениям Тогда
				Если Выборка.Подразделение <> Подразделение Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ОснБюджет) Тогда
				СтруктураПоискаОбъема = Новый Структура("Номенклатура, Месяц", Выборка.Номенклатура, Месяц);
				СтрОбъем = ОснБюджет.ОбъемПроизводства.НайтиСтроки(СтруктураПоискаОбъема);
				
				Если Выборка.НаЕдиницу И СтрОбъем.Количество() И  (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ) <> 0 Тогда
					СуммаЗатраты = СуммаЗатраты + (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ) * Выборка.СуммаСеб;
				Иначе
					СуммаЗатраты = СуммаЗатраты + Выборка.СуммаСеб;			
				КонецЕсли;
			Иначе
				СуммаЗатраты = СуммаЗатраты + Выборка.СуммаСеб;	
			КонецЕсли;
			СуммаДДС = СуммаДДС + Выборка.СуммаБДДС;
			
		КонецЦикла; 
		
		СтруктураВозврата.Вставить("ЛимитСС", СуммаЗатраты);
		СтруктураВозврата.Вставить("ЛимитДДС", СуммаДДС);
		
	Иначе
		
		СтруктураВозврата.Вставить("Ошибка", Истина);
		
	КонецЕсли;
	
	Возврат СтруктураВозврата;	
	
	
КонецФункции // ()

#КонецОбласти

#Область ОбработчикиТабличныхЧастей

// затраты

&НаКлиенте
Процедура ЗатратыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекДанные = Элементы.Затраты.ТекущиеДанные;
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		ТекДанные.Месяц = Объект.Месяц;	
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекДанные.СтатьяБДДС) Тогда
		ТекДанные.СтатьяБДДС = БюджетныйНаСервере.ВернутьРеквизит(ТекДанные.СтатьяЗатрат, "СтатьяБДДС");	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗатратыМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	ВыбМесяц = ВыбратьИзСписка(СписокМесяцев, );
	
	Если НЕ ВыбМесяц = Неопределено Тогда
		Элементы.Затраты.ТекущиеДанные.Месяц = ВыбМесяц.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыЦФОПриИзменении(Элемент)
	Если НЕ ПустаяСтрока(Элементы.Затраты.ТекущиеДанные.ЦФО) Тогда
		Элементы.Затраты.ТекущиеДанные.Подразделение = БюджетныйНаСервере.ВернутьРеквизит(Элементы.Затраты.ТекущиеДанные.ЦФО, "ВидДеятельности");
	КонецЕсли;
	Элементы.Затраты.ТекущиеДанные.Бюджет = "";
	Элементы.Затраты.ТекущиеДанные.ВнесенаВБюджет = Ложь;
	Попытка
		Элементы.Затраты.ТекущиеДанные.БизнесПроцесс = "";
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекПП = ?(ПустаяСтрока(БюджетныйНаСервере.ВернутьРеквизит(Элементы.Затраты.ТекущиеДанные.ЦФО, "Родитель")), Элементы.Затраты.ТекущиеДанные.ЦФО, БюджетныйНаСервере.ВернутьРеквизит(Элементы.Затраты.ТекущиеДанные.ЦФО, "Родитель")); 
	ФормаВыб = ПолучитьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", Новый Структура("ТекущаяСтрока", ТекПП) , Элемент);
	НовыйОтбор = ФормаВыб.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	НовыйОтбор.ПравоеЗначение = ТекПП;
	
	ФормаВыб.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыСтатьяЗатратПриИзменении(Элемент)
	СтатьяДДС = ПолучитьСтатьюДДС(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат);
	Если Не ЗначениеЗаполнено(Элементы.Затраты.ТекущиеДанные.СтатьяБДДС) Тогда
		Элементы.Затраты.ТекущиеДанные.СтатьяБДДС = СтатьяДДС;	
	КонецЕсли;
	
	ВходитВГруппуЗатратыПоРеализации = СтатьяИзГруппыЗатратПоРеализации(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат);
	
	Если ТипЗнч(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") И Не ВходитВГруппуЗатратыПоРеализации Тогда
		Элементы.Затраты.ТекущиеДанные.Признак = ПредопределенноеЗначение("Перечисление.Д_ПризнакСписания.Себестоимость"); 
	ИначеЕсли ТипЗнч(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") И ВходитВГруппуЗатратыПоРеализации Тогда
		Элементы.Затраты.ТекущиеДанные.Признак = ПредопределенноеЗначение("Перечисление.Д_ПризнакСписания.Коммерческие");
	Иначе
		Элементы.Затраты.ТекущиеДанные.Признак = ПредопределенноеЗначение("Перечисление.Д_ПризнакСписания.ФинРез");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыСтатьяЗатратНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Статья затрат (себестоимость)");
	СписокВыбора.Добавить("Статья доходов и расходов (финансовый результат)");
	Если БюджетСтроительногоНаправления(Объект.Предприятие) Тогда
		СписокВыбора.Добавить("Задача (строительство)");
	КонецЕсли;
	
	ВыбранноеЗначение = ВыбратьИзСписка(СписокВыбора);
	Если Не ВыбранноеЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Если ВыбранноеЗначение.Значение = "Статья затрат (себестоимость)" Тогда
			ОткрытьФорму("Справочник.СтатьиЗатрат.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		ИначеЕсли ВыбранноеЗначение.Значение = "Статья доходов и расходов (финансовый результат)" Тогда
			ОткрытьФорму("Справочник.СтатьиДоходовРасходов.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		Иначе	
			ОткрытьФорму("Справочник.Стр_Задачи.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	
	ВходитВГруппуЗатратыПоРеализации = СтатьяИзГруппыЗатратПоРеализации(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат);

	Если Не ВходитВГруппуЗатратыПоРеализации Тогда
		Для каждого ТекНоменклатура Из ПроизводимыеНоменклатуры(Элементы.Затраты.ТекущиеДанные.ЦФО, Объект.Сценарий) Цикл
			Список.Добавить(ТекНоменклатура);
		КонецЦикла; 
		Список.Добавить("В пропорции к выпуску");
	Иначе
		Для Каждого ТекНоменклатура Из РеализуемыеНоменклатуры(Элементы.Затраты.ТекущиеДанные.ЦФО, Объект.Сценарий) Цикл
			Список.Добавить(ТекНоменклатура);
		КонецЦикла;
		Список.Добавить("В пропорции к реализации");	
	КонецЕсли;
		
	ВыбраненоеЗначение = ВыбратьИзСписка(Список, Элемент);
	Если НЕ ВыбраненоеЗначение = Неопределено Тогда
		Если ВыбраненоеЗначение.Значение = "В пропорции к выпуску" Тогда
			Элементы.Затраты.ТекущиеДанные.Номенклатура = "";		
		Иначе
			Элементы.Затраты.ТекущиеДанные.Номенклатура = ВыбраненоеЗначение.Значение;		
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры


// корректировки

&НаКлиенте
Процедура ЗатратыКПМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	ВыбМесяц = ВыбратьИзСписка(СписокМесяцев, Элемент);
	Если НЕ ВыбМесяц = Неопределено Тогда
		Элементы.ЗатратыКП.ТекущиеДанные.Месяц = ВыбМесяц.Значение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПЦФОПриИзменении(Элемент)
	Если НЕ ПустаяСтрока(Элементы.ЗатратыКП.ТекущиеДанные.ЦФО) Тогда
		Элементы.ЗатратыКП.ТекущиеДанные.ВидДеятельности = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ЗатратыКП.ТекущиеДанные.ЦФО, "ВидДеятельности");
	КонецЕсли;
	Элементы.ЗатратыКП.ТекущиеДанные.Бюджет = "";
	Элементы.ЗатратыКП.ТекущиеДанные.ВнесенаВБюджет = Ложь;
	Попытка
		Элементы.ЗатратыКП.ТекущиеДанные.БизнесПроцесс = "";
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКППриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
	Элементы.ЗатратыКП.ТекущиеДанные.ТипБюджета = ТекТипБюджета;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПСтатьяЗатратПриИзменении(Элемент)
	
	
	
КонецПроцедуры


// общие

&НаКлиенте
Процедура ЗатратыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДоступностьВНХ = (БюджетныйНаСервере.РольДоступнаСервер("Администратор") ИЛИ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел"));
	Если Элемент.ТолькоПросмотр И ДоступностьВНХ Тогда 
		Элемент.ТекущиеДанные.ВНХ = 1 - Элемент.ТекущиеДанные.ВНХ;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЗапретРедактированияДокумента() Тогда
		Отказ = Истина;
	Иначе
		
		Если Копирование Тогда
			Элемент.ТекущиеДанные.Бюджет = "";	
			
			Попытка
				Элемент.ТекущиеДанные.БизнесПроцесс = "";
			Исключение
			КонецПопытки;
			
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередУдалениемИзТЧ(Элемент, Отказ)
	Если ЗапретРедактированияДокумента() Тогда
		Отказ = Истина;
	КонецЕсли;
	//Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Бюджет) Тогда
	//	Если Вопрос("Строка будет удалена из документа " + Строка(Элемент.ТекущиеДанные.Бюджет) + " Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда 
	//		УдалитьСтрокуИзБюджета(ЭтоКорректировочныйБюджет(), Элемент.ТекущиеДанные.Бюджет, Элемент.ТекущиеДанные.УИД);
	//		Записать()
	//	Иначе
	//		Возврат
	//	КонецЕсли
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриНачалеРедактированияТЧ(Элемент, НоваяСтрока, Копирование)
	
	Если ЗапретРедактированияДокумента() Тогда
		Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
	Иначе
		
		Если Не БПСервер.ПолучитьКонстантуНаСервере("сабИспользоватьНесколькоПредприятий") Тогда
			Элемент.ТекущиеДанные.ЦФО = БюджетныйНаСервере.ПолучитьПредприятие();
		КонецЕсли;

		Если НоваяСтрока Тогда
			Элемент.ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
		Иначе
			//Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Бюджет) Тогда
			//	Если Вопрос("Редактирование строки внесенной в бюджет приведет к её удалению из документа " + Строка(Элемент.ТекущиеДанные.Бюджет) + " Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
			//		Попытка
			//			УдалитьСтрокуИзБюджета(ЭтоКорректировочныйБюджет(), Элемент.ТекущиеДанные.Бюджет, Элемент.ТекущиеДанные.УИД);
			//			Элемент.ТекущиеДанные.Бюджет = "";
			//			Записать();
			//		Исключение
			//			Сообщить("Не удалось удалить строку из бюджета!");
			//			Возврат
			//		КонецПопытки
			//	Иначе
			//		Возврат;
			//	КонецЕсли;
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункцииОбработчиковТабличныхЧастей

&НаСервереБезКонтекста
Функция ПолучитьСтатьюДДС(СтатьяСС)
	Возврат СтатьяСС.СтатьяБДДС;	
КонецФункции // ()

&НаКлиенте
Функция СтатьяИзГруппыЗатратПоРеализации(ТекСтатья)
	ВходитВГруппуЗатратыПоРеализации = Ложь;
	Если ЗначениеЗаполнено(ТекСтатья) Тогда
		ВходитВГруппуЗатратыПоРеализации = (БюджетныйНаСервере.ВернутьРеквизит(ТекСтатья, "Родитель") = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ЗатратыРеализация"));
	КонецЕсли;
	Возврат ВходитВГруппуЗатратыПоРеализации;
КонецФункции

&НаСервереБезКонтекста
Функция БюджетСтроительногоНаправления(Предприятие)
	//Если Не ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт() Тогда
	//	Возврат  Предприятие.НаправлениеДеятельности = Справочники.НаправленияДеятельности.НайтиПоНаименованию("Строительное", Истина);
	//Иначе 
		Возврат Ложь;
	//КонецЕсли;
КонецФункции // ()

&НаКлиенте
Функция ЗапретРедактированияДокумента()
	
	Запрет = Ложь;
	ГруппаБюджет = БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел");
	ЗапретРедактирования = Ложь;
	ЗапретРедактированияБО = Ложь;
	ПараметрыТекущегоБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Объект.Предприятие, Объект.Сценарий);
	
	Если ЗначениеЗаполнено(ПараметрыТекущегоБюджета) Тогда
		ЗапретРедактирования = ПараметрыТекущегоБюджета.ПризнакРедактирования;
		ЗапретРедактированияБО = ПараметрыТекущегоБюджета.ПризнакРедактированияБО;
	КонецЕсли;
	
	Если ЗапретРедактирования И НЕ ГруппаБюджет и не Объект.Ссылка.Пустая() И Не БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		Запрет = Истина;
	ИначеЕсли ЗапретРедактированияБО И ГруппаБюджет и не Объект.Ссылка.Пустая() Тогда
		Запрет = Истина;
	КонецЕсли;
	
	Возврат Запрет;
	
КонецФункции

//считаем производимые номенклатуры
&НаСервереБезКонтекста
Функция ПроизводимыеНоменклатуры(Предприятие, Сценарий)
	
	МассивНоменклатур = Новый Массив;
	МассивПредприятий = Новый Массив;
	МассивПредприятий.Добавить(Предприятие);
	
	ТЗ_Бюджеты = ПолучитьБюджетыПоТекущимДанным(МассивПредприятий, Сценарий);
	ТекБюджет = Неопределено;
	
	Если ТЗ_Бюджеты.Количество() Тогда
		ТекБюджет = ТЗ_Бюджеты[0].Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекБюджет) Тогда
		Для каждого ТекСтрока Из ТекБюджет.ОбъемПроизводства Цикл
			Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
				МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
			КонецЕсли;
			Если ЗначениеЗаполнено(ТекСтрока.ЕдинаяНоменклатура) И Не МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
				МассивНоменклатур.Добавить(ТекСтрока.ЕдинаяНоменклатура);
			КонецЕсли;
		КонецЦикла;
		Для каждого ТекСтрока Из ТекБюджет.ВводОстатковПрочее Цикл
			Если Счет4341(ТекСтрока.Счет) Тогда
				Если МассивНоменклатур.Найти(ТекСтрока.Субконто1) = Неопределено Тогда
					МассивНоменклатур.Добавить(ТекСтрока.Субконто1);
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли;

	Возврат МассивНоменклатур;
КонецФункции // ()

//считаем реализуемые номенклатуры
&НаСервереБезКонтекста
Функция РеализуемыеНоменклатуры(Предприятие, Сценарий)
	МассивНоменклатур = Новый Массив;
	МассивПредприятий = Новый Массив;
	МассивПредприятий.Добавить(Предприятие);
	
	ТЗ_Бюджеты = ПолучитьБюджетыПоТекущимДанным(МассивПредприятий, Сценарий);
	ТекБюджет = Неопределено;
	
	Если ТЗ_Бюджеты.Количество() Тогда
		ТекБюджет = ТЗ_Бюджеты[0].Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекБюджет) Тогда
		Для каждого ТекСтрока Из ТекБюджет.БюджетПродаж Цикл
			Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
				МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат МассивНоменклатур;
КонецФункции // ()

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьБюджетДляВнесения(ЦФО, Сценарий)
	Бюджет = неопределено;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦФО", ЦФО);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_Бюджет.Ссылка
	               |ИЗ
	               |	Документ.Д_Бюджет КАК Д_Бюджет
	               |ГДЕ
	               |	Д_Бюджет.ПометкаУдаления = ЛОЖЬ
	               |	И Д_Бюджет.Предприятие = &ЦФО
	               |	И Д_Бюджет.Сценарий = &Сценарий";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Бюджет = Выборка.Ссылка;
	КонецЦикла;
	Возврат Бюджет;
КонецФункции

&НаСервереБезКонтекста
Функция Счет4341(Счет)
	Возврат ПланыСчетов.Учетный.Счет43() = Счет ИЛИ ПланыСчетов.Учетный.Счет41() = Счет;
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьБюджетыПоТекущимДанным(МассивПредприятий, Сценарий)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Д_Бюджет.Ссылка,
	               |	Д_Бюджет.Сценарий,
	               |	Д_Бюджет.Предприятие
	               |ИЗ
	               |	Документ.Д_Бюджет КАК Д_Бюджет
	               |ГДЕ
	               |	Д_Бюджет.Сценарий = &Сценарий
	               |	И Д_Бюджет.Предприятие В(&Предприятие)
	               |	И Д_Бюджет.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Предприятие", МассивПредприятий);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
		
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры



#КонецОбласти
