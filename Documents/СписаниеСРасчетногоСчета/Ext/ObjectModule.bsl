
&После("ПриЗаписи")
Процедура УУ_ПриЗаписи(Отказ)
	
	//удаляем связаные записи графика платежей
	УстановитьПривилегированныйРежим(Истина);
	Если Проведен Тогда
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ЗначениеЗаполнено(ДокументОснование.Заявка) И ТипЗнч(ДокументОснование.Заявка) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(ДокументОснование.Заявка);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ЗначениеЗаполнено(ДокументОснование.Заявка) И (ТипЗнч(ДокументОснование.Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") ИЛИ ТипЗнч(ДокументОснование.Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование"))
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда	
			
			Если (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") И ТипЗнч(ДокументОснование.Заявка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") И ДокументОснование.Заявка.ЗаявкаБезнал.Количество() = 1) 
				ИЛИ (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") И НЕ Константы.ИспользоватьРеестрыЗаявокНаОплату.Получить()) Тогда
				НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(?(ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение"), ДокументОснование.Заявка, ДокументОснование));
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
			КонецЕсли;
			
			ТекДокОсн = ДокументОснование.Заявка;
			ТекУИД = ДокументОснование.УИДСтроки;
			
			НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(ТекДокОсн);
			НаборЗаписей.Прочитать();
			НомерСтрокиЗаявки = ТекУИД;
			МассивКУдалению = Новый Массив;
			Для каждого ТекСтрока Из НаборЗаписей Цикл
				Если ТекСтрока.УИДСтрокиДокумента = НомерСтрокиЗаявки Тогда
					МассивКУдалению.Добавить(ТекСтрока);	
				КонецЕсли;
			КонецЦикла;
			Для каждого ТекСтрокаУд Из МассивКУдалению Цикл
				НаборЗаписей.Удалить(ТекСтрокаУд);		
			КонецЦикла; 
			НаборЗаписей.Записать();
			
			Если ЗначениеЗаполнено(ТекУИД) Тогда
				НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.УИДСтрокиДокумента.Установить(ТекУИД);
				НаборЗаписей.Прочитать();
				МассивКУдалению = Новый Массив;
				Для каждого ТекСтрока Из НаборЗаписей Цикл
					МассивКУдалению.Добавить(ТекСтрока);	
				КонецЦикла;
				Для каждого ТекСтрокаУд Из МассивКУдалению Цикл
					НаборЗаписей.Удалить(ТекСтрокаУд);		
				КонецЦикла; 
				//НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
			КонецЕсли;
		Иначе //странное создание платежки на основании выписки
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПлатежноеПоручение.Ссылка КАК Ссылка,
			|	ПлатежноеПоручение.Заявка КАК Заявка
			|ИЗ
			|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
			|ГДЕ
			|	ПлатежноеПоручение.ДокументОснование = &Ссылка
			|	И ПлатежноеПоручение.СуммаДокумента = &СуммаДокумента";
			
			Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
			Запрос.УстановитьПараметр("СуммаДокумента", ЭтотОбъект.СуммаДокумента);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				НаборЗаписей = РегистрыСведений.сабГрафикПлатежей.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Документ.Установить(Выборка.Заявка);
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
			КонецЦикла;
			
		КонецЕсли;
		
		//оплачено в заявку на оплату
		БПСервер.АкцептоватьЗаявкиНаОплату(ДокументОснование, Ссылка);
		
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура УУ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Модифицированность() Тогда
		сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);	
	КонецЕсли;
КонецПроцедуры
