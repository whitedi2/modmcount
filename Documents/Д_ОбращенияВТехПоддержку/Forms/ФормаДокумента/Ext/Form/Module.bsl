&НаСервереБезКонтекста
Функция ПоискУжеЗапущенныхБП(Ссылка)
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Задача.Ссылка
	|ИЗ
	|	Задача.Задача КАК Задача
	|ГДЕ
	|	Задача.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка.Количество();
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПоискБП(Ссылка)
	//ищем созданные бизнес-процессы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаявкиАдминистратору.Ссылка
	|ИЗ
	|	БизнесПроцесс.ЗаявкиАдминистратору КАК ЗаявкиАдминистратору
	|ГДЕ
	|	ЗаявкиАдминистратору.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
КонецФункции // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//если уже есть БП по документу, то не отражаем кнопки запуска БП
	//Если ПоискУжеЗапущенныхБП(Объект.Ссылка) И НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") Тогда
	//	
	//	Если НЕ Объект.Доступность Тогда
	//		Элементы.ФормаСоздатьБП.Доступность = Истина;
	//		Элементы.Группа11.Доступность = Истина;
	//		//si
	//		//Элементы.ФормаРедактировать.Доступность = Ложь;
	//		Элементы.Доступность.Доступность = Ложь;
	//		Элементы.ФормаСоздатьБП.Заголовок = "Повторить согласование и закрыть";
	//		//	Элементы.ФормаАрхив.Доступность = Объект.АрхивЗаявок.Количество();
	//	КонецЕсли;
	//	
	//	
	//	//Элементы.ФормаСоздатьБП.Доступность = 1 - Объект.Доступность;
	//	//Элементы.Группа11.Доступность = 1 - Объект.Доступность;
	//КонецЕсли;
	
	
	сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);	
	ОбновитьСчетчикСтрокДетализации();
	ВидЗаявкиПриИзменении(Неопределено);
	ОтложенныйСтартПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура СоздатьБПИнтерактивно()
	
	
	НовыйБП = БизнесПроцессы.ЗаявкиАдминистратору.СоздатьБизнесПроцесс();	
	
	НовыйБП.Автор = ПараметрыСеанса.ТекущийПользователь;
	НовыйБП.ОтИмени = Объект.ОтИмени;
	НовыйБП.Описание = ?(ЗначениеЗаполнено(Объект.Примечания), Объект.Примечания, Объект.Содержание);
	НовыйБП.Дата = ТекущаяДата();
	НовыйБП.Заявка = Объект.Ссылка;
	НовыйБП.ОснованиеЗаблокирован = Истина;
	//добавляем "кому" в список рецензентов
	
	Для каждого ТекСтрока Из Объект.ДопСогласование Цикл
		НоваяСтрока = НовыйБП.ДопСогласование.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);	
	КонецЦикла; 
	
	НовыйБП.Записать();
	НовыйБП.Старт();
	БПСервер.ИзменитьСостояниеДокумента(Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСостояниеПодготовку()
	Возврат Перечисления.Д_СостоянияДокументов.НаСогласовании;
КонецФункции // ()


&НаКлиенте
Процедура СоздатьБП(Команда)
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		БП = ПоискБП(Объект.Ссылка);
		Если НЕ БП = Неопределено Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьБПЗавершение1", ЭтотОбъект), "Документ уже имеет запущенный бизнес-процесс. Хотите запустить новый?", РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СоздатьБПФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБПЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		УдалитьБПИЗадачи(Объект.Ссылка, "ЗаявкиАдминистратору");
		Объект.ТекущаяЗадача = "";
		Объект.ТекущийБизнесПроцесс = "";
	Иначе
		Возврат;		
	КонецЕсли;
	
	СоздатьБПФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБПФрагмент()
	
	СоздатьБПЗавершение(КодВозвратаДиалога.Да, Новый Структура);
	//ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьБПЗавершение", ЭтотОбъект), "После старта процесса согласования изменения в документе станут невозможны. Уверены что хотите стартовать бизнес процесс?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБПЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если ПроверитьЗаполнение() И РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Доступность = Истина;
		Объект.СостояниеДокумента = ВернутьСостояниеПодготовку();
		Если Записать() Тогда
			Если Объект.ДатаНачалаРабот > ТекущаяДата() Тогда //в отложенный старт
				ПоказатьОповещениеПользователя("Бизнес процесс добавлен в отложенный старт:",
				,
				Объект.Ссылка,
				БиблиотекаКартинок.БизнесПроцесс);
			Иначе	
				СоздатьБПИнтерактивно();
				ПоказатьОповещениеПользователя("Запущен бизнес процесс:",
				,
				Объект.Ссылка,
				БиблиотекаКартинок.БизнесПроцесс);
			КонецЕсли;
			ОповеститьОбИзменении(Объект.Ссылка);
			Оповестить("ОбновитьСписокЗадач");
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СостояниеДокумента = Перечисления.Д_СостоянияДокументов.НаПодготовке;	
		Объект.СрокОкончанияРабот = ТекущаяДата() + 24*60*60;
		Объект.ПожеланиеКСроку = ТекущаяДата() + 24*60*60;
		Если НЕ ЗначениеЗаполнено(Объект.Проект) Тогда
			Объект.Проект = ПолучитьПроектАвтора(ПараметрыСеанса.ТекущийПользователь);	
		КонецЕсли;
		Элементы.Группа14.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.РазделПрограммы.СписокВыбора.Добавить("Общее");
	Для каждого ТекПодсистема Из Метаданные.Подсистемы Цикл
		Элементы.РазделПрограммы.СписокВыбора.Добавить(ТекПодсистема.Синоним);
	КонецЦикла;
	
	Элементы.Группа10.Видимость = БюджетныйНаСервере.РольАдминаДоступнаСервер() Или РольДоступна("сабСотрудникИТ");
	Элементы.Группа1.ОтображениеСтраниц = ?(Элементы.Группа10.Видимость, ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И Не ЗначениеЗаполнено(Объект.ОтИмени) Тогда
		Объект.ОтИмени = ПараметрыСеанса.ТекущийПользователь;	
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;	
	КонецЕсли;
	
	ТекБП = БПСервер.НайтиТекущийБПСервер(Объект.Ссылка);
	
	ТекДоступность = Ложь;
	Если НЕ ТекБП = Неопределено Тогда
		ТекБПСтруРекв = БюджетныйНаСервере.ВернутьРеквизиты(ТекБП, "ОснованиеЗаблокирован, Стартован");
		ТекДоступность = ТекБПСтруРекв.ОснованиеЗаблокирован;
		Если ТекДоступность = Неопределено Тогда
			ТекДоступность = ТекБПСтруРекв.Стартован;
		КонецЕсли;
		БюджетныйНаСервере.ФормаТолькоПросмотр(Объект, ЭтаФорма, ТекДоступность);
		Элементы.ФормаСоздатьБП.Доступность = Ложь;
		Элементы.ФормаСоздатьБП.КнопкаПоУмолчанию = Ложь;
		Элементы.ДобавитьКомментарий.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	Элементы.Группа16.ТолькоПросмотр = Ложь;
	Элементы.Комментарий.ТолькоПросмотр = Ложь;
	
	ОтложенныйСтарт = НЕ Объект.ДатаНачалаРабот = Дата('00010101');
	
	ВозможностьРазрешитьРедактирование(ТекБП, ТекДоступность);
	
КонецПроцедуры

&НаСервере
Процедура ВозможностьРазрешитьРедактирование(ТекБП, ТекДоступность)
	
	//Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	Возврат;	
	//КонецЕсли;
	
	Если НЕ ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.Найти("ФормаГруппа1") = Неопределено И НЕ ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.Найти("ФормаГруппа1").ПодчиненныеЭлементы.Найти("ФормаДокументД_СлужебнаяЗапискаРазрешитьРедактирование") = Неопределено Тогда
		
		ЭтоДоработка = Ложь;
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Задача.ТочкаМаршрута КАК ТочкаМаршрута
			|ИЗ
			|	Задача.Задача КАК Задача
			|ГДЕ
			|	Задача.Выполнена = ЛОЖЬ
			|	И Задача.Заявка = &Заявка
			|
			|СГРУППИРОВАТЬ ПО
			|	Задача.ТочкаМаршрута";
			
			Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			ТекТочкаМаршрута = Неопределено;
			Пока Выборка.Следующий() Цикл
				ТекТочкаМаршрута = Выборка.ТочкаМаршрута;		
			КонецЦикла;
			ЭтоДоработка = НЕ БПСервер.ТочкиПроцессов("доработка").Найти(ТекТочкаМаршрута) = Неопределено;
		КонецЕсли;

		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.Найти("ФормаГруппа1").ПодчиненныеЭлементы.Найти("ФормаДокументД_СлужебнаяЗапискаРазрешитьРедактирование").Видимость = ЭтоДоработка И ТекДоступность;
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПроектАвтора(Пользователь)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(ГруппыПользователей.сабПроект) КАК сабПроект
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
	|ГДЕ
	|	ГруппыПользователей.Состав.Пользователь В(&Пользователь)
	|	И НЕ ГруппыПользователей.сабПроект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.сабПроект;	
	КонецЦикла;

	Возврат Неопределено;

КонецФункции // ()


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(Объект.ОтИмени) Тогда
		Объект.ОтИмени = БюджетныйНаСервере.ПолучитьПользователя();
	КонецЕсли;
	Отказ = 1 - ПроверитьЗаполнение();
	Если Объект.ДатаНачалаРабот = Дата('00010101') И НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаНачалаРабот = ?(Объект.Дата = НачалоДня(ТекущаяДата()), ТекущаяДата(), Объект.Дата);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	Если ПоискТрат(Объект.Ссылка) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("РедактироватьЗавершение2", ЭтотОбъект), "По данной заявке на отгрузку существует заявка на согласование трат. Редактирование заявки невозможно.");
		Возврат;	
	КонецЕсли;
	ПоказатьВопрос(Новый ОписаниеОповещения("РедактироватьЗавершение1", ЭтотОбъект), "Включение возможности редактирования автоматически отменяет все согласования по заявке. Вы уверены?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗавершение2(ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		БП = ПоискБП(Объект.Ссылка);
		Если НЕ БП = Неопределено Тогда
			Объект.Доступность = Ложь;
			Элементы.ФормаСоздатьБП.Доступность = Истина;
			Элементы.Группа11.Доступность = Истина;
			Элементы.ФормаРедактировать.Доступность = Ложь;
			Элементы.ФормаСоздатьБП.Заголовок = "Повторить согласование и закрыть";
			Элементы.ФормаАрхив.Доступность = Объект.АрхивЗаявок.Количество();
			УдалитьБПИЗадачи(Объект.Ссылка, "ЗаявкиНаОтгрузку");
			Записать();
		Иначе
			ПоказатьПредупреждение(Новый ОписаниеОповещения("РедактироватьЗавершение", ЭтотОбъект), "Бизнес процесс не найден!");		
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЗавершение(ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискТрат(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_СогласованиеТрат.Ссылка
	|ИЗ
	|	Документ.Д_СогласованиеТрат КАК Д_СогласованиеТрат
	|ГДЕ
	|	Д_СогласованиеТрат.ДокОснование = &ДокОснование";
	
	Запрос.УстановитьПараметр("ДокОснование", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Возврат Выборка.Следующий();
	
	
КонецФункции // ()

Процедура УдалитьБПИЗадачи(Ссылка, ВидДокумента)
	//Если Ссылка.ПометкаУдаления Тогда //при удалении бизнес-процесса удаляем задачи
	
	//удаляем БП
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаявкиНаОтгрузку.Ссылка
	|ИЗ
	|	БизнесПроцесс." + ВидДокумента + " КАК ЗаявкиНаОтгрузку
	|ГДЕ
	|	ЗаявкиНаОтгрузку.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	ВыборкаЗадачи = Результат.Выбрать();
	
	Пока ВыборкаЗадачи.Следующий() Цикл
		ТекБП = ВыборкаЗадачи.Ссылка.ПолучитьОбъект();
		ТекБП.Удалить();
	КонецЦикла;
	
	//удаляем задачи
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Задача.Ссылка
	|ИЗ
	|	Задача.Задача КАК Задача
	|ГДЕ
	|	Задача.Заявка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	ВыборкаЗадачи = Результат.Выбрать();
	
	Пока ВыборкаЗадачи.Следующий() Цикл
		ТекБП = ВыборкаЗадачи.Ссылка.ПолучитьОбъект();
		ТекБП.Удалить();
	КонецЦикла;
	Объект.ТекущаяЗадача = "";
	Объект.ТекущийБизнесПроцесс = "";
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
		сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияРаботПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьСчетчикСтрокДетализации();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСчетчикСтрокДетализации()
	
	//Если Объект.ДетализацияРабот.Количество() Тогда
	//	Элементы.ДетальныйПланРабот.Заголовок = "Детальный план работ (" + Строка(Объект.ДетализацияРабот.Количество()) + ")";
	//Иначе
	//	Элементы.ДетальныйПланРабот.Заголовок = "Детальный план работ";
	//КонецЕсли;
	//
	//Если Объект.ВыявленныеБаги.Количество() Тогда
	//	Элементы.БагЛист.Заголовок = "Баг лист (" + Строка(Объект.ВыявленныеБаги.Количество()) + ")";
	//Иначе
	//	Элементы.БагЛист.Заголовок = "Баг лист";
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияРаботПослеУдаления(Элемент)
	ОбновитьСчетчикСтрокДетализации();
КонецПроцедуры

&НаКлиенте
Процедура ВыявленныеБагиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьСчетчикСтрокДетализации();
КонецПроцедуры

&НаКлиенте
Процедура ВыявленныеБагиПослеУдаления(Элемент)
	ОбновитьСчетчикСтрокДетализации();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НовоеПредставление = Неопределено;
	
	ОткрытьФорму("РегистрСведений.ИзмененияВ1С.Форма.ФормаНастройки", Новый Структура("ПредставлениеВыбранныхОбъектов", Объект.ОбъектМетаданных),,,,, Новый ОписаниеОповещения("ОбъектМетаданныхНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектМетаданныхНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	НовоеПредставление = Результат;
	
	Если Не НовоеПредставление = Неопределено Тогда
		Объект.ОбъектМетаданных = НовоеПредставление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаявкиПриИзменении(Элемент)
	ОбновитьВидимость();	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимость()
	
	Элементы.ДобавляемыеВДоступИБ.Видимость = (Объект.ВидЗаявки = "Доступ к базам 1с") И ПравоДоступа("Просмотр", Метаданные.Справочники.ИнформационныеБазы);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ТекстФормат.Элементы.Количество() И НЕ Элементы.ТекстФормат.ТолькоПросмотр Тогда
		ТекущийОбъект.ТекстФорматированный = Новый ХранилищеЗначения(ТекстФормат, Новый СжатиеДанных(9));
		Объект.Содержание = ТекстФормат.ПолучитьТекст();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	аа = Новый ФорматированныйДокумент;
	ТекстФормат = ТекущийОбъект.ТекстФорматированный.Получить();
	Если НЕ ТекстФормат.Элементы.Количество() Тогда
		НовПар = ТекстФормат.Элементы.Добавить(Тип("КоллекцияЭлементовФорматированногоДокумента"));
		НовТекст = НовПар.Элементы.Добавить(Тип("КоллекцияЭлементовФорматированногоДокумента"));
		НовТекст.Текст = ТекущийОбъект.Содержание;
	КонецЕсли;
	ДобавитьКомментарии();
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомментарии()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;	
	КонецЕсли;
	
	БПСервер.ДобавитьКомментарии(ТекстФормат, Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКомментарий(Команда)
	БПСервер.ДобавитьКомментарийСервер(Комментарий, Объект.Ссылка);
	Прочитать();
	Комментарий = "";
КонецПроцедуры

&НаКлиенте
Процедура ОтложенныйСтартПриИзменении(Элемент)
	Элементы.ДатаНачалаРабот.Видимость = ОтложенныйСтарт;
КонецПроцедуры




