
Процедура Печать(ТабДок, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено, МобильныйКлиент = Ложь) Экспорт
	
	Если МобильныйКлиент Тогда
		Макет = Документы.Д_ОбращенияВТехПоддержку.ПолучитьМакет("Печать_мобКлиент");
	Иначе
		Макет = Документы.Д_ОбращенияВТехПоддержку.ПолучитьМакет("Печать");
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТекстовка = Макет.ПолучитьОбласть("Текстовка");
	ОбластьТекстовкаТП = Макет.ПолучитьОбласть("ТекстовкаТП");
	ОбластьСогласование = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьПрикрепление = Макет.ПолучитьОбласть("Прикрепление");
	ОбластьПустыеСтроки = Макет.ПолучитьОбласть("ПустыеСтроки");
	//ОбластьИнициатор = Макет.ПолучитьОбласть("ШтампыИнициатор");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкиАдминистратору.Ссылка КАК БизнесПроцесс,
	|	ЗаявкиАдминистратору.ДатаНачала КАК ДатаНачала,
	|	ЗаявкиАдминистратору.ДатаЗавершения,
	|	ЗаявкиАдминистратору.Описание,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, &ТекДата, МИНУТА) / 60
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, ЗаявкиАдминистратору.ДатаЗавершения, МИНУТА) / 60
	|	КОНЕЦ КАК ДлительностьЧас,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА ""(в процессе)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВПроцессе,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, &ТекДата, МИНУТА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, ЗаявкиАдминистратору.ДатаЗавершения, МИНУТА)
	|	КОНЕЦ КАК ДлительностьМин,
	|	ЗаявкиАдминистратору.Заявка,
	|	ЗаявкиАдминистратору.ДопСогласование.(
	|		Ссылка,
	|		НомерСтроки,
	|		СубъектСогласования,
	|		Согласовано,
	|		ТочкаДействия,
	|		Пройден,
	|		Пользователь,
	|		Комментарии КАК Комментарии,
	|		Автор,
	|		Пользователь.Должность КАК Должность,
	|		ДатаВыполнения
	|	),
	|	ЗаявкиАдминистратору.Автор
	|ИЗ
	|	БизнесПроцесс.ЗаявкиАдминистратору КАК ЗаявкиАдминистратору
	|ГДЕ
	|	ЗаявкиАдминистратору.Заявка В(&Заявка)";
	
	Запрос.Параметры.Вставить("Заявка", Ссылка);
	Запрос.Параметры.Вставить("ТекДата", ТекущаяДата());
	
	РезультатБП = Запрос.Выполнить();
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	
	//////////////////////////вывод СЗ на печать
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	
	ВставлятьРазделительСтраниц = Ложь;
	Для каждого Выборка Из Ссылка цикл
		
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = Строка(ТипЗнч(Выборка)) + " №" + Выборка.Номер + " от " + Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Автор);
		ОбластьШапка.Параметры.Автор = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		//
		
		ТабДок.Вывести(ОбластьШапка);
		
		Пока ВыборкаПоФайлам.Следующий() Цикл 
			ОбластьПрикрепление.Параметры.Вложение = Строка(ВыборкаПоФайлам.Файл);
			ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
			ТабДок.Вывести(ОбластьПрикрепление);
		КонецЦикла;	
		//Иначе
		//	ТабДок.Вывести(ОбластьПустыеСтроки);
		//КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Заявка", Выборка);
		
		ОбластьТекстовка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьТекстовка);		
		
		
		//показ этапов согласования СЗ
		//ТабДок.НачатьГруппуСтрок("Показать согласование", Истина);
		
		ЗапросПоСогласованию = Новый Запрос;
		ЗапросПоСогласованию.Текст = 
		"ВЫБРАТЬ
		|	Задача.Исполнитель КАК Исполнитель,
		|	Задача.ДатаИсполнения,
		|	Задача.Комментарии,
		|	Задача.РезультатВыполнения
		|ИЗ
		|	Задача.Задача КАК Задача
		|ГДЕ
		|	Задача.Заявка В (&Ссылка)";
		ЗапросПоСогласованию.УстановитьПараметр("Ссылка", Выборка);
		ТаблицаПоСогласованию = ЗапросПоСогласованию.Выполнить().Выгрузить();
		
		ВыборкаБп = РезультатБП.Выбрать();
		Пока ВыборкаБп.НайтиСледующий(СтруктураПоиска) Цикл
			ВыборкаСогласование = ВыборкаБп.ДопСогласование.Выбрать();
			
			//ТекОбластьИнициатора = ОбластьИнициатор;
			
			// di имя пользователя и должность
			//ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Ссылка.Дата, Выборка.Автор); 
			//
			//ТекОбластьИнициатора.Параметры.ИнициаторЗаявки = ИмяДолжность.ПредставлениеПользователя;
			//ТекОбластьИнициатора.Параметры.Должность =  ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");		
			////
			//
			//Оттиск = Выборка.Автор.ФайлКартинки;
			//Если НЕ ПустаяСтрока(Оттиск) Тогда
			//	КартинкаИнициатора = Оттиск.ФайлХранилище.Получить();
			//Иначе	
			//	КартинкаИнициатора = Новый Картинка;
			//КонецЕсли;
			//	
			//Если Не КартинкаИнициатора = Неопределено Тогда
			//	ТекОбластьИнициатора.Рисунки.ОттискИнициатора1.Картинка = КартинкаИнициатора;
			//КонецЕсли;
			//ТабДок.Вывести(ТекОбластьИнициатора);
			
			ВыводимШапку = Истина;
			БПСервер.ПоказатьРецензентов(ТабДок, Выборка.Ссылка, Неопределено, Ссылка, "Штампы|Отметка", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
			
		КонецЦикла; 
		
		ОбластьТекстовкаТП.Параметры.Заполнить(Выборка);
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Администратор);
		ОбластьТекстовкаТП.Параметры.Администратор = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		//
		Если ЗначениеЗаполнено(ОбластьТекстовкаТП.Параметры.Администратор) Тогда
			ТабДок.Вывести(ОбластьТекстовкаТП);		
		 КонецЕсли;
		
		
		//ТабДок.ЗакончитьГруппуСтрок();
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры


Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекРекв = БюджетныйНаСервере.ВернутьРеквизиты(Данные.Ссылка, "Примечания, Номер, Дата");
	Если НЕ ТекРекв = Неопределено Тогда
		Представление = ?(ЗначениеЗаполнено(ТекРекв.Примечания), ТекРекв.Примечания + " (" + Строка(ТипЗнч(Данные.Ссылка)) + ") " + Строка(ТекРекв.Номер) + " от " + Формат(ТекРекв.Дата, "ДФ=dd.MM.yyyy"), Строка(ТипЗнч(Данные.Ссылка)) + " " + Строка(ТекРекв.Номер) + " от " + Формат(ТекРекв.Дата, "ДФ=dd.MM.yyyy"));	
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьФорматируемогоДокумента(ТабДок, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено, МобильныйКлиент = Ложь) Экспорт
	
	ФормДок = Новый ФорматированныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкиАдминистратору.Ссылка КАК БизнесПроцесс,
	|	ЗаявкиАдминистратору.ДатаНачала КАК ДатаНачала,
	|	ЗаявкиАдминистратору.ДатаЗавершения,
	|	ЗаявкиАдминистратору.Описание,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, &ТекДата, МИНУТА) / 60
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, ЗаявкиАдминистратору.ДатаЗавершения, МИНУТА) / 60
	|	КОНЕЦ КАК ДлительностьЧас,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА ""(в процессе)""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВПроцессе,
	|	ВЫБОР
	|		КОГДА ЗаявкиАдминистратору.Завершен = ЛОЖЬ
	|			ТОГДА РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, &ТекДата, МИНУТА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЗаявкиАдминистратору.ДатаНачала, ЗаявкиАдминистратору.ДатаЗавершения, МИНУТА)
	|	КОНЕЦ КАК ДлительностьМин,
	|	ЗаявкиАдминистратору.Заявка,
	|	ЗаявкиАдминистратору.ДопСогласование.(
	|		Ссылка,
	|		НомерСтроки,
	|		СубъектСогласования,
	|		Согласовано,
	|		ТочкаДействия,
	|		Пройден,
	|		Пользователь,
	|		Комментарии КАК Комментарии,
	|		Автор,
	|		Пользователь.Должность КАК Должность,
	|		ДатаВыполнения
	|	),
	|	ЗаявкиАдминистратору.Автор
	|ИЗ
	|	БизнесПроцесс.ЗаявкиАдминистратору КАК ЗаявкиАдминистратору
	|ГДЕ
	|	ЗаявкиАдминистратору.Заявка В(&Заявка)";
	
	Запрос.Параметры.Вставить("Заявка", Ссылка);
	Запрос.Параметры.Вставить("ТекДата", ТекущаяДата());
	
	РезультатБП = Запрос.Выполнить();
	
	//получаем прикрепленные объекты
	//ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	//////////////////////////вывод СЗ на печать
	Для каждого Выборка Из Ссылка цикл
		
		БПСервер.НовыйПараграфТекстФД(ФормДок, Строка(ТипЗнч(Выборка)) + " №" + Выборка.Номер + " от " + Формат(Выборка.Дата, "ДФ=dd.MM.yyyy"), Истина);
		БПСервер.НовыйПараграфТекстФД(ФормДок, Символы.ПС);
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Автор);
		ОтИмени = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.ОтИмени);
		БПСервер.НовыйПараграфТекстФД(ФормДок, "Дата: " + Формат(Выборка.Дата, "ДФ=dd.MM.yyyy"));
		БПСервер.НовыйПараграфТекстФД(ФормДок, "Номер: " + Выборка.Номер);
		БПСервер.НовыйПараграфТекстФД(ФормДок, "Автор: " + ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, ""));
		БПСервер.НовыйПараграфТекстФД(ФормДок, "От имени: " + Выборка.ОтИмени);
		БПСервер.НовыйПараграфТекстФД(ФормДок, Символы.ПС);
		БПСервер.НовыйПараграфТекстФД(ФормДок, "Заголовок: " + Выборка.Примечания);
		БПСервер.НовыйПараграфТекстФД(ФормДок, Символы.ПС);
		
		БПСервер.НовыйПараграфТекстФД(ФормДок, "Сожержание:", Истина);
		//НовыйПараграфТекстФД(ФормДок, Символы.ПС);
		БПСервер.ДобавитьЭлементыФР(ФормДок, ТабДок);
		БПСервер.НовыйПараграфТекстФД(ФормДок, Символы.ПС);
		
		//показ этапов согласования СЗ
		//ТабДок.НачатьГруппуСтрок("Показать согласование", Истина);
		
		ЗапросПоСогласованию = Новый Запрос;
		ЗапросПоСогласованию.Текст = 
		"ВЫБРАТЬ
		|	Задача.Исполнитель КАК Исполнитель,
		|	Задача.ДатаИсполнения,
		|	Задача.Комментарии,
		|	Задача.РезультатВыполнения
		|ИЗ
		|	Задача.Задача КАК Задача
		|ГДЕ
		|	Задача.Заявка В (&Ссылка)";
		ЗапросПоСогласованию.УстановитьПараметр("Ссылка", Выборка);
		ТаблицаПоСогласованию = ЗапросПоСогласованию.Выполнить().Выгрузить();
		
		ВыборкаБп = РезультатБП.Выбрать();
		СтруктураПоиска = Новый Структура("Заявка", Выборка);
		
		Пока ВыборкаБп.НайтиСледующий(СтруктураПоиска) Цикл
			ВыборкаСогласование = ВыборкаБп.ДопСогласование.Выбрать();
			
			БПСервер.ПоказатьРецензентов(ФормДок, Выборка.Ссылка, Неопределено, Ссылка, "Штампы|Отметка", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
			
		КонецЦикла; 
		
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Администратор);
		БПСервер.НовыйПараграфТекстФД(ФормДок, ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, ""));
		
		БПСервер.ДобавитьКомментарии(ФормДок, Выборка);
	КонецЦикла;
	
	
	ТабДок = ФормДок;
	
КонецПроцедуры

Функция ПолучитьРПервогоРодителяПроекта(Проект) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Проекты.Ссылка КАК РодителиПроекта
	|ПОМЕСТИТЬ ВсеРодителиПроекта
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка.Родитель
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка.Родитель.Родитель
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка.Родитель.Родитель.Родитель
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка.Родитель.Родитель.Родитель.Родитель
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка.Родитель.Родитель.Родитель.Родитель.Родитель
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Проекты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Родитель = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	|	И Проекты.Ссылка В
	|			(ВЫБРАТЬ
	|				ВсеРодителиПроекта.РодителиПроекта КАК РодителиПроекта
	|			ИЗ
	|				ВсеРодителиПроекта КАК ВсеРодителиПроекта)";
	
	Запрос.УстановитьПараметр("Ссылка", Проект);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;	
	КонецЦикла;
	
	Возврат Неопределено;	
	
КонецФункции // ()

Процедура ОтправитьОповещениеПоEMAIL(ИнициаторОбращения, Обращение, КомментарийВыполнения) Экспорт

	//Вложения = Новый Соответствие;
	//Вложения.Вставить(ИмяФайлаИсходящегоСообщения,
	//Новый ДвоичныеДанные(ПутьКФайлу));
	
	Если НЕ ПараметрыСеанса.ДоступныеПользователи.Найти(ИнициаторОбращения) = Неопределено Тогда //не шлем самому себе
		Возврат;
	КонецЕсли;
	
	РеквизитыОбращения = БюджетныйНаСервере.ВернутьРеквизиты(Обращение, "Номер, Дата, Примечания");
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailСотрудникаКонтрагента);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailПользователя);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиКонтрагентовКонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	Справочник.СотрудникиКонтрагентов.КонтактнаяИнформация КАК СотрудникиКонтрагентовКонтактнаяИнформация
	|ГДЕ
	|	СотрудникиКонтрагентовКонтактнаяИнформация.Ссылка = &Ссылка
	|	И СотрудникиКонтрагентовКонтактнаяИнформация.Вид В (&Вид)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПользователиКонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	|ГДЕ
	|	ПользователиКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ПользователиКонтактнаяИнформация.Вид В (&Вид)";
	
	Запрос.УстановитьПараметр("Ссылка", ИнициаторОбращения);
	Запрос.УстановитьПараметр("Вид", ВидыКИ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Адресат = Выборка.Представление;
		
		Если Не ЗначениеЗаполнено(Адресат) Тогда
			Возврат;		
		КонецЕсли;
		
		Тело = "Выполнено обращение №" + РеквизитыОбращения.Номер + " от " + Формат(РеквизитыОбращения.Дата, "ДФ=dd.MM.yyyy");
		
		ПараметрыСообщения = Новый Структура;
		ПараметрыСообщения.Вставить("Кому", Адресат);
		ПараметрыСообщения.Вставить("Тема", Тело);
		
		НавигационнаяСсылкаИБ = "http://92.244.239.106/sab_support";
		НавигационнаяСсылкаДокумента = ПолучитьНавигационнуюСсылку(Обращение);
		ВнешняяСсылка = НавигационнаяСсылкаИБ + "/#" + НавигационнаяСсылкаДокумента;
		
		Тело = Тело + ".
		|Пожалуйста, ознакомьтесь и подтвердите правильность выполнения.
		|
		|Заголовок обращения:
		|" + РеквизитыОбращения.Примечания + "
		|Ссылка в базе САБ:
		|" + ВнешняяСсылка + "
		|Комментарии исполнителя:
		|" + ?(ЗначениеЗаполнено(КомментарийВыполнения), КомментарийВыполнения, "--отсутствует--") + "
		|
		|
		|
		|С уважением, Техническая поддержка САБ,
		|тел. +7(473) 232-02-48.";
		
		ПараметрыСообщения.Вставить("Тело", Тело);
		//ПараметрыСообщения.Вставить("Вложения", Вложения);
		
		Попытка
			РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыСообщения);
		Исключение
			//ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			//ПолучитьСообщениеОбОшибке(102);
			//ДополнитьСообщениеОбОшибке(ТекстОшибки);
			//Возврат;
		КонецПопытки;		
	КонецЕсли;

КонецПроцедуры

Процедура ОтправитьОповещениеДокументомПоEMAIL(ИнициаторОбращения, Обращение, КомментарийВыполнения) Экспорт

	//Вложения = Новый Соответствие;
	//Вложения.Вставить(ИмяФайлаИсходящегоСообщения,
	//Новый ДвоичныеДанные(ПутьКФайлу));
	
	Если НЕ ПараметрыСеанса.ДоступныеПользователи.Найти(ИнициаторОбращения) = Неопределено Тогда //не шлем самому себе
		Возврат;
	КонецЕсли;
	
	РеквизитыОбращения = БюджетныйНаСервере.ВернутьРеквизиты(Обращение, "Номер, Дата, Примечания");
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailСотрудникаКонтрагента);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailПользователя);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиКонтрагентовКонтактнаяИнформация.Представление КАК Представление
	|ИЗ
	|	Справочник.СотрудникиКонтрагентов.КонтактнаяИнформация КАК СотрудникиКонтрагентовКонтактнаяИнформация
	|ГДЕ
	|	СотрудникиКонтрагентовКонтактнаяИнформация.Ссылка = &Ссылка
	|	И СотрудникиКонтрагентовКонтактнаяИнформация.Вид В (&Вид)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПользователиКонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	|ГДЕ
	|	ПользователиКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ПользователиКонтактнаяИнформация.Вид В (&Вид)";
	
	Запрос.УстановитьПараметр("Ссылка", ИнициаторОбращения);
	Запрос.УстановитьПараметр("Вид", ВидыКИ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Адресат = Выборка.Представление;
		
		Если Не ЗначениеЗаполнено(Адресат) Тогда
			Возврат;		
		КонецЕсли;
		
		Тело = "Выполнено обращение №" + РеквизитыОбращения.Номер + " от " + Формат(РеквизитыОбращения.Дата, "ДФ=dd.MM.yyyy");
		
		НавигационнаяСсылкаИБ = "http://92.244.239.106/sab_support";
		НавигационнаяСсылкаДокумента = ПолучитьНавигационнуюСсылку(Обращение);
		ВнешняяСсылка = НавигационнаяСсылкаИБ + "/#" + НавигационнаяСсылкаДокумента;
		
		НовоеПисьмо = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
		НовоеПисьмо.ОтправительПредставление = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		НовоеПисьмо.СписокПолучателейПисьма = Адресат + ";";
		НовоеПисьмо.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
		НовоеПисьмо.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
		НовоеПисьмо.Кодировка = "UTF-8";
		НовоеПисьмо.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		НовоеПисьмо.Тема = Тело;
		НовоеПисьмо.Дата = ТекущаяДата();
		НовоеПисьмо.Автор = Справочники.Пользователи.Система;
		НовоеПисьмо.Ответственный = Справочники.Пользователи.Система;
		НовоеПисьмо.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
		
		НоваяСтрокаПолучателя = НовоеПисьмо.ПолучателиПисьма.Добавить();
		НоваяСтрокаПолучателя.Адрес = Адресат;
		
		НовоеПисьмо.Текст = Тело + ".
		|Пожалуйста, ознакомьтесь и подтвердите правильность выполнения.
		|
		|Заголовок обращения:
		|" + РеквизитыОбращения.Примечания + "
		|Ссылка в базе САБ:
		|" + ВнешняяСсылка + "
		|Комментарии исполнителя:
		|" + ?(ЗначениеЗаполнено(КомментарийВыполнения), КомментарийВыполнения, "--отсутствует--") + "
		|
		|
		|
		|С уважением, Техническая поддержка САБ,
		|тел. +7(473) 232-02-48.";
		
		//НовоеПисьмо.ТекстHTML
		НовоеПисьмо.Записать();
		
		
	КонецЕсли;

КонецПроцедуры
