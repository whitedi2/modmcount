
Функция ВвестиНаОсновании(ДокОснование) Экспорт
	
	МассивДокументов = Новый Массив;
		
	Если ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ПланПроизводства") Тогда
		ТЧМатериалов = ДокОснование.Сырье.Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланПроизводстваТовары.Спецификация.Цех КАК Цех,
		|	ПланПроизводстваТовары.Спецификация,
		|	ПланПроизводстваТовары.Номенклатура,
		|	ПланПроизводстваТовары.КоличествоКЗаказу КАК Количество
		|ИЗ
		|	Документ.ПланПроизводства.Товары КАК ПланПроизводстваТовары
		|ГДЕ
		|	ПланПроизводстваТовары.Ссылка = &Ссылка
		|	И ПланПроизводстваТовары.СпособОбеспечения = &СпособОбеспечения
		|	И ПланПроизводстваТовары.КоличествоКЗаказу > 0
		|ИТОГИ ПО
		|	Цех";
		Запрос.УстановитьПараметр("Ссылка", ДокОснование);
		Запрос.УстановитьПараметр("СпособОбеспечения", Перечисления.ТипыОбеспеченияПотребности.Производство);
		
		ВыборкаПоЦехам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоЦехам.Следующий() Цикл
			ДокЗаказа = Документы.ЗаказНаПроизводство.СоздатьДокумент();
			ДокЗаказа.Дата = ТекущаяДата();
			ДокЗаказа.Предприятие = ДокОснование.Предприятие;
			ДокЗаказа.Цех = ВыборкаПоЦехам.Цех;
			ДокЗаказа.Склад = ВыборкаПоЦехам.Цех.Склад;
			ДокЗаказа.ДокОснование = ДокОснование;
			ДокЗаказа.Подразделение = ДокОснование.Подразделение;
			ВыборкаПоНоменклатуре = ВыборкаПоЦехам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл
				СтрокаТЧНоменклатур = ДокЗаказа.ТабличнаяЧасть.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧНоменклатур, ВыборкаПоНоменклатуре);
				СтрокаТЧНоменклатур.УИД = Новый УникальныйИдентификатор;
				НайденныеСтрокиМатериалов = ТЧМатериалов.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТЧНоменклатур.Номенклатура));
				Для Каждого НайденнаяСтрокаМатериалов Из НайденныеСтрокиМатериалов Цикл
					СтрокаМатериалов = ДокЗаказа.Материалы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаМатериалов, НайденнаяСтрокаМатериалов);
					СтрокаМатериалов.Материал = НайденнаяСтрокаМатериалов.Ингредиент;
					СтрокаМатериалов.УИДТЧ = СтрокаТЧНоменклатур.УИД;
				КонецЦикла;	
			КонецЦикла;
			ДокЗаказа.Записать();
			МассивДокументов.Добавить(ДокЗаказа.Ссылка);
		КонецЦикла;	
	КонецЕсли;	
	
	Возврат МассивДокументов;
	
КонецФункции	

Функция ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура) Экспорт
	
	Если ЗначениеЗаполнено(ТекНоменклатура.ОсновнаяСпецификацияНоменклатуры) Тогда 
		Возврат ТекНоменклатура.ОсновнаяСпецификацияНоменклатуры;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спецификации.Ссылка
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры КАК Спецификации
	|ГДЕ
	|	Спецификации.Владелец = &Продукция
	//|	И Спецификации.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.ГотоваяПродукция)
	|	И НЕ Спецификации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спецификации.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Продукция", ТекНоменклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Справочники.СпецификацииНоменклатуры.ПустаяСсылка();
	
КонецФункции

Функция ПечатьЗаданиеНаПроизводство(ПараметрыКоманды) Экспорт
	
	ТабДок  = Новый ТабличныйДокумент;
	Макет = Документы.ЗаказНаПроизводство.ПолучитьМакет("ПФ_ЗаказНаПроизводство");	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.НомерЗаданияНаПроизводство КАК НомерЗаданияНаПроизводство,
	|	ЗаказНаПроизводство.ДатаПроизводства КАК ДатаПроизводства,
	|	ЗаказНаПроизводство.Партия КАК Партия,
	|	ЗаказНаПроизводствоТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоТабличнаяЧасть.Номенклатура.Артикул КАК Артикул,
	|	ЗаказНаПроизводствоТабличнаяЧасть.Количество КАК КоличествоНоменклатуры,
	|	ЗаказНаПроизводствоТабличнаяЧасть.СрокГодностиПродукции КАК СрокГодностиПродукции
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.ТабличнаяЧасть КАК ЗаказНаПроизводствоТабличнаяЧасть
	|		ПО ЗаказНаПроизводство.Ссылка = ЗаказНаПроизводствоТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоМатериалы.Материал КАК Материал,
	|	ЗаказНаПроизводствоМатериалы.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводствоМатериалы
	|		ПО ЗаказНаПроизводство.Ссылка = ЗаказНаПроизводствоМатериалы.Ссылка
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка В(&Ссылка)";
	
	Запрос.Параметры.Вставить("Ссылка", ПараметрыКоманды[0].Ссылка);
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаНоменклатура = Результат[0].Выбрать();
	ТЗ_Материалы = Результат[1].Выгрузить();
	
	ТабДок.Очистить();
	
	Шапка = Макет.ПолучитьОбласть("ШапкаЗадание");             
	//Шапка.Параметры.Заполнить(Результат);
	Шапка.Параметры.Организация = ПараметрыКоманды[0].Ссылка.Организация;
	Шапка.Параметры.НомерЗаданияНаПроизводство = ПараметрыКоманды[0].Ссылка.НомерЗаданияНаПроизводство;
	Шапка.Параметры.ДатаПроизводства = ПараметрыКоманды[0].Ссылка.ДатаПроизводства;
			
	ТабДок.Вывести(Шапка);
		
	НомерСтроки = 1;
	//ВставлятьРазделительСтраниц = Ложь; 
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		//Если ВставлятьРазделительСтраниц Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;
		
		Строка = Макет.ПолучитьОбласть("СтрокаПроизводимойНоменклатуры");
		Строка.Параметры.Заполнить(ВыборкаНоменклатура);
		Строка.Параметры.КоличествоОбразцовДляОКК = ?(ВыборкаНоменклатура.КоличествоНоменклатуры < 100, 5, 10);
		
		ТабДок.Вывести(Строка);
		
		НомерСтроки = НомерСтроки + 1;
		
		//ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	
	Возврат ТабДок;

КонецФункции
