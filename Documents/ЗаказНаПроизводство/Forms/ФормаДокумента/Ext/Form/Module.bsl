
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	ЗаполнитьТаблицуИнгредиентов();
	
	ОбновитьЗаявленноеНаперемещениеКоличество();
	
	ЗаполнитьОстаткиИРезервы();
	
	Объект.ДатаПроизводства = ТекущаяДата() + 24*60*60;
	
	ВидОперацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуИнгредиентов()
	
	ТЗМатериалов = Объект.Материалы.Выгрузить(, "Материал, Количество");
	ТЗМатериалов.Свернуть("Материал", "Количество");
	
	ТаблицаИнгредиентов.Загрузить(ТЗМатериалов);
	
КонецПроцедуры	

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Спецификация = ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекДанные.Номенклатура);
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	
	ЗаполнитьОстаткиИРезервы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиИРезервы(РасчетПоСтроке = Ложь, СтруктураДанных = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаказЗакрыт = Объект.Статус = Перечисления.СтатусыЗаказовНаПроизводство.Произведен ИЛИ Объект.Статус = Перечисления.СтатусыЗаказовНаПроизводство.Отменен;
	
	ОбъектМодуль = РеквизитФормыВЗначение("Объект");
	
	//остатки
	СтруктураИмен = УЧ_Сервер.СформироватьСтруктуруИмен(ОбъектМодуль);
	
	СтруктураСоответствий = УЧ_Сервер.ПоучитьСоответствияСчетовНоменклатуры(ОбъектМодуль, СтруктураИмен);
	СоответствиеСчета = СтруктураСоответствий.Соответствия;
	СоответствиеУчетаПоПодразделениям = СтруктураСоответствий.СоответствияУчетаПодразделений;
	
	ТаблицаОстатков = УЧ_Сервер.ПолучитьТаблицуОстатков(ОбъектМодуль, СтруктураИмен, СтруктураСоответствий, НачалоДня(Объект.Дата));
	РезультатОстатки = ТаблицаОстатков.РезультатОстатки;
	РезультатКонтроль = ТаблицаОстатков.РезультатКонтроль;
	
	Если РасчетПоСтроке Тогда
			СтруктураДанных.КоличествоНаОстатках = 0; 
			НайденныеСтроки = РезультатОстатки.НайтиСтроки(Новый Структура("Номенклатура, Склад", СтруктураДанных.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, СтруктураДанных.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				СтруктураДанных.КоличествоНаОстатках = ТекСтрокаНайденная.Количество;		
			КонецЦикла;	
	Иначе
		Для каждого ТекСтрока Из Объект.Материалы Цикл
			ТекСтрока.КоличествоНаОстатках = 0; 
			НайденныеСтроки = РезультатОстатки.НайтиСтроки(Новый Структура("Номенклатура, Склад", ТекСтрока.Материал, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, ТекСтрока.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				ТекСтрока.КоличествоНаОстатках = ТекСтрокаНайденная.Количество;		
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;
	
	//резервы
	ВремТЧЗаказы.Очистить();
	ВремТЧЗаказыПоставщикам.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйОбороты.Субконто1 КАК Номенклатура,
	               |	УчетныйОбороты.Субконто2 КАК Склад,
	               |	УчетныйОбороты.Предприятия КАК Предприятие,
	               |	УчетныйОбороты.КоличествоОборот КАК Оборот,
	               |	УчетныйОбороты.КоличествоОборотДт КАК КоличествоПоставка,
	               |	УчетныйОбороты.КоличествоОборотКт КАК Количество,
	               |	ВЫБОР
	               |		КОГДА УчетныйОбороты.Период < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |			ТОГДА НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(УчетныйОбороты.Период, ДЕНЬ)
	               |	КОНЕЦ КАК Дата,
	               |	УчетныйОбороты.Регистратор КАК Заказ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаПеремещение)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаПеремещение).ДатаПоступления
	               |		ИНАЧЕ УчетныйОбороты.Период
	               |	КОНЕЦ КАК ДатаЗаказа,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |	КОНЕЦ КАК Контрагент
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			,
	               |			,
	               |			Регистратор,
	               |			Счет.Код = ""0041"",
	               |			,
	               |			Предприятия В (&Предприятие)
	               |				И Субконто1 В (&Номенклатура)
	               |				И Субконто2 В (&Склад),
	               |			,
	               |			) КАК УчетныйОбороты
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсеНезакрытыеЗаказы
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ УчетныйОбороты.Период >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		КОНЕЦ
	               |	И НЕ УчетныйОбороты.Регистратор = &ЭтаСсылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УчетныйОбороты.Субконто1,
	               |	УчетныйОбороты.Субконто2,
	               |	УчетныйОбороты.Предприятия,
	               |	УчетныйОбороты.КоличествоОборот,
	               |	УчетныйОбороты.КоличествоОборотДт,
	               |	УчетныйОбороты.КоличествоОборотКт,
	               |	ВЫБОР
	               |		КОГДА УчетныйОбороты.Период < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |			ТОГДА НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(УчетныйОбороты.Период, ДЕНЬ)
	               |	КОНЕЦ,
	               |	УчетныйОбороты.Регистратор,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаПеремещение)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаПеремещение).ДатаПоступления
	               |		ИНАЧЕ УчетныйОбороты.Период
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			&Период,
	               |			,
	               |			Регистратор,
	               |			Счет.Код = ""41""
	               |				ИЛИ Счет.Родитель.Код = ""10""
	               |				ИЛИ Счет.Код = ""43"",
	               |			,
	               |			Предприятия В (&Предприятие)
	               |				И Субконто1 В (&Номенклатура)
	               |				И Субконто2 В (&Склад),
	               |			,
	               |			) КАК УчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
	               |		ПО УчетныйОбороты.Регистратор = сабОбработкаДокументов.ДокументУУ
	               |			И (ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.ОтчетПроизводстваЗаСмену)
	               |					ТОГДА ВЫРАЗИТЬ(сабОбработкаДокументов.ДокументБУ КАК Документ.ОтчетПроизводстваЗаСмену).Заказ
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ = &ЭтаСсылка)
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсеНезакрытыеЗаказы
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ УчетныйОбороты.Период >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		КОНЕЦ
	               |	И НЕ УчетныйОбороты.Регистратор = &ЭтаСсылка
	               |	И НЕ ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ВыпускПродукции).ДокОснование = &ЭтаСсылка
	               |	И сабОбработкаДокументов.ДокументБУ ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Материалы.Выгрузить(,"Материал").ВыгрузитьКолонку("Материал"));
	Запрос.УстановитьПараметр("ВсеНезакрытыеЗаказы", Истина); //все заказы с проводками
	Запрос.УстановитьПараметр("Период", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	//Статусы = Новый Массив;
	//Статусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отгружен);
	//Статусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отменен);
	//Запрос.УстановитьПараметр("Статус", Статусы);
	Запрос.УстановитьПараметр("ЭтаСсылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Если РасчетПоСтроке Тогда
		
		СтруктураДанных.КоличествоВРезервах = 0;
		СтруктураДанных.КоличествоКПоставке = 0;
		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура, Склад", СтруктураДанных.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, СтруктураДанных.Склад)));
		Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
			Если НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) Тогда
				СтруктураДанных.КоличествоНаОстатках = СтруктураДанных.КоличествоНаОстатках + ТекСтрокаНайденная.КоличествоПоставка - ТекСтрокаНайденная.Количество;	
			//ИначеЕсли НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.ДатаПоступления) ИЛИ НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) Тогда	
			Иначе
				СтруктураДанных.КоличествоВРезервах = СтруктураДанных.КоличествоВРезервах + ТекСтрокаНайденная.Количество;
				СтруктураДанных.КоличествоКПоставке = СтруктураДанных.КоличествоКПоставке + ТекСтрокаНайденная.КоличествоПоставка;
			КонецЕсли;
		КонецЦикла;	
		
		СтруктураДанных.КоличествоОстаток = СтруктураДанных.КоличествоНаОстатках + СтруктураДанных.КоличествоКПоставке - СтруктураДанных.КоличествоВРезервах - СтруктураДанных.Количество;
		
	Иначе
		
		Для каждого ТекСтрока Из Объект.Материалы Цикл
			ТекСтрока.КоличествоВРезервах = 0; 
			ТекСтрока.КоличествоКПоставке = 0;
			НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура, Склад", ТекСтрока.Материал, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, ТекСтрока.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				Если НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.Дата) Тогда
					ТекСтрока.КоличествоНаОстатках = ТекСтрока.КоличествоНаОстатках + ТекСтрокаНайденная.КоличествоПоставка - ТекСтрокаНайденная.Количество;	
				//ИначеЕсли НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.ДатаПоступления) ИЛИ НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) Тогда	
				Иначе
					ТекСтрока.КоличествоВРезервах = ТекСтрока.КоличествоВРезервах + ТекСтрокаНайденная.Количество;
					ТекСтрока.КоличествоКПоставке = ТекСтрока.КоличествоКПоставке + ТекСтрокаНайденная.КоличествоПоставка;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		
		Для каждого ТекСтрока Из Объект.Материалы Цикл
			ТекСтрока.КоличествоОстаток = ТекСтрока.КоличествоНаОстатках + ТекСтрока.КоличествоКПоставке - ТекСтрока.КоличествоВРезервах - ТекСтрока.Количество; 
		КонецЦикла;
		
	КонецЕсли;
	
	ВремТЧЗаказы.Очистить();
	ВремТЧЗаказыПоставщикам.Очистить();
	Для каждого ТекСтрока Из Выборка Цикл
		Если НачалоДня(ТекСтрока.Дата) <= НачалоДня(Объект.Дата) Тогда		
			Продолжить;	
		КонецЕсли;
		Если ТекСтрока.Количество Тогда
			НовВремСтрока = ВремТЧЗаказы.Добавить();
			ЗаполнитьЗначенияСвойств(НовВремСтрока, ТекСтрока);
		КонецЕсли;	
		Если ТекСтрока.КоличествоПоставка Тогда
			НовВремСтрока = ВремТЧЗаказыПоставщикам.Добавить();
			ЗаполнитьЗначенияСвойств(НовВремСтрока, ТекСтрока);
			НовВремСтрока.Количество = ТекСтрока.КоличествоПоставка;
		КонецЕсли;
	КонецЦикла;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура)
	Возврат Документы.ЗаказНаПроизводство.ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборСтрокМатериалов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
		ТабличнаяЧастьСпецификацияПриИзменении(Неопределено);
	КонецЕсли;
	
	КоличествоДо = Элемент.ТекущиеДанные.Количество;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекДанные.УИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		Объект.Материалы.Удалить(СтрокаМатериала);	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСпецификацияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ПересчитатьКоличествоПоСпецификации(ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоПоСпецификации(ПервоначальноеКоличество, ТекУИД)

	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		Количество = ?(КоличествоДо, СтрокаМатериала.Количество / КоличествоДо, СтрокаМатериала.Количество);
		СтрокаМатериала.Количество = СтрокаМатериала.Коэффициент * Количество * ПервоначальноеКоличество;	
	КонецЦикла;	
	
	ЗаполнитьТаблицуИнгредиентов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМатериалыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД)
	
	ТаблицаМатериалов = Объект.Материалы.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаМатериалов.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
	
	ЗапросПоСпецификациям = Новый Запрос;
	ЗапросПоСпецификациям.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
	|	Спецификации.Владелец КАК Продукция
	|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры КАК Спецификации
	|ГДЕ
	//|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|	НЕ Спецификации.Ссылка.ПометкаУдаления
	|	И НЕ Спецификации.Ссылка В (&СписокСпецификаций)
	|	И Спецификации.Дата <= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецификации.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииСостав.Ссылка КАК Спецификация,
	|	СпецификацииСостав.Ссылка.Владелец КАК Продукция,
	|	СпецификацииСостав.Номенклатура КАК Материал,
	|	СпецификацииСостав.Ссылка.Дата КАК Дата,
	|	СпецификацииСостав.Количество
	//|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	//|	СпецификацииСостав.МассаНетто,
	//|	СпецификацииСостав.ПотериПриТепловойОбработке,
	//|	СпецификацииСостав.Ссылка.Выход
	|ИЗ
	|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииСостав
	|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
	|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Владелец
	|ГДЕ
	|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
	//|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпецификацииСостав.Ссылка,
	|	СпецификацииСостав.Ссылка.Владелец,
	|	СпецификацииСостав.Номенклатура,
	|	СпецификацииСостав.Ссылка.Дата,
	|	СпецификацииСостав.Количество
	//|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	//|	СпецификацииСостав.МассаНетто,
	//|	СпецификацииСостав.ПотериПриТепловойОбработке,
	//|	СпецификацииСостав.Ссылка.Выход
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка В(&СписокСпецификаций)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	ЗапросПоСпецификациям.УстановитьПараметр("СписокСпецификаций", ТекСпецификация);
	ЗапросПоСпецификациям.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата())); 
	РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
	ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
	
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = 1;
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СоставСпецификаций.Материал));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					ТекКоэф1 = ТекКоэф * СтрокаПодчиненнойСпецификации.Количество;
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации.Материал));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							ТекКоэф2 = ТекКоэф1 * СтрокаПодчиненнойСпецификации2.Количество;
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации2.Материал));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									ТекКоэф3 = ТекКоэф2 * СтрокаПодчиненнойСпецификации3.Количество;
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации3.Материал));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											ТекКоэф4 = ТекКоэф3 * СтрокаПодчиненнойСпецификации4.Количество;
											СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
											СтрокаТаблМатериалов.Коэффициент = ТекКоэф4;
											СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации4.Количество * ТекКоэф4;
											СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации4.Материал;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе
										СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
										СтрокаТаблМатериалов.Коэффициент = ТекКоэф3;
										СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации3.Количество * ТекКоэф3;
										СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации3.Материал;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
								СтрокаТаблМатериалов.Коэффициент = ТекКоэф2;
								СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации2.Количество * ТекКоэф2;
								СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации2.Материал;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();	
						СтрокаТаблМатериалов.Коэффициент = ТекКоэф1;
						СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации.Количество * ТекКоэф1;
						СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации.Материал;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
				СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СоставСпецификаций.Количество * ТекКоэф;
				СтрокаТаблМатериалов.Материал = СоставСпецификаций.Материал;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
	
	Объект.Материалы.Загрузить(ТаблицаМатериалов);
	
	ЗаполнитьТаблицуИнгредиентов();
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьОтборСтрокМатериалов()
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("УИДТЧ", ТекДанные.УИД));
	Иначе
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
	КонецЕсли;	
		
КонецПроцедуры	

&НаКлиенте
Процедура ПерезаполнитьПоСпецификации(Команда)
	
	Объект.Материалы.Очистить();
	
	Для Каждого СтрокаТЧ Из Объект.ТабличнаяЧасть Цикл
		УстановитьМатериалыПоСпецификации(СтрокаТЧ.Спецификация, СтрокаТЧ.Количество, СтрокаТЧ.УИД);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда 
		Элементы.ТабличнаяЧастьСклад.Видимость = Истина;
	Иначе
		Элементы.ТабличнаяЧастьСклад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦехПриИзменении(Элемент)
	
	Объект.Склад = БюджетныйНаСервере.ВернутьРеквизит(Объект.Цех, "Склад");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаданияНаПроизводство(Команда)
	
	Если Модифицированность Или Не Объект.Проведен Тогда
		Предупреждение("Для печати документа его нужно провести");
		Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Отчет.ОтчетПоПлануПроизводства.ФормаОбъекта");
	Форма.УстановитьТекущийВариант("ЗаказНаПроизводство");
	КомпоновщикНастроек = Форма.Отчет.КомпоновщикНастроек;
	
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПланПроизводства", Объект.Ссылка);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "СпособОбеспечения", ПредопределенноеЗначение("Перечисление.ТипыОбеспеченияПотребности.Производство"));	
	
	Форма.СкомпоноватьРезультат();
	
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.ЗаявленоНаПеремещение = 0 Тогда
			СтрокаИнгредиентов.Выбран = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.ЗаявленоНаПеремещение = 0 Тогда
			СтрокаИнгредиентов.Выбран = Ложь;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатьЗаданиеНаПеремещение(Команда)
	
	Если Не Объект.Проведен Или Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала нужно провести документ";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	ДатьЗаданиеНаПеремещениеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатьЗаданиеНаПеремещениеНаСервере()
	
	ЗаказНаПеремещение = Документы.ЗаказПоставщику.СоздатьДокумент();
	ЗаказНаПеремещение.Дата = ТекущаяДата();
	ЗаказНаПеремещение.ДатаПоступления = ЗаказНаПеремещение.Дата;
	ЗаказНаПеремещение.Статус = Перечисления.СтатусыЗаказовПоставщикам.Создан;
	ЗаказНаПеремещение.ВидОперации = Перечисления.ВидыЗаказов.ПеремещениеМеждуСкладами;
	ЗаказНаПеремещение.Предприятие = Объект.Предприятие;
	ЗаказНаПеремещение.Подразделение = Объект.Подразделение;
	ЗаказНаПеремещение.Контрагент = Объект.Подразделение;
	ЗаказНаПеремещение.Склад = Объект.Склад;
	ЗаказНаПеремещение.СкладОтправитель = ?(ЗначениеЗаполнено(Объект.ДокОснование.СкладСырья), Объект.ДокОснование.СкладСырья, Справочники.Склады.ПолучитьСкладПоЗначениюДопРеквизита("Склад сырья", Объект.Предприятие));
	ЗаказНаПеремещение.ДокОснование = Объект.Ссылка;
	НужноСоздаватьДокумент = Ложь; //защита от дурака, чтобы пустые документы нке создавались
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.Выбран Тогда
			СтрокаЗаказа = ЗаказНаПеремещение.ТабличнаяЧасть.Добавить();
			СтрокаЗаказа.Номенклатура = СтрокаИнгредиентов.Материал;
			СтрокаЗаказа.ЕдиницаИзмерения = СтрокаЗаказа.Номенклатура.ЕдиницаИзмерения;
			СтрокаЗаказа.Количество = СтрокаИнгредиентов.Количество;
			СтрокаЗаказа.КоличествоУпаковок = СтрокаИнгредиентов.Количество;
			СтрокаЗаказа.ДатаПоступления = ЗаказНаПеремещение.Дата;
			НужноСоздаватьДокумент = Истина;
			СтрокаИнгредиентов.Выбран = Ложь;
		КонецЕсли;
	КонецЦикла;	
	
	Если НужноСоздаватьДокумент Тогда
		ЗаказНаПеремещение.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
	
	ОбновитьЗаявленноеНаперемещениеКоличество();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаявленноеНаперемещениеКоличество()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура,
	|	ЗаказПоставщикуТабличнаяЧасть.Количество КАК ЗаявленоНаПеремещение
	|ПОМЕСТИТЬ ВТ_ЗаказПоставщику
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.ТабличнаяЧасть КАК ЗаказПоставщикуТабличнаяЧасть
	|		ПО ЗаказПоставщику.Ссылка = ЗаказПоставщикуТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ЗаказПоставщику.ДокОснование = &ДокОснование
	|	И ЗаказПоставщику.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УЧ_ПеремещениеТоваровТабличнаяЧасть.Номенклатура,
	|	УЧ_ПеремещениеТоваровТабличнаяЧасть.Количество КАК КоличествоПеремещено
	|ПОМЕСТИТЬ ВТ_Перемещения
	|ИЗ
	|	Документ.УЧ_ПеремещениеТоваров КАК УЧ_ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПеремещениеТоваров.ТабличнаяЧасть КАК УЧ_ПеремещениеТоваровТабличнаяЧасть
	|		ПО УЧ_ПеремещениеТоваров.Ссылка = УЧ_ПеремещениеТоваровТабличнаяЧасть.Ссылка
	|ГДЕ
	|	УЧ_ПеремещениеТоваров.Проведен
	|	И УЧ_ПеремещениеТоваров.ДокОснование.ДокОснование = &ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПоставщику.Номенклатура,
	|	ВТ_ЗаказПоставщику.ЗаявленоНаПеремещение,
	|	ВТ_Перемещения.КоличествоПеремещено
	|ИЗ
	|	ВТ_ЗаказПоставщику КАК ВТ_ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Перемещения КАК ВТ_Перемещения
	|		ПО ВТ_ЗаказПоставщику.Номенклатура = ВТ_Перемещения.Номенклатура";
	Запрос.УстановитьПараметр("ДокОснование", Объект.Ссылка);
	
	ТаблицаЗаказанных = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		НайденныестрокиЗаказа = ТаблицаЗаказанных.НайтиСтроки(Новый Структура("Номенклатура", СтрокаИнгредиентов.Материал));
		Для Каждого СтрокаЗакза Из НайденныестрокиЗаказа Цикл
			СтрокаИнгредиентов.ЗаявленоНаПеремещение = СтрокаЗакза.ЗаявленоНаПеремещение;
			СтрокаИнгредиентов.Перемещено = СтрокаЗакза.КоличествоПеремещено; 
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаИнгредиентовПередНачаломИзменения(Элемент, Отказ)

	ТекДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекДанные.ЗаявленоНаПеремещение = 0 Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.УИДТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные.УИД;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ФормированиеМаршрута");
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьОстаткиИРезервы();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для каждого ТекСтрока Из ТекущийОбъект.ТабличнаяЧасть Цикл 
		Если ЗначениеЗаполнено(ТекущийОбъект.Склад) Тогда
			ТекСтрока.Склад = ТекущийОбъект.Склад;
		КонецЕсли;
	КонецЦикла;
	МассивКУд = Новый Массив;
	Для каждого ТекСтрока Из ТекущийОбъект.Материалы Цикл
		Если ЗначениеЗаполнено(ТекущийОбъект.Склад) Тогда
			ТекСтрока.Склад = ТекущийОбъект.Склад;
		КонецЕсли;
		НайденныеСтрокиТовары = ТекущийОбъект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДТЧ));
		Если Не НайденныеСтрокиТовары.Количество() Тогда
			МассивКУд.Добавить(ТекСтрока);	
		КонецЕсли;
	КонецЦикла;
	Для каждого ТекУд Из МассивКУд Цикл
		ТекущийОбъект.Материалы.Удалить(ТекУд);	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииНаСервере()
	Элементы.Переработчик.Видимость = Объект.ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.ПоступлениеИзПереработки;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ВидОперацииПриИзмененииНаСервере();
КонецПроцедуры
