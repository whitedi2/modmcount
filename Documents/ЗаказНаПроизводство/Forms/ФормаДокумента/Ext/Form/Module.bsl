
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	ЗаполнитьТаблицуИнгредиентов();
	
	ОбновитьЗаявленноеНаперемещениеКоличество();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуИнгредиентов()
	
	ТЗМатериалов = Объект.Материалы.Выгрузить(, "Материал, Количество");
	ТЗМатериалов.Свернуть("Материал", "Количество");
	
	ТаблицаИнгредиентов.Загрузить(ТЗМатериалов);
	
КонецПроцедуры	

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Спецификация = ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекДанные.Номенклатура);
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спецификации.Ссылка
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	Спецификации.Продукция = &Продукция
	|	И Спецификации.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.ГотоваяПродукция)
	|	И НЕ Спецификации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спецификации.Дата УБЫВ";
	Запрос.УстановитьПараметр("Продукция", ТекНоменклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Справочники.Спецификации.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборСтрокМатериалов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
		ТабличнаяЧастьСпецификацияПриИзменении(Неопределено);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекДанные.УИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		Объект.Материалы.Удалить(СтрокаМатериала);	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСпецификацияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ПересчитатьКоличествоПоСпецификации(ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоПоСпецификации(ПервоначальноеКоличество, ТекУИД)

	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		СтрокаМатериала.Количество = СтрокаМатериала.Коэффициент * ПервоначальноеКоличество;	
	КонецЦикла;	
	
	ЗаполнитьТаблицуИнгредиентов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМатериалыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД)
	
	ТаблицаМатериалов = Объект.Материалы.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаМатериалов.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
	
	ЗапросПоСпецификациям = Новый Запрос;
	ЗапросПоСпецификациям.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
	|	Спецификации.Продукция
	|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
	|ИЗ
	|	Справочник.Спецификации КАК Спецификации
	|ГДЕ
	|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|	И НЕ Спецификации.Ссылка.ПометкаУдаления
	|	И НЕ Спецификации.Ссылка В (&СписокСпецификаций)
	|	И Спецификации.Дата <= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецификации.Продукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииСостав.Ссылка КАК Спецификация,
	|	СпецификацииСостав.Ссылка.Продукция,
	|	СпецификацииСостав.Материал,
	|	СпецификацииСостав.Ссылка.Дата КАК Дата,
	|	СпецификацииСостав.МассаБрутто,
	|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	|	СпецификацииСостав.МассаНетто,
	|	СпецификацииСостав.ПотериПриТепловойОбработке,
	|	СпецификацииСостав.Ссылка.Выход
	|ИЗ
	|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
	|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
	|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Продукция
	|ГДЕ
	|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
	|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпецификацииСостав.Ссылка,
	|	СпецификацииСостав.Ссылка.Продукция,
	|	СпецификацииСостав.Материал,
	|	СпецификацииСостав.Ссылка.Дата,
	|	СпецификацииСостав.МассаБрутто,
	|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	|	СпецификацииСостав.МассаНетто,
	|	СпецификацииСостав.ПотериПриТепловойОбработке,
	|	СпецификацииСостав.Ссылка.Выход
	|ИЗ
	|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка В(&СписокСпецификаций)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	ЗапросПоСпецификациям.УстановитьПараметр("СписокСпецификаций", ТекСпецификация);
	ЗапросПоСпецификациям.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата())); 
	РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
	ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
	
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = СоставСпецификаций.МассаБрутто / СоставСпецификаций.Выход;
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СоставСпецификаций.Материал));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации.Материал));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации2.Материал));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации3.Материал));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
											СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто * СтрокаПодчиненнойСпецификации4.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход * СтрокаПодчиненнойСпецификации4.Выход);
											СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
											СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации4.Материал;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе
										СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
										СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход);
										СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
										СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации3.Материал;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
								СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход);
								СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
								СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации2.Материал;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();	
						СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто / СтрокаПодчиненнойСпецификации.Выход;
						СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
						СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации.Материал;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
				СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СтрокаТаблМатериалов.Коэффициент * ПервоначальноеКоличество;
				СтрокаТаблМатериалов.Материал = СоставСпецификаций.Материал;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
	
	Объект.Материалы.Загрузить(ТаблицаМатериалов);
	
	ЗаполнитьТаблицуИнгредиентов();
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьОтборСтрокМатериалов()
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("УИДТЧ", ТекДанные.УИД));
	Иначе
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
	КонецЕсли;	
		
КонецПроцедуры	

&НаКлиенте
Процедура ПерезаполнитьПоСпецификации(Команда)
	
	Объект.Материалы.Очистить();
	
	Для Каждого СтрокаТЧ Из Объект.ТабличнаяЧасть Цикл
		УстановитьМатериалыПоСпецификации(СтрокаТЧ.Спецификация, СтрокаТЧ.Количество, СтрокаТЧ.УИД);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда 
		Элементы.ТабличнаяЧастьСклад.Видимость = Истина;
	Иначе
		Элементы.ТабличнаяЧастьСклад.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦехПриИзменении(Элемент)
	
	Объект.Склад = БюджетныйНаСервере.ВернутьРеквизит(Объект.Цех, "Склад");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаданияНаПроизводство(Команда)
	
	Если Модифицированность Или Не Объект.Проведен Тогда
		Предупреждение("Для печати документа его нужно провести");
		Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Отчет.ОтчетПоПлануПроизводства.ФормаОбъекта");
	Форма.УстановитьТекущийВариант("ЗаказНаПроизводство");
	КомпоновщикНастроек = Форма.Отчет.КомпоновщикНастроек;
	
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПланПроизводства", Объект.Ссылка);
	СтандартныеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "СпособОбеспечения", ПредопределенноеЗначение("Перечисление.ТипыОбеспеченияПотребности.Производство"));	
	
	Форма.СкомпоноватьРезультат();
	
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.ЗаявленоНаПеремещение = 0 Тогда
			СтрокаИнгредиентов.Выбран = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.ЗаявленоНаПеремещение = 0 Тогда
			СтрокаИнгредиентов.Выбран = Ложь;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатьЗаданиеНаПеремещение(Команда)
	
	Если Не Объект.Проведен Или Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала нужно провести документ";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	ДатьЗаданиеНаПеремещениеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатьЗаданиеНаПеремещениеНаСервере()
	
	ЗаказНаПеремещение = Документы.ЗаказПоставщику.СоздатьДокумент();
	ЗаказНаПеремещение.Дата = ТекущаяДата();
	ЗаказНаПеремещение.ДатаПоступления = ЗаказНаПеремещение.Дата;
	ЗаказНаПеремещение.Статус = Перечисления.СтатусыЗаказовПоставщикам.Создан;
	ЗаказНаПеремещение.ВидОперации = Перечисления.ВидыЗаказов.ПеремещениеМеждуСкладами;
	ЗаказНаПеремещение.Предприятие = Объект.Предприятие;
	ЗаказНаПеремещение.Подразделение = Объект.Подразделение;
	ЗаказНаПеремещение.Контрагент = Объект.Подразделение;
	ЗаказНаПеремещение.Склад = Объект.Склад;
	ЗаказНаПеремещение.СкладОтправитель = ?(ЗначениеЗаполнено(Объект.ДокОснование.СкладСырья), Объект.ДокОснование.СкладСырья, Справочники.Склады.ПолучитьСкладПоЗначениюДопРеквизита("Склад сырья", Объект.Предприятие));
	ЗаказНаПеремещение.ДокОснование = Объект.Ссылка;
	НужноСоздаватьДокумент = Ложь; //защита от дурака, чтобы пустые документы нке создавались
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		Если СтрокаИнгредиентов.Выбран Тогда
			СтрокаЗаказа = ЗаказНаПеремещение.ТабличнаяЧасть.Добавить();
			СтрокаЗаказа.Номенклатура = СтрокаИнгредиентов.Материал;
			СтрокаЗаказа.ЕдиницаИзмерения = СтрокаЗаказа.Номенклатура.ЕдиницаИзмерения;
			СтрокаЗаказа.Количество = СтрокаИнгредиентов.Количество;
			СтрокаЗаказа.КоличествоУпаковок = СтрокаИнгредиентов.Количество;
			СтрокаЗаказа.ДатаПоступления = ЗаказНаПеремещение.Дата;
			НужноСоздаватьДокумент = Истина;
			СтрокаИнгредиентов.Выбран = Ложь;
		КонецЕсли;
	КонецЦикла;	
	
	Если НужноСоздаватьДокумент Тогда
		ЗаказНаПеремещение.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;	
	
	ОбновитьЗаявленноеНаперемещениеКоличество();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаявленноеНаперемещениеКоличество()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТабличнаяЧасть.Номенклатура,
	|	ЗаказПоставщикуТабличнаяЧасть.Количество КАК ЗаявленоНаПеремещение
	|ПОМЕСТИТЬ ВТ_ЗаказПоставщику
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.ТабличнаяЧасть КАК ЗаказПоставщикуТабличнаяЧасть
	|		ПО ЗаказПоставщику.Ссылка = ЗаказПоставщикуТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ЗаказПоставщику.ДокОснование = &ДокОснование
	|	И ЗаказПоставщику.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УЧ_ПеремещениеТоваровТабличнаяЧасть.Номенклатура,
	|	УЧ_ПеремещениеТоваровТабличнаяЧасть.Количество КАК КоличествоПеремещено
	|ПОМЕСТИТЬ ВТ_Перемещения
	|ИЗ
	|	Документ.УЧ_ПеремещениеТоваров КАК УЧ_ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УЧ_ПеремещениеТоваров.ТабличнаяЧасть КАК УЧ_ПеремещениеТоваровТабличнаяЧасть
	|		ПО УЧ_ПеремещениеТоваров.Ссылка = УЧ_ПеремещениеТоваровТабличнаяЧасть.Ссылка
	|ГДЕ
	|	УЧ_ПеремещениеТоваров.Проведен
	|	И УЧ_ПеремещениеТоваров.ДокОснование.ДокОснование = &ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказПоставщику.Номенклатура,
	|	ВТ_ЗаказПоставщику.ЗаявленоНаПеремещение,
	|	ВТ_Перемещения.КоличествоПеремещено
	|ИЗ
	|	ВТ_ЗаказПоставщику КАК ВТ_ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Перемещения КАК ВТ_Перемещения
	|		ПО ВТ_ЗаказПоставщику.Номенклатура = ВТ_Перемещения.Номенклатура";
	Запрос.УстановитьПараметр("ДокОснование", Объект.Ссылка);
	
	ТаблицаЗаказанных = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаИнгредиентов Из ТаблицаИнгредиентов Цикл
		НайденныестрокиЗаказа = ТаблицаЗаказанных.НайтиСтроки(Новый Структура("Номенклатура", СтрокаИнгредиентов.Материал));
		Для Каждого СтрокаЗакза Из НайденныестрокиЗаказа Цикл
			СтрокаИнгредиентов.ЗаявленоНаПеремещение = СтрокаЗакза.ЗаявленоНаПеремещение;
			СтрокаИнгредиентов.Перемещено = СтрокаЗакза.КоличествоПеремещено; 
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаИнгредиентовПередНачаломИзменения(Элемент, Отказ)

	ТекДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекДанные.ЗаявленоНаПеремещение = 0 Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.УИДТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные.УИД;
	КонецЕсли;	
КонецПроцедуры
