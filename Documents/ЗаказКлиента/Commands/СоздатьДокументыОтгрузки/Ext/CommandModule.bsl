
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	РеквыЗаказа = БюджетныйНаСервере.ВернутьРеквизиты(ПараметрКоманды, "Организация, ПродажаВРозницу, БезвозмезднаяПередача");
	ДопПараметры = Новый Структура;
	Если ЗначениеЗаполнено(РеквыЗаказа.Организация) Тогда
		Если РеквыЗаказа.БезвозмезднаяПередача Тогда
			ПараметрыФормы = Новый Структура("Основание", ПараметрКоманды);
			ТекстВопроса = "Будут созданы документы: ""Передача товаров"" и ""Счет на оплату"". Продолжить?";
			ДопПараметры.Вставить("Документ", "ПередачаТоваров");
		ИначеЕсли РеквыЗаказа.ПродажаВРозницу Тогда
			ТекстВопроса = "Будут созданы документы: ""Розничная продажа"" и ""Счет на оплату"". Продолжить?";
			ДопПараметры.Вставить("Документ", "РозничнаяПродажа");
			
		Иначе
			ТекстВопроса = "Будут созданы документы: ""Реализация (акты, накладные, УПД)"" и ""Счет на оплату"". Продолжить?";
			ДопПараметры.Вставить("Документ", "РеализацияТоваровУслуг")
		КонецЕсли;
	Иначе	
		ТекстВопроса = "Будут созданы документы: ""Реализация ТМЦ и услуг (упр)"" и ""Счет на оплату"". Продолжить?";
		ДопПараметры.Вставить("Документ", "УЧ_Реализация")
	КонецЕсли; 
	ДопПараметры.Вставить("ДанныеЗаполнения", ПараметрКоманды);
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить(КодВозвратаДиалога.Да,"Создать документы");
	КнопкиВопроса.Добавить(КодВозвратаДиалога.Отмена);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеОтвета",ЭтотОбъект,ДопПараметры);
	ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса,КнопкиВопроса);
	
		
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьПослеОтвета(Результат, ДопПараметры) Экспорт
	    
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокумент(ДопПараметры);
		Оповестить("СозданыДокументыОтгрузки",ДопПараметры.ДанныеЗаполнения);
	КонецЕсли; 
	
КонецПроцедуры 

Процедура ЗаполнитьДокумент(ДопПараметры)
	Отказ = Ложь;
	РезультатЗаписиОсновногоДокумента = "(проведен)"; 
	РезультатЗаписиСчетНаОплату = "(проведен)";
	РезультатЗаписиСчетФактура = "(проведен)";
	
	Если ДопПараметры.Свойство("Документ") Тогда
		Если ДопПараметры.Документ = "ПередачаТоваров" Тогда 
		НоваяРеализация = Документы.ТребованиеНакладная.СоздатьДокумент();
			Попытка
				НоваяРеализация.Заполнить(ДопПараметры.ДанныеЗаполнения);
				НоваяРеализация.Ответственный = ПараметрыСеанса.ТекущийПользователь;
				//НоваяРеализация.ДополнительныеСвойства.Вставить("НеИзменятьСтатусЗаказа", Истина); 
			Исключение 
				Отказ = Истина;
				СтрокаСообщения = ОписаниеОшибки();
				НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				Пока НомерСимвола > 0 Цикл
					СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				КонецЦикла;
				Сообщить(СтрокаСообщения);
			КонецПопытки;
			Если НЕ Отказ Тогда 
				Попытка
					НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					НоваяРеализация.Записать(РежимЗаписиДокумента.Запись); 
					РезультатЗаписиОсновногоДокумента = "(записан, необходимо провести вручную)";
				КонецПопытки;
				Сообщить("Созданы документы: " + НоваяРеализация.Ссылка + РезультатЗаписиОсновногоДокумента);
			КонецЕсли;
		КонецЕсли;
		Если ДопПараметры.Документ = "РозничнаяПродажа" Тогда  
			НоваяРеализация = Документы.РозничнаяПродажа.СоздатьДокумент();
			Попытка
				НоваяРеализация.Заполнить(ДопПараметры.ДанныеЗаполнения);
				НоваяРеализация.Ответственный = ПараметрыСеанса.ТекущийПользователь;
				//НоваяРеализация.ДополнительныеСвойства.Вставить("НеИзменятьСтатусЗаказа", Истина); 
			Исключение 
				Отказ = Истина;
				СтрокаСообщения = ОписаниеОшибки();
				НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				Пока НомерСимвола > 0 Цикл
					СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				КонецЦикла;
				Сообщить(СтрокаСообщения);
			КонецПопытки;
			Если НЕ Отказ Тогда 
				НоваяРеализация.Записать(РежимЗаписиДокумента.Запись);//всегда непроведенным, т.к. нужно закрывать смену вручную
				РезультатЗаписиОсновногоДокумента = "(записан)";
				Сообщить("Созданы документы: " + НоваяРеализация.Ссылка + РезультатЗаписиОсновногоДокумента);
			КонецЕсли;
		КонецЕсли;
		Если ДопПараметры.Документ = "РеализацияТоваровУслуг" Тогда
			НоваяРеализация = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			Попытка
				НоваяРеализация.Заполнить(ДопПараметры.ДанныеЗаполнения);
				НоваяРеализация.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			    НоваяРеализация.Дата = ?(ЗначениеЗаполнено(ДопПараметры.ДанныеЗаполнения.ДатаДоставки),ДопПараметры.ДанныеЗаполнения.ДатаДоставки,ТекущаяДата());
				//НоваяРеализация.ДополнительныеСвойства.Вставить("НеИзменятьСтатусЗаказа", Истина); 
				ОтветственныеЛицаБП.УстановитьОтветственныхЛиц(НоваяРеализация.ЭтотОбъект);
			Исключение 
				Отказ = Истина;
				СтрокаСообщения = ОписаниеОшибки();
				НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				Пока НомерСимвола > 0 Цикл
					СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				КонецЦикла;;
				Сообщить(СтрокаСообщения);
			КонецПопытки;
			Если НЕ Отказ Тогда 
				Попытка
					НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					НоваяРеализация.Записать(РежимЗаписиДокумента.Запись); 
					РезультатЗаписиОсновногоДокумента = "(записан, необходимо провести вручную)";
				КонецПопытки;
				
				НовыйСчет = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
				Попытка
					НовыйСчет.Заполнить(ДопПараметры.ДанныеЗаполнения);
					НовыйСчет.Ответственный = ПараметрыСеанса.ТекущийПользователь;
					НовыйСчет.Дата = НоваяРеализация.Дата;
					СчетЗаполнен = Истина;
				Исключение
					СчетЗаполнен = Ложь;
					СтрокаСообщения = ОписаниеОшибки();
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
					Пока НомерСимвола > 0 Цикл
						СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
						НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
					КонецЦикла;
					Сообщить(СтрокаСообщения);
				КонецПопытки;
				Если СчетЗаполнен Тогда 
					Попытка
						НовыйСчет.Записать(РежимЗаписиДокумента.Проведение);				
					Исключение
						НовыйСчет.Записать();
						РезультатЗаписиСчетНаОплату = "(записан, необходимо провести вручную)";
					КонецПопытки;
					НоваяРеализация.СчетНаОплатуПокупателю = НовыйСчет.Ссылка;
					НоваяРеализация.Записать(); 
					ТекстСчет = ", " + НовыйСчет.Ссылка + РезультатЗаписиСчетНаОплату; 
				Иначе
					ТекстСчет = "";
				КонецЕсли;
				НовыйСчФ = Документы.СчетФактураВыданный.СоздатьДокумент();
				Попытка
					НовыйСчФ.Заполнить(НоваяРеализация.Ссылка);  
					НовыйСчФ.Ответственный = ПараметрыСеанса.ТекущийПользователь;
					СФЗаполнен = Истина;
				Исключение
					СФЗаполнен = Ложь; 
					СтрокаСообщения = ОписаниеОшибки();
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
					Пока НомерСимвола > 0 Цикл
						СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
						НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
					КонецЦикла;
					Сообщить(СтрокаСообщения);
				КонецПопытки;
				Если СФЗаполнен Тогда
					Попытка
						НовыйСчФ.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						НовыйСчФ.Записать(РежимЗаписиДокумента.Запись);  
						РезультатЗаписиСчетФактура = "(записан, необходимо провести вручную)";
					КонецПопытки; 
					ТекстСФ = ", " + НовыйСчФ.Ссылка + РезультатЗаписиСчетФактура;
				Иначе
					ТекстСФ = "";
				КонецЕсли;
				Сообщить("Созданы документы: " + НоваяРеализация.Ссылка + РезультатЗаписиОсновногоДокумента + ТекстСчет + ТекстСФ);
			КонецЕсли;
		КонецЕсли;
		
		Если ДопПараметры.Документ = "УЧ_Реализация" Тогда
			НоваяРеализация = Документы.УЧ_Реализация.СоздатьДокумент();
			Попытка
				НоваяРеализация.Заполнить(ДопПараметры.ДанныеЗаполнения);
				НоваяРеализация.Автор = ПараметрыСеанса.ТекущийПользователь;
				НоваяРеализация.АдресДоставки = ДопПараметры.ДанныеЗаполнения.АдресДоставки;
				//НоваяРеализация.ДополнительныеСвойства.Вставить("НеИзменятьСтатусЗаказа", Истина); 
			Исключение 
				Отказ = Истина;
				СтрокаСообщения = ОписаниеОшибки();
				НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				Пока НомерСимвола > 0 Цикл
					СтрокаСообщения = Прав(СтрокаСообщения, СтрДлина(СтрокаСообщения) - (НомерСимвола+1)); 
					НомерСимвола = СтрНайти(СтрокаСообщения,"}"); 
				КонецЦикла;;
				Сообщить(СтрокаСообщения);
			КонецПопытки;
			Если НЕ Отказ Тогда 
				Попытка
					НоваяРеализация.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					НоваяРеализация.Записать(РежимЗаписиДокумента.Запись); 
					РезультатЗаписиОсновногоДокумента = "(записан, необходимо провести вручную)";
				КонецПопытки;
				Сообщить("Созданы документы: " + НоваяРеализация.Ссылка + РезультатЗаписиОсновногоДокумента);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

