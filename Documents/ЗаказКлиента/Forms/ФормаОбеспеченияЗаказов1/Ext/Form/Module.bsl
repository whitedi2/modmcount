
&НаСервере
Процедура ОбновитьНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка КАК ЗаказКлиента,
	               |	ЗаказКлиентаТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	               |	ЗаказКлиентаТабличнаяЧасть.Номенклатура КАК Номенклатура,
	               |	ЗаказКлиентаТабличнаяЧасть.Количество КАК Количество,
	               |	ЗаказКлиентаТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ЗаказКлиентаТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	               |	ЗаказКлиентаТабличнаяЧасть.КоличествоВУпаковке КАК КоличествоВУпаковке,
	               |	ЗаказКлиентаТабличнаяЧасть.Кратность КАК Кратность,
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка.ДатаПоступления КАК ДатаОтгрузки,
	               |	ЗаказКлиентаТабличнаяЧасть.Ссылка.Дата КАК ДатаЗаказа,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Контрагент КАК Контрагент,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Договор КАК Договор,
	               |	сабДанныеПоставокСрезПоследних.Период КАК ДатаПоставки,
	               |	сабДанныеПоставокСрезПоследних.Цена КАК ЦенаПоставки,
	               |	сабДанныеПоставокСрезПоследних.Количество КАК КоличествоПоставки,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Предприятие КАК Предприятие,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Склад КАК Склад,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Организация КАК Организация
	               |ИЗ
	               |	Документ.ЗаказКлиента.ТабличнаяЧасть КАК ЗаказКлиентаТабличнаяЧасть
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДанныеПоставок.СрезПоследних КАК сабДанныеПоставокСрезПоследних
	               |		ПО ЗаказКлиентаТабличнаяЧасть.Ссылка.Предприятие = сабДанныеПоставокСрезПоследних.Предприятие
	               |			И ЗаказКлиентаТабличнаяЧасть.Ссылка.Склад = сабДанныеПоставокСрезПоследних.Склад
	               |			И ЗаказКлиентаТабличнаяЧасть.Номенклатура = сабДанныеПоставокСрезПоследних.Номенклатура
	               |ГДЕ
	               |	НЕ ЗаказКлиентаТабличнаяЧасть.Ссылка.Статус В (&СтатусЗакрыт)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаказНаПроизводствоМатериалы.Ссылка,
	               |	ЗаказНаПроизводствоМатериалы.НомерСтроки,
	               |	ЗаказНаПроизводствоМатериалы.Материал,
	               |	ЗаказНаПроизводствоМатериалы.Количество,
	               |	ЗаказНаПроизводствоМатериалы.Материал.ЕдиницаИзмерения,
	               |	ЗаказНаПроизводствоМатериалы.Количество,
	               |	NULL,
	               |	1,
	               |	ЗаказНаПроизводствоМатериалы.Ссылка.ДатаПроизводства,
	               |	ЗаказНаПроизводствоМатериалы.Ссылка.Дата,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Контрагент,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Договор,
	               |	сабДанныеПоставокСрезПоследних.Период,
	               |	сабДанныеПоставокСрезПоследних.Цена,
	               |	сабДанныеПоставокСрезПоследних.Количество,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Предприятие,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Склад,
	               |	сабДанныеПоставокСрезПоследних.Регистратор.Организация
	               |ИЗ
	               |	Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводствоМатериалы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабДанныеПоставок.СрезПоследних КАК сабДанныеПоставокСрезПоследних
	               |		ПО ЗаказНаПроизводствоМатериалы.Ссылка.Предприятие = сабДанныеПоставокСрезПоследних.Предприятие
	               |			И ЗаказНаПроизводствоМатериалы.Ссылка.Склад = сабДанныеПоставокСрезПоследних.Склад
	               |			И ЗаказНаПроизводствоМатериалы.Материал = сабДанныеПоставокСрезПоследних.Номенклатура
	               |ГДЕ
	               |	НЕ ЗаказНаПроизводствоМатериалы.Ссылка.Статус В (&СтатусЗакрыт)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаОтгрузки,
	               |	ДатаЗаказа
	               |ИТОГИ ПО
	               |	ЗаказКлиента
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	ЗакрытыеСтатусы = Новый Массив;
	ЗакрытыеСтатусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отгружен);
	ЗакрытыеСтатусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отменен);
	ЗакрытыеСтатусы.Добавить(Перечисления.СтатусыЗаказовНаПроизводство.Отменен);
	ЗакрытыеСтатусы.Добавить(Перечисления.СтатусыЗаказовНаПроизводство.Произведен);
	
	Запрос.УстановитьПараметр("ДатаОтгрузки", НачалоДня(ДатаОтгрузки));
	Запрос.УстановитьПараметр("СтатусЗакрыт", ЗакрытыеСтатусы);
	
	МассивСтрокКУдалению = Новый Массив;
	
	Результат = Запрос.Выполнить();
	
	ВыгрузкаЗаказы = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЗаказКлиента"); 
	Пока ВыгрузкаЗаказы.Следующий() Цикл  		
		
		СтрокаЗаказ = ДеревоЗаказов.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗаказ, ВыгрузкаЗаказы);
		СтрокаЗаказ.Позиция = ВыгрузкаЗаказы.ЗаказКлиента;
		СтрокаЗаказ.Уровень = 1;
		
		ВыгрузкаНоменклатура = ВыгрузкаЗаказы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"");
		Пока ВыгрузкаНоменклатура.Следующий() Цикл
			СтрокаНоменклатура = СтрокаЗаказ.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ВыгрузкаНоменклатура);
			СтрокаНоменклатура.Позиция = ВыгрузкаНоменклатура.Номенклатура;
			СтрокаНоменклатура.Уровень = 2;
			СтрокаНоменклатура.ДатаОтгрузки = Неопределено;
		КонецЦикла;
		
		ЗаполнитьОстаткиИРезервы(СтрокаЗаказ.ЗаказКлиента, Ложь, Неопределено, СтрокаЗаказ.ПолучитьЭлементы());
		
		Если ТолькоНеобеспеченные Тогда
			МассивСтрокКУдалению2 = Новый Массив;
			ТекТЧ = СтрокаЗаказ.ПолучитьЭлементы();
			Для каждого ТекСтрока Из ТекТЧ Цикл
				Если Не ТекСтрока.КоличествоОстаток < 0 Тогда
					МассивСтрокКУдалению2.Добавить(ТекСтрока);
				КонецЕсли;
			КонецЦикла;
			
			Для каждого ТекСтрокаУд Из МассивСтрокКУдалению2 Цикл
				ТекТЧ.Удалить(ТекТЧ.Индекс(ТекСтрокаУд));	
			КонецЦикла;
			
			Если Не ТекТЧ.Количество() Тогда
				МассивСтрокКУдалению.Добавить(СтрокаЗаказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ТекСтрокаУд Из МассивСтрокКУдалению Цикл
		ДеревоЗаказов.ПолучитьЭлементы().Удалить(ДеревоЗаказов.ПолучитьЭлементы().Индекс(ТекСтрокаУд));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)

	ДеревоЗаказов.ПолучитьЭлементы().Очистить();
	
	ОбновитьНаСервере();

	КоллекцияЭлементовДерева = ДеревоЗаказов.ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл 
		ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
		Элементы.ДеревоЗаказов.Развернуть(ИдентификаторСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаОтгрузки = ТекущаяДата();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиИРезервы(Заказ, РасчетПоСтроке = Ложь, СтруктураДанных = Неопределено, ТЧ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Объект = Заказ;
	
	ЗаказЗакрыт = Объект.Статус = Перечисления.СтатусыЗаказовКлиентов.Отгружен ИЛИ Объект.Статус = Перечисления.СтатусыЗаказовКлиентов.Отменен;
	
	ОбъектМодуль = Объект.ПолучитьОбъект();
	
	//остатки
	СтруктураИмен = УЧ_Сервер.СформироватьСтруктуруИмен(ОбъектМодуль);
	
	СтруктураСоответствий = УЧ_Сервер.ПоучитьСоответствияСчетовНоменклатуры(ОбъектМодуль, СтруктураИмен);
	СоответствиеСчета = СтруктураСоответствий.Соответствия;
	СоответствиеУчетаПоПодразделениям = СтруктураСоответствий.СоответствияУчетаПодразделений;
	
	ТаблицаОстатков = УЧ_Сервер.ПолучитьТаблицуОстатков(ОбъектМодуль, СтруктураИмен, СтруктураСоответствий, НачалоДня(Объект.Дата));
	РезультатОстатки = ТаблицаОстатков.РезультатОстатки;
	РезультатКонтроль = ТаблицаОстатков.РезультатКонтроль;
	
	Если РасчетПоСтроке Тогда
			СтруктураДанных.КоличествоНаОстатках = 0; 
			НайденныеСтроки = РезультатОстатки.НайтиСтроки(Новый Структура("Номенклатура, Склад", СтруктураДанных.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, СтруктураДанных.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				СтруктураДанных.КоличествоНаОстатках = ТекСтрокаНайденная.Количество;		
			КонецЦикла;	
	Иначе
		Для каждого ТекСтрока Из ТЧ Цикл
			ТекСтрока.КоличествоНаОстатках = 0; 
			НайденныеСтроки = РезультатОстатки.НайтиСтроки(Новый Структура("Номенклатура, Склад", ТекСтрока.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, ТекСтрока.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				ТекСтрока.КоличествоНаОстатках = ТекСтрокаНайденная.Количество;		
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;
	
	//резервы
	ВремТЧЗаказы.Очистить();
	ВремТЧЗаказыПоставщикам.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныйОбороты.Субконто1 КАК Номенклатура,
	               |	УчетныйОбороты.Субконто2 КАК Склад,
	               |	УчетныйОбороты.Предприятия КАК Предприятие,
	               |	УчетныйОбороты.КоличествоОборот КАК Оборот,
	               |	УчетныйОбороты.КоличествоОборотДт КАК КоличествоПоставка,
	               |	УчетныйОбороты.КоличествоОборотКт КАК Количество,
	               |	ВЫБОР
	               |		КОГДА УчетныйОбороты.Период < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |			ТОГДА НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(УчетныйОбороты.Период, ДЕНЬ)
	               |	КОНЕЦ КАК Дата,
	               |	УчетныйОбороты.Регистратор КАК Заказ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаПеремещение)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаПеремещение).ДатаПоступления
	               |		ИНАЧЕ УчетныйОбороты.Период
	               |	КОНЕЦ КАК ДатаЗаказа,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |	КОНЕЦ КАК Контрагент
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			,
	               |			,
	               |			Регистратор,
	               |			Счет.Код = ""0041"",
	               |			,
	               |			Предприятия В (&Предприятие)
	               |				И Субконто1 В (&Номенклатура)
	               |				И Субконто2 В (&Склад),
	               |			,
	               |			) КАК УчетныйОбороты
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсеНезакрытыеЗаказы
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ УчетныйОбороты.Период >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		КОНЕЦ
	               |	И НЕ УчетныйОбороты.Регистратор = &ЭтаСсылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УчетныйОбороты.Субконто1,
	               |	УчетныйОбороты.Субконто2,
	               |	УчетныйОбороты.Предприятия,
	               |	УчетныйОбороты.КоличествоОборот,
	               |	УчетныйОбороты.КоличествоОборотДт,
	               |	УчетныйОбороты.КоличествоОборотКт,
	               |	ВЫБОР
	               |		КОГДА УчетныйОбороты.Период < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |			ТОГДА НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(УчетныйОбороты.Период, ДЕНЬ)
	               |	КОНЕЦ,
	               |	УчетныйОбороты.Регистратор,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).ДатаПоступления
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Дата
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаПеремещение)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаПеремещение).ДатаПоступления
	               |		ИНАЧЕ УчетныйОбороты.Период
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказНаВозвратОтКлиента)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказНаВозвратОтКлиента).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.ЗаказПоставщику)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.ЗаказПоставщику).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.Уч_Реализация)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_ПоступлениеТоваров)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_ПоступлениеТоваров).Контрагент
	               |		КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Возврат)
	               |			ТОГДА ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Возврат).Контрагент
	               |	КОНЕЦ
	               |ИЗ
	               |	РегистрБухгалтерии.Учетный.Обороты(
	               |			&Период,
	               |			,
	               |			Регистратор,
	               |			Счет.Код = ""41""
	               |				ИЛИ Счет.Родитель.Код = ""10""
	               |				ИЛИ Счет.Код = ""43"",
	               |			,
	               |			Предприятия В (&Предприятие)
	               |				И Субконто1 В (&Номенклатура)
	               |				И Субконто2 В (&Склад),
	               |			,
	               |			) КАК УчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
	               |		ПО УчетныйОбороты.Регистратор = сабОбработкаДокументов.ДокументУУ
	               |			И (ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.РеализацияТоваровУслуг)
	               |					ТОГДА ВЫРАЗИТЬ(сабОбработкаДокументов.ДокументБУ КАК Документ.РеализацияТоваровУслуг).Заказ
	               |				КОГДА ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.РозничнаяПродажа)
	               |					ТОГДА ВЫРАЗИТЬ(сабОбработкаДокументов.ДокументБУ КАК Документ.РозничнаяПродажа).Заказ
	               |				КОГДА ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.ПередачаТоваров)
	               |					ТОГДА ВЫРАЗИТЬ(сабОбработкаДокументов.ДокументБУ КАК Документ.ПередачаТоваров).Заказ
	               |				КОГДА ТИПЗНАЧЕНИЯ(сабОбработкаДокументов.ДокументБУ) = ТИП(Документ.ОтчетПроизводстваЗаСмену)
	               |					ТОГДА ВЫРАЗИТЬ(сабОбработкаДокументов.ДокументБУ КАК Документ.ОтчетПроизводстваЗаСмену).Заказ
	               |				ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |			КОНЕЦ = &ЭтаСсылка)
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВсеНезакрытыеЗаказы
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ УчетныйОбороты.Период >= НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	               |		КОНЕЦ
	               |	И НЕ УчетныйОбороты.Регистратор = &ЭтаСсылка
	               |	И ВЫБОР
	               |			КОГДА ТИПЗНАЧЕНИЯ(УчетныйОбороты.Регистратор) = ТИП(Документ.УЧ_Реализация)
	               |				ТОГДА НЕ ВЫРАЗИТЬ(УчетныйОбороты.Регистратор КАК Документ.УЧ_Реализация).ДокОснование = &ЭтаСсылка
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И сабОбработкаДокументов.ДокументБУ ЕСТЬ NULL";
	
	НоменклатураМассив = Новый Массив;
	Для каждого ТекСтрока Из ТЧ Цикл
		НоменклатураМассив.Добавить(ТекСтрока.Номенклатура);	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураМассив);
	Запрос.УстановитьПараметр("ВсеНезакрытыеЗаказы", Истина); //все заказы с проводками
	Запрос.УстановитьПараметр("Период", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	//Статусы = Новый Массив;
	//Статусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отгружен);
	//Статусы.Добавить(Перечисления.СтатусыЗаказовКлиентов.Отменен);
	//Запрос.УстановитьПараметр("Статус", Статусы);
	Запрос.УстановитьПараметр("ЭтаСсылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Если РасчетПоСтроке Тогда
		
		СтруктураДанных.КоличествоВРезервах = 0;
		СтруктураДанных.КоличествоКПоставке = 0;
		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура, Склад", СтруктураДанных.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, СтруктураДанных.Склад)));
		Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
			Если НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) И НЕ ТипЗнч(ТекСтрокаНайденная.Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				СтруктураДанных.КоличествоНаОстатках = СтруктураДанных.КоличествоНаОстатках + ТекСтрокаНайденная.КоличествоПоставка - ТекСтрокаНайденная.Количество;	
			//ИначеЕсли НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.ДатаПоступления) ИЛИ НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) Тогда	
			Иначе
				СтруктураДанных.КоличествоВРезервах = СтруктураДанных.КоличествоВРезервах + ТекСтрокаНайденная.Количество;
				СтруктураДанных.КоличествоКПоставке = СтруктураДанных.КоличествоКПоставке + ТекСтрокаНайденная.КоличествоПоставка;
			КонецЕсли;
		КонецЦикла;	
		
		СтруктураДанных.КоличествоОстаток = СтруктураДанных.КоличествоНаОстатках + СтруктураДанных.КоличествоКПоставке - СтруктураДанных.КоличествоВРезервах - СтруктураДанных.Количество;
		
	Иначе
		
		Для каждого ТекСтрока Из ТЧ Цикл
			ТекСтрока.КоличествоВРезервах = 0; 
			ТекСтрока.КоличествоКПоставке = 0;
			НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Номенклатура, Склад", ТекСтрока.Номенклатура, ?(ЗначениеЗаполнено(Объект.Склад), Объект.Склад, ТекСтрока.Склад)));
			Для каждого ТекСтрокаНайденная Из НайденныеСтроки Цикл
				Если НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.Дата) И НЕ ТипЗнч(ТекСтрокаНайденная.Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
					ТекСтрока.КоличествоНаОстатках = ТекСтрока.КоличествоНаОстатках + ТекСтрокаНайденная.КоличествоПоставка - ТекСтрокаНайденная.Количество;	
				//ИначеЕсли НачалоДня(ТекСтрокаНайденная.Дата) <= НачалоДня(Объект.ДатаПоступления) ИЛИ НачалоДня(ТекСтрокаНайденная.ДатаЗаказа) <= НачалоДня(Объект.Дата) Тогда	
				Иначе
					ТекСтрока.КоличествоВРезервах = ТекСтрока.КоличествоВРезервах + ТекСтрокаНайденная.Количество;
					ТекСтрока.КоличествоКПоставке = ТекСтрока.КоличествоКПоставке + ТекСтрокаНайденная.КоличествоПоставка;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		
		Для каждого ТекСтрока Из ТЧ Цикл
			ТекСтрока.КоличествоОстаток = ТекСтрока.КоличествоНаОстатках + ТекСтрока.КоличествоКПоставке - ТекСтрока.КоличествоВРезервах - ТекСтрока.Количество; 
		КонецЦикла;
		
	КонецЕсли;
	
	ВремТЧЗаказы.Очистить();
	ВремТЧЗаказыПоставщикам.Очистить();
	Для каждого ТекСтрока Из Выборка Цикл
		Если НачалоДня(ТекСтрока.Дата) <= НачалоДня(Объект.Дата) И НЕ ТипЗнч(ТекСтрока.Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда		
			Продолжить;	
		КонецЕсли;
		Если ТекСтрока.Количество Тогда
			НовВремСтрока = ВремТЧЗаказы.Добавить();
			ЗаполнитьЗначенияСвойств(НовВремСтрока, ТекСтрока);
		КонецЕсли;	
		Если ТекСтрока.КоличествоПоставка Тогда
			НовВремСтрока = ВремТЧЗаказыПоставщикам.Добавить();
			ЗаполнитьЗначенияСвойств(НовВремСтрока, ТекСтрока);
			НовВремСтрока.Количество = ТекСтрока.КоличествоПоставка;
		КонецЕсли;
	КонецЦикла;

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтгрузкиПриИзменении(Элемент)
	Обновить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Обновить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНеобеспеченныеПриИзменении(Элемент)
	Обновить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщику(Команда)
	
	МассивСтрокТЧ = Новый Массив;
	Для каждого ТекСтрока Из Элементы.ДеревоЗаказов.ВыделенныеСтроки Цикл
		НовСтру = Новый Структура("Номенклатура, Количество, ЕдиницаИзмерения, ЦенаПоставки");
		ТекСтрокаДанные = Элементы.ДеревоЗаказов.ДанныеСтроки(ТекСтрока);
		ЗаполнитьЗначенияСвойств(НовСтру, ТекСтрокаДанные);
		Если ТекСтрокаДанные.КоличествоОстаток < 0 Тогда
			НовСтру.Количество = - ТекСтрокаДанные.КоличествоОстаток;				
		КонецЕсли;
		
		МассивСтрокТЧ.Добавить(НовСтру);	
	КонецЦикла;
	
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", Новый Структура("Основание", Новый Структура("ТЧ", МассивСтрокТЧ)));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщику2(Команда)
	
	ТекДанные = Элементы.ДеревоЗаказов.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.Контрагент) Тогда
		Сообщить("Последний поставщик по выделенной строке не найден.");
		Возврат;
	КонецЕсли;
	
	МассивСтрокТЧ = Новый Массив;
	Для каждого ТекСтрока0 Из ДеревоЗаказов.ПолучитьЭлементы() Цикл
		Для каждого ТекСтрока Из ТекСтрока0.ПолучитьЭлементы() Цикл
			Если ТекДанные.Контрагент = ТекСтрока.Контрагент Тогда
				ТекНоменклатураСтрока = Неопределено;
				Для каждого ТекЭл Из МассивСтрокТЧ Цикл
					Если ТекЭл.Номенклатура = ТекСтрока.Номенклатура Тогда
						ТекНоменклатураСтрока = ТекЭл;					
					КонецЕсли;	
				КонецЦикла;
				
				НовСтру = Новый Структура("Номенклатура, Количество, ЕдиницаИзмерения, ЦенаПоставки");
				Если ТекНоменклатураСтрока = Неопределено Тогда
					ЗаполнитьЗначенияСвойств(НовСтру, ТекСтрока);
					Если ТекСтрока.КоличествоОстаток < 0 Тогда
						НовСтру.Количество = - ТекСтрока.КоличествоОстаток;				
					КонецЕсли;
					МассивСтрокТЧ.Добавить(НовСтру);	
				Иначе
					Если ТекСтрока.КоличествоОстаток < 0 Тогда
						ТекНоменклатураСтрока.Количество = ТекНоменклатураСтрока.Количество - ТекСтрока.КоличествоОстаток;				
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", Новый Структура("Основание", Новый Структура("ТЧ, Контрагент, Договор, Предприятие, Склад, Организация", МассивСтрокТЧ, ТекДанные.Контрагент, ТекДанные.Договор, ТекДанные.Предприятие, ТекДанные.Склад, ТекДанные.Организация)));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ФормированиеМаршрута" Тогда
		Обновить(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПоставщику1(Команда)	
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", Новый Структура("Основание", Элементы.ДеревоЗаказов.ТекущиеДанные.ЗаказКлиента));
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПроизводство(Команда)
	ОткрытьФорму("Документ.ЗаказНаПроизводство.ФормаОбъекта", Новый Структура("Основание", Элементы.ДеревоЗаказов.ТекущиеДанные.ЗаказКлиента));
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПроизводство2(Команда)
	
	МассивСтрокТЧ = Новый Массив;
	Для каждого ТекСтрока Из Элементы.ДеревоЗаказов.ВыделенныеСтроки Цикл
		НовСтру = Новый Структура("Номенклатура, Количество, ЕдиницаИзмерения, ЦенаПоставки");
		ТекСтрокаДанные = Элементы.ДеревоЗаказов.ДанныеСтроки(ТекСтрока);
		ЗаполнитьЗначенияСвойств(НовСтру, ТекСтрокаДанные);
		Если ТекСтрокаДанные.КоличествоОстаток < 0 Тогда
			НовСтру.Количество = - ТекСтрокаДанные.КоличествоОстаток;				
		КонецЕсли;
		
		МассивСтрокТЧ.Добавить(НовСтру);	
	КонецЦикла;
	
	ОткрытьФорму("Документ.ЗаказНаПроизводство.ФормаОбъекта", Новый Структура("Основание", Новый Структура("ТЧ", МассивСтрокТЧ)));
КонецПроцедуры
