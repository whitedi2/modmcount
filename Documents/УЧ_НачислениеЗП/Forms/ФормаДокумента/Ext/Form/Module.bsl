
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДокументМассиваДляСогласования = НайтиДокументСогласованияМассиваДокументов();
	
	Если ЗначениеЗаполнено(ДокументМассиваДляСогласования) Тогда
		ТекБП = БПСервер.НайтиТекущийБПСервер(ДокументМассиваДляСогласования);
		Если НЕ ТекБП = Неопределено Тогда
			ТекБПСтруРекв = БюджетныйНаСервере.ВернутьРеквизиты(ТекБП, "ОснованиеЗаблокирован, Стартован, ОтправлятьВсем");
		КонецЕсли;
	Иначе
		ТекБП = Неопределено;
		ТекБПСтруРекв = Новый Структура;
		ВсемСразу = Неопределено;
	КонецЕсли;
	
	Если НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") И НЕ ТекБП = Неопределено Тогда
		ТекДоступность = ТекБПСтруРекв.ОснованиеЗаблокирован;
		Если ТекДоступность = Неопределено Тогда
			ТекДоступность = ТекБПСтруРекв.Стартован;
		КонецЕсли;
		БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, ТекДоступность);
	КонецЕсли;	
	СчетНачисленияПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcell(Команда)
	
	Если Объект.ТабличнаяЧасть.Количество()>0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Перед загрузкой данных табличная часть будет очищена. Продолжить?",Режим);			
		Если Ответ=КодВозвратаДиалога.Да Тогда
			Объект.ТабличнаяЧасть.Очистить();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	СтруктураПараметров = Новый Структура("ЮрЛицо, Предприятие", Объект.ЮрЛицо, Объект.Предприятие);
	ОткрытьФорму("Документ.УЧ_НачислениеЗП.Форма.Форма",СтруктураПараметров,Элементы.ТабличнаяЧасть);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	Отказ = НЕ БюджетныйНаСервере.ПроверкаДоступностиЗП(Объект.Предприятие);
	Если Отказ Тогда
		Сообщить("Нет прав на открытие зарплатного документа.");	
	КонецЕсли;
	Если ПолучитьСубконто70(3) = Неопределено Тогда //нет 3-го субконто на 70 сч
		Элементы.НачислениеВРазрезеПредприятий.Доступность = Ложь;	
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;	
	
	Элементы.Служба.Видимость = ПланыСчетов.Учетный.Счет70().УчетПоПодразделениям; //суперБоб для одного счета 70
	
	//++ автозаполнение субконто69 и субконто68
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//Объект.Субконто_НДФЛ =  Справочники.НалогиИСборы.НайтиПоНаименованию("НДФЛ", Истина);
		//Объект.Субконто_ПФР = Справочники.НалогиИСборы.НайтиПоНаименованию("ПФР", Истина);
		//Объект.Субконто_ФСС = Справочники.НалогиИСборы.НайтиПоНаименованию("ФСС", Истина);
		//Объект.Субконто_ФССНесч = Справочники.НалогиИСборы.НайтиПоНаименованию("ФСС (несч сл)", Истина);
		//Объект.Субконто_ФФОМС = Справочники.НалогиИСборы.НайтиПоНаименованию("ФФОМС", Истина);
	КонецЕсли;
	//--
	
КонецПроцедуры


&НаКлиенте
Процедура СчетНачисленияПриИзменении(Элемент)
	СчетПриИзмененииНаСервере();
	//Элементы.ОборотноеСубконто.Видимость = ЗначениеЗаполнено(Объект.СчетНачисления);
	Если Не ЗначениеЗаполнено(Объект.КорПодразделение) Тогда
		Объект.КорПодразделение = Объект.ВидДеятельности;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СчетПриИзмененииНаСервере()
	
	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.СчетНачисления, Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.Субконто1.ПодсказкаВвода = Наименование1;
	Элементы.Субконто2.ПодсказкаВвода = Наименование2;
	Элементы.Субконто3.ПодсказкаВвода = Наименование3;
	Элементы.КорПодразделение.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	
	Элементы.Субконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.Субконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	Элементы.Субконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	Элементы.КорПодразделение.Видимость = УчетПоПодразделениям;
КонецПроцедуры

Функция ПолучитьСубконто(НомерСубконто)
	Если НомерСубконто > Объект.СчетНачисления.ВидыСубконто.Количество() Тогда
		Возврат "";
	Иначе
		Возврат Объект.СчетНачисления.ВидыСубконто[НомерСубконто - 1].ВидСубконто.Наименование;			
	КонецЕсли;
КонецФункции // ()

Функция ПолучитьСубконто70(НомерСубконто)
	Если НомерСубконто > ПланыСчетов.Учетный.Счет70().ВидыСубконто.Количество() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции // ()


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		
		Если ЗначениеЗаполнено(Объект.ЮрЛицо) Тогда
			ТекСтрока.ЮрЛицо = Объект.ЮрЛицо; 
		КонецЕсли;
		
		Если НЕ Объект.НачислениеВРазрезеПредприятий Тогда
			ТекСтрока.Предприятие = Объект.Предприятие;	
			ТекСтрока.Подразделение = Объект.ВидДеятельности;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Предприятие) Тогда
			
			//Если Не БПСервер.ПолучитьКонстантуНаСервере("сабИспользоватьНесколькоПредприятий") Тогда
			//	ТекСтрока.Предприятие = БюджетныйНаСервере.ПолучитьПредприятие();
			//КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СчетНачисления) Тогда
			ТекСтрока.КорСчет = Объект.СчетНачисления;
			ТекСтрока.КорПодразделение = Объект.КорПодразделение;
			ТекСтрока.КорСубконто1 = Объект.Субконто1;
			ТекСтрока.КорСубконто2 = Объект.Субконто2;
			ТекСтрока.КорСубконто3 = Объект.Субконто3;
		КонецЕсли;	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЮрЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекФорма = ПолучитьФорму("Справочник.ЮрЛицаДляСотрудников.ФормаВыбора", Новый Структура("ТекущаяСтрока", Элементы.ТабличнаяЧасть.ТекущиеДанные.ЮрЛицо), Элемент);
	ПользовательскийОтбор = ТекФорма.Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ТекФорма.Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПользовательскийОтбор.Элементы.Очистить();
	
	Если Объект.НачислениеВРазрезеПредприятий Тогда
		Предприятие = Элементы.ТабличнаяЧасть.ТекущиеДанные.Предприятие;
	Иначе
		Предприятие = Объект.Предприятие;
	КонецЕсли; 
	
	ЭлементОтбора = ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка.ЮрЛицоОсновное.Предприятие");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
	ЭлементОтбора.ПравоеЗначение = Предприятие;
	ТекФорма.Открыть();
	//НовыйОтбор = ТекФорма.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	//НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//НовыйОтбор.ПравоеЗначение = СписокЮрлицПредприятия;
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

Функция НайтиДокументСогласованияМассиваДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Д_СогласованиеМассиваДокументовДокументы.Ссылка
	|ИЗ
	|	Документ.Д_СогласованиеМассиваДокументов.ДокументыДляСогласования КАК Д_СогласованиеМассиваДокументовДокументы
	|ГДЕ
	|	Д_СогласованиеМассиваДокументовДокументы.Документ = &Документ
	|	И НЕ Д_СогласованиеМассиваДокументовДокументы.Ссылка.ПометкаУдаления";
	Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
	
	Выборка = запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;		
	КонецЦикла;
	
	Возврат Документы.Д_СогласованиеМассиваДокументов.ПустаяСсылка();
	
КонецФункции	

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//Если Не БПСервер.ПолучитьКонстантуНаСервере("сабИспользоватьНесколькоПредприятий") Тогда
	//	Элемент.ТекущиеДанные.Предприятие = БюджетныйНаСервере.ПолучитьПредприятие();
	//КонецЕсли;
	
	Если НоваяСтрока Тогда
		//Элемент.ТекущиеДанные.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Оклад");
	КонецЕсли;
	
	ТабличнаяЧастьВидНачисленияПриИзменении(Элемент);

	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКорСчетПриИзменении(Элемент)
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
	"КорСубконто1", "КорСубконто2", "КорСубконто3", Объект.Предприятие, "КорПодразделение", Элементы, "ТабличнаяЧастьКорСубконто1", "ТабличнаяЧастьКорСубконто2", "ТабличнаяЧастьКорСубконто3", "ТабличнаяЧастьКорПодразделение");
	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.ТабличнаяЧасть.ТекущиеДанные, ПоляОбъекта);
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	ЗаполнитьДобавленныеКолонкиТаблиц();
	СчетНачисленияПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.КорСчет КАК Счет
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&Табл КАК Табл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	               |ИЗ
	               |	Справочник.Предприятия КАК Предприятия
	               |ГДЕ
	               |	Предприятия.Ссылка В(&Предприятие)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ) КАК Количественный,
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет) КАК Счет,
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ) КАК Валютный,
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	               |		ПО Врем.Счет = Учетный.Ссылка,
	               |	УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет),
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям";
	
	ТЧВрем = Объект.ТабличнаяЧасть.Выгрузить();
	Запрос.УстановитьПараметр("Табл", ТЧВрем);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Соотв = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Табл.ВидНачисления КАК ВидНачисления
	|ПОМЕСТИТЬ ТЧ
	|ИЗ
	|	&Табл КАК Табл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНачисленийОплатыТруда.Ссылка КАК ВидНачисления,
	|	ВидыНачисленийОплатыТруда.РасчетНалоговИВзносов КАК РасчетНалоговИВзносов
	|ИЗ
	|	ТЧ КАК ТЧ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНачисленийОплатыТруда КАК ВидыНачисленийОплатыТруда
	|		ПО ТЧ.ВидНачисления = ВидыНачисленийОплатыТруда.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыНачисленийОплатыТруда.Ссылка,
	|	ВидыНачисленийОплатыТруда.РасчетНалоговИВзносов";
	
	Запрос.УстановитьПараметр("Табл", ТЧВрем);
	
	Результат = Запрос.Выполнить();
	ВыборкаВидовНачислений = Результат.Выгрузить();
	СоотвНач = Новый Соответствие;
	Для каждого ТекСтрока Из ВыборкаВидовНачислений Цикл
		СоотвНач.Вставить(ТекСтрока.ВидНачисления, ТекСтрока.РасчетНалоговИВзносов);
	КонецЦикла; 
	
	
	Для Каждого СтрокаТаблицы Из Объект.ТабличнаяЧасть Цикл
		СтруСчета = Соотв.Получить(СтрокаТаблицы.Корсчет);
		КоличествоСубконто   = СтруСчета.КоличествоСубконто;
		Для Индекс = 1 По 3 Цикл
			СтрокаТаблицы["КорСубконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
		КонецЦикла;
		//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
		СтрокаТаблицы["КорПодразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
		//Валютный = СтруСчета.Валютный;
		//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
		//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
		СтрокаТаблицы.УдержаниеДоступность = СоотвНач.Получить(СтрокаТаблицы.ВидНачисления);
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Предприятие КАК Предприятие,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Должность КАК Должность,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Подразделение КАК Подразделение,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ВидНачисления КАК ВидНачисления
	               |ПОМЕСТИТЬ УпрВрем
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(
	               |			&Дата,
	               |			Предприятие = &Предприятие
	               |				И ВЫБОР
	               |					КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |							ИЛИ НЕ Предприятие.УчетПоПодразделениям
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ Подразделение = &Подразделение
	               |				КОНЕЦ) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних
	               |ГДЕ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Работает = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Сотрудник,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Предприятие,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Должность,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Подразделение,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ВидНачисления
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(
	               |			&ТекДата,
	               |			Предприятие = &Предприятие
	               |				И ВЫБОР
	               |					КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |							ИЛИ НЕ Предприятие.УчетПоПодразделениям
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ Подразделение = &Подразделение
	               |				КОНЕЦ) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних
	               |ГДЕ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Работает = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УпрВрем.Сотрудник КАК Сотрудник,
	               |	УпрВрем.Предприятие КАК Предприятие,
	               |	УпрВрем.Должность КАК Должность,
	               |	УпрВрем.Подразделение КАК Подразделение,
	               |	УпрВрем.ВидНачисления КАК ВидНачисления
	               |ПОМЕСТИТЬ УпрВремГрупп
	               |ИЗ
	               |	УпрВрем КАК УпрВрем
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УпрВрем.Сотрудник,
	               |	УпрВрем.Предприятие,
	               |	УпрВрем.Должность,
	               |	УпрВрем.ВидНачисления,
	               |	УпрВрем.Подразделение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Предприятие КАК Предприятие,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Должность КАК Должность,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Подразделение КАК Подразделение,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ВидНачисления КАК ВидНачисления,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ДатаПриема КАК ДатаПриема,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.РазмерЗП КАК Сумма,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Работает КАК Работает,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних1.ДатаУвольнения КАК ДатаУвольнения
	               |ПОМЕСТИТЬ УпрНачало
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(
	               |			&Дата,
	               |			Предприятие = &Предприятие
	               |				И ВЫБОР
	               |					КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |							ИЛИ НЕ Предприятие.УчетПоПодразделениям
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ Подразделение = &Подразделение
	               |				КОНЕЦ
	               |				И Работает = ИСТИНА) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(
	               |				&ТекДата,
	               |				Предприятие = &Предприятие
	               |					И ВЫБОР
	               |						КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |								ИЛИ НЕ Предприятие.УчетПоПодразделениям
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ Подразделение = &Подразделение
	               |					КОНЕЦ
	               |					И Работает = ЛОЖЬ) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних1
	               |		ПО КадровоеСостояниеСотрудниковУпрСрезПоследних.Сотрудник = КадровоеСостояниеСотрудниковУпрСрезПоследних1.Сотрудник
	               |			И КадровоеСостояниеСотрудниковУпрСрезПоследних.ВидНачисления = КадровоеСостояниеСотрудниковУпрСрезПоследних1.ВидНачисления
	               |			И КадровоеСостояниеСотрудниковУпрСрезПоследних.Предприятие = КадровоеСостояниеСотрудниковУпрСрезПоследних1.Предприятие
	               |			И КадровоеСостояниеСотрудниковУпрСрезПоследних.Подразделение = КадровоеСостояниеСотрудниковУпрСрезПоследних1.Подразделение
	               |			И КадровоеСостояниеСотрудниковУпрСрезПоследних.Должность = КадровоеСостояниеСотрудниковУпрСрезПоследних1.Должность
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ВидНачисления КАК ВидНачисления,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Предприятие КАК Предприятие,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Подразделение КАК Подразделение,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Должность КАК Должность,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.Работает КАК Работает,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.РазмерЗП КАК Сумма,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ДатаПриема КАК ДатаПриема,
	               |	КадровоеСостояниеСотрудниковУпрСрезПоследних.ДатаУвольнения КАК ДатаУвольнения
	               |ПОМЕСТИТЬ УпрКонец
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(
	               |			&ТекДата,
	               |			Предприятие = &Предприятие
	               |				И ВЫБОР
	               |					КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |							ИЛИ НЕ Предприятие.УчетПоПодразделениям
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ Подразделение = &Подразделение
	               |				КОНЕЦ
	               |				И Работает = ИСТИНА
	               |				И НЕ (Сотрудник, Предприятие, Должность, ВидНачисления) В
	               |						(ВЫБРАТЬ
	               |							УпрНачало.Сотрудник КАК Сотрудник,
	               |							УпрНачало.Предприятие КАК Предприятие,
	               |							УпрНачало.Должность КАК Должность,
	               |							УпрНачало.ВидНачисления КАК ВидНачисления
	               |						ИЗ
	               |							УпрНачало КАК УпрНачало)) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Должность КАК Должность,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Подразделение КАК Подразделение,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.РазмерЗП * 0.87 КАК Сумма,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Работает КАК Работает,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ВидНачисления КАК ВидНачисления,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ДатаПриема КАК ДатаПриема,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних1.ДатаУвольнения КАК ДатаУвольнения,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ЮрЛицо КАК ЮрЛицо
	               |ПОМЕСТИТЬ РеглНачало
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковРегл.СрезПоследних(
	               |			&Дата,
	               |			Сотрудник В
	               |					(ВЫБРАТЬ
	               |						УпрВрем.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						УпрВрем КАК УпрВрем)
	               |				И Работает = ИСТИНА) КАК КадровоеСостояниеСотрудниковРеглСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадровоеСостояниеСотрудниковРегл.СрезПоследних(
	               |				&ТекДата,
	               |				Сотрудник В
	               |						(ВЫБРАТЬ
	               |							УпрВрем.Сотрудник КАК Сотрудник
	               |						ИЗ
	               |							УпрВрем КАК УпрВрем)
	               |					И Работает = ЛОЖЬ) КАК КадровоеСостояниеСотрудниковРеглСрезПоследних1
	               |		ПО КадровоеСостояниеСотрудниковРеглСрезПоследних.Сотрудник = КадровоеСостояниеСотрудниковРеглСрезПоследних1.Сотрудник
	               |			И КадровоеСостояниеСотрудниковРеглСрезПоследних.ВидНачисления = КадровоеСостояниеСотрудниковРеглСрезПоследних1.ВидНачисления
	               |			И КадровоеСостояниеСотрудниковРеглСрезПоследних.Должность = КадровоеСостояниеСотрудниковРеглСрезПоследних1.Должность
	               |			И КадровоеСостояниеСотрудниковРеглСрезПоследних.ЮрЛицо = КадровоеСостояниеСотрудниковРеглСрезПоследних1.ЮрЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Должность КАК Должность,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Подразделение КАК Подразделение,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.РазмерЗП * 0.87 КАК Сумма,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.Работает КАК Работает,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ВидНачисления КАК ВидНачисления,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ДатаПриема КАК ДатаПриема,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ЮрЛицо КАК ЮрЛицо,
	               |	КадровоеСостояниеСотрудниковРеглСрезПоследних.ДатаУвольнения КАК ДатаУвольнения
	               |ПОМЕСТИТЬ РеглКонец
	               |ИЗ
	               |	РегистрСведений.КадровоеСостояниеСотрудниковРегл.СрезПоследних(
	               |			&ТекДата,
	               |			Сотрудник В
	               |					(ВЫБРАТЬ
	               |						УпрВрем.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						УпрВрем КАК УпрВрем)
	               |				И Работает = ИСТИНА
	               |				И НЕ (Сотрудник, Должность, ЮрЛицо) В
	               |						(ВЫБРАТЬ
	               |							РеглНачало.Сотрудник КАК Сотрудник,
	               |							РеглНачало.Должность КАК Должность,
	               |							РеглНачало.ЮрЛицо КАК ЮрЛицо
	               |						ИЗ
	               |							РеглНачало КАК РеглНачало)
	               |				И НЕ ДатаПриема В
	               |						(ВЫБРАТЬ
	               |							РеглНачало.ДатаПриема КАК ДатаПриема
	               |						ИЗ
	               |							РеглНачало КАК РеглНачало)) КАК КадровоеСостояниеСотрудниковРеглСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УпрНачало.Сотрудник КАК Сотрудник,
	               |	УпрНачало.Предприятие КАК Предприятие,
	               |	УпрНачало.Должность КАК Должность,
	               |	УпрНачало.Подразделение КАК Подразделение,
	               |	УпрНачало.Сумма КАК Сумма,
	               |	УпрНачало.Работает КАК Работает,
	               |	УпрНачало.ВидНачисления КАК ВидНачисления,
	               |	ЕСТЬNULL(УпрНачало.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема,
	               |	ЕСТЬNULL(УпрНачало.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения
	               |ИЗ
	               |	УпрНачало КАК УпрНачало
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УпрКонец.Сотрудник,
	               |	УпрКонец.Предприятие,
	               |	УпрКонец.Должность,
	               |	УпрКонец.Подразделение,
	               |	УпрКонец.Сумма,
	               |	УпрКонец.Работает,
	               |	УпрКонец.ВидНачисления,
	               |	ЕСТЬNULL(УпрКонец.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(УпрКонец.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1))
	               |ИЗ
	               |	УпрКонец КАК УпрКонец
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеглНачало.Сотрудник,
	               |	РеглНачало.ЮрЛицо,
	               |	РеглНачало.Должность,
	               |	РеглНачало.Подразделение,
	               |	РеглНачало.Сумма,
	               |	РеглНачало.Работает,
	               |	РеглНачало.ВидНачисления,
	               |	ЕСТЬNULL(РеглНачало.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(РеглНачало.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1))
	               |ИЗ
	               |	РеглНачало КАК РеглНачало
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеглКонец.Сотрудник,
	               |	РеглКонец.ЮрЛицо,
	               |	РеглКонец.Должность,
	               |	РеглКонец.Подразделение,
	               |	РеглКонец.Сумма,
	               |	РеглКонец.Работает,
	               |	РеглКонец.ВидНачисления,
	               |	ЕСТЬNULL(РеглКонец.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ЕСТЬNULL(РеглКонец.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1))
	               |ИЗ
	               |	РеглКонец КАК РеглКонец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник,
	               |	Подразделение
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ТекДата", ?(НачалоДня(ТекущаяДата()) = Объект.Дата, КонецМесяца(ТекущаяДата()), КонецМесяца(Объект.Дата)));
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Объект.ВидДеятельности);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	
	Пока Выборка.Следующий() Цикл
		
		ЧислоРабочихДнейВМесяцеВсего = ЧислоРабочихДнейВПериоде(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата));
		
		ЧислоотработаноДней = ЧислоРабочихДнейВПериоде(МАКС(Выборка.ДатаПриема, НачалоМесяца(Объект.Дата)), ?(Выборка.ДатаУвольнения = Дата('00010101') ИЛИ НЕ ЗначениеЗаполнено(Выборка.ДатаУвольнения), КонецМесяца(Объект.Дата), Выборка.ДатаУвольнения));
		
		НоваяСтрока = Объект.ТабличнаяЧасть.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		//НоваяСтрока.ВидНачисления = Справочники.ВидыНачисленийОплатыТруда.Оклад;
		
		НоваяСтрока.Дней = ЧислоотработаноДней;
		НоваяСтрока.Часов = НоваяСтрока.Дней * 8;
		//Если НачалоМесяца(Объект.Дата) < Выборка.ДатаПриема Тогда
		//	НоваяСтрока.Дней = ЧислоРабочихДнейВПериоде(Выборка.ДатаПриема);
		//	НоваяСтрока.Часов = НоваяСтрока.Дней * 8;
		//КонецЕсли;
		
		//Если НоваяСтрока.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Оклад") Тогда
		НоваяСтрока.Сумма = ?(ЧислоРабочихДнейВМесяцеВсего, Выборка.Сумма * (ЧислоотработаноДней / ЧислоРабочихДнейВМесяцеВсего), Выборка.Сумма);
		//ИначеЕсли НоваяСтрока.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Тариф") Тогда
		//	НоваяСтрока.Сумма = НоваяСтрока.стр_Часов * Выборка.Сумма;
		//КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, РассчитатьСуммыНалоговНаЗП(НоваяСтрока));
		
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧислоРабочихДнейВПериоде(Дата1, Дата2 = Неопределено)
	
	Если Дата2 = Неопределено Тогда
		Дата2 = КонецМесяца(Дата1);	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КалендарныеГрафики.ДатаГрафика) КАК ДатаГрафика
	|ИЗ
	|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|ГДЕ
	|	КалендарныеГрафики.ДатаГрафика <= КОНЕЦПЕРИОДА(&Дата2, День)
	|	И КалендарныеГрафики.ДатаГрафика >= НАЧАЛОПЕРИОДА(&Дата1, День)
	|	И КалендарныеГрафики.ДеньВключенВГрафик = ИСТИНА";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Возврат Выборка.ДатаГрафика;
		
	КонецЦикла;
	
	Возврат 0;	
	

КонецФункции // ()

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДнейПриИзменении(Элемент)
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	СтруктураОклада = сабОбщегоНазначения.ПолучитьСуммуНаСервере(Объект.Предприятие, Объект.ВидДеятельности, ТекДанные.Сотрудник, Объект.Дата, ТекДанные.ВидНачисления);
	РабочихДней = ЧислоРабочихДнейВПериоде(НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата));
	Если НЕ РабочихДней Тогда
		Сообщить("Невозможно расчитать количество рабочих дней! Проверьте данные текущего календарного графика.");
		Возврат;
	КонецЕсли;
	Если НЕ ТекДанные.Дней Тогда
		ТекДанные.Дней = РабочихДней;
	КонецЕсли;
	Если НЕ Элемент.Имя = "ТабличнаяЧастьЧасов" Тогда
		ТекДанные.Часов = ТекДанные.Дней * 8;
	Иначе
		ТекДанные.Дней = ТекДанные.Часов / 8;	
	КонецЕсли;	//Если ТекДанные.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Оклад") Тогда
	ТекДанные.Сумма = СтруктураОклада.Оклад /  (РабочихДней * 8 ) * ТекДанные.Часов;
	//ИначеЕсли ТекДанные.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Тариф") Тогда
	//	ТекДанные.Сумма = ТекДанные.стр_Часов * ТекДанные.Сумма;
	//ИначеЕсли ТекДанные.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.БольничныйЛист") Тогда
	//	ТекДанные.Сумма = СтруктураОклада.Оклад /  (РабочихДней * 8 ) * ТекДанные.стр_Часов;
	//	Если ДобавитьМесяц(СтруктураОклада.ДатаПриема, 12) > Объект.Дата Тогда //менее года
	//		ТекДанные.Сумма = ТекДанные.Сумма * 0.6;
	//	ИначеЕсли ДобавитьМесяц(СтруктураОклада.ДатаПриема, 12*3) > Объект.Дата Тогда //менее 3-х лет
	//		ТекДанные.Сумма = ТекДанные.Сумма * 0.8;
	//	КонецЕсли;
	//ИначеЕсли ТекДанные.ВидНачисления = ПредопределенноеЗначение("Справочник.ВидыНачисленийОплатыТруда.Отпуск") Тогда
	//	ДатаГод = Макс(СтруктураОклада.ДатаПриема, ДобавитьМесяц(НачалоМесяца(Объект.Дата), -12));
	//	КЗЗаПериод = ПолучитьОборотыКЗ(ДатаГод, НачалоМесяца(Объект.Дата), Объект.стр_Счет, Объект.Предприятие, Объект.ВидДеятельности, ТекДанные.Сотрудник);	
	//	ТекДанные.Сумма = КЗЗаПериод / ((НачалоМесяца(Объект.Дата) - ДатаГод) / (60*60*24)) * 30;
	//КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные; 
	СтруктураНалогов = РассчитатьСуммыНалоговНаЗП(Новый Структура("Сумма, ВидНачисления", ТекДанные.Сумма, ТекДанные.ВидНачисления));//возврат структуры сумм
	ЗаполнитьЗначенияСвойств(Элементы.ТабличнаяЧасть.ТекущиеДанные, СтруктураНалогов);
КонецПроцедуры

&НаСервереБезКонтекста
Функция РассчитатьСуммыНалоговНаЗП(ДанныеСтроки)
	Сумма = ДанныеСтроки.Сумма;
	
	СчитатьНалоги = Истина;
	
	Если ТипЗнч(ДанныеСтроки) = Тип("Структура")  Тогда
		Если Не ДанныеСтроки.Свойство("РасчетНалоговИВзносов") И ДанныеСтроки.Свойство("ВидНачисления") Тогда
			Если НЕ ДанныеСтроки.ВидНачисления.РасчетНалоговИВзносов Тогда
				СчитатьНалоги = Ложь;				
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ТипЗнч(ДанныеСтроки.ВидНачисления) = Тип("СправочникСсылка.ВидыНачисленийОплатыТруда") И НЕ ДанныеСтроки.ВидНачисления.РасчетНалоговИВзносов Тогда
			СчитатьНалоги = Ложь;				
		КонецЕсли;
	КонецЕсли;
	Если НЕ СчитатьНалоги Тогда
		Возврат Новый Структура("СуммаНДФЛ, СуммаПФР, СуммаФСС, СуммаФССНесчСл, СуммаФФОМС", 0, 0, 0, 0, 0);
	КонецЕсли;
	
	Стру = Новый Структура;
	СуммаСНДФЛ = Сумма/0.87;
	Стру.Вставить("СуммаНДФЛ", СуммаСНДФЛ*0.13); //13%
	Стру.Вставить("СуммаПФР", СуммаСНДФЛ*0.22); //22%
	Стру.Вставить("СуммаФСС", СуммаСНДФЛ*0.029); //2,9%
	Стру.Вставить("СуммаФССНесчСл", СуммаСНДФЛ*0.002); //0,2%
	Стру.Вставить("СуммаФФОМС", СуммаСНДФЛ*0.051); //5,1%
	
	Возврат Стру;

КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТабличнаяЧастьУдержано" Тогда
		ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные; 
		СтандартнаяОбработка = Ложь;
		//Если НЕ ТекДанные.УдержаниеДоступность Тогда
		//	Возврат;		
		//КонецЕсли;
		ТекФорма = ПолучитьФорму("Документ.УЧ_НачислениеЗП.Форма.ФормаУдержаний");
		НайденныеСтроки = Объект.Удержания.НайтиСтроки(Новый Структура("ВидНачисления, Сотрудник", ТекДанные.ВидНачисления, ТекДанные.Сотрудник));
		ТекФорма.Сотрудник = ТекДанные.Сотрудник;
		ТекФорма.ВидНачисления = ТекДанные.ВидНачисления;
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = ТекФорма.ТЧ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЦикла; 
		ТекФорма.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УЧ_НачисленияЗПОбновитьУдержания" Тогда
		Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			НайденныеСтроки = Объект.Удержания.НайтиСтроки(Новый Структура("ВидНачисления, Сотрудник", Параметр.Отбор.ВидНачисления, Параметр.Отбор.Сотрудник));
			Для каждого ТекСтрока Из НайденныеСтроки Цикл
				Объект.Удержания.Удалить(ТекСтрока);		
			КонецЦикла;
			
			Для каждого ТекСтрока Из Параметр.ТЧ Цикл
				НоваяСтрока = Объект.Удержания.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
			КонецЦикла; 
		КонецЕсли;
		ОбновитьСуммыУдержаний();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСуммыУдержаний()
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		НайденныеСтроки = Объект.Удержания.НайтиСтроки(Новый Структура("ВидНачисления, Сотрудник", ТекСтрока.ВидНачисления, ТекСтрока.Сотрудник));
		ТекСтрока.Удержано = 0;
		Для каждого ТекНайдСтрока Из НайденныеСтроки Цикл
			ТекСтрока.Удержано = ТекСтрока.Удержано + ТекНайдСтрока.Сумма;
		КонецЦикла; 
	КонецЦикла; 	

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВидНачисленияПриИзменении(Элемент)
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		РеквизитыОклада = БюджетныйНаСервере.ВернутьРеквизиты(Элементы.ТабличнаяЧасть.ТекущиеДанные.ВидНачисления, "РасчетНалоговИВзносов, Удержание");
		Элементы.ТабличнаяЧасть.ТекущиеДанные.УдержаниеДоступность = РеквизитыОклада.РасчетНалоговИВзносов;
	КонецЕсли;
КонецПроцедуры


#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

 &НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОповеститьРегистрОбработанных");
КонецПроцедуры

