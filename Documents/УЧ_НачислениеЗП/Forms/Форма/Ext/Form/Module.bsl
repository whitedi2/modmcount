
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр		 = "Файл Excel (*.xls)|*.xls*";
	ДиалогВыбораФайла.Расширение	 = "xls";
	ДиалогВыбораФайла.Заголовок		 = "Выберите файл";
	ДиалогВыбораФайла.ПолноеИмяФайла = ПутьКФайлу;
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) ИЛИ Не ЗначениеЗаполнено(НомерСтрокиНачалаДанных) Или НЕ ?(ПереключательПоискаСотрудников = "ПоПФР",ЗначениеЗаполнено(НомерСтолбцаПФР),ЗначениеЗаполнено(НомерСтолбцаФИО)) или Не ЗначениеЗаполнено(НомерСтолбцаССуммой) Тогда
		Сообщить("Не заполнено одно из значенний: Путь к файлу , Номер строки начала данных, Номер Столбца ПФР, Номера столбца с суммой"); 	
	Иначе  	
				
		//XLSОбъект = Новый COMОбъект("Excel.Application");
		//XLSОбъект.Visible       = Ложь;
		//XLSОбъект.DisplayAlerts = Ложь;
		//
		//Попытка
		//	Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		//Исключение
		//	Сообщить ("Проблемы с подключением к Excel" );
		//КонецПопытки;
		//
		//Лист = Book.Sheets(1);
		//КоличествоКолонокФайла = Макс(НомерСтолбцаВидНачисления, НомерСтолбцаПодразделение, НомерСтолбцаПФР, НомерСтолбцаССуммой, НомерСтолбцаФИО);
		////Получааем количество строк в книге
		//ВсегоСтрок = Лист.UsedRange.Rows.Count;
		////ВсегоКолонок = Лист.Cells(НомерСтрокиНачалаДанных,1).SpecialCells(ВсегоСтрок, КоличествоКолонокФайла).Column;
		//
		//Область = Лист.Range(Лист.Cells(НомерСтрокиНачалаДанных,1), Лист.Cells(ВсегоСтрок,КоличествоКолонокФайла));	
		//
		////получаем массив колонок)))
		//Данные = Область.Value.Выгрузить();    
		
		Данные = Неопределено; 
		КоличествоКолонокФайла = Макс(НомерСтолбцаВидНачисления, НомерСтолбцаПодразделение, НомерСтолбцаПФР, НомерСтолбцаССуммой, НомерСтолбцаФИО);
		Файл = Новый ДвоичныеДанные(ПутьКФайлу);
		Адрес = ПоместитьВоВременноеХранилище(Файл, ЭтаФорма.УникальныйИдентификатор);
		
		Файл1 = Новый Файл(ПутьКФайлу);
		РасширениеФайла = Файл1.Расширение;
		
		Данные = сабОбщегоНазначения.ПрочитатьДанныеФайла(Адрес, НомерСтрокиНачалаДанных, КоличествоКолонокФайла, РасширениеФайла);
		
		Если Не Данные.Количество() И Не Данные[0].Количество() Тогда 
			Сообщить("Данные для загрузки не найдены.");
			Возврат;		
		КонецЕсли;
		
		ВсегоСтрок = Данные[0].Количество();
		
		Если ЗначениеЗаполнено(НомерСтолбцаПФР) Тогда
			МассивПФР = Новый Массив;
			МассивПФР = Данные[НомерСтолбцаПФР-1];		
		КонецЕсли;                                		
		
		МассивСумм = Новый Массив;
		МассивСумм = Данные[НомерСтолбцаССуммой-1]; 		
		
		Если ЗначениеЗаполнено(НомерСтолбцаФИО) Тогда
			МассивФИО = Новый Массив;
			МассивФИО = Данные[НомерСтолбцаФИО-1];		
		КонецЕсли;
		
		Если НомерСтолбцаВидНачисления Тогда
			МассивВидовНачислений = Новый Массив;
			МассивВидовНачислений = Данные[НомерСтолбцаВидНачисления-1];		
			НайтиВидНачисления(МассивВидовНачислений, ВсегоСтрок-1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НомерСтолбцаПодразделение) Тогда
			МассивПодразделений = Новый Массив;
			МассивПодразделений = Данные[НомерСтолбцаПодразделение-1];
			НайтиПодразделение(МассивПодразделений, ВсегоСтрок-1);
		КонецЕсли;  
		
		ТЧ = ВладелецФормы;
		НомерОшибочногоПФР = "";
		НомерОшибочнойСтроки = "";
		ОшибочноеФИО = "";
		
		Если ПереключательПоискаСотрудников = "ПоПФР" Тогда
			Ошибка =  НайтиСотрудниковПоПФРНаСервере(МассивПФР, ВсегоСтрок-1,НомерОшибочногоПФР,НомерОшибочнойСтроки);
		ИначеЕСли ПереключательПоискаСотрудников = "ПоФИО" ТОгда
			Ошибка = НайтиСорудниковПоФИОНаСервере(МассивФИО,ВсегоСтрок-1,ОшибочноеФИО,НомерОшибочнойСтроки);
		Иначе   			
			Сообщить("Ошибка при выборе варианта поиска сотрудника");
			Возврат		
		КонецЕсли; 
		
		Если Ошибка Тогда		
			Сообщить("Не найден сотрудник с " + ?(ПереключательПоискаСотрудников = "ПоПФР","номером страхового ПФР ","ФИО")+ """" + ?(ПереключательПоискаСотрудников = "ПоПФР",НомерОшибочногоПФР,ОшибочноеФИО) + """ из " +НомерОшибочнойСтроки+"-й строки файла. Загрузка отменяется!!!");	
		    Возврат
		КонецЕсли; 
		
		//Если ЗначениеЗаполнено(ЮрЛицо) и ЮрЛицо<> ВладелецФормы.Родитель.Объект.ЮрЛицо Тогда
		//	ВладелецФормы.Родитель.Объект.ЮрЛицо = ЮрЛицо;
		//КонецЕсли;
		
		МассивСотрудников =?(ПереключательПоискаСотрудников = "ПоПФР",МассивПФР,МассивФИО); 
		
		Для Индекс=0 По ВсегоСтрок-1 Цикл  			
		    ТЧ.ДобавитьСтроку();
			ТЧ.ТекущиеДанные.Сотрудник = МассивСотрудников[Индекс];
			ТЧ.ТекущиеДанные.ЮрЛицо = ЮрЛицо;
			ТЧ.ТекущиеДанные.Сумма = МассивСумм[Индекс];
			
			Если НомерСтолбцаПодразделение Тогда
				ТЧ.ТекущиеДанные.Подразделение = МассивПодразделений[Индекс];
			КонецЕсли; 
			
			Если НомерСтолбцаВидНачисления Тогда
				ТЧ.ТекущиеДанные.ВидНачисления = МассивВидовНачислений[Индекс];
			КонецЕсли;
			
		КонецЦикла;  
		
		//XLSОбъект.Application.Quit();
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;    
	
КонецПроцедуры

&НаСервере
Функция НайтиСотрудниковПоПФРНаСервере(МассивПФР, КоличествоСтрок,номерПФР ,НомерСтроки)

	Для Индекс =0 По КоличествоСтрок Цикл
	
		Сотрудник = Справочники.ФизическиеЛица.НайтиПоРеквизиту("СтраховойНомерПФР", МассивПФР[Индекс]);		
		
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			НомерПФР = МассивПФР[Индекс];
			НомерСтроки = Индекс+1;
			Возврат Истина
		Иначе
			МассивПФР[Индекс] = Сотрудник;
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат Ложь	

КонецФункции // НайтиСотрудникаНаСервере()

&НаСервере
Функция НайтиСорудниковПоФИОНаСервере(МассивФИО,КоличествоСтрок ,ОшибочноеФИО, НомерСтроки)
	
	Для Индекс =0 По КоличествоСтрок Цикл
		
		Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(МассивФИО[Индекс], истина);
		
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			Сотрудник = Справочники.ФизическиеЛица.НайтиПоНаименованию(МассивФИО[Индекс], истина);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			ОшибочноеФИО = МассивФИО[Индекс];
			НомерСтроки = Индекс+1;
			Возврат Истина
		Иначе
			МассивФИО[Индекс] = Сотрудник;
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат Ложь	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИскатьСотрудниковПо = "ПоФИО";
	
	Если ЗначениеЗаполнено(Параметры.ЮрЛицо) Тогда				
		ЮрЛицо = Параметры.ЮрЛицо;		
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.Предприятие) Тогда				
		Предприятие = Параметры.Предприятие;		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПереключательПоискаСотрудниковПриИзменении(Элемент)
	Если ПереключательПоискаСотрудников = "ПоПФР" Тогда
		Элементы.НомерСтолбцаФИО.Видимость = ложь;
		Элементы.НомерСтолбцаПФР.Видимость = истина;
	Иначе 
		Элементы.НомерСтолбцаФИО.Видимость = истина;
		Элементы.НомерСтолбцаПФР.Видимость = Ложь;		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПереключательПоискаСотрудниковПриИзменении(0);
КонецПроцедуры
 
&НаСервере
Процедура НайтиПодразделение(МассивПодразделений, КоличествоСтрок)
	
	Для Индекс = 0 По КоличествоСтрок Цикл
		Подразделение = Справочники.СтруктураПредприятия.НайтиПоНаименованию(МассивПодразделений[Индекс], Истина, , Предприятие);		
		МассивПодразделений[Индекс] = Подразделение;
	КонецЦикла; 
		
КонецПроцедуры	

&НаСервере
Процедура НайтиВидНачисления(МассивВидовНачислений, КоличествоСтрок)
	
	Для Индекс = 0 По КоличествоСтрок Цикл
		ВидНачисления = Справочники.ВидыНачисленийОплатыТруда.НайтиПоНаименованию(МассивВидовНачислений[Индекс], Истина);		
		МассивВидовНачислений[Индекс] = ВидНачисления;
	КонецЦикла; 
		
КонецПроцедуры	


