



Функция ПечатьТОРГ4(МассивОбъектов) Экспорт
	
	КолонкаКодов = "Код";
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                       КАК Ссылка,
		|	Документ.Номер                                        КАК Номер,
		|	Документ.Дата                                         КАК Дата,
		|	Документ.Дата                                         КАК ДатаДокумента,
		|	Документ.ДатаВходящегоДокумента                       КАК ДатаДокументаСопровождения,
		|	Документ.НомерВходящегоДокумента                      КАК НомерДокументаСопровождения,
		|	Документ.Контрагент                                   КАК Поставщик,
		|	Документ.Организация                                  КАК Организация,
		//|	Документ.БанковскийСчетОрганизации                    КАК БанковскийСчетОрганизации,
		//|	Документ.БанковскийСчетКонтрагента                    КАК БанковскийСчетКонтрагента,
		|	Документ.Организация.Код                          КАК Префикс,
		//|	Документ.Склад.Наименование                           КАК МестоПриемки,
		|	Документ.Контрагент                                   КАК Грузоотправитель,
		|	Документ.Организация                            КАК Руководители,
		|	Документ.ЦенаВключаетНДС                              КАК ЦенаВключаетНДС
		|ИЗ
		|	Документ.УЧ_ПоступлениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////
		|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура.Код                          					КАК ТоварКод,
		|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
		|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто,
		|	ВложенныйЗапрос.МассаНетто                                                 КАК МассаНетто,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
		|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		1 КАК КоэффициентМест,
		|		1                                      КАК Коэффициент,
		|			Документ.Количество * Документ.Номенклатура.Вес                                      КАК МассаБрутто,
		|		Документ.Количество * Документ.Номенклатура.ВесНетто КАК МассаНетто,
		|				Документ.Цена  КАК Цена,
		|		Документ.Количество КАК Количество,
		|		Документ.Количество КАК КоличествоМест,
		|		Документ.Сумма              КАК Сумма,
		|		Документ.СуммаНДС           КАК СуммаНДС,
		|		Документ.СтавкаНДС          КАК СтавкаНДС,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
				
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ТОРГ4";
		
		ЕдиницаИзмеренияВеса           = Неопределено;
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		// Зададим параметры макета
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати      = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ4");
		
		ПервыйДокумент = Истина;
		
		Пока ДанныеПечати.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
						
			// Выводим общие реквизиты шапки.
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента);//,, ДанныеПечати.БанковскийСчетОрганизации);
			СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик ,       ДанныеПечати.ДатаДокумента);//,, ДанныеПечати.БанковскийСчетКонтрагента);
			СведенияОГрузоотправителе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.ДатаДокумента);//,, ДанныеПечати.БанковскийСчетКонтрагента);
			
			ОбластьМакета.Параметры.ПредставлениеПоставщика       = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьМакета.Параметры.ОписаниеПоставщика            = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ЮридическийАдрес,Телефоны");
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьМакета.Параметры.ПоставщикПоОКПО               = СведенияОПоставщике.КодПоОКПО;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.ДатаДокумента            = ДанныеПечати.ДатаДокумента;
			ОбластьМакета.Параметры.НомерДокумента           = ДанныеПечати.Номер;
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
			ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
			ОбластьМакета.Параметры.ГрузополучательПоОКПО    = СведенияОПокупателе.КодПоОКПО;
						
			Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
			ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
						
			РеквизитыСопроводительногоДокумента = НСтр("ru='сопроводительный документ № %НомерДокументаСопровождения% от %ДатаДокументаСопровождения%'");
			РеквизитыСопроводительногоДокумента = СтрЗаменить(РеквизитыСопроводительногоДокумента, "%НомерДокументаСопровождения%", ДанныеПечати.НомерДокументаСопровождения);
			РеквизитыСопроводительногоДокумента = СтрЗаменить(РеквизитыСопроводительногоДокумента, "%ДатаДокументаСопровождения%",  Формат(ДанныеПечати.ДатаДокументаСопровождения, "ДФ='дд ММММ гггг'"));
			
			ОбластьМакета.Параметры.РеквизитыСопроводительногоДокумента = РеквизитыСопроводительногоДокумента;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
			
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
			ИтоговыеСуммы.Вставить("СуммаПрописью", "");
			
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("СуммаБезНДС", 0);
			ДанныеСтроки.Вставить("СуммаНДС", 0);
			ДанныеСтроки.Вставить("СуммаСНДС", 0);
			ДанныеСтроки.Вставить("СтавкаНДС", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("МассаНетто", 0);
						
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			КоличествоСтрок = ВыборкаПоДокументам.Количество();
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				ДанныеСтроки.СуммаНДС = СтрокаТовары.СуммаНДС;
				ДанныеСтроки.СтавкаНДС = СтрокаТовары.СтавкаНДС;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
						ДанныеСтроки.МассаНетто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
						ДанныеСтроки.МассаНетто = СтрокаТовары.МассаНетто;
					КонецЕсли;
					
				КонецЕсли;
				
				ДанныеСтроки.СуммаБезНДС   = СтрокаТовары.Сумма;
				
				Если ДанныеПечати.ЦенаВключаетНДС Тогда
					ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
					ДанныеСтроки.СуммаСНДС = СтрокаТовары.Сумма;
				Иначе
					ДанныеСтроки.Цена = СтрокаТовары.Цена;
					ДанныеСтроки.СуммаСНДС = ДанныеСтроки.СуммаБезНДС + ДанныеСтроки.СуммаНДС;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
				ОбластьМакета.Параметры.Стоимость      = ДанныеСтроки.СуммаБезНДС;
				ОбластьМакета.Параметры.КоличествоШтук = ДанныеСтроки.Количество;
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьНаСтранице = ИтоговыеСуммы.ИтогоСуммаНаСтранице;
						ОбластьИтоговПоСтранице.Параметры.ИтогоШтукНаСтранице      = ИтоговыеСуммы.ИтогоКоличествоНаСтранице;
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						// Очистим итоги по странице.
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
						ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
						
						
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
				
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
				
				
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			ОбластьИтоговПоСтранице.Параметры.ИтогоСтоимостьНаСтранице  = ИтоговыеСуммы.ИтогоСуммаНаСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогоШтукНаСтранице       = ИтоговыеСуммы.ИтогоКоличествоНаСтранице;
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			ОбластьМакета.Параметры.ИтогоСтоимость = ИтоговыеСуммы.ИтогоСумма;
			ОбластьМакета.Параметры.ИтогоШтук = ИтоговыеСуммы.ИтогоКоличество;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
						
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
			//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
				
		Возврат ТабличныйДокумент;
			
КонецФункции

Функция ПечатьТОРГ2(МассивОбъектов) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	СформироватьТекстЗапросаТОРГ2(Запрос.Текст);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ТОРГ2";
	
	Макет = Документы.УЧ_ПоступлениеТоваров.ПолучитьМакет("ПФ_MXL_ТОРГ2");
	
	ПакетРезультатов 			= Запрос.ВыполнитьПакет();
	ДанныеПечати 				= ПакетРезультатов[0].Выбрать();
	ТаблицаТоваров 				= ПакетРезультатов[3].Выгрузить();
	ТаблицаТоваровПоДокументам 	= ПакетРезультатов[4].Выгрузить();
	
	ПервыйДокумент = Истина;
	КолонкаКодов = "Код";
	
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Артикул";
	КонецЕсли;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если ДанныеПечати.ОшибкаНетРасхождений Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В документе %1 нет расхождений. Печать акта об установленном расхождении по количеству и качеству при приемке %2 не требуется.'"),
			ДанныеПечати.Ссылка,
			НСтр("ru='товарно-материальных ценностей'"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДанныеПечати.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТекстНДСВШапкеТаблицы = ?(ДанныеПечати.ЦенаВключаетНДС, "", " " + НСтр("ru='(Без НДС)'"));
		
		// Страница №1 ////////////////////////////////////////////////////////////////////////////////////////////////////
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаПервойСтраницы");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.НомерДокумента = ДанныеПечати.НомерДокумента;
		Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.Поставщик = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.Грузоотправитель = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.ОснованиеДляСоставленияАкта = НСтр("ru='приказ, распоряжение'");
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента);
		Область.Параметры.ОрганизацияПоОКПО = СведенияОПокупателе.КодПоОКПО;
		АдресПодразделения = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.ПредставлениеПодразделения);
		Область.Параметры.МестоПриемкиТовара = АдресПодразделения;
		
		Область.Параметры.ДатаДоставкиТоваровДень = День(ДанныеПечати.ДатаДокумента);
		Область.Параметры.ДатаДоставкиТоваровМесяц = Формат(ДанныеПечати.ДатаДокумента, "ДФ=MMMM"); 
		Область.Параметры.ДатаДоставкиТоваровГод = Год(ДанныеПечати.ДатаДокумента);
		
		Область.Параметры.ПереченьСопроводительныхДокументов = "ТТН № " + ДанныеПечати.НомерВходящегоДокумента + " от " + Формат(ДанныеПечати.ДатаВходящегоДокумента, "ДЛФ=D");
		
		Область.Параметры.НомерДоговораПоставки = ДанныеПечати.Договор.Номер;
		Область.Параметры.ДатаДоговораПоставкиДень = День(ДанныеПечати.Договор.ДатаДоговора);
		Область.Параметры.ДатаДоговораПоставкиМесяц = Формат(ДанныеПечати.Договор.ДатаДоговора, "ДФ=MMMM");
		Область.Параметры.ДатаДоговораПоставкиГод = Год(ДанныеПечати.Договор.ДатаДоговора);
		
		Область.Параметры.НомерСчетаФактуры = ДанныеПечати.НомерВходящегоСчФ;
		Область.Параметры.ДатаСчетаФактурыДень = День(ДанныеПечати.ДатаВходящегоСчФ);
		Область.Параметры.ДатаСчетаФактурыМесяц = Формат(ДанныеПечати.ДатаВходящегоСчФ, "ДФ=MMMM");
		Область.Параметры.ДатаСчетаФактурыГод = Год(ДанныеПечати.ДатаВходящегоСчФ);
		
		Область.Параметры.СпособДоставки = "автотранспорт";
		
		Область.Параметры.ДатаОтправленияТоваровДень = День(ДанныеПечати.ДатаВходящегоДокумента);
		Область.Параметры.ДатаОтправленияТоваровМесяц = Формат(ДанныеПечати.ДатаВходящегоДокумента, "ДФ=MMMM"); 
		Область.Параметры.ДатаОтправленияТоваровГод = Год(ДанныеПечати.ДатаВходящегоДокумента);
		
		Область.Параметры.СкладОтправителяТовара = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаДокумента), "ФактическийАдрес");
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента);
		Область.Параметры.РуководительФИО = Руководители.Руководитель;
		Область.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод таблицы приемки товаров.
		
		Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровШапка");
		ТабличныйДокумент.Вывести(Область);
		КоличествоСтрокРучногоВвода = 4;
		Для Счетчик =1 По КоличествоСтрокРучногоВвода Цикл
			Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровСтрока");
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровПодвал");
		ТабличныйДокумент.Вывести(Область);
		
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №2 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаВторойСтраницы");
		Область.Параметры.НомерДокумента = ДанныеПечати.НомерДокумента;
		ТабличныйДокумент.Вывести(Область);
		
		
		// Вывод состояния транспорта по документам.
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТранспортаПоДокументам", 4);
		
		// Вывод таблицы товаров по документам.
		Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамШапка");
		ТабличныйДокумент.Вывести(Область);
		Строки = ТаблицаТоваровПоДокументам.НайтиСтроки(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамСтрока");
		Для Каждого Строка Из Строки Цикл
			Если НЕ ЗначениеЗаполнено(Строка.Количество) Тогда
				Продолжить;		
			КонецЕсли; 
			Область.Параметры.Заполнить(Строка);
			Область.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(Строка.НоменклатураНаименование);
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамПодвал");
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод состояния транспорта по факту.
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТранспортаПоФакту", 4);
		
		// Вывод таблицы итогов
		Область = Макет.ПолучитьОбласть("ТаблицаИтогов");
		Область.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(Область);
		
		
		// Вывод первой части таблицы товаров.
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Шапка");
		Область.Параметры.НДС = ТекстНДСВШапкеТаблицы;
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Строка");
		Товары = ТаблицаТоваров.НайтиСтроки(Новый Структура("Ссылка", ДанныеПечати.Ссылка));
		Для Каждого Товар Из Товары Цикл
			Если НЕ ЗначениеЗаполнено(Товар.СуммаПоДокументам) Тогда
				Продолжить;		
			КонецЕсли;
			Область.Параметры.Заполнить(Товар);
			Область.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(Товар.НоменклатураНаименование);
			Область.Параметры.ЗначениеКода = Товар[КолонкаКодов];
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Подвал");
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №3 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаТретьейСтраницы");
		Область.Параметры.НомерДокумента = ДанныеПечати.НомерДокумента;
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод Условий Хранения Товара До Вскрытия
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "УсловияХраненияТовараДоВскрытия", 4);
		
		// Вывод Температуры При Разгрузке
		Область = Макет.ПолучитьОбласть("ТемператураПриРазгрузке");
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод Состояния Тары И Упаковки
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СостояниеТарыИУпаковки", 4);
		
		// Вывод содержания наружной маркировки.
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СодержаниеНаружнойМаркировки", 4);
		
		// Вывод даты вскрытия тары
		Область = Макет.ПолучитьОбласть("ДатаВскрытияТары");
		Область.Параметры.ДатаВскрытияТарыДень = День(ДанныеПечати.ДатаДокумента);
		Область.Параметры.ДатаВскрытияТарыМесяц = Формат(ДанныеПечати.ДатаДокумента, "ДФ=MMMM");
		Область.Параметры.ДатаВскрытияТарыГод = Год(ДанныеПечати.ДатаДокумента);
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод Организации Взвесившей И Опломбировавшей Товар
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ОрганизацияВзвесившаяИОпломбировавшаяТовар", 4);
		
		// Вывод порядка Отбора Товара Для Выборочной Проверки
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПорядокОтбораТовараДляВыборочнойПроверки", 4);
		
		// Вывод второй части таблицы товаров.
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Шапка");
		Область.Параметры.НДС = ТекстНДСВШапкеТаблицы;
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Строка");
		Для Каждого Товар Из Товары Цикл
			Область.Параметры.Заполнить(Товар);
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				Область.Параметры.ЗначениеКода = Товар[КолонкаКодов];
			КонецЕсли;
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Подвал");
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Страница №4 ////////////////////////////////////////////////////////////////////////////////////////////////////
		
		// Вывод шапки
		Область = Макет.ПолучитьОбласть("ШапкаЧетвертойСтраницы");
		Область.Параметры.НомерДокумента = ДанныеПечати.НомерДокумента;
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод способа определения количества.
		Область = Макет.ПолучитьОбласть("СпособОпределенияКоличества");
		Область.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(Область);
		// Вывод места определения количества.
		МестоОпределенияКоличества = Макет.ПолучитьОбласть("МестоОпределенияКоличества");
		МестоОпределенияКоличества.Параметры.МестоОпределенияКоличества = АдресПодразделения;
		// Вывод сведений об исправности весоизмерительных приборов.
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "СведенияОбИсправностиВесоизмерительныхПриборов", 4);
		// Вывод прочих данных
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПрочиеДанные", 4);
		// Вывод подробного описания дефектов.
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ПодробноеОписаниеДефектов", 4);
		// Вывод заключения комиссии
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "ЗаключениеКомиссии", 4);
		// Вывод приложения
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "Приложение", 4);
		
		// Вывод членов комиссии
		Область = Макет.ПолучитьОбласть("ЧленыКомиссии");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.ДолжностьПредседателяКомиссии = "Управляющий";
		Область.Параметры.ДолжностьЧленаКомиссии1 = "Приемщик";
		Область.Параметры.ДолжностьЧленаКомиссии2 = "Прочий персонал";
		Область.Параметры.ГлавныйБухгалтерФИО = Руководители.ГлавныйБухгалтер;
		ТабличныйДокумент.Вывести(Область);
		
		// Вывод решения руководителя
		ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, "РешениеРуководителя", 4);
		
		// Вывод кладовщика
		Область = Макет.ПолучитьОбласть("Кладовщик");
		ТабличныйДокумент.Вывести(Область);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция ПечатьТОРГ12(МассивОбъектов) Экспорт

	КолонкаКодов = "Код";
	ВыводитьУслуги = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка КАК Ссылка,
	|	ДокументКПечати.Номер КАК Номер,
	|	ДокументКПечати.Дата КАК Дата,
	|	ДокументКПечати.Контрагент КАК Контрагент,
	|	ДокументКПечати.Организация КАК Организация,
	|	ДокументКПечати.Организация КАК Руководители,
	|	ДокументКПечати.Организация.Код КАК Префикс,
	|	ДокументКПечати.Контрагент КАК Грузоотправитель,
	|	ДокументКПечати.Организация КАК Грузополучатель,
	|	ДокументКПечати.Организация КАК Покупатель,
	|	ДокументКПечати.Контрагент КАК Поставщик,
	|	ДокументКПечати.Организация КАК Плательщик,
	|	"""" КАК ОтветственноеЛицо,
	|	ДокументКПечати.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	|	"""" КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС КАК УчитыватьНДС,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	ДокументКПечати.Подразделение
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров КАК ДокументКПечати
	|ГДЕ
	|	ДокументКПечати.Ссылка В(&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто КАК МассаБрутто,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		1 КАК Коэффициент,
	|		Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК КоэффициентМест,
	|		Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияМест,
	|		Товары.Количество * Товары.Номенклатура.Вес КАК МассаБрутто,
	|		Товары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА Товары.Цена
	|			ИНАЧЕ Товары.Сумма / Товары.Количество
	|		КОНЕЦ КАК Цена,
	|		Товары.Количество КАК Количество,
	|		Товары.Сумма КАК Сумма,
	|		Товары.СуммаНДС КАК СуммаНДС,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивДокументов)
	|		И Товары.Ссылка.Проведен
	|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Услуга)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ТОРГ12";
	
	ЕдиницаИзмеренияВеса           = Неопределено;
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_ПоступлениеТоваров.ПФ_MXL_ТОРГ12");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);//,,ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента = ДанныеПечати.Номер;
		ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		Иначе
			
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		//АдресПодразделения = Справочники.СтруктураПредприятия.ПолучитьАдресИзКонтактнойИнформации(ДанныеПечати.Подразделение);
		//ОбластьМакета.Параметры.АдресДоставки = АдресПодразделения;
		
		АдресПодразделения = "";
		
		// Выводим коды
		ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
		ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
		ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.ОснованиеНомер             = "";
		ОбластьМакета.Параметры.ОснованиеДата              = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по странице.
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМест", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Мест", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("МассаБрутто", 0);
		ДанныеСтроки.Вставить("МассаНетто", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.ТоварНаименование);
			
			ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
					ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
					ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
					ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
					ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по странице.
			ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
			
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом.
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		
		Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
			
			ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
			
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;	
КонецФункции
	
// Выводит многострочное поле в табличный документ.
//
// Параметры:
// 		ТабличныйДокумент - ТабличныйДокумент
// 		Макет - ТабличныйДокумент - Макет табличного документа.
// 		ДанныеПечати - ВыборкаИзРезультатаЗапроса
// 		ИмяПоля - Строка - Имя реквизита результата запроса, имя области макета, имя параметра области макета.
// 		КоличествоСтрокРучногоВвода - Число - Количество строк ручного заполнения.
//
Процедура ВывестиМногострочноеПоле(ТабличныйДокумент, Макет, ДанныеПечати, ИмяПоля, КоличествоСтрокРучногоВвода = 4)
	
	Область = Макет.ПолучитьОбласть(ИмяПоля);
	ТабличныйДокумент.Вывести(Область);
	
	ОбластьСтрокиРучногоЗаполнения = Макет.ПолучитьОбласть("СтрокаРучногоЗаполнения");
	Для Счет =1 По КоличествоСтрокРучногоВвода Цикл
		ТабличныйДокумент.Вывести(ОбластьСтрокиРучногоЗаполнения);
	КонецЦикла;
	
	ОбластьСтрокиПробела = Макет.ПолучитьОбласть("СтрокаПробела");
	ТабличныйДокумент.Вывести(ОбластьСтрокиПробела);
	
КонецПроцедуры

Процедура СформироватьТекстЗапросаТОРГ2(ТекстЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка,
	|	ПоступлениеТоваров.Номер КАК НомерДокумента,
	|	ПоступлениеТоваров.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваров.Организация КАК Организация,
	|	ПоступлениеТоваров.Организация.Код КАК Префикс,
	|	ПоступлениеТоваров.Подразделение КАК ПредставлениеПодразделения,
	|	ПоступлениеТоваров.Контрагент КАК Поставщик,
	|	ПоступлениеТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЛОЖЬ КАК ОшибкаНетРасхождений,
	|	ПоступлениеТоваров.ДокОснование,
	|	ПоступлениеТоваров.НомерВходящегоДокумента,
	|	ПоступлениеТоваров.ДатаВходящегоДокумента,
	|	ВЫРАЗИТЬ(ПоступлениеТоваров.Договор КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	ПоступлениеТоваров.НомерВходящегоСчФ,
	|	ПоступлениеТоваров.ДатаВходящегоСчФ
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	"""" КАК Упаковка,
	|	ПоступлениеТоваровТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.Количество, 0)) КАК Количество,
	|	ЕСТЬNULL(ПоступлениеТоваровТовары.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.Сумма, 0)) КАК Сумма,
	|	ПоступлениеТоваровТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.СуммаНДС, 0)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	ПоступлениеТоваровТовары.Номенклатура.Код КАК Код,
	|	ПоступлениеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	|	ПоступлениеТоваровТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	МИНИМУМ(ПоступлениеТоваровТовары.НомерСтроки + 1000) КАК НомерСтроки,
	|	ПоступлениеТоваровТовары.Ссылка.ДокОснование
	|ПОМЕСТИТЬ ТоварыПоФакту
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Товар)
	|	И ПоступлениеТоваровТовары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ЕСТЬNULL(ПоступлениеТоваровТовары.Цена, 0),
	|	ПоступлениеТоваровТовары.СтавкаНДС,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ПоступлениеТоваровТовары.Ссылка.ЦенаВключаетНДС,
	|	ПоступлениеТоваровТовары.Номенклатура.Код,
	|	ПоступлениеТоваровТовары.Номенклатура.Артикул,
	|	ПоступлениеТоваровТовары.Номенклатура.ЕдиницаИзмерения,
	|	ПоступлениеТоваровТовары.Ссылка,
	|	ПоступлениеТоваровТовары.Ссылка.ДокОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка КАК Ссылка,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	"""" КАК Упаковка,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.КоличествоПоПервичнымДокументам, 0)) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.КоличествоПоПервичнымДокументам, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СуммаПоПервичнымДокументам, 0) / ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.КоличествоПоПервичнымДокументам, 0)
	|	КОНЕЦ КАК Цена,
	|	СУММА(ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СуммаПоПервичнымДокументам, 0)) КАК Сумма,
	|	ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СтавкаНДС, 0) КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СуммаНДСПоПервичнымДокументам, 0)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.Код КАК Код,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.Артикул КАК Артикул,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	МИНИМУМ(УЧ_ПоступлениеТоваровТабличнаяЧасть.НомерСтроки) КАК НомерСтроки,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка КАК Заказ
	|ПОМЕСТИТЬ ТоварыПоДокументам
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК УЧ_ПоступлениеТоваровТабличнаяЧасть
	|ГДЕ
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Товар)
	|	И УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура,
	|	ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СтавкаНДС, 0),
	|	ВЫРАЗИТЬ(УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка.ЦенаВключаетНДС,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.Код,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.Артикул,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.КоличествоПоПервичнымДокументам, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.СуммаПоПервичнымДокументам, 0) / ЕСТЬNULL(УЧ_ПоступлениеТоваровТабличнаяЧасть.КоличествоПоПервичнымДокументам, 0)
	|	КОНЕЦ,
	|	УЧ_ПоступлениеТоваровТабличнаяЧасть.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыПоДокументам.Ссылка, ТоварыПоФакту.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ТоварыПоДокументам.Номенклатура, ТоварыПоФакту.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТоварыПоДокументам.Упаковка, ТоварыПоФакту.Упаковка) КАК Упаковка,
	|	ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) КАК КоличествоПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Цена, 0) КАК ЦенаПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) КАК СуммаПоДокументам,
	|	ТоварыПоДокументам.СтавкаНДС КАК СтавкаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) КАК СуммаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоФакту.Количество, 0) КАК КоличествоПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Цена, 0) КАК ЦенаПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) КАК СуммаПоФакту,
	|	ТоварыПоФакту.СтавкаНДС КАК СтавкаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) КАК СуммаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.Код, ТоварыПоФакту.Код) КАК Код,
	|	ЕСТЬNULL(ТоварыПоДокументам.Артикул, ТоварыПоФакту.Артикул) КАК Артикул,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЕдиницаИзмерения, ТоварыПоФакту.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЕдиницаИзмерения.Код, ТоварыПоФакту.ЕдиницаИзмерения.Код) КАК КодПоОКЕИ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНедостача,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) - ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) - ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) - ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) - ЕСТЬNULL(ТоварыПоФакту.Сумма, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНедостача,
	|	ЕСТЬNULL(ТоварыПоДокументам.НоменклатураНаименование, ТоварыПоФакту.НоменклатураНаименование) КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ТоварыПоФакту.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.НомерСтроки, ТоварыПоФакту.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТоварыПоДокументам КАК ТоварыПоДокументам
	|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыПоФакту КАК ТоварыПоФакту
	|		ПО ТоварыПоДокументам.Ссылка = ТоварыПоФакту.Ссылка
	|			И ТоварыПоДокументам.Номенклатура = ТоварыПоФакту.Номенклатура
	|			И ТоварыПоДокументам.Упаковка = ТоварыПоФакту.Упаковка
	|			И ТоварыПоДокументам.ЕдиницаИзмерения = ТоварыПоФакту.ЕдиницаИзмерения
	|			И ТоварыПоДокументам.СтавкаНДС = ТоварыПоФакту.СтавкаНДС
	|ГДЕ
	|	ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) <> ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоДокументам.Ссылка КАК Ссылка,
	|	ТоварыПоДокументам.Упаковка,
	|	ТоварыПоДокументам.ЕдиницаИзмерения,
	|	ТоварыПоДокументам.НоменклатураНаименование,
	|	ТоварыПоДокументам.НомерСтроки КАК НомерСтроки,
	|	ТоварыПоДокументам.Количество,
	|	ТоварыПоДокументам.Количество КАК КоличествоМест
	|ИЗ
	|	ТоварыПоДокументам КАК ТоварыПоДокументам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
КонецПроцедуры

// Функция формирует печатную форму Счета-фактуры.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДокументов.Ссылка КАК Ссылка,
	               |	ДанныеДокументов.Договор.Организация КАК Организация,
	               |	ДанныеДокументов.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	               |	ДанныеДокументов.Подразделение КАК Подразделение
	               |ПОМЕСТИТЬ ТаблицаДанныхДокументов
	               |ИЗ
	               |	Документ.УЧ_ПоступлениеТоваров КАК ДанныеДокументов
	               |ГДЕ
	               |	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	//ПоместитьВременнуюТаблицуУслуг(МенеджерВременныхТаблиц);
	ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	РеализацияТоваров.Организация КАК Контрагент,
	|	РеализацияТоваров.Контрагент КАК Организация,
	|	РеализацияТоваров.Контрагент.Код КАК Префикс,
	|	РеализацияТоваров.Организация КАК Грузополучатель,
	|	РеализацияТоваров.Контрагент КАК Грузоотправитель,
	|	"""" КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	РеализацияТоваров.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров КАК РеализацияТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО РеализацияТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО РеализацияТоваров.Ссылка = СчетаФактуры.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаТоваров.Ссылка КАК Ссылка,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьУслуги,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьТовары
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаТоваров.Ссылка) КАК НоменклатураДокументов
	|		ПО РеализацияТоваров.Ссылка = НоменклатураДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти", РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую данные счетов-фактур по таблице данных документов-оснований.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу
//	                                                    ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Организация,
//		Подразделение,
//		Склад.
//
Процедура ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	УЧ_Реализация.Ссылка КАК ДокументОснование,
	|	ЛОЖЬ КАК Исправление,
	|	УЧ_Реализация.НомерВходящегоСчФ КАК Номер,
	|	УЧ_Реализация.Организация,
	|	УЧ_Реализация.Организация КАК Грузоотправитель,
	|	УЧ_Реализация.Валюта,
	|	"""" КАК СтрокаПлатежноРасчетныеДокументы,
	|	УЧ_Реализация.ДатаВходящегоСчФ КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления
	|ПОМЕСТИТЬ ТаблицаСчетовФактур
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров КАК УЧ_Реализация";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.Количество КАК КоличествоУпаковок,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Сумма,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.сабТипыНоменклатуры.Товар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПечатьПоступлениеТоваров(МассивОбъектов, ОбъектыПечати) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Накладная";
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗапросПоТоварам.Ссылка.Номер КАК Номер,
	|	ЗапросПоТоварам.Ссылка КАК Ссылка,
	|	ЗапросПоТоварам.Ссылка.Дата КАК Дата,
	|	ЗапросПоТоварам.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ЗапросПоТоварам.Ссылка.Договор КАК ДоговорКонтрагента,
	|	ЗапросПоТоварам.Ссылка.Контрагент КАК Контрагент,
	|	ЗапросПоТоварам.Ссылка.Контрагент КАК Поставщик,
	|	ЗапросПоТоварам.Ссылка.Организация КАК Организация,
	|	ЗапросПоТоварам.Ссылка.Организация КАК Покупатель,
	|	ЗапросПоТоварам.Ссылка.Предприятие КАК Предприятие,
	|	ЗапросПоТоварам.Ссылка.Подразделение  КАК ПодразделениеОрганизации,
	|	ЗапросПоТоварам.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЗапросПоТоварам.Ссылка.Валюта КАК ВалютаДокумента,
	|	ЗапросПоТоварам.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЗапросПоТоварам.Номенклатура,
	|	ЗапросПоТоварам.Номенклатура.НаименованиеПолное КАК Товар,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ЗапросПоТоварам.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ЗапросПоТоварам.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ЗапросПоТоварам.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаХранения,
	|	ЗапросПоТоварам.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ЗапросПоТоварам.КоличествоМест КАК КоличествоМест,
	|	ЗапросПоТоварам.Количество КАК Количество,
	|	ЗапросПоТоварам.Коэффициент КАК Коэффициент,
	|	ЗапросПоТоварам.Цена КАК Цена,
	|	ЗапросПоТоварам.Сумма КАК Сумма,
	|	ЗапросПоТоварам.СуммаНДС КАК СуммаНДС,
	|	ЗапросПоТоварам.СтавкаНДС КАК СтавкаНДС,
	|	ЗапросПоТоварам.НомерСтроки КАК НомерСтроки,
	|	3  КАК ID
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|		СУММА(0) КАК КоличествоМест,
	|		СУММА(ПоступлениеТоваровУслуг.Количество) КАК Количество,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		1 КАК Коэффициент,
	|		ПоступлениеТоваровУслуг.Цена КАК Цена,
	|		СУММА(ПоступлениеТоваровУслуг.Сумма) КАК Сумма,
	|		СУММА(ПоступлениеТоваровУслуг.СуммаНДС) КАК СуммаНДС,
	|		ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.УЧ_ПоступлениеТоваров.ТабличнаяЧасть КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Ссылка,
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена,
	|		ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения,
	|		1) КАК ЗапросПоТоварам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоУслугам.Ссылка.Номер,
	|	ЗапросПоУслугам.Ссылка,
	|	ЗапросПоУслугам.Ссылка.Дата,
	|	ЗапросПоУслугам.Ссылка.ДатаВходящегоДокумента,
	|	ЗапросПоУслугам.Ссылка.Договор,
	|	ЗапросПоУслугам.Ссылка.Контрагент,
	|	ЗапросПоУслугам.Ссылка.Контрагент,
	|	ЗапросПоУслугам.Ссылка.Организация,
	|	ЗапросПоУслугам.Ссылка.Организация,
	|	ЗапросПоУслугам.Ссылка.Предприятие,
	|	ЗапросПоУслугам.Ссылка.Подразделение,
	|	ЗапросПоУслугам.Ссылка.СуммаДокумента,
	|	ЗапросПоУслугам.Ссылка.Валюта,
	|	ЗапросПоУслугам.Ссылка.СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА НЕ ЗапросПоУслугам.Содержание ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Содержание
	|		КОГДА НЕ ЗапросПоУслугам.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ЗапросПоУслугам.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ЗапросПоУслугам.Содержание ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Содержание
	|		КОГДА НЕ ЗапросПоУслугам.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ЗапросПоУслугам.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ЗапросПоУслугам.Номенклатура.Наименование
	|	КОНЕЦ,
	|	NULL,
	|	ЗапросПоУслугам.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	NULL,
	|	NULL,
	|	ЗапросПоУслугам.Количество,
	|	1,
	|	ЗапросПоУслугам.Цена,
	|	ЗапросПоУслугам.Сумма,
	|	ЗапросПоУслугам.СуммаНДС,
	|	ЗапросПоУслугам.СтавкаНДС,
	|	ЗапросПоУслугам.НомерСтроки,
	|	4
	|ИЗ
	|	Документ.УЧ_ПоступлениеТоваров.Услуги КАК ЗапросПоУслугам
	|ГДЕ
	|	ЗапросПоУслугам.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата,
	|	ID,
	|	НомерСтроки";;
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	// Определение количества строк в документах.
	КоличествоСтрокДокумента = Новый Соответствие;
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		КоличествоСтрок = 0;
		Пока Шапка.Следующий() Цикл
			Если Шапка.Номенклатура <> Null Тогда 
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;
		КонецЦикла;
		КоличествоСтрокДокумента.Вставить(Шапка.Ссылка, КоличествоСтрок);
	КонецЦикла;
	Шапка.Сбросить();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
 		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УЧ_ПоступлениеТоваров.ПФ_MXL_НакладнаяУпр");

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, "Приходная накладная");
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		СведенияОПоставщике     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик = Шапка.Контрагент;
		ОбластьМакета.Параметры.Предприятие = Шапка.Предприятие;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		СведенияОПокупателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата);
		ПредставлениеПокупателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПокупателя;
		ОбластьМакета.Параметры.Получатель = Шапка.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьСтроки = ?(ВыводитьКоды,	"СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		Сумма    = 0;
		СуммаНДС = 0;

		НомерСтроки = 1;
		Пока Шапка.Следующий() Цикл
			
			Если Шапка.Номенклатура = Null Тогда 
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			ОбластьМакета.Параметры.Товар       = СокрЛП(Шапка.Товар);

			ТабличныйДокумент.Вывести(ОбластьМакета);

			Сумма    = Сумма    + ?(ЗначениеЗаполнено(Шапка.Сумма), Шапка.Сумма, 0);
			СуммаНДС = СуммаНДС + ?(ЗначениеЗаполнено(Шапка.СуммаНДС), Шапка.СуммаНДС, 0);
			НомерСтроки = НомерСтроки + 1;

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести ИтогоНДС
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
		ОбластьМакета.Параметры.НДС = ?(Шапка.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета.Параметры.ИтоговаяСтрока ="Всего наименований " + КоличествоСтрокДокумента.Получить(Шапка.Ссылка)
		+ ", на сумму " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьПоступлениеТоваров()
