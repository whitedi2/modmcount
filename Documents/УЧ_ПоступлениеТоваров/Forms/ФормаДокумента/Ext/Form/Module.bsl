

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	//КонецЕсли;
	
	//++саб
	сабПриЧтенииНаСервере(ТекущийОбъект);
	//--саб
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Новый Структура("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты") );
	//КонецЕсли;
	
	//++саб
	сабПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	//--саб
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
	//	МодульУправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	//КонецЕсли;
	
	//++саб
	сабПриОткрытии(Отказ);
	//--саб
	
	ОбновитьДанныеКолонкиСуммаБезНДСПоТТН();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
	//	Если МодульУправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	//		ОбновитьЭлементыДополнительныхРеквизитов();
	//		МодульУправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	//	КонецЕсли;
	//КонецЕсли;
	
	//++саб
	сабОбработкаОповещения(ИмяСобытия, Параметр, Источник);
	//--саб
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
	//	МодульУправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
	//КонецЕсли;
	
КонецПроцедуры


// СтандартныеПодсистемы.КонтактнаяИнформация

// Поддержка дополнительных реквизитов.

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
	//	МодульУправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеСвойствамиКлиент");
	//	МодульУправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
	//	МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
	//	МодульУправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	//КонецЕсли;
	
КонецПроцедуры




// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура сабПриОткрытии(Отказ)
	
	//-lud 19/10/22 Вся проверка вынесена в модуль объекта, в процедуру Обработка заполнения
	//Отказ = сабОперОбщегоНазначенияНаКлиенте.ПроверкаСозданияНаОснованииНаКлиенте(Объект);
	//Если Отказ Тогда
	//	Возврат;	
	//КонецЕсли; 

	Если СтрНайти(Объект.Комментарий, "##НеверныйВидОперации") Тогда
		Предупреждение("Невозможно создать поступление от поставщика. Неверный вид операции: <" + Сред(Объект.Комментарий, 22) + ">!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		СоответствиеСчетаИФлага();
		Прочитать();
	КонецЕсли;
	
	ВидОперацииПриИзменении(Неопределено);
	СчетПриИзменении(Неопределено);
	
	ФлагВалютыПриИзменении("");
	
	Если Объект.Услуги.Количество() > 0 И Объект.ТабличнаяЧасть.Количество() = 0 Тогда
		Элементы.Группа1.ТекущаяСтраница = Элементы.Группа6;
	КонецЕсли;	
	
КонецПроцедуры
  
&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры
&НаКлиенте
Процедура ТабличнаяЧастьДоставкаПриИзменении(Элемент)
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.Доставка Тогда
		Элементы.ТабличнаяЧасть.ТекущиеДанные.СуммаДоставки = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество * Элементы.ТабличнаяЧасть.ТекущиеДанные.Доставка;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
	ТекКоличество = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.Цена = ?(ТекКоличество <> 0, Элементы.ТабличнаяЧасть.ТекущиеДанные.Сумма / ТекКоличество, 0);
	РассчитатьСумму(,,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаДоставкиПриИзменении(Элемент)
	ТекКоличество = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.Доставка = ?(ТекКоличество <> 0, Элементы.ТабличнаяЧасть.ТекущиеДанные.СуммаДоставки / ТекКоличество, 0);
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;	
	
	//УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабУчетПоПодразделениям", Объект.Предприятие));
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
	Объект.УчитыватьНДС = МАКС(Объект.Предприятие.УчетнаяПолитика.УчетНДС, Объект.УчитыватьНДС);
	Если Не Объект.УчитыватьНДС Тогда
		Объект.СуммаВключаетНДС = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФлагВалютыПриИзменении(Элемент)
	Элементы.ГруппаВалюты.Видимость = Объект.ФлагВалюты;
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	Объект.Курс = БюджетныйНаСервере.ТекущийКурс(Объект.Валюта,Объект.Дата,Объект.Предприятие);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСчета60()
	
	Счета60 = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Учетный.Ссылка КАК Ссылка
	               |ИЗ
	               |	ПланСчетов.Учетный КАК Учетный
	               |ГДЕ
	               |	Учетный.Родитель В ИЕРАРХИИ(&Счет60)
	               |	И НЕ Учетный.Ссылка = &Счет60";
	
	Запрос.УстановитьПараметр("Счет60", ПланыСчетов.Учетный.Счет60());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Счета60.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Счета60;
	
КонецФункции

&НаКлиенте
Процедура СчетПриИзменении(Элемент)

	//БюджетныйНаКлиенте.НазначитьСубконто(Элементы, ЭтаФорма, "Контрагент", "Договор",, Объект.СчетКонтрагента, , "ГруппаВалюты", НЕ Элемент = Неопределено);
	
	Элементы.Контрагент.Видимость = (Не Объект.СчетКонтрагента = УЧ_Сервер.СчетПоКоду("002"));
		
	//ВидимостьВНХ = (Объект.СчетКонтрагента = ПредопределенноеЗначение("ПланСчетов.Учетный.ВНХТоварные"));
	
	//Элементы.ПодразделениеВн.Видимость = ВидимостьВНХ;
	//Элементы.ПредприятиеПоставщик.Видимость = ВидимостьВНХ;
	//Элементы.ДоговорВн.Видимость = ВидимостьВНХ;
	
	//Если Объект.СчетКонтрагента = ПредопределенноеЗначение("ПланСчетов.Учетный.ПоставщикиИнв") Тогда
	//	Элементы.Договор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ОбъектыСтроительства");
	//Иначе
	//	Элементы.Договор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов");
	//КонецЕсли;
	
	СчетПриИзмененииНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзмененииНаКлиенте()
	
	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.СчетКонтрагента, Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1ТипЗначенияСтрока"];
	Наименование2 = ДанныеСчета["ВидСубконто2ТипЗначенияСтрока"];
	Наименование3 = ДанныеСчета["ВидСубконто3ТипЗначенияСтрока"];
	//УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.Контрагент.Заголовок = Наименование1;
	Элементы.Договор.Заголовок = Наименование2;
	//Элементы.Субконто3.ПодсказкаВвода = Наименование3;
	//Элементы.КорПодразделение.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	
	Элементы.Контрагент.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.Договор.Видимость = ЗначениеЗаполнено(Наименование2);
	//Элементы.Субконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	//Элементы.КорПодразделение.Видимость = УчетПоПодразделениям;
КонецПроцедуры


&НаСервере
Процедура СоответствиеСчетаИФлага()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекущийДокумент = Объект.Ссылка.ПолучитьОбъект();
		
		Если Объект.Флаг60_79 = 0 Тогда
			ТекущийДокумент.СчетКонтрагента = ПланыСчетов.Учетный.Счет6001();
		ИначеЕсли Объект.Флаг60_79 = 1 Тогда
			ТекущийДокумент.СчетКонтрагента = ПланыСчетов.Учетный.Счет7902();
		//ИначеЕсли Объект.Флаг60_79 = 2 Тогда
		//	ТекущийДокумент.СчетКонтрагента = ПланыСчетов.Учетный.УсловеноВнутренниеВзаиморасчеты
		КонецЕсли;	
		
		ТекущийДокумент.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСтатьяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекФорма = ПолучитьФорму("Справочник.СтатьиЗатрат.Форма.ФормаВыбораБезГрупп", , Элемент);
	
	НовыйОтбор = ТекФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	НовыйОтбор.ПравоеЗначение = "Транспортные";
	
	ТекФорма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РеализацияВидДоставкиПриИзменении(Элемент)
	
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.ВидДоставки = "Авто" Тогда
		Элементы.ТабличнаяЧасть.ТекущиеДанные.Статья = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ТранспортныеАвто");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура сабПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	ЗаполнитьСчетаПокупателя();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.УчитыватьНДС = Истина;
		Объект.ЦенаВключаетНДС = Истина;
		Если Не ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
			Объект.СчетКонтрагента = ПланыСчетов.Учетный.Счет6001();
		КонецЕсли;
		//Объект.ВидОперации = Перечисления.ВидыПоступлений.Поступление;
		Если ЗначениеЗаполнено(Объект.Подразделение) И ЗначениеЗаполнено(Объект.Подразделение.Склад) Тогда
			Объект.Склад = Объект.Подразделение.Склад;			
		КонецЕсли;
		
		Если Параметры.Свойство("ВидОперации") Тогда
			Объект.ВидОперации = Параметры.ВидОперации;		
		КонецЕсли;
		
	КонецЕсли;	
	
	//временно, позже изменить тип реквизита
	//Элементы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	//Элементы.Договор.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов");
	
	//Если Не БюджетныйНаСервере.РольАдминаДоступнаСервер() И Не сабОбщегоНазначения.ПолучитьЗначениеСвойства(БюджетныйНаСервере.ПолучитьПользователя(), "Возможность менять цену в заказах (Пользователь)") = Истина Тогда
	//	Элементы.ТабличнаяЧастьЦена.ТолькоПросмотр = Истина;
	//	Элементы.ТабличнаяЧастьСумма.ТолькоПросмотр = Истина;
	//	Элементы.ТабличнаяЧастьСтавкаНДС.ТолькоПросмотр = Истина;
	//	Элементы.ТабличнаяЧастьСуммаНДС.ТолькоПросмотр = Истина;
	//	Элементы.ТабличнаяЧастьВидЦеныПоставщика.ТолькоПросмотр = Истина;
	//	Элементы.ТабличнаяЧастьОбновитьЦену.Видимость = Ложь;
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДокОснование) ИЛИ ТипЗнч(Объект.ДокОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		УстановитьСвязьПоВиду();
	КонецЕсли;
	
	//++для опер учета
	ОперУчетВключен = Ложь;
	//Элементы.ТабличнаяЧастьСуммаБезНдсПоПервичнымДокументам.Видимость = ОперУчетВключен;
	//Элементы.ТабличнаяЧастьНоменклатураКод.Видимость = ОперУчетВключен;
	Элементы.Подразделение.АвтоОтметкаНезаполненного = ОперУчетВключен;
	Элементы.Подразделение.ОтметкаНезаполненного = ОперУчетВключен;
	Элементы.Договор.АвтоОтметкаНезаполненного = ОперУчетВключен;
	Элементы.Договор.ОтметкаНезаполненного = ОперУчетВключен;

	ЗаполнитьАртикул();
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	Объект.УчитыватьНДС = МАКС(Объект.Предприятие.УчетнаяПолитика.УчетНДС, Объект.УчитыватьНДС);
	Если Не Объект.УчитыватьНДС Тогда
		Объект.СуммаВключаетНДС = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязьПоВиду()
	Массив = Новый Массив;
	Массив.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив);
	Элементы.ДокОснование.ОграничениеТипа = ОписаниеТиповЧ;
	
	НоваяСвязь = Новый ПараметрВыбора("Отбор.ВидОперации", Перечисления.ВидыЗаказов.ЗакупкаТоваров);
	НоваяСвязь2 = Новый ПараметрВыбора("Отбор.Подразделение", Объект.Подразделение);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НоваяСвязь);
	НовыйМассив.Добавить(НоваяСвязь2);
	НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ДокОснование.ПараметрыВыбора = НовыеСвязи;
КонецПроцедуры


&НаСервере
Функция ЗаполнитьСчетаПокупателя()
	
	МассивСч = Новый Массив;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Учетный.Ссылка КАК Ссылка,
	               |	Учетный.Наименование КАК Наименование,
	               |	Учетный.Код КАК Код
	               |ИЗ
	               |	ПланСчетов.Учетный КАК Учетный
	               |ГДЕ
	               |	Учетный.Ссылка В ИЕРАРХИИ (&Счета)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
	
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Учетный.Счет60());
	Счета.Добавить(ПланыСчетов.Учетный.Счет7902());
	Счета.Добавить(ПланыСчетов.Учетный.Счет7601());
	Счета.Добавить(ПланыСчетов.Учетный.НайтиПоКоду("002"));
	Запрос.УстановитьПараметр("Счета", Счета);
	Результат = Запрос.Выполнить();
	МассивСч = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Элементы.Счет.СписокВыбора.ЗагрузитьЗначения(МассивСч);
	Для каждого ТекСчет Из Элементы.Счет.СписокВыбора Цикл
		ТекСчет.Представление = Строка(ТекСчет.Значение) + " " + ТекСчет.Значение.Наименование;	
	КонецЦикла; 
	
КонецФункции


&НаКлиенте
Процедура СоздатьСоответствие(Команда)
	
	ТекЭлемент = Элементы.Услуги.ТекущиеДанные[СтрЗаменить(Элементы.Услуги.ТекущийЭлемент.Имя, "Услуги", "")];
	ФормаСоответствия = ПолучитьФорму("Справочник.СоответствиеОбъектов.Форма.ФормаЭлемента");
	ФормаСоответствия.Объект.Значение77 = ТекЭлемент;
	ФормаСоответствия.Объект.Предприятие = Объект.Предприятие;
	ФормаСоответствия.Объект.ТипДокумента = "Поступление товаров и услуг";
	ФормаСоответствия.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура сабОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФормуУч_Операция" И Параметр = Объект.Ссылка Тогда
		ЭтаФорма.Прочитать();
		ОбновитьОтображениеДанных();
	ИначеЕсли ИмяСобытия = "Запись_Файл" Тогда
		Если Параметр.Свойство("ФормаВладелецУИД") И Параметр.ФормаВладелецУИД = ЭтаФорма.УникальныйИдентификатор Тогда
			сабОбщегоНазначения.ПрикрепитьФайлКДокументу(Параметр); 
		КонецЕсли
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура сабПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Услуги.ТекущиеДанные, "Услуги");
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(ТекДанные = Неопределено, ИмяТЧ = Неопределено, ПересчитыватьСумму = Истина)
	
	Если ТекДанные = Неопределено Тогда
		ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	КонецЕсли;
	Если ИмяТч = Неопределено Тогда
		ИмяТЧ = "ТабличнаяЧасть";
	КонецЕсли;
	
	Если Не ТекДанные = Неопределено Тогда
		Если ПересчитыватьСумму Тогда
			ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
		КонецЕсли; 
		сабОбщегоНазначенияБУХКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, ИмяТЧ,,,ПересчитыватьСумму);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	РассчитатьСумму(Элементы.Услуги.ТекущиеДанные, "Услуги");
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		
		Если ТипЗнч(ТекДанные.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.Номенклатура, "СтавкаНДС, СтавкаНДС.Ставка, Счет10, ЕдиницаИзмерения");
			//Установим НДС
			ТекДанные.СтавкаНДС = ТекРеквизиты.СтавкаНДС;
			
			//Установим вид цен и рассчитаем цены
			ТекДанные.ВидЦеныПоставщика = ЗаполнитьВидЦен(ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
			ТекДанные.Цена = РассчитатьЦенуПоВидуЦен(ТекДанные.ВидЦеныПоставщика, ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()), Объект.ДокОснование);
			
			//установим счет учета
			ТекДанные.СчетУчета = ТекРеквизиты.Счет10;
			
			ТекДанные.Упаковка = ТекРеквизиты.ЕдиницаИзмерения;
			ТекДанные.ЕдиницаИзмерения = ТекРеквизиты.ЕдиницаИзмерения;
			
		ИначеЕсли ТипЗнч(ТекДанные.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			
			ТекДанные.СчетУчета = УЧ_Сервер.СчетПоКоду("01");
			
		КонецЕсли;
	КонецЕсли;
	
	РассчитатьСумму();
	
КонецПроцедуры

#Область ПоискПоШК

&НаКлиенте
Процедура ПодобратьНоменклатуруПоШК(Команда)
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	ИмяТЧ = "ТабличнаяЧасть";
	ИмяРеквизитаНоменклатуры = "Номенклатура";
	ИмяРеквизитаКоличества = "Количество";
	сабОперОбщегоНазначенияНаКлиенте.ОбработатьЗаполнениеПоШтрихкодуНаКлиенте(ЭтаФорма, ИмяТЧ, ИмяРеквизитаНоменклатуры, ИмяРеквизитаКоличества, Штрихкод);	
	ТабличнаяЧастьНоменклатураПриИзменении(Неопределено);
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПоПервичнымДокументамПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.СуммаПоПервичнымДокументам = ТекДанные.КоличествоПоПервичнымДокументам * ТекДанные.Цена;
	КонецЕсли;	
	
	ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.СтавкаНДС, "Ставка");
	Если НЕ ТекРеквизиты = Неопределено Тогда
		ТекДанные.СуммаНДСПоПервичнымДокументам = ТекДанные.СуммаПоПервичнымДокументам / (1+ТекРеквизиты.Ставка/100) * (ТекРеквизиты.Ставка/100);
	КонецЕсли;
	
	Если НЕ ТекРеквизиты = Неопределено Тогда
		ТекДанные.СуммаБезНДСПоПервичнымДокументам = ТекДанные.СуммаПоПервичнымДокументам - ТекДанные.СуммаНДСПоПервичнымДокументам;
		ИтогСуммыБезНдсПоТТН = Объект.ТабличнаяЧасть.Итог("СуммаБезНДСпоПервичнымДокументам")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	СчетВДоговоре = БюджетныйНаСервере.ВернутьРеквизит(Объект.Договор, "СчетВзаиморасчетов");
	Если ЗначениеЗаполнено(СчетВДоговоре) Тогда
		Объект.СчетКонтрагента = СчетВДоговоре;
	КонецЕсли;
	
	Если Объект.СчетКонтрагента = УЧ_Сервер.СчетПоКоду("79.02") Тогда
		Объект.ПредприятиеПоставщик = БюджетныйНаСервере.ВернутьРеквизит(Объект.Контрагент, "ПредприятиеХодлинга");
		Объект.ДоговорВн = БюджетныйНаСервере.ВернутьРеквизит(Объект.Договор, "ВнутрихолдинговыйДоговор");
		Элементы.ПодразделениеВн.Видимость = Истина;
		//Элементы.ПредприятиеПоставщик.Видимость = Истина;
		Элементы.ДоговорВн.Видимость = Истина;
	Иначе
		Элементы.ПодразделениеВн.Видимость = Ложь;
		//Элементы.ПредприятиеПоставщик.Видимость = Ложь;
		Элементы.ДоговорВн.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Если НЕ Элемент = Неопределено Тогда
		ПодразделениеПриИзмененииСервер();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		РеквизитыПодразделения = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Подразделение, "Склад, Организация");
		Если ЗначениеЗаполнено(РеквизитыПодразделения.Склад) Тогда
			Объект.Склад = РеквизитыПодразделения.Склад;
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыПодразделения.Организация) Тогда
			Объект.Организация = РеквизитыПодразделения.Организация;
		КонецЕсли;
	КонецЕсли; 
	КонтрагентПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.КраткийСостав = "";
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			ТекСтрока.Склад = Объект.Склад;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
			ТекСтрока.Подразделение = Объект.Подразделение;
		КонецЕсли; 
		Объект.КраткийСостав = Объект.КраткийСостав + Строка(ТекСтрока.Номенклатура) + "(" + Формат(ТекСтрока.Количество, "ЧДЦ=0; ЧГ=") + "), ";
	КонецЦикла;
	Если НЕ Объект.КраткийСостав = "" Тогда
		Объект.КраткийСостав = Лев(Объект.КраткийСостав, СтрДлина(Объект.КраткийСостав) - 2);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСтавкаНДСПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьВидЦен(Номенклатура, Предприятие, Подразделение, Контрагент, Дата)

	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ЦеныНоменклатурыСрезПоследних.ВидЦены
	//|ИЗ
	//|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//|			&Период,
	//|			ВидЦены.ЦенаПоставщика
	//|				И ВидЦены.Поставщик = &Контрагент
	//|				И Предприятие = &Предприятие
	//|				И Номенклатура = &Номенклатура
	//|				И Подразделение = &Подразделение) КАК ЦеныНоменклатурыСрезПоследних";
	//Запрос.УстановитьПараметр("Период", Дата);
	//Запрос.УстановитьПараметр("Контрагент", Контрагент);
	//Запрос.УстановитьПараметр("Предприятие", Предприятие);
	//Запрос.УстановитьПараметр("Подразделение", Подразделение);
	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.ВидЦены;
	//КонецЦикла;
	
	Возврат Справочники.ВидыЦен.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция РассчитатьЦенуПоВидуЦен(ВидЦены, Номенклатура, Предприятие, Подразделение, Контрагент, Дата, ДокЗаказ)

	//Если ЗначениеЗаполнено(ДокЗаказ) Тогда
	//	Период = ?(Контрагент.УсловияЦенПоставки = Перечисления.УсловияЦенПоставки.НаДатуПоставки, Дата, ДокЗаказ.Дата);
	//Иначе	
	//	Период = Дата;
	//КонецЕсли;	
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	МаркетинговыеМероприятия.ЦенаПоступления,
	//|	МаркетинговыеМероприятия.Номенклатура,
	//|	МаркетинговыеМероприятия.ДатаДокумента
	//|ПОМЕСТИТЬ ВТ_МаркетинговыеМероприятия
	//|ИЗ
	//|	РегистрСведений.МаркетинговыеМероприятия КАК МаркетинговыеМероприятия
	//|ГДЕ
	//|	МаркетинговыеМероприятия.Предприятие = &Предприятие
	//|	И МаркетинговыеМероприятия.Подразделение = &Подразделение
	//|	И МаркетинговыеМероприятия.Номенклатура = &Номенклатура
	//|	И МаркетинговыеМероприятия.ДатаЗаказовНач <= &Период
	//|	И МаркетинговыеМероприятия.ДатаЗаказовКон >= &Период
	//|	И МаркетинговыеМероприятия.ЦенаПоступления <> 0
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_МаркетинговыеМероприятия.Номенклатура,
	//|	МАКСИМУМ(ВТ_МаркетинговыеМероприятия.ДатаДокумента) КАК ДатаДокумента
	//|ПОМЕСТИТЬ ВТ_МаксДатаМаркетинговогоМероприятия
	//|ИЗ
	//|	ВТ_МаркетинговыеМероприятия КАК ВТ_МаркетинговыеМероприятия
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_МаркетинговыеМероприятия.Номенклатура
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_МаркетинговыеМероприятия.ЦенаПоступления,
	//|	ВТ_МаркетинговыеМероприятия.Номенклатура
	//|ПОМЕСТИТЬ ВТ_МаркетинговыеМероприятияИтог
	//|ИЗ
	//|	ВТ_МаксДатаМаркетинговогоМероприятия КАК ВТ_МаксДатаМаркетинговогоМероприятия
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаркетинговыеМероприятия КАК ВТ_МаркетинговыеМероприятия
	//|		ПО ВТ_МаксДатаМаркетинговогоМероприятия.Номенклатура = ВТ_МаркетинговыеМероприятия.Номенклатура
	//|			И ВТ_МаксДатаМаркетинговогоМероприятия.ДатаДокумента = ВТ_МаркетинговыеМероприятия.ДатаДокумента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЕСТЬNULL(ВТ_МаркетинговыеМероприятияИтог.ЦенаПоступления, ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	//|ИЗ
	//|	ВТ_МаркетинговыеМероприятияИтог КАК ВТ_МаркетинговыеМероприятияИтог
	//|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//|				&Период,
	//|				ВидЦены.ЦенаПоставщика
	//|					И ВидЦены.Поставщик = &Контрагент
	//|					И Предприятие = &Предприятие
	//|					И Номенклатура = &Номенклатура
	//|					И ВидЦены = &ВидЦены
	//|					И Подразделение = &Подразделение) КАК ЦеныНоменклатурыСрезПоследних
	//|		ПО ВТ_МаркетинговыеМероприятияИтог.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
	//Запрос.УстановитьПараметр("Период", Период);
	//Запрос.УстановитьПараметр("Контрагент", Контрагент);
	//Запрос.УстановитьПараметр("Предприятие", Предприятие);
	//Запрос.УстановитьПараметр("Подразделение", Подразделение);
	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.Цена;
	//КонецЦикла;
	
	Возврат 0;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьЦену(Команда)
	
	Для Каждого ТекДанные Из Объект.ТабличнаяЧасть Цикл		
		//Установим вид цен и рассчитаем цены
		ТекДанные.ВидЦеныПоставщика = ЗаполнитьВидЦен(ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
		ТекДанные.Цена = РассчитатьЦенуПоВидуЦен(ТекДанные.ВидЦеныПоставщика, ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()), Объект.ДокОснование);
		
		//Установим НДС и артикул
		Если ЗначениеЗаполнено(ТекДанные.Номенклатура) И Не ЗначениеЗаполнено(ТекДанные.СтавкаНДС) Тогда
			ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.Номенклатура, "СтавкаНДС, СтавкаНДС.Ставка, Код");
			ТекДанные.СтавкаНДС = ТекРеквизиты.СтавкаНДС;
		КонецЕсли;
		
		ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
		
		//лишний запрос делаем
		ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.СтавкаНДС, "Ставка");
		Если НЕ ТекРеквизиты = Неопределено Тогда
			ТекДанные.СуммаНДС = ТекДанные.Сумма / ((100+ТекРеквизиты.Ставка)/100) * (ТекРеквизиты.Ставка/100);
		КонецЕсли;
		
		РассчитатьСумму();
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииСервер();
	
	ДоговорПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииСервер()
	РеквизитыДоговора = сабОперОбщегоНазначения.ПолучитьДоговорКонтрагентаПоУмолчанию(Объект.Контрагент, ?(Объект.Подразделение.ПроизводственноеПодразделение, Неопределено, Объект.Организация));
	Если ЗначениеЗаполнено(РеквизитыДоговора.Договор) Тогда
		Объект.Договор = РеквизитыДоговора.Договор;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БонуснаяПродукцияКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.БонуснаяПродукция.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура БонуснаяПродукцияЦенаПриИзменении(Элемент)
	ТекДанные = Элементы.БонуснаяПродукция.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура БонуснаяПродукцияНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.БонуснаяПродукция.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		//Установим вид цен и рассчитаем цены
		ТекДанные.ВидЦеныПоставщика = ЗаполнитьВидЦен(ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
		ТекДанные.Цена = РассчитатьЦенуПоВидуЦен(ТекДанные.ВидЦеныПоставщика, ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()), Объект.ДокОснование);
		ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереопределитьСвязиПараметровВыбора()
	
	//НовыйМассив = Новый Массив();
	//НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Контрагент"));
	//НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Предприятие", "Объект.Предприятие"));
	//Если Не Объект.Подразделение.ПроизводственноеПодразделение Тогда
	//	НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Объект.Организация"));
	//КонецЕсли;		
	//
	//НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	//
	//Элементы.Договор.СвязиПараметровВыбора = НовыеСвязи;
	
КонецПроцедуры
&НаКлиенте
Процедура ДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//ПереопределитьСвязиПараметровВыбора();	

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеКолонкиСуммаБезНДСПоТТН()
	
	Для Каждого Стр Из Объект.ТабличнаяЧасть Цикл
		Стр.СуммаБезНдсПоПервичнымДокументам = Стр.СуммаПоПервичнымДокументам - Стр.СуммаНДСПоПервичнымДокументам;
	КонецЦикла;
	
	ИтогСуммыБезНдсПоТТН = Объект.ТабличнаяЧасть.Итог("СуммаБезНДСпоПервичнымДокументам")
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьДанныеКолонкиСуммаБезНДСПоТТН();
	Оповестить("ОбновитьСписокНачисленийПредприятий");
	Оповестить("ОповеститьРегистрОбработанных");
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеВнПриИзменении(Элемент)
	
	Объект.ОрганизацияВн = БюджетныйНаСервере.ВернутьРеквизит(Объект.ПодразделениеВн, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьExcel(Команда)
	
	ФормаЗагрузки = ПолучитьФорму("ОбщаяФорма.ФормаЗагрузкиИзExcel", Новый Структура("ВидЗагрузки", "ЗагрузкаВТЧТовары"));
	
	ПутьКФайлу = ФормаЗагрузки.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		СтруктураВозврата = ФормаЗагрузки.ПолучитьДанныеПоЗагрузке(ПутьКФайлу);
		Для Каждого ЭлементСтруктурыВозврата Из СтруктураВозврата Цикл
			ТекДанные = Объект.ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(ТекДанные, ЭлементСтруктурыВозврата.Значение);
			Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
				ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.Номенклатура, "СтавкаНДС, СтавкаНДС.Ставка");
				ТекДанные.СтавкаНДС = ТекРеквизиты.СтавкаНДС;
				//Установим вид цен и рассчитаем цены
				ТекДанные.ВидЦеныПоставщика = ЗаполнитьВидЦен(ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
				//ТекДанные.Цена = РассчитатьЦенуПоВидуЦен(ТекДанные.ВидЦеныПоставщика, ТекДанные.Номенклатура, Объект.Предприятие, Объект.Подразделение, Объект.Контрагент, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()), Объект.ДокОснование);
				ТекДанные.Цена = ЭлементСтруктурыВозврата.Значение.ЦенаExel; 
			КонецЕсли;
			ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
			сабОбщегоНазначенияБУХКлиентСервер.РассчитатьСуммуНДСТабЧасти(ТекДанные, Объект.СуммаВключаетНДС);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ВидОперацииПриИзмененииНаСервере(Не Элемент = Неопределено);
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииНаСервере(Изменять)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыПоступлений.Поступление") Тогда
		Элементы.Группа2.Видимость = Истина;
		//Элементы.Группа15.Видимость = Истина;
		Элементы.Прочие.Видимость = Истина;
		Элементы.Группа6.Видимость = Ложь;
		Элементы.Склад.Видимость = Истина;
		Элементы.НомерВходящегоДокумента.Заголовок = "Накладная №";
		Если Изменять Тогда
			Объект.Услуги.Очистить();		
		КонецЕсли;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыПоступлений.ТМЦНаСписание") Тогда
		Элементы.Группа2.Видимость = Ложь;
		//Элементы.Группа15.Видимость = Ложь;
		Элементы.Прочие.Видимость = Ложь;
		Элементы.Группа6.Видимость = Истина;
		Элементы.Склад.Видимость = Ложь;
		Элементы.УслугиСодержание.Заголовок = "Содержание";
		Элементы.УслугиНоменклатура.Видимость = Ложь;
		Элементы.НомерВходящегоДокумента.Заголовок = "Накладная №";
		Элементы.Группа6.Заголовок = "ТМЦ (на списание)";
		Если Изменять Тогда
			Объект.Услуги.Очистить();		
		КонецЕсли;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыПоступлений.ПоступлениеУслуг") Тогда
		Элементы.Группа2.Видимость = Ложь;
		//Элементы.Группа15.Видимость = Ложь;
		Элементы.Прочие.Видимость = Ложь;
		Элементы.Группа6.Видимость = Истина;
		Элементы.Склад.Видимость = Ложь;
		Элементы.УслугиНоменклатура.Видимость = Истина;
		Элементы.Группа6.Заголовок = "Услуги";
		Элементы.НомерВходящегоДокумента.Заголовок = "Акт №";
		Если Изменять Тогда
			Объект.ТабличнаяЧасть.Очистить();		
		КонецЕсли;
	Иначе
		Элементы.Группа2.Видимость = Истина;
		Элементы.Группа6.Видимость = Истина;
		//Элементы.Группа15.Видимость = Истина;
		Элементы.Прочие.Видимость = Истина;
		Элементы.Склад.Видимость = Истина;
		Элементы.УслугиНоменклатура.Видимость = Истина;
		Элементы.НомерВходящегоДокумента.Заголовок = "Накладная №";
		Элементы.Группа6.Заголовок = "Услуги";
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыПоступлений.ПоступлениеОС") Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элементы.ТабличнаяЧастьНоменклатура.ОграничениеТипа = ОписаниеТиповС;
		Элементы.ТабличнаяЧастьНоменклатура.Заголовок = "Основное ср-во";
		Если Изменять Тогда
			Объект.Услуги.Очистить();		
		КонецЕсли;
	Иначе
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элементы.ТабличнаяЧастьНоменклатура.ОграничениеТипа = ОписаниеТиповС;
		Элементы.ТабличнаяЧастьНоменклатура.Заголовок = "Номенклатура";
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура УслугиСчетЗатратПриИзменении(Элемент)
	ПоляОбъекта = Новый Структура("Счет, Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
	"СчетЗатрат", "Субконто1", "Субконто2", "Субконто3", Объект.Предприятие, "Подразделение", Элементы, "УслугиСубконто1", "УслугиСубконто2", "УслугиСубконто3", "УслугиПодразделение");
	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.Услуги.ТекущиеДанные, ПоляОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьАртикул();
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.СчетЗатрат КАК Счет
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&Табл КАК Табл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	               |ИЗ
	               |	Справочник.Предприятия КАК Предприятия
	               |ГДЕ
	               |	Предприятия.Ссылка В(&Предприятие)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ) КАК Количественный,
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет) КАК Счет,
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ) КАК Валютный,
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	               |		ПО Врем.Счет = Учетный.Ссылка,
	               |	УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет),
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И УчетПоПодразделениямПредприятия.УчетПоПодразделениям";
	
	Запрос.УстановитьПараметр("Табл", Объект.Услуги.Выгрузить());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Соотв = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	КонецЦикла;
	
	
	Для Каждого СтрокаТаблицы Из Объект.Услуги Цикл
		СтруСчета = Соотв.Получить(СтрокаТаблицы.СчетЗатрат);
		Если СтруСчета = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		КоличествоСубконто   = СтруСчета.КоличествоСубконто;
		Для Индекс = 1 По 3 Цикл
			СтрокаТаблицы["Субконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
		КонецЦикла;
		//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
		СтрокаТаблицы["Подразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
		//Валютный = СтруСчета.Валютный;
		//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
		//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСтавкаНДСПриИзменении(Элемент)
	РассчитатьСумму(Элементы.Услуги.ТекущиеДанные, "Услуги");
КонецПроцедуры

#Область ПодборТоваров

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборТовары(Команда)

	ПараметрыПодбора = ПолучитьПараметрыПодбора("ТабличнаяЧасть");
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.Форма", ПараметрыПодбора,
			ЭтаФорма, УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИмяТаблицы)

	ЭтоВставкаИзБуфера = ВыбранноеЗначение.Свойство("ЭтоВставкаИзБуфера");
	СписокСвойств = Неопределено;
	Если ЭтоВставкаИзБуфера Тогда
		
		ТаблицаТоваров = ВыбранноеЗначение.Данные;
		СписокСвойств = ВыбранноеЗначение.СписокСвойств;
		
	Иначе
		
		ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
		
	КонецЕсли;
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	ЗаполнитьСтавкиНДСВРознице = Ложь;
	
	СтрокиДляЗаполненияСчетов = Новый Массив;
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		СведенияОНоменклатуре = БюджетныйНаСервере.ВернутьРеквизиты(СтрокаТовара.Номенклатура, "ЕдиницаИзмерения, Счет10, СтавкаНДС");
		СтрокаТабличнойЧасти = Объект[ИмяТаблицы].Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТовара, СписокСвойств);
		СтрокиДляЗаполненияСчетов.Добавить(СтрокаТабличнойЧасти);
		СтрокаТабличнойЧасти.Упаковка =	СтрокаТовара.Номенклатура.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.СтавкаНДС	= СтрокаТовара.Номенклатура.СтавкаНДС;
		Если СведенияОНоменклатуре = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//СтрокаТабличнойЧасти.СчетУчета		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчета),
		//СтрокаТабличнойЧасти.СчетУчета, СведенияОНоменклатуре.Счет10);
	КонецЦикла;
	
	
	
	Если ЭтоВставкаИзБуфера Тогда
		
		ВыбранноеЗначение.КоличествоДобавленныхСтрок = СтрокиДляЗаполненияСчетов.Количество();
		
	КонецЕсли;
	

	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыПодбора(ИмяТаблицы)

	ДатаРасчетов		= ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()),ТекущаяДата(), Объект.Дата);
	
	ЗаголовокПодбора	= НСтр("ru = 'Подбор номенклатуры в %1 (%2)'");
	Если ИмяТаблицы = "Товары" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Товары'");
	ИначеЕсли ИмяТаблицы = "ВозвратнаяТара" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Возвратная тара'");
	КонецЕсли;
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, ПредставлениеТаблицы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаРасчетов"  , ДатаРасчетов);
	ПараметрыФормы.Вставить("Валюта"        , ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	ПараметрыФормы.Вставить("Организация"   , Объект.Организация);
	ПараметрыФормы.Вставить("Подразделение" , Объект.Подразделение);
	ПараметрыФормы.Вставить("Заголовок"     , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ВидПодбора"    , "");
	ПараметрыФормы.Вставить("ИмяТаблицы"    , ИмяТаблицы);
	ПараметрыФормы.Вставить("Услуги"        , ИмяТаблицы = "Услуги");
	ПараметрыФормы.Вставить("ПоказыватьОстатки"  , Истина);
	ПараметрыФормы.Вставить("ЕстьКоличество", Истина);
	ПараметрыФормы.Вставить("Предприятие" , Объект.Предприятие);
	
	Возврат ПараметрыФормы;

КонецФункции

#КонецОбласти

&НаСервере
Процедура ЗаполнитьАртикул()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&СписокНоменклатур)";
	Запрос.УстановитьПараметр("СписокНоменклатур", Объект.ТабличнаяЧасть.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	
	ТаблицаАртикулов =  Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЧ Из Объект.ТабличнаяЧасть Цикл
		НайденныеСтроки = ТаблицаАртикулов.НайтиСтроки(Новый Структура("Ссылка", СтрокаТЧ.Номенклатура));
		Для Каждого СтрокаСАртикулом Из НайденныеСтроки Цикл
			СтрокаТЧ.Артикул = СтрокаСАртикулом.Код;
			СтрокаТЧ.ЕдиницаИзмерения = СтрокаСАртикулом.ЕдиницаИзмерения;
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	


#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти


