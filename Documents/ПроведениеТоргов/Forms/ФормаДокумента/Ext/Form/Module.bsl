
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++саб
	сабПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	//--саб
	
КонецПроцедуры

&НаСервере
Процедура сабПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзEXCEL(Команда)
	
	ПутьКФайлу = ОткрытьФормуМодально("Документ.ПроведениеТоргов.Форма.ФормаЗагрузки");
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Данные = Неопределено;
		СоответствиеНоменклатур = Новый Соответствие;
		
		ЧислоСтрок = 0;
		КоличествоСтраниц = 1;
		
		XLSОбъект = Новый COMОбъект("Excel.Application");
		ПодключениеКФайлу(ЧислоСтрок, Данные, XLSОбъект, ПутьКФайлу);
		
		НомерЗаказа = "";
		СтруДок = Новый Структура;
		МассивСтрок = Новый Массив;
		ДатаДок = Неопределено;
		ВремяНачала = ТекущаяДата();
		ОсталосьВремени = 0;
		СкоростьЗагрузки = 0;
		Для счСтроки = 1 по ЧислоСтрок Цикл
			Состояние("Загрузка", счСтроки / ЧислоСтрок * 100);
			СтруктураСтроки = Новый Структура;
			КодНоменклатуры = СтрЗаменить(СтрЗаменить(Данные[0][счСтроки], " ", ""), Символы.НПП, "");
			ТекНоменклатура = НайтиНоменклатуру(КодНоменклатуры);
			Если Не ЗначениеЗаполнено(ТекНоменклатура) Тогда
				Сообщить("Номенклатура с кодом " + КодНоменклатуры + " не найдена");
				Продолжить;
			КонецЕсли;	
			СтруктураСтроки.Вставить("Номенклатура", ТекНоменклатура);
			СтруктураКонтрагенВидЦены = НайтиКонтрагентаИЦену(СтрЗаменить(СтрЗаменить(Данные[1][счСтроки], " ", ""), Символы.НПП, ""));
			Если Не СтруктураКонтрагенВидЦены = Неопределено Тогда
				СтруктураСтроки.Вставить("Контрагент", СтруктураКонтрагенВидЦены.Контрагент);
				СтруктураСтроки.Вставить("ВидЦены", СтруктураКонтрагенВидЦены.ВидЦены);
			КонецЕсли;	
			СтруктураСтроки.Вставить("Цена", СтрЗаменить(СтрЗаменить(Данные[2][счСтроки], " ", ""), Символы.НПП, "")); 
			НоваяСтрокаТоваров = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, СтруктураСтроки);
		КонецЦикла;
		XLSОбъект.Application.Quit();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеКФайлу(ЧислоСтрок, Данные, XLSОбъект = Неопределено, ПутьКФайлу)
	
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите путь к файлу!";
		Сообщение.Поле = "Файл";
		Сообщение.Сообщить(); 	
		Возврат;
	КонецЕсли;
	
	Если НЕ ПутьКФайлу = Неопределено Тогда
		Если XLSОбъект = Неопределено Тогда
			XLSОбъект = Новый COMОбъект("Excel.Application");
		КонецЕсли;
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		КонечнаяСтрока = Лист.Cells.SpecialCells(11).Row;
		ЧислоСтрок = КонечнаяСтрока - 1;
		Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(КонечнаяСтрока,40));	
		Данные = Область.Value.Выгрузить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиНоменклатуру(Номер)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Код = &Код
	|	И НЕ Номенклатура.ЭтоГруппа";
	Запрос.УстановитьПараметр("Код", Номер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;			
	КонецЦикла;
	
	Возврат Справочники.Номенклатура.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиКонтрагентаИЦену(Номер)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка,
	|	ВидыЦен.Ссылка КАК ВидЦены
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
	|		ПО Контрагенты.Ссылка = ВидыЦен.Поставщик
	|ГДЕ
	|	Контрагенты.Код = &Код
	|	И НЕ Контрагенты.ЭтоГруппа";
	Запрос.УстановитьПараметр("Код", Номер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата = Новый Структура;
	
	Пока Выборка.Следующий() Цикл
		СтруктураВозврата.Вставить("Контрагент", Выборка.Ссылка);
		СтруктураВозврата.Вставить("ВидЦены", Выборка.ВидЦены);
		Возврат СтруктураВозврата;			
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПерезаполнитьТаблицуПодразделений();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьТаблицуПодразделений()
	
	Объект.Подразделения.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПредприятия.Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	СтруктураПредприятия.Владелец = &Владелец
	|	И СтруктураПредприятия.Организация = &Организация";
	Запрос.УстановитьПараметр("Владелец", Объект.Предприятие);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаПодразделений = Объект.Подразделения.Добавить();
		СтрокаПодразделений.Подразделение = Выборка.Ссылка;
	КонецЦикла;	
	
КонецПроцедуры	