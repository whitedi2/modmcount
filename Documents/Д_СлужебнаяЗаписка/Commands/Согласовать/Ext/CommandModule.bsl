
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	//ОтправлятьВсем = Ложь;
	//Если Более3Согласователей(ПараметрКоманды) Тогда
	//	Если НЕ Вопрос("Внимание! Служебная записка имеет более 3-х рецензентов. Вы уверены что нужно утверждение в порядке очереди, а не всем сразу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
	//		ОтправлятьВсем = Истина;
	//		Возврат;		
	//	КонецЕсли;
	//КонецЕсли;
	
	Если Не ПроверкаВозможностиЗапускаБП(ПараметрКоманды) Тогда
		Возврат
	КонецЕсли;
	
	БП = БПСервер.ПоискБП("Согласование1", ПараметрКоманды);
	Если БП = Неопределено Тогда
		БП = БПСервер.ПоискБП("Согласование2", ПараметрКоманды);
	КонецЕсли;
	Если БП = Неопределено Тогда
		БП = БПСервер.ПоискБП("Согласование3", ПараметрКоманды);
	КонецЕсли;
	Если БП = Неопределено Тогда
		БП = БПСервер.ПоискБП("СогласованиеОбщее", ПараметрКоманды);
	КонецЕсли;
	
	Если БП <> Неопределено Тогда
		Если БюджетныйНаСервере.ВернутьРеквизит(БП, "Стартован") Тогда
			Если ТочкаМаршрутаДоработки(ПараметрКоманды) Тогда
				ВыполнитьЗадачуДоработки(БП, ПараметрКоманды);
				Оповестить("ОбновитьСписокЗадач");
				Оповестить("Пересчитать", Новый Структура("ТекущийБизнесПроцесс", БП));
				ОповеститьОбИзменении(ПараметрКоманды);
			Иначе
				Предупреждение("Бизнес-процесс согласования уже запущен.");
			КонецЕсли;
			Возврат;
		Иначе
			ОткрытьФорму(БПСервер.ПолучитьПолноеИмяФормы(БП), Новый Структура("Ключ", БП));
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	//ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтотОбъект, Новый Структура("ПараметрКоманды, ПараметрыВыполненияКоманды", ПараметрКоманды, ПараметрыВыполненияКоманды)), "После старта процесса утвеждения изменения в документе станут невозможны. Уверены что хотите стартовать бизнес процесс?", РежимДиалогаВопрос.ДаНет);
	ОбработкаКомандыЗавершение(КодВозвратаДиалога.Да, Новый Структура("ПараметрКоманды, ПараметрыВыполненияКоманды", ПараметрКоманды, ПараметрыВыполненияКоманды));	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПараметрКоманды = ДополнительныеПараметры.ПараметрКоманды;
	ПараметрыВыполненияКоманды = ДополнительныеПараметры.ПараметрыВыполненияКоманды;
	
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ВидСЗ = БюджетныйНаСервере.ВернутьРеквизит(ПараметрКоманды, "ВидСЗ");
		
		//Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_СлужебнаяЗаписка") Тогда
		//	Если ВидСЗ = БПСервер.ПолучитьВидСЗ("КорректировкаБюджета") Тогда
		//		ТекФормаБП = ПолучитьФорму("БизнесПроцесс.Согласование2.Форма.ФормаНовый");
		//	Иначе	
		//		ТекФормаБП = ПолучитьФорму("БизнесПроцесс.Согласование3.Форма.ФормаНовый");
		//	КонецЕсли;
		//Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаКорректировкуБюджета") Тогда
		Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
			ОткрытьФорму("БизнесПроцесс.Согласование1.ФормаОбъекта", Новый Структура("Основание", ПараметрКоманды)); 
		Иначе
			ОткрытьФорму("БизнесПроцесс.СогласованиеОбщее.ФормаОбъекта", Новый Структура("Основание", ПараметрКоманды)); 
			
		КонецЕсли;
		
	//	ТекФормаБП = ПолучитьФорму("БизнесПроцесс.СогласованиеОбщее.ФормаОбъекта");
	//	//ТекФормаБП.Объект.ОтправлятьВсем = ?(ОтправлятьВсем, ОтправлятьВсем, БюджетныйНаСервере.ВернутьРеквизит(ПараметрКоманды, "ОтправлятьВсем"));
	//	//ТекФормаБП.НаправлятьНаУтверждение = ?(ТекФормаБП.Объект.ОтправлятьВсем, "Всем сразу", "По очереди");
	//	ТекФормаБП.Объект.Автор = БюджетныйНаСервере.ПолучитьПользователя();
	//	ТекФормаБП.Объект.Описание = БюджетныйНаСервере.ВернутьРеквизит(ПараметрКоманды, "Комментарий");
	//	ТекФормаБП.Объект.Заявка = ПараметрКоманды;
	//	ТекФормаБП.Объект.ОснованиеЗаблокирован = Истина;
	//	ТекФормаБП.ВладелецФормы = ПараметрыВыполненияКоманды.Источник;
	//	
	//	ДанныеФормы = ТекФормаБП.Объект;
	//	//КонецЕсли;
	//	
	//	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_СлужебнаяЗаписка") Тогда
	//		ЗаполнитьНаСервере(ДанныеФормы, ПараметрКоманды);
	//	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаТорговлю") Тогда
	//		ЗаполнитьНаСервереЗаявкаНаТорговлю(ДанныеФормы, ПараметрКоманды);	
	//	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаКорректировкуБюджета") Тогда
	//		ЗаполнитьНаСервере(ДанныеФормы, ПараметрКоманды);
	//		ЗаполнитьНаСервереЗаявкаНаКорректировкуБюджета(ДанныеФормы, ПараметрКоманды);
	//	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаКадровоеДвижение") Тогда
	//		ЗаполнитьНаСервере(ДанныеФормы, ПараметрКоманды);
	//		ЗаполнитьНаСервереЗаявкаНаКадровоеДвижение(ДанныеФормы, ПараметрКоманды);
	//	ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_ЗаявкаНаФинансирование") Тогда
	//		РеквизитыЗаявки = БюджетныйНаСервере.ВернутьРеквизиты(ПараметрКоманды, "Комментарий, Предприятие, НазначениеПлатежаУчет");
	//		ТекФормаБП.Объект.Предприятие = РеквизитыЗаявки.Предприятие;
	//		ТекФормаБП.ВладелецФормы = ПараметрыВыполненияКоманды.Источник;
	//		ТекФормаБП.Объект.СтандартныйМаршрут = Истина;
	//		ЗаполнитьНаСервереЗаявкаФин(ДанныеФормы, ПараметрКоманды);
	//	Иначе
	//		ЗаполнитьНаСервере(ДанныеФормы, ПараметрКоманды);
	//	КонецЕсли;
	//	
	//	КопироватьДанныеФормы(ДанныеФормы, ТекФормаБП.Объект);
	//	
	//	ТекФормаБП.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверкаВозможностиЗапускаБП(ПараметрКоманды)
	
	Если ТипЗнч(ПараметрКоманды) <> Тип("Массив") Тогда
		Массив = новый Массив;
		Массив.Добавить(ПараметрКоманды);
	Иначе
		Массив = ПараметрКоманды;
	КонецЕсли;
	
	Для Каждого ТекДокумент Из Массив Цикл
		
		Если ТипЗнч(ТекДокумент) = Тип("ДокументСсылка.Д_ЗаявкаНаИзменениеУсловийКлиента") Тогда
																									  
			Если ТекДокумент.УсловияКлиента.Количество() <> 0 И ТекДокумент.ДоговоренностиКлиента.Количество() = 1 Тогда
				ЦенаВУсловиях = ТекДокумент.УсловияКлиента[0].Цена;
				ЦенаВДоговоренностях = ТекДокумент.ДоговоренностиКлиента[0].Цена;
				Если ЗначениеЗаполнено(ТекДокумент.ДоговоренностиКлиента[0].Предприятие) Или ЗначениеЗаполнено(ТекДокумент.ДоговоренностиКлиента[0].Номенклатура) Тогда
					Продолжить;  //Если договоренность не по всем предприятиям/номенклатурам, то не проверяем
				КонецЕсли;
				Если ЦенаВУсловиях <> ЦенаВДоговоренностях Тогда
					Сообщить("Договоренности клиента имеют только 1 строчку, поэтому цены в условиях и договоренностях должны быть равны");
					Возврат Ложь;
				КонецЕсли;
				
			ИначеЕсли ТекДокумент.УсловияКлиента.Количество() <> 0 И ТекДокумент.ДоговоренностиКлиента.Количество() > 1 Тогда			
				ЦенаВУсловиях = ТекДокумент.УсловияКлиента[0].Цена;
				ЦеныВДоговоренностях = ТекДокумент.ДоговоренностиКлиента.ВыгрузитьКолонку("Цена");
				Если ЦенаВУсловиях > МаксимумВМассиве(ЦеныВДоговоренностях) Тогда
					Сообщить("Цена в условиях клиента превышает все цены во всех строках договоренностей. Введите корректные данные");
					Возврат Ложь;
				КонецЕсли;
				
			Иначе
				Продолжить;
			КонецЕсли;		
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция МаксимумВМассиве(Массив)
	
	Если Массив.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Максимум = Массив[0];
	Для Каждого ТекЭлемент Из Массив Цикл
		Если ТекЭлемент > Максимум Тогда
			Максимум = ТекЭлемент;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Максимум;
	
КонецФункции

&НаСервере
Функция ТочкаМаршрутаДоработки(ПараметрКоманды)
 
	ТочкаМаршрутаДоработки = БПСервер.ПолучитьТекущуюТочкуМаршрута(ПараметрКоманды);
	Возврат ТочкаМаршрутаДоработки = БизнесПроцессы.СогласованиеОбщее.ТочкиМаршрута.Действие1;
	
КонецФункции // ()

&НаСервере
Процедура ВыполнитьЗадачуДоработки(ТекБп, ПараметрКоманды) //возможно есть общий модуль?
	
	НачатьТранзакцию();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Задача.Ссылка,
	|	Задача.Исполнитель
	|ИЗ
	|	Задача.Задача КАК Задача
	|ГДЕ
	|	Задача.БизнесПроцесс = &БизнесПроцесс
	|	И Задача.Выполнена = ЛОЖЬ
	|	И Задача.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", ТекБп);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Попытка
		ТекБПОбъект = ТекБп.ПолучитьОбъект();
		
		Если НЕ ТекБПОбъект.ОснованиеЗаблокирован Тогда
			
			Для каждого ТекСтрока Из ТекБПОбъект.ДопСогласование Цикл
				ТекСтрока.Пройден = Ложь;	
				ТекСтрока.Согласовано = Ложь;			
			КонецЦикла;
			
			Для каждого ТекСтрока Из ТекБПОбъект.ДопОповещение Цикл
				ТекСтрока.Оповещен = Ложь;	
			КонецЦикла;
			
		КонецЕсли;
		
		ТекБПОбъект.ОснованиеЗаблокирован = Истина;
		ТекБПОбъект.Записать();
	Исключение
		Возврат;	
	КонецПопытки; 
	
	
	//выполняем задачу 
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		Попытка
			БПСервер.ВыполнитьЗадачу(Выборка.Ссылка, 0, "", "Доработан документ");
		Исключение
			Возврат;	
		КонецПопытки;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаСервере
Функция Более3Согласователей(ПараметрКоманды)

	Возврат ПараметрКоманды.Рецензенты.Количество() > 3 И ПараметрКоманды.ОтправлятьВсем = Ложь;	

КонецФункции // ()

&НаСервере
Процедура ЗаполнитьНаСервере(ТекОбъект, ТекОснование)
	ТекОбъект.КонтрольСогласованияОФК = НеобходимоСогласованиеОФК(ТекОбъект.Заявка);
	
	//Если Не ЗначениеЗаполнено(ТекОснование.Комментарий) Тогда
	//	ТекОбъект.Комментарий = ТекОснование.Текстовка;	
	//КонецЕсли;
	
	ВидСЗ = БюджетныйНаСервере.ВернутьРеквизит(ТекОснование, "ВидСЗ"); 
	Кому = БюджетныйНаСервере.ВернутьРеквизит(ТекОснование, "Кому"); 
		
	//Если НЕ ВидСЗ = Неопределено И ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.Приказ Тогда
	//	ПредседательПравления = Константы.ПредседательПравления.Получить();
	//	Если Не ПредседательПравления = Справочники.Пользователи.ПустаяСсылка() Тогда 
	//		НоваяСтрока = ТекОбъект.ДопСогласование.Добавить();
	//		НоваяСтрока.СубъектСогласования = ПредседательПравления;
	//	КонецЕсли;	
	//КонецЕсли;
	
	ТекОбъект.Предприятие = ТекОснование.Предприятие;
	Если ЗначениеЗаполнено(Кому) Тогда
		Если ТипЗнч(ТекОснование.Кому) = Тип("СправочникСсылка.Пользователи") Тогда
			Если ТекОснование.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ИнформационноеПисьмо Тогда
				НоваяСтрока = ТекОбъект.ДопОповещение.Добавить();
				НоваяСтрока.Пользователь = ТекОснование.Кому;
				НоваяСтрока.СразуПослеСтарта = Ложь;
			Иначе	
				НоваяСтрока = ТекОбъект.ДопСогласование.Добавить();
				НоваяСтрока.СубъектСогласования = ТекОснование.Кому;
			КонецЕсли;	
		Иначе
			Для Каждого ТекПользователь Из ТекОснование.Рецензенты Цикл
				Если ТекОснование.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ИнформационноеПисьмо Тогда
					НоваяСтрока = ТекОбъект.ДопОповещение.Добавить();
					НоваяСтрока.Пользователь = ТекПользователь.Пользователь;
					НоваяСтрока.СразуПослеСтарта = Ложь;
				Иначе	
					НоваяСтрока = ТекОбъект.ДопСогласование.Добавить();
					НоваяСтрока.СубъектСогласования = ТекПользователь.Пользователь;
					//НоваяСтрока.РезультирующееСогласование = ТекПользователь.Пользователь.РезультирующееСогласование;
				КонецЕсли;	
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	
	
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопОповещение", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	
	Если ТекОбъект.ДопСогласование.Количество() Тогда
		ТекОбъект.СтандартныйМаршрут = Истина;
	КонецЕсли;
	
	Если ТипЗнч(ТекОснование.Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаСогласованиеДоговора") Тогда
		ТекОбъект.Описание = Строка(ТекОснование.ЮрЛицоКомпании) + " - " + Строка(ТекОснование.Контрагент);
	КонецЕсли;
	
	//закоменчено по обр через скайп Толстого И от 27.01.15
	//Если ТекОснование.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.СогласованиеДоговораСтроительство Тогда
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОсновныеДолжностиПредприятия.Сотрудник
	//	|ИЗ
	//	|	РегистрСведений.ОсновныеДолжностиПредприятия КАК ОсновныеДолжностиПредприятия
	//	|ГДЕ
	//	|	ОсновныеДолжностиПредприятия.Предприятие = &Предприятие
	//	|	И ОсновныеДолжностиПредприятия.Должность = ЗНАЧЕНИЕ(Перечисление.ОсновныеДолжностиПредприятия.Учетчик)";
	//	АдресатОзнокомления = Справочники.Сотрудники.ПустаяСсылка();
	//	Запрос.УстановитьПараметр("Предприятие", ТекОснование.Проект);
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		АдресатОзнокомления = Выборка.Сотрудник;
	//		Прервать;
	//	КонецЦикла;
	//	Если ЗначениеЗаполнено(АдресатОзнокомления) Тогда
	//		НоваяСтрока = ТекОбъект.ДопОповещение.Добавить();
	//		НоваяСтрока.Пользователь = АдресатОзнокомления;
	//		НоваяСтрока.СразуПослеСтарта = Ложь;
	//	КонецЕсли;
	//	
	//	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	//	
	//КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереЗаявкаНаКадровоеДвижение(ТекОбъект, ТекОснование)
	//заполняем стандартным маршрутом
	ТекОбъект.СтандартныйМаршрут = Истина;
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, , ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, , ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопОповещение", ТекОснование.Ссылка, , ТекОснование.Дата);
	
	//устанавливаем контроль ОФК
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МаршрутыДвиженияЗаявок.КонтрольОФК,
	               |	МаршрутыДвиженияЗаявок.ТипАвтомаршрута
	               |ИЗ
	               |	Справочник.МаршрутыДвиженияЗаявок КАК МаршрутыДвиженияЗаявок
	               |ГДЕ
	               |	МаршрутыДвиженияЗаявок.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", ТекОбъект.ДопСогласование.Выгрузить().ВыгрузитьКолонку("МаршрутДвижения"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипАвтомаршрута = "С группировками" Тогда
			ТекОбъект.ВариантСогласования = Перечисления.ВариантыМаршрутизацииЗадач.Смешанно;		
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

Функция НеобходимоСогласованиеОФК(ТекЗаявка)
	
	//Если ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.Д_ЗаявкаНаКомандировку") ИЛИ ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.УЧ_Стр_ДоговорДолевогоУчастия") Тогда
	//	Возврат Ложь;
	//Иначе
	//	Попытка
	//		Возврат НЕ ТекЗаявка.Предприятие.НеКонтролироватьОФК
	//	Исключение
			Возврат Истина;
	//	КонецПопытки;
	//КонецЕсли;	
	//
КонецФункции	

Процедура ЗаполнитьНаСервереЗаявкаНаТорговлю(ТекОбъект, ТекОснование)
	//добавляем в согласование директора предприятия
	//ДобавитьСтрокуДопСогласование(ТекОбъект, БПСервер.ПолучитьСотрудникаПоОсновнойДолжности(ТекОснование.Предприятие, Перечисления.ОсновныеДолжностиПредприятия.РуководительПроекта), "Руководитель предприятия", Истина);
	
	//заполняем стандартным маршрутом
	ТекОбъект.СтандартныйМаршрут = Истина;
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, , ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, , ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопОповещение", ТекОснование.Ссылка, , ТекОснование.Дата);
	
КонецПроцедуры

Процедура ЗаполнитьНаСервереЗаявкаНаКорректировкуБюджета(ТекОбъект, ТекОснование)
	
	//заполняем стандартным маршрутом
	ТекОбъект.СтандартныйМаршрут = Истина;
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, , ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, , ТекОснование.Дата);
	Если ТипЗнч(ТекОснование.Ссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаКорректировкуБюджета") Тогда
		БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "Адресаты", ТекОснование.Ссылка, , ТекОснование.Дата);
	Иначе	
		БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопОповещение", ТекОснование.Ссылка, , ТекОснование.Дата);
	КонецЕсли;	
		
	
	//добавляем начальника бюджетного отдела
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	МаршрутыДвиженияЗаявок.КонтрольОФК
	//               |ИЗ
	//               |	Справочник.МаршрутыДвиженияЗаявок КАК МаршрутыДвиженияЗаявок
	//               |ГДЕ
	//               |	МаршрутыДвиженияЗаявок.Ссылка В(&Ссылка)";
	//
	//Запрос.УстановитьПараметр("Ссылка", ТекОбъект.ДопСогласование.Выгрузить().ВыгрузитьКолонку("МаршрутДвижения"));
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//
	//Если Выборка.Количество() Тогда
	//	НачальникБО = Справочники.Пользователи.ПустаяСсылка();
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = "ВЫБРАТЬ
	//	               |	Пользователи.Ссылка
	//	               |ИЗ
	//	               |	Справочник.Пользователи КАК Пользователи
	//	               |ГДЕ
	//	               |	Пользователи.ПометкаУдаления = ЛОЖЬ
	//	               |	И Пользователи.Должность = &Должность";
	//	Запрос.УстановитьПараметр("Должность", Справочники.Д_Должности.НайтиПоНаименованию("Начальник БО"));
	//	РезультатНачБО = Запрос.Выполнить();
	//	ВыборкаНачБО = РезультатНачБО.Выбрать();
	//	Пока ВыборкаНачБО.Следующий() Цикл
	//		Если ЗначениеЗаполнено(ВыборкаНачБО.Ссылка) Тогда
	//			НачальникБО = ВыборкаНачБО.Ссылка;
	//			Прервать
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если ЗначениеЗаполнено(НачальникБО) Тогда
	//		Если НЕ ТекОбъект.ДопСогласование.НайтиСтроки(Новый Структура("СубъектСогласования", НачальникБО)).Количество()  Тогда
	//			НоваяСтрока = ТекОбъект.ДопСогласование.Вставить(1);
	//			НоваяСтрока.СубъектСогласования  = НачальникБО;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереРеестрЗаявок(ТекОбъект, ТекОснование)
	
	
	НовыйБП = ТекОбъект;	
	
	//если КЗ, то согласуем у учетчика
	//Если НЕ ТекОснование.ПризнакПредоплаты Тогда
	//	ДобавитьСтрокуДопСогласование(ТекОбъект, ТекОснование.Предприятие.Учетчик);
	//КонецЕсли;
	
	//добавляем финика и директора и учетчика???
	МассивПП = Новый Массив;
	Для каждого ТекСтрока Из ТекОснование.ЗаявкаБезнал Цикл
		
		//если ответственный, то солгасуем у него
		Ответственный = ТекСтрока.Ответственный;
		Если НЕ ПустаяСтрока(Ответственный) Тогда
			БизнесПроцессы.Согласование1.ДобавитьСтрокуДопСогласование(ТекОбъект, Ответственный);
		КонецЕсли;
		//
		
		//При выборе ЦФО Казна (выдача в п/о) в маршруте согласования автоматически добавлять оператора Казны.	
		БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, ТекСтрока.ЦФО, ТекОснование.Дата);
		БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, ТекСтрока.ЦФО, ТекОснование.Дата);
		БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопОповещение", ТекОснование.Ссылка, ТекСтрока.ЦФО, ТекОснование.Дата);
		
	КонецЦикла;
		
	ТаблицаСогласующих = ТекОбъект.ДопСогласование.Выгрузить();
	ТаблицаСогласующих.Сортировать("РезультирующееСогласование, НомерСтроки");
	ТекОбъект.ДопСогласование.Загрузить(ТаблицаСогласующих);
	
	//исполнение
	БизнесПроцессы.Согласование1.ДобавитьСтрокуДопИсполнение(ТекОбъект, ТекОснование);
	
	//ознакомление
	Для каждого ТекОповещение Из ТекОснование.Оповещения Цикл
		БизнесПроцессы.Согласование1.ДобавитьСтрокуДопОзнакомление(ТекОбъект, ТекОповещение.СубъектСогласования)	
	КонецЦикла; 
	
	
	//устанавливаем контроль ОФК и тип автомаршрута
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МаршрутыДвиженияЗаявок.КонтрольОФК,
	|	МаршрутыДвиженияЗаявок.ТипАвтомаршрута
	|ИЗ
	|	Справочник.МаршрутыДвиженияЗаявок КАК МаршрутыДвиженияЗаявок
	|ГДЕ
	|	МаршрутыДвиженияЗаявок.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", ТекОбъект.ДопСогласование.Выгрузить().ВыгрузитьКолонку("МаршрутДвижения"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		Если Выборка.ТипАвтомаршрута = "С группировками" Тогда
			ТекОбъект.ВариантСогласования = Перечисления.ВариантыМаршрутизацииЗадач.Смешанно;		
		КонецЕсли;
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереЗаявкаФин(ТекОбъект, ТекОснование)
	
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопСогласование", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	БПСервер.ДобавитьРецензентовВМаршрут(ТекОбъект, "ДопИсполнение", ТекОснование.Ссылка, ТекОснование.Предприятие, ТекОснование.Дата);
	
КонецПроцедуры


