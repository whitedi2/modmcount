
&Вместо("ПечатьТоварныйЧек")
Функция УУ_ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РозничнаяПродажа_ТоварныйЧек";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос.Текст = ТекстЗапросаТоварныйЧек();
	
	ДанныеЗаполнения = Новый Структура;
	
	ПервыйДокумент = Истина;
	
	
	Шапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		//++ЖВИ 
		КонтрагентПодвал = Шапка.Ссылка.Контрагент;
		//--ЖВИ 
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РозничнаяПродажа.ПФ_MXL_ТоварныйЧек");
		
		ВыводитьСкидку = (Шапка.СуммаСкидки > 0);
		ЕстьОбластьСкидка = Макет.Области.Найти("Скидка") <> Неопределено;
		
		ОбластьКолонкаТовар = Макет.Область("Запас");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		Если НЕ ВыводитьСкидку И ЕстьОбластьСкидка Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("Скидка").ШиринаКолонки;
		КонецЕсли; 
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
		ШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ШапкаТаблицыКоды    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ШапкаТаблицыДанные  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьПоставщик    = Макет.ПолучитьОбласть("Поставщик");
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьСтрокаКоды   = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьСтрокаДанные = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьИтого        = Макет.ПолучитьОбласть("Итого");
		ОбластьПодписи      = Макет.ПолучитьОбласть("Подписи");
		
		Если ЕстьОбластьСкидка Тогда
			ШапкаТаблицыСумма   = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
			ШапкаТаблицыСкидка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
			
			ОбластьСтрокаСкидка = Макет.ПолучитьОбласть("Строка|Скидка");
			ОбластьСтрокаСумма  = Макет.ПолучитьОбласть("Строка|Сумма");
		КонецЕсли;
		
		// Начало фиксации формата шапки документа
		НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;
		
		ВидДокумента = ?(Шапка.ВидОперации = Перечисления.ВидыОперацийРозничнаяПродажа.Продажа, НСтр("ru = 'Товарный чек'"), НСтр("ru = 'Возврат товаров'"));
		
		ТекстЗаголовка = СтрШаблон(НСтр("ru ='%1 № %2 от %3'"), ВидДокумента, Шапка.Номер, Формат(Шапка.Дата, "ДЛФ=DD"));
		ОбластьЗаголовок.Параметры.Заполнить(Новый Структура("ТекстЗаголовка", ТекстЗаголовка));
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, 
				"НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ОбластьПоставщик.Параметры.Заполнить(Новый Структура("ПредставлениеПоставщика", ПредставлениеПоставщика));
		
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
		// Конец фиксации формата шапки документа
		
		// Начало фиксации формата таблицы документа
		НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;
		
		ТабличныйДокумент.Вывести(ШапкаТаблицы);
		Если ВыводитьКоды Тогда
			ДанныеПечатиКолонкиКодов = Новый Структура;
			Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Артикул");
			ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Код");
			КонецЕсли;
			ШапкаТаблицыКоды.Параметры.Заполнить(ДанныеПечатиКолонкиКодов);
			ТабличныйДокумент.Присоединить(ШапкаТаблицыКоды);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ШапкаТаблицыДанные);
		
		
		Если НЕ ЕстьОбластьСкидка Тогда
			// Измененный макет
		Иначе
			Если ВыводитьСкидку Тогда
				ТабличныйДокумент.Присоединить(ШапкаТаблицыСкидка);
			КонецЕсли; 
			ТабличныйДокумент.Присоединить(ШапкаТаблицыСумма);
		КонецЕсли; 
		
		НомерСтроки = 0;
		ВыборкаПоДокументу = Шапка.Выбрать();
		Пока ВыборкаПоДокументу.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			ДанныеЗаполнения = Новый Структура("НомерСтроки", НомерСтроки);
			ОбластьСтрока.Параметры.Заполнить(ДанныеЗаполнения);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			Если ВыводитьКоды Тогда
				ОбластьСтрокаКоды.Параметры.Заполнить(ВыборкаПоДокументу);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКоды);
			КонецЕсли;
			
			Номенклатура = РаботаСНоменклатуройКлиентСерверБП.СодержаниеУслуги(
				ВыборкаПоДокументу.Номенклатура, ВыборкаПоДокументу.ПериодичностьУслуги, Шапка.Дата);
				
			ДанныеЗаполнения = Новый Структура("Номенклатура", Номенклатура);
			
			ОбластьСтрокаДанные.Параметры.Заполнить(ВыборкаПоДокументу);
			ОбластьСтрокаДанные.Параметры.Заполнить(ДанныеЗаполнения);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанные);
			
			Если НЕ ЕстьОбластьСкидка Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ВыводитьСкидку Тогда
				ОбластьСтрокаСкидка.Параметры.Заполнить(ВыборкаПоДокументу);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидка);
			КонецЕсли; 
			
			ОбластьСтрокаСумма.Параметры.Заполнить(ВыборкаПоДокументу);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСумма);
			
		КонецЦикла;
		
		ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
		// Конец фиксации формата таблицы документа
		
		Всего = Шапка.Сумма + ?(Шапка.СуммаВключаетНДС, 0, Шапка.СуммаНДС);
		
		Если Шапка.СуммаНДС <> 0 Тогда
			ЗаголовокНДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'"));
		Иначе
			ЗаголовокНДС      = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		
		ДанныеЗаполнения.Очистить();
		ДанныеЗаполнения.Вставить("Сумма",        ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.Сумма));
		ДанныеЗаполнения.Вставить("ЗаголовокНДС", ЗаголовокНДС);
		ДанныеЗаполнения.Вставить("СуммаНДС",     ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаНДС,,"-"));
		ДанныеЗаполнения.Вставить("Всего",        ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего));
		
		ОбластьИтого.Параметры.Заполнить(ДанныеЗаполнения);
		
		ДанныеПечатиСуммаПрописью = Новый Структура("ИтоговаяСтрока, СуммаПрописью");
		ДанныеПечатиСуммаПрописью.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Всего наименований %1, на сумму %2'"),
			НомерСтроки, ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, Константы.ВалютаРегламентированногоУчета.Получить()));
		ДанныеПечатиСуммаПрописью.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		
		ОбластьИтого.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.Вывести(ОбластьПодписи); 
		
		//++ЖВИ     
		ТабличныйДокумент.Область((ТабличныйДокумент.ВысотаТаблицы+1),2).Текст = КонтрагентПодвал;		
		//--ЖВИ     
		
		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

//&Вместо("ПечатьТоварныйЧек")
//Функция УУ_ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати)
//	// Вариант с расширением макета (в макет добавить пустую строку)
//	//Результат = ПродолжитьВызов(МассивОбъектов, ОбъектыПечати); 
//	//Для каждого ОбъектПечати из ОбъектыПечати Цикл  
//	//	Областьдокумента = Результат.Области.Найти(ОбъектПечати);  
//	//	Если НЕ ОбластьДокумента = Неопределено Тогда
//	//		КонецОбласти = ОбластьДокумента.Низ;  
//	//		Результат.Область(КонецОбласти,2).Текст = ОбъектПечати.Значение.Контрагент;  
//	//		Результат.Область(КонецОбласти,2).ВысотаСтроки = 20; 
//	//	КонецЕсли;	
//	//КонецЦикла;	
//	//Результат.АвтоМасштаб = Ложь;   
//	//
//	//Возврат Результат
//	
//	 //Вариант без расширения макета, макет можно удалить из расширения
//	Результат = ПродолжитьВызов(МассивОбъектов, ОбъектыПечати); 
//	ТД = Новый ТабличныйДокумент; 
//	ТД.АвтоМасштаб			= Истина;
//	ТД.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
//	ТД.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РозничнаяПродажа_ТоварныйЧек";
//	ТД.ПолеСнизу = 20;

//	ТДОбласть = Новый ТабличныйДокумент;  
//	Для каждого ОбъектПечати из ОбъектыПечати Цикл  
//		Областьдокумента = Результат.Области.Найти(ОбъектПечати);  
//		Если НЕ ОбластьДокумента = Неопределено Тогда
//			НомерСтрокиНачало = ТД.ВысотаТаблицы + 1;
//			ОбластьДокумента.КонецСтраницы = Ложь;
//			ТДОбласть.ВставитьОбласть(Областьдокумента, ТДОбласть.Область()); 
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			ТД.Вывести(ТДОбласть); 
//			ТДОбласть.Очистить();
//			ТДОбласть.ВставитьОбласть(Результат.Область("R"+ТД.ВысотаТаблицы+"C1"), ТДОбласть.Область());
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			Пока ТД.ПроверитьВывод(ТДОбласть) Цикл
//				ТД.Вывести(ТДОбласть);
//				Прервать;
//			КонецЦикла;
//			ТДОбласть.Очистить();
//			ТД.Область(ТД.ВысотаТаблицы,2).Текст = ОбъектПечати.Значение.Контрагент;
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			ТД.ВывестиГоризонтальныйРазделительСтраниц();
//			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТД,
//			НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати.Значение);
//		КонецЕсли;	
//	КонецЦикла;	

//	Возврат ТД
//	
//КонецФункции 