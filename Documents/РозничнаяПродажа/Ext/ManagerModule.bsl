
&Вместо("ПечатьТоварныйЧек")
Функция УУ_ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РозничнаяПродажа_ТоварныйЧек";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос.Текст = ТекстЗапросаТоварныйЧек();
	
	ДанныеЗаполнения = Новый Структура;
	
	ПервыйДокумент = Истина;
	
	
	Шапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Шапка.Следующий() Цикл
		//++ЖВИ 
		КонтрагентПодвал = Шапка.Ссылка.Контрагент;
		//--ЖВИ 
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РозничнаяПродажа.ПФ_MXL_ТоварныйЧек");
		
		ВыводитьСкидку = (Шапка.СуммаСкидки > 0);
		ЕстьОбластьСкидка = Макет.Области.Найти("Скидка") <> Неопределено;
		
		ОбластьКолонкаТовар = Макет.Область("Запас");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		Если НЕ ВыводитьСкидку И ЕстьОбластьСкидка Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + Макет.Область("Скидка").ШиринаКолонки;
		КонецЕсли; 
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
		ШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ШапкаТаблицыКоды    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ШапкаТаблицыДанные  = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьПоставщик    = Макет.ПолучитьОбласть("Поставщик");
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьСтрокаКоды   = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьСтрокаДанные = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьИтого        = Макет.ПолучитьОбласть("Итого");
		ОбластьПодписи      = Макет.ПолучитьОбласть("Подписи");
		
		Если ЕстьОбластьСкидка Тогда
			ШапкаТаблицыСумма   = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
			ШапкаТаблицыСкидка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
			
			ОбластьСтрокаСкидка = Макет.ПолучитьОбласть("Строка|Скидка");
			ОбластьСтрокаСумма  = Макет.ПолучитьОбласть("Строка|Сумма");
		КонецЕсли;
		
		// Начало фиксации формата шапки документа
		НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;
		
		ВидДокумента = ?(Шапка.ВидОперации = Перечисления.ВидыОперацийРозничнаяПродажа.Продажа, НСтр("ru = 'Товарный чек'"), НСтр("ru = 'Возврат товаров'"));
		
		ТекстЗаголовка = СтрШаблон(НСтр("ru ='%1 № %2 от %3'"), ВидДокумента, Шапка.Номер, Формат(Шапка.Дата, "ДЛФ=DD"));
		ОбластьЗаголовок.Параметры.Заполнить(Новый Структура("ТекстЗаголовка", ТекстЗаголовка));
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, 
				"НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ОбластьПоставщик.Параметры.Заполнить(Новый Структура("ПредставлениеПоставщика", ПредставлениеПоставщика));
		
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
		// Конец фиксации формата шапки документа
		
		// Начало фиксации формата таблицы документа
		НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;
		
		ТабличныйДокумент.Вывести(ШапкаТаблицы);
		Если ВыводитьКоды Тогда
			ДанныеПечатиКолонкиКодов = Новый Структура;
			Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Артикул");
			ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
				ДанныеПечатиКолонкиКодов.Вставить("ИмяКолонкиКодов", "Код");
			КонецЕсли;
			ШапкаТаблицыКоды.Параметры.Заполнить(ДанныеПечатиКолонкиКодов);
			ТабличныйДокумент.Присоединить(ШапкаТаблицыКоды);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ШапкаТаблицыДанные);
		
		
		Если НЕ ЕстьОбластьСкидка Тогда
			// Измененный макет
		Иначе
			Если ВыводитьСкидку Тогда
				ТабличныйДокумент.Присоединить(ШапкаТаблицыСкидка);
			КонецЕсли; 
			ТабличныйДокумент.Присоединить(ШапкаТаблицыСумма);
		КонецЕсли; 
		
		НомерСтроки = 0;
		ВыборкаПоДокументу = Шапка.Выбрать();
		Пока ВыборкаПоДокументу.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			ДанныеЗаполнения = Новый Структура("НомерСтроки", НомерСтроки);
			ОбластьСтрока.Параметры.Заполнить(ДанныеЗаполнения);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			Если ВыводитьКоды Тогда
				ОбластьСтрокаКоды.Параметры.Заполнить(ВыборкаПоДокументу);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКоды);
			КонецЕсли;
			
			Номенклатура = РаботаСНоменклатуройКлиентСерверБП.СодержаниеУслуги(
				ВыборкаПоДокументу.Номенклатура, ВыборкаПоДокументу.ПериодичностьУслуги, Шапка.Дата);
				
			ДанныеЗаполнения = Новый Структура("Номенклатура", Номенклатура);
			
			ОбластьСтрокаДанные.Параметры.Заполнить(ВыборкаПоДокументу);
			ОбластьСтрокаДанные.Параметры.Заполнить(ДанныеЗаполнения);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанные);
			
			Если НЕ ЕстьОбластьСкидка Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ВыводитьСкидку Тогда
				ОбластьСтрокаСкидка.Параметры.Заполнить(ВыборкаПоДокументу);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидка);
			КонецЕсли; 
			
			ОбластьСтрокаСумма.Параметры.Заполнить(ВыборкаПоДокументу);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСумма);
			
		КонецЦикла;
		
		ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
		// Конец фиксации формата таблицы документа
		
		Всего = Шапка.Сумма + ?(Шапка.СуммаВключаетНДС, 0, Шапка.СуммаНДС);
		
		Если Шапка.СуммаНДС <> 0 Тогда
			ЗаголовокНДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'"));
		Иначе
			ЗаголовокНДС      = НСтр("ru='Без налога (НДС)'");
		КонецЕсли;
		
		ДанныеЗаполнения.Очистить();
		ДанныеЗаполнения.Вставить("Сумма",        ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.Сумма));
		ДанныеЗаполнения.Вставить("ЗаголовокНДС", ЗаголовокНДС);
		ДанныеЗаполнения.Вставить("СуммаНДС",     ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаНДС,,"-"));
		ДанныеЗаполнения.Вставить("Всего",        ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего));
		
		ОбластьИтого.Параметры.Заполнить(ДанныеЗаполнения);
		
		ДанныеПечатиСуммаПрописью = Новый Структура("ИтоговаяСтрока, СуммаПрописью");
		ДанныеПечатиСуммаПрописью.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Всего наименований %1, на сумму %2'"),
			НомерСтроки, ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, Константы.ВалютаРегламентированногоУчета.Получить()));
		ДанныеПечатиСуммаПрописью.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		
		ОбластьИтого.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.Вывести(ОбластьПодписи); 
		
		//++ЖВИ     
		ТабличныйДокумент.Область((ТабличныйДокумент.ВысотаТаблицы+1),2).Текст = КонтрагентПодвал;		
		//--ЖВИ     
		
		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции

//&Вместо("ТекстЗапросаНезакрытыеЧеки")
//Функция УУ_ТекстЗапросаНезакрытыеЧеки(СписокТаблиц)

//	Результат = ПродолжитьВызов(СписокТаблиц); 
//	
//	НастройкаФорма2 = Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("КонтрольНоменклатурыДляФормы2ВЗаказеКлиента");
//	Если НастройкаФорма2 Тогда
//		Результат = 
//		"ВЫБРАТЬ
//		|	РозничнаяПродажа.Ссылка КАК Ссылка,
//		|	РозничнаяПродажа.Организация КАК Организация,
//		|	РозничнаяПродажа.Склад КАК Склад,
//		|	РозничнаяПродажа.СчетКасса КАК СчетКасса,
//		|	РозничнаяПродажа.ДокументБезНДС КАК ДокументБезНДС,
//		|	РозничнаяПродажа.СуммаВключаетНДС КАК ЦенаВключаетНДС,
//		|	РозничнаяПродажа.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРозничнаяПродажа.Возврат) КАК ЭтоВозврат,
//		|	ЕСТЬNULL(РозничнаяПродажа.Основание.ОтчетОРозничныхПродажах, ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка) КАК ЭтоВозвратЗакрытогоПериода,
//		|	ВЫБОР
//		|		КОГДА РозничнаяПродажа.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.Патент)
//		|			ТОГДА ИСТИНА
//		|		ИНАЧЕ ЛОЖЬ
//		|	КОНЕЦ КАК ДеятельностьНаПатенте
//		|ПОМЕСТИТЬ ВТ_РозничныеЧекиКПогашению
//		|ИЗ
//		|	Документ.РозничнаяПродажа КАК РозничнаяПродажа
//		|ГДЕ
//		|	РозничнаяПродажа.ОтчетОРозничныхПродажах = ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)
//		|	И РозничнаяПродажа.ИдентификаторУстройства = &ИдентификаторУстройства
//		|	И РозничнаяПродажа.Проведен
//		|	И РозничнаяПродажа.Организация = &Организация
//		|
//		|ИНДЕКСИРОВАТЬ ПО
//		|	ЭтоВозврат
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничнаяПродажа.Ссылка КАК Ссылка,
//		|	РозничнаяПродажа.Организация КАК Организация,
//		|	РозничнаяПродажа.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничнаяПродажа.СуммаВключаетНДС КАК ЦенаВключаетНДС,
//		|	РозничнаяПродажа.ДокументБезНДС КАК ДокументБезНДС
//		|ПОМЕСТИТЬ ВТ_Продажи
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа КАК РозничнаяПродажа
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = РозничнаяПродажа.Ссылка)
//		|ГДЕ
//		|	НЕ РозничныеЧекиКПогашению.ЭтоВозврат
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничнаяПродажа.Ссылка КАК Ссылка,
//		|	РозничнаяПродажа.Основание КАК Основание,
//		|	РозничнаяПродажа.Организация КАК Организация,
//		|	РозничнаяПродажа.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничнаяПродажа.СуммаВключаетНДС КАК ЦенаВключаетНДС,
//		|	РозничнаяПродажа.ДокументБезНДС КАК ДокументБезНДС,
//		|	РозничнаяПродажа.СуммаДокумента КАК СуммаДокумента
//		|ПОМЕСТИТЬ ВТ_Возвраты
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа КАК РозничнаяПродажа
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = РозничнаяПродажа.Ссылка)
//		|ГДЕ
//		|	РозничныеЧекиКПогашению.ЭтоВозврат
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Ссылка КАК РозничнаяПродажа,
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	РозничныеЧекиКПогашению.Ссылка,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	НЕОПРЕДЕЛЕНО КАК ОтчетОРозничныхПродажах,
//		|	МИНИМУМ(РозничныеЧекиКПогашению.ДокументБезНДС) КАК ДокументБезНДС
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
//		|	ВЫБОР
//		|		КОГДА ТаблицаТовары.СуммаСкидки = 0
//		|			ТОГДА ТаблицаТовары.Цена
//		|		КОГДА ТаблицаТовары.Количество = 0
//		|				И НЕ РозничнаяПродажа.СуммаВключаетНДС
//		|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаСкидки
//		|		КОГДА ТаблицаТовары.Количество = 0
//		|				И РозничнаяПродажа.СуммаВключаетНДС
//		|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаСкидки - ТаблицаТовары.СуммаНДС
//		|		КОГДА ТаблицаТовары.Количество = 0
//		|				И РозничнаяПродажа.СуммаВключаетНДС
//		|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма - ТаблицаТовары.СуммаСкидки - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(19, 2))
//		|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.Сумма - ТаблицаТовары.СуммаСкидки) / ТаблицаТовары.Количество КАК ЧИСЛО(19, 2))
//		|	КОНЕЦ КАК Цена,
//		|	ТаблицаТовары.КиЗ_ГИСМ КАК КиЗ_ГИСМ,
//		|	ТаблицаТовары.Количество КАК Количество,
//		|	ТаблицаТовары.Сумма - ТаблицаТовары.СуммаСкидки КАК Сумма,
//		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
//		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
//		|	РозничныеЧекиКПогашению.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
//		|	ТаблицаТовары.Номенклатура.НомерГТД КАК НомерГТД,
//		|	ТаблицаТовары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
//		|	ТаблицаТовары.ЦенаФорма2 КАК ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2 КАК СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2 КАК СуммаНДСФорма2
//		|ПОМЕСТИТЬ ВТ_ТаблицаТовары
//		|ИЗ
//		|	ВТ_Продажи КАК РозничныеЧекиКПогашению
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа КАК РозничнаяПродажа
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = РозничнаяПродажа.Ссылка)
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК ТаблицаТовары
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = ТаблицаТовары.Ссылка)
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|ВЫБРАТЬ
//		|	ВТ_Возвраты.Организация,
//		|	ВТ_Возвраты.Склад,
//		|	ВТ_Возвраты.СчетКасса,
//		|	ВТ_Возвраты.ДеятельностьНаПатенте,
//		|	ТаблицаТовары.Номенклатура,
//		|	ТаблицаТовары.Цена,
//		|	ТаблицаТовары.КиЗ_ГИСМ,
//		|	-ТаблицаТовары.Количество,
//		|	-ТаблицаТовары.Сумма,
//		|	ТаблицаТовары.СтавкаНДС,
//		|	-ТаблицаТовары.СуммаНДС,
//		|	ВТ_Возвраты.ЦенаВключаетНДС,
//		|	ТаблицаТовары.Номенклатура.НомерГТД,
//		|	ТаблицаТовары.Номенклатура.СтранаПроисхождения,
//		|	ТаблицаТовары.ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2
//		|ИЗ
//		|	ВТ_Возвраты КАК ВТ_Возвраты
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК ТаблицаТовары
//		|		ПО (ВТ_Возвраты.Ссылка = ТаблицаТовары.Ссылка)
//		|ГДЕ
//		|	ТаблицаТовары.Номенклатура.Услуга
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ТаблицаТовары.Организация КАК Организация,
//		|	ТаблицаТовары.Склад КАК Склад,
//		|	ТаблицаТовары.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаТовары.СчетКасса КАК СчетКасса,
//		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
//		|	ТаблицаТовары.Цена КАК Цена,
//		|	ТаблицаТовары.КиЗ_ГИСМ КАК КиЗ_ГИСМ,
//		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
//		|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
//		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
//		|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
//		|	ТаблицаТовары.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
//		|	ТаблицаТовары.НомерГТД КАК НомерГТД,
//		|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
//		|	ТаблицаТовары.ЦенаФорма2 КАК ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2 КАК СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2 КАК СуммаНДСФорма2
//		|ИЗ
//		|	ВТ_ТаблицаТовары КАК ТаблицаТовары
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаТовары.Номенклатура,
//		|	ТаблицаТовары.КиЗ_ГИСМ,
//		|	ТаблицаТовары.Цена,
//		|	ТаблицаТовары.СтавкаНДС,
//		|	ТаблицаТовары.Организация,
//		|	ТаблицаТовары.Склад,
//		|	ТаблицаТовары.ДеятельностьНаПатенте,
//		|	ТаблицаТовары.ЦенаВключаетНДС,
//		|	ТаблицаТовары.СчетКасса,
//		|	ТаблицаТовары.НомерГТД,
//		|	ТаблицаТовары.СтранаПроисхождения,
//		|	ТаблицаТовары.ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2
//		|
//		|ИМЕЮЩИЕ
//		|	(СУММА(ТаблицаТовары.Количество) <> 0
//		|		ИЛИ СУММА(ТаблицаТовары.Сумма) <> 0
//		|		ИЛИ СУММА(ТаблицаТовары.СуммаНДС) <> 0)
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ТаблицаТовары.Ссылка.НомерЧекаККМ КАК НомерФискальногоЧека,
//		|	ВЫБОР
//		|		КОГДА НЕ ПродажиТекущейСмены.Ссылка ЕСТЬ NULL
//		|			ТОГДА &ДатаДокумента
//		|		ИНАЧЕ ЕСТЬNULL(ОснованиеВозврата.ОтчетОРозничныхПродажах.Дата, НЕОПРЕДЕЛЕНО)
//		|	КОНЕЦ КАК ДатаРеализации,
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
//		|	ТаблицаТовары.Цена КАК Цена,
//		|	ТаблицаТовары.КиЗ_ГИСМ КАК КиЗ_ГИСМ,
//		|	СУММА(ТаблицаТовары.Количество) КАК Количество,
//		|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
//		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
//		|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
//		|	РозничныеЧекиКПогашению.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
//		|	ТаблицаТовары.Номенклатура.НомерГТД КАК НомерГТД,
//		|	ТаблицаТовары.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
//		|	ТаблицаТовары.ЦенаФорма2 КАК ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2 КАК СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2 КАК СуммаНДСФорма2
//		|ИЗ
//		|	ВТ_Возвраты КАК РозничныеЧекиКПогашению
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК ТаблицаТовары
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = ТаблицаТовары.Ссылка)
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа КАК ОснованиеВозврата
//		|		ПО (РозничныеЧекиКПогашению.Основание = ОснованиеВозврата.Ссылка)
//		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ПродажиТекущейСмены
//		|		ПО (РозничныеЧекиКПогашению.Основание = ПродажиТекущейСмены.Ссылка)
//		|ГДЕ
//		|	НЕ ТаблицаТовары.Номенклатура.Услуга
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаТовары.Номенклатура,
//		|	ТаблицаТовары.КиЗ_ГИСМ,
//		|	ТаблицаТовары.Цена,
//		|	ТаблицаТовары.СтавкаНДС,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.ЦенаВключаетНДС,
//		|	ТаблицаТовары.Номенклатура.НомерГТД,
//		|	ТаблицаТовары.Номенклатура.СтранаПроисхождения,
//		|	ВЫБОР
//		|		КОГДА НЕ ПродажиТекущейСмены.Ссылка ЕСТЬ NULL
//		|			ТОГДА &ДатаДокумента
//		|		ИНАЧЕ ЕСТЬNULL(ОснованиеВозврата.ОтчетОРозничныхПродажах.Дата, НЕОПРЕДЕЛЕНО)
//		|	КОНЕЦ,
//		|	ТаблицаТовары.Ссылка.НомерЧекаККМ,
//		|	ТаблицаТовары.ЦенаФорма2,
//		|	ТаблицаТовары.СуммаФорма2,
//		|	ТаблицаТовары.СуммаНДСФорма2
//		|
//		|ИМЕЮЩИЕ
//		|	(СУММА(ТаблицаТовары.Количество) <> 0
//		|		ИЛИ СУММА(ТаблицаТовары.Сумма) <> 0
//		|		ИЛИ СУММА(ТаблицаТовары.СуммаНДС) <> 0)
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВТ_Возвраты.Ссылка КАК Ссылка,
//		|	ВЫБОР
//		|		КОГДА ВТ_Возвраты.ЦенаВключаетНДС
//		|			ТОГДА РозничнаяПродажаАгентскиеУслуги.Сумма
//		|		ИНАЧЕ РозничнаяПродажаАгентскиеУслуги.Сумма + РозничнаяПродажаАгентскиеУслуги.СуммаНДС
//		|	КОНЕЦ КАК Сумма
//		|ПОМЕСТИТЬ ВТ_ВозвратУслуг
//		|ИЗ
//		|	ВТ_Возвраты КАК ВТ_Возвраты
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.АгентскиеУслуги КАК РозничнаяПродажаАгентскиеУслуги
//		|		ПО (ВТ_Возвраты.Ссылка = РозничнаяПродажаАгентскиеУслуги.Ссылка)
//		|ГДЕ
//		|	НЕ РозничнаяПродажаАгентскиеУслуги.Ссылка ЕСТЬ NULL
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|ВЫБРАТЬ
//		|	ВТ_Возвраты.Ссылка,
//		|	ВЫБОР
//		|		КОГДА ВТ_Возвраты.ЦенаВключаетНДС
//		|			ТОГДА РозничнаяПродажаТовары.Сумма
//		|		ИНАЧЕ РозничнаяПродажаТовары.Сумма + РозничнаяПродажаТовары.СуммаНДС
//		|	КОНЕЦ
//		|ИЗ
//		|	ВТ_Возвраты КАК ВТ_Возвраты
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.Товары КАК РозничнаяПродажаТовары
//		|		ПО (ВТ_Возвраты.Ссылка = РозничнаяПродажаТовары.Ссылка)
//		|ГДЕ
//		|	РозничнаяПродажаТовары.Номенклатура.Услуга
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВТ_Возвраты.Ссылка КАК Ссылка,
//		|	СУММА(ВТ_ВозвратУслуг.Сумма) КАК СуммаВозвратаУслуги,
//		|	ВТ_Возвраты.СуммаДокумента КАК СуммаДокумента,
//		|	ВТ_Возвраты.Основание КАК Основание
//		|ИЗ
//		|	ВТ_ВозвратУслуг КАК ВТ_ВозвратУслуг
//		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВТ_Возвраты
//		|		ПО (ВТ_ВозвратУслуг.Ссылка = ВТ_Возвраты.Ссылка)
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ВТ_Возвраты.Ссылка,
//		|	ВТ_Возвраты.СуммаДокумента,
//		|	ВТ_Возвраты.Основание
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаАгентскиеУслуги.Номенклатура КАК Номенклатура,
//		|	ТаблицаАгентскиеУслуги.Содержание КАК Содержание,
//		|	СУММА(ТаблицаАгентскиеУслуги.Количество * ВЫБОР
//		|			КОГДА РозничныеЧекиКПогашению.ЭтоВозврат
//		|				ТОГДА -1
//		|			ИНАЧЕ 1
//		|		КОНЕЦ) КАК Количество,
//		|	ТаблицаАгентскиеУслуги.Цена КАК Цена,
//		|	СУММА(ТаблицаАгентскиеУслуги.Сумма * ВЫБОР
//		|			КОГДА РозничныеЧекиКПогашению.ЭтоВозврат
//		|				ТОГДА -1
//		|			ИНАЧЕ 1
//		|		КОНЕЦ) КАК Сумма,
//		|	ТаблицаАгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
//		|	СУММА(ТаблицаАгентскиеУслуги.СуммаНДС * ВЫБОР
//		|			КОГДА РозничныеЧекиКПогашению.ЭтоВозврат
//		|				ТОГДА -1
//		|			ИНАЧЕ 1
//		|		КОНЕЦ) КАК СуммаНДС,
//		|	ТаблицаАгентскиеУслуги.Контрагент КАК Контрагент,
//		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
//		|	РозничныеЧекиКПогашению.ЦенаВключаетНДС КАК ЦенаВключаетНДС
//		|ПОМЕСТИТЬ ВТ_АгентскиеУслуги
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
//		|		ПО (ТаблицаАгентскиеУслуги.Ссылка = РозничныеЧекиКПогашению.Ссылка)
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаАгентскиеУслуги.Номенклатура,
//		|	ТаблицаАгентскиеУслуги.Содержание,
//		|	ТаблицаАгентскиеУслуги.Цена,
//		|	ТаблицаАгентскиеУслуги.СтавкаНДС,
//		|	ТаблицаАгентскиеУслуги.Контрагент,
//		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.ЦенаВключаетНДС,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВТ_АгентскиеУслуги.Организация КАК Организация,
//		|	ВТ_АгентскиеУслуги.Склад КАК Склад,
//		|	ВТ_АгентскиеУслуги.СчетКасса КАК СчетКасса,
//		|	ВТ_АгентскиеУслуги.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ВТ_АгентскиеУслуги.Номенклатура КАК Номенклатура,
//		|	ВТ_АгентскиеУслуги.Содержание КАК Содержание,
//		|	ВТ_АгентскиеУслуги.Количество КАК Количество,
//		|	ВТ_АгентскиеУслуги.Цена КАК Цена,
//		|	ВТ_АгентскиеУслуги.Сумма КАК Сумма,
//		|	ВТ_АгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
//		|	ВТ_АгентскиеУслуги.СуммаНДС КАК СуммаНДС,
//		|	ВТ_АгентскиеУслуги.Контрагент КАК Контрагент,
//		|	ВТ_АгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
//		|	ВТ_АгентскиеУслуги.ЦенаВключаетНДС КАК ЦенаВключаетНДС
//		|ИЗ
//		|	ВТ_АгентскиеУслуги КАК ВТ_АгентскиеУслуги
//		|ГДЕ
//		|	ВТ_АгентскиеУслуги.Сумма <> 0
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаПодарочныеСертификаты.ВидОплаты КАК ВидОплаты,
//		|	СУММА(ТаблицаПодарочныеСертификаты.Сумма * ВЫБОР
//		|			КОГДА РозничныеЧекиКПогашению.ЭтоВозврат
//		|				ТОГДА -1
//		|			ИНАЧЕ 1
//		|		КОНЕЦ) КАК Сумма
//		|ИЗ
//		|	ВТ_РозничныеЧекиКПогашению КАК РозничныеЧекиКПогашению
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РозничнаяПродажа.ПодарочныеСертификаты КАК ТаблицаПодарочныеСертификаты
//		|		ПО (РозничныеЧекиКПогашению.Ссылка = ТаблицаПодарочныеСертификаты.Ссылка)
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаПодарочныеСертификаты.ВидОплаты,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|
//		|ИМЕЮЩИЕ
//		|	СУММА(ТаблицаПодарочныеСертификаты.Сумма) <> 0
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Ссылка КАК Ссылка,
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаОплата.ВидОплаты КАК ВидОплаты,
//		|	СУММА(ТаблицаОплата.Сумма) КАК СуммаОплаты
//		|ИЗ
//		|	Документ.РозничнаяПродажа.Оплата КАК ТаблицаОплата
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Продажи КАК РозничныеЧекиКПогашению
//		|		ПО (ТаблицаОплата.Ссылка = РозничныеЧекиКПогашению.Ссылка)
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаОплата.ВидОплаты,
//		|	РозничныеЧекиКПогашению.Ссылка,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|
//		|ИМЕЮЩИЕ
//		|	СУММА(ТаблицаОплата.Сумма) <> 0
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	РозничныеЧекиКПогашению.Ссылка КАК Ссылка,
//		|	РозничныеЧекиКПогашению.Организация КАК Организация,
//		|	РозничныеЧекиКПогашению.Склад КАК Склад,
//		|	РозничныеЧекиКПогашению.СчетКасса КАК СчетКасса,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
//		|	ТаблицаОплата.ВидОплаты КАК ВидОплаты,
//		|	СУММА(ТаблицаОплата.Сумма) КАК СуммаОплаты
//		|ИЗ
//		|	Документ.РозничнаяПродажа.Оплата КАК ТаблицаОплата
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК РозничныеЧекиКПогашению
//		|		ПО (ТаблицаОплата.Ссылка = РозничныеЧекиКПогашению.Ссылка)
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТаблицаОплата.ВидОплаты,
//		|	РозничныеЧекиКПогашению.Ссылка,
//		|	РозничныеЧекиКПогашению.Организация,
//		|	РозничныеЧекиКПогашению.Склад,
//		|	РозничныеЧекиКПогашению.ДеятельностьНаПатенте,
//		|	РозничныеЧекиКПогашению.СчетКасса
//		|
//		|ИМЕЮЩИЕ
//		|	СУММА(ТаблицаОплата.Сумма) <> 0";
//	КонецЕсли;
//	Возврат Результат;
//	
//КонецФункции

//&Вместо("ПечатьТоварныйЧек")
//Функция УУ_ПечатьТоварныйЧек(МассивОбъектов, ОбъектыПечати)
//	// Вариант с расширением макета (в макет добавить пустую строку)
//	//Результат = ПродолжитьВызов(МассивОбъектов, ОбъектыПечати); 
//	//Для каждого ОбъектПечати из ОбъектыПечати Цикл  
//	//	Областьдокумента = Результат.Области.Найти(ОбъектПечати);  
//	//	Если НЕ ОбластьДокумента = Неопределено Тогда
//	//		КонецОбласти = ОбластьДокумента.Низ;  
//	//		Результат.Область(КонецОбласти,2).Текст = ОбъектПечати.Значение.Контрагент;  
//	//		Результат.Область(КонецОбласти,2).ВысотаСтроки = 20; 
//	//	КонецЕсли;	
//	//КонецЦикла;	
//	//Результат.АвтоМасштаб = Ложь;   
//	//
//	//Возврат Результат
//	
//	 //Вариант без расширения макета, макет можно удалить из расширения
//	Результат = ПродолжитьВызов(МассивОбъектов, ОбъектыПечати); 
//	ТД = Новый ТабличныйДокумент; 
//	ТД.АвтоМасштаб			= Истина;
//	ТД.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
//	ТД.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РозничнаяПродажа_ТоварныйЧек";
//	ТД.ПолеСнизу = 20;

//	ТДОбласть = Новый ТабличныйДокумент;  
//	Для каждого ОбъектПечати из ОбъектыПечати Цикл  
//		Областьдокумента = Результат.Области.Найти(ОбъектПечати);  
//		Если НЕ ОбластьДокумента = Неопределено Тогда
//			НомерСтрокиНачало = ТД.ВысотаТаблицы + 1;
//			ОбластьДокумента.КонецСтраницы = Ложь;
//			ТДОбласть.ВставитьОбласть(Областьдокумента, ТДОбласть.Область()); 
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			ТД.Вывести(ТДОбласть); 
//			ТДОбласть.Очистить();
//			ТДОбласть.ВставитьОбласть(Результат.Область("R"+ТД.ВысотаТаблицы+"C1"), ТДОбласть.Область());
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			Пока ТД.ПроверитьВывод(ТДОбласть) Цикл
//				ТД.Вывести(ТДОбласть);
//				Прервать;
//			КонецЦикла;
//			ТДОбласть.Очистить();
//			ТД.Область(ТД.ВысотаТаблицы,2).Текст = ОбъектПечати.Значение.Контрагент;
//			ТД.Область(НомерСтрокиНачало+1,,ТД.ВысотаТаблицы).СоздатьФорматСтрок();
//			ТД.ВывестиГоризонтальныйРазделительСтраниц();
//			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТД,
//			НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати.Значение);
//		КонецЕсли;	
//	КонецЦикла;	

//	Возврат ТД
//	
//КонецФункции 