
&НаСервере
Процедура УУ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Группа = Элементы.Добавить(
	ЭтаФорма,
	Тип("ГруппаФормы"),
	ЭтаФорма.Элементы.ГруппаШапкаЛевая);
	
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Группа.Заголовок = "Параметры для учета (Упр.):";
	
	ПолеВвода = Элементы.Добавить("Контрагент", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Контрагент";
	
	ПолеВвода = Элементы.Добавить("Договор", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Договор";
	
	ПолеВвода = Элементы.Добавить("Касса", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Касса";  
	
	Команды.ПринятьОплату.Действие = "ПринятьОплатуПредварительноеДействие";
	
КонецПроцедуры

&НаСервере
Процедура УУ_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда
	//	ТекущийОбъект.ДополнительныеСвойства.Вставить("СинхронизироватьТЧСерииДокументаУУ",Истина); 
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПринятьОплатуПредварительноеДействие(Команда)
	
	НастройкаФорма2 = ПолучитьНастройкуФорма2();
	Если НастройкаФорма2 Тогда
		//Если ВсяНоменклатураФорма2() Тогда
			Если НЕ ПроверитьЗаполнение() Тогда
				Возврат;
			КонецЕсли;
			ОписаниеОповещенияЧастичнаяОплата = Новый ОписаниеОповещения("ВыполнитьПослеОтветаЧастичнаяОплата",ЭтотОбъект,Новый Структура("Команда",Команда));
			КнопкиВопросаОплатаФорма2 = Новый СписокЗначений;
			КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Нет,"Частичная оплата (для формы-2");
			КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Да,"Полная оплата");
			КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Отмена,"Отмена");
			ПоказатьВопрос(ОписаниеОповещенияЧастичнаяОплата,"Выберите вариант оплаты:",КнопкиВопросаОплатаФорма2,,КодВозвратаДиалога.Нет);
		//Иначе
		//	ПринятьОплату(Команда);
		//КонецЕсли;
	Иначе
		ПринятьОплату(Команда);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ВсяНоменклатураФорма2() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СправочникНоменклатура.Форма2 КАК НоменклатураФорма2
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&Номенклатура)
    |
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураФорма2";
	
	Запрос.УстановитьПараметр("Номенклатура", Объект.Товары.Выгрузить(,"Номенклатура"));
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если Выборка.НоменклатураФорма2 Тогда
			Возврат Истина;	
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьНастройкуФорма2()
	
	Возврат Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("КонтрольНоменклатурыДляФормы2ВЗаказеКлиента");
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПослеОтветаЧастичнаяОплата(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Объект.ОплатаФорма2 Тогда
			ОбратноеЗаполнениеИРасчетДокументДляФормы2();
		КонецЕсли;
		ПринятьОплату(ДопПараметры.Команда);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ПересчетПроизведен = Ложь;
		РассчитатьИПерезаполнитьДокументДляФормы2(ПересчетПроизведен);
		Если ПересчетПроизведен Тогда
			Объект.ОплатаФорма2 = Истина;
			ПринятьОплату(ДопПараметры.Команда);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИПерезаполнитьДокументДляФормы2(ПересчетПроизведен)
	
	ТипМинимальнаяЦена = Справочники.сабМониторВнедрения.ПолучитьЗначениеНастройки("КонтрольМинимальнойЦеныПоТипуЦен");
	Если ЗначениеЗаполнено(ТипМинимальнаяЦена) Тогда
		Для каждого СтрокаТовары Из Объект.Товары Цикл
			СтрокаТовары.ЦенаФорма2 = СтрокаТовары.Цена;
			СтрокаТовары.СуммаФорма2 = СтрокаТовары.Сумма;	
			СтрокаТовары.СуммаНДСФорма2 = СтрокаТовары.СуммаНДС;
		КонецЦикла;
		Если Не Объект.ОплатаФорма2 Тогда
			Объект.СуммаДокументаФорма2 = Объект.СуммаДокумента;
		КонецЕсли;
		//Объект.ТипЦеныОплатаФорма2 = Объект.ТипЦен;
		//Объект.ТипЦен = ТипМинимальнаяЦена;
		//ЗаполнитьРассчитатьСуммы(Истина, Истина);  
		ТаблицаЦенНоменклатуры = Неопределено;
		ПерезаполнитьЦены = Истина; 
		ПересчитатьНДС = Истина;
		
		Если ПерезаполнитьЦены Тогда
			СписокНоменклатуры	= ОбщегоНазначения.ВыгрузитьКолонку(Объект.Товары, "Номенклатура", Истина);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокНоменклатуры,
			ОбщегоНазначения.ВыгрузитьКолонку(Объект.АгентскиеУслуги, "Номенклатура"), Истина);
			
			ТаблицаЦенНоменклатуры = Ценообразование.ПолучитьТаблицуЦенНоменклатуры(
			СписокНоменклатуры,
			ТипМинимальнаяЦена,
			Объект.Дата);
		КонецЕсли;
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
			ЗаполнитьРассчитатьСуммыВСтроке(СтрокаТабличнойЧасти, ТаблицаЦенНоменклатуры, ПерезаполнитьЦены, ПересчитатьНДС, ?(СтрокаТабличнойЧасти.ЭтоУслуга, 1, 0));
			
			Если СтрокаТабличнойЧасти.ЦенаФорма2 < СтрокаТабличнойЧасти.Цена Или СтрокаТабличнойЧасти.Цена = 0 Тогда
				СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.ЦенаФорма2;
				СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.СуммаФорма2;	
				СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.СуммаНДСФорма2;
				СтрокаТабличнойЧасти.ЦенаФорма2 = 0; 
				СтрокаТабличнойЧасти.СуммаФорма2 = 0;
				СтрокаТабличнойЧасти.СуммаНДСФорма2 = 0;
				ЭтоУслуга = СтрокаТабличнойЧасти.ЭтоУслуга;
				ЗначениеПустогоКоличества = ?(ЭтоУслуга, 1, 0);
				//РассчитатьСуммыПоСтроке(СтрокаТабличнойЧасти, Объект.СуммаВключаетНДС, ЗначениеПустогоКоличества);
				РассчитатьВсегоПоСтроке(СтрокаТабличнойЧасти, Объект.СуммаВключаетНДС);
			КонецЕсли;
		КонецЦикла; 
		
		//Для Каждого СтрокаТабличнойЧасти Из Объект.АгентскиеУслуги Цикл
		//	ЗаполнитьРассчитатьСуммыВСтроке(СтрокаТабличнойЧасти, ТаблицаЦенНоменклатуры, ПерезаполнитьЦены, ПересчитатьНДС, 1);
		//КонецЦикла;
		УправлениеФормой(ЭтотОбъект);
		ОбновитьИтоги(ЭтотОбъект);
		ПересчетПроизведен = Истина;
		//Объект.ТипЦен = Объект.ТипЦеныОплатаФорма2;
	Иначе
		Сообщить("Пересчет цен для формы 2 не был выполнен. Не заполнен тип цены в настройках учета.");
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура ОбратноеЗаполнениеИРасчетДокументДляФормы2()
	
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		Если СтрокаТовары.СуммаФорма2 <> 0 Тогда
			СтрокаТовары.Цена = СтрокаТовары.ЦенаФорма2;
			СтрокаТовары.Сумма = СтрокаТовары.СуммаФорма2;	
			СтрокаТовары.СуммаНДС = СтрокаТовары.СуммаНДСФорма2; 
		КонецЕсли;
		СтрокаТовары.ЦенаФорма2 = 0; 
		СтрокаТовары.СуммаФорма2 = 0;
		СтрокаТовары.СуммаНДСФорма2 = 0;
		ЭтоУслуга = СтрокаТовары.ЭтоУслуга;
		ЗначениеПустогоКоличества = ?(ЭтоУслуга, 1, 0);
		//РассчитатьСуммыПоСтроке(СтрокаТовары, Объект.СуммаВключаетНДС, ЗначениеПустогоКоличества);
		РассчитатьВсегоПоСтроке(СтрокаТовары, Объект.СуммаВключаетНДС); 
	КонецЦикла;
	Объект.СуммаДокумента = Объект.СуммаДокументаФорма2;
	Объект.СуммаДокументаФорма2 = 0;
	Объект.ОплатаФорма2 = Ложь;
	УправлениеФормой(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);
	//Объект.СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "Товары") 
	//	+ УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(Объект, "АгентскиеУслуги")
	//	+ Объект.ПодарочныеСертификаты.Итог("Сумма");
		
КонецПроцедуры

&НаКлиенте
&Перед("ОткрытьФормуОплатыЗавершение")
Процедура УУ_ОткрытьФормуОплатыЗавершение(Результат, ДополнительныеПараметры)
	
	НастройкаФорма2 = ПолучитьНастройкуФорма2();
	//ВсяНоменклатураФорма2 = ВсяНоменклатураФорма2();
	Если НастройкаФорма2 Тогда
		//Если ВсяНоменклатураФорма2 Тогда
			Если Результат = Неопределено Тогда
				Если Объект.ОплатаФорма2 Тогда
					ОбратноеЗаполнениеИРасчетДокументДляФормы2();
				КонецЕсли;
			КонецЕсли; 
		//КонецЕсли;
	КонецЕсли;
	//Если Результат <> Неопределено И НастройкаФорма2 И ВсяНоменклатураФорма2 Тогда
	Если Результат <> Неопределено И НастройкаФорма2 Тогда
		СоздатьПКОФорма2();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
&Вместо("Подключаемый_ВыполнитьКоманду")
Процедура УУ_Подключаемый_ВыполнитьКоманду(Команда) 
	
	НастройкаФорма2 = ПолучитьНастройкуФорма2();
	
	Если НастройкаФорма2 Тогда
		//Если ВсяНоменклатураФорма2() Тогда
			//Если НЕ ПроверитьЗаполнение() Тогда
			//	Возврат;
			//КонецЕсли;
			//ОписаниеОповещенияЧастичнаяОплата = Новый ОписаниеОповещения("ВыполнитьПослеОтветаЧастичнаяОплатаТоварныйЧек",ЭтотОбъект,Новый Структура("Команда",Команда));
			//КнопкиВопросаОплатаФорма2 = Новый СписокЗначений; 
			//КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Нет,"Частичная оплата (для формы-2");
			//КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Да,"Полная оплата");
			//КнопкиВопросаОплатаФорма2.Добавить(КодВозвратаДиалога.Отмена,"Отмена");
			//ПоказатьВопрос(ОписаниеОповещенияЧастичнаяОплата,"Выберите вариант оплаты:",КнопкиВопросаОплатаФорма2,,КодВозвратаДиалога.Нет);
		//Иначе
		//	ПродолжитьВызов(Команда);
		//КонецЕсли;
		
		Если Объект.Проведен Тогда			
			ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);			
		Иначе
			ОплатаПоФорме2 = Объект.ОплатаФорма2;
			
			Если Объект.ОплатаФорма2 Тогда
				ОбратноеЗаполнениеИРасчетДокументДляФормы2();
				Записать();
			КонецЕсли;  
			
			ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
			
			Если ОплатаПоФорме2 Тогда
				ПересчетПроизведен = Ложь;
				РассчитатьИПерезаполнитьДокументДляФормы2(ПересчетПроизведен);
				
				Если ПересчетПроизведен Тогда
					Объект.ОплатаФорма2 = Истина;
					ПриИзмененииКоличествоЦена("Товары"); 
					Записать();
				КонецЕсли;     
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		ПродолжитьВызов(Команда);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеОтветаЧастичнаяОплатаТоварныйЧек(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Объект.ОплатаФорма2 Тогда
			ОбратноеЗаполнениеИРасчетДокументДляФормы2();
			Записать();
		КонецЕсли;  
		
		ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, ДопПараметры.Команда, Объект);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ПересчетПроизведен = Ложь;
		РассчитатьИПерезаполнитьДокументДляФормы2(ПересчетПроизведен);
		
		Если ПересчетПроизведен Тогда
			Объект.ОплатаФорма2 = Истина;
			ПриИзмененииКоличествоЦена("Товары"); 
			Записать();
			ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, ДопПараметры.Команда, Объект);
		КонецЕсли;     
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПКОФорма2()
	
	СуммаДоплаты = Объект.СуммаДокументаФорма2 - ЭтотОбъект.ИтогВсего;
	Если СуммаДоплаты > 0 Тогда 
		Отказ = Ложь;
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Записать();
		КонецЕсли;
		Попытка
			ДокументУпр = ПолучитьСоздатьДокументУУДляТекущегоДокументаБух(Объект.Ссылка);
		Исключение
			ДокументУпр = Неопределено;
		КонецПопытки;
		СозданиеПКОФорма2 = Новый Структура;
		СозданиеПКОФорма2.Вставить("Субконто2",Объект.Касса); 
		СозданиеПКОФорма2.Вставить("Контрагент",Объект.Контрагент);
		СозданиеПКОФорма2.Вставить("Договор",Объект.Договор);
		СозданиеПКОФорма2.Вставить("СуммаДокумента",СуммаДоплаты);
		СозданиеПКОФорма2.Вставить("Субконто1",ПредопределенноеЗначение("Справочник.СтатьиДвиженияДенежныхСредств.РозничнаяВыручка")); 
		СозданиеПКОФорма2.Вставить("ДокументУУ",ДокументУпр);
		ПараметрыФормы = Новый Структура("СозданиеПКОФорма2",СозданиеПКОФорма2); 
		ОткрытьФорму("Документ.УЧ_ДвижениеДС.ФормаОбъекта",ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПодобратьУправленческийДокумент(ДокументБУСсылка)
	
	ЗапросДокУУ = Новый Запрос;
	ЗапросДокУУ.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	сабОбработкаДокументов.ДокументУУ КАК ДокументУУ
	|ИЗ
	|	РегистрСведений.сабОбработкаДокументов КАК сабОбработкаДокументов
	|ГДЕ
	|	сабОбработкаДокументов.ДокументБУ = &ДокБУ";
	
	ЗапросДокУУ.УстановитьПараметр("ДокБУ", ДокументБУСсылка);
	
	РезультатЗапросаДокУУ = ЗапросДокУУ.Выполнить();
	Если РезультатЗапросаДокУУ.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		Выборка = РезультатЗапросаДокУУ.Выбрать();
		Выборка.Следующий(); 
		Возврат Выборка.ДокументУУ;
	КонецЕсли;
	
КонецФункции  

&НаСервереБезКонтекста
Функция ПолучитьСоздатьДокументУУДляТекущегоДокументаБух(ДокументБУСсылка)
	
	УстановитьПривилегированныйРежим(Истина);
	ДокументУпр = ПодобратьУправленческийДокумент(ДокументБУСсылка);
	Если Не ЗначениеЗаполнено(ДокументУпр) Тогда 
		РегистрыСведений.сабОбработкаДокументов.ОбработатьДокументыБУНаСервере(Новый Структура("Ссылка",ДокументБУСсылка));
		ДокументУпр = ПодобратьУправленческийДокумент(ДокументБУСсылка);
	КонецЕсли; 
	Если ЗначениеЗаполнено(ДокументУпр) И ТипЗнч(ДокументУпр) = Тип("ДокументСсылка.УЧ_Реализация") И ЗначениеЗаполнено(ДокументБУСсылка.Заказ) Тогда 
		ДокУУобъект = ДокументУпр.ПолучитьОбъект(); 
		ДокУУобъект.ДополнительныеСвойства.Вставить("НеИзменятьСтатусЗаказа", Истина);
		ДокУУобъект.ДополнительныеСвойства.Вставить("ПропуститьБизнесЛогикуПриЗаписи", Истина);
		ДокУУобъект.ДокОснование = ДокументБУСсылка.Заказ; 
		ДокУУобъект.Записать(); 
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ДокументУпр;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
&После("УправлениеФормой")
Процедура УУ_УправлениеФормой(Форма)
	
	Форма.Элементы.ТоварыИзменитьТовары.Доступность = Не Форма.ТолькоПросмотр Или Форма.Элементы.ГруппаБаннерПробитЧек.Видимость;
	
КонецПроцедуры
