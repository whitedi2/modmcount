
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СчетПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличество(Команда)
	Если НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные =Неопределено Тогда
		Крахмалистость = ПересчититьКоличествоСервер(Объект.Предприятие, Объект.Дата, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура, Элементы.ТабличнаяЧасть.ТекущиеДанные.Склад, Элементы.ТабличнаяЧасть.ТекущиеДанные.СчетУчета, Элементы.ТабличнаяЧасть.ТекущиеДанные.ВидДеятельности);
		Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество = ?(Крахмалистость, Элементы.ТабличнаяЧасть.ТекущиеДанные.КоличествоКрахмал / Крахмалистость, Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПересчититьКоличествоСервер(Предприятие, Дата, Материал, Склад, Счет10, Подразделение)
	Запрос = Новый Запрос;
	Если Счет10.УчетПоПодразделениям Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОстатки.Субконто1,
		|	УчетныйОстатки.Субконто2,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Цена,
		|	УчетныйОстатки.Счет,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоКРХОстаток, 0) КАК Крахмал,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоКРХОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоКРХОстаток
		|	КОНЕЦ КАК ЦенаКрахмал
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Остатки(
		|			&ПозицияДокумента,
		|			Счет В (&ВыбСчета),
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
		|				И Субконто1 В (&ВыбМатериалы)
		|				И Субконто2 В (&ВыбСклады)
		|				И Подразделение В (&ВыбПодразделение)) КАК УчетныйОстатки";	
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОстатки.Субконто1,
		|	УчетныйОстатки.Субконто2,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Цена,
		|	УчетныйОстатки.Счет,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоКРХОстаток, 0) КАК Крахмал,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоКРХОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоКРХОстаток
		|	КОНЕЦ КАК ЦенаКрахмал
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Остатки(
		|			&ПозицияДокумента,
		|			Счет В (&ВыбСчета),
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И СценарийПлана = &СценарийФакт
		|				И Субконто1 В (&ВыбМатериалы)
		|				И Субконто2 В (&ВыбСклады)) КАК УчетныйОстатки";
	КонецЕсли;
	
	
	
	Запрос.УстановитьПараметр("ВыбМатериалы", Материал);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("ВыбСклады", Склад);
	Запрос.УстановитьПараметр("ВыбСчета", Счет10);
	Запрос.УстановитьПараметр("ПозицияДокумента", Дата);
	Запрос.УстановитьПараметр("ВыбПодразделение", Подразделение);
	Запрос.УстановитьПараметр("СценарийФакт", Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина));
	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.Количество, Выборка.Крахмал / Выборка.Количество, 0);
	Иначе
		Возврат 0;
	КонецЕсли;	

КонецФункции


&НаКлиенте
Процедура ПересчитатьКрахмал(Команда)
	Если НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные =Неопределено Тогда
		Крахмалистость = ПересчититьКоличествоСервер(Объект.Предприятие, Объект.Дата, Элементы.ТабличнаяЧасть.ТекущиеДанные.Материал, Элементы.ТабличнаяЧасть.ТекущиеДанные.Склад, Элементы.ТабличнаяЧасть.ТекущиеДанные.СчетУчета, Элементы.ТабличнаяЧасть.ТекущиеДанные.ВидДеятельности);
		Элементы.ТабличнаяЧасть.ТекущиеДанные.КоличествоКрахмал = ?(Крахмалистость, Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество * Крахмалистость, Элементы.ТабличнаяЧасть.ТекущиеДанные.КоличествоКрахмал);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьМатериалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//Если ТипЗнч(Элементы.ТабличнаяЧасть.ТекущиеДанные.Материал) = Тип("СправочникСсылка.Номенклатура") Тогда
	//	СтандартнаяОбработка = ЛОЖЬ;
	//	Если Объект.Ссылка.Пустая() Тогда
	//		ДатаГраница = КонецДня(Объект.Дата)
	//	Иначе
	//		ДатаГраница =  УЧ_Сервер.ГраницаВключительно(Объект.Дата);
	//	КонецЕсли;
	//	Если БюджетныйНаСервере.ВернутьРеквизит(Элементы.ТабличнаяЧасть.ТекущиеДанные.Счет10,"УчетПоПодразделениям") Тогда
	//		Подр = Элементы.ТабличнаяЧасть.ТекущиеДанные.ВидДеятельности;
	//	Иначе
	//		Подр = Неопределено;
	//	КонецЕсли;
	//	Парам = Новый Структура("ТекущаяСтрока, ВыбДата,ВыбСчет,ВыбПредприятие,ВыбПодразделение,ВыбСклад",Элементы.ТабличнаяЧасть.ТекущиеДанные.Материал, ДатаГраница,Элементы.ТабличнаяЧасть.ТекущиеДанные.Счет10,Объект.Предприятие,Подр,Элементы.ТабличнаяЧасть.ТекущиеДанные.Склад);
	//	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками",Парам,Элемент);
	//КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НомерСтроки") Тогда
		Элементы.ТабличнаяЧасть.ТекущаяСтрока = Параметры.НомерСтроки - 1;	
	КонецЕсли;
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	УчетКрахмала = Ложь;
	Элементы.ТабличнаяЧастьПересчитатьКоличество.Видимость = УчетКрахмала;
	Элементы.ТабличнаяЧастьПересчитатьКрахмал.Видимость = УчетКрахмала;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;
	
	ВидОперацииПриИзмененииНаСервере();
	
	Для Каждого СтрокаТЧ Из Объект.ТабличнаяЧасть Цикл
		НайденныеСерии = Объект.СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", СтрокаТЧ.Номенклатура, СтрокаТЧ.НомерСтроки));
		Если НайденныеСерии.Количество() > 1 Тогда
			СтрокаТЧ.НесколькоСерий = Истина;
			СтрокаТЧ.СерияНоменклатуры = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	ИспользоватьСерии = Справочники.СерииНоменклатуры.СерииНоменклатурыИспользуются(); 
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	ЗаполнитьДобавленныеКолонкиТаблиц();
	СчетПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьМатериалПриИзменении(Элемент)
	Элементы.ТабличнаяЧасть.ТекущиеДанные.СчетУчета = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура, "Счет10");
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
			ТекСтрока.ВидДеятельности = Объект.Подразделение;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.КорПодразделение) Тогда
			ТекСтрока.КорПодразделение = Объект.КорПодразделение;
		КонецЕсли;	
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			ТекСтрока.Склад = Объект.Склад;
		КонецЕсли;	
		Если ЗначениеЗаполнено(Объект.Счет) Тогда
			ТекСтрока.КорСчет = Объект.Счет;
			ТекСтрока.КорСубконто1 = Объект.Субконто1;
			ТекСтрока.КорСубконто2 = Объект.Субконто2;
			ТекСтрока.КорСубконто3 = Объект.Субконто3;
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	//
	//ДанныеСчета = БухгалтерскийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.Счет, Объект.Предприятие);
	//
	//Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	//Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	//Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	//УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	//
	//Элементы.Субконто1.ПодсказкаВвода = Наименование1;
	//Элементы.Субконто2.ПодсказкаВвода = Наименование2;
	//Элементы.Субконто3.ПодсказкаВвода = Наименование3;
	//Элементы.КорПодразделение.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	//
	//Элементы.Субконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	//Элементы.Субконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	//Элементы.Субконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	//Элементы.КорПодразделение.Видимость = УчетПоПодразделениям;
	
	СчетПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СчетПриИзмененииНаСервере()

	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.Счет, Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.Субконто1.ПодсказкаВвода = Наименование1;
	Элементы.Субконто2.ПодсказкаВвода = Наименование2;
	Элементы.Субконто3.ПодсказкаВвода = Наименование3;
	Элементы.КорПодразделение.ПодсказкаВвода = ?(УчетПоПодразделениям, "Подразделение затрат", "");
	
	Элементы.Субконто1.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.Субконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	Элементы.Субконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	Элементы.КорПодразделение.Видимость = УчетПоПодразделениям;
	
	ВидОперацииПриИзмененииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура Подразделение20ПриИзменении(Элемент)
	ПодразделениеПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		РеквизитыПодразделения = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Подразделение, "Склад, Организация");
		Если ЗначениеЗаполнено(РеквизитыПодразделения.Склад) Тогда
			Объект.Склад = РеквизитыПодразделения.Склад;
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыПодразделения.Организация) Тогда
			Объект.Организация = РеквизитыПодразделения.Организация;
		КонецЕсли;
		//КонтрагентПриИзмененииСервер();
	КонецЕсли; 
	
	
КонецПроцедуры

#Область ПодборТоваров
&НаКлиенте
Процедура ПодборТовары(Команда)

	ПараметрыПодбора = ПолучитьПараметрыПодбора("ТабличнаяЧасть");
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.Форма", ПараметрыПодбора,
			ЭтаФорма, УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИмяТаблицы)

	ЭтоВставкаИзБуфера = ВыбранноеЗначение.Свойство("ЭтоВставкаИзБуфера");
	СписокСвойств = Неопределено;
	Если ЭтоВставкаИзБуфера Тогда
		
		ТаблицаТоваров = ВыбранноеЗначение.Данные;
		СписокСвойств = ВыбранноеЗначение.СписокСвойств;
		
	Иначе
		
		ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
		
	КонецЕсли;
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	//СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
	//	ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта, Ложь);
	
	//ЗаполнитьСтавкиНДСВРознице	= НТТ И УчетВПродажныхЦенах И РазделятьПоСтавкамНДС;
	ЗаполнитьСтавкиНДСВРознице = Ложь;
	
	СтрокиДляЗаполненияСчетов = Новый Массив;
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		СведенияОНоменклатуре = БюджетныйНаСервере.ВернутьРеквизиты(СтрокаТовара.Номенклатура, "ЕдиницаИзмерения, Счет10, СтавкаНДС");
		//Если ЭтоВставкаИзБуфера
		//	И СведенияОНоменклатуре <> Неопределено
		//	И ЗначениеЗаполнено(СведенияОНоменклатуре.Услуга)
		//	И СведенияОНоменклатуре.Услуга Тогда
		//	
		//	Продолжить;
		//	
		//КонецЕсли;
		СтрокаТабличнойЧасти = Объект[ИмяТаблицы].Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТовара, СписокСвойств);
		СтрокиДляЗаполненияСчетов.Добавить(СтрокаТабличнойЧасти);
		
		Если СведенияОНоменклатуре = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//Если ИмяТаблицы = "ТабличнаяЧасть" Тогда
			
			//СтрокаТабличнойЧасти.ЕдиницаИзмерения		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения),
			//	СтрокаТабличнойЧасти.ЕдиницаИзмерения, СведенияОНоменклатуре.ЕдиницаИзмерения);
			//СтрокаТабличнойЧасти.Коэффициент			= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Коэффициент),
			//	СтрокаТабличнойЧасти.Коэффициент, СведенияОНоменклатуре.Коэффициент);
			//СтрокаТабличнойЧасти.НомерГТД				= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.НомерГТД),
			//	СтрокаТабличнойЧасти.НомерГТД, СведенияОНоменклатуре.НомерГТД);
			//СтрокаТабличнойЧасти.СтранаПроисхождения	= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтранаПроисхождения),
			//	СтрокаТабличнойЧасти.СтранаПроисхождения, СведенияОНоменклатуре.СтранаПроисхождения);
			
			//СтрокаТабличнойЧасти.Товар		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Товар),
			//	СтрокаТабличнойЧасти.Товар, СтрокаТовара.Номенклатура);
			СтрокаТабличнойЧасти.СчетУчета		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Счет10),
				СтрокаТабличнойЧасти.Счет10, СведенияОНоменклатуре.Счет10);
			//СтрокаТабличнойЧасти.СтавкаНДС		= ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтавкаНДС),
			//	СтрокаТабличнойЧасти.СтавкаНДС, СведенияОНоменклатуре.СтавкаНДС);
			//Если НТТ Тогда
			//		
			//	СтрокаТабличнойЧасти.Цена = ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Цена),
			//		СтрокаТабличнойЧасти.Цена, СведенияОНоменклатуре.ЦенаВРознице);
			//		
			//	Если ЗаполнитьСтавкиНДСВРознице Тогда
			//		СтрокаТабличнойЧасти.СтавкаНДСВРознице = СведенияОНоменклатуре.СтавкаНДСВРознице;
			//	КонецЕсли;
			//	
			//КонецЕсли;
			
			//СтрокаТабличнойЧасти.ОтражениеВУСН = Перечисления.ОтражениеВУСН.НеПринимаются;
			
			//ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
			
		//КонецЕсли;
		
	КонецЦикла;
	
	//СчетаУчетаВДокументах.ЗаполнитьСтроки(СтрокиДляЗаполненияСчетов, ИмяТаблицы, Объект, Документы.СписаниеТоваров);
	
	Если ЭтоВставкаИзБуфера Тогда
		
		ВыбранноеЗначение.КоличествоДобавленныхСтрок = СтрокиДляЗаполненияСчетов.Количество();
		
	КонецЕсли;
	
	//ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыПодбора(ИмяТаблицы)

	ДатаРасчетов		= ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), ТекущаяДата(), Объект.Дата);
	
	ЗаголовокПодбора	= НСтр("ru = 'Подбор номенклатуры в %1 (%2)'");
	Если ИмяТаблицы = "Товары" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Товары'");
	ИначеЕсли ИмяТаблицы = "ВозвратнаяТара" Тогда
		ПредставлениеТаблицы = НСтр("ru = 'Возвратная тара'");
	КонецЕсли;
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, ПредставлениеТаблицы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаРасчетов"  , ДатаРасчетов);
	ПараметрыФормы.Вставить("Валюта"        , ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	ПараметрыФормы.Вставить("Организация"   , Объект.Организация);
	ПараметрыФормы.Вставить("Подразделение" , Объект.Подразделение);
	ПараметрыФормы.Вставить("Склад"         , Объект.Склад);
	ПараметрыФормы.Вставить("Заголовок"     , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ВидПодбора"    , "");
	ПараметрыФормы.Вставить("ИмяТаблицы"    , ИмяТаблицы);
	ПараметрыФормы.Вставить("Услуги"        , ИмяТаблицы = "Услуги");
	ПараметрыФормы.Вставить("ПоказыватьОстатки"  , Истина);
	ПараметрыФормы.Вставить("ЕстьКоличество", Истина);
	ПараметрыФормы.Вставить("Предприятие" , Объект.Предприятие);
		
	Возврат ПараметрыФормы;

КонецФункции

#КонецОбласти 

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьСчетПриИзменении(Элемент)
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
	"КорСубконто1", "КорСубконто2", "КорСубконто3", Объект.Предприятие, "КорПодразделение", Элементы, "ТабличнаяЧастьКорСубконто1", "ТабличнаяЧастьКорСубконто2", "ТабличнаяЧастьКорСубконто3", "ТабличнаяЧастьКорПодразделение");
	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.ТабличнаяЧасть.ТекущиеДанные, ПоляОбъекта);
	
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	Если НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
		ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3, Предприятие, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
		"КорСубконто1", "КорСубконто2", "КорСубконто3", Объект.Предприятие, "КорПодразделение", Элементы, "ТабличнаяЧастьКорСубконто1", "ТабличнаяЧастьКорСубконто2", "ТабличнаяЧастьКорСубконто3", "ТабличнаяЧастьКорПодразделение");
		БюджетныйНаКлиенте.УстановитьДоступность(Элементы.ТабличнаяЧасть.ТекущиеДанные, ПоляОбъекта);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.КорСчет КАК Счет
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&Табл КАК Табл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Предприятия.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ПОМЕСТИТЬ УчетПоПодразделениямПредприятия
	               |ИЗ
	               |	Справочник.Предприятия КАК Предприятия
	               |ГДЕ
	               |	Предприятия.Ссылка В(&Предприятие)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ) КАК Количественный,
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет) КАК Счет,
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ) КАК Валютный,
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И ЕСТЬNULL(УчетПоПодразделениямПредприятия.УчетПоПодразделениям, ЛОЖЬ) КАК УчетПоПодразделениям
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	               |		ПО Врем.Счет = Учетный.Ссылка,
	               |	УчетПоПодразделениямПредприятия КАК УчетПоПодразделениямПредприятия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(Учетный.Ссылка, Врем.Счет),
	               |	ЕСТЬNULL(Учетный.Количественный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.Валютный, ЛОЖЬ),
	               |	ЕСТЬNULL(Учетный.УчетПоПодразделениям, ЛОЖЬ)
	               |		И ЕСТЬNULL(УчетПоПодразделениямПредприятия.УчетПоПодразделениям, ЛОЖЬ)";
	
	Запрос.УстановитьПараметр("Табл", Объект.ТабличнаяЧасть.Выгрузить());
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Соотв = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	КонецЦикла;
	
	
	Для Каждого СтрокаТаблицы Из Объект.ТабличнаяЧасть Цикл
		СтруСчета = Соотв.Получить(СтрокаТаблицы.Корсчет);
		КоличествоСубконто   = СтруСчета.КоличествоСубконто;
		Для Индекс = 1 По 3 Цикл
			СтрокаТаблицы["КорСубконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
		КонецЦикла;
		//СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
		СтрокаТаблицы["КорПодразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
		//Валютный = СтруСчета.Валютный;
		//СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
		//СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	Для каждого СтрокаТЧ  Из Объект.ТабличнаяЧасть Цикл
	  НайденныеСерии = Объект.СерииНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, НомерСтрокиРеализации", СтрокаТЧ.Номенклатура, СтрокаТЧ.НомерСтроки));
		Если НайденныеСерии.Количество() > 1 Тогда
			СтрокаТЧ.НесколькоСерий = Истина;
			СтрокаТЧ.СерияНоменклатуры = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(ТекДанные = Неопределено, ИмяТЧ = Неопределено, ПересчитыватьСумму = Истина)
	
	Если ТекДанные = Неопределено Тогда
		ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	КонецЕсли;
	Если ИмяТч = Неопределено Тогда
		ИмяТЧ = "ТабличнаяЧасть";
	КонецЕсли;
	
	Если Не ТекДанные = Неопределено Тогда
		Если ПересчитыватьСумму Тогда
			ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
		КонецЕсли; 
		ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, ИмяТЧ);
	КонецЕсли;	
	
КонецПроцедуры	


#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОповеститьРегистрОбработанных", Новый Структура("ДокументУУ, ДокументБУ", Объект.Ссылка, ?(БюджетныйНаКлиенте.ЕстьСвойствоОбъекта(ЭтаФорма, "ДокументБУ"), ЭтаФорма.ДокументБУ, Неопределено)));	
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииНаСервере()
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПередачиТоваровВПроизводство.ПередачаПереработчику Тогда
		Элементы.Счет.Заголовок = "Счет передачи";
		Элементы.Субконто1.Видимость = Ложь;
		Элементы.Субконто3.Видимость = Ложь;
	Иначе
		Элементы.Счет.Заголовок = "Счет затрат";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ВидОперацииПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("НеОтрабатыватьТЧ", Истина);

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСерияНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекДанные.НесколькоСерий Тогда
		СтандартнаяОбработка = Ложь; 
		
		МассивПараметрыВыбора = Новый Массив;
		НовыйПараметрДата = Новый ПараметрВыбора("ДатаОтгрузки",Объект.Дата);
		НовыйПараметрСчет = Новый ПараметрВыбора("Счет",ТекДанные.СчетУчета);  
		НовыйПараметрСклад = Новый ПараметрВыбора("Склад",Объект.Склад);
		НовыйПараметрПредприятие = Новый ПараметрВыбора("Предприятие",Объект.Предприятие);
        МассивПараметрыВыбора.Добавить(НовыйПараметрДата);   
		МассивПараметрыВыбора.Добавить(НовыйПараметрСчет);
		МассивПараметрыВыбора.Добавить(НовыйПараметрСклад);
		МассивПараметрыВыбора.Добавить(НовыйПараметрПредприятие);
        НовыеПараметры = Новый ФиксированныйМассив(МассивПараметрыВыбора);

		//ПараметрыФормы = Новый Структура("СвязиПараметровВыбораМассив",Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСерияНоменклатуры.СвязиПараметровВыбора);
		ТекФорма = ПолучитьФорму("Документ.УЧ_Реализация.Форма.ФормаПодбораСерий"); 
		ТекФорма.Элементы.СерииНоменклатуры.ПодчиненныеЭлементы.СерииНоменклатурыСерияНоменклатуры.ПараметрыВыбора = НовыеПараметры;
		//Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСерияНоменклатуры.СвязиПараметровВыбора;
		ТекФорма.Номенклатура = ТекДанные.Номенклатура;
		ТекФорма.Количество = ТекДанные.Количество;
		ТекФорма.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
		Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
			Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
				НоваяСтрока = ТекФорма.СерииНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЕсли;
		КонецЦикла;
		ТекФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Оп = Новый ОписаниеОповещения("ВыполнитьПослеОкончанияПодбора", ЭтотОбъект, Новый Структура);
		ТекФорма.ОписаниеОповещенияОЗакрытии = Оп;
		ТекФорма.Открыть();
	КонецЕсли;

КонецПроцедуры 


&НаКлиенте
Процедура ВыполнитьПослеОкончанияПодбора(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	МассивУдСерий = Новый Массив;
	Для каждого ТекСтрока Из Объект.СерииНоменклатуры Цикл
		Если ТекСтрока.Номенклатура = ТекДанные.Номенклатура И ТекСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки Тогда
			МассивУдСерий.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекУд Из МассивУдСерий Цикл
		Объект.СерииНоменклатуры.Удалить(ТекУд);
	КонецЦикла;
	
	НовоеКоличество = 0;
	Для каждого ТекСтрока Из Результат.СерииНоменклатуры Цикл
		НоваяСтрока = Объект.СерииНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.НомерСтрокиРеализации = ТекДанные.НомерСтроки;
		НовоеКоличество = НовоеКоличество + ТекСтрока.Количество; 
		НоваяСтрока.ДатаПроизводства = сабОбщегоНазначенияБУХ.ПолучитьДатуПроизводстваДляСерииНоменклатуры(ТекСтрока.СерияНоменклатуры);
	КонецЦикла;
	
	ТекДанные.Количество = НовоеКоличество; 
	Объект.СерииНоменклатуры.Сортировать("НомерСтрокиРеализации");
	ТабличнаяЧастьКоличествоПриИзменении(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСерияНоменклатурыПриИзменении(Элемент)
		
	ТД = Элементы.ТабличнаяЧасть.ТекущиеДанные; 
	ПараметрыОтбораСерииНоменклатуры = Новый Структура("Номенклатура,НомерСтрокиРеализации",ТД.Номенклатура,ТД.НомерСтроки);
	МассивНайденныеСтрокиСерииНоменклатуры = Объект.СерииНоменклатуры.НайтиСтроки(ПараметрыОтбораСерииНоменклатуры);
	ИндексДляДобавления = Неопределено;
	Для каждого НайденнаяСтрокаСерииНоменклатуры Из МассивНайденныеСтрокиСерииНоменклатуры Цикл
		Если ИндексДляДобавления = Неопределено Тогда
			ИндексДляДобавления = Объект.СерииНоменклатуры.Индекс(НайденнаяСтрокаСерииНоменклатуры);
		КонецЕсли;
		Объект.СерииНоменклатуры.Удалить(НайденнаяСтрокаСерииНоменклатуры);
	КонецЦикла;
	Если ИндексДляДобавления = Неопределено Тогда
		 ИндексДляДобавления = 0;
	КонецЕсли;
	НоваяСтрокаСерииНоменклатуры = Объект.СерииНоменклатуры.Вставить(ИндексДляДобавления);
	НоваяСтрокаСерииНоменклатуры.Номенклатура = ТД.Номенклатура;
	НоваяСтрокаСерииНоменклатуры.Количество = ТД.Количество;
	НоваяСтрокаСерииНоменклатуры.НомерСтрокиРеализации = ТД.НомерСтроки;
	НоваяСтрокаСерииНоменклатуры.СерияНоменклатуры = ТД.СерияНоменклатуры;
	НоваяСтрокаСерииНоменклатуры.ДатаПроизводства = сабОбщегоНазначенияБУХ.ПолучитьДатуПроизводстваДляСерииНоменклатуры(ТД.СерияНоменклатуры);
	Объект.СерииНоменклатуры.Сортировать("НомерСтрокиРеализации"); 

КонецПроцедуры


