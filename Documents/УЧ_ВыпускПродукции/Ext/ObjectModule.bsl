
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();	
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ДатаДокументаИзменена") Тогда
		Движения.Учетный.Записать();	
	КонецЕсли;	
	
	Движения.Учетный.Записывать = Истина;

	Если ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.Купажирование Тогда
		СформироватьДвиженияКупажирования()
	Иначе
		СформироватьДвиженияВыпускаПоСпецификации()
	КонецЕсли;
	
	//меняем статус заказа
	Если НЕ ДополнительныеСвойства.Свойство("НеИзменятьСтатусЗаказа") И ЗначениеЗаполнено(ДокОснование) И ТипЗнч(ДокОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") И Не ДокОснование.Статус = Перечисления.СтатусыЗаказовНаПроизводство.Произведен Тогда		
		ЗаказОб = ДокОснование.ПолучитьОбъект();
		ЗаказОб.Статус = Перечисления.СтатусыЗаказовНаПроизводство.Произведен;
		Если ЗаказОб.Проведен Тогда
			ЗаказОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе	
			ЗаказОб.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Склад = "";
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РучнаяКорректировка = Ложь;
	//Для Каждого ТекСтрокаТабличнаячасть Из ТабличнаяЧасть Цикл
	//	Если ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Спецификация) И ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.ДокументПеремещенияВПроизводство) Тогда
	//		ДокументПеремещенияВПроизводство = ТекСтрокаТабличнаяЧасть.ДокументПеремещенияВПроизводство.ПолучитьОбъект();
	//		ДокументПеремещенияВПроизводство.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	//	КонецЕсли;		
	//КонецЦикла;		
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	сабОбщегоНазначения.сабПлатКалПриЗаписиОбъектовПриЗаписи(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура УстановитьМатериалыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД, ТаблицаСпецификаций)
	
	ТаблицаМатериалов = Материалы.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаМатериалов.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
		
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = СоставСпецификаций.МассаБрутто / СоставСпецификаций.Выход;
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СоставСпецификаций.Материал));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации.Материал));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации2.Материал));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации3.Материал));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
											СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто * СтрокаПодчиненнойСпецификации4.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход * СтрокаПодчиненнойСпецификации4.Выход);
											СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
											СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации4.Материал;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе									
										СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
										СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход);
										СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
										СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации3.Материал;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
								СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход);
								СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
								СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации2.Материал;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();	
						СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто / СтрокаПодчиненнойСпецификации.Выход;
						СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
						СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации.Материал;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
				СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СтрокаТаблМатериалов.Коэффициент * ПервоначальноеКоличество;
				СтрокаТаблМатериалов.Материал = СоставСпецификаций.Материал;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
	
	Материалы.Загрузить(ТаблицаМатериалов);
	
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ВариантСписанияСтоимости = Перечисления.УЧ_ВариантыСписанияСтоимости.ПоСредней;
	
	//дата изменена
	Если ЗначениеЗаполнено(Ссылка) И НЕ Дата = Ссылка.Дата Тогда
		ДополнительныеСвойства.Вставить("ДатаДокументаИзменена", Истина);		
	КонецЕсли;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Ложь Тогда
		ЕстьНезаполненныеСчета = Ложь;
		Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура.Счет10) Тогда
				сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "Не заполнен счет учета в номенклатуре " + Строка(СтрокаТЧ.Номенклатура), "ТабличнаяЧасть", Строка(СтрокаТЧ.НомерСтроки), "Номенклатура");
				Отказ = Истина;
			КонецЕсли;
			//ТаблицаМатериалов = Материалы.НайтиСтроки(Новый Структура("УИДТЧ", СтрокаТЧ.УИД));
			//Для Каждого СтрокаМатериалов Из ТаблицаМатериалов Цикл
			//	Если Не ЗначениеЗаполнено(СтрокаМатериалов.Материал.Счет10) Тогда
			//		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "Не заполнен счет учета в материале " + Строка(СтрокаМатериалов.Материал), "ТабличнаяЧасть", Строка(СтрокаТЧ.НомерСтроки), "Номенклатура");
			//		ЕстьНезаполненныеСчета = Истина;
			//	КонецЕсли;
			//КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	//проверка на заполненность строк материалов
	НайденныеПустыеСтроки = Материалы.НайтиСтроки(Новый Структура("Материал", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка")));
	Для каждого ТекСтрока Из НайденныеПустыеСтроки Цикл
		НайденныеСтрокаНоменклатуры = ТабличнаяЧасть.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДТЧ));
		Для каждого ТекСтрока2 Из НайденныеСтрокаНоменклатуры Цикл
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "Не заполнена колонка ""Материал"" в спецификации " + Строка(ТекСтрока2.НомерСтроки), "ТабличнаяЧасть", Строка(ТекСтрока2.НомерСтроки), "Спецификация");
			Отказ = Истина;
		КонецЦикла; 
	КонецЦикла; 
	
	Если ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.Купажирование Тогда
		
		Если Не ТабличнаяЧасть.Количество() Тогда
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "Не выбрана номенклатура для купажирования",,,,);
			Отказ = Истина;
		КонецЕсли;

		Если Не Материалы.Итог("Количество") = ТабличнаяЧасть[0].Количество Тогда
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "Количество выпускаемой продукции не совпадает с количеством материалов", "ТабличнаяЧасть", ТабличнаяЧасть[0].НомерСтроки, "Номенклатура",);
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьДвиженияКупажирования()
			
	СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
	НоменклатураКупажирования = ТабличнаяЧасть[0].Номенклатура;
	СерияКупажирования = ТабличнаяЧасть[0].СерияНоменклатуры;
	
	ПлановаяССКупажа = ПолучитьПлановуюСебестоимостьНоменклатуры(НоменклатураКупажирования);
		
	Если ПлановаяССКупажа = 0 Тогда
		МенеджерЗаписи = РегистрыСведений.ПлановаяСебестоимость.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период		= НачалоМесяца(Дата);
		МенеджерЗаписи.Предприятие	= Предприятие;
		МенеджерЗаписи.Номенклатура	= НоменклатураКупажирования;
		МенеджерЗаписи.Сумма		= 1;
		МенеджерЗаписи.Записать();

		Сообщить("Для купажной номенклатуры установлена плановая себестоимость по умолчанию равная 1", СтатусСообщения.Информация);
		ПлановаяССКупажа = 1;
	КонецЕсли;

	СкладВыпуска = ТабличнаяЧасть[0].Склад;
	
	Счет_10_01 = ПланыСчетов.Учетный.Счет1001();
	Счет_20 = ПланыСчетов.Учетный.Счет20();
	Счет_40 = ПланыСчетов.Учетный.Счет40();
	Счет_43 = ПланыСчетов.Учетный.Счет43();	
	
	ВыбСклад = Новый Массив;
	ВыбСчет = Новый Массив;
	ВыбТовары = Новый Массив;
	
	Для каждого ТекСтрока Из Материалы Цикл		
		ВыбСклад.Добавить(ТекСтрока.Склад);
		ВыбТовары.Добавить(ТекСтрока.Материал);		
		ВыбСчет.Добавить(ТекСтрока.СчетСписания);
	КонецЦикла;
	
	МоментКонца = МоментВремени();

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ВыпускПродукцииМатериалы.Материал КАК Номенклатура,
	|	СУММА(УЧ_ВыпускПродукцииМатериалы.Количество) КАК Количество,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииМатериалы.Склад,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Подразделение КАК Подразделение,
	|	УЧ_ВыпускПродукцииМатериалы.СчетСписания
	|ПОМЕСТИТЬ ТЧДока
	|ИЗ
	|	Документ.УЧ_ВыпускПродукции.Материалы КАК УЧ_ВыпускПродукцииМатериалы
	|ГДЕ
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ВыпускПродукцииМатериалы.Материал,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Подразделение,
	|	УЧ_ВыпускПродукцииМатериалы.Склад,
	|	УЧ_ВыпускПродукцииМатериалы.СчетСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1 КАК Номенклатура,
	|	УчетныйОстатки.Субконто2 КАК Склад,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	УчетныйОстатки.Счет,
	|	УчетныйОстатки.Предприятия,
	|	УчетныйОстатки.Подразделение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ПозицияДокумента,
	|			Счет В (&ВыбСчет),
	|			,
	|			Предприятия В (&ВыбПредприятие)
	|				И Субконто1 В (&ВыбТовары)
	|				И Субконто2 В (&ВыбСклады)) КАК УчетныйОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УчетныйОстатки.Счет.УчетПоПодразделениям
	|				ТОГДА УчетныйОстатки.Подразделение В (&ВыбПодразделение)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧДока.Номенклатура,
	|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество КАК КоличествоМинус,
	|	ТЧДока.Предприятие,
	|	ТЧДока.Подразделение,
	|	ТЧДока.Предприятие.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	Остатки.Склад,
	|	ТЧДока.Количество КАК КоличествоНужно,
	|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток
	|ИЗ
	|	ТЧДока КАК ТЧДока
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ТЧДока.Номенклатура = Остатки.Номенклатура
	|			И ТЧДока.Предприятие = Остатки.Предприятия
	|			И ТЧДока.Склад = Остатки.Склад
	|			И (ВЫБОР
	|				КОГДА Остатки.Счет.УчетПоПодразделениям
	|					ТОГДА ТЧДока.Подразделение = Остатки.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И ТЧДока.СчетСписания = Остатки.Счет
	|ГДЕ
	|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество < 0
	|	И (Остатки.Счет ЕСТЬ NULL
	|			ИЛИ (Остатки.Счет В ИЕРАРХИИ (&Счет41)
	|					И Остатки.Предприятия.НеКонтролировать41 = ЛОЖЬ
	|				ИЛИ Остатки.Счет В ИЕРАРХИИ (&Счет10)
	|					И Остатки.Предприятия.НеКонтролировать10 = ЛОЖЬ
	|				ИЛИ Остатки.Счет В ИЕРАРХИИ (&Счет43)
	|					И Остатки.Предприятия.НеКонтролировать43 = ЛОЖЬ))";
	
	Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("ВыбПодразделение", Подразделение);
	Запрос.УстановитьПараметр("ВыбСклады", ВыбСклад);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Счет10", ПланыСчетов.Учетный.Счет10());
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());

	
	МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатОстатки = МассивЗапросов[1].Выгрузить();
	РезультатКонтроль = МассивЗапросов[2].Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	СУММА(УЧ_ВыпускПродукцииТабличнаяЧасть.Количество) КАК Количество,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Склад,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ТЧДока
	|ИЗ
	|	Документ.УЧ_ВыпускПродукции.ТабличнаяЧасть КАК УЧ_ВыпускПродукцииТабличнаяЧасть
	|ГДЕ
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Склад,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1 КАК Номенклатура,
	|	УчетныйОстатки.Субконто2 КАК Склад,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	УчетныйОстатки.Счет,
	|	УчетныйОстатки.Предприятия,
	|	УчетныйОстатки.Подразделение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ПозицияДокумента,
	|			Счет В (&ВыбСчет),
	|			,
	|			Предприятия В (&ВыбПредприятие)
	|				И Субконто1 В (&ВыбТовары)
	|				И Субконто2 В (&ВыбСклад)) КАК УчетныйОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УчетныйОстатки.Счет.УчетПоПодразделениям
	|				ТОГДА УчетныйОстатки.Подразделение В (&Подразделение)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧДока.Номенклатура,
	|	ЕСТЬNULL(Остатки.Количество, 0) + ТЧДока.Количество КАК КоличествоКонечное,
	|	ТЧДока.Предприятие,
	|	ТЧДока.Подразделение,
	|	ТЧДока.Предприятие.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	Остатки.Склад,
	|	ТЧДока.Количество КАК КоличествоПоступления,
	|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.Цена, 0) КАК ЦенаОстатков,
	|	ЕСТЬNULL(Остатки.Сумма, 0) КАК СуммаКонечное
	|ИЗ
	|	ТЧДока КАК ТЧДока
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ТЧДока.Номенклатура = Остатки.Номенклатура
	|			И ТЧДока.Предприятие = Остатки.Предприятия
	|			И ТЧДока.Склад = Остатки.Склад
	|			И (ВЫБОР
	|				КОГДА Остатки.Счет.УчетПоПодразделениям
	|					ТОГДА ТЧДока.Подразделение = Остатки.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	ЕСТЬNULL(Остатки.Количество, 0) < 0";
		
	Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ВыбСклад", ВыбСклад);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатКонтрольМинусов = МассивЗапросов[2].Выгрузить();

	Для Каждого ТекСтрока Из Материалы Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.СценарийПлана = СценарийПлана;
		Движение.Предприятия = Предприятие;
		
		Движение.СчетДт = Счет_10_01;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрока.Материал);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, СкладВыпуска);
		Движение.КоличествоДт = ТекСтрока.Количество;
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеДт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Предприятие.ВидДеятельности;
			КонецЕсли;	
			
		КонецЕсли;
		
		Движение.СчетКт = ТекСтрока.СчетСписания;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, ТекСтрока.Материал);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрока.Склад);
		Движение.КоличествоКт = ТекСтрока.Количество;
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеКт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Предприятие.ВидДеятельности;
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, ТекСтрока.Склад, Движение.СчетКт);
		ВыборкаДетальныеЗаписи = РезультатОстатки.НайтиСтроки(СтруктураПоиска);
		
		Если ВыборкаДетальныеЗаписи.Количество() Тогда
			
			Если ТекСтрока.Количество = ВыборкаДетальныеЗаписи[0].Количество Тогда
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Сумма;
			Иначе	
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
			КонецЕсли;
			
		Иначе
			Движение.Сумма = 0;
		КонецЕсли;
		
		Движение.Содержание = "Перемещение в материалы продукции " + ТекСтрока.Материал + ". Кол-во: " + ТекСтрока.Количество;
				
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Материалы Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.СценарийПлана = СценарийПлана;
		Движение.Предприятия = Предприятие;
		
		Движение.СчетДт = Счет_20;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, НоменклатураКупажирования);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, Справочники.СтатьиЗатрат.ЗатратыОсн);
			
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеДт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Предприятие.ВидДеятельности;
			КонецЕсли;	
			
		КонецЕсли;
		
		Движение.СчетКт = Счет_10_01;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, ТекСтрока.Материал);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрока.Склад);
		Движение.КоличествоКт = ТекСтрока.Количество;
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеКт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Предприятие.ВидДеятельности;
			КонецЕсли;
			
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, ТекСтрока.Склад, ТекСтрока.СчетСписания);
		ВыборкаДетальныеЗаписи = РезультатОстатки.НайтиСтроки(СтруктураПоиска);
		
		Если ВыборкаДетальныеЗаписи.Количество() Тогда
			
			Если ТекСтрока.Количество = ВыборкаДетальныеЗаписи[0].Количество Тогда
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Сумма;
			Иначе	
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
			КонецЕсли;
			
		Иначе
			Движение.Сумма = 0;
		КонецЕсли;
		
		Движение.Содержание = "Перемещение материалов в производство " + ТекСтрока.Материал + ". Кол-во: " + ТекСтрока.Количество;
				
	КонецЦикла;

	КоличествоВыпускаемойПродукции = Материалы.Итог("Количество");
	
	Движение = Движения.Учетный.Добавить();
	Движение.Период = Дата;
	Движение.СценарийПлана = СценарийПлана;
	Движение.Предприятия = Предприятие;
	
	Движение.СчетДт = Счет_43;
	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, НоменклатураКупажирования);
	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, СкладВыпуска);
	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 3, СерияКупажирования);
	Движение.КоличествоДт = КоличествоВыпускаемойПродукции;
	
	Если Движение.СчетДт.УчетПоПодразделениям Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Движение.ПодразделениеДт = Подразделение;
		ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Предприятие.ВидДеятельности;
		КонецЕсли;	
		
	КонецЕсли;

	Движение.СчетКт = Счет_40;
	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, НоменклатураКупажирования);
	
	Если Движение.СчетКт.УчетПоПодразделениям Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Движение.ПодразделениеКт = Подразделение;
		ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Предприятие.ВидДеятельности;
		КонецЕсли;
		
	КонецЕсли;

	Движение.Сумма = ПлановаяССКупажа * КоличествоВыпускаемойПродукции;	
	Движение.Содержание = "Выпуск купажа " + НоменклатураКупажирования + ". Кол-во: " + КоличествоВыпускаемойПродукции;
	
	//временно закомментил
	НеКонтролироватьОстатки = сабОбщегоНазначения.ПолучитьЗначениеСвойства(ПараметрыСеанса.ТекущийПользователь, "Разрешено проведение без контроля остатков");
	
	Если НеКонтролироватьОстатки = Неопределено Тогда
		НеКонтролироватьОстатки = Ложь;	
	КонецЕсли;
	
	Если НЕ НеКонтролироватьОстатки Тогда
		
		Для каждого ТекСтрокаМинус Из РезультатКонтроль Цикл
			Отказ = Истина;
			Сообщить(?(ТекСтрокаМинус.УчетПоПодразделениям, "По Подразделению " + Строка(ТекСтрокаМинус.Подразделение) + " ", "") + "На Складе """ + Строка(ТекСтрокаМинус.Склад) + """ номенклатуры """ + Строка(ТекСтрокаМинус.Номенклатура) + """ из необходимых " + Строка(ТекСтрокаМинус.КоличествоНужно) + " присутствует только "  + Строка(ТекСтрокаМинус.КоличествоОстаток) );
		КонецЦикла; 
		
	КонецЕсли;

КонецПроцедуры

Процедура СформироватьДвиженияВыпускаПоСпецификации()
	
	//Нужно добавить реквизит в предприятие
	ВыпускПоПрямымЗатратам = ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.ПроизводствоПоСпецификации ИЛИ Материалы.Количество() ИЛИ ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.ПоступлениеИзПереработки;
	//СкладПроизводства = Справочники.Склады.ПолучитьСкладПоЗначениюДопРеквизита("Склад производства", Предприятие);
	СтатьяПоУмолчанию = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Списание материалов", Истина);
	СлужбаПоУмолчанию = Справочники.Субконто.НайтиПоНаименованию("Производство_общее");
	ПроизводственноеПодразделение = Подразделение.ПроизводственноеПодразделение;
	СчетЗатратыПроизводство = ПланыСчетов.Учетный.Счет25();//.ОсновноеПрво;
	СчетСебестоимость = ПланыСчетов.Учетный.Счет9002();//.Себестоимость;
	
	РаспределятьПроводкиПоДокументамТоварооборота = Предприятие.УчетнаяПолитика.РаспределятьПроводкиПоДокументамТоварооборота;
	
	СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
	НалогНДС = Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоНаименованию("НДС", Истина);
	СтатьяНДС = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС", Истина);
	
	//Спишем материалы в производство
	СоответствиеСчета = ПоучитьСоответствияСчетовНоменклатуры();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ВыпускПродукцииМатериалы.Материал КАК Номенклатура,
	|	СУММА(УЧ_ВыпускПродукцииМатериалы.Количество) КАК Количество,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Предприятие КАК Предприятие,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Склад КАК Склад,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Подразделение КАК Подразделение,
	|	УЧ_ВыпускПродукцииМатериалы.Материал.Счет10 КАК МатериалСчет10
	|ПОМЕСТИТЬ ТЧДока
	|ИЗ
	|	Документ.УЧ_ВыпускПродукции.Материалы КАК УЧ_ВыпускПродукцииМатериалы
	|ГДЕ
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ВыпускПродукцииМатериалы.Материал,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Склад,
	|	УЧ_ВыпускПродукцииМатериалы.Ссылка.Подразделение,
	|	УЧ_ВыпускПродукцииМатериалы.Материал.Счет10
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1 КАК Номенклатура,
	|	УчетныйОстатки.Субконто2 КАК Склад,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	УчетныйОстатки.Счет КАК Счет,
	|	УчетныйОстатки.Предприятия КАК Предприятия,
	|	УчетныйОстатки.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ПозицияДокумента,
	|			Счет В (&ВыбСчет),
	|			,
	|			Предприятия В (&ВыбПредприятие)
	|				И Субконто1 В (&ВыбТовары)
	|				И Субконто2 В (&ВыбСклады)
	|				) КАК УчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧДока.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество КАК КоличествоМинус,
	|	ТЧДока.Предприятие КАК Предприятие,
	|	ТЧДока.Подразделение КАК Подразделение,
	|	ТЧДока.Предприятие.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	Остатки.Склад КАК Склад,
	|	ТЧДока.Количество КАК КоличествоНужно,
	|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток
	|ИЗ
	|	ТЧДока КАК ТЧДока
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ТЧДока.Номенклатура = Остатки.Номенклатура
	|			И ТЧДока.Предприятие = Остатки.Предприятия
	|			И ТЧДока.Склад = Остатки.Склад
	|			
	|ГДЕ
	|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество < 0
	|	И (ТЧДока.МатериалСчет10 В ИЕРАРХИИ (&Счет41)
	|				И Остатки.Предприятия.НеКонтролировать41 = ЛОЖЬ
	|			ИЛИ ТЧДока.МатериалСчет10 В ИЕРАРХИИ (&Счет10)
	|				И Остатки.Предприятия.НеКонтролировать10 = ЛОЖЬ
	|			ИЛИ ТЧДока.МатериалСчет10 В ИЕРАРХИИ (&Счет43)
	|				И Остатки.Предприятия.НеКонтролировать43 = ЛОЖЬ)";
	
	ВыбСклад = Новый Массив;
	ВыбСклад.Добавить(Склад);
	ВыбСклад.Добавить(Контрагент);
	ВыбСчет = Новый Массив;
	ВыбТовары = Новый Массив;
	
	Для каждого ТекСтрока Из СоответствиеСчета Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Ключ) Тогда
			ВыбТовары.Добавить(ТекСтрока.Ключ);
			
			Если ВыбСчет.Найти(ТекСтрока.Значение) = Неопределено Тогда
				ВыбСчет.Добавить(ТекСтрока.Значение);
			КонецЕсли
			
		КонецЕсли; 
		
	КонецЦикла;
	//
	МоментКонца = МоментВремени();
	//
	Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("ВыбПодразделение", Подразделение);
	Запрос.УстановитьПараметр("ВыбСклады", ВыбСклад);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
	Запрос.УстановитьПараметр("Счет10", ПланыСчетов.Учетный.Счет10());
	Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
	
	МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатОстатки = МассивЗапросов[1].Выгрузить();
	РезультатКонтроль = МассивЗапросов[2].Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	СУММА(УЧ_ВыпускПродукцииТабличнаяЧасть.Количество) КАК Количество,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Склад,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ТЧДока
	|ИЗ
	|	Документ.УЧ_ВыпускПродукции.ТабличнаяЧасть КАК УЧ_ВыпускПродукцииТабличнаяЧасть
	|ГДЕ
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Предприятие,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Склад,
	|	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1 КАК Номенклатура,
	|	УчетныйОстатки.Субконто2 КАК Склад,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	УчетныйОстатки.Счет,
	|	УчетныйОстатки.Предприятия,
	|	УчетныйОстатки.Подразделение
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ПозицияДокумента,
	|			Счет В (&ВыбСчет),
	|			,
	|			Предприятия В (&ВыбПредприятие)
	|				И Субконто1 В (&ВыбТовары)
	|				И Субконто2 В (&ВыбСклад)
	|				) КАК УчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧДока.Номенклатура,
	|	ЕСТЬNULL(Остатки.Количество, 0) + ТЧДока.Количество КАК КоличествоКонечное,
	|	ТЧДока.Предприятие,
	|	ТЧДока.Подразделение,
	|	ТЧДока.Предприятие.УчетПоПодразделениям КАК УчетПоПодразделениям,
	|	Остатки.Склад,
	|	ТЧДока.Количество КАК КоличествоПоступления,
	|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.Цена, 0) КАК ЦенаОстатков,
	|	ЕСТЬNULL(Остатки.Сумма, 0) КАК СуммаКонечное
	|ИЗ
	|	ТЧДока КАК ТЧДока
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ТЧДока.Номенклатура = Остатки.Номенклатура
	|			И ТЧДока.Предприятие = Остатки.Предприятия
	|			И ТЧДока.Склад = Остатки.Склад
	|			
	|ГДЕ
	|	ЕСТЬNULL(Остатки.Количество, 0) < 0";
	
	ВыбСклад = Новый Массив;
	ВыбСклад.Добавить(Склад);
	ВыбСклад.Добавить(Контрагент);
	ВыбСчет = Новый Массив;
	ВыбТовары = Новый Массив;
	
	Для каждого ТекСтрока Из СоответствиеСчета Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Ключ) Тогда
			ВыбТовары.Добавить(ТекСтрока.Ключ);
			
			Если ВыбСчет.Найти(ТекСтрока.Значение) = Неопределено Тогда
				ВыбСчет.Добавить(ТекСтрока.Значение);
			КонецЕсли
			
		КонецЕсли;
		
	КонецЦикла;
	
	МоментКонца = МоментВремени();
	
	Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ВыбСклад", ВыбСклад);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	РезультатКонтрольМинусов = МассивЗапросов[2].Выгрузить();
	
	СчетПроизводства = ПланыСчетов.Учетный.Счет20();
	СценарийПлана = СценарийПлана;
	
	Если ВыпускПоПрямымЗатратам Тогда
		ТаблицаВыпуска = Новый ТаблицаЗначений;
		ТаблицаВыпуска.Колонки.Добавить("Номенклатура");
		ТаблицаВыпуска.Колонки.Добавить("СерияНоменклатуры");
		ТаблицаВыпуска.Колонки.Добавить("СтатьяЗатрат");
		ТаблицаВыпуска.Колонки.Добавить("УИД");
		ТаблицаВыпуска.Колонки.Добавить("Сумма");
		ТаблицаВыпуска.Колонки.Добавить("Количество");
	КонецЕсли;	
	
	Для Каждого ТекСтрока Из Материалы Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.СценарийПлана = СценарийПлана;
		Движение.Предприятия = Предприятие;
		Движение.СчетДт = СчетПроизводства;
		СтрокиТЧ = ТабличнаяЧасть.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДТЧ));
		ТекНоменклатура = СтрокиТЧ[0].Номенклатура;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,ТекНоменклатура);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,ТекСтрока.СтатьяЗатрат);
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеДт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Предприятие.ВидДеятельности;
			КонецЕсли;	
		КонецЕсли;
		
		Движение.СчетКт = СоответствиеСчета.Получить(ТекСтрока.Материал);
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;	
		КонецЕсли;
		
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрока.Материал);
		Если Движение.СчетКт = ПланыСчетов.Учетный.НайтиПоКоду("10.07") Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Контрагент);
			СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, Контрагент, Движение.СчетКт);
		Иначе	
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Склад);
			СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, Склад, Движение.СчетКт);
		КонецЕсли;
		Движение.КоличествоКт = ТекСтрока.Количество;
		Если Движение.СчетДт.Количественный Тогда
			Движение.КоличествоДт = ТекСтрока.Количество;
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = РезультатОстатки.НайтиСтроки(СтруктураПоиска);
		
		Если ВыборкаДетальныеЗаписи.Количество() Тогда
			
			Если ТекСтрока.Количество = ВыборкаДетальныеЗаписи[0].Количество Тогда
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Сумма;
			Иначе	
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
			КонецЕсли;
			
			Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
		Иначе
			Движение.Сумма = 0;
		КонецЕсли;
		
		Движение.Содержание = Комментарий;
		
		Если ВыпускПоПрямымЗатратам Тогда
			СтрокаВыпуска = ТаблицаВыпуска.Добавить();
			СтрокаВыпуска.Номенклатура = ТекНоменклатура;
			СтрокаВыпуска.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат;
			СтрокаВыпуска.Количество = СтрокиТЧ[0].Количество;
			СтрокаВыпуска.УИД = СтрокиТЧ[0].УИД;
			СтрокаВыпуска.Сумма = Движение.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ВозвращенныеМатериалы Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.СценарийПлана = СценарийПлана;
		Движение.Предприятия = Предприятие;
		Движение.СчетДт = ТекСтрока.СчетСписания;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,ТекСтрока.Материал);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,Склад);
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Если ЗначениеЗаполнено(Подразделение) Тогда
				Движение.ПодразделениеДт = Подразделение;
			ИначеЕсли НЕ Предприятие.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Предприятие.ВидДеятельности;
			КонецЕсли;	
		КонецЕсли;
		
		Движение.СчетКт = ТекСтрока.СчетУчета;
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;	
		КонецЕсли;
		
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрока.Материал);
		Если Движение.СчетКт = ПланыСчетов.Учетный.НайтиПоКоду("10.07") Тогда
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Контрагент);
			СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, Контрагент, Движение.СчетКт);
		Иначе	
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Склад);
			СтруктураПоиска = Новый Структура("Номенклатура, Склад, Счет", ТекСтрока.Материал, Склад, Движение.СчетКт);
		КонецЕсли;
		Движение.КоличествоКт = ТекСтрока.Количество;
		Если Движение.СчетДт.Количественный Тогда
			Движение.КоличествоДт = ТекСтрока.Количество;
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = РезультатОстатки.НайтиСтроки(СтруктураПоиска);
		
		Если ВыборкаДетальныеЗаписи.Количество() Тогда
			
			Если ТекСтрока.Количество = ВыборкаДетальныеЗаписи[0].Количество Тогда
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Сумма;
			Иначе	
				Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
			КонецЕсли;
			
			Движение.Сумма = ВыборкаДетальныеЗаписи[0].Цена * ТекСтрока.Количество;
		Иначе
			Движение.Сумма = 0;
		КонецЕсли;
		
		Движение.Содержание = "возврат материалов " + Комментарий;
				
	КонецЦикла;
	
	//СтатьяСырья20ПоУмолчанию = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Затраты на основное сырье", Истина);
	
	//услуги переработчика
	Для каждого ТекСтрока Из Услуги Цикл
		
		СтрокиТЧ = ТабличнаяЧасть.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДТЧ));
		
		сабОбщегоНазначения.НоваяСтрокаРегистраБух(
		Движения,
		Дата,
		Предприятие,
		СценарийПлана,
		"услуги переработчика",
		СчетПроизводства,
		?(ТабличнаяЧасть.Количество() = 1, ТабличнаяЧасть[0].Номенклатура, ТекСтрока.Продукция),
		ТекСтрока.СтатьяЗатрат,
		,
		Подразделение,
		,
		,
		,
		СчетКонтрагента,
		Контрагент,
		Договор,
		?(РаспределятьПроводкиПоДокументамТоварооборота, Ссылка, Неопределено),
		Подразделение,
		,
		,
		,
		?(УчитыватьНДС, ?(СуммаВключаетНДС, ТекСтрока.Сумма - ТекСтрока.СуммаНДС, ТекСтрока.Сумма), ?(СуммаВключаетНДС, ТекСтрока.Сумма, ТекСтрока.Сумма + ТекСтрока.СуммаНДС)),
		Истина,
		,
		);
		НоваяСтрока = ТаблицаВыпуска.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.Номенклатура = ?(ТабличнаяЧасть.Количество() = 1, ТабличнаяЧасть[0].Номенклатура, ТекСтрока.Продукция);
		НоваяСтрока.Количество = СтрокиТЧ[0].Количество;
		НоваяСтрока.Сумма = ?(УчитыватьНДС, ?(СуммаВключаетНДС, ТекСтрока.Сумма - ТекСтрока.СуммаНДС, ТекСтрока.Сумма), ?(СуммаВключаетНДС, ТекСтрока.Сумма, ТекСтрока.Сумма + ТекСтрока.СуммаНДС));
		НоваяСтрока.УИД = ТекСтрока.УИДТЧ;
		
		Если УчитыватьНДС И ТекСтрока.СуммаНДС Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.Период = Дата;
			Движение.СценарийПлана = СценарийПлана;
			Движение.Предприятия = Предприятие;
			
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6801();
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ?(ЗначениеЗаполнено(ТекСтрока.Подразделение), ТекСтрока.Подразделение, Подразделение);
			КонецЕсли;
			
			Если Движение.СчетДт.Количественный Тогда
				Движение.КоличествоДт = ТекСтрока.Количество;
			КонецЕсли;
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,НалогНДС);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,Организация);
			
			Движение.СчетКт = СчетКонтрагента;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,Контрагент);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Договор);
			
			//++сабОпер
			Если НЕ Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Документ", Истина)) = Неопределено И РаспределятьПроводкиПоДокументамТоварооборота Тогда
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, Ссылка);
			КонецЕсли;
			//--сабОпер
			
			Если Движение.СчетДт.Валютный Тогда
				Движение.ВалютнаяСуммаДт = ТекСтрока.Сумма; 
				Движение.ВалютаДт = Валюта;
			КонецЕсли;
			
			Если Движение.СчетКт.Валютный Тогда
				Движение.ВалютнаяСуммаКт = ТекСтрока.Сумма; 
				Движение.ВалютаКт = Валюта;
			КонецЕсли;
			
			Движение.Сумма = ТекСтрока.СуммаНДС;
			Движение.Содержание = "возмещение НДС при поступлении услуг";
			
		КонецЕсли;
		
	КонецЦикла; 
	
	//отражение выпуска ГП
	Если ВыпускПоПрямымЗатратам Тогда
		ТаблицаВыпуска.Свернуть("Номенклатура, СерияНоменклатуры, Количество, УИД, СтатьяЗатрат", "Сумма"); //д1 перенес Количество в суммируемые
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПлановаяСебестоимостьСрезПоследних.Номенклатура,
		|	ПлановаяСебестоимостьСрезПоследних.Сумма
		|ИЗ
		|	РегистрСведений.ПлановаяСебестоимость.СрезПоследних(&Дата, Номенклатура В (&Номенклатура) И Предприятие = &ТекПредприятие) КАК ПлановаяСебестоимостьСрезПоследних";
		ВыбНоменклатура = ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура");
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Номенклатура", ВыбНоменклатура);
		Запрос.УстановитьПараметр("ТекПредприятие", Предприятие);
		Результат = Запрос.Выполнить();
	КонецЕсли;
	
	//ТабличнаяЧасть.Свернуть("Склад, Номенклатура, Подразделение", "Количество, КоличествоОбъем");
	
	ТабличнаяЧастьДляРасчетаМинусов = ТабличнаяЧасть.Выгрузить();
	ТабличнаяЧастьДляРасчетаМинусов.Колонки.Добавить("ТекСумма");
	ТабличнаяЧастьДляРасчетаМинусов.Колонки.Добавить("ТекЦена");
	
	//ТЧСвернуто = ТабличнаяЧасть.Выгрузить();
	//ТЧСвернуто.Свернуть("Номенклатура, Склад, Подразделение, Спецификация, СчетУчета, СерияНоменклатуры", "Количество, КоличествоОбъем");
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
		
		Если ПустаяСтрока(Склад) Тогда 
			ТекСклад = ТекСтрокаТабличнаяЧасть.Склад
		Иначе
			ТекСклад = Склад
		КонецЕсли;
		
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = СценарийПлана;
		Движение.СчетДт = ПланыСчетов.Учетный.Счет43();
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,ТекСтрокаТабличнаяЧасть.Номенклатура);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,ТекСклад);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,3,ТекСтрокаТабличнаяЧасть.СерияНоменклатуры);
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = ТекСтрокаТабличнаяЧасть.Подразделение;		
		КонецЕсли;
		
		Если ВыпускПоПрямымЗатратам Тогда
			Движение.СчетКт = СчетПроизводства;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаТабличнаяЧасть.Номенклатура);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Неопределено);
		Иначе
			Движение.СчетКт = ПланыСчетов.Учетный.Счет40();
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаТабличнаяЧасть.Номенклатура);
		КонецЕсли;
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = ТекСтрокаТабличнаяЧасть.Подразделение;		
		КонецЕсли;
		
		Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество;
		
		Если ВыпускПоПрямымЗатратам Тогда
			НайденныеСтрокиВыпуска = ТаблицаВыпуска.НайтиСтроки(Новый Структура("Номенклатура, СерияНоменклатуры, Количество, УИД", ТекСтрокаТабличнаяЧасть.Номенклатура, ТекСтрокаТабличнаяЧасть.СерияНоменклатуры, ТекСтрокаТабличнаяЧасть.Количество, ТекСтрокаТабличнаяЧасть.УИД));
			
			Движение.Сумма = 0;
			Для Каждого НайденнаяСтрокаВыпуска Из НайденныеСтрокиВыпуска Цикл
				Если Не НайденнаяСтрокаВыпуска.Сумма Тогда
					Продолжить;				
				КонецЕсли;
				Движение2 = Движения.Учетный.Добавить();
				Движение2.Период = Дата;
				Движение2.Предприятия = Предприятие;
				Движение2.СценарийПлана = СценарийПлана;
				Движение2.СчетДт = ПланыСчетов.Учетный.Счет43();
				УЧ_Сервер.УстановитьСубконто(Движение2.СубконтоДт,Движение2.СчетДт,1,ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение2.СубконтоДт,Движение2.СчетДт,2,ТекСклад);
				УЧ_Сервер.УстановитьСубконто(Движение2.СубконтоДт,Движение2.СчетДт,3,ТекСтрокаТабличнаяЧасть.СерияНоменклатуры);
				
				Если Движение2.СчетДт.УчетПоПодразделениям Тогда
					Движение2.ПодразделениеДт = ТекСтрокаТабличнаяЧасть.Подразделение;		
				КонецЕсли;
				
				Движение2.СчетКт = СчетПроизводства;
				УЧ_Сервер.УстановитьСубконто(Движение2.СубконтоКт,Движение2.СчетКт,1,ТекСтрокаТабличнаяЧасть.Номенклатура);
				УЧ_Сервер.УстановитьСубконто(Движение2.СубконтоКт,Движение2.СчетКт,2,НайденнаяСтрокаВыпуска.СтатьяЗатрат);
				
				Если Движение2.СчетКт.УчетПоПодразделениям Тогда
					Движение2.ПодразделениеКт = ТекСтрокаТабличнаяЧасть.Подразделение;		
				КонецЕсли;
				Движение2.Сумма = НайденнаяСтрокаВыпуска.Сумма;
				Движение2.Содержание = Комментарий;
			КонецЦикла;	
			
		Иначе	
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			СтруктураПоиска = Новый Структура("Номенклатура", ТекСтрокаТабличнаяЧасть.Номенклатура);
			
			Если ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Тогда
				Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма * ТекСтрокаТабличнаяЧасть.Количество;
			Иначе
				Движение.Сумма = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		Движение.Содержание = Комментарий;		
		
		ИндексСтроки = ТабличнаяЧасть.Индекс(ТекСтрокаТабличнаяЧасть);
		ТабличнаяЧастьДляРасчетаМинусов[ИндексСтроки].ТекСумма = Движение.Сумма;
		ТабличнаяЧастьДляРасчетаМинусов[ИндексСтроки].ТекЦена = ?(ТекСтрокаТабличнаяЧасть.Количество, Движение.Сумма / ТекСтрокаТабличнаяЧасть.Количество, 0);
		
	КонецЦикла;
	
	//корректируем минусовые остатки
	ТабличнаяЧастьДляРасчетаМинусов.Свернуть("Склад, Номенклатура, Подразделение", "Количество, КоличествоОбъем, ТекСумма, ТекЦена");
	
	Для каждого ТекСтрока Из ТабличнаяЧастьДляРасчетаМинусов Цикл
		ТекСтрока.ТекЦена = ?(ТекСтрока.Количество, ТекСтрока.ТекСумма / ТекСтрока.Количество, 0);
	КонецЦикла; 
	
	Для каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧастьДляРасчетаМинусов Цикл
		ТекСумма = ТекСтрокаТабличнаяЧасть.ТекСумма;
		ТекЦена = ТекСтрокаТабличнаяЧасть.ТекЦена;
		
		СтруктураПоискаМинусов = Новый Структура("Номенклатура", ТекСтрокаТабличнаяЧасть.Номенклатура); 
		НайденныеСтрокиМинусов = РезультатКонтрольМинусов.НайтиСтроки(СтруктураПоискаМинусов);
		
		Для каждого ТекСтрокаМинусов Из НайденныеСтрокиМинусов Цикл
			
			Если НЕ Окр(ТекСтрокаМинусов.СуммаКонечное + ТекСумма - ТекЦена * ТекСтрокаМинусов.КоличествоКонечное, 2) ИЛИ НЕ ТекСтрокаМинусов.КоличествоПоступления Тогда
				Продолжить;			
			КонецЕсли;
			
			Движение = Движения.Учетный.Добавить();
			Движение.Период = Дата;
			Движение.СценарийПлана = СценарийПлана;
			Движение.Предприятия = Предприятие;
			
			//вставка по обр №00000000687 Сети, 25 счет для корректировки с/с
			Движение.СчетДт = СчетЗатратыПроизводство;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,1,СтатьяПоУмолчанию);
			
			Если Движение.СчетДт.ВидыСубконто.Количество() >= 2 Тогда
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт,2,СлужбаПоУмолчанию);
			КонецЕсли;
			//конец вставки
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли;
			
			Движение.СчетКт = СоответствиеСчета.Получить(ТекСтрокаМинусов.Номенклатура);
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;	
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,ТекСтрокаМинусов.Номенклатура);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Склад);
			
			Движение.Сумма = ТекСтрокаМинусов.СуммаКонечное + ТекСумма - ТекЦена * ТекСтрокаМинусов.КоличествоКонечное;
			Движение.Содержание = "Корректировка до с/с последней поставки " + Формат(ТекЦена, "ЧДЦ=2") ;
		КонецЦикла;
		
	КонецЦикла; 		
	
	//временно закомментил
	НеКонтролироватьОстатки = сабОбщегоНазначения.ПолучитьЗначениеСвойства(ПараметрыСеанса.ТекущийПользователь, "Разрешено проведение без контроля остатков");
	
	Если НеКонтролироватьОстатки = Неопределено Тогда
		НеКонтролироватьОстатки = Ложь;	
	КонецЕсли;
	
	Если НЕ НеКонтролироватьОстатки Тогда
		
		Для каждого ТекСтрокаМинус Из РезультатКонтроль Цикл
			Отказ = Истина;
			Сообщить(?(ТекСтрокаМинус.УчетПоПодразделениям, "По Подразделению " + Строка(ТекСтрокаМинус.Подразделение) + " ", "") + "На Складе """ + Строка(ТекСтрокаМинус.Склад) + """ номенклатуры """ + Строка(ТекСтрокаМинус.Номенклатура) + """ из необходимых " + Строка(ТекСтрокаМинус.КоличествоНужно) + " присутствует только "  + Строка(ТекСтрокаМинус.КоличествоОстаток) );
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПоучитьСоответствияСчетовНоменклатуры()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииМатериалы.Материал КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.СчетУчета
	               |	КОНЕЦ КАК Счет
	               |ПОМЕСТИТЬ вт
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.Материалы КАК УЧ_ВыпускПродукцииМатериалы
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииМатериалы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.СчетУчета
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА &Счет1001
	               |		ИНАЧЕ УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10
	               |	КОНЕЦ
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.ТабличнаяЧасть КАК УЧ_ВыпускПродукцииТабличнаяЧасть
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА &Счет1001
	               |		ИНАЧЕ УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета
	               |	КОНЕЦ
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.ВозвращенныеМатериалы КАК УЧ_ВыпускПродукцииВозвращенныеМатериалы
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт.Номенклатура КАК Номенклатура,
	               |	вт.Счет КАК Счет
	               |ИЗ
	               |	вт КАК вт
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт.Номенклатура,
	               |	вт.Счет";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Счет1001", ПланыСчетов.Учетный.Счет1001());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ПланыСчетов.Учетный.Счет1001());
	Соответствия.Вставить(Null, ПланыСчетов.Учетный.Счет1001());
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПланыСчетов.Учетный.Счет1001());
	Возврат Соответствия;	
	
КонецФункции // ()

Функция ПолучитьПлановуюСебестоимостьНоменклатуры(ТекНоменклатура)
	
	ПлановаяСС = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПлановаяСебестоимостьСрезПоследних.Номенклатура,
	               |	МАКСИМУМ(ПлановаяСебестоимостьСрезПоследних.Сумма) КАК Сумма
	               |ИЗ
	               |	РегистрСведений.ПлановаяСебестоимость.СрезПоследних(
	               |			&Дата,
	               |			Номенклатура = &Номенклатура
	               |				И Предприятие = &ТекПредприятие) КАК ПлановаяСебестоимостьСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПлановаяСебестоимостьСрезПоследних.Номенклатура";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", ТекНоменклатура);
	Запрос.УстановитьПараметр("ТекПредприятие", Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ПлановаяСС = Выборка.Сумма;
	КонецЦикла;
	
	Возврат ПлановаяСС;
	
КонецФункции

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		// Заполнение шапки
		Комментарий = ДанныеЗаполнения.Комментарий;
		Предприятие = ДанныеЗаполнения.Предприятие;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаТабличнаяЧасть Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТабличнаяЧасть.Количество;
			НоваяСтрока.КоличествоОбъем = ТекСтрокаТабличнаяЧасть.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТабличнаяЧасть.Номенклатура;
			НоваяСтрока.Склад = ТекСтрокаТабличнаяЧасть.Склад;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПеремещениеТоваров") Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_Реализация") Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_СписаниеТоваров") Тогда
		
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка, ТипЗнч(Ссылка));
		Если Отказ.Признак = "##УжеСоздан" Тогда
			ВызватьИсключение "На основании данного документа уже введен документ " + Отказ.Ссылка;
		ИначеЕсли Отказ.Признак = "##НеПроведен" Тогда
			ВызватьИсключение "Документ-основание не проведен. Ввод на основании не возможен.";
		КонецЕсли;
		
		ЗапросПоСпецификациям = Новый Запрос;
		ЗапросПоСпецификациям.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
		|	Спецификации.Продукция
		|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
		|ИЗ
		|	Справочник.Спецификации КАК Спецификации
		|ГДЕ
		|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|	И НЕ Спецификации.Ссылка.ПометкаУдаления
		|	И Спецификации.Дата <= &Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	Спецификации.Продукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпецификацииСостав.Ссылка КАК Спецификация,
		|	СпецификацииСостав.Ссылка.Продукция,
		|	СпецификацииСостав.Материал,
		|	СпецификацииСостав.Ссылка.Дата КАК Дата,
		|	СпецификацииСостав.МассаБрутто,
		|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
		|	СпецификацииСостав.МассаНетто,
		|	СпецификацииСостав.ПотериПриТепловойОбработке,
		|	СпецификацииСостав.Ссылка.Выход
		|ИЗ
		|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
		|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
		|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Продукция
		|ГДЕ
		|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
		|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		ЗапросПоСпецификациям.УстановитьПараметр("Дата", ТекущаяДата()); 
		РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
		ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
		
		// Заполнение шапки
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПеремещениеТоваров") Тогда
			ИмяТЧ = "ТабличнаяЧасть";
			ИмяКолонкиНоменклатура = "Номенклатура";
			ИмяПодразделения = "Подразделение";
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_Реализация") Тогда
			ИмяТЧ = "Товары";
			ИмяКолонкиНоменклатура = "Номенклатура";
			ИмяПодразделения = "Подразделение";
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_СписаниеТоваров") Тогда
			ИмяТЧ = "ТабличнаяЧасть";
			ИмяКолонкиНоменклатура = "Товар";
			ИмяПодразделения = "ВидДеятельности";
		КонецЕсли;
		ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.ПроизводствоПоСпецификации;
		Предприятие = ДанныеЗаполнения.Предприятие;
		Подразделение = ДанныеЗаполнения[ИмяПодразделения];
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		ТаблицаОснования = ДанныеЗаполнения[ИмяТЧ].Выгрузить(, "" + ИмяКолонкиНоменклатура + ", Количество");
		ТаблицаОснования.Свернуть(ИмяКолонкиНоменклатура, "Количество");
		Для Каждого ТекСтрокаТабличнаяЧасть Из ТаблицаОснования Цикл
			Если  НЕ ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть[ИмяКолонкиНоменклатура].Производитель) ИЛИ ТекСтрокаТабличнаяЧасть[ИмяКолонкиНоменклатура].Производитель = Предприятие Тогда
				Если Не ТекСтрокаТабличнаяЧасть[ИмяКолонкиНоменклатура].ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ОсновнаяПродукция Тогда
					Продолжить;
				КонецЕсли;	
				НоваяСтрока = ТабличнаяЧасть.Добавить();
				НоваяСтрока.Количество = ТекСтрокаТабличнаяЧасть.Количество;
				НоваяСтрока.КоличествоОбъем = ТекСтрокаТабличнаяЧасть.Количество;
				НоваяСтрока.Номенклатура = ТекСтрокаТабличнаяЧасть[ИмяКолонкиНоменклатура];
				НоваяСтрока.УИД = Новый УникальныйИдентификатор;
				СтрокиСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", НоваяСтрока.Номенклатура));
				Если СтрокиСпецификаций.Количество() > 0 Тогда
					НоваяСтрока.Спецификация = СтрокиСпецификаций[0].Спецификация;
					УстановитьМатериалыПоСпецификации(НоваяСтрока.Спецификация, НоваяСтрока.Количество, НоваяСтрока.УИД, ТаблицаСпецификаций);
				КонецЕсли;	
				НоваяСтрока.Подразделение = ДанныеЗаполнения[ИмяПодразделения];
				НоваяСтрока.Склад = ДанныеЗаполнения.Склад;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка, ТипЗнч(Ссылка));
		Если Отказ.Признак = "##УжеСоздан" Тогда
			ВызватьИсключение "На основании Заказ на производство уже введен документ " + Отказ.Ссылка;
		ИначеЕсли Отказ.Признак = "##НеПроведен" Тогда
			ВызватьИсключение "Документ Заказ на производство не проведен. Ввод на основании не возможен.";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Дата, Проведен, Номер");
		ДокОснование = ДанныеЗаполнения;
		
		Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			ЗаполнитьЗначенияСвойств(ТабличнаяЧасть.Добавить(), СтрокаТЧ);
		КонецЦикла;
		
		Для Каждого СтрокаМатериалов Из ДанныеЗаполнения.Материалы Цикл
			ЗаполнитьЗначенияСвойств(Материалы.Добавить(), СтрокаМатериалов);
		КонецЦикла;
		
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры
