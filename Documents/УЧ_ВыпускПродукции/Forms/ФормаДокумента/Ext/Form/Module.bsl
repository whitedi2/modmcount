
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПустаяСтрока(Объект.Склад) Тогда 
		Элементы.ТабличнаяЧастьСклад.Видимость = Истина;
	Иначе
		Элементы.ТабличнаяЧастьСклад.Видимость = Ложь;
	КонецЕсли;
	
	//-lud 19/10/22 Вся проверка вынесена в модуль объекта, в процедуру Обработка заполнения
    //Отказ = сабОперОбщегоНазначенияНаКлиенте.ПроверкаСозданияНаОснованииНаКлиенте(Объект);
	//Если Отказ Тогда
	//	Возврат;	
	//КонецЕсли; 
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Параметры.Основание) И Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ПодразделениеПриИзмененииСервер();
		
		Если ЗначениеЗаполнено(Объект.Предприятие) Тогда
			Объект.УчитыватьНДС = Объект.Предприятие.УчетнаяПолитика.УчетНДС;
			Если Не Объект.УчитыватьНДС Тогда
				Объект.СуммаВключаетНДС = Истина;	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	//ограничение производства
	УстановитьОтборПроизводства();
	
	ИспользоватьСерии = Справочники.СерииНоменклатуры.СерииНоменклатурыИспользуются();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПроизводства()
	Если Ложь Тогда
		НоваяСвязь = Новый ПараметрВыбора("Отбор.ПроизводственноеПодразделение", Истина);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.Подразделение.ПараметрыВыбора = НовыеСвязи;
	Иначе
		Элементы.ТабличнаяЧастьПерезаполнитьПоСпецификации.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если ТекДанные.Количество = 0 Тогда
		ТекДанные.Количество = 1;		
	КонецЕсли;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Спецификация = ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекДанные.Номенклатура);
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
		УстановитьРаботыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	УстановитьОтборСтрокРаботыИРасценки();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура)
	Возврат Документы.ЗаказНаПроизводство.ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекДанные.УИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		Объект.Материалы.Удалить(СтрокаМатериала);	
	КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
	Для Каждого Текстрока Из Объект.ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
			ТекСтрока.Подразделение = Объект.Подразделение;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			ТекСтрока.Склад = Объект.Склад;
		КонецЕсли;
	КонецЦикла;
	//КонецЕсли;
	
	//удалим лишние строки в таблице материалов
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.ПроизводствоПоСпецификации") Тогда
		КоличествоСтрок = Объект.Материалы.Количество();
		
		Для Индекс = 1 По КоличествоСтрок Цикл
			ТекСтрокаМатериалов = Объект.Материалы[КоличествоСтрок - Индекс];
			
			Если Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("УИД", ТекСтрокаМатериалов.УИДТЧ)).Количество() = 0 Тогда
				Объект.Материалы.Удалить(ТекСтрокаМатериалов);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	//проверим дубли выпуска
	//Для каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
	//	НайденныеСтроки = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("Номенклатура, Склад, Подразделение, Спецификация", ТекСтрока.Номенклатура, ТекСтрока.Склад, ТекСтрока.Подразделение, ТекСтрока.Спецификация));
	//	Если НайденныеСтроки.Количество() > 1 Тогда
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = "В строке " + Строка(ТекСтрока.НомерСтроки) + " найдены дубли выпуска! Проверьте корректность данных.";
	//		Сообщение.Поле = "Объект.ТабличнаяЧасть[" + Строка(ТекСтрока.НомерСтроки - 1) + "].Номенклатура"; //имя реквизита 
	//		Сообщение.УстановитьДанные(Объект); //Ссылка на объект ИБ
	//		Сообщение.Сообщить();
	//		Отказ = Истина;
	//	КонецЕсли;
	//КонецЦикла; //закоменчено, т.к. они сканером бьют по журналу, встречаются повторения
	
КонецПроцедуры

#Область ПоискПоШК

&НаКлиенте
Процедура ПодобратьНоменклатуруПоШК(Команда)
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	РежимСканирования = Ложь;
	ИмяТЧ = "ТабличнаяЧасть";
	ИмяРеквизитаНоменклатуры = "Номенклатура";
	ИмяРеквизитаКоличества = "Количество";
	сабОперОбщегоНазначенияНаКлиенте.ОбработатьЗаполнениеПоШтрихкодуНаКлиенте(ЭтаФорма, ИмяТЧ, ИмяРеквизитаНоменклатуры, ИмяРеквизитаКоличества, Штрихкод);
	ТабличнаяЧастьНоменклатураПриИзменении(Неопределено);
	
	Элементы[ИмяТЧ].ТекущийЭлемент = Элементы.ТабличнаяЧастьКоличество;
	
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		Если Элементы[ИмяТЧ].ТекущиеДанные[ИмяРеквизитаКоличества] Тогда //режим непрерывного сканирования
			ПодобратьНоменклатуруПоШК(Неопределено);
		Иначе
			РежимСканирования = Истина;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПоПервичнымДокументамПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.СуммаПоПервичнымДокументам = ТекДанные.КоличествоПоПервичнымДокументам * ТекДанные.Цена;
	КонецЕсли;	
	
	ТекРеквизиты = БюджетныйНаСервере.ВернутьРеквизиты(ТекДанные.СтавкаНДС, "Ставка");
	Если НЕ ТекРеквизиты = Неопределено Тогда
		ТекДанные.СуммаНДСПоПервичнымДокументам = ТекДанные.СуммаПоПервичнымДокументам / (1+ТекРеквизиты.Ставка/100) * (ТекРеквизиты.Ставка/100);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	СчетВДоговоре = БюджетныйНаСервере.ВернутьРеквизит(Объект.Договор, "СчетВзаиморасчетов");
	Если ЗначениеЗаполнено(СчетВДоговоре) Тогда
		Объект.СчетКонтрагента = БюджетныйНаСервере.ВернутьРеквизит(Объект.Договор, "СчетВзаиморасчетов");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		РеквизитыПодразделения = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Подразделение, "Склад, Организация");
		Объект.Склад = РеквизитыПодразделения.Склад;
		Объект.Организация = РеквизитыПодразделения.Организация;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСпецификацияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		УстановитьМатериалыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
		УстановитьРаботыПоСпецификации(ТекДанные.Спецификация, ТекДанные.Количество, ТекДанные.УИД);
	КонецЕсли;	
	
	УстановитьОтборСтрокМатериалов();
	УстановитьОтборСтрокРаботыИРасценки();
			 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		ПересчитатьКоличествоПоСпецификации(ТекДанные.Количество, ТекДанные.УИД);
		Если РежимСканирования Тогда
			ПодобратьНоменклатуруПоШК(Неопределено);	
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтрокМатериалов()
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.ПроизводствоПоСпецификации") ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.ПоступлениеИзПереработки") Тогда
		ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
		
		Если Не ТекДанные = Неопределено Тогда
			Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("УИДТЧ", ТекДанные.УИД));
			Элементы.Услуги.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("УИДТЧ", ТекДанные.УИД));
		Иначе
			Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
			Элементы.Услуги.ОтборСтрок = Новый ФиксированнаяСтруктура();
		КонецЕсли;	
		Элементы.МатериалыСклад.Видимость = Ложь;
		Элементы.МатериалыСчетСписания.Видимость = Ложь;
	Иначе
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
		Элементы.МатериалыСклад.Видимость = Истина;
		Элементы.МатериалыСчетСписания.Видимость = Истина;
		
		Элементы.Услуги.ОтборСтрок = Новый ФиксированнаяСтруктура();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтрокРаботыИРасценки()
	
	ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
		
		Если Не ТекДанные = Неопределено Тогда
			Элементы.РаботыИРасценки.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("УИДТЧ", ТекДанные.УИД));
		Иначе
			Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
		КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоПоСпецификации(ПервоначальноеКоличество, ТекУИД)

	СтрокиМатериалов = Объект.Материалы.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого СтрокаМатериала Из СтрокиМатериалов Цикл
		Количество = ?(КоличествоДо, СтрокаМатериала.Количество / КоличествоДо, СтрокаМатериала.Количество);
		СтрокаМатериала.Количество = Количество * ПервоначальноеКоличество;	
	КонецЦикла;	
	
	СтрокиРаботыИРасценки = Объект.РаботыИРасценки.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого СтрокаРаботыИРасценки Из СтрокиРаботыИРасценки Цикл
		Количество = ?(КоличествоДо, СтрокаРаботыИРасценки.Количество / КоличествоДо, СтрокаРаботыИРасценки.Количество);
		СтрокаРаботыИРасценки.Количество = Количество * ПервоначальноеКоличество;
		СтрокаРаботыИРасценки.Сумма = СтрокаРаботыИРасценки.Цена * СтрокаРаботыИРасценки.Количество;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМатериалыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД)
	
	//заглушка
	ТаблицаМатериалов = Объект.Материалы.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаМатериалов.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
	
	ЗапросПоСпецификациям = Новый Запрос;
	ЗапросПоСпецификациям.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
	|	Спецификации.Владелец КАК Продукция
	|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры КАК Спецификации
	|ГДЕ
	//|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|	НЕ Спецификации.Ссылка.ПометкаУдаления
	|	И НЕ Спецификации.Ссылка В (&СписокСпецификаций)
	|	И Спецификации.Дата <= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецификации.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СпецификацииСостав.Ссылка КАК Спецификация,
	//|	СпецификацииСостав.Ссылка.Владелец КАК Продукция,
	//|	СпецификацииСостав.Номенклатура КАК Материал,
	//|	СпецификацииСостав.Ссылка.Дата КАК Дата,
	//|	СпецификацииСостав.Количество
	////|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	////|	СпецификацииСостав.МассаНетто,
	////|	СпецификацииСостав.ПотериПриТепловойОбработке,
	////|	СпецификацииСостав.Ссылка.Выход
	//|ИЗ
	//|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииСостав
	//|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
	//|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Владелец
	//|ГДЕ
	//|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
	////|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
	|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	|ВЫБРАТЬ
	|	СпецификацииСостав.Ссылка КАК Спецификация,
	|	СпецификацииСостав.Ссылка.Владелец КАК Продукция,
	|	СпецификацииСостав.Номенклатура КАК Материал,
	|	СпецификацииСостав.Ссылка.Дата КАК Дата,
	|	СпецификацииСостав.Количество / (Выбор Когда СпецификацииСостав.Ссылка.Количество > 0 Тогда СпецификацииСостав.Ссылка.Количество Иначе 1 Конец) КАК Количество 
	//|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
	//|	СпецификацииСостав.МассаНетто,
	//|	СпецификацииСостав.ПотериПриТепловойОбработке,
	//|	СпецификацииСостав.Ссылка.Выход
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка В(&СписокСпецификаций)";
	
	ЗапросПоСпецификациям.УстановитьПараметр("СписокСпецификаций", ТекСпецификация);
	ЗапросПоСпецификациям.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата())); 
	РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
	ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
	
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = МАКС(ПервоначальноеКоличество, 1);
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СоставСпецификаций.Материал));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					ТекКоэф1 = ТекКоэф * СтрокаПодчиненнойСпецификации.Количество;
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации.Материал));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							ТекКоэф2 = ТекКоэф1 * СтрокаПодчиненнойСпецификации2.Количество;
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации2.Материал));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									ТекКоэф3 = ТекКоэф2 * СтрокаПодчиненнойСпецификации3.Количество;
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации3.Материал));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											ТекКоэф4 = ТекКоэф3 * СтрокаПодчиненнойСпецификации4.Количество;
											СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
											СтрокаТаблМатериалов.Коэффициент = ТекКоэф4;
											СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации4.Количество * ТекКоэф4;
											СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации4.Материал;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе
										СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
										СтрокаТаблМатериалов.Коэффициент = ТекКоэф3;
										СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации3.Количество * ТекКоэф3;
										СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации3.Материал;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
								СтрокаТаблМатериалов.Коэффициент = ТекКоэф2;
								СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации2.Количество * ТекКоэф2;
								СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации2.Материал;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();	
						СтрокаТаблМатериалов.Коэффициент = ТекКоэф1;
						СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации.Количество * ТекКоэф1;
						СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации.Материал;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
				СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СоставСпецификаций.Количество * ТекКоэф;
				СтрокаТаблМатериалов.Материал = СоставСпецификаций.Материал;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
	
	Объект.Материалы.Загрузить(ТаблицаМатериалов);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРаботыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД)
	
	ТаблицаРабот = Объект.РаботыИРасценки.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаРабот.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаРабот.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
	
	ЗапросПоСпецификациям = Новый Запрос;
	ЗапросПоСпецификациям.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
	|	Спецификации.Владелец КАК Продукция
	|ПОМЕСТИТЬ ВТ_ПоследниеСпецификации
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры КАК Спецификации
	|ГДЕ
	|	НЕ Спецификации.Ссылка.ПометкаУдаления
	|	И НЕ Спецификации.Ссылка В (&СписокСпецификаций)
	|	И Спецификации.Дата <= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Спецификации.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииНоменклатурыРаботыИРасценки.Ссылка КАК Спецификация,
	|	СпецификацииНоменклатурыРаботыИРасценки.Ссылка.Владелец КАК Продукция,
	|	СпецификацииНоменклатурыРаботыИРасценки.Номенклатура КАК Работа,
	|	СпецификацииНоменклатурыРаботыИРасценки.Ссылка.Дата КАК Дата,
	|	СпецификацииНоменклатурыРаботыИРасценки.Количество / ВЫБОР
	|		КОГДА СпецификацииНоменклатурыРаботыИРасценки.Ссылка.Количество > 0
	|			ТОГДА СпецификацииНоменклатурыРаботыИРасценки.Ссылка.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	СпецификацииНоменклатурыРаботыИРасценки.Содержание КАК Содержание,
	|	СпецификацииНоменклатурыРаботыИРасценки.Цена КАК Цена,
	|	СпецификацииНоменклатурыРаботыИРасценки.Сумма КАК Сумма,
	|	СпецификацииНоменклатурыРаботыИРасценки.СчетЗатрат КАК СчетЗатрат,
	|	СпецификацииНоменклатурыРаботыИРасценки.Субконто1 КАК Субконто1,
	|	СпецификацииНоменклатурыРаботыИРасценки.Субконто2 КАК Субконто2,
	|	СпецификацииНоменклатурыРаботыИРасценки.Субконто3 КАК Субконто3,
	|	СпецификацииНоменклатурыРаботыИРасценки.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	Справочник.СпецификацииНоменклатуры.РаботыИРасценки КАК СпецификацииНоменклатурыРаботыИРасценки
	|ГДЕ
	|	СпецификацииНоменклатурыРаботыИРасценки.Ссылка В(&СписокСпецификаций)";
	
	ЗапросПоСпецификациям.УстановитьПараметр("СписокСпецификаций", ТекСпецификация);
	ЗапросПоСпецификациям.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата())); 
	РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
	ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
	
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = МАКС(ПервоначальноеКоличество, 1);
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Работа", СоставСпецификаций.Работа));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					ТекКоэф1 = ТекКоэф * СтрокаПодчиненнойСпецификации.Количество;
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Работа", СтрокаПодчиненнойСпецификации.Работа));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							ТекКоэф2 = ТекКоэф1 * СтрокаПодчиненнойСпецификации2.Количество;
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Работа", СтрокаПодчиненнойСпецификации2.Работа));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									ТекКоэф3 = ТекКоэф2 * СтрокаПодчиненнойСпецификации3.Количество;
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Работа", СтрокаПодчиненнойСпецификации3.Работа));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											ТекКоэф4 = ТекКоэф3 * СтрокаПодчиненнойСпецификации4.Количество;
											СтрокаТаблМатериалов = ТаблицаРабот.Добавить();
											//СтрокаТаблМатериалов.Коэффициент = ТекКоэф4;
											СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации4.Количество;// * ТекКоэф4;
											СтрокаТаблМатериалов.Номенклатура = СтрокаПодчиненнойСпецификации4.Работа;
											СтрокаТаблМатериалов.Содержание = СтрокаПодчиненнойСпецификации4.Содержание;
											СтрокаТаблМатериалов.Цена = СтрокаПодчиненнойСпецификации4.Цена;
											СтрокаТаблМатериалов.Сумма = СтрокаПодчиненнойСпецификации4.Сумма;
											СтрокаТаблМатериалов.СчетЗатрат = СтрокаПодчиненнойСпецификации4.СчетЗатрат;
											СтрокаТаблМатериалов.Субконто1 = СтрокаПодчиненнойСпецификации4.Субконто1;
											СтрокаТаблМатериалов.Субконто2 = СтрокаПодчиненнойСпецификации4.Субконто2;
											СтрокаТаблМатериалов.Субконто3 = СтрокаПодчиненнойСпецификации4.Субконто3;
											СтрокаТаблМатериалов.СтатьяЗатрат = СтрокаПодчиненнойСпецификации4.СтатьяЗатрат;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе
										СтрокаТаблМатериалов = ТаблицаРабот.Добавить();
										//СтрокаТаблМатериалов.Коэффициент = ТекКоэф3;
										СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации3.Количество;// * ТекКоэф3;
										СтрокаТаблМатериалов.Номенклатура = СтрокаПодчиненнойСпецификации3.Работа;
										СтрокаТаблМатериалов.Содержание = СтрокаПодчиненнойСпецификации3.Содержание;
										СтрокаТаблМатериалов.Цена = СтрокаПодчиненнойСпецификации3.Цена;
										СтрокаТаблМатериалов.Сумма = СтрокаПодчиненнойСпецификации3.Сумма;
										СтрокаТаблМатериалов.СчетЗатрат = СтрокаПодчиненнойСпецификации3.СчетЗатрат;
										СтрокаТаблМатериалов.Субконто1 = СтрокаПодчиненнойСпецификации3.Субконто1;
										СтрокаТаблМатериалов.Субконто2 = СтрокаПодчиненнойСпецификации3.Субконто2;
										СтрокаТаблМатериалов.Субконто3 = СтрокаПодчиненнойСпецификации3.Субконто3;
										СтрокаТаблМатериалов.СтатьяЗатрат = СтрокаПодчиненнойСпецификации3.СтатьяЗатрат;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаРабот.Добавить();
								//СтрокаТаблМатериалов.Коэффициент = ТекКоэф2;
								СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации2.Количество;// * ТекКоэф2;
								СтрокаТаблМатериалов.Номенклатура = СтрокаПодчиненнойСпецификации2.Работа;
								СтрокаТаблМатериалов.Содержание = СтрокаПодчиненнойСпецификации2.Содержание;
								СтрокаТаблМатериалов.Цена = СтрокаПодчиненнойСпецификации2.Цена;
								СтрокаТаблМатериалов.Сумма = СтрокаПодчиненнойСпецификации2.Сумма;
								СтрокаТаблМатериалов.СчетЗатрат = СтрокаПодчиненнойСпецификации2.СчетЗатрат;
								СтрокаТаблМатериалов.Субконто1 = СтрокаПодчиненнойСпецификации2.Субконто1;
								СтрокаТаблМатериалов.Субконто2 = СтрокаПодчиненнойСпецификации2.Субконто2;
								СтрокаТаблМатериалов.Субконто3 = СтрокаПодчиненнойСпецификации2.Субконто3;
								СтрокаТаблМатериалов.СтатьяЗатрат = СтрокаПодчиненнойСпецификации2.СтатьяЗатрат;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаРабот.Добавить();	
						//СтрокаТаблМатериалов.Коэффициент = ТекКоэф1;
						СтрокаТаблМатериалов.Количество = СтрокаПодчиненнойСпецификации.Количество;// * ТекКоэф1;
						СтрокаТаблМатериалов.Номенклатура = СтрокаПодчиненнойСпецификации.Работа;
						СтрокаТаблМатериалов.Содержание = СтрокаПодчиненнойСпецификации.Содержание;
						СтрокаТаблМатериалов.Цена = СтрокаПодчиненнойСпецификации.Цена;
						СтрокаТаблМатериалов.Сумма = СтрокаПодчиненнойСпецификации.Сумма;
						СтрокаТаблМатериалов.СчетЗатрат = СтрокаПодчиненнойСпецификации.СчетЗатрат;
						СтрокаТаблМатериалов.Субконто1 = СтрокаПодчиненнойСпецификации.Субконто1;
						СтрокаТаблМатериалов.Субконто2 = СтрокаПодчиненнойСпецификации.Субконто2;
						СтрокаТаблМатериалов.Субконто3 = СтрокаПодчиненнойСпецификации.Субконто3;
						СтрокаТаблМатериалов.СтатьяЗатрат = СтрокаПодчиненнойСпецификации.СтатьяЗатрат;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаРабот.Добавить();
				//СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СоставСпецификаций.Количество;// * ТекКоэф;
				СтрокаТаблМатериалов.Номенклатура = СоставСпецификаций.Работа;
				СтрокаТаблМатериалов.Содержание = СоставСпецификаций.Содержание;
				СтрокаТаблМатериалов.Цена = СоставСпецификаций.Цена;
				СтрокаТаблМатериалов.Сумма = СоставСпецификаций.Сумма;
				СтрокаТаблМатериалов.СчетЗатрат = СоставСпецификаций.СчетЗатрат;
				СтрокаТаблМатериалов.Субконто1 = СоставСпецификаций.Субконто1;
				СтрокаТаблМатериалов.Субконто2 = СоставСпецификаций.Субконто2;
				СтрокаТаблМатериалов.Субконто3 = СоставСпецификаций.Субконто3;
				СтрокаТаблМатериалов.СтатьяЗатрат = СоставСпецификаций.СтатьяЗатрат;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
		
	Объект.РаботыИРасценки.Загрузить(ТаблицаРабот);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
		ТабличнаяЧастьСпецификацияПриИзменении(Неопределено);
	КонецЕсли;
	
	КоличествоДо = Элемент.ТекущиеДанные.Количество;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборСтрокМатериалов();
	УстановитьОтборСтрокРаботыИРасценки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоСпецификации(Команда)
	
	Объект.Материалы.Очистить();
	Объект.РаботыИРасценки.Очистить();
	
	Для Каждого СтрокаТЧ Из Объект.ТабличнаяЧасть Цикл
		УстановитьМатериалыПоСпецификации(СтрокаТЧ.Спецификация, СтрокаТЧ.Количество, СтрокаТЧ.УИД);
		УстановитьРаботыПоСпецификации(СтрокаТЧ.Спецификация, СтрокаТЧ.Количество, СтрокаТЧ.УИД);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьExel(Команда)
	
	ПутьКФайлу = ОткрытьФормуМодально("Документ.УЧ_ВыпускПродукции.Форма.ФормаЗагрузки");   //, Новый Структура("ВидЗагрузки", "ЦеныПоставщика")
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Данные = Неопределено;
		СоответствиеНоменклатур = Новый Соответствие;
		
		ЧислоСтрок = 0;
		КоличествоСтраниц = 1;
		
		XLSОбъект = Новый COMОбъект("Excel.Application");
		ПодключениеКФайлу(ЧислоСтрок, Данные, XLSОбъект, ПутьКФайлу);
		
		НомерЗаказа = "";
		СтруДок = Новый Структура;
		МассивСтрок = Новый Массив;
		ДатаДок = Неопределено;
		ВремяНачала = ТекущаяДата();
		ОсталосьВремени = 0;
		СкоростьЗагрузки = 0;
		
		Для счСтроки = 1 по ЧислоСтрок Цикл
			Состояние("Загрузка", счСтроки / ЧислоСтрок * 100);
			СтруктураСтроки = Новый Структура;
			Код = (СтрЗаменить(СтрЗаменить(Данные[0][счСтроки], " ", ""), Символы.НПП, ""));
			ТекНоменклатура = БюджетныйНаСервере.СправочникНайтиПоКоду("Номенклатура", Код, , );
			
			Если Не ЗначениеЗаполнено(ТекНоменклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Спецификация = ТабличнаяЧастьНоменклатураПриИзмененииНаСервере(ТекНоменклатура);
			ГУИД = Новый УникальныйИдентификатор;			
		    Количество = ?(СокрЛП(Данные[2][счСтроки]) = "", 0, Число(Данные[2][счСтроки]));

			СтруктураСтроки.Вставить("Номенклатура", ТекНоменклатура); 
			СтруктураСтроки.Вставить("Количество", Количество); 
			СтруктураСтроки.Вставить("Спецификация", ?(Спецификация = "", 0, Спецификация) );   
			СтруктураСтроки.Вставить("УИД", ГУИД);
			
			ЗаполнитьЗначенияСвойств(Объект.ТабличнаяЧасть.Добавить(), СтруктураСтроки);
			
			Если ЗначениеЗаполнено(Спецификация) Тогда
			 	УстановитьМатериалыПоСпецификации(Спецификация, Количество, ГУИД);
			КонецЕсли;
			
	
		КонецЦикла;
		
		XLSОбъект.Application.Quit();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеКФайлу(ЧислоСтрок, Данные, XLSОбъект = Неопределено, ПутьКФайлу)
	
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите путь к файлу!";
		Сообщение.Поле = "Файл";
		Сообщение.Сообщить(); 	
		Возврат;
	КонецЕсли;
	
	Если НЕ ПутьКФайлу = Неопределено Тогда
		Если XLSОбъект = Неопределено Тогда
			XLSОбъект = Новый COMОбъект("Excel.Application");
		КонецЕсли;
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		КонечнаяСтрока = Лист.Cells.SpecialCells(11).Row;
		ЧислоСтрок = КонечнаяСтрока - 1;
		Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(КонечнаяСтрока,40));	
		Данные = Область.Value.Выгрузить();
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция НайтиНоменклатуру(Код)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Код = &Код
	|	И НЕ Номенклатура.ЭтоГруппа";
	Запрос.УстановитьПараметр("Код", Код);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;			
	КонецЦикла;
	
	Возврат Справочники.Номенклатура.ПустаяСсылка();
	
КонецФункции	

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//Если Истина Тогда 		
	//	СтандартнаяОбработка = Ложь;
	//	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка", Новый Структура("ПометкаУдаления, РежимВыбора, ТекущаяСтрока", Истина, Истина, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура), Элемент);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Истина Тогда 	
		ПараметрыПолученияДанных.Отбор.Вставить("ПометкаУдаления",Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если Истина Тогда 	
		ПараметрыПолученияДанных.Отбор.Вставить("ПометкаУдаления",Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоПриИзменении(Элемент)
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.Купажирование") Тогда
		
		Если Объект.ТабличнаяЧасть.Количество() Тогда
			Объект.ТабличнаяЧасть[0].Количество = Объект.Материалы.Итог("Количество");
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособВыпускаПриИзменении(Элемент)
	
	УстановитьОтборСтрокМатериалов();
	УстановитьОтборСтрокРаботыИРасценки();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

Процедура УстановитьВидимостьЭлементов()
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.ПроизводствоПоСпецификации") Тогда
		//Элементы.МатериалыСклад.Видимость = Ложь;
		//Элементы.МатериалыСчетСписания.Видимость = Ложь;
		//Элементы.ДекорацияМатериалы.Видимость = Истина;
		//Элементы.ГруппаКомПанельМатериалы.Видимость = Ложь;
		Элементы.Группа4.Видимость = Истина;
		Элементы.Группа13.Видимость = Ложь;
		Если Не Элементы.Найти("ТабличнаяЧастьПерезаполнитьПоСпецификации") = Неопределено Тогда
			Элементы.ТабличнаяЧастьПерезаполнитьПоСпецификации.Видимость = Истина;
		КонецЕсли;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.Купажирование") Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
		Если Не Элементы.Найти("ТабличнаяЧастьПерезаполнитьПоСпецификации") = Неопределено Тогда
			Элементы.ТабличнаяЧастьПерезаполнитьПоСпецификации.Видимость = Ложь;
		КонецЕсли;
		//Элементы.МатериалыСклад.Видимость = Истина;
		//Элементы.МатериалыСчетСписания.Видимость = Истина;
		//Элементы.ДекорацияМатериалы.Видимость = Ложь;
		//Элементы.ГруппаКомПанельМатериалы.Видимость = Истина;
		Элементы.Группа4.Видимость = Истина;
		Элементы.Группа13.Видимость = Ложь;
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацииВыпускаПродукции.ПоступлениеИзПереработки") Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура();
		Если Не Элементы.Найти("ТабличнаяЧастьПерезаполнитьПоСпецификации") = Неопределено Тогда
			Элементы.ТабличнаяЧастьПерезаполнитьПоСпецификации.Видимость = Ложь;
		КонецЕсли;
		//Элементы.МатериалыСклад.Видимость = Истина;
		//Элементы.МатериалыСчетСписания.Видимость = Истина;
		//Элементы.ДекорацияМатериалы.Видимость = Ложь;
		//Элементы.ГруппаКомПанельМатериалы.Видимость = Истина;
		Элементы.Группа4.Видимость = Истина;
		Элементы.Группа13.Видимость = Истина;
	Иначе
		Если Не Элементы.Найти("ТабличнаяЧастьПерезаполнитьПоСпецификации") = Неопределено Тогда
			Элементы.ТабличнаяЧастьПерезаполнитьПоСпецификации.Видимость = Ложь;
		КонецЕсли;
		Элементы.Группа4.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.УИДТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные.УИД;
	КонецЕсли;	
КонецПроцедуры


#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОповеститьРегистрОбработанных", Новый Структура("ДокументУУ, ДокументБУ", Объект.Ссылка, ?(БюджетныйНаКлиенте.ЕстьСвойствоОбъекта(ЭтаФорма, "ДокументБУ"), ЭтаФорма.ДокументБУ, Неопределено)));	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Модифицирован", Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка));
	//ТекущийОбъект.ДополнительныеСвойства.Вставить("СрокОплаты", СрокОплаты);
КонецПроцедуры

&НаКлиенте
Процедура РаботыИРасценкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
		Элемент.ТекущиеДанные.УИДТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные.УИД;
	КонецЕсли;
КонецПроцедуры
