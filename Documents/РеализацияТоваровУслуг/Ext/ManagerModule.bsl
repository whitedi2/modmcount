
&После("ДобавитьКомандыПечати")
Процедура сабПечатьКД_ДобавитьКомандыПечати(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "ПечатьНакладная";
	КомандаПечати.МенеджерПечати = "Документ.УЧ_Реализация";
	КомандаПечати.Представление  = НСтр("ru = 'Товарная накладная (упр)'");
	КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","ПФ_MXL_НакладнаяУпр");
	КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
	КомандаПечати.Порядок        = 170; 
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "ПечатьТоварныйЧек";
	КомандаПечати.МенеджерПечати = "Документ.РозничнаяПродажа";
	КомандаПечати.Представление  = НСтр("ru = 'Товарный чек'");
	КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","ТоварныйЧек");
	КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
	КомандаПечати.Порядок        = 180;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "ПечатьНакладнаяНаВозврат";
	КомандаПечати.МенеджерПечати = "Документ.ВозвратТоваровОтПокупателя";
	КомандаПечати.Представление  = НСтр("ru = 'Товарная накладная на возврат'");
	КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","Накладная");
	КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
	КомандаПечати.Порядок        = 170; 
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "ПечатьНакладнаяНаВозвратУпр";
	КомандаПечати.МенеджерПечати = "Документ.УЧ_Возврат";
	КомандаПечати.Представление  = НСтр("ru = 'Товарная накладная на возврат (упр)'");
	КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","ПФ_MXL_Накладная");
	КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
	КомандаПечати.Порядок        = 170;  
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "ПечатьТребованиеНакладная";
	КомандаПечати.МенеджерПечати = "Документ.ТребованиеНакладная";
	КомандаПечати.Представление  = НСтр("ru = 'Требование-накладная'");
	КомандаПечати.СписокФорм     = "ФормаСписка,ФормаВыбора";
	КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","ТребованиеНакладная");
	КомандаПечати.ДополнительныеПараметры.Вставить("СокращенноеСообщениеОбОшибке", Ложь);
	КомандаПечати.Порядок        = 170;

КонецПроцедуры

&Вместо("ПолучитьТаблицуСведенийТОРГ12")
Функция УУ_ПолучитьТаблицуСведенийТОРГ12(Знач МассивДокументов, Знач ВключатьУслуги)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеТОРГ12();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", 	МассивДокументов);
	Запрос.УстановитьПараметр("ВключатьУслуги", 	ВключатьУслуги);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12();
		
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить(); 
	
	// ++саб уу данные по упаковкам начало вставки 
	сабДополнитьТаблицуСтрокДокументовДаннымиПоУпаковкам(СтрокиДокументов);          
	// --саб уу данные по упаковкам конец вставки          
	
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		СведенияОДокументе.Валюта             = ВалютаРегУчета;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыТОРГ12();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = НЕ (Выборка.ВалютаДокумента = ВалютаРегУчета);
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС 	= Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность   	= 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС 	= Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС  = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
			Если НуженПересчетВРубли 
					ИЛИ (Выборка.СуммаВключаетНДС И СтрокаТаблицыДокумента.СуммаНДС <> 0) Тогда
				СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0,
					СтрокаТаблицыДокумента.СуммаБезНДС,
					СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя, ЗаполнятьГлавногоБухгалтера, ЗаполнятьКладовщика");
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, ПорядокЗаполнения);
		
		Если НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(СведенияОДокументе.Организация) Тогда
			СтатусФизическогоЛица = Справочники.Организации.СтатусФизическогоЛицаНаДату(
				СведенияОДокументе.Организация, СведенияОДокументе.ДатаДляПолученияСведений);
			Если СтатусФизическогоЛица = Перечисления.СтатусыФизическихЛиц.Самозанятый Тогда
				СведенияОДокументе.РуководительДолжностьНаименование = "";
			Иначе
				ИндивидуальныйПредприниматель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СведенияОДокументе.Организация, "ИндивидуальныйПредприниматель");
				Если ИндивидуальныйПредприниматель = СведенияОДокументе.Руководитель Тогда
					СведенияОДокументе.РуководительДолжностьНаименование = "Индивидуальный предприниматель";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Процедура сабДополнитьТаблицуСтрокДокументовДаннымиПоУпаковкам(ТЗ_СтрокиДокументов)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Коэффициент КАК Коэффициент,
	|	УпаковкиНоменклатуры.ОсновнаяУпаковка КАК ОсновнаяУпаковка,
	|	УпаковкиНоменклатуры.Упаковка.Представление КАК Упаковка,
	|	УпаковкиНоменклатуры.Номенклатура КАК Номенклатура,
	|	УпаковкиНоменклатуры.Упаковка.Код КАК УпаковкаКод
	|ИЗ
	|	РегистрСведений.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|ГДЕ
	|	УпаковкиНоменклатуры.Номенклатура В (&Номенклатура)";	
	Запрос.УстановитьПараметр("Номенклатура", ТЗ_СтрокиДокументов.ВыгрузитьКолонку("Товар"));
	РезультатУп = Запрос.Выполнить();
	ТЗ_УпаковкиНоменклатуры = РезультатУп.Выгрузить();
	
	Для Каждого ТекСтрокаТЗ Из ТЗ_СтрокиДокументов Цикл
		
		Если ЗначениеЗаполнено(ТекСтрокаТЗ.КоличествоМест) И ЗначениеЗаполнено(ТекСтрокаТЗ.КоличествоВОдномМесте) Тогда
			Продолжить; 
		КонецЕсли;
		
		СтрокиУпаковки = ТЗ_УпаковкиНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаТЗ.Товар));
		
		Если Не СтрокиУпаковки.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрокаТЗ.КоличествоВОдномМесте) Тогда
			ТекСтрокаТЗ.КоличествоВОдномМесте = СтрокиУпаковки[0].Коэффициент; 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекСтрокаТЗ.КоличествоВОдномМесте) И ЗначениеЗаполнено(ТекСтрокаТЗ.Количество) Тогда
			ТекСтрокаТЗ.КоличествоМест = Цел(ТекСтрокаТЗ.Количество / ТекСтрокаТЗ.КоличествоВОдномМесте);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокиУпаковки[0].Упаковка) Тогда
			ТекСтрокаТЗ.ВидУпаковки = СтрокиУпаковки[0].Упаковка;
			ТекСтрокаТЗ.ВидУпаковкиКод = СтрокиУпаковки[0].УпаковкаКод;
			ТекСтрокаТЗ.ВидУпаковкиНаименование = СтрокиУпаковки[0].Упаковка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
