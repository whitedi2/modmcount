
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();		
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныйОстатки.Субконто1,
		|	ЕСТЬNULL(УчетныйОстатки.Субконто2, УчетныйОборотыДтКт.СубконтоКт1) КАК Материал,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК СуммаНЗВ,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК КоличествоНЗВ,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоКРХОстаток, 0) КАК КоличествоНЗВКРХ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.КоличествоОборотКт, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.СуммаОборот, 0)) / (ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.КоличествоОборотКт, 0))
		|	КОНЕЦ КАК Цена,
		|	УчетныйОстатки.Счет,
		|	УчетныйОборотыДтКт.СуммаОборот,
		|	УчетныйОборотыДтКт.КоличествоОборотКт,
		|	УчетныйОборотыДтКт.СубконтоДт1,
		|	УчетныйОборотыДтКт.СубконтоДт2,
		|	УчетныйОборотыДтКт.СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетныйОстатки.КоличествоКРХОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.КоличествоКРХОборотКт, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ (ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.СуммаОборот, 0)) / (ЕСТЬNULL(УчетныйОстатки.КоличествоКРХОстаток, 0) + ЕСТЬNULL(УчетныйОборотыДтКт.КоличествоКРХОборотКт, 0))
		|	КОНЕЦ КАК ЦенаКРХ
		|ИЗ
		|	РегистрБухгалтерии.Учетный.ОборотыДтКт(
		|			&НачалоМесяца,
		|			&КонецМесяца,
		|			,
		|			СчетДт = &Счет20,
		|			,
		|			СчетКт В ИЕРАРХИИ (&Счет10),
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
		|				И СубконтоДт1 = &ВыбНоменклатура
		|				И СубконтоДт2 = &ВыбИздержки
		|				И СубконтоКт1 В (&ВыбМатериалы)) КАК УчетныйОборотыДтКт
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Учетный.Остатки(
		|				&КонецНЗВ,
		|				Счет = &СчетНЗВ,
		|				,
		|				Предприятия = &ВыбПредприятие
		|					И СценарийПлана = ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Факт)
		|					И Субконто1 = &ВыбНоменклатура
		|					И Субконто2 В (&ВыбМатериалы)) КАК УчетныйОстатки
		|		ПО УчетныйОборотыДтКт.СубконтоКт1 = УчетныйОстатки.Субконто2
		|			И УчетныйОборотыДтКт.СубконтоДт1 = УчетныйОстатки.Субконто1";
		
	ВыбМатериалы = Новый СписокЗначений;
	Для каждого ТекСтрока Из ТабличнаяЧасть Цикл
		ВыбМатериалы.Добавить(ТекСтрока.Материал);
	КонецЦикла; 	

	Запрос.УстановитьПараметр("ВыбМатериалы", ВыбМатериалы);
	Запрос.УстановитьПараметр("ВыбНоменклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВыбИздержки", Издержки);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Учетный.Счет20());
	Запрос.УстановитьПараметр("Счет10", ПланыСчетов.Учетный.Счет10());
	Запрос.УстановитьПараметр("СчетНЗВ", ПланыСчетов.Учетный.НезавершенноеПроизводство);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("КонецНЗВ", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Результат = Запрос.Выполнить();

	Движения.Учетный.Записывать = Истина;
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		Движение.СчетДт = ПланыСчетов.Учетный.НезавершенноеПроизводство;
		Движение.ПодразделениеДт = 
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Материалы] = ТекСтрокаТабличнаяЧасть.Материал;
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		СтруктураПоиска = Новый Структура("Материал", ТекСтрокаТабличнаяЧасть.Материал);
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Тогда
			Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество - ВыборкаДетальныеЗаписи.КоличествоНЗВ;
			Движение.КоличествоКРХДт = ТекСтрокаТабличнаяЧасть.Крахмал - ВыборкаДетальныеЗаписи.КоличествоНЗВКРХ;
			Если ВЦенахКРХ Тогда
				Цена = ВыборкаДетальныеЗаписи.ЦенаКРХ;
				Движение.Сумма = Цена * ТекСтрокаТабличнаяЧасть.Крахмал-ВыборкаДетальныеЗаписи.СуммаНЗВ;
				ТекСтрокаТабличнаяЧасть.Сумма = Цена * ТекСтрокаТабличнаяЧасть.Крахмал;
			Иначе
				Цена = ВыборкаДетальныеЗаписи.Цена;			
				Движение.Сумма = Цена * ТекСтрокаТабличнаяЧасть.Количество-ВыборкаДетальныеЗаписи.СуммаНЗВ;
				ТекСтрокаТабличнаяЧасть.Сумма = Цена * ТекСтрокаТабличнаяЧасть.Количество;
			КонецЕсли;
		Иначе
			Движение.КоличествоДт = 0;
			Движение.КоличествоКРХДт = 0;
			Цена = 0;
			Движение.Сумма = 0;
		КонецЕсли;
		//ТекСтрокаТабличнаяЧасть.Цена = ?(Движение.КоличествоДт = 0,0,ТекСтрокаТабличнаяЧасть.Сумма/Движение.КоличествоДт);
	КонецЦикла;
	
	ТаблицаИздержек = ТабличнаяЧасть.Выгрузить();
	ТаблицаИздержек.Свернуть("Издержки", "Сумма");
	
	Для Каждого СтрокаИздержек Из ТаблицаИздержек Цикл
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		
		Движение.СчетДт = ПланыСчетов.Учетный.Счет20();
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ?(ЗначениеЗаполнено(Издержки) И ТаблицаИздержек.Количество() = 1, Издержки, СтрокаИздержек.Издержки);
		
		Если СчетСписания = ПланыСчетов.Учетный.Счет20() ИЛИ Не ЗначениеЗаполнено(СчетСписания) Тогда
			Движение.СчетКт = ПланыСчетов.Учетный.ВыпускПродукции;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = Номенклатура;			
		Иначе
			Движение.СчетКт = СчетСписания;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Склады", Истина)] = Склад;
		КонецЕсли;
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Подразделение), ТекСтрокаТабличнаяЧасть.Подразделение, Предприятие.ВидДеятельности);
		КонецЕсли;
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = ?(ЗначениеЗаполнено(ТекСтрокаТабличнаяЧасть.Подразделение), ТекСтрокаТабличнаяЧасть.Подразделение, Предприятие.ВидДеятельности);
		КонецЕсли;
		
		Движение.Сумма = СтрокаИздержек.Сумма;
		Движение.Содержание = Комментарий;
	КонецЦикла;
		
    Записать();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Для каждого ТекСтрока Из ТабличнаяЧасть Цикл
		ТекСтрока.Цена = 0;
		ТекСтрока.Сумма = 0;
	КонецЦикла;
	РучнаяКорректировка = Ложь;
	Записать();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Издержки = "";
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

