&НаСервере
Функция ВыполненоСервер(ПроверкаУспешно, ВставлятьКомм)
	
	НачатьТранзакцию();
	БП = Объект.Заявка.ПолучитьОбъект();
	СтруктураПоиска = Новый Структура("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	НайдденныеСтроки = БП.СписокИсполнителей.НайтиСтроки(СтруктураПоиска);
	Для каждого ТекСтрока Из НайдденныеСтроки Цикл
		ТекСтрока.Комментарии = Комментарий;
		ТекСтрока.Исполнено = Истина;
		ТекСтрока.ДатаВыполнения = ТекущаяДата();
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура("Исполнено", Ложь);
	Если НЕ БП.СписокИсполнителей.НайтиСтроки(СтруктураПоиска).Количество() Тогда
		БП.Завершен = Истина;
		БП.Записать(РежимЗаписиДокумента.Проведение);
	Иначе
		БП.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Комментарий) И ОтправлятьКомментарий Тогда
		Если ТипЗнч(Объект.Заявка) = Тип("ДокументСсылка.БП_Оповещение") Тогда
			БПСервер.СоздатьОповещение(Объект.Автор, Строка(Комментарий), "Ответ на " + Строка(Объект.Заявка), Объект.Гиперссылка,,,Объект.Заявка);
		Иначе
			БПСервер.СоздатьОповещение(Объект.Автор, "Пользователь " + Строка(БюджетныйНаСервере.ПолучитьПользователя()) 
			+ " ответил в комментариях к оповещению:
			|" + Строка(Комментарий), "Ответ на " + Строка(Объект.Заявка), Объект.Гиперссылка);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Документ) = Тип("СправочникСсылка.Задача") И ТипСообщенияИзменеикСрока Тогда
		БПСервер.СоздатьОповещение(Объект.Автор, "Запрос на изменение срока по задаче " + Строка(Документ) + ?(ПроверкаУспешно, " удовлетворен.", " не удовлетворен."),"Ответ на запрос об изменениии срока выполнения задачи", Объект.Гиперссылка,,,Объект.Заявка);
	КонецЕсли;
	
	
	Если ТипЗнч(Документ) = Тип("СправочникСсылка.Задача") И ТипСообщенияИзменеикСрока И ПроверкаУспешно Тогда
		ЗаписатьЗадачу(НовыйСрок);
	КонецЕсли;
	
	
	БПСервер.ВыполнитьЗадачу(Объект.Ссылка,0, "", Комментарий);
	
	
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗаявкаСогласована(Команда)
	
	//Если Записать() Тогда
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		//Результат = ВыполненоСервер(1, 1);
		Результат = БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
		
		//ознакомление с СЗ. добавлено 15.05.13 Д1
		//ОзнакомитьсяСДокументом(Объект.Заявка);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ОбновитьСписокЗадач");
		Если Результат Тогда
			Закрыть();			
		КонецЕсли;
	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗаписатьЗадачу(НовыйСрокВыполнения)
	
	//ТекОб.Вработе = Вработе;
	
	Если ТипЗнч(Объект.Гиперссылка) = Тип("ДокументСсылка.БП_Поручение") Тогда
		//перезаписываем срок задания
		ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();
		ТекЗаданиеОбъект = Объект.Гиперссылка.ПолучитьОбъект();
		Для каждого ТекСтрока Из ТекЗаданиеОбъект.СписокИсполнителей Цикл
			Если ТекСтрока.Исполнитель = ТекПользователь Тогда
				ТекСтрока.СрокИсполнения = НовыйСрокВыполнения;
			КонецЕсли;
		КонецЦикла;
		ТекЗаданиеОбъект.Записать();
	КонецЕсли;	
	
	ЗадачаОбъект = Документ.ПолучитьОбъект();
	ЗадачаОбъект.СрокВыполнения = НовыйСрокВыполнения;
	ЗадачаОбъект.Записать();
	
	//БПСервер.ВыполнитьЗадачу(ТекЗадача, , Истина, "Взял в работу.");	
	
КонецПроцедуры

 
 

&НаСервереБезКонтекста
Процедура ОзнакомитьсяСДокументом(ТекЗаявка)
			Если ТипЗнч(ТекЗаявка) = Тип("ДокументСсылка.БП_Оповещение") Тогда
				РеквизитыОповещения = БюджетныйНаСервере.ВернутьРеквизиты(ТекЗаявка, "Гиперссылка");
				Если ТипЗнч(РеквизитыОповещения.Гиперссылка) = Тип("ДокументСсылка.Д_СлужебнаяЗаписка") Тогда
					ТекБП = БПСервер.НайтиТекущийБПСервер(РеквизитыОповещения.Гиперссылка);
					Если НЕ ТекБП = Неопределено Тогда
						ТекБПОбъект = ТекБП.ПолучитьОбъект();
						ОтобранныеСтроки = ТекБПОбъект.Адресаты.НайтиСтроки(Новый Структура("СубъектСогласования", ПараметрыСеанса.ТекущийПользователь)); 
						Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
							ТекСтрока.Согласовано = Истина;
							ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
						КонецЦикла;
						ТекБПОбъект.Записать();
					КонецЕсли;
				ИначеЕсли ТипЗнч(РеквизитыОповещения.Гиперссылка) = Тип("ДокументСсылка.Д_ЗаявкаНаОплату") Тогда
					ТекБП = БПСервер.НайтиТекущийБПСервер(РеквизитыОповещения.Гиперссылка);
					Если НЕ ТекБП = Неопределено Тогда
						ТекБПОбъект = ТекБП.ПолучитьОбъект();
						ОтобранныеСтроки = ТекБПОбъект.ДопОповещение.НайтиСтроки(Новый Структура("Пользователь", ПараметрыСеанса.ТекущийПользователь)); 
						Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
							ТекСтрока.Оповещен = Истина;
							ТекСтрока.Пользователь = ПараметрыСеанса.ТекущийПользователь;
						КонецЦикла;
						ТекБПОбъект.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПриОткрытииСервер();
	ТекМассивПользователей = БПСервер.ПолучитьМассивПользователей();
	Если НЕ ТекМассивПользователей.Найти(Объект.Автор) = Неопределено И ТекМассивПользователей.Найти(Объект.Исполнитель) = Неопределено Тогда
		Элементы.ЗаявкаСогласована.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНажатие(Элемент, СтандартнаяОбработка)
	
	//МассивСсылок = новый Массив;
	//МассивСсылок.Добавить(Объект.Гиперссылка);
	//
	//Если Объект.ОткрыватьФорму Тогда
	СтандартнаяОбработка = Ложь;
	//ПоказатьЗначение(Неопределено, Объект.Гиперссылка);
	
	//БюджетныйНаКлиенте.УниверсальнаяПечать(Объект.Гиперссылка, Истина);
	ПерейтиПоНавигационнойСсылке(Объект.Гиперссылка);
	//ИначеЕсли ТипЗнч(Объект.Гиперссылка) = Тип("СправочникСсылка.УтверждениеБюджета") Тогда
	//	СтандартнаяОбработка = Ложь;
	//	
	//	ТабДок = Новый ТабличныйДокумент;
	//	
	//	ПечатьБюджет(ТабДок, Объект.Гиперссылка);
	//	
	//	ТабДок.ОтображатьСетку = Ложь;
	//	ТабДок.Защита = Ложь;
	//	ТабДок.ТолькоПросмотр = Истина;
	//	ТабДок.ОтображатьЗаголовки = Истина;
	//	ТабДок.ОтображатьГруппировки = Истина;
	//	ФормаПечати = ПолучитьФорму("Документ.Д_Бюджет.Форма.ФормаПечатиЗатрат");
	//	ФормаПечати.ТабДок = ТабДок;
	//	ФормаПечати.Открыть();
	//Иначе
	//	СтандартнаяОбработка = Ложь;
	//	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	//	ТабДок = Новый ТабличныйДокумент;
	//	
	//	МассивСсылок = Новый Массив;
	//	МассивСсылок.Добавить(Объект.Гиперссылка);
	//	
	//	ИмяДока = Печать(ТабДок, МассивСсылок);
	//	
	//	ТабДок.ОтображатьСетку = Ложь;
	//	ТабДок.Защита = Ложь;
	//	ТабДок.ТолькоПросмотр = Истина;
	//	ТабДок.ОтображатьЗаголовки = Истина;
	//	ТабДок.АвтоМасштаб = Истина;
	//	
	//	Попытка
	//		ФормаПечати = ПолучитьФорму("Документ." + ИмяДока+ ".Форма.ФормаПечати");
	//		ФормаПечати.ТабДок = ТабДок;
	//		ФормаПечати.Открыть();
	//	Исключение
	//		ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечатиДокумента", Новый Структура("Ссылка", МассивСсылок),,МассивСсылок[0]);
	//		ФормаПечати.Заголовок = Строка(МассивСсылок[0]);
	//		ФормаПечати.Результат = ТабДок;
	//		ФормаПечати.Открыть();
	//	КонецПопытки; 
	//	
	//КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция Печать(ТабДок, ПараметрКоманды)
	ИмяДока = ПараметрКоманды[0].ПолучитьОбъект().Метаданные().Имя;
	Попытка
		Документы[ИмяДока].Печать(ТабДок, ПараметрКоманды);
	Исключение
		Справочники[ИмяДока].Печать(ТабДок, ПараметрКоманды);
	КонецПопытки;
	//Документы.Д_ЗаявкаНаОтгрузку.Печать(ТабДок, ПараметрКоманды);		
	Возврат  ИмяДока;
КонецФункции

&НаСервере
Процедура ПечатьБюджет(ТабДок, ТекБП)
	
	ПараметрКоманды = ТекБП.Заявка;
	Если ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатратСтарый Тогда
		Документы.Д_Бюджет.РечатьСебестоимостьСервер(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗакупок Тогда 
		Документы.Д_Бюджет.РассчитатьСырье(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);	
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетИнвестиций Тогда 
		Документы.Д_Бюджет.РассчитатьИнвестиции(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПродаж Тогда 
		Документы.Д_Бюджет.РасчитатьПродажи(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда 
		//Документы.Д_Бюджет.ПечатьКорректировки(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
		Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);	
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиИнвестиций(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводства Тогда 
		Документы.Д_Бюджет.РечатьОбъемПроизводства(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат ИЛИ ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетТекущихЗатрат Тогда 
		Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_Бюджет") Тогда
			//Если ПараметрКоманды.БезБюджетаПроизводства Тогда
			//	ТабДок = БюджетныйНаСервере.ВернутьТабличныйДокументДляСогласователей(ТекБП)
			//Иначе
			Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета)
			//КонецЕсли;
		ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_БюджетПрочихПроектов") Тогда 
			БюджетныйНаСервере.УниверсальнаяПечатьСервер(ТабДок, ПараметрКоманды);	
		КонецЕсли;
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов Тогда 
		Документы.Д_Бюджет.ПечатьПредставительскихРасходовБДР(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиПредставительские(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Комментарий) Тогда
		ОтправлятьКомментарий = Истина;
		Элементы.ОтправлятьКомментарий.Доступность = Ложь;
	Иначе 
		ОтправлятьКомментарий = Ложь;
		Элементы.ОтправлятьКомментарий.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Группа3ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.ИсторияПереписки И Документ <> Неопределено Тогда
		История = ЗаполнитьИсториюНаСервере();
	КонецЕсли;		
		
КонецПроцедуры

&НаСервере
Функция ЗаполнитьИсториюНаСервере()
	
	ТекстСообщения = "";
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.БП_Оповещение") Тогда
		ТекстСообщения = "" + Документ.Дата + " " + Документ.Автор + ": " + Документ.Описание + "
		|";
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БП_Оповещение.Автор,
	|	БП_Оповещение.ДатаЗавершения КАК ДатаЗавершения,
	|	БП_Оповещение.Описание
	|ИЗ
	|	Документ.БП_Оповещение КАК БП_Оповещение
	|ГДЕ
	|	БП_Оповещение.Документ = &Документ
	|	И БП_Оповещение.ДатаЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаЗавершения";
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = ТекстСообщения + Выборка.ДатаЗавершения + " " + Выборка.Автор + " ответил: " + Выборка.Описание + "
		|";
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Объект.Заявка = Неопределено Тогда
		Если Объект.Исполнитель = Объект.Заявка.Автор Тогда
			ТекИсполнитель = Объект.Автор;
		Иначе
			ТекИсполнитель = Объект.Исполнитель;
		КонецЕсли;
		СтруктураПоиска = Новый Структура("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
		НайденныеСтроки = Объект.Заявка.СписокИсполнителей.НайтиСтроки(СтруктураПоиска);
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			Комментарий = ТекСтрока.Комментарии;
		КонецЦикла;
		Документ = Объект.Заявка.Документ;
		Если Не ЗначениеЗаполнено(Документ) Тогда
			Документ = Объект.Заявка.Гиперссылка;
		КонецЕсли;
		Если ТипЗнч(Объект.Заявка) = Тип("ДокументСсылка.БП_Оповещение") Тогда
			Если Объект.Наименование = "Ознакомиться с отчетом по остаткам номенклатуры" Тогда
				ТекРекв = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Заявка, "Гиперссылка, Тема");	
				ГиперссылкаСтрока = ТекРекв.Гиперссылка;
			Иначе 
				ТекРекв = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Заявка, "ГиперссылкаСтрока, Тема");				
				ГиперссылкаСтрока = ТекРекв.ГиперссылкаСтрока;				
			КонецЕсли;
			
			НовыйСрок = Объект.Заявка.НовыйСрок;
			ТипСообщенияИзменеикСрока = ЗначениеЗаполнено(НовыйСрок);//тип сообщение - уведомление на изменение срока
			//Если ТипСообщенияИзменеикСрока Тогда
			//	Документ = Объект.Ссылка;
			//КонецЕсли;
			Элементы.Отказаться.Видимость = ТипСообщенияИзменеикСрока;
			Если ТипСообщенияИзменеикСрока Тогда
				Элементы.ЗаявкаСогласована.Заголовок = "Принять";
			КонецЕсли;
			ТемаОповещения = ТекРекв.Тема;
			Элементы.ТемаОповещения.Видимость = Истина;
			Если ЗначениеЗаполнено(Документ) Тогда
				Элементы.ИсторияПереписки.Видимость = Истина;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	
	
	АдресХранилища = ВХранилище(КлючУникальности);
	
	Если НЕ АдресХранилища = Неопределено Тогда
		ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеХранилища) И ДанныеХранилища.Свойство("Заголовок") Тогда
		Отчет = ДанныеХранилища.Заголовок;
	КонецЕсли;
	
	Элементы.Гиперссылка.Видимость = ЗначениеЗаполнено(Объект.Гиперссылка);
	Элементы.Документ.Видимость = ЗначениеЗаполнено(Документ);
	Элементы.Отчет.Видимость = ЗначениеЗаполнено(Отчет);
	сабОбщегоНазначения.ОбновитьКоличествоПрикрепленныхФайловСервер(ЭтаФорма);
	
	Если ТипЗнч(ДанныеХранилища) = Тип("Структура") И ДанныеХранилища.Свойство("ИсторияИзмененийОбъекта") Тогда //отражаем историю изменений объекта
		ИсторияИзменений.Параметры.УстановитьЗначениеПараметра("Объект", Объект.Гиперссылка);	
		Элементы.ИсторияИзменений.Видимость = Истина;
		Элементы.ИсторияИзменений.Заголовок = Элементы.ИсторияИзменений.Заголовок + " " + Строка(Объект.Гиперссылка);
	Иначе
		ИсторияИзменений.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено);	
		Элементы.ИсторияИзменений.Видимость = Ложь;
		Элементы.Группа3.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВХранилище(КлючУникальности)
	Данные = Объект.Заявка.ПолучитьОбъект().СтруктураПараметров.Получить();
	Если Данные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;	
	Возврат ПоместитьВоВременноеХранилище(Данные);
КонецФункции


&НаКлиенте
Процедура ГиперссылкаСтрокаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ГиперссылкаСтрока = "Сформировать отчет по остаткам" Тогда
		
		ОтчетОст = ПолучитьФорму("Отчет.ПР_ОтчетПоОстаткамНаУтро.Форма",,,Истина);
		ОтчетОст.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение = Дата(Прав(Объект.Описание, 20));
		ОтчетОст.СкомпоноватьРезультат();
		ОтчетОст.Открыть();
		
	Иначе		
		
		ПерейтиПоНавигационнойСсылке(ГиперссылкаСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	АдресХранилища = ВХранилище(КлючУникальности);
	Если НЕ АдресХранилища = Неопределено Тогда
		ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Сформировать", Истина);
	Если ДанныеХранилища.Свойство("ИмяОтчета") Тогда
		ТекФорма = ПолучитьФорму("Отчет." + ДанныеХранилища.ИмяОтчета + ".Форма", ПараметрыФормы);
		ТекФорма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Использование = Истина;
		ТекФорма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение = ДанныеХранилища.Параметр0;
		ТекФорма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Использование = Истина;
		ТекФорма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение = ДанныеХранилища.Параметр1;
		ТекФорма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Использование = Истина;
		ТекФорма.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[2].Значение = ДанныеХранилища.Параметр2;
		
		ТекФорма.СкомпоноватьРезультат();
		ТекФорма.Открыть();
		Оповестить("ОбъединитьЯчейки");
		
	ИначеЕсли ДанныеХранилища.Свойство("ИмяФормыДокумента") Тогда 
		
		ТекФорма = ПолучитьФорму("Документ." + ДанныеХранилища.ИмяФормыДокумента);
		ТекФорма.Открыть();
		
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отказаться(Команда)
	Если Не БПСервер.ПроверкаЗадачи(Объект.Ссылка) Тогда
		//Результат = ВыполненоСервер(0, 1);
		Результат = БПСервер.ВыполнитьКомандуЗадачиБП(Объект.Ссылка, Команда.Имя, ПолучитьСтруктуруРеквизитовФормы());
		
		//ознакомление с СЗ. добавлено 15.05.13 Д1
		//ОзнакомитьсяСДокументом(Объект.Заявка);
		
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("ОбновитьСписокЗадач");
		Если Результат Тогда
			Закрыть();			
		КонецЕсли;
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
		сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруРеквизитовФормы()
	
	Результат = новый Структура();
	
	Результат.Вставить("Комментарий", Комментарий);
	Результат.Вставить("ОтправлятьКомментарий", ОтправлятьКомментарий);
	
	Возврат Результат;
	
КонецФункции









