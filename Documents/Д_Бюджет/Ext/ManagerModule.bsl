Процедура РечатьСебестоимостьСервер(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	
	ПрямыеСтатьи = Новый Массив;
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ЗатратыОсн);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ЗатратыВсп);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ПрибыльПобочка);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ГазЭл);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ГазЭк);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ЭлектПотр);
	ПрямыеСтатьи.Добавить(Справочники.СтатьиЗатрат.ЭлектЭк);
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|Начало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|Столбец");
	
	ОбластьДанные = Макет.ПолучитьОбласть("Строка0|Начало");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка0|Столбец");
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка1|Начало");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка1|Столбец");
	
	ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2|Начало2");
	ОбластьШапкаСтолбцы2 = Макет.ПолучитьОбласть("Шапка2|Столбец2");
	
	ОбластьДанные2 = Макет.ПолучитьОбласть("Строка2|Начало2");
	ОбластьДанныеСтолбцы2 = Макет.ПолучитьОбласть("Строка2|Столбец2");
	ОбластьДанные4 = Макет.ПолучитьОбласть("Строка4|Начало2");
	ОбластьДанныеСтолбцы4 = Макет.ПолучитьОбласть("Строка4|Столбец2");
	ОбластьДанные5 = Макет.ПолучитьОбласть("Строка5|Начало2");
	ОбластьДанныеСтолбцы5 = Макет.ПолучитьОбласть("Строка5|Столбец2");
	
	ОбластьДанныеИтого2 = Макет.ПолучитьОбласть("Строка3|Начало2");
	ОбластьДанныеИтогоСтолбцы2 = Макет.ПолучитьОбласть("Строка3|Столбец2");
	
	ОбластьШапкаБДР = Макет.ПолучитьОбласть("Шапка4|Начало4");
	ОбластьШапкаСтолбцыБДР = Макет.ПолучитьОбласть("Шапка4|Столбец4");
	
	ОбластьДанныеБДР = Макет.ПолучитьОбласть("Строка9|Начало4");
	ОбластьДанныеСтолбцыБДР = Макет.ПолучитьОбласть("Строка9|Столбец4");
	ОбластьДанныеБДР2 = Макет.ПолучитьОбласть("Строка11|Начало4");
	ОбластьДанныеСтолбцыБДР2 = Макет.ПолучитьОбласть("Строка11|Столбец4");
	ОбластьДанныеБДР3 = Макет.ПолучитьОбласть("Строка12|Начало4");
	ОбластьДанныеСтолбцыБДР3 = Макет.ПолучитьОбласть("Строка12|Столбец4");
	
	ОбластьДанныеИтогоБДР = Макет.ПолучитьОбласть("Строка10|Начало4");
	ОбластьДанныеИтогоСтолбцыБДР = Макет.ПолучитьОбласть("Строка10|Столбец4");
	
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	КлючДни = Окр((ИсходныеДанные.ДатаОкончания - ИсходныеДанные.ДатаНачала) / (24 * 60 * 60), 0);
	Если КлючПериод = "Месяц" Тогда
		КлючДни = Мин(КлючДни, 30);
	ИначеЕсли КлючПериод = "Квартал" Тогда
		КлючДни = Мин(КлючДни, 90);
	Иначе
		КлючДни = Мин(КлючДни, 360);
	КонецЕсли;
	
	НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
	
	КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
	
	//объемы производства
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
	
	
	Если ДокументОбъект.ОбъемПроизводства.Количество() Тогда //себестоимость
		
		ТабДок.Вывести(ОбластьШапка);
		
		Для каждого ТекСтрока Из ТекПериоды Цикл
			ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
			ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
		КонецЦикла;
		
		ТЗ = ДокументОбъект.ОбъемПроизводства.Выгрузить();
		ТЗ.Свернуть("Номенклатура");
		
		ТаблНоменклатуры = Новый ТаблицаЗначений;
		ТаблНоменклатуры.Колонки.Добавить("Месяц");
		ТаблНоменклатуры.Колонки.Добавить("Объем");
		ТаблНоменклатуры.Колонки.Добавить("Номенклатура");
		
		
		Для каждого ТекСтрока Из ТЗ Цикл
			ОбластьДанные.Параметры.Заполнить(ТекСтрока);
			ТабДок.Вывести(ОбластьДанные);
			
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Номенклатура, ТекМесяц));
				Объем = 0;
				
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
				КонецЦикла;
				
				ОбластьДанныеСтолбцы.Параметры.Объем = Объем;
				ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
			КонецЦикла;
			
		КонецЦикла;
		
		ТабДок.Вывести(ОбластьДанныеИтого);
		
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
			Объем = 0;
			
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
			КонецЦикла;
			
			ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
			ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);		
		КонецЦикла;
		
		Для каждого ТекМесяц Из ТекПериоды Цикл
			
			Для каждого Номенклатура Из ТЗ Цикл
				ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекМесяц, Номенклатура.Номенклатура));
				Объем = 0;
				
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
				КонецЦикла;
				
				ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
				НоваяСтрока = ТаблНоменклатуры.Добавить();
				НоваяСтрока.Месяц = ТекМесяц;
				НоваяСтрока.Объем = Объем;
				НоваяСтрока.Номенклатура = Номенклатура.Номенклатура;
			КонецЦикла;
			
		КонецЦикла;	
		
		//себестоимость
		ТабДок.НачатьАвтоГруппировкуСтрок();
		
		ТЗ2 = ДокументОбъект.БюджетСебестоимости.Выгрузить();
		ТЗ2.Колонки.Добавить("Код");
		ТЗ2.Колонки.Добавить("СуммаЕд");
		ТЗ2.Очистить();
		
		МасивТЧ = Новый Массив;
		МасивТЧ.Добавить(ДокументОбъект.БюджетСебестоимости);
		МасивТЧ.Добавить(ДокументОбъект.БюджетСебестоимостиПрочие);
		МасивТЧ.Добавить(ДокументОбъект.ЗатратыКП);
		
		// 28.09.2012 расходы по статье ПР УК
		МасивТЧ.Добавить(ДокументОбъект.ПР);
		
		//тек переработка
		Для каждого ТекТЧ Из МасивТЧ Цикл
			
			//
			Если ТекТЧ = МасивТЧ[3] Тогда
				
				Для Каждого ТекСтрока Из ТекТЧ Цикл
					
					Сумма = ТекСтрока.СуммаФР;
					СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяПР) = Неопределено);
					Если НЕ ПустаяСтрока(ТекСтрока.СтатьяПР) Тогда
						//заполняем саму статью
						Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда //если распределять
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
							Для ТекИндекс = 0 По ПроизводимыеНоменклатуры.Количество() - 1 Цикл
								НоваяСтрока = ТЗ2.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
								НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
								НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;
								НоваяСтрока.Номенклатура = ПроизводимыеНоменклатуры[ТекИндекс].Номенклатура;
								
								НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой) / 100, 1);
								НоваяСтрока.СуммаЕД = 0;
								НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
								Если НайтиОбъем.Количество() Тогда
									НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
									Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
											НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
								ТекНом = НоваяСтрока.Номенклатура;
								
								//простой
								Если ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой И СписаниеНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
									НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
									НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекНом));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
											Если ТекСтрока.НаЕдиницу Тогда
												НоваяСтрока.СуммаЕД = 0;
												НоваяСтрока.СуммаСеб  = 0;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
							КонецЦикла;
							//КонецЕсли;
						Иначе //если номенклатура указана
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока.Месяц, ТекСтрока.Номенклатура));
							Если ПроизводимыеНоменклатуры.Количество() Тогда
								
								НоваяСтрока = ТЗ2.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
								НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
								НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;						
								НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[0].ПроцентНаПростой) / 100, 1);
								НоваяСтрока.СуммаЕД = 0;
								НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
								Если НайтиОбъем.Количество() Тогда
									НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
									Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
											НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
								ТекНом = НоваяСтрока.Номенклатура;
								
								//простой
								Если ПроизводимыеНоменклатуры[0].ПроцентНаПростой И СписаниеНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
									НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
									НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[0].ПроцентНаПростой / 100, 1);
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекСтрока.Номенклатура));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
											Если ТекСтрока.НаЕдиницу Тогда
												НоваяСтрока.СуммаЕД = 0;
												НоваяСтрока.СуммаСеб  = 0;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
									
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
						
					КонецЕсли;
					
					
				КонецЦикла
				
			Иначе
				
				Для каждого ТекСтрока Из ТекТЧ Цикл
					
					Сумма = ТекСтрока.СуммаСеб;
					СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
					Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат) Тогда
						//заполняем саму статью
						Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда //если распределять
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
							Для ТекИндекс = 0 По ПроизводимыеНоменклатуры.Количество() - 1 Цикл
								НоваяСтрока = ТЗ2.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
								НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат;
								НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
								НоваяСтрока.Номенклатура = ПроизводимыеНоменклатуры[ТекИндекс].Номенклатура;
								
								НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой) / 100, 1);
								НоваяСтрока.СуммаЕД = 0;
								НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
								Если НайтиОбъем.Количество() Тогда
									НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
									Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
											НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
								ТекНом = НоваяСтрока.Номенклатура;
								
								//простой
								Если ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой И СписаниеНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
									НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекНом));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
											Если ТекСтрока.НаЕдиницу Тогда
												НоваяСтрока.СуммаЕД = 0;
												НоваяСтрока.СуммаСеб  = 0;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
							КонецЦикла;
							//КонецЕсли;
						Иначе //если номенклатура указана
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока.Месяц, ТекСтрока.Номенклатура));
							Если ПроизводимыеНоменклатуры.Количество() Тогда
								
								НоваяСтрока = ТЗ2.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
								НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;						
								НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[0].ПроцентНаПростой) / 100, 1);
								НоваяСтрока.СуммаЕД = 0;
								НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
								Если НайтиОбъем.Количество() Тогда
									НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
									Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
											НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
								
								ТекНом = НоваяСтрока.Номенклатура;
								
								//простой
								Если ПроизводимыеНоменклатуры[0].ПроцентНаПростой И СписаниеНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат;
									НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
									НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[0].ПроцентНаПростой / 100, 1);
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекСтрока.Номенклатура));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
											Если ТекСтрока.НаЕдиницу Тогда
												НоваяСтрока.СуммаЕД = 0;
												НоваяСтрока.СуммаСеб  = 0;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
									
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
						
					КонецЕсли;
				КонецЦикла;
				
				
			КонецЕсли;
			
			
		КонецЦикла;              // конец большого цикла
		
		Для каждого ТекСтрока Из ДокументОбъект.ЗатратыНаПРостой2 Цикл
			
			НоваяСтрока = ТЗ2.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
			НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
			НоваяСтрока.СуммаСеб = ТекСтрока.СуммаСеб;
			НоваяСтрока.СуммаЕД = 0;
			
		КонецЦикла; 
		
		
		Для каждого ТекСтрока Из ТЗ2 Цикл
			Если НЕ ТекСтрока.СтатьяЗатрат.Родитель.Пустая() Тогда
				НоваяСтрока = ТЗ2.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат.Родитель;
				НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
			КонецЕсли;
		КонецЦикла; 
		
		
		
		ТЗ = ТЗ2.Скопировать();
		
		
		ТЗ4 = ТЗ2.Скопировать();
		ТЗ5 = ТЗ2.Скопировать();
		ТЗ5.Свернуть("Номенклатура");
		ТЗ5.Сортировать("Номенклатура  Возр");
		ТЗ4.Свернуть("СтатьяЗатрат, Код, Основание, Номенклатура", "СуммаСеб, СуммаЕд");
		
		
		ТЗ2.Свернуть("СтатьяЗатрат, Номенклатура, Код");
		ТЗ2.Сортировать("Код Возр");
		
		
		Для каждого Номенклатура Из ТЗ5 Цикл //группировка по номенклатурам
			
			ОбластьШапка2.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
			ОбластьШапка2.Параметры.Номенклатура = Номенклатура.Номенклатура;
			ОбластьШапка2.Параметры.Предприятия = ИсходныеДанные.Предприятие;
			
			ТабДок.Вывести(ОбластьШапка2, 0);
			
			Для каждого ТекСтрока Из ТекПериоды Цикл
				ОбластьШапкаСтолбцы2.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
				НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока, Номенклатура.Номенклатура));
				
				Если НайтиОбъем.Количество() Тогда
					ОбластьШапкаСтолбцы2.Параметры.Объем = НайтиОбъем[0].Объем;
				КонецЕсли;
				
				ТабДок.Присоединить(ОбластьШапкаСтолбцы2, 0);	
			КонецЦикла;
			
			
			
			ОтобранныеНоменклатуры = ТЗ2.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура.Номенклатура));
			
			Для каждого ТекСтрока Из ОтобранныеНоменклатуры Цикл // группировка по статьям
				
				Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат) Тогда
					
					Ур = ТекСтрока.СтатьяЗатрат.ЭтоГруппа + ТекСтрока.СтатьяЗатрат.Родитель.Пустая();
					Если Ур Тогда
						ТекОбл1 = ОбластьДанные2;
						ТекОбл2 = ОбластьДанныеСтолбцы2;
						Ур2 = 1;
					Иначе
						ТекОбл1 = ОбластьДанные4;
						ТекОбл2 = ОбластьДанныеСтолбцы4;
						Ур2 = 0;
					КонецЕсли;
					ТекОбл1.Параметры.Заполнить(ТекСтрока);
					ТабДок.Вывести(ТекОбл1, 1 - Ур2,,Ур2);
					Для каждого ТекМесяц Из ТекПериоды Цикл
						ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Месяц, Номенклатура", ТекСтрока.СтатьяЗатрат, ТекМесяц, Номенклатура.Номенклатура));
						СуммаСС = 0; СуммаССЕд = 0;
						Для каждого ТекДанные Из ОтобранныеСтроки Цикл
							СуммаСС = СуммаСС + ТекДанные.СуммаСеб;
							СуммаССЕд = СуммаССЕд + ТекДанные.СуммаЕд; 
						КонецЦикла;
						ТекОбл2.Параметры.Сумма = СуммаСС;
						
						ТекОбл2.Параметры.Наед = СуммаССЕд;
						ТабДок.Присоединить(ТекОбл2, 1 - Ур2,,Ур2);
						
					КонецЦикла;
					
					Если НЕ ТекСтрока.СтатьяЗатрат.ЭтоГруппа Тогда
						ОтобранныеСтроки = ТЗ4.НайтиСтроки(Новый Структура("СтатьяЗатрат, Номенклатура", ТекСтрока.СтатьяЗатрат, Номенклатура.Номенклатура));
						Для каждого ТекСтрокаОсн Из ОтобранныеСтроки Цикл
							ОбластьДанные5.Параметры.СтатьяЗатрат = ТекСтрокаОсн.Основание;
							ТабДок.Вывести(ОбластьДанные5, 2,,Ложь);
							Для каждого ТекМесяц Из ТекПериоды Цикл
								ОтобранныеСтроки2 = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Основание, Месяц, Номенклатура", ТекСтрокаОсн.СтатьяЗатрат, ТекСтрокаОсн.Основание, ТекМесяц, Номенклатура.Номенклатура));
								ОбластьДанныеСтолбцы5.Параметры.Сумма = 0;
								ОбластьДанныеСтолбцы5.Параметры.Наед = 0;
								Для каждого ТекТТ Из ОтобранныеСтроки2 Цикл
									
									ОбластьДанныеСтолбцы5.Параметры.Сумма = ОбластьДанныеСтолбцы5.Параметры.Сумма + ТекТТ.СуммаСеб;
									ОбластьДанныеСтолбцы5.Параметры.Наед = ОбластьДанныеСтолбцы5.Параметры.Наед + ТекТТ.СуммаЕд			
									
								КонецЦикла; 
								ТабДок.Присоединить(ОбластьДанныеСтолбцы5, 2,,Ложь);
								
							КонецЦикла; 
						КонецЦикла; 
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			
			СуммаПП = Новый Массив;
			СуммаППЕд = Новый Массив;
			СуммаИтого = Новый Массив;
			СуммаИтогоЕд = Новый Массив;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				СуммаПП.Добавить(0);
				СуммаППЕд.Добавить(0);
				СуммаИтого.Добавить(0);
				СуммаИтогоЕд.Добавить(0);
			КонецЦикла;
			
			ТекЗнач = 0;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекМесяц, Номенклатура.Номенклатура));
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Если НЕ ТекДанные.СтатьяЗатрат.ЭтоГруппа Тогда
						Если НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыОсн И НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыВсп  Тогда
							СуммаПП[ТекЗнач] = СуммаПП[ТекЗнач] + ТекДанные.СуммаСеб;
							СуммаППЕд[ТекЗнач] = СуммаППЕд[ТекЗнач] + ТекДанные.СуммаЕд;
						КонецЕсли;
						СуммаИтого[ТекЗнач] = СуммаИтого[ТекЗнач] + ТекДанные.СуммаСеб;
						СуммаИтогоЕд[ТекЗнач] = СуммаИтогоЕд[ТекЗнач] + ТекДанные.СуммаЕд;
						//КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ТекЗнач = ТекЗнач + 1;
			КонецЦикла;
			
			ОбластьДанныеИтого2.Параметры.Итого = "Итого затраты на переработку:";
			ТабДок.Вывести(ОбластьДанныеИтого2, 0);
			ТекЗнач = 0;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОбластьДанныеИтогоСтолбцы2.Параметры.Сумма = СуммаПП[ТекЗнач];
				
				ОбластьДанныеИтогоСтолбцы2.Параметры.Наед = СуммаППЕд[ТекЗнач];			
				
				ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы2, 0);	
				ТекЗнач = ТекЗнач + 1;
			КонецЦикла; 
			
			ОбластьДанныеИтого2.Параметры.Итого = "Итого:";
			ТабДок.Вывести(ОбластьДанныеИтого2, 0);
			ТекЗнач = 0;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОбластьДанныеИтогоСтолбцы2.Параметры.Сумма = СуммаИтого[ТекЗнач];
				ОбластьДанныеИтогоСтолбцы2.Параметры.Наед = СуммаИтогоЕд[ТекЗнач];			
				
				ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы2, 0);	
				ТекЗнач = ТекЗнач + 1;
			КонецЦикла;
		КонецЦикла;		
		//реестр ПР
		Если ДокументОбъект.ПР.Количество() Тогда
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка3|Начало3");
			ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка3|Столбец3");
			ОбластьДанные = Макет.ПолучитьОбласть("Строка8|Начало3");
			ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка8|Столбец3");
			
			ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка7|Начало3");
			ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка7|Столбец3");
			
			ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
			ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
			ТабДок.Вывести(ОбластьШапка);
			
			
			
			Для каждого ТекСтрока Из ТекПериоды Цикл
				ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
				ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
			КонецЦикла;
			
			ТЗ = ДокументОбъект.ПР.Выгрузить();
			ТЗ.Свернуть("Основание, ЧЗ");
			
			Для каждого ТекСтрока Из ТЗ Цикл
				ОбластьДанные.Параметры.Заполнить(ТекСтрока);
				
				ТабДок.Вывести(ОбластьДанные);
				Для каждого ТекМесяц Из ТекПериоды Цикл
					ОтобранныеСтроки = ДокументОбъект.ПР.НайтиСтроки(Новый Структура("Основание, Месяц, ЧЗ", ТекСтрока.Основание, ТекМесяц, ТекСтрока.ЧЗ));
					СуммаБДДС = 0;
					Для каждого ТекДанные Из ОтобранныеСтроки Цикл
						СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС;
					КонецЦикла;
					ОбластьДанныеСтолбцы.Параметры.Сумма = СуммаБДДС;
					ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
				КонецЦикла; 
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьДанныеИтого);
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ДокументОбъект.ПР.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
				СуммаБДДС = 0;
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС;
				КонецЦикла;
				ОбластьДанныеИтогоСтолбцы.Параметры.Сумма = СуммаБДДС;
				ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);		
			КонецЦикла; 
			
		КонецЕсли;
		
		ТабДок.ЗакончитьАвтоГруппировкуСтрок();
	Иначе //БДР
		ТабДок.НачатьАвтоГруппировкуСтрок();
		
		ОбластьШапкаБДР.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
		ОбластьШапкаБДР.Параметры.Предприятия = ИсходныеДанные.Предприятие;
		ТабДок.Вывести(ОбластьШапкаБДР, 0);
		
		Для каждого ТекСтрока Из ТекПериоды Цикл
			ОбластьШапкаСтолбцыБДР.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
			ТабДок.Присоединить(ОбластьШапкаСтолбцыБДР, 0);	
		КонецЦикла;
		
		
		ТЗ2 = ДокументОбъект.Затраты.Выгрузить();
		ТЗ2.Колонки.Добавить("Код");
		
		Для каждого ТекСтрока Из ТЗ2 Цикл
			Если НЕ ТекСтрока.СтатьяЗатрат.Родитель.Пустая() Тогда
				НоваяСтрока = ТЗ2.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат.Родитель;
				НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
			КонецЕсли;
			Если НЕ ТекСтрока.СтатьяЗатрат.Пустая() Тогда
				ТекСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
			КонецЕсли;
		КонецЦикла; 
		ТЗ = ТЗ2.Скопировать();
		
		
		ТЗ4 = ТЗ2.Скопировать();
		ТЗ4.Свернуть("СтатьяЗатрат, Код, Основание", "СуммаСеб");
		
		
		ТЗ2.Свернуть("СтатьяЗатрат, Код");
		ТЗ2.Сортировать("Код Возр");
		
		Для каждого ТекСтрока Из ТЗ2 Цикл
			Ур = ТекСтрока.СтатьяЗатрат.ЭтоГруппа + ТекСтрока.СтатьяЗатрат.Родитель.Пустая();
			Если Ур Тогда
				ТекОбл1 = ОбластьДанныеБДР;
				ТекОбл2 = ОбластьДанныеСтолбцыБДР;
				Ур2 = 1;
			Иначе
				ТекОбл1 = ОбластьДанныеБДР2;
				ТекОбл2 = ОбластьДанныеСтолбцыБДР2;
				Ур2 = 0;
			КонецЕсли;
			ТекОбл1.Параметры.Заполнить(ТекСтрока);
			ТабДок.Вывести(ТекОбл1, 1 - Ур2,,Ур2);
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Месяц", ТекСтрока.СтатьяЗатрат, ТекМесяц));
				
				СуммаСС = 0;
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					СуммаСС = СуммаСС + ТекДанные.СуммаСеб;			
				КонецЦикла;
				ТекОбл2.Параметры.Сумма = СуммаСС;
				
				ТабДок.Присоединить(ТекОбл2, 1 - Ур2,,Ур2);
				
			КонецЦикла;
			
			Если НЕ ТекСтрока.СтатьяЗатрат.ЭтоГруппа Тогда
				ОтобранныеСтроки = ТЗ4.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекСтрока.СтатьяЗатрат));
				Для каждого ТекСтрокаОсн Из ОтобранныеСтроки Цикл
					ОбластьДанныеБДР3.Параметры.СтатьяЗатрат = ТекСтрокаОсн.Основание;
					ТабДок.Вывести(ОбластьДанныеБДР3, 2,,Ложь);
					Для каждого ТекМесяц Из ТекПериоды Цикл
						ОтобранныеСтроки2 = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Основание, Месяц", ТекСтрокаОсн.СтатьяЗатрат, ТекСтрокаОсн.Основание, ТекМесяц));
						ОбластьДанныеСтолбцыБДР3.Параметры.Сумма = 0;
						Для каждого ТекТТ Из ОтобранныеСтроки2 Цикл
							ОбластьДанныеСтолбцыБДР3.Параметры.Сумма = ОбластьДанныеСтолбцыБДР3.Параметры.Сумма + ТекТТ.СуммаСеб;
						КонецЦикла; 
						ТабДок.Присоединить(ОбластьДанныеСтолбцыБДР3, 2,,Ложь);
					КонецЦикла; 
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		ТабДок.Вывести(ОбластьДанныеИтогоБДР, 0);
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.Затраты.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
			СуммаСС = 0;
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				СуммаСС = СуммаСС + ТекДанные.СуммаСеб;
			КонецЦикла;
			ОбластьДанныеИтогоСтолбцыБДР.Параметры.Сумма = СуммаСС;
			
			ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцыБДР, 0);		
		КонецЦикла;
		ТабДок.ЗакончитьАвтоГруппировкуСтрок();
	КонецЕсли;
	
	Если НЕ ТипБюджета = Неопределено Тогда
		
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	
	ОбластьСогласование22 = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьШапка22 = Макет.ПолучитьОбласть("Штампы");
	
	ТаблицаСогласований = Неопределено;
	
	Для каждого ТекБп Из Метаданные.БизнесПроцессы Цикл
		
		ЕстьТипБП = (ТекБп = Метаданные.БизнесПроцессы.УтверждениеБюджета);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	*
		|ИЗ
		|	БизнесПроцесс." + ТекБп.Имя + ".ДопСогласование КАК УтверждениеБюджетаДопСогласование
		|ГДЕ
		|	УтверждениеБюджетаДопСогласование.Ссылка.Заявка = &Заявка
		|	" + ?(ЕстьТипБП, "И УтверждениеБюджетаДопСогласование.Ссылка.ТипБюджета = &ТипБюджета", "") + "
		|	И УтверждениеБюджетаДопСогласование.Ссылка.ПометкаУдаления = ЛОЖЬ " + ?(Истина, "", " И УтверждениеБюджетаДопСогласование.Пройден = ИСТИНА") + "
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос.УстановитьПараметр("Заявка", ДокументОбъект.Ссылка);
		Запрос.УстановитьПараметр("ТипБюджета", ТипБюджета);
		
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выгрузить();
		Если ТаблицаСогласований = Неопределено И Выборка.Количество() Тогда
			ТаблицаСогласований = Результат.Выгрузить();
		ИначеЕсли Выборка.Количество() Тогда			
			Для каждого ТекСтрока Из Выборка Цикл
				НоваяСтрока = ТаблицаСогласований.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			КонецЦикла;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаСогласований = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//09.10.12 должность из регистра сведений
	ТаблицаСогласований.Колонки.Добавить("Должность");
	ТаблицаСогласований.Колонки.Добавить("ПредставлениеПользователя");
	
	Для каждого ТекСтрока Из ТаблицаСогласований Цикл
		Если ЗначениеЗаполнено(ТекСтрока.СубъектСогласования) Тогда
			
			ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(ТекСтрока.Ссылка.Дата, ТекСтрока.СубъектСогласования);
			
			ТекСтрока.ПредставлениеПользователя = ИмяДолжность.ПредставлениеПользователя;
			ТекСтрока.Должность = ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");
			
		КонецЕсли;	
	КонецЦикла; 
	
	ВыводимШапку = Истина;
	
	Для каждого ВыборкаСогласование Из ТаблицаСогласований Цикл
		
		Если ВыводимШапку Тогда
			ТабДок.Вывести(ОбластьСогласование22, 0, "Показать согласование");			
			ВыводимШапку = Ложь;
		КонецЕсли;
		
		Если Не ВыборкаСогласование.Пройден Тогда
			ОбластьНепройденных = Макет.ПолучитьОбласть("Непройденные");
			ОбластьНепройденных.Параметры.Заполнить(ВыборкаСогласование);
			ТабДок.Вывести(ОбластьНепройденных, 0);
			Продолжить;
		КонецЕсли;
		
		ОбластьШапка22.Параметры.Заполнить(ВыборкаСогласование);					
		
		Оттиск = ВыборкаСогласование.Пользователь.ФайлКартинки;
		Если НЕ ПустаяСтрока(Оттиск) Тогда
			Картинка = Оттиск.ФайлХранилище.Получить();
		Иначе	
			Картинка = Новый Картинка;
		КонецЕсли;
		Если Не Картинка = Неопределено Тогда
			ОбластьШапка22.Рисунки.Оттиск.Картинка = Картинка;
		КонецЕсли;
		ОбластьШапка22.Параметры.Отметка = ?(ВыборкаСогласование.Согласовано, "Да.", "Нет!");
		
		// 29.05.13
		Если ЗначениеЗаполнено(ВыборкаСогласование.ДатаВыполнения) Тогда
			ОбластьШапка22.Параметры.ДатаСогласования = ВыборкаСогласование.ДатаВыполнения;
		КонецЕсли;	
		
		ТабДок.Вывести(ОбластьШапка22, 0, "Показать согласование");
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура РассчитатьСырье(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	
	
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетСырье");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьДанные = Макет.ПолучитьОбласть("ДанныеСтроки|СтолбецНачало");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("ДанныеСтроки|ДанныеСтолбца");
	
	//ТабДок.Очистить();
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	
	Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	КлючДни = Окр((ИсходныеДанные.ДатаОкончания - ИсходныеДанные.ДатаНачала) / (24 * 60 * 60), 0);
	Если КлючПериод = "Месяц" Тогда
		КлючДни = Мин(КлючДни, 30);
	ИначеЕсли КлючПериод = "Квартал" Тогда
		КлючДни = Мин(КлючДни, 90);
	Иначе
		КлючДни = Мин(КлючДни, 360);
	КонецЕсли;
	
	НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
	
	КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	ТабДок.Вывести(ОбластьШапка);
	ОбластьДанные.Параметры.Предприятия = ДокументОбъект.Предприятие;
	ТабДок.Вывести(ОбластьДанные);
	
	Для каждого ТекСтрока Из ДокументОбъект.ДвижениеСырья Цикл
		ОбъемПроизводства = 0;
		ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока.Месяц, ТекСтрока.Номенклатура));
		
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			ОбъемПроизводства = ОбъемПроизводства + ТекСтрока2.Объем + ТекСтрока2.ОбъемЦВ;	
		КонецЦикла;  
		
		Выход = ПолучитьПараметрыСырья(ТекСтрока.Сырье, ТекСтрока.Месяц, ДокументОбъект.Сценарий).Д_ВыходИзТонныУслКРХ;
		Отбор = ПолучитьПараметрыНоменклатуры(ТекСтрока.Номенклатура, ТекСтрока.Месяц, ДокументОбъект.Сценарий, ДокументОбъект.Предприятие).Д_ПроцентОтбора;
		
		ОбластьДанныеСтолбцы.Параметры.Заполнить(ТекСтрока);
		ОбластьДанныеСтолбцы.Параметры.Период = ПредставлениеПериода(НачалоМесяца(ТекСтрока.Месяц), КонецМесяца(ТекСтрока.Месяц));
		ОбластьДанныеСтолбцы.Параметры.Сценарий = ДокументОбъект.Сценарий;
		ОбластьДанныеСтолбцы.Параметры.СуммаНачало = ТекСтрока.КоличествоНаНачало * ТекСтрока.ЦенаНаНачало;
		ОбластьДанныеСтолбцы.Параметры.СуммаПришло = ТекСтрока.КоличествоПриход * ТекСтрока.ЦенаПриход;
		ОбластьДанныеСтолбцы.Параметры.СуммаУшло = ТекСтрока.КоличествоРасход * ТекСтрока.ЦенаРасход;
		ОбластьДанныеСтолбцы.Параметры.КоличествоКонец = ТекСтрока.КоличествоНаНачало + ТекСтрока.КоличествоПриход - ТекСтрока.КоличествоРасход;
		ОбластьДанныеСтолбцы.Параметры.СуммаКонец = ОбластьДанныеСтолбцы.Параметры.СуммаНачало + ОбластьДанныеСтолбцы.Параметры.СуммаПришло - ОбластьДанныеСтолбцы.Параметры.СуммаУшло;
		ОбластьДанныеСтолбцы.Параметры.ЦенаКонец = ?(ОбластьДанныеСтолбцы.Параметры.КоличествоКонец, ОбластьДанныеСтолбцы.Параметры.СуммаКонец / ОбластьДанныеСтолбцы.Параметры.КоличествоКонец, 0);
		ОбластьДанныеСтолбцы.Параметры.ОстатокКонец = ТекСтрока.КЗ  + ОбластьДанныеСтолбцы.Параметры.СуммаПришло - ТекСтрока.Оплата - ТекСтрока.ОплатаПрочее;
		ОбластьДанныеСтолбцы.Параметры.ОбъемПроизводства = ОбъемПроизводства * ТекСтрока.ДоляСырья / 100;
		ОбластьДанныеСтолбцы.Параметры.Выход = Выход;
		ОбластьДанныеСтолбцы.Параметры.ПроцентОтбора = Отбор;
		ТабДок.Присоединить(ОбластьДанныеСтолбцы);	
	КонецЦикла; 
	
	Если Не ТипБюджета = Неопределено Тогда
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьИнвестиции(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	
	
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетИнвестиции");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|Начало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|Столбец");
	ОбластьДанные = Макет.ПолучитьОбласть("Строка0|Начало");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка0|Столбец");
	
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка1|Начало");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка1|Столбец");
	
	
	//ТабДок.Очистить();
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	
	Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	КлючДни = Окр((ИсходныеДанные.ДатаОкончания - ИсходныеДанные.ДатаНачала) / (24 * 60 * 60), 0);
	Если КлючПериод = "Месяц" Тогда
		КлючДни = Мин(КлючДни, 30);
	ИначеЕсли КлючПериод = "Квартал" Тогда
		КлючДни = Мин(КлючДни, 90);
	Иначе
		КлючДни = Мин(КлючДни, 360);
	КонецЕсли;
	
	НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
	
	КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	ТабДок.Вывести(ОбластьШапка);
	
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
	
	Для каждого ТекСтрока Из ТекПериоды Цикл
		ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
		ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
	КонецЦикла;
	
	ТЗ = ДокументОбъект.Инвестиции.Выгрузить();
	ТЗ.Свернуть("ИнвестиционныйПроект, Основание");
	
	Для каждого ТекСтрока Из ТЗ Цикл
		ОбластьДанные.Параметры.Заполнить(ТекСтрока);
		
		Если НЕ ТекСтрока.ИнвестиционныйПроект.Пустая() Тогда
			ОбластьДанные.Параметры.КодПроекта = ТекСтрока.ИнвестиционныйПроект.КодПроекта;
			ОбластьДанные.Параметры.ПризнакПлана = ТекСтрока.ИнвестиционныйПроект.ПризнакПлана;
			ОбластьДанные.Параметры.НеобходимостьПроведения = ТекСтрока.ИнвестиционныйПроект.НеобходимостьПроведения;
			ОбластьДанные.Параметры.ЭкономическийЭффект = ТекСтрока.ИнвестиционныйПроект.ЭкономическийЭффект;
			ОбластьДанные.Параметры.Основание = ТекСтрока.Основание;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьДанные);
		
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.Инвестиции.НайтиСтроки(Новый Структура("ИнвестиционныйПроект, Месяц, Основание", ТекСтрока.ИнвестиционныйПроект, ТекМесяц, ТекСтрока.Основание));
			СуммаФР = 0; СуммаБДДС = 0;
			
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				СуммаФР = СуммаФР + ТекДанные.СуммаФР;
				СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС;
			КонецЦикла;
			
			ОбластьДанныеСтолбцы.Параметры.СуммаФР = СуммаФР;
			ОбластьДанныеСтолбцы.Параметры.СуммаБДДС = СуммаБДДС;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьДанныеИтого);
	
	Для каждого ТекМесяц Из ТекПериоды Цикл
		ОтобранныеСтроки = ДокументОбъект.Инвестиции.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
		СуммаФР = 0; СуммаБДДС = 0;
		
		Для каждого ТекДанные Из ОтобранныеСтроки Цикл
			СуммаФР = СуммаФР + ТекДанные.СуммаФР;
			СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС;
		КонецЦикла;
		
		ОбластьДанныеИтогоСтолбцы.Параметры.СуммаФР = СуммаФР;
		ОбластьДанныеИтогоСтолбцы.Параметры.СуммаБДДС = СуммаБДДС;
		ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);		
	КонецЦикла; 
	
	Если НЕ ТипБюджета = Неопределено Тогда	
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)	
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчитатьПродажи(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетПродажиУтверждаемые");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка1");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьМесяц = Макет.ПолучитьОбласть("Месяц");
	
	ОбластьШапкаПроч = Макет.ПолучитьОбласть("ШапкаПроч|Начало4");
	ОбластьШапкаСтолбцыПроч = Макет.ПолучитьОбласть("ШапкаПроч|Столбец4");
	
	ОбластьДанные20 = Макет.ПолучитьОбласть("Строка20|Начало4");
	ОбластьДанныеСтолбцы20 = Макет.ПолучитьОбласть("Строка20|Столбец4");
	ОбластьДанные18 = Макет.ПолучитьОбласть("Строка18|Начало4");
	ОбластьДанныеСтолбцы18 = Макет.ПолучитьОбласть("Строка18|Столбец4");
	ОбластьДанные19 = Макет.ПолучитьОбласть("Строка19|Начало4");
	ОбластьДанныеСтолбцы19 = Макет.ПолучитьОбласть("Строка19|Столбец4");
	
	ОбластьДанныеИтого91 = Макет.ПолучитьОбласть("Строка17|Начало4");
	ОбластьДанныеИтогоСтолбцы91 = Макет.ПолучитьОбласть("Строка17|Столбец4");
	
	//ТабДок.Очистить();
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьШапка.Параметры.Период2 = ПредставлениеПериода(НачДата, КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ОбластьШапка.Параметры.СценарийПлана = ДокументОбъект.Сценарий;
	ОбластьШапка.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(ОбластьШапка);
	
	СуммаИтого = 0;
	
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ДокументОбъект.Сценарий.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ДокументОбъект.Сценарий.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
	
	Для каждого ТекМесяц Из ТекПериоды Цикл
		ТЗ = ДокументОбъект.БюджетПродаж.Выгрузить();
		ТЗ.Колонки.Добавить("НомерНоменклатуры");
		ТЗ.Колонки.Добавить("ЦенаСумма");
		ТЗ.Колонки.Добавить("ВерхСумма");
		ТЗ.Колонки.Добавить("ДисконтСумма");
		ТЗ.Колонки.Добавить("КомпенсацияНалоговСумма");
		ТЗ.Колонки.Добавить("ЖДАвтоСумма");
		ТЗ.Колонки.Добавить("ВозмещениеТрСумма");
		ТЗ.Колонки.Добавить("СопровождениеСумма");
		ТЗ.Колонки.Добавить("ЦенаЗакупкиСумма");
		ТЗ.Колонки.Добавить("КЗОплата");
		ТЗ.Колонки.Добавить("ЧистаяЦена");
		ТЗ.Колонки.Добавить("ЧистаяЦенаСумма");
		//ТЗ.Колонки.Добавить("ДЗКонец");
		ТЗ.Колонки.Добавить("Лимит");
		ТЗ.Колонки.Добавить("Отклонение");
				
		Если ТекПериоды.Количество() > 1 Тогда
			ОбластьМесяц.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекМесяц), КонецМесяца(ТекМесяц));
			ТабДок.Вывести(ОбластьМесяц);
		КонецЕсли;
		
		ОтобранныеСтроки = ДокументОбъект.БюджетПродаж.НайтиСтроки(Новый Структура("Месяц", ТеКмесяц));
		Для каждого Выборка2 Из ОтобранныеСтроки Цикл
			ТекСтрочка = ДокументОбъект.БюджетПродаж.Индекс(Выборка2);
			ОбластьСтрока.Параметры.Заполнить(Выборка2);
			
			Транспорт =  0;
			Цена = Выборка2.Цена + Выборка2.Верх;
			
			Если НЕ НРег(Выборка2.ВозмещениеТр) = "самовывоз"  И НЕ НРег(Выборка2.ВозмещениеТр) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + Выборка2.ЖД;
			КонецЕсли;
			Если НЕ НРег(Выборка2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(Выборка2.ВозмещениеТр2) = "сверх цены"   И НЕ НРег(Выборка2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + Выборка2.Авто;
			КонецЕсли;
			Если НЕ НРег(Выборка2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + Выборка2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт + Выборка2.Дисконт;
						
			ОбластьСтрока.Параметры.ЦенаГрязная = Цена;
			ОбластьСтрока.Параметры.ЧистаяЦена = Выборка2.Цена;
			ДЗКонец = ?(Выборка2.ГаситьДЗ, 0, Выборка2.ДЗНачало + Выборка2.Количество * ОбластьСтрока.Параметры.ЦенаГрязная - Выборка2.ПоступлениеДС);
			ОбластьСтрока.Параметры.ДЗКонец = ДЗКонец;
			
			Отсрочка = ПолучитьОтсрочку(Выборка2.Номенклатура, ДокументОбъект.Дата, ДокументОбъект.Сценарий, ДокументОбъект.Предприятие);
			Если ТипЗнч(Отсрочка) = Тип("Число") Тогда
				Лимит = Цена * Выборка2.Количество * Отсрочка / 30;;
				Отклонение = ?(ТипЗнч(Лимит) = Тип("Число"), Лимит, 0) - ДЗКонец;
			Иначе
				Лимит = Отсрочка;
				Отклонение = - ДЗКонец;
			КонецЕсли;
			
			//ОбластьСтрока.Параметры.Лимит = Лимит;
			//ОбластьСтрока.Параметры.Отклонение = Отклонение;
			
			КЗОплата = ?(Цена И Выборка2.ПоступлениеДС + Выборка2.КЗНачало, (?(Выборка2.ПоступлениеДС > Транспорт * Выборка2.Количество, Выборка2.ПоступлениеДС - Транспорт * Выборка2.Количество, 0))
			* Выборка2.Верх / Цена, 0) + Выборка2.КЗНачало;
			ОбластьСтрока.Параметры.КЗОплата = КЗОплата;
			
			ТабДок.Вывести(ОбластьСтрока);
			СуммаИтого = СуммаИтого + Выборка2.ПоступлениеДС;
			ТЗ[ТекСтрочка].НомерНоменклатуры = Выборка2.Номенклатура.Д_НомерНоменклатуры;
			
			
			ТЗ[ТекСтрочка].ЦенаСумма = Выборка2.Количество * Цена;
			ТЗ[ТекСтрочка].ДисконтСумма = Выборка2.Дисконт * Выборка2.Количество;
			ТЗ[ТекСтрочка].ВыплатаДисконта = Выборка2.ВыплатаДисконта;
			ТЗ[ТекСтрочка].КомпенсацияНалоговСумма = Выборка2.Количество * Выборка2.КомпенсацияНалогов;
			ТЗ[ТекСтрочка].ВерхСумма = Выборка2.Количество * Выборка2.Верх;
			ТЗ[ТекСтрочка].ЖДАвтоСумма = Выборка2.Количество * (Выборка2.ЖД + Выборка2.Авто);
			ТЗ[ТекСтрочка].ВозмещениеТрСумма = Выборка2.Количество * Транспорт;
			ТЗ[ТекСтрочка].СопровождениеСумма = Выборка2.Количество * Выборка2.Сопровождение;
			ТЗ[ТекСтрочка].ЦенаЗакупкиСумма = Выборка2.Количество * Выборка2.ЦенаЗакупки;
			ТЗ[ТекСтрочка].ЧистаяЦена = Выборка2.Цена;
			ТЗ[ТекСтрочка].ДЗКонец = ДЗКонец;
			ТЗ[ТекСтрочка].Лимит = ?(ТипЗнч(Лимит) = Тип("Число"), Лимит, 0);
			ТЗ[ТекСтрочка].Отклонение = Отклонение;
			ТЗ[ТекСтрочка].КЗОплата = КЗОплата;
			ТЗ[ТекСтрочка].ЧистаяЦенаСумма = Выборка2.Цена * Выборка2.Количество;
						
		КонецЦикла;
		
		
		
		ТЗ.Свернуть("НомерНоменклатуры, Месяц", "СопровождениеСумма, ДЗКонец, ДЗНачало, КЗНачало, КЗОплата, Количество, ПоступлениеДС, ЦенаСумма, ВерхСумма, ДисконтСумма, КомпенсацияНалоговСумма, ВыплатаДисконта, ЖДАвтоСумма, ВозмещениеТрСумма, ЦенаЗакупкиСумма, ЧистаяЦенаСумма"); 
		ТЗ.Сортировать("НомерНоменклатуры",);
		
		ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("Месяц", ТеКмесяц));
		
		Для каждого Выборка2 Из ОтобранныеСтроки Цикл
			ОбластьИтого.Параметры.Заполнить(Выборка2);			
			ОбластьИтого.Параметры.ЦенаСумма = ?(Выборка2.Количество, Выборка2.ЦенаСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ЦенаЗакупкиСумма = ?(Выборка2.Количество, Выборка2.ЦенаЗакупкиСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ВерхСумма = ?(Выборка2.Количество, Выборка2.ВерхСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ДисконтСумма = ?(Выборка2.Количество, Выборка2.ДисконтСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.КомпенсацияНалоговСумма = ?(Выборка2.Количество, Выборка2.КомпенсацияНалоговСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ЖДАвтоСумма = ?(Выборка2.Количество, Выборка2.ЖДАвтоСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ВозмещениеТрСумма = ?(Выборка2.Количество, Выборка2.ВозмещениеТрСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.СопровождениеСумма = ?(Выборка2.Количество, Выборка2.СопровождениеСумма / Выборка2.Количество, 0);
			ОбластьИтого.Параметры.ЧистаяЦена = ?(Выборка2.Количество, Выборка2.ЧистаяЦенаСумма / Выборка2.Количество, 0);
			ТабДок.Вывести(ОбластьИтого);		
		КонецЦикла;
	КонецЦикла;
	
	
	// вывод комм расходов Прочие90
			
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);

	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПроч|Начало4");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("ШапкаПроч|Столбец4");
	ОбластьДанные18 = Макет.ПолучитьОбласть("Строка18|Начало4");
	ОбластьДанныеСтолбцы18 = Макет.ПолучитьОбласть("Строка18|Столбец4");
	ОбластьДанные19 = Макет.ПолучитьОбласть("Строка19|Начало4");
	ОбластьДанныеСтолбцы19 = Макет.ПолучитьОбласть("Строка19|Столбец4");
	ОбластьДанные20 = Макет.ПолучитьОбласть("Строка20|Начало4");
	ОбластьДанныеСтолбцы20 = Макет.ПолучитьОбласть("Строка20|Столбец4");
	
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка17|Начало4");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка17|Столбец4");
	
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ТабДок.Вывести(ОбластьШапка);
	
	Для каждого ТекСтрока Из ТекПериоды Цикл
		ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
		ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
	КонецЦикла;
	
	ТЗ = ДокументОбъект.Прочие90.Выгрузить();
	
	ТЗ_ОбщИтог = ТЗ.Скопировать();
	ТЗ_ОбщИтог.Свернуть("Месяц", "СуммаФР, СуммаБДДС");
		
	ТЗ_Основания = ТЗ.Скопировать();
	ТЗ_Основания.Свернуть("Статья, СтатьяБДДС, Основание");
	
	ТЗ_Основания_Суммы = ТЗ.Скопировать();
	ТЗ_Основания_Суммы.Свернуть("Месяц, Статья, СтатьяБДДС, Основание", "СуммаФР, СуммаБДДС");
	ТЗ_Основания_Суммы.Сортировать("Месяц Возр");
	
	ТЗ_Статьи = ТЗ.Скопировать();
	ТЗ_Статьи.Свернуть("Статья, СтатьяБДДС");
	
	ТЗ_Статьи_Суммы = ТЗ.Скопировать();
	ТЗ_Статьи_Суммы.Свернуть("Месяц, Статья, СтатьяБДДС", "СуммаФР, СуммаБДДС");
	ТЗ_Статьи_Суммы.Сортировать("Месяц Возр");
	
	Для Каждого ТекСтрокаСтатья Из ТЗ_Статьи Цикл
		
		Ур = ТекСтрокаСтатья.Статья.ЭтоГруппа + ТекСтрокаСтатья.Статья.Родитель.Пустая();
		Если Ур Тогда
			ТекОбл1 = ОбластьДанные20;
			ТекОбл2 = ОбластьДанныеСтолбцы20;
			Ур2 = 1;
		Иначе
			ТекОбл1 = ОбластьДанные18;
			ТекОбл2 = ОбластьДанныеСтолбцы18;
			Ур2 = 0;
		КонецЕсли;
				
		ТекОбл1.Параметры.Заполнить(ТекСтрокаСтатья);
		ТабДок.Вывести(ТекОбл1, 1 - Ур2,,Ложь);
		
		СтрокиСуммПоСтатье = ТЗ_Статьи_Суммы.НайтиСтроки(Новый Структура("Статья, СтатьяБДДС", ТекСтрокаСтатья.Статья, ТекСтрокаСтатья.СтатьяБДДС));
		
		Для Каждого ТекПериод Из ТекПериоды Цикл
			
			ЕстьСтрокаСТекПериодом = Ложь;
			
			Для Каждого ТекСтрокаСуммаПоСтатье Из СтрокиСуммПоСтатье Цикл
				
				Если ТекСтрокаСуммаПоСтатье.Месяц <> ТекПериод Тогда
					Продолжить;
				КонецЕсли;
				
				ТекОбл2.Параметры.Заполнить(ТекСтрокаСуммаПоСтатье);
				ТабДок.Присоединить(ТекОбл2, 1- Ур2,,Ложь);
				ЕстьСтрокаСТекПериодом = Истина;
				
			КонецЦикла;
			
			Если Не ЕстьСтрокаСТекПериодом Тогда
				ТекОбл2.Параметры.СуммаФР = 0;
				ТекОбл2.Параметры.СуммаБДДС = 0;
				ТабДок.Присоединить(ТекОбл2, 1- Ур2,,Ложь);
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокиОснований = ТЗ_Основания.НайтиСтроки(Новый Структура("Статья, СтатьяБДДС", ТекСтрокаСтатья.Статья, ТекСтрокаСтатья.СтатьяБДДС));
		
		Для Каждого ТекСтрокаОснование Из СтрокиОснований Цикл
			
			ОбластьДанные19.Параметры.Заполнить(ТекСтрокаОснование);
			ТабДок.Вывести(ОбластьДанные19,2-Ур2,,Ложь);
			
			СтрокиОснованияСуммы = ТЗ_Основания_Суммы.НайтиСтроки(Новый Структура("Статья, СтатьяБДДС, Основание", ТекСтрокаСтатья.Статья, ТекСтрокаСтатья.СтатьяБДДС, ТекСтрокаОснование.Основание));
			
			Для Каждого ТекПериод Из ТекПериоды Цикл
				
				ЕстьСтрокаСТекПериодом = Ложь;
				
				Для Каждого ТекСтрокаОснованияСуммы Из СтрокиОснованияСуммы Цикл
					
					Если ТекСтрокаОснованияСуммы.Месяц <> ТекПериод Тогда
						Продолжить;
					КонецЕсли;
					
					ОбластьДанныеСтолбцы19.Параметры.Заполнить(ТекСтрокаОснованияСуммы);
					ТабДок.Присоединить(ОбластьДанныеСтолбцы19,2-Ур2,,Ложь);
					ЕстьСтрокаСТекПериодом = Истина;
					
				КонецЦикла;
				
				Если Не ЕстьСтрокаСТекПериодом Тогда
					ОбластьДанныеСтолбцы19.Параметры.СуммаФР = 0;
					ОбластьДанныеСтолбцы19.Параметры.СуммаБДДС = 0;
					ТабДок.Присоединить(ОбластьДанныеСтолбцы19,2-Ур2,,Ложь);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьДанныеИтого,1,,Истина);
	
	Для Каждого Стр Из ТЗ_ОбщИтог Цикл
		ОбластьДанныеИтогоСтолбцы.Параметры.СуммаФР = Стр.СуммаФР;
		ОбластьДанныеИтогоСтолбцы.Параметры.СуммаБДДС = Стр.СуммаБДДС;
		ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы,1,,Истина);	
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	// конец вывода комм расходов Прочие90
	
	Если НЕ ТипБюджета = Неопределено Тогда
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОтсрочку(Номенклатура, Дата, СценарийПлана, Предприятие)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_ПараметрыНоменклатурыСрезПоследних.Д_ОтсрочкаОплаты
	|ИЗ
	|	РегистрСведений.Д_ПараметрыНоменклатуры.СрезПоследних(
	|			&Дата,
	|			СценарийПлана = &Сценарий
	|				И Номенклатура = &Номенклатура И Предприятие = &Предприятие) КАК Д_ПараметрыНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сценарий", СценарийПлана);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если НЕ Выборка.Количество() Тогда
		Возврат "Отсрочка не установлена";
	Иначе
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Д_ОтсрочкаОплаты;	
		КонецЦикла;
	КонецЕсли;
	
	
	
КонецФункции // ()


Процедура ПечатьКорректировки(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка8");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалСебестоимость = Макет.ПолучитьОбласть("ПодвалСебестоимость");
	ОбластьПодвалБДДС = Макет.ПолучитьОбласть("ПодвалБДДС");
	ОбластьОбъемы = Макет.ПолучитьОбласть("ОбъемСтрока");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Признак");
	ТЗ.Колонки.Добавить("БДДС");
	ТЗ.Колонки.Добавить("СтатьяЗатрат");
	ТЗ.Колонки.Добавить("ЛимитНаНачало");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоДДС");
	ТЗ.Колонки.Добавить("СуммаСеб");
	ТЗ.Колонки.Добавить("СуммаБДДС");
	ТЗ.Колонки.Добавить("СуммаКП");
	ТЗ.Колонки.Добавить("СуммаКПДДС");
	ТЗ.Колонки.Добавить("Основание");
	ТЗ.Колонки.Добавить("ЦФО");
	ТЗ.Колонки.Добавить("ИнвПроект");
	
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	ОбластьЗаголовок.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьЗаголовок.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ОбластьЗаголовок.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	//выводим итоговую информацию по производству
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_БюджетОбъемПроизводства.Ссылка,
	|	Д_БюджетОбъемПроизводства.НомерСтроки,
	|	Д_БюджетОбъемПроизводства.Номенклатура,
	|	Д_БюджетОбъемПроизводства.НоменклатураЦВ,
	|	Д_БюджетОбъемПроизводства.Объем + Д_БюджетОбъемПроизводства.ОбъемЦВ КАК ОбъемПП,
	|	Д_БюджетОбъемПроизводства.Основание,
	|	Д_БюджетОбъемПроизводства.ПроцентЗатрат,
	|	Д_БюджетОбъемПроизводства.НЕРаспределять,
	|	Д_БюджетОбъемПроизводства.Месяц
	|ИЗ
	|	Документ.Д_Бюджет.ОбъемПроизводства КАК Д_БюджетОбъемПроизводства
	|ГДЕ
	|	Д_БюджетОбъемПроизводства.Ссылка.Сценарий = &Сценарий
	|	И Д_БюджетОбъемПроизводства.Ссылка.Предприятие = &Предприятие
	|	И Д_БюджетОбъемПроизводства.Ссылка.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Сценарий", ДокументОбъект.СценарийПП);
	Запрос.УстановитьПараметр("Предприятие", ДокументОбъект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	Выборка.Колонки.Добавить("ОбъемКП");
	
	
	Для каждого ТекСтрока Из ДокументОбъект.ОбъемПроизводства Цикл
		НоваяСтрока = Выборка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.ОбъемКП = ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;
	КонецЦикла; 
	
	Выборка.Свернуть("Месяц, Номенклатура", "ОбъемПП, ОбъемКП");
	
	//ОбластьПодвал.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	//ОбластьПодвал.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	//ОбластьПодвал.Параметры.Предприятие = ДокументОбъект.Предприятие;
	//
	//ТабДок.Вывести(ОбластьПодвал);
	
	ОтобранныеСтроки = Выборка.НайтиСтроки(Новый Структура("Месяц", НачалоМесяца(НачДата)));
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ОбластьОбъемы.Параметры.Заполнить(ТекСтрока);
		ОбластьОбъемы.Параметры.Отклонение = ТекСтрока.ОбъемКП - ТекСтрока.ОбъемПП;
		ТабДок.Вывести(ОбластьОбъемы);	
	КонецЦикла; 
	
	//выводим корректировки
	ОбластьШапка.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьШапка.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ТабДок.Вывести(ОбластьШапка);
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	ТЧ = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
		
	Для каждого ТекСтрока  Из ТЧ Цикл
		
		Если Не ТекСтрока.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда
			Продолжить;
		КонецЕсли;
		
		Если РасчетыБюджет.СтатьяИнв(ТекСтрока.СтатьяБДДС) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		
		Если НЕ ТекСтрока.СуммаСеб Тогда
			НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяБДДС;		
		КонецЕсли;
		
		НоваяСтрока.СуммаКП = ТекСтрока.ЛимитНаНачало + ТекСтрока.СуммаСеб;
		НоваяСтрока.СуммаКПДДС = ТекСтрока.ЛимитНаНачалоДДС + ТекСтрока.СуммаБДДС;
	КонецЦикла; 
	
	ТЗСвернутая = ТЗ.Скопировать();
	ТЗСвернутая.Свернуть("СтатьяЗатрат", "ЛимитНаНачало, ЛимитНаНачалоДДС, СуммаСеб, СуммаБДДС, СуммаКП, СуммаКПДДС");
	
	Для каждого Выборка2 Из ТЗСвернутая Цикл
		
		НомерСтрочки = 4;
		
		Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
			НомерСтрочки = 1;				
		КонецЕсли;
		
		Если Выборка2.ЛимитНаНачало = Выборка2.ЛимитНаНачалоДДС Тогда
			НомерСтрочки = 0;
			Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
				НомерСтрочки = 2;
			КонецЕсли;
		КонецЕсли;
		
		ИтогоСебестоимость1 = ИтогоСебестоимость1 + Выборка2.ЛимитНаНачало;
		ИтогоБДДС1 = ИтогоБДДС1 + Выборка2.ЛимитНаНачалоДДС;
		
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + "К");
		ОбластьДанные.Параметры.Заполнить(Выборка2);
		ТабДок.НачатьАвтогруппировкуСтрок();
		//ТабДок.Вывести(ОбластьДанные,0);   // обращение №3025 от УСВ
		
		СтрокиТЗ = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат", Выборка2.СтатьяЗатрат));
		
		Для Каждого СтрокаТЗ Из СтрокиТЗ Цикл
			НомерСтрочки = 4;
			
			Если  СтрокаТЗ.СуммаСеб = СтрокаТЗ.СуммаБДДС Тогда
				НомерСтрочки = 1;				
			КонецЕсли;
			
			Если СтрокаТЗ.ЛимитНаНачало = СтрокаТЗ.ЛимитНаНачалоДДС Тогда
				НомерСтрочки = 0;
				Если СтрокаТЗ.СуммаСеб = СтрокаТЗ.СуммаБДДС Тогда
					НомерСтрочки = 2;
				КонецЕсли;
			КонецЕсли;
			
			ИтогоСебестоимость1 = ИтогоСебестоимость1 + СтрокаТЗ.ЛимитНаНачало;
			ИтогоБДДС1 = ИтогоБДДС1 + СтрокаТЗ.ЛимитНаНачалоДДС;
			
			ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки + "К");
			ОбластьДанные.Параметры.Заполнить(СтрокаТЗ);			
			ОбластьДанные.Параметры.Основание = СтрокаТЗ.Основание + ?(СтрокаТЗ.ЦФО.Пустая(), "", " (" + Строка(СтрокаТЗ.ЦФО) + ")");
			ТабДок.Вывести(ОбластьДанные,1);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ИтогоСебестоимостьОткл = ИтогоСебестоимостьОткл + Выборка2.СуммаСеб;
		ИтогоБДДСОткл = ИтогоБДДСОткл + Выборка2.СуммаБДДС;
	КонецЦикла;
	
	//выводим итоговую информацию по затратам
	
	//ОбластьПодвал.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	//ОбластьПодвал.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	//ОбластьПодвал.Параметры.Предприятие = ДокументОбъект.Предприятие;
	//
	//ТабДок.Вывести(ОбластьПодвал);
	
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтогоОткл = ИтогоСебестоимостьОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтогоОткл = ИтогоБДДСОткл;
	ТабДок.Вывести(ОбластьПодвалСебестоимость);
	ТабДок.Вывести(ОбластьПодвалБДДС);
	
КонецПроцедуры

Процедура ПечатьВалютныеКорректировки(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетКорректировкиВалюта");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвалСебестоимость = Макет.ПолучитьОбласть("ПодвалСебестоимость");
	ОбластьПодвалБДДС = Макет.ПолучитьОбласть("ПодвалБДДС");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Признак");
	ТЗ.Колонки.Добавить("БДДС");
	ТЗ.Колонки.Добавить("СтатьяЗатрат");
	ТЗ.Колонки.Добавить("ЛимитНаНачало");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоРуб");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоДДС");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоДДСРуб");
	ТЗ.Колонки.Добавить("СуммаСеб");
	ТЗ.Колонки.Добавить("СуммаСебРуб");
	ТЗ.Колонки.Добавить("СуммаБДДС");
	ТЗ.Колонки.Добавить("СуммаБДДСРуб");
	ТЗ.Колонки.Добавить("СуммаКП");
	ТЗ.Колонки.Добавить("СуммаКПРуб");
	ТЗ.Колонки.Добавить("СуммаКПДДС");
	ТЗ.Колонки.Добавить("СуммаКПДДСРуб");
	ТЗ.Колонки.Добавить("Основание");
	ТЗ.Колонки.Добавить("ЦФО");
	ТЗ.Колонки.Добавить("ИнвПроект");
	
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость1Руб = 0; ИтогоБДДС1Руб = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимость2Руб = 0; ИтогоБДДС2Руб = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	ИтогоСебестоимостьОтклРуб = 0; ИтогоБДДСОтклРуб = 0;
	
	ОбластьЗаголовок.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьЗаголовок.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ОбластьЗаголовок.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	////выводим итоговую информацию по производству
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Д_БюджетОбъемПроизводства.Ссылка,
	//|	Д_БюджетОбъемПроизводства.НомерСтроки,
	//|	Д_БюджетОбъемПроизводства.Номенклатура,
	//|	Д_БюджетОбъемПроизводства.НоменклатураЦВ,
	//|	Д_БюджетОбъемПроизводства.Объем + Д_БюджетОбъемПроизводства.ОбъемЦВ КАК ОбъемПП,
	//|	Д_БюджетОбъемПроизводства.Основание,
	//|	Д_БюджетОбъемПроизводства.ПроцентЗатрат,
	//|	Д_БюджетОбъемПроизводства.НЕРаспределять,
	//|	Д_БюджетОбъемПроизводства.Месяц
	//|ИЗ
	//|	Документ.Д_Бюджет.ОбъемПроизводства КАК Д_БюджетОбъемПроизводства
	//|ГДЕ
	//|	Д_БюджетОбъемПроизводства.Ссылка.Сценарий = &Сценарий
	//|	И Д_БюджетОбъемПроизводства.Ссылка.Предприятие = &Предприятие
	//|	И Д_БюджетОбъемПроизводства.Ссылка.ПометкаУдаления = ЛОЖЬ";
	//
	//Запрос.УстановитьПараметр("Сценарий", ДокументОбъект.СценарийПП);
	//Запрос.УстановитьПараметр("Предприятие", ДокументОбъект.Предприятие);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выгрузить();
	//Выборка.Колонки.Добавить("ОбъемКП");
	//
	//
	//Для каждого ТекСтрока Из ДокументОбъект.ОбъемПроизводства Цикл
	//	НоваяСтрока = Выборка.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	//	НоваяСтрока.ОбъемКП = ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;
	//КонецЦикла; 
	//
	//Выборка.Свернуть("Месяц, Номенклатура", "ОбъемПП, ОбъемКП");
		
	//выводим корректировки
	ОбластьШапка.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьШапка.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ОбластьШапка.Параметры.ВалютаДока = ДокументОбъект.Валюта;
	ТабДок.Вывести(ОбластьШапка);
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость1Руб = 0; ИтогоБДДС1Руб = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимость2Руб = 0; ИтогоБДДС2Руб = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	ИтогоСебестоимостьОтклРуб = 0; ИтогоБДДСОтклРуб = 0;
	
	ТЧ = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
	
	
	ПлановыйКурсСтруктура = РасчетыБюджет.ПолучитьПлановыйКурс(ДокументОбъект.Сценарий, ДокументОбъект.Валюта, УЧ_Сервер.НациональнаяВалюта());
	ПлановыйКурс = ПлановыйКурсСтруктура.Курс;
	
	Для каждого ТекСтрока  Из ТЧ Цикл
		//Если Не ТекСтрока.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда
		//	Продолжить;
		//КонецЕсли;
		//Если СтатьиИнв.Найти(ТекСтрока.СтатьяБДДС) <> Неопределено Тогда
		//	Продолжить;
		//КонецЕсли;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		Если НЕ ТекСтрока.СуммаСеб Тогда
			НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяБДДС;		
		КонецЕсли;
		НоваяСтрока.ЛимитНаНачалоРуб = ТекСтрока.ЛимитНаНачало * ПлановыйКурс;
		НоваяСтрока.ЛимитНаНачалоДДСРуб = ТекСтрока.ЛимитНаНачалоДДС * ПлановыйКурс;
		НоваяСтрока.СуммаСебРуб = ТекСтрока.СуммаСеб * ПлановыйКурс;
		НоваяСтрока.СуммаБДДСРуб = ТекСтрока.СуммаБДДС * ПлановыйКурс;
		НоваяСтрока.СуммаКП = ТекСтрока.ЛимитНаНачало + ТекСтрока.СуммаСеб;
		НоваяСтрока.СуммаКПРуб = НоваяСтрока.ЛимитНаНачалоРуб + НоваяСтрока.СуммаСебРуб;
		НоваяСтрока.СуммаКПДДС = ТекСтрока.ЛимитНаНачалоДДС + ТекСтрока.СуммаБДДС;
		НоваяСтрока.СуммаКПДДСРуб = НоваяСтрока.ЛимитНаНачалоДДСРуб + НоваяСтрока.СуммаБДДСРуб;
	КонецЦикла; 
	
	ТЗСвернутая = ТЗ.Скопировать();
	ТЗСвернутая.Свернуть("СтатьяЗатрат", "ЛимитНаНачало, ЛимитНаНачалоРуб, ЛимитНаНачалоДДС, ЛимитНаНачалоДДСРуб, СуммаСеб, СуммаСебРуб, СуммаБДДС, СуммаБДДСРуб, СуммаКП, СуммаКПРуб, СуммаКПДДС, СуммаКПДДСРуб");
	
	Для каждого Выборка2 Из ТЗСвернутая Цикл
		
		НомерСтрочки = 4;
		
		Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
			НомерСтрочки = 1;				
		КонецЕсли;
		
		Если Выборка2.ЛимитНаНачало = Выборка2.ЛимитНаНачалоДДС Тогда
			НомерСтрочки = 0;
			Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
				НомерСтрочки = 2;
			КонецЕсли;
		КонецЕсли;
		
		ИтогоСебестоимость1 = ИтогоСебестоимость1 + Выборка2.ЛимитНаНачало;
		ИтогоСебестоимость1Руб = ИтогоСебестоимость1Руб + Выборка2.ЛимитНаНачалоРуб;
		ИтогоБДДС1 = ИтогоБДДС1 + Выборка2.ЛимитНаНачалоДДС;
		ИтогоБДДС1Руб = ИтогоБДДС1Руб + Выборка2.ЛимитНаНачалоДДСРуб;
		
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки);
		ОбластьДанные.Параметры.Заполнить(Выборка2);
		ТабДок.НачатьАвтогруппировкуСтрок();
		//ТабДок.Вывести(ОбластьДанные,0);   // обращение №3025 от УСВ
		
		СтрокиТЗ = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат", Выборка2.СтатьяЗатрат));
		
		Для Каждого СтрокаТЗ Из СтрокиТЗ Цикл
			НомерСтрочки = 4;
			
			Если  СтрокаТЗ.СуммаСеб = СтрокаТЗ.СуммаБДДС Тогда
				НомерСтрочки = 1;				
			КонецЕсли;
			
			Если СтрокаТЗ.ЛимитНаНачало = СтрокаТЗ.ЛимитНаНачалоДДС Тогда
				НомерСтрочки = 0;
				Если СтрокаТЗ.СуммаСеб = СтрокаТЗ.СуммаБДДС Тогда
					НомерСтрочки = 2;
				КонецЕсли;
			КонецЕсли;
			
			ИтогоСебестоимость1 = ИтогоСебестоимость1 + СтрокаТЗ.ЛимитНаНачало;
			ИтогоСебестоимость1Руб = ИтогоСебестоимость1Руб + СтрокаТЗ.ЛимитНаНачалоРуб;
			ИтогоБДДС1 = ИтогоБДДС1 + СтрокаТЗ.ЛимитНаНачалоДДС;
			ИтогоБДДС1Руб = ИтогоБДДС1Руб + СтрокаТЗ.ЛимитНаНачалоДДСРуб;
			
			ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрочки);
			ОбластьДанные.Параметры.Заполнить(СтрокаТЗ);			
			ОбластьДанные.Параметры.Основание = СтрокаТЗ.Основание + ?(СтрокаТЗ.ЦФО.Пустая(), "", " (" + Строка(СтрокаТЗ.ЦФО) + ")");
			ТабДок.Вывести(ОбластьДанные,1);
		КонецЦикла;
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ИтогоСебестоимостьОткл = ИтогоСебестоимостьОткл + Выборка2.СуммаСеб;
		ИтогоСебестоимостьОтклРуб = ИтогоСебестоимостьОтклРуб + Выборка2.СуммаСебРуб;
		ИтогоБДДСОткл = ИтогоБДДСОткл + Выборка2.СуммаБДДС;
		ИтогоБДДСОтклРуб = ИтогоБДДСОтклРуб + Выборка2.СуммаБДДСРуб;
	КонецЦикла;
	
	//выводим итоговую информацию по затратам
	
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтогоОткл = ИтогоСебестоимостьОткл;
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтогоОтклРуб = ИтогоСебестоимостьОтклРуб;
	ОбластьПодвалБДДС.Параметры.БДДСИтогоОткл = ИтогоБДДСОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтогоОтклРуб = ИтогоБДДСОтклРуб;
	ТабДок.Вывести(ОбластьПодвалСебестоимость);
	ТабДок.Вывести(ОбластьПодвалБДДС);
	
КонецПроцедуры

Процедура ПечатьКорректировкиИнвестиций(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетКорректировкиИнвестиций");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалСебестоимость = Макет.ПолучитьОбласть("ПодвалСебестоимость");
	ОбластьПодвалБДДС = Макет.ПолучитьОбласть("ПодвалБДДС");
	ОбластьОбъемы = Макет.ПолучитьОбласть("ОбъемСтрока");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Признак");
	ТЗ.Колонки.Добавить("БДДС");
	ТЗ.Колонки.Добавить("СтатьяЗатрат");
	ТЗ.Колонки.Добавить("ЛимитНаНачало");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоДДС");
	ТЗ.Колонки.Добавить("СуммаСеб");
	ТЗ.Колонки.Добавить("СуммаБДДС");
	ТЗ.Колонки.Добавить("СуммаКП");
	ТЗ.Колонки.Добавить("СуммаКПДДС");
	ТЗ.Колонки.Добавить("Основание");
	ТЗ.Колонки.Добавить("ЦФО");
	ТЗ.Колонки.Добавить("ИнвПроект");
	ТЗ.Колонки.Добавить("КодПроекта");
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	ОбластьЗаголовок.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьЗаголовок.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ОбластьЗаголовок.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	//выводим итоговую информацию по производству
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	Д_БюджетОбъемПроизводства.Ссылка,
	//|	Д_БюджетОбъемПроизводства.НомерСтроки,
	//|	Д_БюджетОбъемПроизводства.Номенклатура,
	//|	Д_БюджетОбъемПроизводства.НоменклатураЦВ,
	//|	Д_БюджетОбъемПроизводства.Объем + Д_БюджетОбъемПроизводства.ОбъемЦВ КАК ОбъемПП,
	//|	Д_БюджетОбъемПроизводства.Основание,
	//|	Д_БюджетОбъемПроизводства.ПроцентЗатрат,
	//|	Д_БюджетОбъемПроизводства.НЕРаспределять,
	//|	Д_БюджетОбъемПроизводства.Месяц
	//|ИЗ
	//|	Документ.Д_Бюджет.ОбъемПроизводства КАК Д_БюджетОбъемПроизводства
	//|ГДЕ
	//|	Д_БюджетОбъемПроизводства.Ссылка.Сценарий = &Сценарий
	//|	И Д_БюджетОбъемПроизводства.Ссылка.Предприятие = &Предприятие
	//|	И Д_БюджетОбъемПроизводства.Ссылка.ПометкаУдаления = ЛОЖЬ";
	//
	//Запрос.УстановитьПараметр("Сценарий", ДокументОбъект.СценарийПП);
	//Запрос.УстановитьПараметр("Предприятие", ДокументОбъект.Предприятие);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выгрузить();
	//Выборка.Колонки.Добавить("ОбъемКП");
	//
	//
	//Для каждого ТекСтрока Из ДокументОбъект.ОбъемПроизводства Цикл
	//	НоваяСтрока = Выборка.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	//	НоваяСтрока.ОбъемКП = ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;
	//КонецЦикла; 
	//
	//Выборка.Свернуть("Месяц, Номенклатура", "ОбъемПП, ОбъемКП");
	//
	//ОбластьПодвал.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	//ОбластьПодвал.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	//ОбластьПодвал.Параметры.Предприятие = ДокументОбъект.Предприятие;
	//
	ТабДок.Вывести(ОбластьПодвал);
	
	//ОтобранныеСтроки = Выборка.НайтиСтроки(Новый Структура("Месяц", Месяц(НачДата)));
	//Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
	//	ОбластьОбъемы.Параметры.Заполнить(ТекСтрока);
	//	ОбластьОбъемы.Параметры.Отклонение = ТекСтрока.ОбъемКП - ТекСтрока.ОбъемПП;
	//	ТабДок.Вывести(ОбластьОбъемы);	
	//КонецЦикла; 
	//
	
	//выводим корректировки
	ОбластьШапка.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьШапка.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ТабДок.Вывести(ОбластьШапка);
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	ТЧ = ДокументОбъект.ЗатратыКПИнвестиции.Выгрузить();
		
	Для каждого ТекСтрока  Из ТЧ Цикл
		//Если СтатьиИнв.Найти(ТекСтрока.СтатьяБДДС) = Неопределено Тогда
		//	Продолжить;
		//КонецЕсли;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.КодПроекта = ТекСтрока.ИнвПроект.КодПроекта;
		НоваяСтрока.БДДС = ТекСтрока.СтатьяБДДС;
		Если НЕ ТекСтрока.СуммаСеб Тогда
			НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяБДДС;		
		КонецЕсли;
		НоваяСтрока.СуммаКП = ТекСтрока.ЛимитНаНачало + ТекСтрока.СуммаСеб;
		НоваяСтрока.СуммаКПДДС = ТекСтрока.ЛимитНаНачалоДДС + ТекСтрока.СуммаБДДС;
	КонецЦикла; 
	
	ТЧ_Затраты = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
	
	Для Каждого ТекСтрока Из ТЧ_Затраты Цикл
		Если Не ТекСтрока.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.КодПроекта = ТекСтрока.ИнвПроект.КодПроекта;
		НоваяСтрока.БДДС = ТекСтрока.СтатьяБДДС;
		Если НЕ ТекСтрока.СуммаСеб Тогда
			НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяБДДС;		
		КонецЕсли;
		НоваяСтрока.СуммаКП = ТекСтрока.ЛимитНаНачало + ТекСтрока.СуммаСеб;
		НоваяСтрока.СуммаКПДДС = ТекСтрока.ЛимитНаНачалоДДС + ТекСтрока.СуммаБДДС;
	КонецЦикла;
	
	ТекСтатьяБДДС = Неопределено;
	
	// di 24.05.13
	ТЗ.Сортировать("БДДС Возр");
	
	Для каждого Выборка2 Из ТЗ Цикл
		
		Если Выборка2.БДДС = ТекСтатьяБДДС Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрочки = 4;
		
		Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
			НомерСтрочки = 1;				
		КонецЕсли;
		
		Если Выборка2.ЛимитНаНачало = Выборка2.ЛимитНаНачалоДДС Тогда
			НомерСтрочки = 0;
			Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
				НомерСтрочки = 2;
			КонецЕсли;
		КонецЕсли;
		
		// di
		ТекСтатьяБДДС = Выборка2.БДДС;
		ОбластьДанныеГр = Макет.ПолучитьОбласть("ГрСтрока"+НомерСтрочки);
		ОбластьДанныеГр.Параметры.СтатьяБДДС = ТекСтатьяБДДС;
		
		СтруктураПоиска = Новый Структура("БДДС", ТекСтатьяБДДС);		
		СтрокиБДДС = ТЗ.НайтиСтроки(СтруктураПоиска);
		
		ИтогоКорр = 0;
		ИтогоКП = 0;
		НомерСтрокиСохр = НомерСтрочки;
		
		Для Каждого Эл Из СтрокиБДДС Цикл
			
			НомерСтрочки = 4;
			
			Если  Эл.СуммаСеб = Эл.СуммаБДДС Тогда
				НомерСтрочки = 1;				
			КонецЕсли;
			
			Если Эл.ЛимитНаНачало = Эл.ЛимитНаНачалоДДС Тогда
				НомерСтрочки = 0;
				Если Эл.СуммаСеб = Эл.СуммаБДДС Тогда
					НомерСтрочки = 2;
				КонецЕсли;
			КонецЕсли;
			
			Если НомерСтрочки = 0 Тогда
				СуммаКорр = Эл.СуммаБДДС;
				СуммаКП = Эл.СуммаКПДДС;
			ИначеЕсли НомерСтрочки = 1 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКПДДС;
			ИначеЕсли НомерСтрочки = 2 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКП;
			ИначеЕсли НомерСтрочки = 3 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКП;
			ИначеЕсли НомерСтрочки = 4 Тогда
				СуммаКорр = Эл.СуммаБДДС;
				СуммаКП = Эл.СуммаКПДДС;
			КонецЕсли;
			
			ИтогоКорр = ИтогоКорр + СуммаКорр;
			ИтогоКП = ИтогоКП + СуммаКП;
			
		КонецЦикла;		
		
		ОбластьДанныеГр.Параметры.СуммаБДДССт = ИтогоКорр;
		ОбластьДанныеГр.Параметры.СуммаКПДДССт = ИтогоКП;
		ТабДок.Вывести(ОбластьДанныеГр, 0,,Истина);
		
		Для Каждого Эл Из СтрокиБДДС Цикл
			
			ИтогоСебестоимость1 = ИтогоСебестоимость1 + Эл.ЛимитНаНачало;
			ИтогоБДДС1 = ИтогоБДДС1 + Эл.ЛимитНаНачалоДДС;
			
			ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрокиСохр);
			ОбластьДанные.Параметры.Заполнить(Эл);
			ОбластьДанные.Параметры.Основание = Эл.Основание + ?(Эл.ЦФО.Пустая(), "", " (" + Строка(Эл.ЦФО) + ")");	
			
			ТабДок.Вывести(ОбластьДанные, 1);
			
			ИтогоСебестоимостьОткл = ИтогоСебестоимостьОткл + Эл.СуммаСеб;
			ИтогоБДДСОткл = ИтогоБДДСОткл + Эл.СуммаБДДС;
			
		КонецЦикла;
		
	КонецЦикла;
	
	
	//выводим итоговую информацию по затратам
	
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтого1 = ИтогоСебестоимость1;
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтогоОткл = ИтогоСебестоимостьОткл;
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтого2 = ИтогоСебестоимость1 + ИтогоСебестоимостьОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтого1 = ИтогоБДДС1;
	ОбластьПодвалБДДС.Параметры.БДДСИтогоОткл = ИтогоБДДСОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтого2 = ИтогоБДДС1 + ИтогоБДДСОткл;
	
	ТабДок.Вывести(ОбластьПодвалСебестоимость);
	ТабДок.Вывести(ОбластьПодвалБДДС);
	
	Если НЕ ТипБюджета = Неопределено Тогда
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
	
КонецПроцедуры

Процедура ПечатьКорректировкиПредставительские(ТабДок, ДокументОбъект, ТипБюджета = Неопределено) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетКорректировкиПР");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалСебестоимость = Макет.ПолучитьОбласть("ПодвалСебестоимость");
	ОбластьПодвалБДДС = Макет.ПолучитьОбласть("ПодвалБДДС");
	ОбластьОбъемы = Макет.ПолучитьОбласть("ОбъемСтрока");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Признак");
	ТЗ.Колонки.Добавить("БДДС");
	ТЗ.Колонки.Добавить("СтатьяЗатрат");
	ТЗ.Колонки.Добавить("ЛимитНаНачало");
	ТЗ.Колонки.Добавить("ЛимитНаНачалоДДС");
	ТЗ.Колонки.Добавить("СуммаСеб");
	ТЗ.Колонки.Добавить("СуммаБДДС");
	ТЗ.Колонки.Добавить("СуммаКП");
	ТЗ.Колонки.Добавить("СуммаКПДДС");
	ТЗ.Колонки.Добавить("Основание");
	ТЗ.Колонки.Добавить("ЦФО");
	ТЗ.Колонки.Добавить("ИнвПроект");
	ТЗ.Колонки.Добавить("ЧЗ");
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
	
	ОбластьЗаголовок.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьЗаголовок.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ОбластьЗаголовок.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьПодвал);
		
	//выводим корректировки
	ОбластьШапка.Параметры.Сценарий1 = ДокументОбъект.СценарийПП;
	ОбластьШапка.Параметры.Сценарий2 = ДокументОбъект.Сценарий;
	ТабДок.Вывести(ОбластьШапка);
	
	ИтогоСебестоимость1 = 0; ИтогоБДДС1 = 0;
	ИтогоСебестоимость2 = 0; ИтогоБДДС2 = 0;
	ИтогоСебестоимостьОткл = 0; ИтогоБДДСОткл = 0;
		
	ТЧ_Затраты = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
	
	Для Каждого ТекСтрока Из ТЧ_Затраты Цикл
		Если Не ТекСтрока.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.ЧЗ = ТекСтрока.ИнвПроект.КтоОтдает;
		НоваяСтрока.БДДС = ТекСтрока.СтатьяБДДС;
		Если НЕ ТекСтрока.СуммаСеб Тогда
			НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяБДДС;		
		КонецЕсли;
		НоваяСтрока.СуммаКП = ТекСтрока.ЛимитНаНачало + ТекСтрока.СуммаСеб;
		НоваяСтрока.СуммаКПДДС = ТекСтрока.ЛимитНаНачалоДДС + ТекСтрока.СуммаБДДС;
	КонецЦикла;
	
	ТекСтатьяБДДС = Неопределено;
	
	// di 24.05.13
	ТЗ.Сортировать("БДДС Возр");
	
	Для каждого Выборка2 Из ТЗ Цикл
		
		Если Выборка2.БДДС = ТекСтатьяБДДС Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрочки = 4;
		
		Если  Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
			НомерСтрочки = 1;				
		КонецЕсли;
		
		Если Выборка2.ЛимитНаНачало = Выборка2.ЛимитНаНачалоДДС Тогда
			НомерСтрочки = 0;
			Если Выборка2.СуммаСеб = Выборка2.СуммаБДДС Тогда
				НомерСтрочки = 2;
			КонецЕсли;
		КонецЕсли;
		
		// di
		ТекСтатьяБДДС = Выборка2.БДДС;
		ОбластьДанныеГр = Макет.ПолучитьОбласть("ГрСтрока"+НомерСтрочки);
		ОбластьДанныеГр.Параметры.СтатьяБДДС = ТекСтатьяБДДС;
		
		СтруктураПоиска = Новый Структура("БДДС", ТекСтатьяБДДС);		
		СтрокиБДДС = ТЗ.НайтиСтроки(СтруктураПоиска);
		
		ИтогоКорр = 0;
		ИтогоКП = 0;
		НомерСтрокиСохр = НомерСтрочки;
		
		Для Каждого Эл Из СтрокиБДДС Цикл
			
			НомерСтрочки = 4;
			
			Если  Эл.СуммаСеб = Эл.СуммаБДДС Тогда
				НомерСтрочки = 1;				
			КонецЕсли;
			
			Если Эл.ЛимитНаНачало = Эл.ЛимитНаНачалоДДС Тогда
				НомерСтрочки = 0;
				Если Эл.СуммаСеб = Эл.СуммаБДДС Тогда
					НомерСтрочки = 2;
				КонецЕсли;
			КонецЕсли;
			
			Если НомерСтрочки = 0 Тогда
				СуммаКорр = Эл.СуммаБДДС;
				СуммаКП = Эл.СуммаКПДДС;
			ИначеЕсли НомерСтрочки = 1 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКПДДС;
			ИначеЕсли НомерСтрочки = 2 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКП;
			ИначеЕсли НомерСтрочки = 3 Тогда
				СуммаКорр = Эл.СуммаСеб;
				СуммаКП = Эл.СуммаКП;
			ИначеЕсли НомерСтрочки = 4 Тогда
				СуммаКорр = Эл.СуммаБДДС;
				СуммаКП = Эл.СуммаКПДДС;
			КонецЕсли;
			
			ИтогоКорр = ИтогоКорр + СуммаКорр;
			ИтогоКП = ИтогоКП + СуммаКП;
			
		КонецЦикла;		
		
		ОбластьДанныеГр.Параметры.СуммаБДДССт = ИтогоКорр;
		ОбластьДанныеГр.Параметры.СуммаКПДДССт = ИтогоКП;
		ТабДок.Вывести(ОбластьДанныеГр, 0,,Истина);
		
		Для Каждого Эл Из СтрокиБДДС Цикл
			
			ИтогоСебестоимость1 = ИтогоСебестоимость1 + Эл.ЛимитНаНачало;
			ИтогоБДДС1 = ИтогоБДДС1 + Эл.ЛимитНаНачалоДДС;
			
			ОбластьДанные = Макет.ПолучитьОбласть("Строка" + НомерСтрокиСохр);
			ОбластьДанные.Параметры.Заполнить(Эл);
			ОбластьДанные.Параметры.Основание = Эл.Основание + ?(Эл.ЦФО.Пустая(), "", " (" + Строка(Эл.ЦФО) + ")");	
			
			ТабДок.Вывести(ОбластьДанные, 1);
			
			ИтогоСебестоимостьОткл = ИтогоСебестоимостьОткл + Эл.СуммаСеб;
			ИтогоБДДСОткл = ИтогоБДДСОткл + Эл.СуммаБДДС;
			
		КонецЦикла;
		
	КонецЦикла;
	
	
	//выводим итоговую информацию по затратам
	
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтого1 = ИтогоСебестоимость1;
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтогоОткл = ИтогоСебестоимостьОткл;
	ОбластьПодвалСебестоимость.Параметры.СебестоимостьИтого2 = ИтогоСебестоимость1 + ИтогоСебестоимостьОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтого1 = ИтогоБДДС1;
	ОбластьПодвалБДДС.Параметры.БДДСИтогоОткл = ИтогоБДДСОткл;
	ОбластьПодвалБДДС.Параметры.БДДСИтого2 = ИтогоБДДС1 + ИтогоБДДСОткл;
	
	ТабДок.Вывести(ОбластьПодвалСебестоимость);
	ТабДок.Вывести(ОбластьПодвалБДДС);
	
	Если НЕ ТипБюджета = Неопределено Тогда
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПараметрыНоменклатуры(Номенклатура, Дата, Сценарий, Предприятие)
	ОтборНоменклатуры = Новый Структура("Номенклатура, СценарийПлана, Предприятие", Номенклатура,
	Сценарий, Предприятие);
	возврат РегистрыСведений.Д_ПараметрыНоменклатуры.ПолучитьПоследнее(
	Дата, ОтборНоменклатуры);
	
КонецФункции

Функция ПолучитьПараметрыСырья(Сырье, Дата, Сценарий)
	ОтборСырья = Новый Структура("Сырье, СценарийПлана", Сырье,
	Сценарий);
	Возврат РегистрыСведений.Д_ПараметрыСырья.ПолучитьПоследнее(
	Дата, ОтборСырья);
КонецФункции


Функция ОпределитьКвартал(НомерМесяца)
	Если НомерМесяца / 3 <= 1 Тогда
		Возврат 1;
	ИначеЕсли НомерМесяца / 3 > 1 И НомерМесяца / 3 <= 2 Тогда 
		Возврат 2;
	ИначеЕсли  НомерМесяца / 3 > 2 И НомерМесяца / 3 <= 3 Тогда
		Возврат 3;
	ИначеЕсли НомерМесяца / 3 > 3 И НомерМесяца / 3 <= 4 Тогда
		Возврат 4;	
	КонецЕсли; 
КонецФункции // ()

Процедура РечатьОбъемПроизводства(ТабДок, ДокументОбъект, ТипБюджета) Экспорт
	
	//при выборе сценария факта в одном из полей Сценарий
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|Начало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|СтолбецОбъем");
	
	ОбластьДанные = Макет.ПолучитьОбласть("Строка0|Начало");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка0|СтолбецОбъем");
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка1|Начало");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка1|СтолбецОбъем");
	
	ОбластьДанныеДетально = Макет.ПолучитьОбласть("СтрокаДетально0|Начало");
	ОбластьДанныеДетальноСтолбцы = Макет.ПолучитьОбласть("СтрокаДетально0|СтолбецОбъем");
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	КлючДни = Окр((ИсходныеДанные.ДатаОкончания - ИсходныеДанные.ДатаНачала) / (24 * 60 * 60), 0);
	Если КлючПериод = "Месяц" Тогда
		КлючДни = Мин(КлючДни, 30);
	ИначеЕсли КлючПериод = "Квартал" Тогда
		КлючДни = Мин(КлючДни, 90);
	Иначе
		КлючДни = Мин(КлючДни, 360);
	КонецЕсли;
	
	НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
	
	КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
	ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
	
	//объемы производства
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
			
	ТабДок.Вывести(ОбластьШапка);
		
	Для каждого ТекСтрока Из ТекПериоды Цикл
		ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
		ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
	КонецЦикла;
	
	ТЗ = ДокументОбъект.ОбъемПроизводства.Выгрузить();
	ТЗ.Свернуть("Номенклатура");
	ТЗ.Колонки.Добавить("ТипНоменклатуры");
	ТЗ.Колонки.Добавить("ЕдиницаИзмерения");
	ТЗ.Колонки.Добавить("Литраж");
	
	Для каждого ТекСтрока Из ТЗ Цикл
		ТекСтрока.ТипНоменклатуры = ТекСтрока.Номенклатура.ТипНоменклатуры;
		ТекСтрока.ЕдиницаИзмерения = ТекСтрока.Номенклатура.ЕдиницаИзмерения;
		ТекСтрока.Литраж = ТекСтрока.Номенклатура.Литраж;	
	КонецЦикла; 
	
	//ТаблНоменклатуры = Новый ТаблицаЗначений;
	//ТаблНоменклатуры.Колонки.Добавить("Месяц");
	//ТаблНоменклатуры.Колонки.Добавить("Объем");
	//ТаблНоменклатуры.Колонки.Добавить("Номенклатура");
	//ТаблНоменклатуры.Колонки.Добавить("ТипНоменклатуры");
	
	ТабДок.НачатьАвтоГруппировкуСтрок();
	
	Для каждого ТекСтрока Из ТЗ Цикл
		ОбластьДанные.Параметры.Заполнить(ТекСтрока);
		
		//вывод основания
		Осн = "";
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Номенклатура, ТекМесяц));
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				Осн = Осн + ?(ОтобранныеСтроки.Найти(ТекДанные) = 0, "", "; ") + ТекДанные.Основание; 
			КонецЦикла;
			Осн = Осн + ?(Осн = "", "", "; ");
		КонецЦикла;
		
		ОбластьДанные.Параметры.Основание = Осн;
		ТабДок.Вывести(ОбластьДанные, 0);
		
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Номенклатура, ТекМесяц));
			Объем = 0;
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
			КонецЦикла;
			ОбластьДанныеСтолбцы.Параметры.Объем = Объем;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы, 0);		
		КонецЦикла;
		//выводим детализацию
		Для ТекДень = 1 По 31 Цикл
			ОбластьДанныеДетально.Параметры.День = ТекДень;
			ТабДок.Вывести(ОбластьДанныеДетально, 1, "Детально", Ложь);
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводстваДетально.НайтиСтроки(Новый Структура("Номенклатура, Месяц, День", ТекСтрока.Номенклатура, ТекМесяц, ТекДень));
				Объем = 0;
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Объем = Объем + ТекДанные.Объем;
				КонецЦикла;
				ОбластьДанныеДетальноСтолбцы.Параметры.Объем = Объем;
				ТабДок.Присоединить(ОбластьДанныеДетальноСтолбцы, 1, "Детально", Ложь);
			КонецЦикла; 
		КонецЦикла; //конец вывода детализации
		
	КонецЦикла;
	
	ТЗ.Свернуть("ТипНоменклатуры, Литраж, ЕдиницаИзмерения");
	Для каждого ТекТип Из ТЗ Цикл
		ОбластьДанныеИтого.Параметры.Заполнить(ТекТип);
		ТабДок.Вывести(ОбластьДанныеИтого, 0);
		Для каждого ТекМесяц Из ТекПериоды Цикл
			ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
			Объем = 0;
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				Если ТекДанные.Номенклатура.ТипНоменклатуры = ТекТип.ТипНоменклатуры И ТекДанные.Номенклатура.Литраж = ТекТип.Литраж И ТекДанные.Номенклатура.ЕдиницаИзмерения = ТекТип.ЕдиницаИзмерения Тогда
					Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
				КонецЕсли;
			КонецЦикла;
			ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
			ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы, 0);		
		КонецЦикла;
	КонецЦикла; 
	
	//Для каждого ТекМесяц Из ТекПериоды Цикл
	//	Для каждого Номенклатура Из ТЗ Цикл
	//		ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекМесяц, Номенклатура.Номенклатура));
	//		Объем = 0;
	//		Для каждого ТекДанные Из ОтобранныеСтроки Цикл
	//			Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
	//		КонецЦикла;
	//		ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
	//		НоваяСтрока = ТаблНоменклатуры.Добавить();
	//		НоваяСтрока.Месяц = ТекМесяц;
	//		НоваяСтрока.Объем = Объем;
	//		НоваяСтрока.Номенклатура = Номенклатура.Номенклатура;
	//	КонецЦикла;
	//КонецЦикла;
	
	
	ТабДок.ЗакончитьАвтоГруппировкуСтрок();
	
	Если Не ТипБюджета = Неопределено Тогда
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
	
КонецПроцедуры

Процедура РечатьСебестоимостьСерверНовый(ТабДок, ДокументОбъект, ТекБП, ТабДокФР = Неопределено, ТабДокДДС = Неопределено, КорректировочныйБюджет = Ложь, ТекКоманда = "") Экспорт
	
	// 23.07.13 di 
	Если ТипЗнч(ТекБП) = Тип("БизнесПроцессСсылка.УтверждениеБюджета") Тогда
		ТипБюджета = ТекБП.ТипБюджета;
	Иначе
		 ТипБюджета = ТекБП;
	КонецЕсли;
	
	Если ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда 
			ПечатьКорректировки(ТабДок, ДокументОбъект, ТипБюджета);
	КонецЕсли;
	
	//супербоб на инну-тур
	Если ТабДокФР <> Неопределено Или ТабДокДДС <> Неопределено Тогда
		Если ТабДокФР <> Неопределено Тогда
			ТабДок.Вывести(ТабДокФР);
		КонецЕсли;
		Если ТабДокДДС <> Неопределено Тогда
			ТабДок.Вывести(ТабДокДДС);
		КонецЕсли;	
	Иначе	
		//при выборе сценария факта в одном из полей Сценарий
		НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
		
		ИсходныеДанные = Новый Структура;
		ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
		ИсходныеДанные.Вставить("ДатаНачала", НачДата);
		ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
		ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
		ИсходныеДанные.Вставить("Сценарий2", "");
		ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
		
		ПрямыеСтатьи = Новый Массив;
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыОсн);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыВсп);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрибыльПобочка);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭл);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭк);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектПотр);
		//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектЭк);
		
		Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка|Начало");
		ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|СтолбецОбъем");
		
		ОбластьДанные = Макет.ПолучитьОбласть("Строка0|Начало");
		ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка0|СтолбецОбъем");
		ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка1|Начало");
		ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка1|СтолбецОбъем");
		
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2|Начало2");
		ОбластьШапкаСтолбцы2 = Макет.ПолучитьОбласть("Шапка2|Столбец2");
		
		ОбластьДанные2 = Макет.ПолучитьОбласть("Строка2|Начало2");
		ОбластьДанныеСтолбцы2 = Макет.ПолучитьОбласть("Строка2|Столбец2");
		ОбластьДанные4 = Макет.ПолучитьОбласть("Строка4|Начало2");
		ОбластьДанныеСтолбцы4 = Макет.ПолучитьОбласть("Строка4|Столбец2");
		ОбластьДанные5 = Макет.ПолучитьОбласть("Строка5|Начало2");
		ОбластьДанныеСтолбцы5 = Макет.ПолучитьОбласть("Строка5|Столбец2");
		
		ОбластьДанныеИтого2 = Макет.ПолучитьОбласть("Строка3|Начало2");
		ОбластьДанныеИтогоСтолбцы2 = Макет.ПолучитьОбласть("Строка3|Столбец2");
		
		// прочие90
		ОбластьШапка5 = Макет.ПолучитьОбласть("Шапка5|Начало2");
		ОбластьШапкаСтолбцы5 = Макет.ПолучитьОбласть("Шапка5|Столбец2");
		
		ОбластьДанные13 = Макет.ПолучитьОбласть("Строка13|Начало2");
		ОбластьДанныеСтолбцы13 = Макет.ПолучитьОбласть("Строка13|Столбец2");
		ОбластьДанные15 = Макет.ПолучитьОбласть("Строка15|Начало2");
		ОбластьДанныеСтолбцы15 = Макет.ПолучитьОбласть("Строка15|Столбец2");
		ОбластьДанные16 = Макет.ПолучитьОбласть("Строка16|Начало2");
		ОбластьДанныеСтолбцы16 = Макет.ПолучитьОбласть("Строка16|Столбец2");
		
		ОбластьДанныеИтого90 = Макет.ПолучитьОбласть("Строка14|Начало2");
		ОбластьДанныеИтогоСтолбцы90 = Макет.ПолучитьОбласть("Строка14|Столбец2");
		//
		
		// прочие91
		ОбластьШапка6 = Макет.ПолучитьОбласть("Шапка6|Начало4");
		ОбластьШапкаСтолбцы6 = Макет.ПолучитьОбласть("Шапка6|Столбец4");
		
		ОбластьДанные20 = Макет.ПолучитьОбласть("Строка20|Начало4");
		ОбластьДанныеСтолбцы20 = Макет.ПолучитьОбласть("Строка20|Столбец4");
		ОбластьДанные18 = Макет.ПолучитьОбласть("Строка18|Начало4");
		ОбластьДанныеСтолбцы18 = Макет.ПолучитьОбласть("Строка18|Столбец4");
		ОбластьДанные19 = Макет.ПолучитьОбласть("Строка19|Начало4");
		ОбластьДанныеСтолбцы19 = Макет.ПолучитьОбласть("Строка19|Столбец4");
		
		ОбластьДанныеИтого91 = Макет.ПолучитьОбласть("Строка17|Начало4");
		ОбластьДанныеИтогоСтолбцы91 = Макет.ПолучитьОбласть("Строка17|Столбец4");
		//
		
		// кредиты
		ОбластьШапкаКр = Макет.ПолучитьОбласть("ШапкаКр|Начало");
		ОбластьШапкаСтолбцыКр = Макет.ПолучитьОбласть("ШапкаКр|Столбец");
		
		ОбластьДанные24 = Макет.ПолучитьОбласть("Строка24|Начало");
		ОбластьДанныеСтолбцы24 = Макет.ПолучитьОбласть("Строка24|Столбец");
		ОбластьДанные22 = Макет.ПолучитьОбласть("Строка22|Начало");
		ОбластьДанныеСтолбцы22 = Макет.ПолучитьОбласть("Строка22|Столбец");
		ОбластьДанные23 = Макет.ПолучитьОбласть("Строка23|Начало");
		ОбластьДанныеСтолбцы23 = Макет.ПолучитьОбласть("Строка23|Столбец");
		
		ОбластьДанныеИтогоКр = Макет.ПолучитьОбласть("Строка21|Начало");
		ОбластьДанныеИтогоСтолбцыКр = Макет.ПолучитьОбласть("Строка21|Столбец");
		//
		
		ОбластьШапкаБДР = Макет.ПолучитьОбласть("Шапка4|Начало4");
		ОбластьШапкаСтолбцыБДР = Макет.ПолучитьОбласть("Шапка4|Столбец4");
		
		ОбластьДанныеБДР = Макет.ПолучитьОбласть("Строка9|Начало4");
		ОбластьДанныеСтолбцыБДР = Макет.ПолучитьОбласть("Строка9|Столбец4");
		ОбластьДанныеБДР2 = Макет.ПолучитьОбласть("Строка11|Начало4");
		ОбластьДанныеСтолбцыБДР2 = Макет.ПолучитьОбласть("Строка11|Столбец4");
		ОбластьДанныеБДР3 = Макет.ПолучитьОбласть("Строка12|Начало4");
		ОбластьДанныеСтолбцыБДР3 = Макет.ПолучитьОбласть("Строка12|Столбец4");
		
		ОбластьДанныеИтогоБДР = Макет.ПолучитьОбласть("Строка10|Начало4");
		ОбластьДанныеИтогоСтолбцыБДР = Макет.ПолучитьОбласть("Строка10|Столбец4");
		
		
		//ТабДок.Очистить();
		ВставлятьРазделительСтраниц = Ложь;
		
		
		Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, ?(
		ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
		
		КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
		ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
		
		КлючДни = Окр((ИсходныеДанные.ДатаОкончания - ИсходныеДанные.ДатаНачала) / (24 * 60 * 60), 0);
		Если КлючПериод = "Месяц" Тогда
			КлючДни = Мин(КлючДни, 30);
		ИначеЕсли КлючПериод = "Квартал" Тогда
			КлючДни = Мин(КлючДни, 90);
		Иначе
			КлючДни = Мин(КлючДни, 360);
		КонецЕсли;
		
		НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
		ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
		
		КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
		ИсходныеДанные.Помесячно = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
		
		//объемы производства
		
		ВсегоПериодов = КонецПериода - НачалоПериода + 1;
		ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
		ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
		
		ТекПериоды = Новый Массив;
		ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
		ТекДата = ДатаНачала;
		
		Пока ТекДата <= ДатаОкончания Цикл
			ТекПериоды.Добавить(НачалоМесяца(ТекДата));
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		// добавляем данные из оперативных бюджетов
		СценарийОБ = РасчетыБюджет.ПолучитьСценарийДляОперативныхБюджетов(ДокументОбъект.Сценарий);
		МассивБюджетов = РасчетыБюджет.ПолучитьБюджетныйДокументПоСценариюИПредприятию(СценарийОБ, ДокументОбъект.Предприятие);
		
		Если Не СценарийОБ = ДокументОбъект.Сценарий Тогда
			АктуальныйПериод = ДокументОбъект.Сценарий.АктуальнаяДата;
			ТаблицаОперативныхБюджетов = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(СценарийОБ, ДокументОбъект.Предприятие, МассивБюджетов, Ложь, Истина, АктуальныйПериод);
		Иначе
			ТаблицаОперативныхБюджетов = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(СценарийОБ, ДокументОбъект.Предприятие, МассивБюджетов, Ложь, Истина);
		КонецЕсли;
		
		ТаблицаОперативныхБюджетовКП = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(ДокументОбъект.Сценарий, ДокументОбъект.Предприятие, ДокументОбъект.Ссылка, Истина, Истина);
		//
		
		Если ДокументОбъект.ОбъемПроизводства.Количество() Тогда //себестоимость
			
			//ТабДок.Вывести(ОбластьШапка);
			
			
			Для каждого ТекСтрока Из ТекПериоды Цикл
				ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
				//ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
			КонецЦикла;
			
			ТЗ = ДокументОбъект.ОбъемПроизводства.Выгрузить();
			ТЗ.Свернуть("Номенклатура");
			
			ТаблНоменклатуры = Новый ТаблицаЗначений;
			ТаблНоменклатуры.Колонки.Добавить("Месяц");
			ТаблНоменклатуры.Колонки.Добавить("Объем");
			ТаблНоменклатуры.Колонки.Добавить("Номенклатура");
			
			
			Для каждого ТекСтрока Из ТЗ Цикл
				ОбластьДанные.Параметры.Заполнить(ТекСтрока);
				//ТабДок.Вывести(ОбластьДанные);
				Для каждого ТекМесяц Из ТекПериоды Цикл
					ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Номенклатура, ТекМесяц));
					Объем = 0;
					Для каждого ТекДанные Из ОтобранныеСтроки Цикл
						Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
					КонецЦикла;
					ОбластьДанныеСтолбцы.Параметры.Объем = Объем;
					//ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
				КонецЦикла; 
			КонецЦикла;
			
			//ТабДок.Вывести(ОбластьДанныеИтого);
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
				Объем = 0;
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
				КонецЦикла;
				ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
				//ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);		
			КонецЦикла;
			
			Для каждого ТекМесяц Из ТекПериоды Цикл
				Для каждого Номенклатура Из ТЗ Цикл
					ОтобранныеСтроки = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекМесяц, Номенклатура.Номенклатура));
					Объем = 0;
					Для каждого ТекДанные Из ОтобранныеСтроки Цикл
						Объем = Объем + ТекДанные.Объем + ТекДанные.ОбъемЦВ;
					КонецЦикла;
					ОбластьДанныеИтогоСтолбцы.Параметры.Объем = Объем;
					НоваяСтрока = ТаблНоменклатуры.Добавить();
					НоваяСтрока.Месяц = ТекМесяц;
					НоваяСтрока.Объем = Объем;
					НоваяСтрока.Номенклатура = Номенклатура.Номенклатура;
				КонецЦикла;
			КонецЦикла;
			
			
			//себестоимость
			ТабДок.НачатьАвтоГруппировкуСтрок();
			
			//ТЗ2 = ДокументОбъект.БюджетСебестоимости.Выгрузить();
			//ТЗ2.Колонки.Добавить("Код");
			//ТЗ2.Колонки.Добавить("СуммаЕд");
			//ТЗ2.Очистить();
			//
			//МасивТЧ = Новый Массив;
			//МасивТЧ.Добавить(ДокументОбъект.БюджетСебестоимости.Выгрузить());
			//МасивТЧ.Добавить(ДокументОбъект.БюджетСебестоимостиПрочие.Выгрузить());
			
			ТЗ2 = ДокументОбъект.Затраты.Выгрузить();
			ТЗ2.Колонки.Добавить("Код");
			ТЗ2.Колонки.Добавить("СуммаЕд");
			ТЗ2.Очистить();
			
			МасивТЧ = Новый Массив;
			ТекТЧ = ДокументОбъект.Затраты.Выгрузить();
						
			Для Каждого СтрокаОБ Из ТаблицаОперативныхБюджетов Цикл
				НоваяСтрокаЗатрат = ТекТЧ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЗатрат, СтрокаОБ);
			КонецЦикла;
			МасивТЧ.Добавить(ТекТЧ.НайтиСтроки(Новый Структура("Признак", Перечисления.Д_ПризнакСписания.Себестоимость)));
			
			ТЧКП = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
			Для Каждого СтрокаОБ Из ТаблицаОперативныхБюджетовКП Цикл
				НоваяСтрокаКорректировок = ТЧКП.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаКорректировок, СтрокаОБ);
			КонецЦикла;
			ТЧКП.Колонки.Добавить("Код");
			//ТЧКП.Колонки.Добавить("НаЕдиницу"); закомментированно di 22.03.13
			// закомментировано di 30.08.13
			//Для каждого ТекСтрока Из ТЧКП Цикл
			//	ТекСтрока.НаЕдиницу = Ложь;
			//КонецЦикла;
			МасивТЧ.Добавить(ТЧКП);
			
			// 28.09.2012 расходы по статье ПР УК
			
			ТЧПР = ДокументОбъект.ПР.Выгрузить();
			ТЧПР.Колонки.Добавить("СтатьяЗатрат");
			ТЧПР.Колонки.Добавить("СуммаСеб");
			ТЧПР.Колонки.Добавить("Код");
			ТЧПР.Колонки.Добавить("НаЕдиницу");
			Для каждого ТекСтрока Из ТЧПР Цикл
				ТекСтрока.СуммаСеб = ТекСтрока.СуммаФР;
				ТекСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
				ТекСтрока.НаЕдиницу = Ложь;
			КонецЦикла; 
			МасивТЧ.Добавить(ТЧПР);
			
			////добавляем оперативные бюджеты в МассивТЧ
			//ДобавитьОперативныеБюджеты(МасивТЧ, ДокументОбъект.Ссылка, ТекБП);
				
				
			НоменклатураПростой = Справочники.Номенклатура.Простой;
			
			//тек переработка
			Для каждого ТекТЧ Из МасивТЧ Цикл
				
				Для каждого ТекСтрока Из ТекТЧ Цикл
					Сумма = ТекСтрока.СуммаСеб;
					СуммаДДС = ТекСтрока.СуммаБДДС;    // бюджет ДДС
					ТолькоНаПростой = Ложь;
					СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
					Если ТекСтрока.Номенклатура = НоменклатураПростой Тогда
						ТолькоНаПростой = Истина;
					КонецЕсли;
					Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат) Тогда
						//заполняем саму статью
						Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) И Не ТолькоНаПростой Тогда //если распределять
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
							Для ТекИндекс = 0 По ПроизводимыеНоменклатуры.Количество() - 1 Цикл							
								Если ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой = 100 Тогда
									СписаниеНаПростой = Истина;
								КонецЕсли;							
								НоваяСтрока = ТЗ2.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
								НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат;
								НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
								НоваяСтрока.Номенклатура = ПроизводимыеНоменклатуры[ТекИндекс].Номенклатура;
								
								НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой) / 100, 1);
								НоваяСтрока.СуммаБДДС = СуммаДДС* (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой) / 100, 1);    // бюджет ДДС
								НоваяСтрока.СуммаЕД = 0;
								НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
								Если НайтиОбъем.Количество() Тогда
									НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
									//Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
									Если ТекСтрока.НаЕдиницу Тогда
										НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
										НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
									КонецЕсли;
									//КонецЕсли;
								КонецЕсли;
								
								ТекНом = НоваяСтрока.Номенклатура;
								
								//простой 
								Если ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой И СписаниеНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
																			
									// 29.09.14
									//НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									Если ПроизводимыеНоменклатуры[ТекИндекс].НЕРаспределять = Ложь И ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат > 0 Тогда 
										НоваяСтрока.СуммаСеб = Сумма * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									ИначеЕсли ПроизводимыеНоменклатуры[ТекИндекс].НЕРаспределять = Ложь Тогда
										НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									Иначе
										НоваяСтрока.СуммаСеб = 0;
									КонецЕсли;

									// 29.09.14
									//НоваяСтрока.СуммаБДДС = СуммаДДС* (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);    // бюджет ДДС
									Если ПроизводимыеНоменклатуры[ТекИндекс].НЕРаспределять = Ложь И ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат > 0 Тогда 
										НоваяСтрока.СуммаБДДС = СуммаДДС * (ПроизводимыеНоменклатуры[ТекИндекс].ПроцентЗатрат / 100) * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									ИначеЕсли ПроизводимыеНоменклатуры[ТекИндекс].НЕРаспределять = Ложь Тогда
										НоваяСтрока.СуммаБДДС = СуммаДДС * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[ТекИндекс].ПроцентНаПростой / 100, 1);
									Иначе
										НоваяСтрока.СуммаБДДС = 0;
									КонецЕсли;
	
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекНом));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										//Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = 0;
											НоваяСтрока.СуммаСеб  = 0;
										КонецЕсли;
										//КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
							КонецЦикла;
							//КонецЕсли;
						ИначеЕсли ТолькоНаПростой Тогда // только простой
							НоваяСтрока = ТЗ2.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
							НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
							НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
							НоваяСтрока.СуммаСеб = Сумма;
							НоваяСтрока.СуммаБДДС = СуммаДДС;    // бюджет ДДС
							НоваяСтрока.СуммаЕД = 0;
							НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекНом));
							Если НайтиОбъем.Количество() Тогда
								НоваяСтрока.СуммаЕД = 0;
								//Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
								Если ТекСтрока.НаЕдиницу Тогда
									НоваяСтрока.СуммаЕД = 0;
									НоваяСтрока.СуммаСеб  = 0;
								КонецЕсли;
								//КонецЕсли;
							КонецЕсли;
						Иначе //если номенклатура указана
							ПроизводимыеНоменклатуры = ДокументОбъект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока.Месяц, ТекСтрока.Номенклатура));
							Если ПроизводимыеНоменклатуры.Количество() Тогда
								
								Если Не ТолькоНаПростой Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;						
									НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[0].ПроцентНаПростой) / 100, 1);
									НоваяСтрока.СуммаБДДС = СуммаДДС * ?(СписаниеНаПростой, (100 - ПроизводимыеНоменклатуры[0].ПроцентНаПростой) / 100, 1);  // бюджет ДДС
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, НоваяСтрока.Номенклатура));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, НоваяСтрока.СуммаСеб / НайтиОбъем[0].Объем, 0);
										//Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = ?(НайтиОбъем[0].Объем, Сумма, 0);
											НоваяСтрока.СуммаСеб  = ?(НайтиОбъем[0].Объем, Сумма * НайтиОбъем[0].Объем, 0);
										КонецЕсли;
										//КонецЕсли;
									КонецЕсли;
									
									ТекНом = НоваяСтрока.Номенклатура;
								КонецЕсли;
								
								//простой
								Если ПроизводимыеНоменклатуры[0].ПроцентНаПростой И (СписаниеНаПростой ИЛИ ТолькоНаПростой) Тогда
									НоваяСтрока = ТЗ2.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат;
									НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
									НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
									НоваяСтрока.СуммаСеб = Сумма * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[0].ПроцентНаПростой / 100, 1);
									НоваяСтрока.СуммаБДДС = СуммаДДС * ?(СписаниеНаПростой, ПроизводимыеНоменклатуры[0].ПроцентНаПростой / 100, 1);  // бюджет ДДС
									НоваяСтрока.СуммаЕД = 0;
									НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", НоваяСтрока.Месяц, ТекСтрока.Номенклатура));
									Если НайтиОбъем.Количество() Тогда
										НоваяСтрока.СуммаЕД = 0;
										//Если ТекТЧ = ДокументОбъект.БюджетСебестоимости ИЛИ ТекТЧ = ДокументОбъект.БюджетСебестоимостиПрочие Тогда
										Если ТекСтрока.НаЕдиницу Тогда
											НоваяСтрока.СуммаЕД = 0;
											НоваяСтрока.СуммаСеб  = 0;
										КонецЕсли;
										//КонецЕсли;
									КонецЕсли;
									
									
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
						
					КонецЕсли;
				КонецЦикла;
				
				
			КонецЦикла;      // конец большого цикла	
			
			
			//ОтобранныеСтрокиПростой = ТЗ2.НайтиСтроки(Новый Структура("Номенклатура", "Простой")) ;
			//Для каждого ТекСтрока Из ОтобранныеСтрокиПростой Цикл
			//	
			//	НоваяСтрока = ТЗ2.Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			//	НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
			//	НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
			//	НоваяСтрока.СуммаСеб = ТекСтрока.СуммаСеб;
			//	НоваяСтрока.СуммаЕД = 0;
			//	
			//КонецЦикла; 
			
			
			Для каждого ТекСтрока Из ТЗ2 Цикл
				Если ЗначениеЗаполнено(ТекСтрока.СтатьяЗатрат.Родитель) Тогда
					НоваяСтрока = ТЗ2.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат.Родитель;
					НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
				КонецЕсли;
			КонецЦикла; 
			
			// 22.08.13 di
			ПроверитьСоответствиеСтатей(ТЗ2);
			
			ТЗ = ТЗ2.Скопировать();
			
			
			ТЗ4 = ТЗ2.Скопировать();
			ТЗ5 = ТЗ2.Скопировать();
			ТЗ5.Свернуть("Номенклатура");
			ТЗ5.Сортировать("Номенклатура  Возр");
			ТЗ4.Свернуть("СтатьяЗатрат, Код, Основание, Номенклатура", "СуммаСеб, СуммаЕд, СуммаБДДС");
			
			ТЗ2.Свернуть("СтатьяЗатрат, Номенклатура, Код");
			ТЗ2.Сортировать("Код Возр");
			
			
			Для каждого Номенклатура Из ТЗ5 Цикл //группировка по номенклатурам
				
				ОбластьШапка2.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
				ОбластьШапка2.Параметры.Номенклатура = Номенклатура.Номенклатура;
				ОбластьШапка2.Параметры.Предприятия = ИсходныеДанные.Предприятие;
				ТабДок.Вывести(ОбластьШапка2, 0);
				
				Для каждого ТекСтрока Из ТекПериоды Цикл
					ОбластьШапкаСтолбцы2.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
					НайтиОбъем = ТаблНоменклатуры.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока, Номенклатура.Номенклатура));
					
					Если НайтиОбъем.Количество() Тогда
						ОбластьШапкаСтолбцы2.Параметры.Объем = НайтиОбъем[0].Объем;
					Иначе
						ОбластьШапкаСтолбцы2.Параметры.Объем = 0;
					КонецЕсли;
					
					ТабДок.Присоединить(ОбластьШапкаСтолбцы2, 0);	
				КонецЦикла;
				
				
				
				ОтобранныеНоменклатуры = ТЗ2.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура.Номенклатура));
				
				Для каждого ТекСтрока Из ОтобранныеНоменклатуры Цикл // группировка по статьям
					
					Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат) Тогда
						
						Ур = ТекСтрока.СтатьяЗатрат.ЭтоГруппа + ТекСтрока.СтатьяЗатрат.Родитель.Пустая();
						Если Ур Тогда
							ТекОбл1 = ОбластьДанные2;
							ТекОбл2 = ОбластьДанныеСтолбцы2;
							Ур2 = 1;
						Иначе
							ТекОбл1 = ОбластьДанные4;
							ТекОбл2 = ОбластьДанныеСтолбцы4;
							Ур2 = 0;
						КонецЕсли;
						ТекОбл1.Параметры.Заполнить(ТекСтрока);
						ТабДок.Вывести(ТекОбл1, 1 - Ур2,,Ур2);
						Для каждого ТекМесяц Из ТекПериоды Цикл
							ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Месяц, Номенклатура", ТекСтрока.СтатьяЗатрат, ТекМесяц, Номенклатура.Номенклатура));
							СуммаСС = 0; СуммаССЕд = 0; СуммаБДДС = 0; // di бюджет ДДС
							Для каждого ТекДанные Из ОтобранныеСтроки Цикл
								СуммаСС = СуммаСС + ТекДанные.СуммаСеб;
								СуммаССЕд = СуммаССЕд + ТекДанные.СуммаЕд; 
								СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС; // бюджет ДДС
							КонецЦикла;
							ТекОбл2.Параметры.Сумма = СуммаСС;
							ТекОбл2.Параметры.СуммаБДДС = СуммаБДДС;       // бюджет ДДС
							ТекОбл2.Параметры.Наед = СуммаССЕд;
							ТабДок.Присоединить(ТекОбл2, 1 - Ур2,,Ур2);
							
						КонецЦикла;
						
						Если НЕ ТекСтрока.СтатьяЗатрат.ЭтоГруппа Тогда
							ОтобранныеСтроки = ТЗ4.НайтиСтроки(Новый Структура("СтатьяЗатрат, Номенклатура", ТекСтрока.СтатьяЗатрат, Номенклатура.Номенклатура));
							Для каждого ТекСтрокаОсн Из ОтобранныеСтроки Цикл
								ОбластьДанные5.Параметры.СтатьяЗатрат = ТекСтрокаОсн.Основание;
								ТабДок.Вывести(ОбластьДанные5, 2,,Ложь);
								Для каждого ТекМесяц Из ТекПериоды Цикл
									ОтобранныеСтроки2 = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Основание, Месяц, Номенклатура", ТекСтрокаОсн.СтатьяЗатрат, ТекСтрокаОсн.Основание, ТекМесяц, Номенклатура.Номенклатура));
									ОбластьДанныеСтолбцы5.Параметры.Сумма = 0;
									ОбластьДанныеСтолбцы5.Параметры.Наед = 0;
									ОбластьДанныеСтолбцы5.Параметры.СуммаБДДС = 0; // бюджет ДДС
									Для каждого ТекТТ Из ОтобранныеСтроки2 Цикл
										
										ОбластьДанныеСтолбцы5.Параметры.Сумма = ОбластьДанныеСтолбцы5.Параметры.Сумма + ТекТТ.СуммаСеб;
										ОбластьДанныеСтолбцы5.Параметры.Наед = ОбластьДанныеСтолбцы5.Параметры.Наед + ТекТТ.СуммаЕд;
										ОбластьДанныеСтолбцы5.Параметры.СуммаБДДС = ОбластьДанныеСтолбцы5.Параметры.СуммаБДДС + ТекТТ.СуммаБДДС;	 // бюджет ДДС		
										
									КонецЦикла; 
									ТабДок.Присоединить(ОбластьДанныеСтолбцы5, 2,,Ложь);
									
								КонецЦикла; 
							КонецЦикла; 
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				
				СуммаПП = Новый Массив;
				СуммаППЕд = Новый Массив;
				СуммаППДДС = Новый Массив;    // бюджет ДДС   
				СуммаИтого = Новый Массив;
				СуммаИтогоЕд = Новый Массив;
				СуммаИтогоДДС = Новый Массив;    // бюджет ДДС
				Для каждого ТекМесяц Из ТекПериоды Цикл
					СуммаПП.Добавить(0);
					СуммаППЕд.Добавить(0);
					СуммаППДДС.Добавить(0);
					СуммаИтого.Добавить(0);
					СуммаИтогоЕд.Добавить(0);
					СуммаИтогоДДС.Добавить(0);
				КонецЦикла;
				
				ТекЗнач = 0;
				Для каждого ТекМесяц Из ТекПериоды Цикл
					ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекМесяц, Номенклатура.Номенклатура));
					Для каждого ТекДанные Из ОтобранныеСтроки Цикл
						Если НЕ ТекДанные.СтатьяЗатрат.ЭтоГруппа Тогда
							Если НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыОсн И НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыВсп  Тогда
								СуммаПП[ТекЗнач] = СуммаПП[ТекЗнач] + ТекДанные.СуммаСеб;
								СуммаППЕд[ТекЗнач] = СуммаППЕд[ТекЗнач] + ТекДанные.СуммаЕд;
								СуммаППДДС[ТекЗнач] = СуммаППДДС[ТекЗнач] + ТекДанные.СуммаБДДС;
							КонецЕсли;
							СуммаИтого[ТекЗнач] = СуммаИтого[ТекЗнач] + ТекДанные.СуммаСеб;
							СуммаИтогоЕд[ТекЗнач] = СуммаИтогоЕд[ТекЗнач] + ТекДанные.СуммаЕд;
							СуммаИтогоДДС[ТекЗнач] = СуммаИтогоДДС[ТекЗнач] + ТекДанные.СуммаБДДС;
							//КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					ТекЗнач = ТекЗнач + 1;
				КонецЦикла;
				
				ОбластьДанныеИтого2.Параметры.Итого = "Итого затраты на переработку:";
				ТабДок.Вывести(ОбластьДанныеИтого2, 0);
				ТекЗнач = 0;
				Для каждого ТекМесяц Из ТекПериоды Цикл
					ОбластьДанныеИтогоСтолбцы2.Параметры.Сумма = СуммаПП[ТекЗнач];
					ОбластьДанныеИтогоСтолбцы2.Параметры.Наед = СуммаППЕд[ТекЗнач];
					ОбластьДанныеИтогоСтолбцы2.Параметры.СуммаБДДС = СуммаППДДС[ТекЗнач];
					
					ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы2, 0);	
					ТекЗнач = ТекЗнач + 1;
				КонецЦикла; 
				
				ОбластьДанныеИтого2.Параметры.Итого = "Итого:";
				ТабДок.Вывести(ОбластьДанныеИтого2, 0);
				ТекЗнач = 0;
				Для каждого ТекМесяц Из ТекПериоды Цикл
					ОбластьДанныеИтогоСтолбцы2.Параметры.Сумма = СуммаИтого[ТекЗнач];
					ОбластьДанныеИтогоСтолбцы2.Параметры.Наед = СуммаИтогоЕд[ТекЗнач];	
					ОбластьДанныеИтогоСтолбцы2.Параметры.СуммаБДДС = СуммаИтогоДДС[ТекЗнач];	
					
					ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы2, 0);	
					ТекЗнач = ТекЗнач + 1;
				КонецЦикла;
			КонецЦикла;				
			
			//реестр ПР
			Если ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат Тогда
				
				ПечатьПредставительскихРасходовБДДС(ТабДок, ДокументОбъект, ТипБюджета);	
				
			КонецЕсли;
			
			
			//закомментированно di 30.08.13
			//Для каждого ТекМесяц Из ТекПериоды Цикл
			//	ОтобранныеСтроки = ДокументОбъект.ПР.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
			//	СуммаБДДС = 0;
			//	Для каждого ТекДанные Из ОтобранныеСтроки Цикл
			//		СуммаБДДС = СуммаБДДС + ТекДанные.СуммаБДДС;
			//	КонецЦикла;
			//	ОбластьДанныеИтогоСтолбцы.Параметры.Сумма = СуммаБДДС;
			//	ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);		
			//КонецЦикла; 
			
		Иначе //БДР проектов
			
			ТабДок.НачатьАвтоГруппировкуСтрок();
			
			ОбластьШапкаБДР.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
			ОбластьШапкаБДР.Параметры.Предприятия = ИсходныеДанные.Предприятие;
			
			ТабДок.Вывести(ОбластьШапкаБДР, 0);
			
			Для каждого ТекСтрока Из ТекПериоды Цикл
				ОбластьШапкаСтолбцыБДР.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
				ТабДок.Присоединить(ОбластьШапкаСтолбцыБДР, 0);	
			КонецЦикла;		
			
			МассивТЧ = Новый Массив;
			
			ТЧЗатр = ДокументОбъект.Затраты.Выгрузить();
			Для Каждого СтрокаОБ Из ТаблицаОперативныхБюджетов Цикл
				НоваяСтрокаЗатрат = ТЧЗатр.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЗатрат, СтрокаОБ);
			КонецЦикла;
			ТЧЗатр.Колонки.Добавить("Код");		
			МассивТЧ.Добавить(ТЧЗатр);
			
			ТЧКП = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
			Для Каждого СтрокаОБ Из ТаблицаОперативныхБюджетовКП Цикл
				НоваяСтрокаКорректировок = ТЧКП.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаКорректировок, СтрокаОБ);
			КонецЦикла;
			ТЧКП.Колонки.Добавить("Код");
			МассивТЧ.Добавить(ТЧКП);
			
			ТЧПР = ДокументОбъект.ПР.Выгрузить();
			ТЧПР.Колонки.Добавить("СтатьяЗатрат");
			ТЧПР.Колонки.Добавить("СуммаСеб");
			ТЧПР.Колонки.Добавить("Код");
			ТЧПР.Колонки.Добавить("НаЕдиницу");
			Для каждого ТекСтрока Из ТЧПР Цикл
				ТекСтрока.СуммаСеб = ТекСтрока.СуммаФР;
				ТекСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше;
				ТекСтрока.НаЕдиницу = Ложь;
			КонецЦикла; 
			МассивТЧ.Добавить(ТЧПР);
			
			ТЗ2 = ДокументОбъект.Затраты.Выгрузить();
			ТЗ2.Колонки.Добавить("Код");
			ТЗ2.Очистить();
			
			Для Каждого ТекТЧ Из МассивТЧ Цикл				
				Для каждого ТекСтрока Из ТекТЧ Цикл
					НоваяСтрока = ТЗ2.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				КонецЦикла; 			
			КонецЦикла;
			
			Для каждого ТекСтрока Из ТЗ2 Цикл
				Если НЕ ТекСтрока.СтатьяЗатрат.Родитель.Пустая() Тогда
					НоваяСтрока = ТЗ2.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.СтатьяЗатрат = ТекСтрока.СтатьяЗатрат.Родитель;
					НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
				КонецЕсли;
				Если НЕ ТекСтрока.СтатьяЗатрат.Пустая() Тогда
					ТекСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
				КонецЕсли;
			КонецЦикла; 
			
			// 22.08.13 di
			ПроверитьСоответствиеСтатей(ТЗ2);
			
			ТЗ = ТЗ2.Скопировать();
			
			
			ТЗ4 = ТЗ2.Скопировать();
			ТЗ4.Свернуть("СтатьяЗатрат, Код, Основание, Цена", "СуммаСеб, СуммаБДДС, Количество");
			
			ТЗ2.Свернуть("СтатьяЗатрат, Код");
			ТЗ2.Сортировать("Код Возр");	
			
			Для каждого ТекСтрока Из ТЗ2 Цикл // группировка по статьям
				
				Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат) Тогда
					
					Ур = ТекСтрока.СтатьяЗатрат.ЭтоГруппа + ТекСтрока.СтатьяЗатрат.Родитель.Пустая();
					Если Ур Тогда
						ТекОбл1 = ОбластьДанныеБДР;
						ТекОбл2 = ОбластьДанныеСтолбцыБДР;
						Ур2 = 1;
					Иначе
						ТекОбл1 = ОбластьДанныеБДР2;
						ТекОбл2 = ОбластьДанныеСтолбцыБДР2;
						Ур2 = 0;
					КонецЕсли;
					ТекОбл1.Параметры.Заполнить(ТекСтрока);
					ТабДок.Вывести(ТекОбл1, 1 - Ур2,,);
					Для каждого ТекМесяц Из ТекПериоды Цикл
						ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Месяц", ТекСтрока.СтатьяЗатрат, ТекМесяц));
						СуммаСС = 0; СуммаБДДС = 0; // di бюджет ДДС
						Для каждого ТекДанные Из ОтобранныеСтроки Цикл
							СуммаСС = СуммаСС + ?(ТекДанные.СтатьяБДДС.Доход, -ТекДанные.СуммаСеб,  ТекДанные.СуммаСеб); 
							СуммаБДДС = СуммаБДДС + ?(ТекДанные.СтатьяБДДС.Доход, -ТекДанные.СуммаБДДС, ТекДанные.СуммаБДДС); // бюджет ДДС
						КонецЦикла;
						ТекОбл2.Параметры.Сумма = СуммаСС;
						ТекОбл2.Параметры.СуммаБДДС = СуммаБДДС;       // бюджет ДДС
						ТабДок.Присоединить(ТекОбл2, 1 - Ур2,,);
						
					КонецЦикла;
					
					Если НЕ ТекСтрока.СтатьяЗатрат.ЭтоГруппа Тогда
						ОтобранныеСтроки = ТЗ4.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекСтрока.СтатьяЗатрат));
						Для каждого ТекСтрокаОсн Из ОтобранныеСтроки Цикл
							ОбластьДанныеБДР3.Параметры.СтатьяЗатрат = ТекСтрокаОсн.Основание;
							Если ТипЗнч(ТекСтрокаОсн.СтатьяЗатрат) = Тип("СправочникСсылка.Стр_Задачи") Тогда
								ОбластьДанныеБДР3.Параметры.ЕдИзм = ТекСтрокаОсн.СтатьяЗатрат.ЕдИзм;
							КонецЕсли;
							ОбластьДанныеБДР3.Параметры.Количество = ТекСтрокаОсн.Количество;
							ОбластьДанныеБДР3.Параметры.Цена = ТекСтрокаОсн.Цена;
							
							ТабДок.Вывести(ОбластьДанныеБДР3, 2,,);
							Для каждого ТекМесяц Из ТекПериоды Цикл
								ОтобранныеСтроки2 = ТЗ.НайтиСтроки(Новый Структура("СтатьяЗатрат, Основание, Месяц", ТекСтрокаОсн.СтатьяЗатрат, ТекСтрокаОсн.Основание, ТекМесяц));
								ОбластьДанныеСтолбцыБДР3.Параметры.Сумма = 0;
								ОбластьДанныеСтолбцыБДР3.Параметры.СуммаБДДС = 0; // бюджет ДДС
								Для каждого ТекТТ Из ОтобранныеСтроки2 Цикл				
									ОбластьДанныеСтолбцыБДР3.Параметры.Сумма = ОбластьДанныеСтолбцыБДР3.Параметры.Сумма + ТекТТ.СуммаСеб;
									ОбластьДанныеСтолбцыБДР3.Параметры.СуммаБДДС = ОбластьДанныеСтолбцыБДР3.Параметры.СуммаБДДС + ТекТТ.СуммаБДДС;	 // бюджет ДДС		
								КонецЦикла; 
								ТабДок.Присоединить(ОбластьДанныеСтолбцыБДР3, 2,,);
							КонецЦикла; 
						КонецЦикла; 
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			
			СуммаПП = Новый Массив;
			СуммаППДДС = Новый Массив;    // бюджет ДДС   
			СуммаИтого = Новый Массив;
			СуммаИтогоДДС = Новый Массив;    // бюджет ДДС
			Для каждого ТекМесяц Из ТекПериоды Цикл
				СуммаПП.Добавить(0);
				СуммаППДДС.Добавить(0);
				СуммаИтого.Добавить(0);
				СуммаИтогоДДС.Добавить(0);
			КонецЦикла;
			
			ТекЗнач = 0;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОтобранныеСтроки = ТЗ.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
				Для каждого ТекДанные Из ОтобранныеСтроки Цикл
					Если НЕ ТекДанные.СтатьяЗатрат.ЭтоГруппа Тогда
						//Если НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыОсн И НЕ ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ЗатратыВсп  Тогда
							СуммаПП[ТекЗнач] = СуммаПП[ТекЗнач] + + ?(ТекДанные.СтатьяБДДС.Доход, ТекДанные.СуммаСеб, -ТекДанные.СуммаСеб);
							СуммаППДДС[ТекЗнач] = СуммаППДДС[ТекЗнач] + ?(ТекДанные.СтатьяБДДС.Доход, ТекДанные.СуммаБДДС, -ТекДанные.СуммаБДДС);
						//КонецЕсли;
						СуммаИтого[ТекЗнач] = СуммаИтого[ТекЗнач] + ?(ТекДанные.СтатьяБДДС.Доход, ТекДанные.СуммаСеб, -ТекДанные.СуммаСеб);
						СуммаИтогоДДС[ТекЗнач] = СуммаИтогоДДС[ТекЗнач] + ?(ТекДанные.СтатьяБДДС.Доход, ТекДанные.СуммаБДДС, -ТекДанные.СуммаБДДС);
					КонецЕсли;
				КонецЦикла;
				ТекЗнач = ТекЗнач + 1;
			КонецЦикла;
			
			ТабДок.Вывести(ОбластьДанныеИтогоБДР, 0);
			ТекЗнач = 0;
			Для каждого ТекМесяц Из ТекПериоды Цикл
				ОбластьДанныеИтогоСтолбцыБДР.Параметры.Сумма = СуммаПП[ТекЗнач];
				ОбластьДанныеИтогоСтолбцыБДР.Параметры.СуммаБДДС = СуммаППДДС[ТекЗнач];		
				ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцыБДР, 0);	
				ТекЗнач = ТекЗнач + 1;
			КонецЦикла; 
			
			
			//реестр ПР
			Если ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат Тогда
				
				ПечатьПредставительскихРасходовБДР(ТабДок, ДокументОбъект, ТипБюджета);	
				
			КонецЕсли;
		КонецЕсли;
		РассчитатьБДДС(ТабДок, ДокументОбъект, ТекБП);
		ТабДок.ЗакончитьАвтоГруппировкуСтрок();
	КонецЕсли;
	
	// 23.07.13 di
	Если Не ЗначениеЗаполнено(ТекКоманда) Тогда
		Если Не ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда 
			ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
		Иначе
			Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетКорректировки");
			ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

Процедура ПечатьПоУмолчанию(ТабДок, ПараметрКоманды, ТипБюджета) Экспорт
	
	Если ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатратСтарый Тогда
		Документы.Д_Бюджет.РечатьСебестоимостьСервер(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗакупок Тогда 
		Документы.Д_Бюджет.РассчитатьСырье(ТабДок, ПараметрКоманды, ТипБюджета);	
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетИнвестиций Тогда 
		Документы.Д_Бюджет.РассчитатьИнвестиции(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПродаж Тогда 
		Документы.Д_Бюджет.РасчитатьПродажи(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда 
		Документы.Д_Бюджет.ПечатьКорректировки(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиИнвестиций(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиПредставительские(ТабДок, ПараметрКоманды, ТипБюджета);	
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводства Тогда 
		Документы.Д_Бюджет.РечатьОбъемПроизводства(ТабДок, ПараметрКоманды, ТипБюджета);
	ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат Тогда 
		Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, ПараметрКоманды, ТипБюджета);	
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьБДДС(ТабДок, ДокументОбъект, ТекБП = Неопределено) Экспорт
	
	Если ТекБП = Неопределено Тогда
		ТекБППараметр = БПСервер.ПоискБП("УтверждениеБюджета", ДокументОбъект);
	Иначе 
		ТекБППараметр = ТекБП;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Д_БюджетЗатраты.СтатьяБДДС.Доход
	               |			ТОГДА Д_БюджетЗатраты.СуммаБДДС
	               |		ИНАЧЕ -Д_БюджетЗатраты.СуммаБДДС
	               |	КОНЕЦ КАК СуммаБДДС,
	               |	ВЫБОР
	               |		КОГДА Д_БюджетЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатраты.СтатьяБДДС
	               |	КОНЕЦ КАК СтатьяБДДС,
	               |	Д_БюджетЗатраты.СтатьяЗатрат,
	               |	Д_БюджетЗатраты.Месяц,
	               |	Д_БюджетЗатраты.Основание,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатраты.СтатьяБДДС
	               |	КОНЕЦ).Уровень КАК Уровень,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатраты.СтатьяБДДС
	               |	КОНЕЦ).Код КАК Код
	               |ИЗ
	               |	Документ.Д_Бюджет.Затраты КАК Д_БюджетЗатраты
	               |ГДЕ
	               |	Д_БюджетЗатраты.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СУММА(ВЫБОР
	               |			КОГДА Д_БюджетЗатратыКП.СтатьяБДДС.Доход
	               |				ТОГДА Д_БюджетЗатратыКП.СуммаБДДС
	               |			ИНАЧЕ -Д_БюджетЗатратыКП.СуммаБДДС
	               |		КОНЕЦ),
	               |	ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ,
	               |	Д_БюджетЗатратыКП.СтатьяЗатрат,
	               |	Д_БюджетЗатратыКП.Месяц,
	               |	Д_БюджетЗатратыКП.Основание,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ).Уровень,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ).Код
	               |ИЗ
	               |	Документ.Д_Бюджет.ЗатратыКП КАК Д_БюджетЗатратыКП
	               |ГДЕ
	               |	Д_БюджетЗатратыКП.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_БюджетЗатратыКП.СтатьяЗатрат,
	               |	Д_БюджетЗатратыКП.Месяц,
	               |	Д_БюджетЗатратыКП.Основание,
	               |	ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ).Уровень,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетЗатратыКП.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетЗатратыКП.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетЗатратыКП.СтатьяБДДС
	               |	КОНЕЦ).Код
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СУММА(-Д_БюджетПР.СуммаБДДС),
	               |	Д_БюджетПР.СтатьяПР,
	               |	Неопределено,
	               |	Д_БюджетПР.Месяц,
	               |	Д_БюджетПР.Основание,
	               |	Д_БюджетПР.СтатьяПР.Уровень,
	               |	Д_БюджетПР.СтатьяПР.Код
	               |ИЗ
	               |	Документ.Д_Бюджет.ПР КАК Д_БюджетПР
	               |ГДЕ
	               |	Д_БюджетПР.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_БюджетПР.СтатьяПР,
	               |	Д_БюджетПР.Основание,
	               |	Д_БюджетПР.Месяц,
	               |	Д_БюджетПР.СтатьяПР.Уровень,
	               |	Д_БюджетПР.СтатьяПР.Код
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СУММА(-Д_БюджетИнвестиции.СуммаБДДС),
	               |	Д_БюджетИнвестиции.СтатьяБДДС,
	               |	NULL,
	               |	Д_БюджетИнвестиции.Месяц,
	               |	Д_БюджетИнвестиции.Основание,
	               |	Д_БюджетИнвестиции.СтатьяБДДС.Уровень,
	               |	Д_БюджетИнвестиции.СтатьяБДДС.Код
	               |ИЗ
	               |	Документ.Д_Бюджет.Инвестиции КАК Д_БюджетИнвестиции
	               |ГДЕ
	               |	Д_БюджетИнвестиции.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Д_БюджетИнвестиции.Основание,
	               |	Д_БюджетИнвестиции.СтатьяБДДС,
	               |	Д_БюджетИнвестиции.Месяц,
	               |	Д_БюджетИнвестиции.СтатьяБДДС.Уровень,
	               |	Д_БюджетИнвестиции.СтатьяБДДС.Код
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат.СтатьяБДДС.Доход
	               |			ТОГДА Д_БюджетПрочихПроектовЗатраты.СуммаБДДС
	               |		ИНАЧЕ -Д_БюджетПрочихПроектовЗатраты.СуммаБДДС
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС
	               |	КОНЕЦ,
	               |	Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат,
	               |	Д_БюджетПрочихПроектовЗатраты.Месяц,
	               |	Д_БюджетПрочихПроектовЗатраты.Основание,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС
	               |	КОНЕЦ).Уровень,
	               |	(ВЫБОР
	               |		КОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	               |			ТОГДА Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат.СтатьяБДДС
	               |		ИНАЧЕ Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС
	               |	КОНЕЦ).Код
	               |ИЗ
	               |	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
	               |ГДЕ
	               |	Д_БюджетПрочихПроектовЗатраты.БизнесПроцесс = &ТекБП
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Д_БюджетКредиты.Поступление,
	               |	&КредитыПолученные,
	               |	NULL,
	               |	Д_БюджетКредиты.Месяц,
	               |	Д_БюджетКредиты.Основание,
	               |	1,
	               |	""1600.01""
	               |ИЗ
	               |	Документ.Д_Бюджет.Кредиты КАК Д_БюджетКредиты
	               |ГДЕ
	               |	Д_БюджетКредиты.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	-Д_БюджетКредиты.Гашение,
	               |	&ВозвратКредитов,
	               |	NULL,
	               |	Д_БюджетКредиты.Месяц,
	               |	Д_БюджетКредиты.Основание,
	               |	2,
	               |	""2220.01""
	               |ИЗ
	               |	Документ.Д_Бюджет.Кредиты КАК Д_БюджетКредиты
	               |ГДЕ
	               |	Д_БюджетКредиты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТекБП", ТекБППараметр);
	Запрос.УстановитьПараметр("КредитыПолученные", Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("1600.01"));
	Запрос.УстановитьПараметр("ВозвратКредитов", Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("1600.01"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	Шапка7 = Макет.ПолучитьОбласть("Начало4|Шапка7");
	ШапкаСт = Макет.ПолучитьОбласть("СтолбецДДС|Шапка7");
	МассивСтрок = Новый Массив;
	
	ДатаНачала = НачалоМесяца(ДокументОбъект.Сценарий.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ДокументОбъект.Сценарий.ДатаКонца);
	
	Выборка.Свернуть("Месяц, СтатьяБДДС, Уровень, Код, Основание", "СуммаБДДС");
	Выборка.Сортировать("Месяц Возр, Код Возр");
	Месяцы = Выборка.Скопировать();
	Месяцы.Свернуть("Месяц", "СуммаБДДС");
	Месяцы.Сортировать("Месяц Возр");
	Статьи = Выборка.Скопировать();
	Статьи.Свернуть("СтатьяБДДС, Уровень, Код", "СуммаБДДС");
	Статьи.Сортировать("Код Возр");
	
	Для каждого ТекСтрока Из Статьи Цикл
		Если ЗначениеЗаполнено(ТекСтрока.СтатьяБДДС) Тогда
			ТекРодитель = ТекСтрока.СтатьяБДДС.Родитель;
			Пока ЗначениеЗаполнено(ТекРодитель) Цикл
				НоваяСтрока = Статьи.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СтатьяБДДС = ТекРодитель;
				НоваяСтрока.Уровень = ТекРодитель.Уровень;
				НоваяСтрока.Код = ТекРодитель.Код;
				ТекРодитель = ТекРодитель.Родитель;
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла; 
	Статьи.Свернуть("СтатьяБДДС, Уровень, Код", "СуммаБДДС");
	Статьи.Сортировать("Код Возр");
	
	СтатьиМесяцы = Выборка.Скопировать();
	СтатьиМесяцы.Свернуть("Месяц, СтатьяБДДС, Уровень, Код", "СуммаБДДС");
	СтатьиМесяцы.Сортировать("Месяц Возр, Код Возр");
	
	Для каждого ТекСтрока Из СтатьиМесяцы Цикл
		Если НЕ ТекСтрока.СтатьяБДДС.ЭтоГруппа Тогда
			ТекРодитель = ТекСтрока.СтатьяБДДС.Родитель;
			Пока ЗначениеЗаполнено(ТекРодитель) Цикл
				НоваяСтрока = СтатьиМесяцы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.СтатьяБДДС = ТекРодитель;
				НоваяСтрока.Уровень = ТекРодитель.Уровень;
				НоваяСтрока.Код = ТекРодитель.Код;
				ТекРодитель = ТекРодитель.Родитель;
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла; 
	СтатьиМесяцы.Свернуть("Месяц, СтатьяБДДС, Уровень, Код", "СуммаБДДС");
	СтатьиМесяцы.Сортировать("Месяц Возр, Код Возр");
	
	СтатьиОснования  = Выборка.Скопировать();
	СтатьиОснования.Свернуть("СтатьяБДДС, Уровень, Код, Основание", "СуммаБДДС");
	//заголовок
	Шапка7.Параметры.Сценарий = ДокументОбъект.Сценарий;
	Шапка7.Параметры.Предприятия = ДокументОбъект.Предприятие;
	
	ТабДок.Вывести(Шапка7);
	Для каждого ТекПериод Из Месяцы Цикл
		ТекДата = ДобавитьМесяц(ДатаНачала, Месяц(ТекПериод.Месяц) - Месяц(ДатаНачала));
		ШапкаСт.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекПериод.Месяц), КонецМесяца(ТекПериод.Месяц));
		ТабДок.Присоединить(ШапкаСт);
	КонецЦикла;
	
	//тело
	Для каждого ТекСтрока Из Статьи Цикл
		
		ТекущийУровень = ?(ЗначениеЗаполнено(ТекСтрока.Уровень), ТекСтрока.Уровень, 0);
		
		ТекОблСт = Макет.ПолучитьОбласть("Начало4|Строка3" + Строка(ТекущийУровень));
		ТекОблСт2 = Макет.ПолучитьОбласть("СтолбецДДС|Строка3" + Строка(ТекущийУровень));
		
		ТекущаяСтатья =  ?(ЗначениеЗаполнено(ТекСтрока.СтатьяБДДС), ТекСтрока.СтатьяБДДС, Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());
		
		ТекОблСт.Параметры.СтатьяЗатрат = ТекущаяСтатья;
		ТабДок.Вывести(ТекОблСт, ТекущийУровень);
		Для каждого ТекПериод Из Месяцы Цикл
			СтруктураПоиска = Новый Структура("Месяц, СтатьяБДДС", ТекПериод.Месяц, ТекущаяСтатья); 
			ОтобранныеСтроки = СтатьиМесяцы.НайтиСтроки(СтруктураПоиска);
			ТекОблСт2.Параметры.Сумма = 0;
			Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
				ТекОблСт2.Параметры.Сумма = ТекСтрока2.СуммаБДДС;
			КонецЦикла;
			ТабДок.Присоединить(ТекОблСт2, ТекущийУровень);
		КонецЦикла;
		
		//расшифровка
		СуммаСт2 = 0;
		СтруктураПоиска = Новый Структура("СтатьяБДДС", ТекущаяСтатья);
		ОтобранныеСтроки = СтатьиОснования.НайтиСтроки(СтруктураПоиска);
		ТекОбл = Макет.ПолучитьОбласть("Начало4|Строка35");
		ТекОбл2 = Макет.ПолучитьОбласть("СтолбецДДС|Строка35");
		Для каждого ТекСтрока3 Из ОтобранныеСтроки Цикл
			ТекОбл.Параметры.СтатьяЗатратРасшифровка = ТекСтрока3.Основание;
			ТабДок.Вывести(ТекОбл, 5,, Ложь);
			Для каждого ТекПериод Из Месяцы Цикл
				СтруктураПоиска = Новый Структура("Месяц, СтатьяБДДС, Основание", ТекПериод.Месяц, ТекущаяСтатья, ТекСтрока3.Основание); 
				ОтобранныеСтроки = Выборка.НайтиСтроки(СтруктураПоиска);
				ТекОбл2.Параметры.Сумма = 0;
				Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
					ТекОбл2.Параметры.Сумма = ТекСтрока2.СуммаБДДС;
					СуммаСт2 = СуммаСт2 + ТекСтрока2.СуммаБДДС;
				КонецЦикла;
				ТабДок.Присоединить(ТекОбл2, 5,, Ложь);
			КонецЦикла;
			
		КонецЦикла; 
		
		ТекОблСт2.Параметры.Сумма = СуммаСт2;
		
	КонецЦикла;
	
	//подвал
	ТекОбл = Макет.ПолучитьОбласть("Начало4|Строка25");
	ТекОбл2 = Макет.ПолучитьОбласть("СтолбецДДС|Строка25");
	//ТекОбл.Параметры.СтатьяЗатрат = "Итого:";
	ТабДок.Вывести(ТекОбл, 0);
	Для каждого ТекПериод Из Месяцы Цикл
		ТекОбл2.Параметры.Сумма = ТекПериод.СуммаБДДС;
		ТабДок.Присоединить(ТекОбл2, 0);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьСоответствиеСтатей(ТЗ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК СтатьяБДР,
	|	СтатьиЗатрат.СтатьяБДДС
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.ЭтоГруппа = ЛОЖЬ";
	Результат = Запрос.Выполнить();			
	СоответствиеСтатей = Результат.Выгрузить();
	
	Для Каждого Строка Из ТЗ Цикл
		
		Если ТипЗнч(Строка.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") ИЛИ ТипЗнч(Строка.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиДоходовРасходов") Тогда
			
			Если Строка.СтатьяЗатрат.СтатьяБДДС = Строка.СтатьяБДДС ИЛИ ЗначениеЗаполнено(Строка.СтатьяБДДС) = Ложь ИЛИ ЗначениеЗаполнено(Строка.СтатьяЗатрат.СтатьяБДДС) = Ложь ИЛИ Строка.СтатьяЗатрат.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаСоответствия = СоответствиеСтатей.Найти(Строка.СтатьяБДДС, "СтатьяБДДС");		
			Если СтрокаСоответствия = Неопределено Тогда
				// неопределенная статья
				Продолжить;
			КонецЕсли;
			
			Строка.СтатьяЗатрат = СтрокаСоответствия.СтатьяБДР;
			Если Не Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду(Строка.Код) = Неопределено И Не Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду(Строка.Код) = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка() Тогда
				Строка.Код = СтрокаСоответствия.СтатьяБДР.Код;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьПредставительскихРасходовБДР(ТабДок, ДокументОбъект, ТипБюджета) Экспорт
	//реестр ПР
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
	
	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка3|Начало3");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка3|Столбец3");
	ОбластьДанные = Макет.ПолучитьОбласть("Строка8|Начало3");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка8|Столбец3");
	
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка7|Начало3");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка7|Столбец3");
	
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	
	ТабДок.Вывести(ОбластьШапка);
	
	
	
	Для каждого ТекСтрока Из ТекПериоды Цикл
		ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
		ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
	КонецЦикла;
	
	ТЗ = ДокументОбъект.ПР.Выгрузить();
	ТЗ.Свернуть("Основание, ЧЗ");
	
	// di 30.08.13 корректировки ПР
	ТЗ_ИтогПРМес = Новый ТаблицаЗначений;
	ТЗ_ИтогПРМес.Колонки.Добавить("Месяц");
	ТЗ_ИтогПРМес.Колонки.Добавить("Сумма");
	
	ТЗ_ПР = ДокументОбъект.ПР.Выгрузить();
	ТЗ_ПР.Свернуть("СтатьяПР, Основание, Месяц", "СуммаБДДС");
	
	Для каждого ТекСтрока Из ТЗ Цикл
		ОбластьДанные.Параметры.Заполнить(ТекСтрока);
		
		ТабДок.Вывести(ОбластьДанные);
		Для каждого ТекМесяц Из ТекПериоды Цикл
			
			НСтрМес = ТЗ_ИтогПРМес.Добавить();
			НСтрМес.Месяц = ТекМесяц;
			НСтрМес.Сумма = 0;
			
			ОтобранныеСтроки = ТЗ_ПР.НайтиСтроки(Новый Структура("Основание, Месяц", ТекСтрока.Основание, ТекМесяц));
			СуммаБДДС = 0;
			
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				
				// di 30.08.13 корректировки ПР
				ТЧ_Корр = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
				ОтобранныеСтрокиКорректировки = ТЧ_Корр.НайтиСтроки(Новый Структура("СтатьяБДДС, Основание, Месяц", ТекДанные.СтатьяПР, ТекДанные.Основание, ТекДанные.Месяц));
				СуммаБДДСКорр = ТекДанные.СуммаБДДС;
				Для Каждого ТекСтрКорр Из ОтобранныеСтрокиКорректировки Цикл
					СуммаБДДСКорр = СуммаБДДСКорр + ТекСтрКорр.СуммаБДДС;
				КонецЦикла;
				//
				
				СуммаБДДС = СуммаБДДС + СуммаБДДСКорр;
				
			КонецЦикла;
			
			НСтрМес.Сумма = НСтрМес.Сумма + СуммаБДДС;
			ОбластьДанныеСтолбцы.Параметры.Сумма = СуммаБДДС;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
		КонецЦикла; 
	КонецЦикла;
	
	// 30.08.13 di нет в ПР, но есть в корректировках
	
	Для каждого ТекМесяц Из ТекПериоды Цикл
		
		НСтрМес = ТЗ_ИтогПРМес.Добавить();
		НСтрМес.Месяц = ТекМесяц;
		НСтрМес.Сумма = 0;
		ТЧ_Корр = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
		ОтобранныеСтроки = ТЧ_Корр.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
		ТЗ_ТолькоКорректировкиПР = ДокументОбъект.ЗатратыКП.Выгрузить();
		ТЗ_ТолькоКорректировкиПР.Очистить();
		
		Для каждого ТекДанные Из ОтобранныеСтроки Цикл
			
			Если Не ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ТекДанные.СтатьяБДДС.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2210.") Тогда
				Продолжить;
			КонецЕсли;
			
			Если ДокументОбъект.ПР.НайтиСтроки(Новый Структура("СтатьяПР, Основание", ТекДанные.СтатьяБДДС, ТекДанные.Основание)).Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НСтр = ТЗ_ТолькоКорректировкиПР.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, ТекДанные);
			
		КонецЦикла;
		
		ТЗ_ТолькоКорректировкиПР.Свернуть("СтатьяЗатрат, СтатьяБДДС, Основание, Месяц", "СуммаБДДС");
		
		Для Каждого Стр Из ТЗ_ТолькоКорректировкиПР Цикл
			
			ОбластьДанные.Параметры.Заполнить(Стр);
			ТабДок.Вывести(ОбластьДанные);
			НСтрМес.Сумма = НСтрМес.Сумма + Стр.СуммаБДДС;
			ОбластьДанныеСтолбцы.Параметры.Сумма = Стр.СуммаБДДС;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
			
		КонецЦикла;
		
	КонецЦикла; 
	
	ТЗ_ИтогПРМес.Свернуть("Месяц", "Сумма");
	
	ТабДок.Вывести(ОбластьДанныеИтого);
	Для Каждого Стр Из ТЗ_ИтогПРМес Цикл
		ОбластьДанныеИтогоСтолбцы.Параметры.Сумма = Стр.Сумма;
		ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);	
	КонецЦикла;
	
	Если ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов ИЛИ ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда 
		ПоказатьРецензентов(Макет, ТабДок, ДокументОбъект, ТипБюджета)
	КонецЕсли;
		
		
		
КонецПроцедуры

Процедура ПечатьПредставительскихРасходовБДДС(ТабДок, ДокументОбъект, ТипБюджета) Экспорт
	
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	Макет = Документы.Д_Бюджет.ПолучитьМакет("МакетЗатраты");
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(ДокументОбъект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", ДокументОбъект.Предприятие);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", ДокументОбъект.Сценарий);
	ТекПериоды = Новый Массив;
	ДатаНачала = НачалоМесяца(ИсходныеДанные.Сценарий1.ДатаНачала + 60 * 60 * 24);
	ДатаОкончания = КонецМесяца(ИсходныеДанные.Сценарий1.ДатаКонца);
	ТекДата = ДатаНачала;
	
	Пока ТекДата <= ДатаОкончания Цикл
		ТекПериоды.Добавить(НачалоМесяца(ТекДата));
		ТекДата = ДобавитьМесяц(ТекДата, 1);
	КонецЦикла;
	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка3|Начало3");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка3|Столбец3");
	ОбластьДанные = Макет.ПолучитьОбласть("Строка8|Начало3");
	ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка8|Столбец3");
	
	ОбластьДанныеИтого = Макет.ПолучитьОбласть("Строка7|Начало3");
	ОбластьДанныеИтогоСтолбцы = Макет.ПолучитьОбласть("Строка7|Столбец3");
	
	ОбластьШапка.Параметры.Сценарий = ИсходныеДанные.Сценарий1;
	ОбластьШапка.Параметры.Предприятия = ИсходныеДанные.Предприятие;
	ТабДок.Вывести(ОбластьШапка);
	
	
	
	Для каждого ТекСтрока Из ТекПериоды Цикл
		ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ТекСтрока), КонецМесяца(ТекСтрока));
		ТабДок.Присоединить(ОбластьШапкаСтолбцы);	
	КонецЦикла;
	
	ТЗ = ДокументОбъект.ПР.Выгрузить();
	ТЗ.Свернуть("Основание, ЧЗ");
	
	// di 30.08.13 корректировки ПР
	ТЗ_ИтогПРМес = Новый ТаблицаЗначений;
	ТЗ_ИтогПРМес.Колонки.Добавить("Месяц");
	ТЗ_ИтогПРМес.Колонки.Добавить("Сумма");
	
	ТЗ_ПР = ДокументОбъект.ПР.Выгрузить();
	ТЗ_ПР.Свернуть("СтатьяПР, Основание, Месяц", "СуммаБДДС");
	
	Для каждого ТекСтрока Из ТЗ Цикл
		ОбластьДанные.Параметры.Заполнить(ТекСтрока);
		
		ТабДок.Вывести(ОбластьДанные);
		Для каждого ТекМесяц Из ТекПериоды Цикл
			
			НСтрМес = ТЗ_ИтогПРМес.Добавить();
			НСтрМес.Месяц = ТекМесяц;
			НСтрМес.Сумма = 0;
			
			ОтобранныеСтроки = ТЗ_ПР.НайтиСтроки(Новый Структура("Основание, Месяц", ТекСтрока.Основание, ТекМесяц));
			СуммаБДДС = 0;
			
			Для каждого ТекДанные Из ОтобранныеСтроки Цикл
				
				// di 30.08.13 корректировки ПР
				ТЧ_Корр = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
				ОтобранныеСтрокиКорректировки = ТЧ_Корр.НайтиСтроки(Новый Структура("СтатьяБДДС, Основание, Месяц", ТекДанные.СтатьяПР, ТекДанные.Основание, ТекДанные.Месяц));
				СуммаБДДСКорр = ТекДанные.СуммаБДДС;
				Для Каждого ТекСтрКорр Из ОтобранныеСтрокиКорректировки Цикл
					СуммаБДДСКорр = СуммаБДДСКорр + ТекСтрКорр.СуммаБДДС;
				КонецЦикла;
				//
				
				СуммаБДДС = СуммаБДДС + СуммаБДДСКорр;
				
			КонецЦикла;
			
			НСтрМес.Сумма = НСтрМес.Сумма + СуммаБДДС;
			ОбластьДанныеСтолбцы.Параметры.Сумма = СуммаБДДС;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
		КонецЦикла; 
	КонецЦикла;
	
	// 30.08.13 di нет в ПР, но есть в корректировках
	
	Для каждого ТекМесяц Из ТекПериоды Цикл
		
		НСтрМес = ТЗ_ИтогПРМес.Добавить();
		НСтрМес.Месяц = ТекМесяц;
		НСтрМес.Сумма = 0;
        ТЧ_Корр = ЗаменитьСтроковуюНоменклатуру(ДокументОбъект.ЗатратыКП.Выгрузить());
		ОтобранныеСтроки = ТЧ_Корр.НайтиСтроки(Новый Структура("Месяц", ТекМесяц));
		ТЗ_ТолькоКорректировкиПР = ТЧ_Корр;
		ТЗ_ТолькоКорректировкиПР.Очистить();
		
		Для каждого ТекДанные Из ОтобранныеСтроки Цикл
			
			Если Не ТекДанные.СтатьяЗатрат = Справочники.СтатьиЗатрат.ПрСвыше Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ТекДанные.СтатьяБДДС.Родитель = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2210.") Тогда
				Продолжить;
			КонецЕсли;
			
			Если ДокументОбъект.ПР.НайтиСтроки(Новый Структура("СтатьяПР, Основание", ТекДанные.СтатьяБДДС, ТекДанные.Основание)).Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НСтр = ТЗ_ТолькоКорректировкиПР.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, ТекДанные);
			
		КонецЦикла;
		
		ТЗ_ТолькоКорректировкиПР.Свернуть("СтатьяЗатрат, СтатьяБДДС, Основание, Месяц", "СуммаБДДС");
		
		Для Каждого Стр Из ТЗ_ТолькоКорректировкиПР Цикл
			
			ОбластьДанные.Параметры.Заполнить(Стр);
			ТабДок.Вывести(ОбластьДанные);
			НСтрМес.Сумма = НСтрМес.Сумма + Стр.СуммаБДДС;
			ОбластьДанныеСтолбцы.Параметры.Сумма = Стр.СуммаБДДС;
			ТабДок.Присоединить(ОбластьДанныеСтолбцы);		
			
		КонецЦикла;
		
	КонецЦикла; 
	
	ТЗ_ИтогПРМес.Свернуть("Месяц", "Сумма");
	
	ТабДок.Вывести(ОбластьДанныеИтого);
	Для Каждого Стр Из ТЗ_ИтогПРМес Цикл
		ОбластьДанныеИтогоСтолбцы.Параметры.Сумма = Стр.Сумма;
		ТабДок.Присоединить(ОбластьДанныеИтогоСтолбцы);	
	КонецЦикла;
	
КонецПроцедуры

Процедура Печать(ТабДок, ТекБП, ТипБюджета, ТабДокФР = Неопределено, ТабДокДДС = Неопределено) Экспорт
	
	Если ТипЗнч(ТекБП) = Тип("Массив") Тогда
		ПараметрКоманды = ТекБП[0].Заявка;
	Иначе
		ПараметрКоманды = ТекБП.Заявка;
	КонецЕсли;
	
	Если ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатратСтарый Тогда
		Документы.Д_Бюджет.РечатьСебестоимостьСервер(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗакупок Тогда 
		Документы.Д_Бюджет.РассчитатьСырье(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);	
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетИнвестиций Тогда 
		Документы.Д_Бюджет.РассчитатьИнвестиции(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПродаж Тогда 
		Документы.Д_Бюджет.РасчитатьПродажи(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда 
		//Документы.Д_Бюджет.ПечатьКорректировки(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
		
		Если ПараметрКоманды.БезБюджетаПроизводства Тогда
			ТабДок = БюджетныйНаСервере.ВернутьТабличныйДокументДляСогласователей(ТекБП)
		Иначе
			Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, ПараметрКоманды, ТекБП, ТабДокФР, ТабДокДДС)
		КонецЕсли;
		
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиИнвестиций(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводства Тогда 
		Документы.Д_Бюджет.РечатьОбъемПроизводства(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат ИЛИ ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетТекущихЗатрат Тогда 
		
		Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_Бюджет") Тогда
			
			Если ПараметрКоманды.БезБюджетаПроизводства Тогда
				ТабДок = БюджетныйНаСервере.ВернутьТабличныйДокументДляСогласователей(ТекБП)
			Иначе
				Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, ПараметрКоманды, ТекБП, ТабДокФР, ТабДокДДС)
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.Д_БюджетПрочихПроектов") Тогда 
			БюджетныйНаСервере.УниверсальнаяПечатьСервер(ТабДок, ПараметрКоманды);	
		КонецЕсли;
		
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов Тогда 
		Документы.Д_Бюджет.ПечатьПредставительскихРасходовБДР(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	ИначеЕсли ТекБП.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиПредставительские(ТабДок, ПараметрКоманды, ТекБП.ТипБюджета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьОперативныеБюджеты(МассивТЧ, Бюджет, БизнесПроцесс)
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.УтверждениеБюджета") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Д_БюджетПрочихПроектовЗатраты.Ссылка,
		|	Д_БюджетПрочихПроектовЗатраты.НомерСтроки,
		|	Д_БюджетПрочихПроектовЗатраты.Признак,
		|	Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат,
		|	Д_БюджетПрочихПроектовЗатраты.СуммаСеб,
		|	Д_БюджетПрочихПроектовЗатраты.СуммаБДДС,
		|	Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС,
		|	Д_БюджетПрочихПроектовЗатраты.Источник,
		|	Д_БюджетПрочихПроектовЗатраты.Подразделение,
		|	Д_БюджетПрочихПроектовЗатраты.Основание,
		|	Д_БюджетПрочихПроектовЗатраты.ЦФО,
		|	Д_БюджетПрочихПроектовЗатраты.Месяц,
		|	Д_БюджетПрочихПроектовЗатраты.УИД,
		|	Д_БюджетПрочихПроектовЗатраты.Бюджет,
		|	Д_БюджетПрочихПроектовЗатраты.БизнесПроцесс,
		|	Д_БюджетПрочихПроектовЗатраты.Номенклатура,
		|	Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат.Код КАК Код
		|ИЗ
		|	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
		|ГДЕ
		|	Д_БюджетПрочихПроектовЗатраты.Бюджет = &Бюджет
		|	И Д_БюджетПрочихПроектовЗатраты.БизнесПроцесс = &БизнесПроцесс";
		
		Запрос.УстановитьПараметр("Бюджет", Бюджет);
		Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
		
		БулевоМассив = Новый Массив;
		БулевоМассив.Добавить(Тип("Булево"));
		БулевоТип = Новый ОписаниеТипов(БулевоМассив);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выгрузить();
		Выборка.Колонки.Добавить("НаЕдиницу", БулевоТип);
		//Выборка.Колонки.Добавить("Номенклатура");
		МассивТЧ.Добавить(Выборка);	 
	КонецЕсли;
		
КонецПроцедуры


Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" И ТипЗнч(Параметры) = Тип("Структура") И Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Если Параметры.Ключ.Сценарий.АктуальнаяДата < Дата(2014,10,1) Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "Документ.Д_Бюджет.Форма.ФормаДокумента";	 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаменитьСтроковуюНоменклатуру(ТЧ)
	
	Для каждого ТекСтрока Из ТЧ Цикл
		Если ТекСтрока.Номенклатура = "Простой" Тогда
			ТекСтрока.Номенклатура = Справочники.Номенклатура.Простой;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТЧ;
	
КонецФункции
