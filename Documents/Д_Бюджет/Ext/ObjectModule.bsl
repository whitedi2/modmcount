Перем ТаблицаПрозведенныхНоменклатур;
Перем ТаблицаРеализованныхНоменклатур;
Перем ТаблицаПрибыли;
Перем ТаблицаОперативныхБюджетов;
Перем ТаблицаОперативныхБюджетовКП;
Перем СпиртоваяБаза;

Процедура ДобавитьСтрокуПрибыли(Месяц, Сумма)
	НоваяСтрокаПрибыли = ТаблицаПрибыли.Добавить();
	НоваяСтрокаПрибыли.Месяц = Месяц;
	НоваяСтрокаПрибыли.Сумма = Сумма;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	//СогласованиеЗатрат.Очистить();	
	//СогласованиеЗакупок.Очистить();
	//СогласованиеИнвестиций.Очистить();
	//СогласованиеПродаж.Очистить();
	ДоступностьТЧ.Очистить();
	СценарийПП = ОбъектКопирования.Сценарий;
	Для каждого ТекСтрока Из Затраты Цикл
		ТекСтрока.КлючАналитикиБюджета = Неопределено;
		ТекСтрока.УИД = Неопределено;
	КонецЦикла;
	Для каждого ТекСтрока Из ЗатратыКП Цикл
		ТекСтрока.КлючАналитикиБюджета = Неопределено;
		ТекСтрока.КлючАналитикиСтрокиЗатрат = Неопределено;
		ТекСтрока.УИД = Неопределено;
	КонецЦикла; 

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СпиртоваяБаза = ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт();
	
	ТекОб = ЭтотОбъект.Ссылка.ПолучитьОбъект();
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Ссылка);
	//МассивПараметров.Добавить(РежимПроведения);
	//МассивПараметров.Добавить(Истина);
	//МассивПараметров.Добавить(ТекОб.Движения);
	//МассивПараметров.Добавить(ТекОб);
	
	
	//Если Константы.сабФоновоеПроведение.Получить()  Тогда
	//	ТекЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Конец", Номер, Дата('00010101000000')));
	//	Если НЕ ТекЗадания.Количество() Тогда
	//		Задание = ФоновыеЗадания.Выполнить("БюджетныйНаСервере.ПровестиСРежимом", МассивПараметров, Номер);
	//		Возврат;
	//	КонецЕсли;
	//	//Отказ = Истина;
	//КонецЕсли;
	
	
	ПровестиСРежимом(Отказ, РежимПроведения, Истина);	
	//
	
	//Добавляем ссылку на документ в регистр для дальнейшего перепроведения
	//НаборЗаписейДокументов = РегистрыСведений.РегистрДокументовБюджет.СоздатьНаборЗаписей();
	//ЗаписьДокумент = НаборЗаписейДокументов.Добавить();
	//ЗаписьДокумент.Документ = Ссылка;
	//НаборЗаписейДокументов.Записать(ложь);
	
	//Движения.Учетный.Записать(Истина);
	
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ЗаполнитьТЗОБ()
	
	СценарийОБ = РасчетыБюджет.ПолучитьСценарийДляОперативныхБюджетов(Сценарий);
	МассивБюджетов = РасчетыБюджет.ПолучитьБюджетныйДокументПоСценариюИПредприятию(СценарийОБ, Предприятие);
	
	Если Не СценарийОБ = Сценарий Тогда
		АктуальныйПериод = Сценарий.АктуальнаяДата;
		МассивБюджетовКорр = РасчетыБюджет.ПолучитьБюджетныйДокументПоСценариюИПредприятию(Сценарий, Предприятие);
		ТаблицаОперативныхБюджетов = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(СценарийОБ, Предприятие, МассивБюджетов, Ложь, Истина, АктуальныйПериод);
		ТаблицаОперативныхБюджетовКП = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(Сценарий, Предприятие, МассивБюджетовКорр, Истина, Истина)
	Иначе
		ТаблицаОперативныхБюджетов = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(СценарийОБ, Предприятие, МассивБюджетов, Ложь, Истина);
		ТаблицаОперативныхБюджетовКП = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(СценарийОБ, Предприятие, МассивБюджетов, Истина, Истина)
	КонецЕсли;
		
КонецПроцедуры

Процедура ПровестиСРежимом(Отказ,РежимПроведения, Оптимизированный) Экспорт
	
	ЗаполнитьТЗОБ();	
	
	ТаблицаПрибыли = Новый ТаблицаЗначений;
	ТаблицаПрибыли.Колонки.Добавить("Месяц");
	ТаблицаПрибыли.Колонки.Добавить("Сумма");
	
	
	//проводим остатки
	ВводОстатков();
	//проводим объем производства
	ОбъемПроизводства();
	//проводим основное сырье
	ДвижениеСырья();
	//проводим себестоимость
	Себестоимость();
	//проводим инвестиции
	Инвестиции();
	//проводим прочие 91
	//ПрочиеРасходы91();
	//проводим реализацию
	Реализация();
	//проводим прочие расходы 90
	ПрочиеРасходы90();
	//прочие проеты
	//ПрочиеПроекты();
	//кредиты
	Кредиты();
	//Реестр ПР
	//РеестрПР();
	//корректировки
	//Корректировки();
	
	//прибыль
	РаспределениеПрибыли();
	//ОБ
	ОБ();
	
	
	//сворачиваем проводки без сумм //28.03.13
	МассивПустых = Новый Массив;
	Для каждого ТекСтрока Из Движения.Учетный Цикл
		Если НЕ ТекСтрока.Сумма И НЕ ТекСтрока.КоличествоДт И НЕ ТекСтрока.КоличествоКт И НЕ ТекСтрока.КоличествоКРХДт И НЕ ТекСтрока.КоличествоКРХКт Тогда
			МассивПустых.Добавить(ТекСтрока);
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого ТекСтрока Из МассивПустых Цикл
		Движения.Учетный.Удалить(ТекСтрока);	
	КонецЦикла;
	//Конец сворачивания
	
	//Если Движения.Учетный.Количество() > 1200 Тогда
	//	Если РольДоступна(Константы.РольАдминистратора.Получить()) Тогда
	//		Сообщить(Движения.Учетный.Количество());
	//	КонецЕсли;
	//	
	//	//Если Оптимизированный Тогда
	//	//	ТЗ = Движения.Учетный.Выгрузить();
	//	//	ТЗ.Свернуть("Активность, ВидСубконтоДт1, ВидСубконтоДт2, ВидСубконтоДт3, ВидСубконтоКт1, ВидСубконтоКт2, ВидСубконтоКт3, Период, ПодразделениеДт, ПодразделениеКт, Предприятия, Регистратор, СубконтоДт1, СубконтоДт2, СубконтоДт3, СубконтоКт1, СубконтоКт2, СубконтоКт3, СценарийПлана, СчетДт, СчетКт",
	//	//	"КоличествоДт, КоличествоКРХДт, КоличествоКРХКт, КоличествоКт, Сумма");
	//	//	Движения.Учетный.Загрузить(ТЗ);
	//	//КонецЕсли;
	//	
	//	Если РольДоступна(Константы.РольАдминистратора.Получить()) Тогда
	//		Сообщить(Движения.Учетный.Количество());
	//		Движения.Учетный.Записывать = Истина;
	//	КонецЕсли;
	//	
	//	Если РольДоступна("БюджетныйОтдел") Тогда
	//		Движения.Учетный.Записывать = Истина;
	//	КонецЕсли;
	//Иначе
		Движения.Учетный.Записывать = Истина;
	//КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Дата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	ГруппаБюджет = БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел");
	ЗапретРедактирования = Ложь;
	ЗапретРедактированияБО = Ложь;
	ПараметрыТекущегоБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Предприятие, Сценарий);
	
	Если ЗначениеЗаполнено(ПараметрыТекущегоБюджета) Тогда
		ЗапретРедактирования = ПараметрыТекущегоБюджета.ПризнакРедактирования;
		ЗапретРедактированияБО = ПараметрыТекущегоБюджета.ПризнакРедактированияБО;
	КонецЕсли;
	
	Если ЗапретРедактирования И НЕ ГруппаБюджет И НЕ РольДоступна("Администратор") Тогда
		Сообщить("Сценарий " + Строка(Сценарий) + " заблокирован");
		Отказ = Истина;
	ИначеЕсли ЗапретРедактированияБО И ГруппаБюджет Тогда
		Сообщить("Сценарий " + Строка(Сценарий) + " заблокирован");		
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = Предприятие.ОсновнаяВалютаУчета;
	КонецЕсли;
	
	Для каждого текстрока Из Затраты Цикл
		
		Если ПустаяСтрока(текстрока.Подразделение) Тогда
			текстрока.Подразделение = текстрока.ЦФО.ВидДеятельности;	
		КонецЕсли;
		
		текстрока.Признак = ?(ТипЗнч(текстрока.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат"), Перечисления.Д_ПризнакСписания.Себестоимость, Перечисления.Д_ПризнакСписания.ФинРез);
		
		Если Не ЗначениеЗаполнено(текстрока.СчетСписания) Тогда
			текстрока.СчетСписания = ПланыСчетов.Учетный.Счет9003();
		КонецЕсли;
		
	КонецЦикла; 
	
	Для каждого текстрока Из ЗатратыКП Цикл
		
		Если ПустаяСтрока(текстрока.Подразделение) Тогда
			текстрока.Подразделение = текстрока.ЦФО.ВидДеятельности;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(текстрока.СчетСписания) Тогда
			текстрока.СчетСписания = ПланыСчетов.Учетный.Счет9003();
		КонецЕсли;	
		
	КонецЦикла; 
	
	БезБюджетаПроизводства = НЕ Предприятие.ПроизводственноеПредприятие;	
	
	Если ПометкаУдаления Тогда
		БюджетныйНаСервере.ИзменитьПоследнююЗаписьПараметровБюджета(Ссылка.Предприятие, Ссылка.Сценарий, Ложь, Ложь, Ложь);
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("Модифицирован") Тогда
		ДополнительныеСвойства.Вставить("Модифицирован", Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) И НЕ ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КлючиАналитикиБюджетов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КлючиАналитикиБюджетов КАК КлючиАналитикиБюджетов
		|ГДЕ
		|	КлючиАналитикиБюджетов.Документ = &Документ";
		
		Запрос.УстановитьПараметр("Документ", Ссылка);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Об = Выборка.Ссылка.ПолучитьОбъект();
			Об.УстановитьПометкуУдаления(ПометкаУдаления);
		КонецЦикла;
	ИначеЕсли ЗначениеЗаполнено(Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Д_БюджетЗатраты.КлючАналитикиБюджета КАК КлючАналитикиБюджета
		               |ПОМЕСТИТЬ ТЗДока
		               |ИЗ
		               |	Документ.Д_Бюджет.Затраты КАК Д_БюджетЗатраты
		               |ГДЕ
		               |	Д_БюджетЗатраты.Ссылка = &Документ
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	Д_БюджетЗатратыКП.КлючАналитикиБюджета
		               |ИЗ
		               |	Документ.Д_Бюджет.ЗатратыКП КАК Д_БюджетЗатратыКП
		               |ГДЕ
		               |	Д_БюджетЗатратыКП.Ссылка = &Документ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КлючиАналитикиБюджетов.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.КлючиАналитикиБюджетов КАК КлючиАналитикиБюджетов
		               |ГДЕ
		               |	КлючиАналитикиБюджетов.Документ = &Документ
		               |	И НЕ КлючиАналитикиБюджетов.Ссылка В
		               |				(ВЫБРАТЬ
		               |					ТЗДока.КлючАналитикиБюджета КАК КлючАналитикиБюджета
		               |				ИЗ
		               |					ТЗДока КАК ТЗДока)";
		
		Запрос.УстановитьПараметр("Документ", Ссылка);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Об = Выборка.Ссылка.ПолучитьОбъект();
			Об.УстановитьПометкуУдаления(Истина);
		КонецЦикла;		
	КонецЕсли;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры


////////////////////////////////////////////////объем производства////////////////////////////////////////
Процедура ОбъемПроизводства()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	ТаблицаПрозведенныхНоменклатур = Новый ТаблицаЗначений;
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("Номенклатура");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("Объем");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("Затраты");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("ОстаткиНачалоКоличество");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("ОстаткиНачалоСумма");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("РеализацияКоличество");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("РеализацияСумма");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("ОстаткиКонецКоличество");
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("ОстаткиКонецСумма");
	
	
	ТаблицаПрозведенныхНоменклатур.Колонки.Добавить("Месяц");
	
	ПрямыеСтатьи = Новый Массив;
	// 30.10.14
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыОсн);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыВсп);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрибыльПобочка);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрСвыше);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭл);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭк);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектПотр);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектЭк);
	
	ТаблицаОстатков = Новый ТаблицаЗначений;
	ТаблицаОстатков.Колонки.Добавить("Номенклатура");
	ТаблицаОстатков.Колонки.Добавить("Месяц");
	ТаблицаОстатков.Колонки.Добавить("ОстатокНачалоКоличество");
	ТаблицаОстатков.Колонки.Добавить("ОстатокНачалоСумма");
	ТаблицаОстатков.Колонки.Добавить("ОстатокКонецКоличество");
	ТаблицаОстатков.Колонки.Добавить("ОстатокКонецСумма");
	
	ОстаткиКонецКоличество = 0;
	ОстаткиКонецСумма = 0;
	
	ОбъемПроизводства2 = ОбъемПроизводства.Выгрузить();
	
	//добавляем в перечень номенклатуры с остатков 43. 28.03.13
	Остатки43Строки = ВводОстатковПрочее.НайтиСтроки(Новый Структура("Счет", ПланыСчетов.Учетный.Счет43()));
	
	Для каждого ТекСтрока Из Остатки43Строки Цикл
		
		Если НЕ ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Субконто1, Сценарий.АктуальнаяДата)).Количество() Тогда
			НоваяСтрока = ОбъемПроизводства2.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрока.Субконто1;
			НоваяСтрока.Месяц = Сценарий.АктуальнаяДата;
			НоваяСтрока.Объем = 0;
			НоваяСтрока.ОбъемЦВ = 0;
			НоваяСтрока.ПроцентНаПростой = 0;
			НоваяСтрока.ПроцентЗатрат = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//добавляем в перечень номенклатуры с остатков 41. 28.03.13
	Остатки43Строки = ВводОстатковПрочее.НайтиСтроки(Новый Структура("Счет", ПланыСчетов.Учетный.Счет41()));
	
	Для каждого ТекСтрока Из Остатки43Строки Цикл
		
		Если НЕ ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Субконто1, Сценарий.АктуальнаяДата)).Количество() Тогда
			НоваяСтрока = ОбъемПроизводства2.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрока.Субконто1;
			НоваяСтрока.Месяц = Сценарий.АктуальнаяДата;
			НоваяСтрока.Объем = 0;
			НоваяСтрока.ОбъемЦВ = 0;
			НоваяСтрока.ПроцентНаПростой = 0;
			НоваяСтрока.ПроцентЗатрат = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//добавляем недостающие месяцы
	ПроизвМесяцы = ОбъемПроизводства2.Скопировать();
	ПроизвМесяцы.Свернуть("Месяц");
	
	ПроизвНоменклатуры = ОбъемПроизводства2.Скопировать();
	ПроизвНоменклатуры.Свернуть("Номенклатура");
	
	Для каждого ТекСтрока Из ПроизвНоменклатуры Цикл
		
		Для каждого ТекМесяц Из ПроизвМесяцы Цикл
			
			Если НЕ ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока.Номенклатура, ТекМесяц.Месяц)).Количество()  Тогда
				НоваяСтрока = ОбъемПроизводства2.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Месяц = ТекМесяц.Месяц;
				НоваяСтрока.Объем = 0;
				НоваяСтрока.ОбъемЦВ = 0;
				НоваяСтрока.ПроцентНаПростой = 0;
				НоваяСтрока.ПроцентЗатрат = 0;
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла; 
		
	ОбъемПроизводства2.Сортировать("Номенклатура Возр, Месяц Возр");
	
	ОбъемПроизводства2.Колонки.Добавить("ПроизведеноСумма");
	ОбъемПроизводства2.Колонки.Добавить("ОстатокНачСумма");
	ОбъемПроизводства2.Колонки.Добавить("ОстатокНачКоличество");
	ОбъемПроизводства2.Колонки.Добавить("ОстатокКонСумма");
	ОбъемПроизводства2.Колонки.Добавить("ОстатокКонКоличество");
	ОбъемПроизводства2.Колонки.Добавить("РеализацияКоличество");
	ОбъемПроизводства2.Колонки.Добавить("РеализацияСумма");
	
	
	Для Каждого ТекСтрокаДвижения Из ОбъемПроизводства2 Цикл
		
		СуммаЗатрат = 0;
		//вкладка себестоимость
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Признак", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц, Перечисления.Д_ПризнакСписания.Себестоимость);
		ОтобранныеСтроки = Затраты.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб;
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);			
			КонецЕсли;
			
		КонецЦикла; 
		
		Если НЕ ТекСтрокаДвижения.НЕРаспределять Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Признак", Справочники.Номенклатура.ПустаяСсылка(), ТекСтрокаДвижения.Месяц, Перечисления.Д_ПризнакСписания.Себестоимость);
			ОтобранныеСтроки = Затраты.НайтиСтроки(СтруктураПоиска);
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
				
				Если ТекСтрока.НаЕдиницу Тогда
					СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100);		
				Иначе
					СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);		
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		//таблица оперативных бюджетов для проводки 43-40
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Признак", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц, Перечисления.Д_ПризнакСписания.Себестоимость);
		ОтобранныеСтроки = ТаблицаОперативныхБюджетов.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб;
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);			
			КонецЕсли;
			
		КонецЦикла; 
		
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Признак", Справочники.Номенклатура.ПустаяСсылка(), ТекСтрокаДвижения.Месяц, Перечисления.Д_ПризнакСписания.Себестоимость);
		ОтобранныеСтроки = ТаблицаОперативныхБюджетов.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			Если ТекСтрокаДвижения.НеРаспределять Тогда
				Продолжить;
			КонецЕсли;
			
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100);		
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100) * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);		
			КонецЕсли;
			
		КонецЦикла; 		
		
		//вкладка движение сырья
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц);
		ОтобранныеСтроки = ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			СуммаЗатрат = СуммаЗатрат + ТекСтрока.КоличествоРасход * ТекСтрока.ЦенаРасход;		
		КонецЦикла;
		
		//вкладка РеестрПр
		ТблицаПР = ПР.Выгрузить();		
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц);
		ОтобранныеСтроки = ПР.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			//СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаФР * (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100;
			// представительские свыше лимита теперь прямая статья
			СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаФР;
		КонецЦикла; 
		
		Если НЕ ТекСтрокаДвижения.НЕРаспределять Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Месяц", Справочники.Номенклатура.ПустаяСсылка(), ТекСтрокаДвижения.Месяц);
			ОтобранныеСтроки = ПР.НайтиСтроки(СтруктураПоиска);
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				//СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаФР * (ТекСтрокаДвижения.ПроцентЗатрат / 100) * (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100;		
				// представительские свыше лимита теперь прямая статья
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаФР * (ТекСтрокаДвижения.ПроцентЗатрат / 100);		
			КонецЦикла; 
			
		КонецЕсли;
		
		//вкладка Кредиты
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц);
		ОтобранныеСтроки = Кредиты.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			СуммаЗатрат = СуммаЗатрат + ТекСтрока.ЗатратыПоОформлению + ТекСтрока.ПроцНачислено * (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100;		
		КонецЦикла; 
		
		Если НЕ ТекСтрокаДвижения.НЕРаспределять Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Месяц", Справочники.Номенклатура.ПустаяСсылка(), ТекСтрокаДвижения.Месяц);
			ОтобранныеСтроки = Кредиты.НайтиСтроки(СтруктураПоиска);
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				СуммаЗатрат = СуммаЗатрат + (ТекСтрока.ЗатратыПоОформлению + ТекСтрока.ПроцНачислено) * (ТекСтрокаДвижения.ПроцентЗатрат / 100) * (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100;		
			КонецЦикла;
			
		КонецЕсли;
		
		//вкладка Корректировки
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Простой", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц, Ложь);
		ОтобранныеСтроки = ЗатратыКП.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			Если Не ТипЗнч(ТекСтрока.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				Продолжить;
			КонецЕсли;
			
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб;
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);			
			КонецЕсли;
			
		КонецЦикла; 
		
		Если НЕ ТекСтрокаДвижения.НЕРаспределять Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Месяц, Простой", Неопределено, ТекСтрокаДвижения.Месяц, Ложь);
			ОтобранныеСтроки = ЗатратыКП.НайтиСтроки(СтруктураПоиска);
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				
				Если Не ТипЗнч(ТекСтрока.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
					Продолжить;
				КонецЕсли;
				
				СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
				
				Если ТекСтрока.НаЕдиницу Тогда
					СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100);		
				Иначе
					СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100) *  ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);		
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		// таблица корректировок из оперативных бюджетов для проводки 43-40
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижения.Номенклатура, ТекСтрокаДвижения.Месяц);
		ОтобранныеСтроки = ТаблицаОперативныхБюджетовКП.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			Если Не ТипЗнч(ТекСтрока.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				Продолжить;
			КонецЕсли;
			
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб;
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);			
			КонецЕсли;
			
		КонецЦикла;
		
		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", Справочники.Номенклатура.ПустаяСсылка(), ТекСтрокаДвижения.Месяц);
		ОтобранныеСтроки = ТаблицаОперативныхБюджетовКП.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			Если Не ТипЗнч(ТекСтрока.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТекСтрокаДвижения.НеРаспределять Тогда
				Продолжить;
			КонецЕсли;
			
			СписаниеНаПростой = (ПрямыеСтатьи.Найти(ТекСтрока.СтатьяЗатрат) = Неопределено);
			
			Если ТекСтрока.НаЕдиницу Тогда
				СуммаЗатрат = СуммаЗатрат + (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ) * ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100);		
			Иначе
				СуммаЗатрат = СуммаЗатрат + ТекСтрока.СуммаСеб * (ТекСтрокаДвижения.ПроцентЗатрат / 100) *  ?(СписаниеНаПростой, (100 - ТекСтрокаДвижения.ПроцентНаПростой) / 100, 1);		
			КонецЕсли;
			
		КонецЦикла; 			
		
		//поиск остатков на начало
		НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
		ТекДата = ТекСтрокаДвижения.Месяц;
		
		Если НачДата = ТекДата Тогда
			ОтобранныеСтрокиОстатки = ВводОстатковПрочее.НайтиСтроки(Новый Структура("Счет, Субконто1", ПланыСчетов.Учетный.Счет43(),  ТекСтрокаДвижения.Номенклатура)); 
			ТекСтрокаДвижения.ОстатокНачСумма = 0;
			ТекСтрокаДвижения.ОстатокНачКоличество = 0;
			
			Для каждого ТекСтрокаОстатков Из ОтобранныеСтрокиОстатки Цикл
				ТекСтрокаДвижения.ОстатокНачСумма = ТекСтрокаДвижения.ОстатокНачСумма + ТекСтрокаОстатков.Сумма;	
				ТекСтрокаДвижения.ОстатокНачКоличество = ТекСтрокаДвижения.ОстатокНачКоличество + ТекСтрокаОстатков.Количество;	
			КонецЦикла;
			
		Иначе	
			МассивСтрокОстатковПМ = ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижения.Номенклатура, ДобавитьМесяц(ТекСтрокаДвижения.Месяц, -1)));
			
			Если МассивСтрокОстатковПМ.Количество() Тогда
				ТекСтрокаДвижения.ОстатокНачСумма = МассивСтрокОстатковПМ[0].ОстатокКонСумма;
				ТекСтрокаДвижения.ОстатокНачКоличество = МассивСтрокОстатковПМ[0].ОстатокКонКоличество;
			Иначе
				ТекСтрокаДвижения.ОстатокНачСумма = 0;
				ТекСтрокаДвижения.ОстатокНачКоличество = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		//поиск реализации
		СписокНоменклатур = Новый Массив;
		СписокНоменклатур.Добавить(ТекСтрокаДвижения.Номенклатура);
		ОтобранныеСоответствия = СоответствиеНоменклатуры.НайтиСтроки(Новый Структура("Соответствие", ТекСтрокаДвижения.Номенклатура)) ;
		
		Для каждого ТекСоответсивие Из ОтобранныеСоответствия Цикл
			
			Если СписокНоменклатур.Найти(ТекСоответсивие.Номенклатура) = Неопределено И НЕ ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура", ТекСоответсивие.Номенклатура)).Количество()  Тогда
				СписокНоменклатур.Добавить(ТекСоответсивие.Номенклатура);		
			КонецЕсли;
			
		КонецЦикла; 
		
		РеализацияКоличество = 0;
		РеализацияСумма = 0;
		
		Для каждого ТекНоменклатураСписка Из СписокНоменклатур Цикл
			
			ОтобранныеНоменклатуры = БюджетПродаж.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекНоменклатураСписка, ТекСтрокаДвижения.Месяц));
			
			Для каждого ТекОтобраннаяНоменклатураРеализации Из ОтобранныеНоменклатуры Цикл
				РеализацияКоличество = РеализацияКоличество + ТекОтобраннаяНоменклатураРеализации.Количество;
			КонецЦикла;
			
		КонецЦикла;
		
		Если РеализацияКоличество Тогда
			РеализацияСумма = РеализацияКоличество * ?(ТекСтрокаДвижения.ОстатокНачКоличество + ТекСтрокаДвижения.Объем, (ТекСтрокаДвижения.ОстатокНачСумма + ?(ТекСтрокаДвижения.Объем, СуммаЗатрат, 0)) / (ТекСтрокаДвижения.ОстатокНачКоличество + ТекСтрокаДвижения.Объем), 0);  	
		КонецЕсли;
		
		ТекСтрокаДвижения.ПроизведеноСумма = СуммаЗатрат;
		ТекСтрокаДвижения.РеализацияКоличество = РеализацияКоличество;
		ТекСтрокаДвижения.РеализацияСумма = РеализацияСумма;
		ТекСтрокаДвижения.ОстатокКонКоличество = ТекСтрокаДвижения.ОстатокНачКоличество + ТекСтрокаДвижения.Объем - ТекСтрокаДвижения.РеализацияКоличество;
		ТекСтрокаДвижения.ОстатокКонСумма = ТекСтрокаДвижения.ОстатокНачСумма + ТекСтрокаДвижения.ПроизведеноСумма - ТекСтрокаДвижения.РеализацияСумма;
		
		
		// регистр Бюджетный производим
		Если ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет43();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет40();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаДвижения.ПроизведеноСумма;
			Движение.КоличествоДт = ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ;
			Движение.Содержание = "Выпуск продукции";
			
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижения.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижения.Номенклатура;
		КонецЕсли;
		
		// регистр Бюджетный делаем переворот 
		Если НЕ ПустаяСтрока(ТекСтрокаДвижения.НоменклатураЦВ) И ТекСтрокаДвижения.ОбъемЦВ Тогда //делаем перевод в ЦВ
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет43();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет43();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ?(ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ = 0, 0, 
			ТекСтрокаДвижения.ПроизведеноСумма * ТекСтрокаДвижения.ОбъемЦВ / (ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ));
			Движение.КоличествоДт = ТекСтрокаДвижения.ОбъемЦВ;
			Движение.КоличествоКт = ТекСтрокаДвижения.ОбъемЦВ;
			Движение.Содержание = "Выпуск продукции";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижения.НоменклатураЦВ;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижения.Номенклатура;
		КонецЕсли;
			
	КонецЦикла;
	
	//заполняем средневзвешенную для единой номенклатуры и пересчитываем остатки
	ОбъемПроизводства3 = ОбъемПроизводства2.Скопировать();
	ОбъемПроизводства3.Свернуть("Месяц");
	ОбъемПроизводства3.Сортировать("Месяц Возр");
	ПервыйМесяц = Неопределено;
	ЭтоПервый = Ложь;
	
	Для каждого ТекМесяц Из ОбъемПроизводства3 Цикл
		
		Если ПервыйМесяц = Неопределено Тогда
			ЭтоПервый = Истина;
			ПервыйМесяц = ТекМесяц;
		Иначе
			ЭтоПервый = Ложь;
		КонецЕсли;
		
		ОтобрСтр = ОбъемПроизводства2.НайтиСтроки(Новый Структура("Месяц", ТекМесяц.Месяц));
		Кол = 0;
		Сумм = 0;
		
		ЕдинаяНоменклатура = Неопределено;
		
		Для каждого ТекСтрока111 Из ОтобрСтр Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока111.ЕдинаяНоменклатура) Тогда
				ЕдинаяНоменклатура = ТекСтрока111.ЕдинаяНоменклатура;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого ТекСтрока111 Из ОтобрСтр Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока111.ЕдинаяНоменклатура) ИЛИ ТекСтрока111.Номенклатура = ЕдинаяНоменклатура Тогда
				
				Если НЕ ЭтоПервый Тогда
					//	ОстатокКол = ТекСтрока111.ОстатокНачКоличество;
					//	ОстатокСумм = ТекСтрока111.ОстатокНачСумма;
					//Иначе
					ОтобрСтрОст = ОбъемПроизводства2.НайтиСтроки(Новый Структура("Номенклатура, Месяц", ТекСтрока111.Номенклатура, ДобавитьМесяц(ТекМесяц.Месяц, -1)));
					
					Если ОтобрСтрОст.Количество() Тогда
						ТекСтрока111.ОстатокНачКоличество = ОтобрСтрОст[0].ОстатокКонКоличество;
						ТекСтрока111.ОстатокНачСумма = ОтобрСтрОст[0].ОстатокКонСумма;
					КонецЕсли;
					
				КонецЕсли;
				
				Кол = Кол + ТекСтрока111.ОстатокНачКоличество + ТекСтрока111.Объем;
				Сумм = Сумм + ТекСтрока111.ОстатокНачСумма + ТекСтрока111.ПроизведеноСумма;
			КонецЕсли;
			
		КонецЦикла;
		
		СС = ?(Кол = 0, 0, Сумм / Кол);
		
		Для каждого ТекСтрока111 Из ОтобрСтр Цикл
			
			Если ЗначениеЗаполнено(ТекСтрока111.ЕдинаяНоменклатура)  ИЛИ ТекСтрока111.Номенклатура = ЕдинаяНоменклатура Тогда
				ТекСтрока111.РеализацияСумма = ТекСтрока111.РеализацияКоличество * СС;	
				ТекСтрока111.ОстатокКонСумма = ТекСтрока111.ОстатокНачСумма + ТекСтрока111.ПроизведеноСумма - ТекСтрока111.РеализацияСумма;
			КонецЕсли;
			
		КонецЦикла;
			
	КонецЦикла; 
	
	Для Каждого ТекСтрокаДвижения Из ОбъемПроизводства2 Цикл
		
		//заполняем сквозную таблицу произведеннх номенклатур
		НоваяСтрока = ТаблицаПрозведенныхНоменклатур.Добавить();
		НоваяСтрока.Номенклатура = ТекСтрокаДвижения.Номенклатура;
		НоваяСтрока.Месяц = ТекСтрокаДвижения.Месяц;
		
		НоваяСтрока.ОстаткиНачалоКоличество = ТекСтрокаДвижения.ОстатокНачКоличество;
		НоваяСтрока.ОстаткиНачалоСумма = ТекСтрокаДвижения.ОстатокНачСумма;
		
		
		НоваяСтрока.Объем = ТекСтрокаДвижения.Объем + ТекСтрокаДвижения.ОбъемЦВ;
		НоваяСтрока.Затраты = ТекСтрокаДвижения.ПроизведеноСумма;
		
		НоваяСтрока.РеализацияКоличество = ТекСтрокаДвижения.РеализацияКоличество;
		НоваяСтрока.РеализацияСумма = ТекСтрокаДвижения.РеализацияСумма;
		
		НоваяСтрока.ОстаткиКонецКоличество =  ТекСтрокаДвижения.ОстатокКонКоличество;
		НоваяСтрока.ОстаткиКонецСумма = ТекСтрокаДвижения.ОстатокКонСумма;
		
	КонецЦикла;
	
	
	
КонецПроцедуры

///////////////////////////////////////////////сырье ////////////////////////////////////////////////////
Функция ПолучитьОбъемПроизводства(Номенклатура, Месяц)
	
	ОбъемПроизводстваПП = 0;
	ПоискСтрок = Новый Структура("Номенклатура, Месяц", Номенклатура, Месяц);
	ОтобранныеСтроки = ОбъемПроизводства.НайтиСтроки(ПоискСтрок);
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ОбъемПроизводстваПП = ОбъемПроизводстваПП + ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;	
	КонецЦикла; 
	
	Возврат ОбъемПроизводстваПП;
	
КонецФункции

Функция ПолучитьПараметрыСырья(Сырье, Дата, Сценарий)
	ОтборСырья = Новый Структура("Сырье, СценарийПлана", Сырье,
	Сценарий);
	Возврат РегистрыСведений.Д_ПараметрыСырья.ПолучитьПоследнее(
	Дата, ОтборСырья);
КонецФункции

Функция ПолучитьПараметрыНоменклатуры(Номенклатура, Дата, Сценарий)
	ОтборНоменклатуры = Новый Структура("Номенклатура, СценарийПлана, Предприятие", Номенклатура,
	Сценарий, Предприятие);
	возврат РегистрыСведений.Д_ПараметрыНоменклатуры.ПолучитьПоследнее(
	Дата, ОтборНоменклатуры);
	
КонецФункции

Функция РассчитатьРасходФункция(ТекущаяСтрока, ТекДата)
	
	СреднийКрахмал = ?(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход = 0, 0, (ТекущаяСтрока.КрахмалистостьНаНачало * ТекущаяСтрока.КоличествоНаНачало + 
	ТекущаяСтрока.КрахмалистостьПриход * ТекущаяСтрока.КоличествоПриход) / 
	(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход));
	
	Выход = ПолучитьПараметрыСырья(ТекущаяСтрока.Сырье, ТекДата, Сценарий).Д_ВыходИзТонныУслКРХ;
	Отбор = ПолучитьПараметрыНоменклатуры(ТекущаяСтрока.Номенклатура, ТекДата, Сценарий).Д_ПроцентОтбора;
	ОбъемПроизводстваПП = ПолучитьОбъемПроизводства(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Месяц) * (ТекущаяСтрока.ДоляСырья / 100);
	
	//добавил для прямого счета без установленных параметров производства
	Если НЕ Отбор Тогда
		Отбор = 100;	
	КонецЕсли;
	Если НЕ Выход Тогда
		Выход = 1;
	КонецЕсли;
	//конец добавления
	
	Если НЕ Выход или НЕ Отбор Тогда
		Количество = 0;
	иначе
		Количество = Окр(ОбъемПроизводстваПП / Выход / (Отбор / 100) / (?(СреднийКрахмал, СреднийКрахмал, 100)  / 100), 2);
	КонецЕсли; 
	
	
	Цена = Окр(?(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход = 0, 0,
	(ТекущаяСтрока.КоличествоНаНачало * ТекущаяСтрока.ЦенаНаНачало + ТекущаяСтрока.КоличествоПриход * ТекущаяСтрока.ЦенаПриход) /
	(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход)), 2);
	
	Возврат Новый Структура("Сумма, Количество, КоличествоКРХ", Количество * Цена, Количество, СреднийКрахмал);
	
КонецФункции

Процедура ДвижениеСырья()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	Для Каждого ТекСтрокаДвижениеСырья Из ДвижениеСырья Цикл
		
		ТекДата = ТекСтрокаДвижениеСырья.Месяц;
		Расход = РассчитатьРасходФункция(ТекСтрокаДвижениеСырья, ТекДата);
		
		СреднийКрахмал = Расход.КоличествоКРХ;
		Цена = ?(Расход.Количество, Расход.Сумма / Расход.Количество, 0);
		Количество = Расход.Количество;
		
		Если НЕ ОКР(Количество, 0) = ОКР(ТекСтрокаДвижениеСырья.КоличествоРасход, 0) Тогда
			Сообщить("Расход основного сырья """ + Строка(ТекСтрокаДвижениеСырья.Сырье) + """ в месяце """ + Строка(ТекСтрокаДвижениеСырья.Месяц) + """ не совпадает с нормативами!");
		КонецЕсли;
		
		Если ТекСтрокаДвижениеСырья.КоличествоПриход * ТекСтрокаДвижениеСырья.ЦенаПриход Тогда
			// приход сырья в физвесе
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет1001();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет6001();
			Движение.Период = ТекДата;
			//Движение.ПодразделениеДт = ТекСтрокаДвижениеСырья.Подразделение;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаДвижениеСырья.КоличествоПриход * ТекСтрокаДвижениеСырья.ЦенаПриход;
			Движение.КоличествоДт = ТекСтрокаДвижениеСырья.КоличествоПриход;
			Движение.КоличествоКРХДт = ТекСтрокаДвижениеСырья.КоличествоПриход * (ТекСтрокаДвижениеСырья.КрахмалистостьПриход / 100);
			Движение.Содержание = "Поступление сырья от поставщика";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина)] = ТекСтрокаДвижениеСырья.Сырье;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаДвижениеСырья.Поставщик;
		КонецЕсли;
		
		Если Количество * Цена Тогда
			// расход сырья в физвесе
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет20();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет1001();
			//Движение.ПодразделениеКт = ТекСтрокаДвижениеСырья.Подразделение;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Цена;
			Движение.КоличествоКт = Количество;
			Движение.КоличествоКРХКт = Количество * СреднийКрахмал / 100;
			Движение.Содержание = "Списание сырья в производства";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижениеСырья.Номенклатура;
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.ЗатратыОсн;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина)] = ТекСтрокаДвижениеСырья.Сырье;
			//списание на 40 счет
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет40();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет20();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Цена;
			Движение.Содержание = "закрытие 20 счета";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижениеСырья.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаДвижениеСырья.Номенклатура;
			//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.ЗатратыОсн;
		КонецЕсли;
		
		Если ТекСтрокаДвижениеСырья.Оплата Тогда
			// оплата Контрагенту
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6001();
			Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаДвижениеСырья.Источник);
			Движение.ПодразделениеКт = ТекСтрокаДвижениеСырья.Подразделение;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.АвторЗаписи = ТекСтрокаДвижениеСырья.АвторЗаписи;
			//Движение.Заявитель = ТекСтрокаДвижениеСырья.Заявитель;
			//Движение.ПодразделениеЗаявителя = ТекСтрокаДвижениеСырья.ПодразделениеЗаявителя;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаДвижениеСырья.Оплата;
			Движение.Содержание = "Оплата за сырье";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаДвижениеСырья.Поставщик;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = ТекСтрокаДвижениеСырья.СтатьяБДДС;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаДвижениеСырья.СчетОрганизации);
			
		КонецЕсли;
		
		Если ТекСтрокаДвижениеСырья.ОплатаПрочее Тогда
			// оплата прочее
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6001();
			Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаДвижениеСырья.Источник);
			Движение.ПодразделениеКт = ТекСтрокаДвижениеСырья.Подразделение;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.АвторЗаписи = ТекСтрокаДвижениеСырья.АвторЗаписи;
			//Движение.Заявитель = ТекСтрокаДвижениеСырья.Заявитель;
			//Движение.ПодразделениеЗаявителя = ТекСтрокаДвижениеСырья.ПодразделениеЗаявителя;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаДвижениеСырья.ОплатаПрочее;
			Движение.Содержание = "Оплата за сырье (прочие расходы)";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаДвижениеСырья.Поставщик;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = ТекСтрокаДвижениеСырья.СтатьяБДДСПрочее;
		КонецЕсли;
		
		//СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаДвижениеСырья.Номенклатура, ТекСтрокаДвижениеСырья.Месяц);
		//				
		//ОтобранныеСтроки2 = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(СтруктураПоиска);
		//ОтобранныеСтроки2[0].Затраты = ОтобранныеСтроки2[0].Затраты + Количество * Цена;
		//
		//ОтобранныеСтроки = ОбъемПроизводства.НайтиСтроки(СтруктураПоиска);
		//Если ОтобранныеСтроки.Количество() Тогда		
		//	Если Не ПустаяСтрока(ОтобранныеСтроки[0].ОбъемЦВ) Тогда
		//		Объем1 = ОтобранныеСтроки[0].Объем;
		//		Объем2 = ОтобранныеСтроки[0].ОбъемЦВ;
		//		СтруктураПоиска = Новый Структура("Номенклатура, Месяц", ОтобранныеСтроки[0].ОбъемЦВ, ТекСтрокаДвижениеСырья.Месяц);
		//		ОтобранныеСтроки2 = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(СтруктураПоиска);
		//		ОтобранныеСтроки2[0].Затраты = ОтобранныеСтроки2[0].Затраты + ?(Объем1 + Объем2 = 0, 0, 
		//		Количество * Цена * Объем2 / (Объем1 + Объем2));;
		//		
		//	КонецЕсли;
		//	
		//КонецЕсли;
		//
		
		
	КонецЦикла; 
	
	
КонецПроцедуры

//////////////////////////////////////////////////////ввод остатков/////////////////////////////////////////////
Функция ОпределитьДтСчет (Задолженность1, ТекСтрокаВводОстатковСырья)
	Если Задолженность1 = Перечисления.Д_ДтКт.Дебет Тогда
		СчетДт = ТекСтрокаВводОстатковСырья.Счет;
	иначе
		СчетДт = ПланыСчетов.Учетный.Счет00();
	конецесли;
	возврат СчетДт
КонецФункции

Функция ОпределитьКтСчет (Задолженность1, ТекСтрокаВводОстатковСырья)
	Если Задолженность1 = Перечисления.Д_ДтКт.Дебет Тогда
		СчетКт = ПланыСчетов.Учетный.Счет00();
	иначе
		СчетКт = ТекСтрокаВводОстатковСырья.Счет;
	конецесли;
	возврат СчетКт
КонецФункции

Процедура ИспользоватьКоличество(Движение, СчетДт, СчетКт, ТекСтрокаВводОстатковСырья)
	Движение.КоличествоДт = 0;
	Движение.КоличествоКт = 0;
	Если СчетДт.Количественный Тогда
		Движение.КоличествоДт = ТекСтрокаВводОстатковСырья.Количество;
	иначеесли СчетКт.Количественный тогда
		Движение.КоличествоКт = ТекСтрокаВводОстатковСырья.Количество;
	КонецЕсли;
	Если СчетДт.Крахмал И Не ИгнорироватьПрочиеОстатки Тогда
		Движение.КоличествоКРХДт = ТекСтрокаВводОстатковСырья.КоличествоКРХ;
	иначеесли СчетКт.Крахмал И Не ИгнорироватьПрочиеОстатки тогда
		Движение.КоличествоКРХКт = ТекСтрокаВводОстатковСырья.КоличествоКРХ;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВводОстатков()
	
	МассивТабличныхПолей = Новый Массив;
	Если НЕ ИгнорироватьПрочиеОстатки Тогда
		МассивТабличныхПолей.Добавить(ВводОстатковСырья);	
		МассивТабличныхПолей.Добавить(ВводОстатковПокупатели);
		МассивТабличныхПолей.Добавить(ВводОстатковКредиты);
	КонецЕсли;
	МассивТабличныхПолей.Добавить(ВводОстатковПрочее);
	
	НачДата = Сценарий.ДатаНачала;
	
	Для каждого ТабличноеПоле Из МассивТабличныхПолей Цикл
		Для Каждого ТекСтрокаВводОстатковСырья Из ТабличноеПоле Цикл
			СчетДт = ОпределитьДтСчет(ТекСтрокаВводОстатковСырья.Задолженность, ТекСтрокаВводОстатковСырья);
			СчетКт = ОпределитьКтСчет(ТекСтрокаВводОстатковСырья.Задолженность, ТекСтрокаВводОстатковСырья);
			
			Если СчетДт = ПланыСчетов.Учетный.Счет00() Тогда
				СчетСубконто = СчетКт;
			иначе
				СчетСубконто = СчетДт;
			Конецесли;
			
			Движение = Движения.Учетный.Добавить();
			Движение.Период = НачДата;
			Движение.СчетДт = СчетДт;
			
			Если СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаВводОстатковСырья.Подразделение;
			КонецЕсли;
			
			Если СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаВводОстатковСырья.Подразделение;
			КонецЕсли;
			
			Движение.СчетКт = СчетКт;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			ИспользоватьКоличество(Движение, Движение.СчетДт, Движение.СчетКт, ТекСтрокаВводОстатковСырья);//проверяет количественный признак на счетах 
			Движение.Сумма = ТекСтрокаВводОстатковСырья.Сумма;
			Движение.Содержание = ТекСтрокаВводОстатковСырья.Содержание;
			
			СписокСубконто = Новый Массив;
			СписокСубконто.Добавить(ТекСтрокаВводОстатковСырья.Субконто1);
			СписокСубконто.Добавить(ТекСтрокаВводОстатковСырья.Субконто2);
			
			Для НомерСубконто = 0 По СчетСубконто.ВидыСубконто.Количество() - 1 Цикл
				Если СчетДт = ПланыСчетов.Учетный.Счет00() Тогда
					//Движение.СубконтоКт[СчетСубконто.ВидыСубконто[НомерСубконто].ВидСубконто] = СписокСубконто[НомерСубконто];
				иначе
					//Движение.СубконтоДт[СчетСубконто.ВидыСубконто[НомерСубконто].ВидСубконто] = СписокСубконто[НомерСубконто];
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла; 
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

///////////////////////////////////////////себестоимость/////////////////////////////////////////////////////
Процедура Себестоимость()
	// ПутьКФайлу = КаталогВременныхФайлов() + "\" + "Себестоимость.txt";
	// 
	//  Текст = Новый ТекстовыйДокумент; 
	// Попытка
	//  	Текст.Прочитать(ПутьКФайлу); 
	// Исключение
	// 	Сообщить("Не удалось открыт файл с текстом модуля проведения себестоимости");
	// 	Возврат
	// КонецПопытки;
	// 
	// Попытка
	// 	Выполнить(Текст.ПолучитьТекст())
	// Исключение
	// 	Сообщить("ВОЗНИКЛА ОШИБКА ПРИ ПРОВЕДЕНИИ СЕБЕСТОИМОСТИ");
	// КонецПопытки;
	// 
	//Для НомерСтроки = 1 По Текст.КоличествоСтрок() Цикл 
	//   Стр = Текст.ПолучитьСтроку(НомерСтроки); 
	//   Позиция = Найти(Стр, Символ(34)); 
	//   Код = Сред(Стр, 1, Позиция-1); 
	//   прНаименование = Сред(Стр, Позиция + 1); 
	//   Наименование = СтрЗаменить(прНаименование, "%квч%", Символ(34)); 
	
	//   Сообщить(Код + "-" + Наименование); 
	//КонецЦикла; 
	// 
	// ФайлМодуля = Новый файл(ПутьКФайлу);
	// ФайлМодуля.
	// Выполнить();
	// 30.10.14
	ПрямыеСтатьи = Новый Массив;
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыОсн);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыВсп);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрибыльПобочка);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрСвыше);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭл);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭк);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектПотр);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектЭк);
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	ВсяСебестоимость = Затраты.Выгрузить();
	ВсяСебестоимость.Очистить();
	ВсяСебестоимость.Колонки.Добавить("ИнвПроект");
	ВсяСебестоимость.Колонки.Добавить("ТипБюджета");
	ВсяСебестоимость1 = Затраты.Выгрузить();
	ВсяСебестоимость1.Колонки.Добавить("ИнвПроект"); //инвпроект по сути является дополнительным субконто1
	//ВсяСебестоимость1 = ВсяСебестоимость.НайтиСтроки(Новый Структура("Признак", Перечисления.Д_ПризнакСписания.Себестоимость));
	Для каждого ТекСтрока Из ВсяСебестоимость1 Цикл
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);	
	КонецЦикла; 
	
	//заполняем себестоимость прочими вкладками
	ЗаполнитьВсюСебестоимостьПрочимиВкладками(ВсяСебестоимость);
	
	//пробегаем по ТЧ ВсяСеьестоимость
	Для Каждого ТекСтрокаБюджетСебестоимости Из ВсяСебестоимость Цикл
		СуммаСписанияПростой = 0;
		ТекДата = ТекСтрокаБюджетСебестоимости.Месяц;
		
		Если БезБюджетаПроизводства ИЛИ ТекСтрокаБюджетСебестоимости.Признак = Перечисления.Д_ПризнакСписания.Коммерческие ИЛИ НЕ ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда //////////////////////////////////////// на 90.03 или 91 или 90.01
			СформироватьПроводкиНа9003(ТекСтрокаБюджетСебестоимости, ТекДата);	
		ИначеЕсли ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда ///// на 25
				
			// ДТ 25 КТ 60
			Если ТекСтрокаБюджетСебестоимости.СуммаСеб Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет25();
				Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				
				ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетКт");
				
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				
				
				Если Не ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.Номенклатура) Тогда // если номенклатура явно не указана, тогда пропорция
					СтрукрураПоиска = Новый Структура("Месяц", ТекСтрокаБюджетСебестоимости.Месяц);
					ОтобранныеСтрока = ОбъемПроизводства.НайтиСтроки(СтрукрураПоиска);
					СуммаСписания = 0;
					
					Для каждого ТекСтрокаОбъем Из ОтобранныеСтрока Цикл
						Если ТекСтрокаОбъем.НЕРаспределять Тогда //если не распределяются затраты на номенклатуру
							Продолжить;					
						КонецЕсли;
						
						Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСеб = (ТекСтрокаОбъем.Объем + ТекСтрокаОбъем.ОбъемЦВ) * ТекСтрокаБюджетСебестоимости.СуммаСеб;
						Иначе
							СуммаСеб = ТекСтрокаБюджетСебестоимости.СуммаСеб;					
						КонецЕсли;
						
						// 24.09.14
						Если ТекСтрокаОбъем.НЕРаспределять = Ложь И ТекСтрокаОбъем.ПроцентЗатрат > 0 Тогда 
							СуммаСписания = СуммаСписания + СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100);
						ИначеЕсли ТекСтрокаОбъем.НЕРаспределять = Ложь Тогда
							СуммаСписания = СуммаСписания + СуммаСеб * (ТекСтрокаОбъем.ПроцентНаПростой / 100);
						Иначе
							СуммаСписания = 0;
						КонецЕсли;
						
						// di 21.08.13
						Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСписанияПростой = 0;
						Иначе
							// 24.09.14
							//СуммаСписанияПростой =  СуммаСписанияПростой + СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100) * ТекСтрокаОбъем.ПроцентНаПростой / 100;
							Если ТекСтрокаОбъем.НЕРаспределять = Ложь И ТекСтрокаОбъем.ПроцентЗатрат > 0 Тогда 
								СуммаСписанияПростой =  СуммаСписанияПростой + СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100) * ТекСтрокаОбъем.ПроцентНаПростой / 100;
							ИначеЕсли ТекСтрокаОбъем.НЕРаспределять = Ложь Тогда
								СуммаСписанияПростой =  СуммаСписанияПростой + СуммаСеб * ТекСтрокаОбъем.ПроцентНаПростой / 100;
							Иначе
								СуммаСписанияПростой = 0;
							КонецЕсли;
						КонецЕсли;					
						// di 21.08.13
						
					КонецЦикла;
				иначеЕсли ТекСтрокаБюджетСебестоимости.Номенклатура = Справочники.Номенклатура.Простой Тогда //если простой
					СуммаСписания = 0;
					СуммаСписанияПростой = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Иначе
					// если номенклатура явно указана, тогда нет пропорции
					
					СтруктураНоменклатура = Новый Структура("Номенклатура, Месяц", ТекСтрокаБюджетСебестоимости.Номенклатура, ТекСтрокаБюджетСебестоимости.Месяц);
					ОтобранныеСтроки = ОбъемПроизводства.НайтиСтроки(СтруктураНоменклатура);
					
					Количество = 0;
					Для каждого ТекСтрокаОбъем Из ОтобранныеСтроки Цикл
						Количество = Количество + ТекСтрокаОбъем.Объем + ТекСтрокаОбъем.ОбъемЦВ;				
					КонецЦикла; 				
					
					Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
						СуммаСеб = Количество * ТекСтрокаБюджетСебестоимости.СуммаСеб;
					Иначе
						СуммаСеб = ТекСтрокаБюджетСебестоимости.СуммаСеб;					
					КонецЕсли;
					СуммаСписания = СуммаСеб;
					
					// di 21.08.13
					Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
						СуммаСписанияПростой = 0;
					Иначе
						СуммаСписанияПростой =  СуммаСеб * ТекСтрокаОбъем.ПроцентНаПростой / 100;
					КонецЕсли;
					// di 21.08.13
					
				КонецЕсли;
				
				СтатьяБДДС = ?(ПустаяСтрока(ТекСтрокаБюджетСебестоимости.СтатьяБДДС), ТекСтрокаБюджетСебестоимости.СтатьяЗатрат.СтатьяБДДС, ТекСтрокаБюджетСебестоимости.СтатьяБДДС);
				Если  РасчетыБюджет.СтатьяПредставительскихРасходов(СтатьяБДДС) И ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.ИнвПроект) Тогда
					Содержание = ТекСтрокаБюджетСебестоимости.ИнвПроект.Наименование;
				Иначе	
					Содержание = ТекСтрокаБюджетСебестоимости.Основание;
				КонецЕсли;
				
				Движение.Сумма = СуммаСписания;
				Движение.Содержание = Содержание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				
			КонецЕсли;
			//формируем проводки списания по простой	
			СформироватьПроводкиНаПростой(ПрямыеСтатьи, СуммаСписанияПростой, ТекСтрокаБюджетСебестоимости, ТекДата);
		//Иначе //на 91
		//	СформироватьПроводки91(ТекСтрокаБюджетСебестоимости, ТекДата);			
		КонецЕсли;		
		
		//формируем проводки оплаты
		СформироватьПроводкиОплаты(ТекСтрокаБюджетСебестоимости, ТекДата);	
		
	КонецЦикла;
	
	//сворачиваем и делаем проводки 40-20 для закрытия месяцы
	СформироватьСвернытыеПроводкиСебестоимости(ПрямыеСтатьи, НачДата, ВсяСебестоимость);
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ЗаполнитьВсюСебестоимостьПрочимиВкладками(ВсяСебестоимость)
	
	//ПР
	Для каждого ТекСтрока Из ПР Цикл
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		//НоваяСтрока.СтатьяЗатрат = Справочники.ИздержкиОбращения.ПрСвыше;
		НоваяСтрока.СуммаСеб = ТекСтрока.СуммаФР;
		НоваяСтрока.СуммаБДДС = ТекСтрока.СуммаБДДС;
		НоваяСтрока.Основание = ТекСтрока.Наименование.Наименование + " **" + ТекСтрока.ЧЗ;
		НоваяСтрока.ИнвПроект = ТекСтрока.Наименование;
	КонецЦикла; 
	//кредиты
	Для каждого ТекСтрока Из Кредиты Цикл
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		//НоваяСтрока.СтатьяЗатрат = Справочники.ИздержкиОбращения.ЗатратыКредиты;
		НоваяСтрока.СуммаСеб = ТекСтрока.ЗатратыПоОформлению;
		НоваяСтрока.СуммаБДДС = ТекСтрока.ЗатратыПоОформлению;
		НоваяСтрока.ИнвПроект = ТекСтрока.Кредит;
		
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		//НоваяСтрока.СтатьяЗатрат = Справочники.ИздержкиОбращения.ПроцентыПоКредитам;
		НоваяСтрока.СуммаСеб = ТекСтрока.ПроцНачислено;
		НоваяСтрока.СуммаБДДС = ТекСтрока.ПроцОплачено;
		НоваяСтрока.СтатьяБДДС = ТекСтрока.Статья;
		НоваяСтрока.ИнвПроект = ТекСтрока.Кредит;		
	КонецЦикла;

	Для каждого ТекСтрока Из ЗатратыКП Цикл
		//Если ТипЗнч(ТекСтрока.СтатьяЗатрат) = Тип("СправочникСсылка.ИздержкиОбращения") Тогда
			НоваяСтрока = ВсяСебестоимость.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.Подразделение = ТекСтрока.Подразделение;
			Если ТекСтрока.Номенклатура = "Простой" Тогда
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.Простой;
			КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтрока Из ТаблицаОперативныхБюджетов Цикл
		
		Если ТипЗнч(ТекСтрока.ИнвПроект) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		
	КонецЦикла; 
		
	Для каждого ТекСтрока Из ТаблицаОперативныхБюджетовКП Цикл
		НоваяСтрока = ВсяСебестоимость.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
	КонецЦикла; 
		
КонецПроцедуры

Процедура СформироватьСвернытыеПроводкиСебестоимости(ПрямыеСтатьи, НачДата, ВсяСебестоимость)
	
	//проводим свернутую ТЧ Дт 20 Кт 25
	//Дт40 Кт 20
	Если НЕ БезБюджетаПроизводства Тогда
		
		НоваяТЧ = ВсяСебестоимость.Скопировать();
		НоваяТЧ.Свернуть("СтатьяЗатрат, Номенклатура, Месяц, НаЕдиницу, Подразделение", "СуммаСеб, СуммаБДДС");
		
		Для Каждого ТекСтрокаБюджетСебестоимости Из НоваяТЧ Цикл
			
			Если НЕ ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				Продолжить;			
			КонецЕсли;
			
			ТекДата = ТекСтрокаБюджетСебестоимости.Месяц;
			
			Если ТекСтрокаБюджетСебестоимости.СуммаСеб Тогда
				
				Если ПустаяСтрока(ТекСтрокаБюджетСебестоимости.Номенклатура) Тогда // если номенклатура явно не указана, тогда пропорция
					СтрукрураПоиска = Новый Структура("Месяц", ТекСтрокаБюджетСебестоимости.Месяц);
					ОтобранныеСтрока = ОбъемПроизводства.НайтиСтроки(СтрукрураПоиска);
					Для каждого ТекСтрокаОбъем Из ОтобранныеСтрока Цикл
						Если ТекСтрокаОбъем.НЕРаспределять Тогда //если не распределяются затраты на номенклатуру
							Продолжить;					
						КонецЕсли;
						
						Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСеб = (ТекСтрокаОбъем.Объем + ТекСтрокаОбъем.ОбъемЦВ) * ТекСтрокаБюджетСебестоимости.СуммаСеб;
						Иначе
							СуммаСеб = ТекСтрокаБюджетСебестоимости.СуммаСеб;					
						КонецЕсли;
						
						Если НЕ ПрямыеСтатьи.Найти(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Неопределено ИЛИ ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСписания = СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100);
							СуммаСписанияПростой = ?(ТекСтрокаБюджетСебестоимости.НаЕдиницу, 0, СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100) * ТекСтрокаОбъем.ПроцентНаПростой / 100); 
						Иначе
							СуммаСписания = СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100) * (100 - ТекСтрокаОбъем.ПроцентНаПростой) / 100;									
							СуммаСписанияПростой =  СуммаСеб * (ТекСтрокаОбъем.ПроцентЗатрат / 100) * ТекСтрокаОбъем.ПроцентНаПростой / 100;
						КонецЕсли;
						
						
						//ДТ 20 КТ 25
						Если СуммаСписания Тогда
							
							Движение = Движения.Учетный.Добавить();
							Движение.СчетДт = ПланыСчетов.Учетный.Счет20();
							Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
							Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
							Движение.Период = ТекДата;
							Движение.Предприятия = Предприятие;
							Движение.СценарийПлана = Сценарий;
							Движение.Сумма = СуммаСписания;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаОбъем.Номенклатура;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							
						КонецЕсли; 
						
						//ДТ 40 КТ 20
						Если СуммаСписания Тогда
							
							Движение = Движения.Учетный.Добавить();
							Движение.СчетДт = ПланыСчетов.Учетный.Счет40();
							Движение.СчетКт = ПланыСчетов.Учетный.Счет20();
							Движение.Период = ТекДата;
							Движение.Предприятия = Предприятие;
							Движение.СценарийПлана = Сценарий;
							Движение.Сумма = СуммаСписания;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаОбъем.Номенклатура;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаОбъем.Номенклатура;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							
						КонецЕсли;
						
					КонецЦикла;
				иначе // если номенклатура явно указана, тогда нет пропорции
					
					СтруктураНоменклатура = Новый Структура("Номенклатура, Месяц", ТекСтрокаБюджетСебестоимости.Номенклатура, ТекСтрокаБюджетСебестоимости.Месяц);
					ОтобранныеСтроки = ОбъемПроизводства.НайтиСтроки(СтруктураНоменклатура);
					
					Если ОтобранныеСтроки.Количество() Тогда
						Количество = 0;
						Для каждого ТекСтрокаОбъем Из ОтобранныеСтроки Цикл
							Количество = Количество + ТекСтрокаОбъем.Объем + ТекСтрокаОбъем.ОбъемЦВ;				
						КонецЦикла; 				
						
						Если ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСеб = Количество * ТекСтрокаБюджетСебестоимости.СуммаСеб;
						Иначе
							СуммаСеб = ТекСтрокаБюджетСебестоимости.СуммаСеб;					
						КонецЕсли;
						
						Если НЕ ПрямыеСтатьи.Найти(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Неопределено  ИЛИ ТекСтрокаБюджетСебестоимости.НаЕдиницу Тогда
							СуммаСписания = СуммаСеб;
							СуммаСписанияПростой = ?(ТекСтрокаБюджетСебестоимости.НаЕдиницу, 0, СуммаСеб * ТекСтрокаОбъем.ПроцентНаПростой / 100);
						Иначе
							СуммаСписания = СуммаСеб * (100 - ТекСтрокаОбъем.ПроцентНаПростой) / 100;
							СуммаСписанияПростой = СуммаСеб * ТекСтрокаОбъем.ПроцентНаПростой / 100;
						КонецЕсли;
						
						
						//ДТ 20 КТ 25
						Если СуммаСписания Тогда
							
							Движение = Движения.Учетный.Добавить();
							Движение.СчетДт = ПланыСчетов.Учетный.Счет20();
							Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
							Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
							Движение.Период = ТекДата;
							Движение.Предприятия = Предприятие;
							Движение.СценарийПлана = Сценарий;
							Движение.Сумма = СуммаСписания;
							//					Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							
						КонецЕсли;
						
						//ДТ 40 КТ 20
						Если СуммаСписания Тогда
							
							Движение = Движения.Учетный.Добавить();
							Движение.СчетДт = ПланыСчетов.Учетный.Счет40();
							Движение.СчетКт = ПланыСчетов.Учетный.Счет20();
							Движение.Период = ТекДата;
							Движение.Предприятия = Предприятие;
							Движение.СценарийПлана = Сценарий;
							Движение.Сумма = СуммаСписания;
							//					Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
							Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьПроводкиОплаты(ТекСтрокаБюджетСебестоимости, ТекДата)
	
	// оплата ДТ 60 КТ 51
	Если ТекСтрокаБюджетСебестоимости.СуммаБДДС Тогда
		
		СтатьяБДДС = ?(ПустаяСтрока(ТекСтрокаБюджетСебестоимости.СтатьяБДДС), ТекСтрокаБюджетСебестоимости.СтатьяЗатрат.СтатьяБДДС, ТекСтрокаБюджетСебестоимости.СтатьяБДДС);
		
		
		Движение = Движения.Учетный.Добавить();
		
		Если ТекСтрокаБюджетСебестоимости.СтатьяБДДС.Доход Тогда
			
			
			Движение.СчетДт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаБюджетСебестоимости.Источник);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаБюджетСебестоимости.СчетОрганизации);
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
			КонецЕсли;
			
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяБДДС;
			
			ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетКт", "ДДС");
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, ТекСтрокаБюджетСебестоимости.КлючАналитикиБюджета);
			
			Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаБДДС;
			
		Иначе
			
			Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаБюджетСебестоимости.Источник);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаБюджетСебестоимости.СчетОрганизации);
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
			КонецЕсли;
			
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяБДДС;
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 3, ТекСтрокаБюджетСебестоимости.КлючАналитикиБюджета);
			
			ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетДт", "ДДС");
			
			
			Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаБДДС;
			
		КонецЕсли;
		
		Если РасчетыБюджет.СтатьяПредставительскихРасходов(СтатьяБДДС) И ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.ИнвПроект) Тогда
			Содержание = ТекСтрокаБюджетСебестоимости.ИнвПроект.Наименование;
		Иначе	
			Содержание = ТекСтрокаБюджетСебестоимости.Основание;
		КонецЕсли;
		
		Движение.Период = ТекДата;
		Движение.Предприятия = Предприятие;
		//Движение.Заявитель = ТекСтрокаБюджетСебестоимости.Заявитель;
		//Движение.ПодразделениеЗаявителя = ТекСтрокаБюджетСебестоимости.ПодразделениеЗаявителя;
		Движение.СценарийПлана = Сценарий;
		Движение.Содержание = Содержание;
		
	КонецЕсли; 
	
	
	
	
КонецПроцедуры

Процедура СформироватьПроводкиНаПростой(ПрямыеСтатьи, СуммаСписанияПростой, ТекСтрокаБюджетСебестоимости, ТекДата)
	// di 16.10.13 если есть сумма списания на простой, относим её на простой
	// затраты на простой ДТ 91.1 КТ 25 
	// 24.09.2014 если объем производства за период 0, то относим на простой в любом случае
	// 30.10.2014 если номенклатура простой, то в любом случае простой
	ОбъемПроизводстваЗаМесяц = ВычислитьОбъемПроизводстваЗаМесяц(ТекДата);
	Если СуммаСписанияПростой И ((ПрямыеСтатьи.Найти(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Неопределено ИЛИ ТекСтрокаБюджетСебестоимости.Номенклатура = Справочники.Номенклатура.Простой) ИЛИ Не ОбъемПроизводстваЗаМесяц) Тогда
		Движение = Движения.Учетный.Добавить();
		Движение.СчетДт = ПланыСчетов.Учетный.Счет91();
		
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
		КонецЕсли;
		
		Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
		
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
		КонецЕсли;
		
		Движение.Период = ТекДата;
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = Сценарий;
		Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
		Движение.Сумма = СуммаСписанияПростой;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Неопределено;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
		ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, - СуммаСписанияПростой);
	КонецЕсли;        		
	// di 21.08.13
КонецПроцедуры

Функция ВычислитьОбъемПроизводстваЗаМесяц(ТекПериод)
	
	Объем = 0;	
	СтрокиОбъемПроизводства = ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц", НачалоМесяца(ТекПериод)));
	Для Каждого Строка Из СтрокиОбъемПроизводства Цикл
		Объем = Объем + Строка.Объем;
	КонецЦикла;
	Возврат Объем;
	
КонецФункции

Процедура СформироватьПроводкиНа9003(ТекСтрокаБюджетСебестоимости, ТекДата)
	
	Если ТекСтрокаБюджетСебестоимости.СуммаСеб Тогда
		
		Если ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") И Предприятие.СчетЗакрытияЗатрат = ПланыСчетов.Учетный.Счет91() И ЗначениеЗаполнено(Предприятие.СтатьяЗакрытияЗатрат) Тогда // закрытие всего предприятия на 91 счет и фиксированную статью доходов и расходов с прогоном через 25 счет
			
			Движение = Движения.Учетный.Добавить();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
			Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
			
			Если ТекСтрокаБюджетСебестоимости.СтатьяБДДС.Доход Тогда
				
				ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетДт");
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаБюджетСебестоимости.Подразделение;
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение = Движения.Учетный.Добавить();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
				
				Движение.СчетДт = ПланыСчетов.Учетный.Счет25();
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаБюджетСебестоимости.Подразделение;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет91();	
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Предприятие.СтатьяЗакрытияЗатрат;
				//Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.СтатьяБДД) Тогда
				//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетСебестоимости.СтатьяБДДС;
				//КонецЕсли;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение; 
				КонецЕсли;
				
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, ТекСтрокаБюджетСебестоимости.СуммаСеб);
				
			Иначе
				
				ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетКт");
				
				Движение.СчетДт = ПланыСчетов.Учетный.Счет25();
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаБюджетСебестоимости.Подразделение;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение = Движения.Учетный.Добавить();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаБюджетСебестоимости.Подразделение;
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.СчетДт = ПланыСчетов.Учетный.Счет91();	
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Предприятие.СтатьяЗакрытияЗатрат;
				//Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.СтатьяБДДС) Тогда
				//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетСебестоимости.СтатьяБДДС;
				//КонецЕсли;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение; 
				КонецЕсли;
				
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, - ТекСтрокаБюджетСебестоимости.СуммаСеб);
				
			КонецЕсли;
				
		ИначеЕсли ТекСтрокаБюджетСебестоимости.ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда // прогон через счет 08.01 для инвестиций
			
			Если Не ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.СтатьяБДДС) Тогда
				СтатьяБДДС = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("3300.01");
			иначе
				СтатьяБДДС = ТекСтрокаБюджетСебестоимости.СтатьяБДДС;
			КонецЕсли;
			
			Если ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				СписыватьНаРеализацию = Истина;
			Иначе
				СписыватьНаРеализацию = Ложь;
			КонецЕсли;
			
			Если СписыватьНаРеализацию Тогда
				// Дт 25 Кт 08.1
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет25();
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет0803();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.ИнвПроект;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаБюджетСебестоимости.ИнвПроект;
				
				//списываем на реализацию Дт 90.3 КТ 25
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.ИнвПроект;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаИнвестиции.ВидДеятельности;	
			Иначе
				// 1) Дт 08.01 Кт 60.05
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет0803();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6005();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаБюджетСебестоимости.ИнвПроект;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаБюджетСебестоимости.ИнвПроект;
				
				// 2) Дт 91 Кт 08.01
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет91();
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет0803();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
				Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаБюджетСебестоимости.Подразделение;
				//Если ЗначениеЗаполнено(СтатьяБДДС) Тогда
				//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = СтатьяБДДС;
				//КонецЕсли;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаБюджетСебестоимости.ИнвПроект;	
			КонецЕсли;			
			
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, - ТекСтрокаБюджетСебестоимости.СуммаСеб);
			
		Иначе
			
			Движение = Движения.Учетный.Добавить();
			
			Если ТекСтрокаБюджетСебестоимости.СтатьяБДДС.Доход Тогда
				
				//Если ТипЗнч(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат) = Тип("СправочникСсылка.Стр_Задачи") Тогда
				//	Движение.СчетКт = ПланыСчетов.Учетный.Счет0804();	
				//	УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаБюджетСебестоимости.СтатьяЗатрат); 
				//Иначе
					Движение.СчетКт = ПланыСчетов.Учетный.Счет9001();	
					//УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Строка(ТекСтрокаБюджетСебестоимости.СтатьяЗатрат));
					Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.Номенклатура) Тогда
						Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
					КонецЕсли;
					//Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.СтатьяБДДС) Тогда
					//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетСебестоимости.СтатьяБДДС;
					//КонецЕсли;
					
					Если Движение.СчетКт.УчетПоПодразделениям Тогда
						Движение.ПодразделениеКт = ТекСтрокаБюджетСебестоимости.Подразделение;
					КонецЕсли;
					
				//КонецЕсли;
				
				ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетДт");
				
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, ТекСтрокаБюджетСебестоимости.СуммаСеб);
				
			Иначе
				
				
					Если ТекСтрокаБюджетСебестоимости.СчетСписания = ПланыСчетов.Учетный.Счет9002() Тогда
						Движение.СчетДт = ПланыСчетов.Учетный.Счет9002();
						Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.Номенклатура) Тогда
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
						КонецЕсли;
					Иначе
						Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
						Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.Номенклатура) Тогда
							Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетСебестоимости.Номенклатура;
						КонецЕсли;
						Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаБюджетСебестоимости.СтатьяЗатрат;
						//Если ЗначениеЗаполнено(ТекСтрокаБюджетСебестоимости.СтатьяБДДС) Тогда
						//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетСебестоимости.СтатьяБДДС;
						//КонецЕсли;
					КонецЕсли;
					
					Если Движение.СчетДт.УчетПоПодразделениям Тогда
						Движение.ПодразделениеДт = ТекСтрокаБюджетСебестоимости.Подразделение;
					КонецЕсли;
					
				//КонецЕсли;
				
				
				ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, "СчетКт");
				
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетСебестоимости.Месяц, - ТекСтрокаБюджетСебестоимости.СуммаСеб);
				
			КонецЕсли;
			
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетСебестоимости.СуммаСеб;
			Движение.Содержание = ТекСтрокаБюджетСебестоимости.Основание;	
			
		КонецЕсли;	
		
	КонецЕсли;
		
КонецПроцедуры

///////////////////////////////////////////инвестиции/////////////////////////////////////////////////////
Процедура Инвестиции()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	СписыватьНаРеализацию = Истина;
	
	Если ОбъемПроизводства.Количество() И НЕ БезБюджетаПроизводства Тогда
		СписыватьНаРеализацию = Ложь;
	КонецЕсли;
	
	ТаблицаИнвестиций = Инвестиции.Выгрузить();
	
	Для Каждого ТекСтрокаОпер Из ТаблицаОперативныхБюджетов Цикл
		
		Если ТипЗнч(ТекСтрокаОпер.ИнвПроект) = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда
			НоваяСтрокаИнв = ТаблицаИнвестиций.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаИнв, ТекСтрокаОпер);
			НоваяСтрокаИнв.ИнвестиционныйПроект = ТекСтрокаОпер.ИнвПроект;
			НоваяСтрокаИнв.СуммаФР = ТекСтрокаОпер.СуммаСеб;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекСтрокаИнвестиции Из ТаблицаИнвестиций Цикл
		
		ТекДата = ТекСтрокаИнвестиции.Месяц;
		
		Если ЗначениеЗаполнено(ТекСтрокаИнвестиции.ИнвестиционныйПроект) Тогда
			СписыватьНаРеализацию = Ложь;
		Иначе
			
			Если ТипЗнч(ТекСтрокаИнвестиции.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				СписыватьНаРеализацию = Истина;
			Иначе
				СписыватьНаРеализацию = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ТекСтрокаИнвестиции.СуммаФР И НЕ ТекСтрокаИнвестиции.СуммаБДДС Тогда // пропускаем пустые
			Продолжить;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрокаИнвестиции.СтатьяБДДС) Тогда
			СтатьяБДДС = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("3300.01");
		иначе
			СтатьяБДДС = ТекСтрокаИнвестиции.СтатьяБДДС;
		КонецЕсли;
		
		Если ТекСтрокаИнвестиции.СуммаФР Тогда
			
			Если СписыватьНаРеализацию Тогда // если галочка Списывать на реал стоит
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет25();
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаИнвестиции.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет0803();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаФР;
				Движение.Содержание = ТекСтрокаИнвестиции.ИнвестиционныйПроект;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаИнвестиции.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект;
				
				//списываем на реализацию Дт 90.3 КТ 25
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет25();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаФР;
				Движение.Содержание = ТекСтрокаИнвестиции.ИнвестиционныйПроект;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаИнвестиции.СтатьяЗатрат;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаИнвестиции.СтатьяЗатрат;
				//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаИнвестиции.ВидДеятельности;
			Иначе
				// 09.10.14 проводка 91-60.05
				// 04.06.15 прогон через счет 08.01 для инвестиций
				
				// 1) Дт 08.01 Кт 60.05
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет0803();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6005();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаФР;
				Движение.Содержание = ТекСтрокаИнвестиции.Основание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект;
				
				// 2) Дт 91 Кт 08.01
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет91();
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаИнвестиции.Подразделение;
				КонецЕсли;
				
				Движение.СчетКт = ПланыСчетов.Учетный.Счет0803();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаФР;
				Движение.Содержание = ТекСтрокаИнвестиции.Основание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаИнвестиции.СтатьяЗатрат;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Подразделения", Истина)] = ТекСтрокаИнвестиции.Подразделение;
				//Если ЗначениеЗаполнено(СтатьяБДДС) Тогда
				//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = СтатьяБДДС;
				//КонецЕсли;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект;		
			КонецЕсли;
			
			ДобавитьСтрокуПрибыли(ТекСтрокаИнвестиции.Месяц, - ТекСтрокаИнвестиции.СуммаФР);
		КонецЕсли;
		
		Если ТекСтрокаИнвестиции.СуммаБДДС Тогда
			
			// регистр оплата проекта 
			Движение = Движения.Учетный.Добавить();
			
			Если СтатьяБДДС.Доход Тогда //если статья доходная
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6005();
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект; 
				Движение.СчетДт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаИнвестиции.Источник);
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяБДДС;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаИнвестиции.СчетОрганизации);
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаИнвестиции.Подразделение;	
				КонецЕсли;
				
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаБДДС;
			Иначе	
				Движение.СчетДт = ПланыСчетов.Учетный.Счет6005();
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Внеоборотные активы", Истина)] = ТекСтрокаИнвестиции.ИнвестиционныйПроект; 
				Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаИнвестиции.Источник);
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяБДДС;
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаИнвестиции.СчетОрганизации);
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаИнвестиции.Подразделение;
				КонецЕсли;
				
				Движение.Сумма = ТекСтрокаИнвестиции.СуммаБДДС
			КонецЕсли;
			
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			//Движение.Содержание = ТекСтрокаИнвестиции.ИнвестиционныйПроект;     закомментированно   di 09.08.13
			Движение.Содержание = ТекСтрокаИнвестиции.Основание;
		КонецЕсли;
		
	КонецЦикла;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

///////////////////////////////////////////реализация/////////////////////////////////////////////////////
Процедура Реализация()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	
	Для Каждого ТекСтрокаБюджетПродаж Из БюджетПродаж Цикл
		
		ТекДата = ТекСтрокаБюджетПродаж.Месяц;
		Количество = ТекСтрокаБюджетПродаж.Количество;
		
		Если ТипЗнч(ТекСтрокаБюджетПродаж.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда // если реализуется основное средство, делаем проводки как в учете 1) Д62.03К90.05 2) Д90.05К01
			
			Цена = ТекСтрокаБюджетПродаж.Цена;
			
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6203();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет9005();
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.ПоступлениеДС;
			Движение.Содержание = "начислена выручка (" + Строка(ТекСтрокаБюджетПродаж.ПоступлениеДС) + ")"; 
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9005();
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СчетКт = ПланыСчетов.Учетный.Счет01();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Цена;
			Движение.Содержание = "реализовано основное средство (" + Строка(ТекСтрокаБюджетПродаж.Номенклатура) + " " + Строка(Количество) + " * " + Строка(Цена) + ")"; 
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Основные средства", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
						
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, Количество * Цена);
			
			Продолжить;
			
		КонецЕсли;		
		
		Если Сценарий.ДатаНачала < Дата('20111030000000') Тогда
			Если ПустаяСтрока(ТекСтрокаБюджетПродаж.ВозмещениеТр) Тогда
				Возмещение = 0;
			Иначе
				Возмещение = Число(ТекСтрокаБюджетПродаж.ВозмещениеТр);			
			КонецЕсли;
			Цена = ТекСтрокаБюджетПродаж.Цена;
		Иначе
			Возмещение = 0;
			ВозмещениеЖД = 0;
			ВозмещениеАвто = 0;
			ВозмещениеСопровождения = 0;
			
			Цена = ТекСтрокаБюджетПродаж.Цена + ТекСтрокаБюджетПродаж.Верх;
			Если НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = НРег("сверх цены") ИЛИ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = НРег("сверх цены (прямая)") Тогда
				ВозмещениеЖД = ВозмещениеЖД + ТекСтрокаБюджетПродаж.ЖД;
			ИначеЕсли НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = "в цене" Тогда
				Цена = Цена + ТекСтрокаБюджетПродаж.ЖД; 	
			КонецЕсли;
			Если НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = НРег("сверх цены") ИЛИ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = НРег("сверх цены (прямая)") Тогда
				ВозмещениеАвто = ВозмещениеАвто + ТекСтрокаБюджетПродаж.Авто;
			ИначеЕсли НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = "в цене" Тогда
				Цена = Цена + ТекСтрокаБюджетПродаж.Авто; 	
			КонецЕсли;
			Если НРег(ТекСтрокаБюджетПродаж.ВозмещениеСопровождения) = НРег("сверх цены") ИЛИ НРег(ТекСтрокаБюджетПродаж.ВозмещениеСопровождения) = НРег("сверх цены (прямая)") Тогда
				ВозмещениеСопровождения = ВозмещениеСопровождения + ТекСтрокаБюджетПродаж.Сопровождение;
			ИначеЕсли НРег(ТекСтрокаБюджетПродаж.ВозмещениеСопровождения) = "в цене" Тогда
				Цена = Цена + ТекСтрокаБюджетПродаж.Сопровождение; 	
			КонецЕсли;
			
		КонецЕсли;
		
		
		//если ВНХ контрагент
		Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
			СчетПокупатель = ПланыСчетов.Учетный.Счет7902();
			СчетВерх = ПланыСчетов.Учетный.Счет7901();
			СчетИсточник = ПланыСчетов.Учетный.Счет5501();
		иначе
			СчетВерх = ПланыСчетов.Учетный.Счет7601();
			СчетПокупатель = ПланыСчетов.Учетный.Счет6201();
			СчетИсточник = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаБюджетПродаж.Источник);
		КонецЕсли;
		
		//если ВНХ продавец товара
		Если ЗначениеЗаполнено(ТекСтрокаБюджетПродаж.Покупной) И Не ТекСтрокаБюджетПродаж.Покупной = Перечисления.Д_ПокупнойСпирт.Транзитный Тогда
			СчетПродавца = ПланыСчетов.Учетный.Счет6003();
			СчетИсточникПродавца = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаБюджетПродаж.Источник);
		иначе
			СчетПродавца = ПланыСчетов.Учетный.Счет7902();
			СчетИсточникПродавца = ПланыСчетов.Учетный.Счет5501();
		КонецЕсли;
		
		
		
		//расчет себестоимости
		
		НоменклатураПоиска = Новый Структура("Номенклатура, Месяц", ТекСтрокаБюджетПродаж.Номенклатура, ТекСтрокаБюджетПродаж.Месяц);
		
		
		// ищем единую номенклатуру в соответствии
		СоответствияПроизводственныхИПродажныхНом = СоответствиеНоменклатуры.НайтиСтроки(Новый Структура("Соответствие", ТекСтрокаБюджетПродаж.Номенклатура));
		
		Если Не СоответствияПроизводственныхИПродажныхНом.Количество() Тогда
			СоответствияПроизводственныхИПродажныхНом = СоответствиеНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаБюджетПродаж.Номенклатура));
		КонецЕсли;
		
		ЕдинаяНом = Неопределено;
		СтрокиЕдинойНоменклатуры = Новый Массив;
		СтрокиСоответствия = Новый Массив;
		
		Если СоответствияПроизводственныхИПродажныхНом.Количество() Тогда
			СтрокиСоответствия = ОбъемПроизводства.НайтиСтроки(Новый Структура("ЕдинаяНоменклатура, Месяц", СоответствияПроизводственныхИПродажныхНом[0].Соответствие, ТекСтрокаБюджетПродаж.Месяц));
		КонецЕсли;	
		
		Для Каждого Стр Из СтрокиСоответствия Цикл
			Если ЗначениеЗаполнено(Стр.ЕдинаяНоменклатура) Тогда
				ЕдинаяНом = Стр.ЕдинаяНоменклатура;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ЕдинаяНом) Тогда
			СтрокиЕдинойНоменклатуры = Новый Массив;
			Т = ОбъемПроизводства.НайтиСтроки(Новый Структура("ЕдинаяНоменклатура, Месяц", ЕдинаяНом, ТекСтрокаБюджетПродаж.Месяц));
			Для каждого ПП Из Т Цикл
				СтрокиЕдинойНоменклатуры.Добавить(ПП.Номенклатура);	
			КонецЦикла;
			СтрокиЕдинойНоменклатуры.Добавить(ЕдинаяНом);	
		КонецЕсли;
		
		// если единая номенклатура
		Если СтрокиЕдинойНоменклатуры.Количество() Тогда
			
			Если ПустаяСтрока(ТекСтрокаБюджетПродаж.Покупной) Тогда//если не выбрана закупка товара
				//Себестоимость = ?(ОтобранныеСтроки[0].РеализацияКоличество = 0, 0 ,ОтобранныеСтроки[0].РеализацияСумма / ОтобранныеСтроки[0].РеализацияКоличество);
				Себестоимость = ВычислитьСебестоимостьЕдинойНоменклатуры(СтрокиЕдинойНоменклатуры, ТекСтрокаБюджетПродаж.Месяц);
			Иначе//если выбрана закупка товара
				Если ТекСтрокаБюджетПродаж.ЦенаЗакупки тогда
					Себестоимость = ТекСтрокаБюджетПродаж.ЦенаЗакупки;
				Иначе
					Если ТекСтрокаБюджетПродаж.Количество Тогда
						сообщить("Себестоимость номенклатуры " + строка(ТекСтрокаБюджетПродаж.Номенклатура) 
						+ " неопределена.");
					КонецЕсли;
					Себестоимость = 0;
				КонецЕсли;
			КонецЕсли;
			
		Иначе	
			
			ОтобранныеСтроки = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(НоменклатураПоиска);
			НоменклатураСоответствие = Неопределено;
			
			Если НЕ ОтобранныеСтроки.Количество() Тогда //поиск в СоответствииНоменклатуры
				НайденоСоответствие = СоответствиеНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаБюджетПродаж.Номенклатура)); 
				Если НайденоСоответствие.Количество() Тогда
					НоменклатураПоиска = Новый Структура("Номенклатура, Месяц", НайденоСоответствие[0].Соответствие, ТекСтрокаБюджетПродаж.Месяц);
					ОтобранныеСтроки = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(НоменклатураПоиска);
					НоменклатураСоответствие = НайденоСоответствие[0].Соответствие;							
				КонецЕсли;
			КонецЕсли;
			
			Если ПустаяСтрока(ТекСтрокаБюджетПродаж.Покупной) Тогда//если не выбрана закупка товара
				Если НЕ ОтобранныеСтроки.Количество() Тогда
					Если ТекСтрокаБюджетПродаж.Количество Тогда
						сообщить("Себестоимость номенклатуры " + строка(ТекСтрокаБюджетПродаж.Номенклатура) 
						+ " неопределена.");	
					КонецЕсли;
					Себестоимость = 0;
				иначе
					Себестоимость = ?(ОтобранныеСтроки[0].РеализацияКоличество = 0, 0 ,ОтобранныеСтроки[0].РеализацияСумма / ОтобранныеСтроки[0].РеализацияКоличество);		
				КонецЕсли;
			иначе//если выбрана закупка товара
				если ТекСтрокаБюджетПродаж.ЦенаЗакупки тогда
					Себестоимость = ТекСтрокаБюджетПродаж.ЦенаЗакупки;
				иначе
					Если ТекСтрокаБюджетПродаж.Количество Тогда
						сообщить("Себестоимость номенклатуры " + строка(ТекСтрокаБюджетПродаж.Номенклатура) 
						+ " неопределена.");
					КонецЕсли;
					Себестоимость = 0;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;	
		
		//Если ПустаяСтрока(ТекСтрокаБюджетПродаж.Номенклатура.Д_НомерНоменклатуры) Тогда
		//	Сообщить("Номер номенклатуры " + строка(ТекСтрокаБюджетПродаж.Номенклатура) + " неопределен.");
		//КонецЕсли;
		
		//Сообщить(Себестоимость);
		
		//сразу же создаем проводку перемещения номенклатуры
		Если Количество * Себестоимость И НЕ НоменклатураСоответствие = Неопределено Тогда
			Движение = Движения.Учетный.Добавить();
			Если ЗначениеЗаполнено(ТекСтрокаБюджетПродаж.Покупной) Тогда
				Движение.СчетДт = ПланыСчетов.Учетный.Счет41();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет41();
			Иначе
				Движение.СчетДт = ПланыСчетов.Учетный.Счет43();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет43();
			КонецЕсли;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			//Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Себестоимость;
			Движение.КоличествоДт = ТекСтрокаБюджетПродаж.Количество;
			Движение.КоличествоКт = ТекСтрокаБюджетПродаж.Количество;
			Движение.Содержание = "переворот";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = НоменклатураСоответствие;
		КонецЕсли;
		
		
		
		// реализована продукция
		Если Количество * Цена Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетПокупатель;
			Движение.СчетКт = ПланыСчетов.Учетный.Счет9001();//90.1
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Цена;
			Движение.КоличествоКт = Количество;
			Движение.Содержание = "начислена выручка (" + Строка(ТекСтрокаБюджетПродаж.Номенклатура) + " " + Строка(Количество) + " * " + Строка(Цена) + ")"; 
			Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			КонецЕсли;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			//Если ЗначениеЗаполнено(ТекСтрокаБюджетПродаж.СтатьяБДДС) Тогда
			//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.СтатьяБДДС;
			//КонецЕсли;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, Количество * Цена);
		КонецЕсли;
		// начислен верх 
		Если ТекСтрокаБюджетПродаж.Верх * Количество Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			Движение.СчетКт = СчетВерх;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.Верх * Количество;
			Движение.Содержание = "Начислен верх";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.Верхи;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.Верх * Количество);
			//Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			//КонецЕсли;
		КонецЕсли;
		// оплачен верх
		Если ТекСтрокаБюджетПродаж.КЗНачало + ТекСтрокаБюджетПродаж.ПоступлениеДС Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетВерх;
			Движение.СчетКт = СчетИсточник;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ?(Цена = 0, 0, (ТекСтрокаБюджетПродаж.ПоступлениеДС - Возмещение * Количество) * ТекСтрокаБюджетПродаж.Верх /
			Цена) + ТекСтрокаБюджетПродаж.КЗНачало;
			Движение.Содержание = "оплата верха";
			//Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			//КонецЕсли;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2133.04");
		КонецЕсли;
		// начислены транспортные жд
		Если НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("Сверх цены") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("самовывоз") Тогда
			Если ТекСтрокаБюджетПродаж.ЖД * Количество Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6003();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетПродаж.ЖД * Количество;
				Движение.Содержание = "начислен транспорт ж/д";
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Транспортные расходы по реализации (Ж/д) (возмещаемые)");
				//Если ЗначениеЗаполнено(ТекСтрокаБюджетПродаж.СтатьяБДДС) Тогда
				//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.СтатьяБДДС;
				//КонецЕсли;
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.ЖД * Количество);
			КонецЕсли;
		КонецЕсли;
		// начислены транспортные авто
		Если ТекСтрокаБюджетПродаж.Авто * Количество Тогда
			НомерНом = ТекСтрокаБюджетПродаж.Номенклатура.Д_НомерНоменклатуры;
			Если (НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("Сверх цены")
				И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("самовывоз"))
				ИЛИ (НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1 И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1закуп И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1закупТранзит И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1ПодДокиЗАК И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1Транзит И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1ТранзитЗАК)
				Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6003();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаБюджетПродаж.Авто * Количество;
				Движение.Содержание = "начислен транспорт Авто";
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
				//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.ТранспортныеАвто;
				//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = Справочники.ИздержкиОбращения.ТранспортныеАвто;
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.Авто * Количество);
			КонецЕсли;
			
		КонецЕсли;
		
		// начислено сопровождение
		Если ТекСтрокаБюджетПродаж.Сопровождение * Количество Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет6003();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.Сопровождение * Количество;
			Движение.Содержание = "начислено сопровождение";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.СтатьиЗатрат.НайтиПоКоду("2133.23");
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты бюджет", Истина)] = Справочники.СтатьиЗатрат.НайтиПоКоду("2133.23");
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.Сопровождение * Количество);
		КонецЕсли;
		
		// di 22.04.14
		
		Если ТекСтрокаБюджетПродаж.Дисконт * Количество Тогда
			
			// начислен дисконт
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет7601();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.Дисконт * Количество;
			Движение.Содержание = "начислен дисконт";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.СтатьиЗатрат.НайтиПоКоду("2138.11");
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.Дисконт * Количество);
			
			// выручка по дисконту
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6201();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет9001();//90.1
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.Дисконт * Количество;
			//Движение.КоличествоКт = Количество; // задвоене количества на счете
			Движение.Содержание = "начислена выручка в сумме дисконта";
			Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			Иначе
				//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			КонецЕсли;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, ТекСтрокаБюджетПродаж.Дисконт * Количество);
			
		КонецЕсли;
		
		Если ТекСтрокаБюджетПродаж.КомпенсацияНалогов * Количество Тогда	
			// начислена компенсация налогов
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет7601();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.КомпенсацияНалогов * Количество;
			Движение.Содержание = "начислена компенсация налогов";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.КомпенсацияНалогов;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - ТекСтрокаБюджетПродаж.КомпенсацияНалогов * Количество);							
		КонецЕсли;
		
		Если ТекСтрокаБюджетПродаж.ВыплатаДисконта Тогда
			// выплачен дисконт
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет7601();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет5101();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.ВыплатаДисконта;
			Движение.Содержание = "выплачен дисконт";
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2133.04");
		КонецЕсли;
		
		// di 22.04.14
		
		//возмещены транспортные покупателем 
		//Если Возмещение * Количество Тогда
		//	ПроцентАвто = ?((ТекСтрокаБюджетПродаж.Авто + ТекСтрокаБюджетПродаж.ЖД), ТекСтрокаБюджетПродаж.Авто / (ТекСтрокаБюджетПродаж.Авто + ТекСтрокаБюджетПродаж.ЖД), 0);
		//	ПроцентЖд = ?((ТекСтрокаБюджетПродаж.Авто + ТекСтрокаБюджетПродаж.ЖД), ТекСтрокаБюджетПродаж.ЖД / (ТекСтрокаБюджетПродаж.Авто + ТекСтрокаБюджетПродаж.ЖД), 0);
		
		Если ВозмещениеАвто Тогда
			НомерНом = ТекСтрокаБюджетПродаж.Номенклатура.Д_НомерНоменклатуры;
			Если (НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("Сверх цены")
				И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("самовывоз"))
				ИЛИ (НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1 И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1закуп И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1закупТранзит И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1ПодДокиЗАК И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1Транзит И
				НЕ НомерНом = Перечисления.Д_НомерНоменклатуры.Номер1ТранзитЗАК)
				Тогда
				
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = СчетПокупатель;
				Движение.СчетКт = ПланыСчетов.Учетный.Счет9003();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ВозмещениеАвто * Количество;
				Движение.Содержание = "выставлен транспорт покупателю";
				Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
				Иначе
					//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
				КонецЕсли;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
				//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.ТранспортныеАвто;
				ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, ВозмещениеАвто * Количество);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("Сверх цены") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("самовывоз") И ВозмещениеЖд Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетПокупатель;
			Движение.СчетКт = ПланыСчетов.Учетный.Счет9003();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ВозмещениеЖд * Количество;
			Движение.Содержание = "выставлен транспорт покупателю";
			Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			Иначе
				//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			КонецЕсли;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Транспортные расходы по реализации (Ж/д) (возмещаемые)");
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, ВозмещениеЖд * Количество);
			
		КонецЕсли;
		
		Если ВозмещениеСопровождения Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетПокупатель;
			Движение.СчетКт = ПланыСчетов.Учетный.Счет9003();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ВозмещениеСопровождения * Количество;
			Движение.Содержание = "выставлено сопровождение покупателю";
			Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			Иначе
				//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			КонецЕсли;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.СтатьиЗатрат.НайтиПоКоду("2133.23");
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, ВозмещениеСопровождения * Количество);
			
		КонецЕсли;
		
		
		
		// оплачены транспортные
		Если НЕ ТекСтрокаБюджетПродаж.ОплатаТранспорта Тогда
			Если (ТекСтрокаБюджетПродаж.Авто) * Количество И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = НРег("сверх цены")
				И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = НРег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = Нрег("самовывоз") Тогда
				//И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр2) = НРег("сверх цены (прямая)") Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет6003();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет5101();
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = (ТекСтрокаБюджетПродаж.Авто) * Количество;
				Движение.Содержание = "Оплачен транспорт авто";
				//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = Справочники.ИздержкиОбращения.ТранспортныеАвто;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2133.21");
			КонецЕсли;
			
			Если НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("Сверх цены") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = НРег("сверх цены (отк)") И НЕ НРег(ТекСтрокаБюджетПродаж.ВозмещениеТр) = Нрег("самовывоз") И (ТекСтрокаБюджетПродаж.ЖД) * Количество Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.Счет6003();
				Движение.СчетКт = ПланыСчетов.Учетный.Счет5101();
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = (ТекСтрокаБюджетПродаж.ЖД) * Количество;
				Движение.Содержание = "Оплачен транспорт ж/д";
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты бюджет", Истина)] = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Транспортные расходы по реализации (Ж/д) (возмещаемые)");
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2133.21");
			КонецЕсли;
		КонецЕсли;
		
		// списана продукция по средней стоимости
		Если Количество * Себестоимость ИЛИ ТекСтрокаБюджетПродаж.Количество Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9002();
			Если ЗначениеЗаполнено(ТекСтрокаБюджетПродаж.Покупной) Тогда
				Движение.СчетКт = ПланыСчетов.Учетный.Счет41();
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
				КонецЕсли;
				
			Иначе
				Движение.СчетКт = ПланыСчетов.Учетный.Счет43();
			КонецЕсли;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * Себестоимость;
			Движение.КоличествоКт = ТекСтрокаБюджетПродаж.Количество;
			Движение.Содержание = "реализован по себестоимости";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - Количество * Себестоимость);
		КонецЕсли;
		// приход от покупателей
		Если ТекСтрокаБюджетПродаж.ПоступлениеДС Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетИсточник;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СчетКт = СчетПокупатель;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.ПоступлениеДС;
			Движение.Содержание = "оплата от покупателя";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = ?(ПустаяСтрока(ТекСтрокаБюджетПродаж.СтатьяБДДС), Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("1100.01"), ТекСтрокаБюджетПродаж.СтатьяБДДС);
			Если ТипЗнч(ТекСтрокаБюджетПродаж.Контрагент) = Тип("СправочникСсылка.Предприятия") Тогда
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Предприятия", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			Иначе
				//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаБюджетПродаж.Контрагент;
			КонецЕсли;
		КонецЕсли;
		// поступил товар от поставщика или ВНХ_Поставщика
		Если Количество * ТекСтрокаБюджетПродаж.ЦенаЗакупки И ТекСтрокаБюджетПродаж.Количество Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет41();
			Движение.СчетКт = СчетПродавца;
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = Количество * ТекСтрокаБюджетПродаж.ЦенаЗакупки;
			Движение.КоличествоДт = ТекСтрокаБюджетПродаж.Количество;
			Движение.Содержание = "поступил товар";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			Если ТекСтрокаБюджетПродаж.Покупной = Перечисления.Д_ПокупнойСпирт.Закупной Тогда
				Движение.СчетКт = ПланыСчетов.Учетный.Счет6001();
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, Справочники.Контрагенты.НайтиПоНаименованию("ЛЮКС", Истина));
			КонецЕсли;
		КонецЕсли;
		//оплата за закупной товар 28.05.13 счет 60.4 заменен на счет 60.3
		Если ТекСтрокаБюджетПродаж.Количество * ТекСтрокаБюджетПродаж.ЦенаЗакупки И СчетПродавца = ПланыСчетов.Учетный.Счет6003() Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = СчетПродавца;
			Движение.СчетКт = СчетИсточникПродавца;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаБюджетПродаж.Количество * ТекСтрокаБюджетПродаж.ЦенаЗакупки;
			Движение.Содержание = "Оплатили за покупной товар";
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
			СтатьяДДСЗакуп = БюджетныйНаСервере.ПолучитьСтатьюДДСДляЗакупнойНоменклатуры(ТекСтрокаБюджетПродаж.Покупной);
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяДДСЗакуп;
		КонецЕсли;
		// начислены бонусы КС
		Если Количество Тогда
			
			СуммаКС = ТекСтрокаБюджетПродаж.ОтчисленияКС;
			
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет7901();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаБюджетПродаж.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Акциз = БюджетныйНаСервере.ВернутьТекСтавку(ТекДата, ТекСтрокаБюджетПродаж.Номенклатура); //необходимо получить ставку акциза
			СуммаБонусов = (Цена - Акциз - ТекСтрокаБюджетПродаж.Верх - (ТекСтрокаБюджетПродаж.ЖД + ТекСтрокаБюджетПродаж.Авто) + Возмещение) * СуммаКС / 100 * Количество;
			Движение.Сумма = СуммаБонусов; 
			Движение.Содержание = "начислены бонусы";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаБюджетПродаж.Номенклатура;
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Справочники.ИздержкиОбращения.Бонусы;
			ДобавитьСтрокуПрибыли(ТекСтрокаБюджетПродаж.Месяц, - СуммаБонусов);
			//Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)] = ТекСтрокаБюджетПродаж.Контрагент;
		КонецЕсли;
		
	КонецЦикла;
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

///////////////////////////////////////////прочие расходы/////////////////////////////////////////////////////
Процедура ПрочиеРасходы90()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	// 30.10.14
	ПрямыеСтатьи = Новый Массив;
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыОсн);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЗатратыВсп);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрибыльПобочка);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ПрСвыше);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭл);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ГазЭк);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектПотр);
	//ПрямыеСтатьи.Добавить(Справочники.ИздержкиОбращения.ЭлектЭк);
	
	
	Для Каждого ТекСтрокаПрочие90 Из Прочие90 Цикл
		
		ТекДата = ТекСтрокаПрочие90.Месяц;
		
		ОбъемРеализации = 0;
		Если НЕ ПустаяСтрока(ТекСтрокаПрочие90.Номенклатура) Тогда
			ОбъемРеализации = ПолучитьОбъемРеализации(ТекСтрокаПрочие90.Номенклатура, ТекСтрокаПрочие90.Месяц);
			Если НЕ ОбъемРеализации Тогда
				Сообщить("Внимание! Объем реализации " + Строка(ТекСтрокаПрочие90.Номенклатура) + " равен 0.");					
			КонецЕсли; 
		КонецЕсли;
		
		Если ТекСтрокаПрочие90.ФР Тогда
			СуммаФР = ?(ТекСтрокаПрочие90.ФР, ОбъемРеализации * ТекСтрокаПрочие90.НаЕд, 0);
			Основание = ТекСтрокаПрочие90.Основание + " (" + Строка(Окр(ОбъемРеализации, 0)) + " х " + 
			Строка(ТекСтрокаПрочие90.НаЕд) + ")";
		иначе
			Основание = ТекСтрокаПрочие90.Основание;
			СуммаФР = ТекСтрокаПрочие90.СуммаФР;
		КонецЕсли;
		
		Если ТекСтрокаПрочие90.ДДС Тогда
			СуммаДДС = ?(ТекСтрокаПрочие90.ДДС, ОбъемРеализации * ТекСтрокаПрочие90.НаЕд, 0);
		иначе
			СуммаДДС = ТекСтрокаПрочие90.СуммаБДДС;
		КонецЕсли;
		
		
		// начисления на 90 сч
		Если СуммаФР Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет9003();
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаПрочие90.Подразделение;
			КонецЕсли;
			
			Если ТекСтрокаПрочие90.ВНХ Тогда
				Движение.СчетКт = ПланыСчетов.Учетный.Счет7901();
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаПрочие90.Статья);
			Иначе
				Если ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС_", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС+НП+Затраты на документы", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акцизы", Истина) ИЛИ 
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на прибыль (с реализации)", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("ЕСН+НС", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДФЛ", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья.Родитель = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акциз", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на П", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги прочие", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС", Истина) 
					Тогда
					Движение.СчетКт = ПланыСчетов.Учетный.Счет6801();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт, 1, ТекСтрокаПрочие90.Статья);
				Иначе
					Движение.СчетКт = ПланыСчетов.Учетный.Счет7601();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт, 1, ТекСтрокаПрочие90.Статья);
				КонецЕсли;
			КонецЕсли;
			
			//Движение.СчетКт = ПланыСчетов.Учетный.Счет7601();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = СуммаФР;
			Движение.Содержание = Основание;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаПрочие90.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = ТекСтрокаПрочие90.Статья;
			//Если ЗначениеЗаполнено(ТекСтрокаПрочие90.СтатьяБДДС) Тогда
			//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Контрагенты", Истина)Бюджет] = ТекСтрокаПрочие90.СтатьяБДДС;
			//КонецЕсли;
			ДобавитьСтрокуПрибыли(ТекСтрокаПрочие90.Месяц, - СуммаФР);
		КонецЕсли; 
		// оплата начислений 90
		Если СуммаДДС Тогда
			
			Если ПустаяСтрока(ТекСтрокаПрочие90.СтатьяБДДС) Тогда
				СтатьяДДС = ТекСтрокаПрочие90.Статья.СтатьяБДДС;
			Иначе
				СтатьяДДС = ТекСтрокаПрочие90.СтатьяБДДС;
			КонецЕсли;
			
			Движение = Движения.Учетный.Добавить();
			
			Если СтатьяДДС.Доход Тогда
				
				Если ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС_", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС+НП+Затраты на документы", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акцизы", Истина) ИЛИ 
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на прибыль (с реализации)", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("ЕСН+НС", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДФЛ", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья.Родитель = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акциз", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на П", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги прочие", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС", Истина)
					Тогда
					Движение.СчетКт = ПланыСчетов.Учетный.Счет6801();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт, 1, ТекСтрокаПрочие90.Статья);
				Иначе
					Движение.СчетКт = ПланыСчетов.Учетный.Счет7601();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт, 1, ТекСтрокаПрочие90.Статья);
				КонецЕсли;
				Движение.СчетДт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаПрочие90.Источник);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаПрочие90.СчетОрганизации);
				
				Если Движение.СчетДт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеДт = ТекСтрокаПрочие90.Подразделение;
				КонецЕсли;
				
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяДДС;
				Движение.Сумма = СуммаДДС;
				
			Иначе
				
				Если ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС_", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС+НП+Затраты на документы", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акцизы", Истина) ИЛИ 
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на прибыль (с реализации)", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("ЕСН+НС", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДФЛ", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья.Родитель = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Акциз", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налог на П", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("Налоги прочие", Истина) ИЛИ
					ТекСтрокаПрочие90.Статья = Справочники.СтатьиЗатрат.НайтиПоНаименованию("НДС", Истина)
					Тогда
					Движение.СчетДт = ПланыСчетов.Учетный.Счет6801();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт, 1, ТекСтрокаПрочие90.Статья);
				Иначе
					Движение.СчетДт = ПланыСчетов.Учетный.Счет7601();
					УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,Движение.СчетДт, 1, ТекСтрокаПрочие90.Статья);
				КонецЕсли;
				Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаПрочие90.Источник);
				УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаПрочие90.СчетОрганизации);
				
				Если Движение.СчетКт.УчетПоПодразделениям Тогда
					Движение.ПодразделениеКт = ТекСтрокаПрочие90.Подразделение;
				КонецЕсли;
				
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяДДС;
				Движение.Сумма = СуммаДДС;
				
			КонецЕсли;	
			
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.АвторЗаписи = ТекСтрокаПрочие90.АвторЗаписи;
			//Движение.Заявитель = ТекСтрокаПрочие90.Заявитель;
			//Движение.ПодразделениеЗаявителя = ТекСтрокаПрочие90.ПодразделениеЗаявителя;
			Движение.СценарийПлана = Сценарий;
			Движение.Содержание = Основание;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОбъемРеализации(Номенклатура, Месяц)
	
	ОбъемРеализации = 0;
	ПоискСтрок = Новый Структура("Номенклатура, Месяц", Номенклатура, Месяц);
	ОтобранныеСтроки = БюджетПродаж.НайтиСтроки(ПоискСтрок);
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ОбъемРеализации = ОбъемРеализации + ТекСтрока.Количество;	
	КонецЦикла; 
	
	Возврат ОбъемРеализации;
	
КонецФункции

///////////////////////////////////////распределение прибыли///////////////////////////////////////////////
Процедура РаспределениеПрибыли()
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	ТаблицаПрибыли.Свернуть("Месяц", "Сумма");
	
	Для Каждого ТекСтрокаРаспределениеПрибыли Из РаспределениеПрибыли Цикл
		ТекДата = ТекСтрокаРаспределениеПрибыли.Месяц;
		
		СтруктураПоиска = Новый Структура("Месяц", ТекСтрокаРаспределениеПрибыли.Месяц) ;
		ОтобранныеСтроки = ТаблицаПрибыли.НайтиСтроки(СтруктураПоиска);
		Если ОтобранныеСтроки.Количество() Тогда
			СуммаФРТекМесяца1 = ОтобранныеСтроки[0].Сумма;
		Иначе
			СуммаФРТекМесяца1 = 0;
		КонецЕсли;
		
		СуммаФР = (ТекСтрокаРаспределениеПрибыли.ДоляУчастника / 100) * СуммаФРТекМесяца1;
		
		// распределяем прибыль
		Если СуммаФР Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет99();
			// обращение № 3921
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаРаспределениеПрибыли.Подразделение;
			КонецЕсли;
			
			Движение.СчетКт = ПланыСчетов.Учетный.Счет7502();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = СуммаФР;
			Движение.Содержание = ТекСтрокаРаспределениеПрибыли.Комментарий + " " + строка(ТекСтрокаРаспределениеПрибыли.ДоляУчастника) + "% от " +
			Строка(СуммаФРТекМесяца1);
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина)] = ТекСтрокаРаспределениеПрибыли.Участник;		
		КонецЕсли;
		
		// изъятия
		Если ТекСтрокаРаспределениеПрибыли.Изъятия Тогда
			
			СтатьяИз = ?(ПустаяСтрока(ТекСтрокаРаспределениеПрибыли.СтатьяБДДС), ТекСтрокаРаспределениеПрибыли.Участник.СтатьяБДДС, ТекСтрокаРаспределениеПрибыли.СтатьяБДДС); 
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет7502();
			Движение.СчетКт = БюджетныйНаСервере.ПолучитьИсточник(ТекСтрокаРаспределениеПрибыли.Источник);
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаРаспределениеПрибыли.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаРаспределениеПрибыли.Изъятия;
			Движение.Содержание = ТекСтрокаРаспределениеПрибыли.Комментарий;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Учредители", Истина)] = ТекСтрокаРаспределениеПрибыли.Участник;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = СтатьяИз;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаРаспределениеПрибыли.СчетОрганизации);			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////кредиты///////////////////////////////////////////////////////////
Процедура Кредиты()
	
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	
	СписыватьНаРеализацию = Истина;
	Если ОбъемПроизводства.Количество() И НЕ БезБюджетаПроизводства Тогда
		СписыватьНаРеализацию = Ложь;
	КонецЕсли;
	
	
	Движения.Учетный.Записывать = Истина;
	Для Каждого ТекСтрокаКредиты Из Кредиты Цикл
		ТекДата = ТекСтрокаКредиты.Месяц;
		СтруктураПоиска = Новый Структура("Субконто1", ТекСтрокаКредиты.Кредит) ;
		//ВыборкаКредиты = РезультатКредиты.Выбрать();
		//СальдоНачало = 0;
		//Если ВыборкаКредиты.НайтиСледующий(СтруктураПоиска) Тогда
		//	СальдоНачало = - ВыборкаКредиты.СуммаНачальныйОстаток;		
		//КонецЕсли;
		//ПроцентыНачислено = СальдоНачало * (ТекСтрокаКредиты.Процент / 100) * (День(КонецМесяца(Дата)) - День(НачалоМесяца(Дата)) + 1) / 365;
		//ДеньПоступления = ?(ТекСтрокаКредиты.ДеньПолучения, ТекСтрокаКредиты.ДеньПолучения, День(КонецМесяца(Дата)));
		//ДеньГашения = ?(ТекСтрокаКредиты.ДеньГашения, ТекСтрокаКредиты.ДеньГашения, День(НачалоМесяца(Дата)));
		//ДеньПоступления = ?(УказыватьДни, ДеньПоступления, День(НачалоМесяца(Дата)));
		//ДеньГашения = ?(УказыватьДни, ДеньГашения, День(НачалоМесяца(Дата)));
		//ПроцентыНачислено = ПроцентыНачислено + ТекСтрокаКредиты.Поступление * (ТекСтрокаКредиты.Процент / 100) * (День(КонецМесяца(Дата)) - ДеньПоступления + 1) / 365;
		//ПроцентыНачислено = ПроцентыНачислено - ТекСтрокаКредиты.Гашение * (ТекСтрокаКредиты.Процент / 100) * (День(КонецМесяца(Дата)) - ДеньГашения) / 365;
		//
		//ПроцентыОплата = ПроцентыНачислено;
		
		
		// получение кредита
		Если ТекСтрокаКредиты.Поступление Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет5101();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет6701();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаКредиты.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаКредиты.Поступление;
			Движение.Содержание = ТекСтрокаКредиты.Основание;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("1600.01");
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Кредиты] = ТекСтрокаКредиты.Кредит;
		КонецЕсли; 
		// гашение кредита
		Если ТекСтрокаКредиты.Гашение Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет6701();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет5101();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаКредиты.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаКредиты.Гашение;
			Движение.Содержание = ТекСтрокаКредиты.Основание;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Кредиты] = ТекСтрокаКредиты.Кредит;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2220.01");
		КонецЕсли;

		
		
		Если ТекСтрокаКредиты.Представительские Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.Счет91();
			Движение.СчетКт = ПланыСчетов.Учетный.Счет5001();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = ТекСтрокаКредиты.Подразделение;
			КонецЕсли;
			
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = ТекСтрокаКредиты.Подразделение;
			КонецЕсли;
			
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаКредиты.Представительские;
			Движение.Содержание = ТекСтрокаКредиты.Основание;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи затрат", Истина)] = Неопределено;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Статьи ДДС", Истина)] = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("2210.04");
			ДобавитьСтрокуПрибыли(ТекСтрокаКредиты.Месяц, - ТекСтрокаКредиты.Представительские);
		КонецЕсли;
		
		
	КонецЦикла;

КонецПроцедуры

/////////////////////////////////////////ОБ///////////////////////////////////////////////////////////////
Процедура ОБ()
	
	Возврат;
	
	ГруппаАктив = Справочники.Д_СтатьиОборотки.АКТИВ;
	НачДата = НачалоМесяца(Сценарий.ДатаНачала + 60 * 60 * 24);
	Для Каждого ТекСтрокаСтатьиОборотки Из СтатьиОборотки Цикл
		ТекДата = ТекСтрокаСтатьиОборотки.Месяц;
		Если ТекСтрокаСтатьиОборотки.Сумма Тогда
			
			Если ТекСтрокаСтатьиОборотки.СтатьяБаланса.ПринадлежитЭлементу(ГруппаАктив) Тогда
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.СчетЛИМ();
				Движение.СчетКт = ПланыСчетов.Учетный.СчетНулевой();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаСтатьиОборотки.Сумма;
				Движение.КоличествоДт = ТекСтрокаСтатьиОборотки.Количество;
				Движение.КоличествоКРХДт = ТекСтрокаСтатьиОборотки.КоличествоКРХ;
				Движение.Содержание = ТекСтрокаСтатьиОборотки.Основание;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Д_СтатьиОборотки] = ТекСтрокаСтатьиОборотки.СтатьяБаланса;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина)] = ТекСтрокаСтатьиОборотки.Материалы;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаСтатьиОборотки.Номенклатура;
			Иначе
				Движение = Движения.Учетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Учетный.СчетНулевой();
				Движение.СчетКт = ПланыСчетов.Учетный.СчетЛИМ();
				Движение.Период = ТекДата;
				Движение.Предприятия = Предприятие;
				Движение.СценарийПлана = Сценарий;
				Движение.Сумма = ТекСтрокаСтатьиОборотки.Сумма;
				Движение.КоличествоКт = ТекСтрокаСтатьиОборотки.Количество;
				Движение.КоличествоКРХКт = ТекСтрокаСтатьиОборотки.КоличествоКРХ;
				Движение.Содержание = ТекСтрокаСтатьиОборотки.Основание;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Д_СтатьиОборотки] = ТекСтрокаСтатьиОборотки.СтатьяБаланса;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина)] = ТекСтрокаСтатьиОборотки.Материалы;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаСтатьиОборотки.Номенклатура;
				
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрокаСтатьиОборотки Из Неликвиды Цикл
		ТекДата = ТекСтрокаСтатьиОборотки.Месяц;
		
		Если ТекСтрокаСтатьиОборотки.Сумма Тогда
			Движение = Движения.Учетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Учетный.СчетЛИМ();
			Движение.СчетКт = ПланыСчетов.Учетный.СчетНулевой();
			Движение.Период = ТекДата;
			Движение.Предприятия = Предприятие;
			Движение.СценарийПлана = Сценарий;
			Движение.Сумма = ТекСтрокаСтатьиОборотки.Сумма;
			Движение.КоличествоДт = ТекСтрокаСтатьиОборотки.Количество;
			Движение.Содержание = ТекСтрокаСтатьиОборотки.Основание;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Д_СтатьиОборотки] = Справочники.Д_СтатьиОборотки.Неликвиды;			
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Материалы", Истина)] = ТекСтрокаСтатьиОборотки.Материалы;
			//Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.НайтиПоНаименованию("Номенклатура", Истина)] = ТекСтрокаСтатьиОборотки.Номенклатура;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


Функция ВычислитьСебестоимостьЕдинойНоменклатуры(СоответствияНоменклатур, ТекМесяц) 
	
	ОбщКолРеализация = 0;
	ОбщСуммаРеализация = 0;
	
	Для Каждого СтрокаСоответствия Из СоответствияНоменклатур Цикл
		
		СтрокиПроизведеннойНоменклатуры = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(Новый Структура("Номенклатура, Месяц", СтрокаСоответствия, ТекМесяц));
		
		Если Не СтрокиПроизведеннойНоменклатуры.Количество() Тогда
			Продолжить
		Иначе
			
			//ОбщКолРеализация = ОбщКолРеализация + СтрокиПроизведеннойНоменклатуры[0].РеализацияКоличество;
			//ОбщСуммаРеализация = ОбщСуммаРеализация + СтрокиПроизведеннойНоменклатуры[0].РеализацияСумма * СтрокиПроизведеннойНоменклатуры[0].РеализацияКоличество;
			//
			
			ОбщКолРеализация = ОбщКолРеализация + СтрокиПроизведеннойНоменклатуры[0].ОстаткиНачалоКоличество + СтрокиПроизведеннойНоменклатуры[0].Объем;
			ОбщСуммаРеализация = ОбщСуммаРеализация + СтрокиПроизведеннойНоменклатуры[0].ОстаткиНачалоСумма + СтрокиПроизведеннойНоменклатуры[0].Затраты; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Если СоответствияНоменклатур.Количество() Тогда
	//	СтрокиЕдинойНоменклатуры = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(Новый Структура("Номенклатура, Месяц", СоответствияНоменклатур[0].ЕдинаяНоменклатура, ТекМесяц));
	//	//СтрокиЕдинойНоменклатурыНачОст = ТаблицаПрозведенныхНоменклатур.НайтиСтроки(Новый Структура("Номенклатура", СоответствияНоменклатур[0].ЕдинаяНоменклатура));
	//	Если СтрокиЕдинойНоменклатуры.Количество() Тогда
	//		ОбщКолРеализация = ОбщКолРеализация + СтрокиЕдинойНоменклатуры[0].Объем + СтрокиЕдинойНоменклатуры[0].ОстаткиНачалоКоличество;
	//		ОбщСуммаРеализация = ОбщСуммаРеализация + СтрокиЕдинойНоменклатуры[0].Затраты + СтрокиЕдинойНоменклатуры[0].ОстаткиНачалоСумма; 
	//	КонецЕсли;
	//КонецЕсли;	
	
	Возврат ?(ОбщКолРеализация = 0, 0, ОбщСуммаРеализация / ОбщКолРеализация);
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого Строка ИЗ БюджетПродаж Цикл
		
		Если ЗначениеЗаполнено(Строка.Авто) И НЕ ЗначениеЗаполнено(Строка.ВозмещениеТр2) Тогда  			
			Текст = "При заполненой ставке транспортных расходов на Авто необходимо указать условие доставки!!";
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, Текст, "БюджетПродаж", Строка.НомерСтроки , "ВозмещениеТр2", отказ);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.ЖД) И НЕ ЗначениеЗаполнено(Строка.ВозмещениеТр) Тогда
			Текст = "При заполненой ставке транспортных расходов на ж/д необходимо указать условие доставки!!";
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, Текст, "БюджетПродаж", Строка.НомерСтроки , "ВозмещениеТр", отказ);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Сопровождение) И НЕ ЗначениеЗаполнено(Строка.ВозмещениеСопровождения) Тогда
			Текст = "При заполненой ставке расходов на сопровождение необходимо указать условие доставки!!";
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, Текст, "БюджетПродаж", Строка.НомерСтроки , "ВозмещениеСопровождения", отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ТекСТрока Из ВводОстатковПрочее Цикл
		Если ТипЗнч(ТекСТрока.Субконто1) = Тип("СправочникСсылка.Номенклатура") Тогда		
			Если НЕ ТекСТрока.Субконто1.ПризнакНоменклатуры = "Производство" И НЕ ТекСТрока.Субконто1.ПризнакНоменклатуры = "Вторичная переработка" Тогда
				Текст = "Внимание, в остатках присутствует оборотная(транзитная) номенклатура!!!";
				сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, Текст, "ВводОстатковПрочее", ТекСТрока.НомерСтроки , "Субконто1", отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры


Процедура ОпределитьКорсчет(ТекСтрокаБюджетСебестоимости, Движение, Счет, ПризнакСуммы = "ФР")
	
	Если Счет = "СчетДт" Тогда
		Субконто = "СубконтоДт";
	Иначе
		Субконто = "СубконтоКт";	
	КонецЕсли;
	
	Если ТекСтрокаБюджетСебестоимости.ВНХ Тогда
		Движение[Счет] = ПланыСчетов.Учетный.Счет7901();
		УЧ_Сервер.УстановитьСубконто(Движение[Субконто],Движение[Счет], 2, ТекСтрокаБюджетСебестоимости.СтатьяЗатрат);
	Иначе
		Движение[Счет] = ПланыСчетов.Учетный.Счет6001();
		УЧ_Сервер.УстановитьСубконто(Движение[Субконто], Движение[Счет], 1, ТекСтрокаБюджетСебестоимости.Контрагент);
		УЧ_Сервер.УстановитьСубконто(Движение[Субконто], Движение[Счет], 2, ТекСтрокаБюджетСебестоимости.Договор);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
		
	Если Не Валюта = Предприятие.ОсновнаяВалютаУчета Тогда
		БюджетныйНаСервере.УстановитьПлановыйКурсВалюты(Сценарий, Валюта, ?(ЗначениеЗаполнено(Предприятие.ОсновнаяВалютаУчета), Предприятие.ОсновнаяВалютаУчета, УЧ_Сервер.НациональнаяВалюта()));
	КонецЕсли;
	
	сабОбщегоНазначения.сабПлатКалПриЗаписиОбъектовПриЗаписи(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры





