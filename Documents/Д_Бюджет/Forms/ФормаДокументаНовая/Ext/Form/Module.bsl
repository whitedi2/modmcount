
#Область Общие

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РежимВосстановления") и Параметры.РежимВосстановления Тогда
		сабОбщегоНазначения.ВосстановлениеРеквизитовФормы(ЭтаФорма);
		РежимВосстановления = Истина;
	Иначе 
		РежимВосстановления = Ложь;
	КонецЕсли;
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	
	
	ОбновитьНадписьНеперенесенных();
	БлокироватьДанныеФормы = Истина;
	
	ДозаполнитьБюджетПродажТипомНоменк();
	
	ГруппаБюджет = БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел");
	
	Если ЗначениеЗаполнено(Объект.Сценарий) Тогда
		
		// Б_ПараметрыБюджета	
		РеквизитыДоступности = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Объект.Предприятие, Объект.Сценарий);
		
		Если ЗначениеЗаполнено(РеквизитыДоступности) Тогда
			РД_Утвержден = РеквизитыДоступности.Утвержден;
			РД_ПризнакРедактирования = РеквизитыДоступности.ПризнакРедактирования;
			РД_ПризнакРедактированияБО = РеквизитыДоступности.ПризнакРедактированияБО;
		Иначе
			РД_Утвержден = Ложь;
			РД_ПризнакРедактирования = Ложь;
			РД_ПризнакРедактированияБО = Ложь;
		КонецЕсли;
			
		Если Не Объект.Ссылка.Пустая() Тогда
			
			Если РД_Утвержден Тогда
				
				Если Не ГруппаБюджет Тогда
					ЭтаФорма.ТолькоПросмотр = 1;
				Иначе
					
					Если РД_ПризнакРедактированияБО Тогда
						ЭтаФорма.ТолькоПросмотр = 1;
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе		
				
				Если ГруппаБюджет Тогда
					
					Если РД_ПризнакРедактированияБО Тогда
						ЭтаФорма.ТолькоПросмотр = 1;	
					КонецЕсли
					
				Иначе
					
					Если РД_ПризнакРедактирования Тогда
						ЭтаФорма.ТолькоПросмотр = 1;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;

		
	КонецЕсли;
	
	// доступность корректировок для БО в любом случае
	Если Объект.ДоступностьТЧ.НайтиСтроки(Новый Структура("ИмяТЧ", "ЗатратыКП")).Количество() И ГруппаБюджет Тогда
		ЭтоБюджетныйОтдел = Истина;
	Иначе
		ЭтоБюджетныйОтдел = Ложь;
	КонецЕсли;

	
	//заполняем дерево корректировок
	ЗаполнитьДеревоКорректировок();
	
	// связка бюджет-оперативный_бюджет
	ОбработанныеОперативныеБюджеты.Очистить();
	// актуализация данных ОБ
	ПолучитьАктуальныеДанныеПоНепринятымСтрокам();
	
	ЗаполнитьКорректировкиБП();
	

	
КонецПроцедуры


&НаСервере
Функция РассчитатьНепринятыеКБюджетуСтрокиОБ(Сценарий, Предприятие, ПеренесенныеУИДы, ЗаполняетсяКорректировка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗаполняетсяКорректировка Тогда
		СценарийОБ = РасчетыБюджет.ПолучитьСценарийДляОперативныхБюджетов(Сценарий);
	Иначе
		СценарийОБ = Сценарий
	КонецЕсли;
	
	АктуальныйПериод = Null;
	
	Если Не СценарийОБ = Сценарий Тогда
		АктуальныйПериод = Сценарий.АктуальнаяДата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ЗаполняетсяКорректировка Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка.Предприятие КАК ЦФОЗаявителя,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка.Подразделение КАК ПодразделениеЗаявителя,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка.Автор КАК АвторЗаписи,
		               |	Д_БюджетПрочихПроектовЗатратыКП.СтатьяЗатрат,
		               |	Д_БюджетПрочихПроектовЗатратыКП.СуммаСеб,
		               |	Д_БюджетПрочихПроектовЗатратыКП.СуммаБДДС,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Основание,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Месяц КАК Месяц,
		               |	Д_БюджетПрочихПроектовЗатратыКП.УИД КАК УИДОперативногоБюджета,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Бюджет,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка КАК ОперативныйБюджет,
		               |	Д_БюджетПрочихПроектовЗатратыКП.Номенклатура,
		               |	Д_БюджетПрочихПроектовЗатратыКП.СтатьяБДДС,
		               |	Д_БюджетПрочихПроектовЗатратыКП.ВНХ,
		               |	Д_БюджетПрочихПроектовЗатратыКП.ВнесенаВБюджет,
		               |	Д_БюджетПрочихПроектовЗатратыКП.НаЕдиницу,
		               |	Д_БюджетПрочихПроектовЗатратыКП.ВидДеятельности КАК Подразделение,
		               |	Д_БюджетПрочихПроектовЗатратыКП.ИнвПроект
		               |ИЗ
		               |	Документ.Д_БюджетПрочихПроектов.ЗатратыКП КАК Д_БюджетПрочихПроектовЗатратыКП
		               |ГДЕ
		               |	Д_БюджетПрочихПроектовЗатратыКП.Ссылка.Сценарий = &Сценарий
		               |	И Д_БюджетПрочихПроектовЗатратыКП.ЦФО = &ЦФО
		               |	И ВЫБОР
		               |			КОГДА &АктуальныйПериод ЕСТЬ NULL 
		               |				ТОГДА ИСТИНА
		               |			ИНАЧЕ Д_БюджетПрочихПроектовЗатратыКП.Месяц = &АктуальныйПериод
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Месяц,
		               |	ЦФОЗаявителя,
		               |	АвторЗаписи
		               |АВТОУПОРЯДОЧИВАНИЕ";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка,
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка.Предприятие КАК ЦФОЗаявителя,
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка.Подразделение КАК ПодразделениеЗаявителя,
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка.Автор КАК АвторЗаписи,
		               |	Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат,
		               |	Д_БюджетПрочихПроектовЗатраты.СуммаСеб,
		               |	Д_БюджетПрочихПроектовЗатраты.СуммаБДДС,
		               |	Д_БюджетПрочихПроектовЗатраты.Основание,
		               |	Д_БюджетПрочихПроектовЗатраты.Месяц КАК Месяц,
		               |	Д_БюджетПрочихПроектовЗатраты.УИД КАК УИДОперативногоБюджета,
		               |	Д_БюджетПрочихПроектовЗатраты.Подразделение,
		               |	Д_БюджетПрочихПроектовЗатраты.Бюджет,
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка КАК ОперативныйБюджет,
		               |	Д_БюджетПрочихПроектовЗатраты.Номенклатура,
		               |	Д_БюджетПрочихПроектовЗатраты.Признак,
		               |	Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС,
		               |	Д_БюджетПрочихПроектовЗатраты.ВНХ,
		               |	Д_БюджетПрочихПроектовЗатраты.ВнесенаВБюджет,
		               |	Д_БюджетПрочихПроектовЗатраты.НаЕдиницу,
		               |	Д_БюджетПрочихПроектовЗатраты.ИнвПроект
		               |ИЗ
		               |	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
		               |ГДЕ
		               |	Д_БюджетПрочихПроектовЗатраты.Ссылка.Сценарий = &Сценарий
		               |	И Д_БюджетПрочихПроектовЗатраты.ЦФО = &ЦФО
		               |	И ВЫБОР
		               |			КОГДА &АктуальныйПериод ЕСТЬ NULL 
		               |				ТОГДА ИСТИНА
		               |			ИНАЧЕ Д_БюджетПрочихПроектовЗатраты.Месяц = &АктуальныйПериод
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Месяц,
		               |	ЦФОЗаявителя,
		               |	АвторЗаписи
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Сценарий", СценарийОБ);
	Запрос.УстановитьПараметр("АктуальныйПериод", ?(ЗначениеЗаполнено(АктуальныйПериод), НачалоМесяца(АктуальныйПериод), АктуальныйПериод));
	Запрос.УстановитьПараметр("ЦФО", Предприятие);
	//Запрос.УстановитьПараметр("УИД", ПеренесенныеУИДы);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	КоличествоНепринятых = 0;
	
	Если ЗаполняетсяКорректировка Тогда
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтрокиКП
	Иначе
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтроки
	КонецЕсли;
	
	ТаблицаНепринятыхСтрокОБ.Очистить();
	Для каждого ТекСтрока Из Выборка Цикл
		//Если Не ЗначениеЗаполнено(ТекСтрока.УтвержденныйБП) Тогда
		//	Прервать;
		//КонецЕсли;
		НоваяСтрока = ТаблицаНепринятыхСтрокОБ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.НомерСтроки = Выборка.Индекс(ТекСтрока) + 1;
		// связка бюджет-оперативный_бюджет
		Попытка ЗаблокироватьДанныеДляРедактирования(ТекСтрока.ОперативныйБюджет)
		Исключение
			НоваяСтрока.Заблокирован = Истина
		КонецПопытки;
		//
		Если НЕ ТекСтрока.ВнесенаВБюджет Тогда
			КоличествоНепринятых = КоличествоНепринятых + 1;		
			НоваяСтрока.Принять = Ложь;
		Иначе
			НоваяСтрока.Принять = Истина;
		КонецЕсли;
	КонецЦикла; 
	
	ИзмененныеСтрокиДобавленные = РасчетыБюджет.ПолучитьИзмененныеСтрокиОперативныхБюджетов(Объект.Ссылка, Истина);
	ИзмененныеСтрокиУдаленные = РасчетыБюджет.ПолучитьИзмененныеСтрокиОперативныхБюджетов(Объект.Ссылка, Ложь);
	
	Для Каждого СтрокаДоб Из ИзмененныеСтрокиДобавленные Цикл
		НайденныеСтроки = ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет, УИДОперативногоБюджета", СтрокаДоб.ОперативныйБюджет, СтрокаДоб.УИДСтроки));
		Если НайденныеСтроки.Количество() Тогда
			НайденныеСтроки[0].Принять = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДоб Из ИзмененныеСтрокиУдаленные Цикл
		НайденныеСтроки = ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет, УИДОперативногоБюджета", СтрокаДоб.ОперативныйБюджет, СтрокаДоб.УИДСтроки));
		Если НайденныеСтроки.Количество() Тогда
			НайденныеСтроки[0].Принять = Ложь;
			КоличествоНепринятых = КоличествоНепринятых + 1;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат КоличествоНепринятых;
	
КонецФункции // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МодифицированностьБезПроведения = Ложь;
	НепроизводственноеПредприятие = НЕ БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "ПроизводственноеПредприятие");
	
	СценарийПриИзменении(Неопределено);
	МесяцПриИзменении(Неопределено);
	
	
	
	ПредприятиеПриИзменении(Неопределено);	
	
	
	МассивТЧДоступность = ПолучитьДоступностьТЧ(Объект.Ссылка);
	
	Если Не МассивТЧДоступность = Неопределено Тогда
		
		Для каждого ТекСтрока Из МассивТЧДоступность Цикл
			Элементы[ТекСтрока].ТолькоПросмотр = Истина;
			Попытка
				Элементы["КопироватьСтроки" + ТекСтрока].Доступность = Ложь;
			Исключение
			КонецПопытки;
			Попытка
				Элементы["Загрузка" + ТекСтрока].Доступность = Ложь;
			Исключение
			КонецПопытки;
			
			//неоптимально. лучше перебор всех команд с признаком редактирования ТЧ
			Если ТекСтрока = "ОбъемПроизводства" Тогда
				Элементы["ОбъемПроизводстваПолучитьБюджетПроизводства"].Доступность = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		//исключения для бюджетного отдела
		//Если БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") Тогда
		//	Для каждого ТекСтрока Из Объект.ДоступностьТЧ Цикл
		//		Если НЕ ТекСтрока.ДоступностьОграничена Тогда
		//			Попытка
		//				Элементы[ТекСтрока.ИмяТЧ].ТолькоПросмотр = Ложь;
		//			Исключение
		//			КонецПопытки;
		//			Попытка
		//				Элементы["КопироватьСтроки" + ТекСтрока.ИмяТЧ].Доступность = Истина;
		//			Исключение
		//			КонецПопытки;
		//			Попытка
		//				Элементы["Загрузка" + ТекСтрока.ИмяТЧ].Доступность = Истина;
		//			Исключение
		//			КонецПопытки; 
		//		КонецЕсли;
		//	КонецЦикла; 
		//КонецЕсли;
	КонецЕсли;
	
	//КонецЕсли;
	
	СценарийДО = Объект.Сценарий;
	РазграничениеВидимостиИДоступности(Отказ);
	ОтразитьДетализацию();
	
	Если ФоновоеПроведение() Тогда
		ПодключитьОбработчикОжидания("ПроверитьПроведение", 1);
	КонецЕсли;
	
	//ОбщегоНазначенияКлиентСервер.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	//
	//Если Не РежимВосстановления Тогда
	//	ЭтаФорма.ПодключитьОбработчикОжидания("АвтосохранениеРеквизитовФормыНаКлиенте", 30);
	//КонецЕсли;
	
	//
	
	
	//Этаформа.ВладелецФормы.ТекущаяСтрока = Ссылка
	Если БлокироватьДанныеФормы Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДеревоКорректировок()
	
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	
	Если НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") И НЕ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") Тогда
		
		Если НЕ Объект.Ссылка.Пустая() Тогда
			Элементы.Сценарий.Доступность = Ложь;
		Иначе
			ЗапретРедактирования = Ложь;
			ПараметрыТекущегоБюджета = БюджетныйНаСервере.ПолучитьПоследнююЗаписьПараметровБюджета(Объект.Предприятие, Объект.Сценарий);
			
			Если ЗначениеЗаполнено(ПараметрыТекущегоБюджета) Тогда
				ЗапретРедактирования = ПараметрыТекущегоБюджета.ПризнакРедактирования;
			КонецЕсли;
			
			Элементы.Страницы.Доступность = 1 - ЗапретРедактирования;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("сабБюдПланированиеПоИсточникам", Объект.Сценарий));
		
	МассивПредставлений = Новый Массив;
	МассивПредставлений.Добавить("");
	МассивПредставлений.Добавить("Январь");
	МассивПредставлений.Добавить("Февраль");
	МассивПредставлений.Добавить("Март");
	МассивПредставлений.Добавить("Апрель");
	МассивПредставлений.Добавить("Май");
	МассивПредставлений.Добавить("Июнь");
	МассивПредставлений.Добавить("Июль");
	МассивПредставлений.Добавить("Август");
	МассивПредставлений.Добавить("Сентябрь");
	МассивПредставлений.Добавить("Октябрь");
	МассивПредставлений.Добавить("Ноябрь");
	МассивПредставлений.Добавить("Декабрь");
	Элементы.Месяц.СписокВыбора.Очистить();
	
	Если НЕ Объект.Сценарий.Пустая() Тогда
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
		ТекДата = ДатаНачала;
		
		Если Элемент <> Неопределено Тогда
			Объект.Дата = ТекДата;
		КонецЕсли;
		
		Пока ТекДата <= ДатаОкончания Цикл
			Элементы.Месяц.СписокВыбора.Добавить(НачалоМесяца(ТекДата), МассивПредставлений[Месяц(ТекДата)] + " " + Строка(Год(ТекДата)));
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		Если Элемент <> Неопределено Тогда
			
			Если НЕ ЗначениеЗаполнено(Объект.Месяц) Тогда            
				Объект.Месяц = Элементы.Месяц.СписокВыбора[0].Значение;
			Иначе
				Объект.Месяц = Объект.Месяц;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//считае месяцы по сценариюДО
	Если Не СценарийДО.Пустая() Тогда
		
		ДатаНачала = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаНачала") + 60 * 60 * 24);
		ДатаОкончания = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(СценарийДО, "ДатаКонца"));
		ТекДата = ДатаНачала;
		КоличествоМесяцевДо = 0;
		
		Пока ТекДата <= ДатаОкончания Цикл
			КоличествоМесяцевДо = КоличествоМесяцевДо + 1;
			ТекДата = ДобавитьМесяц(ТекДата, 1);
		КонецЦикла;
		
		Если КоличествоМесяцевДо > Элементы.Месяц.СписокВыбора.Количество() И Элемент <> Неопределено Тогда
			Если Вопрос("Вы изменили сценарий бюджета, при этом ВСЕ данные, по месяцам не входящим в текущий сценарий, будут удалены. Вы уверены?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
				УдалитьЛишниеМесяцы();
			Иначе
				Объект.Сценарий = СценарийДО;
				СценарийПриИзменении(0);
				Возврат;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Месяц.СписокВыбора.Вставить(0, Дата(3000, 12, 31), "Все",,БиблиотекаКартинок.УстановитьФлажки);
	
	Если Элемент <> Неопределено ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Месяц = Дата(3000, 12, 31);
	КонецЕсли;
	//Если 1 месяц, то подразумевается корректировочный бюджет
	Если Элементы.Месяц.СписокВыбора.Количество() = 2 И БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ВидБюджета") = ПредопределенноеЗначение("Перечисление.Д_ВидыБюджета.КорректировочныйБюджет") Тогда
		КорректировочныйБюджет = Истина;
	Иначе
		КорректировочныйБюджет = Ложь;
		//Если НЕ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
		Если Объект.ЗатратыКП.Количество() И Элемент <> Неопределено Тогда
			Если Вопрос("После изменения сценария таблица бюджета корректировок будет очищена. Продолжить? ", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.ЗатратыКП.Очистить();
				Объект.ЗатратыКПИнвестиции.Очистить();
			КонецЕсли;
		КонецЕсли;
		//КонецЕсли;
	КонецЕсли;

	СписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	СписокМесяцев.Удалить(0);
	Элементы.Затраты.ПодчиненныеЭлементы.ЗатратыМесяц.СписокВыбора.Очистить();
	Элементы.ОбъемПроизводства.ПодчиненныеЭлементы.ОбъемПроизводстваМесяц.СписокВыбора.Очистить();
	Элементы.ДвижениеСырья.ПодчиненныеЭлементы.ДвижениеСырьяМесяц.СписокВыбора.Очистить();
	Элементы.Инвестиции.ПодчиненныеЭлементы.ИнвестицииМесяц.СписокВыбора.Очистить();
	Элементы.Прочие90.ПодчиненныеЭлементы.Прочие90Месяц.СписокВыбора.Очистить();
	Элементы.БюджетПродаж.ПодчиненныеЭлементы.БюджетПродажМесяц.СписокВыбора.Очистить();
	Элементы.Кредиты.ПодчиненныеЭлементы.КредитыМесяц.СписокВыбора.Очистить();
	Элементы.ПР.ПодчиненныеЭлементы.ПРМесяц.СписокВыбора.Очистить();
	Элементы.СтатьиОборотки.ПодчиненныеЭлементы.СтатьиОбороткиМесяц.СписокВыбора.Очистить();
	Элементы.Неликвиды.ПодчиненныеЭлементы.НеликвидыМесяц.СписокВыбора.Очистить();
	Элементы.РаспределениеПрибыли.ПодчиненныеЭлементы.РаспределениеПрибылиМесяц.СписокВыбора.Очистить();
	Элементы.ЗатратыКП.ПодчиненныеЭлементы.ЗатратыКПМесяц.СписокВыбора.Очистить();
	Элементы.ПоказателиОперационнойДеятельности.ПодчиненныеЭлементы.ПоказателиОперационнойДеятельностиМесяц.СписокВыбора.Очистить();
	Для Каждого ТекЭлементМесяц Из СписокМесяцев Цикл 
		Элементы.Затраты.ПодчиненныеЭлементы.ЗатратыМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.ОбъемПроизводства.ПодчиненныеЭлементы.ОбъемПроизводстваМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.ДвижениеСырья.ПодчиненныеЭлементы.ДвижениеСырьяМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.Инвестиции.ПодчиненныеЭлементы.ИнвестицииМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.Прочие90.ПодчиненныеЭлементы.Прочие90Месяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.БюджетПродаж.ПодчиненныеЭлементы.БюджетПродажМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.Кредиты.ПодчиненныеЭлементы.КредитыМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);		
		Элементы.ПР.ПодчиненныеЭлементы.ПРМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.СтатьиОборотки.ПодчиненныеЭлементы.СтатьиОбороткиМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.Неликвиды.ПодчиненныеЭлементы.НеликвидыМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.РаспределениеПрибыли.ПодчиненныеЭлементы.РаспределениеПрибылиМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.ЗатратыКП.ПодчиненныеЭлементы.ЗатратыКПМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);
		Элементы.ПоказателиОперационнойДеятельности.ПодчиненныеЭлементы.ПоказателиОперационнойДеятельностиМесяц.СписокВыбора.Добавить(ТекЭлементМесяц.Значение, ТекЭлементМесяц.Представление);		
	КонецЦикла;

	//Если НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() Тогда
	Элементы.СтраницаКорректировки.Видимость = КорректировочныйБюджет;
	Элементы.СценарийПП.Видимость = КорректировочныйБюджет;
	//Элементы.ОтчетКорректировки.Видимость = КорректировочныйБюджет;
	Элементы.СценарийПП.Видимость = КорректировочныйБюджет;
	//Элементы.БюджетСебестоимости.ТолькоПросмотр = КорректировочныйБюджет;
	//Элементы.ЗатратыНаПРостой2.ТолькоПросмотр = КорректировочныйБюджет;
	Элементы.Инвестиции.ТолькоПросмотр = КорректировочныйБюджет;
	Элементы.ПР.ТолькоПросмотр = КорректировочныйБюджет;
	//Элементы.Прочие91.ТолькоПросмотр = КорректировочныйБюджет;
	Элементы.Затраты.ТолькоПросмотр = КорректировочныйБюджет;
	Элементы.ИнвестицииКопироватьСтрокиИнвестиции.Доступность = НЕ КорректировочныйБюджет;
	Элементы.ПРКопироватьСтрокиПР.Доступность = НЕ КорректировочныйБюджет;
	Элементы.КопироватьСтрокиЗатраты.Доступность = НЕ КорректировочныйБюджет;
	Элементы.ЗагрузкаЗатраты.Доступность = НЕ КорректировочныйБюджет;
	Элементы.НепринятыеСтроки.ТолькоПросмотр = КорректировочныйБюджет;
	//Элементы.КомандаКорректировкиБюджета.Видимость = КорректировочныйБюджет;
	//Элементы.КомандаУтверждениеКорректировокИнвестиций.Видимость = КорректировочныйБюджет;
	//Элементы.КомандаБюджетЗатрат.Видимость = 1 - КорректировочныйБюджет;
	//Элементы.КомандаБюджетИнвестиций.Видимость = 1 - КорректировочныйБюджет;
	//Элементы.КомандаБюджетПроизводства.Видимость = 1 - КорректировочныйБюджет;
	//КонецЕсли;
//{{MRG[ <-> ]
	Если НЕ Элемент = Неопределено И НЕ Элемент = 0 Тогда
//}}MRG[ <-> ]
//{{MRG[ <-> ]
//	ОбновитьНадписьНеперенесенных();
//}}MRG[ <-> ]
		ОбновитьНадписьНеперенесенных();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишниеМесяцы()
	
	Для каждого ТекЭлемент Из Элементы Цикл
		
		Если Тип(ТекЭлемент) = Тип("ТаблицаФормы") Тогда
			
			Попытка
				
				Для ТекСтрока = 0 По Объект[ТекЭлемент.Имя].Количество() - 1 Цикл
					ТекЗначение = Объект[ТекЭлемент.Имя][ТекСтрока];
					
					Если Элементы.Месяц.СписокВыбора.НайтиПоЗначению(ТекЗначение.Месяц) = Неопределено Тогда
						Объект[ТекЭлемент.Имя].Удалить(ТекЗначение);
						ТекСтрока = -1;
					КонецЕсли;
					
				КонецЦикла; 
				
			Исключение
				
			КонецПопытки;
			
		КонецЕсли;
			
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТабличныеЧасти()
	
	Если Объект.Месяц = Дата(3000, 12, 31) ИЛИ Объект.Месяц = 0 Тогда
		Элементы.ОбъемПроизводства.ОтборСтрок = Неопределено;	
		Элементы.ДвижениеСырья.ОтборСтрок = Неопределено;
		//Элементы.БюджетСебестоимости.ОтборСтрок = Неопределено;
		//Элементы.ЗатратыНаПРостой2.ОтборСтрок = Неопределено;
		Элементы.Инвестиции.ОтборСтрок = Неопределено;
		Элементы.Прочие90.ОтборСтрок = Неопределено;
		//Элементы.Прочие91.ОтборСтрок = Неопределено;
		Элементы.БюджетПродаж.ОтборСтрок = Неопределено;
		Элементы.Затраты.ОтборСтрок = Неопределено;
		Элементы.ЗатратыКП.ОтборСтрок = Неопределено;
		Элементы.НепринятыеСтрокиКП.ОтборСтрок = Неопределено;
		Элементы.Кредиты.ОтборСтрок = Неопределено;
		Элементы.ПР.ОтборСтрок = Неопределено;
		Элементы.СтатьиОборотки.ОтборСтрок = Неопределено;
		Элементы.Неликвиды.ОтборСтрок = Неопределено;
	Иначе
		СтруктураПоиска = Новый Структура("Месяц", Объект.Месяц);
		ФиксСтруктураПоиска = Новый ФиксированнаяСтруктура(СтруктураПоиска);
		
		Элементы.ОбъемПроизводства.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.ДвижениеСырья.ОтборСтрок = ФиксСтруктураПоиска;
		//Элементы.БюджетСебестоимости.ОтборСтрок = ФиксСтруктураПоиска;
		//Элементы.ЗатратыНаПРостой2.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.Инвестиции.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.Прочие90.ОтборСтрок = ФиксСтруктураПоиска;
		//Элементы.Прочие91.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.БюджетПродаж.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.Затраты.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.ЗатратыКП.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.НепринятыеСтрокиКП.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.Кредиты.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.ПР.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.СтатьиОборотки.ОтборСтрок = ФиксСтруктураПоиска;
		Элементы.Неликвиды.ОтборСтрок = ФиксСтруктураПоиска;
	КонецЕсли;
	
	//если первый месяц, то отображать остатки на начало в документах
	Если Элементы.Месяц.СписокВыбора.Количество() > 1 Тогда
		
		Если НЕ Объект.Месяц = Дата(3000, 12, 31) И Объект.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
			Элементы.ДвижениеСырьяГруппа3.Видимость = Истина;
			//Элементы.КредитыНаНачало.Видимость = Истина;
		Иначе
			//Элементы.ДвижениеСырьяГруппа3.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФоновоеПроведение()
	Возврат Ложь;
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьДоступностьТЧ(Ссылка)
	//Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	//КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УтверждениеБюджета.Ссылка,
	|	УтверждениеБюджета.ТипБюджета,
	|	УтверждениеБюджета.ОснованиеЗаблокирован
	|ИЗ
	|	БизнесПроцесс.УтверждениеБюджета КАК УтверждениеБюджета
	|ГДЕ
	|	УтверждениеБюджета.Заявка = &Заявка
	|	И УтверждениеБюджета.ОснованиеЗаблокирован = ИСТИНА
	|	И УтверждениеБюджета.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Заявка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить().ВыгрузитьКолонку("ТипБюджета");
	
	ИменаСтроки = Новый Массив;
	Для каждого ТекТип Из Выборка Цикл
		ТипБюджета = ТекТип;
		Если ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗакупок Тогда
			ИменаСтроки.Добавить("ДвижениеСырья");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетИнвестиций Тогда
			ИменаСтроки.Добавить("Инвестиции");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПродаж Тогда
			ИменаСтроки.Добавить("БюджетПродаж");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиБюджета Тогда
			//ИменаСтроки.Добавить("ЗатратыКП");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводства Тогда
			ИменаСтроки.Добавить("ОбъемПроизводства");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатратСтарый Тогда
			ИменаСтроки.Добавить("Затраты");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда
			//ИменаСтроки.Добавить("ЗатратыКП");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПроизводстваЗатратИПродаж Тогда
			ИменаСтроки.Добавить("ПР");
			ИменаСтроки.Добавить("Затраты");
			ИменаСтроки.Добавить("БюджетПродаж");
			ИменаСтроки.Добавить("РаспределениеПрибыли");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетЗатрат ИЛИ ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетТекущихЗатрат Тогда
			ИменаСтроки.Добавить("Затраты");
		ИначеЕсли ТипБюджета = Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов Тогда
			ИменаСтроки.Добавить("ПР");
		КонецЕсли;
	КонецЦикла;
		
	Если ИменаСтроки.Количество() Тогда
		Возврат ИменаСтроки;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции // ()

&НаКлиенте
Процедура ОтразитьДетализацию()
	
	Для каждого ТекСтрока Из Объект.ОбъемПроизводства Цикл
		ОтобранныеСтроки = Объект.ОбъемПроизводстваДетально.НайтиСтроки(Новый Структура("Месяц, Номенклатура", ТекСтрока.Месяц, ТекСтрока.Номенклатура)).Количество(); 
		ТекСтрока.ЕстьДетализация = ОтобранныеСтроки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивБюджетныхРолей()
	//Финансист проекта
	//Бюджетный отдел
	//Финансист снабжения
	//Финансист КС
	//Финансист стороннего проекта
	Возврат ПараметрыСеанса.ТекущийПользователь.ДоступныеРолиБюджета.ВыгрузитьКолонку("Роль");	
	
КонецФункции

&НаКлиенте
Процедура РазграничениеВидимостиИДоступности(Отказ)
	
	СпиртоваяБаза = ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт();
	
	Если СпиртоваяБаза Тогда
		ВидНоменклатурыБюджетПродаж = "Номенклатура";
		ВидНоменклатурыБюджетКоммРасходов = "Номенклатура";
		Элементы.Валюта.Видимость = Ложь;
		//Элементы.СтраницаПоказателиОперационнойДеятельности.Видимость = Ложь;
		Элементы.ЗатратыСтатья25.Видимость = Ложь;
		Элементы.ЗатратыКПСтатья25.Видимость = Ложь;
	Иначе
		//Элементы.СтраницаПоказателиОперационнойДеятельности.Видимость = (Строка(БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "Родитель")) = "Гостиничное направление");
	КонецЕсли;	
		
	//Если Объект.БезБюджетаПроизводства Тогда
	//	Элементы.ЗатратыКПНаЕдиницу.Видимость = Ложь;
	//	Если СпиртоваяБаза Тогда
	//		Элементы.ЗатратыКПНоменклатура.Видимость = Ложь; // себестоимость для непроизводственных проектов (Отель)
	//	КонецЕсли;	
	//	//Элементы.ЗатратыКППризнакДвижения.Видимость = Истина;
	//Иначе
	//	//Элементы.ЗатратыКПНаЕдиницу.Видимость = Истина;
	//	//Элементы.ЗатратыКПНоменклатура.Видимость = Истина;
	//	//Элементы.ЗатратыКПНоменклатура.Видимость = Истина;
	//	//Элементы.ЗатратыКППризнакДвижения.Видимость = Ложь;
	//КонецЕсли;		
	
	БюджетнаяРоль = Строка(БюджетныйНаСервере.ВернутьРеквизит(БюджетныйНаСервере.ПолучитьПользователя(), "БюджетнаяРоль"));
	ДолжностьПользователяНаПредприятии = РасчетыБюджет.ВернутьДолжностьПользователяНаПредприятии(БюджетныйНаСервере.ПолучитьПользователя(), Объект.Предприятие);
	ПолныйПросмотрДокумента = БюджетныйНаСервере.РольАдминаДоступнаСервер() ИЛИ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") ИЛИ БюджетнаяРоль = "Бюджет затрат и объемов производства" ИЛИ БюджетнаяРоль = "Бюджет затрат" ИЛИ БюджетнаяРоль = "Бюджет производства затрат и продаж" ИЛИ БюджетнаяРоль = "Полный просмотр бюджета";
	
	Если БюджетнаяРоль = "Бюджет закупок" Тогда  // снабженец
		Элементы.СтраницаБюджетРасходов.Видимость = Ложь;
		Элементы.СтраницаКорректировки.Видимость = Ложь;
		Элементы.СтраницаРеализация.Видимость = Ложь;
		Элементы.СтраницаБюджетПрибыли.Видимость = Ложь;
		Элементы.Установки.Видимость = Ложь;
		Элементы.СтраницаЛимитыОборока.Видимость = Ложь;
		Элементы.ОбъемПроизводства.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если БюджетнаяРоль = "Бюджет продаж" Тогда // коммерсант
		Элементы.СтраницаБюджетПрибыли.Видимость = Ложь;
		Элементы.СтраницаЛимитыОборока.Видимость = Ложь;
		Элементы.СтраницаБюджетРасходов.Видимость = Ложь;
		Элементы.СтраницаКорректировки.Видимость = Ложь;
		Элементы.Установки.Видимость = Ложь;
	КонецЕсли;
	
	Если Не (БюджетнаяРоль = "Бюджет закупок" ИЛИ БюджетнаяРоль = "Бюджет продаж") И Не ПолныйПросмотрДокумента Тогда	// прочие		
		Элементы.СтраницаРеализация.Видимость = Ложь;
		Элементы.СтраницаБюджетРасходов.Видимость = Ложь;
		Элементы.СтраницаКорректировки.Видимость = Ложь;
		Элементы.СтраницаБюджетПрибыли.Видимость = Ложь;
		Элементы.СтраницаЛимитыОборока.Видимость = Ложь;
		Элементы.Установки.Видимость = Ложь;
		// di видимость кредитов для ОТК
		//Если БюджетныйНаСервере.РольДоступнаСервер("Л_ТранспортРедактирование") Тогда
			Элементы.СтраницаКредиты.Видимость = Истина;
			Элементы.СтраницаКредиты.ТолькоПросмотр = Истина;
			Элементы.КредитыКопироватьСтрокиКредиты.Доступность = Ложь;
		//Иначе
		//	Элементы.СтраницаКредиты.Видимость = Ложь;
		//КонецЕсли;
		Элементы.СтраницаБюджетПрибыли.Видимость = Ложь;
		Элементы.Установки.Видимость = Ложь;		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДолжностьПользователяНаПредприятии) Тогда
		Если Строка(ДолжностьПользователяНаПредприятии) = "Финансист" Тогда
			Элементы.СтраницаБюджетРасходов.Видимость = Истина;
			Элементы.СтраницаКорректировки.Видимость = РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий);
		КонецЕсли;
	КонецЕсли;
	
	//Если БюджетныйНаСервере.ПолучитьПредприятия().Найти(Объект.Предприятие) = Неопределено Тогда // предприятие недоступно пользователю
	//	Элементы.СтраницаКорректировки.Видимость = Ложь;
	//	Элементы.Установки.Видимость = Ложь;
	//	Элементы.СтраницаБюджетРасходов.Видимость = Ложь;
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(БюджетнаяРоль) И НЕ БюджетныйНаСервере.РольАдминаДоступнаСервер() И НЕ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел") Тогда
		БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, Истина, Истина);
	КонецЕсли;
	
	Если Объект.БезБюджетаПроизводства Тогда
		Элементы.ЗатратыКПЗагрузитьИзExcel.Видимость = Истина;
	Иначе
		Элементы.ЗатратыКПЗагрузитьИзExcel.Видимость = Ложь;
	КонецЕсли;
	
	//Если ПолучитьСогласованиеНаСервере() Тогда 
	//	Элементы.СтраницаКорректировки.ТолькоПросмотр = Истина;
	//Иначе 
	//	Элементы.СтраницаКорректировки.ТолькоПросмотр = Ложь;
	//КонецЕсли;
	//
	//Если Объект.КБИЗаполнен Тогда 
	//	Элементы.ЗатратыКПИнвестицииЛимитНаНачало.ТолькоПросмотр = Истина;
	//Иначе 	
	//	Элементы.ЗатратыКПИнвестицииЛимитНаНачало.ТолькоПросмотр = Ложь;
	//КонецЕсли;
	//
	//ДоступностьВНХ = (БюджетныйНаСервере.РольДоступнаСервер("Администратор") ИЛИ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел"));
	////Элементы.БюджетСебестоимостиВНХ.Видимость = ДоступностьВНХ;
	////Элементы.БюджетСебестоимостиПрочиеВНХ.Видимость = ДоступностьВНХ;
	//Элементы.ЗатратыКПВНХ.Видимость = ДоступностьВНХ;
	//Элементы.ЗатратыВНХ.Видимость = ДоступностьВНХ;
	//
	
	Элементы.ФормаПечатьКорректировокИнвестиций.Видимость = КорректировочныйБюджет;
	Элементы.ФормаПечатьКорректировокЗатрат.Видимость = КорректировочныйБюджет;
	Элементы.ФормаПечатьКорректировокПР.Видимость = КорректировочныйБюджет;
	Элементы.ФормаПечатьИнвестиций.Видимость = 1 - КорректировочныйБюджет;
	Элементы.ФормаПечатьЗатрат.Видимость = 1 - КорректировочныйБюджет;
	Элементы.ФормаПечатьПредставительскихРасходов.Видимость = 1 - КорректировочныйБюджет;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСогласованиеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УтверждениеБюджета.Ссылка
	|ИЗ
	|	БизнесПроцесс.УтверждениеБюджета КАК УтверждениеБюджета
	|ГДЕ
	|	УтверждениеБюджета.Заявка = &Заявка
	|	И (УтверждениеБюджета.ТипБюджета = &КорректировкаБюджета
	|			ИЛИ УтверждениеБюджета.ТипБюджета = &БюджетИнвестиций)";
	
	Запрос.УстановитьПараметр("КорректировкаБюджета", Перечисления.Д_ТипыБюджетов.КорректировкиБюджета);
	Запрос.УстановитьПараметр("БюджетИнвестиций", Перечисления.Д_ТипыБюджетов.БюджетИнвестиций);
	Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Возврат Истина
	Иначе 
		Возврат Ложь
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = НЕ ПроверитьЗаполнение();
	
	Если НЕ ПроверитьДоли() Тогда
		Если НЕ Вопрос("Неверное распределение прибыли. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Объект.ЗатратыКП Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.ИнвПроект) Тогда
			ТекСтрока.ИнвПроект = Неопределено;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			ТекСтрока.Номенклатура = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	сабОбщегоНазначения.ОчиститьАвтосохраненияОбъекта(Объект.Ссылка);
	//Отказ = 1 - ПроверитьЗаполнение();
КонецПроцедуры

&НаСервере
Функция ПроверитьДоли()
	// обращение № 3921
	Верно = Истина;
	ТЗМесяцевИПодразделений = Объект.РаспределениеПрибыли.Выгрузить();
	ТЗМесяцевИПодразделений.Свернуть("Месяц, Подразделение");
	
	Для каждого ТекСтрока Из ТЗМесяцевИПодразделений Цикл
		ОтобранныеСтроки = Объект.РаспределениеПрибыли.НайтиСтроки(Новый Структура("Месяц, Подразделение", ТекСтрока.Месяц, ТекСтрока.Подразделение));
		ТекСумма = 0;
		
		Для каждого ТекОтобраннаяСтрока Из ОтобранныеСтроки Цикл
			ТекСумма = ТекСумма + ТекОтобраннаяСтрока.ДоляУчастника;		
		КонецЦикла; 
		
		Если НЕ ТекСумма = 100 Тогда
			Сообщить("Неверное распределение долей в месяце " + Строка(Месяц(ТекСтрока.Месяц)) + " " + Строка(Год(ТекСтрока.Месяц)) + " года" + " по подразделению " + Строка(ТекСтрока.Подразделение) + ". Распределение в сумме дает " + Строка(ТекСумма) + "%.");
			Верно = Ложь;		
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат  Верно;
	
КонецФункции // ()

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	
	ИзменитьТабличныеЧасти();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипПредприятия(ТекПредприятие)
	
	Если НЕ ПустаяСтрока(ТекПредприятие) Тогда
		
		Возврат ТекПредприятие.ТипПредприятия = Перечисления.Д_ТипыПредприятий.АРаботающее ИЛИ ТекПредприятие.ТипПредприятия = Перечисления.Д_ТипыПредприятий.ЖВодочныеПроекты;	
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
	
КонецФункции // ()

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
	
	// закомментированно 08.10.13
	//ТипПредприятияРаб = ТипПредприятия(Объект.Предприятие);	
	//Элементы.СтраницаРеализация.Видимость = ТипПредприятияРаб;
	//Элементы.Группа11.Видимость = ТипПредприятияРаб;
	
	//Элементы.БезПроизводства.Видимость = Истина;
	//Если НЕ ТипПредприятияРаб Тогда
	//	Объект.БезБюджетаПроизводства = Ложь;
	//КонецЕсли;
	
	СтруктураРеквизитовПредприятия = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Предприятие, "ПроизводственноеПредприятие, ОсновнаяВалютаУчета");
	НепроизводственноеПредприятие = НЕ СтруктураРеквизитовПредприятия.ПроизводственноеПредприятие;
	
	Если НепроизводственноеПредприятие Тогда
		Элементы.Предприятие.Подсказка = "Без производства";
	Иначе
		Элементы.Предприятие.Подсказка = "Производство";
	КонецЕсли;
	
	Элементы.СтраницаБюджетРасходов.Видимость = Истина;
	
	Если НепроизводственноеПредприятие = Ложь Тогда
		//Элементы.СтраницаБюджетРасходов.Видимость = 0;
		Элементы.СтраницаОбъемПроизводства.Видимость = 1;
		Элементы.Группа36.Заголовок = "Бюджет себестоимости и прочих расходов";
	Иначе
		//Элементы.СтраницаБюджетРасходов.Видимость = 1;
		Элементы.СтраницаОбъемПроизводства.Видимость = 0;
		Элементы.ЗатратыНаЕдиницу.Видимость = Ложь;
		Если Не ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт() Тогда
			Элементы.ЗатратыСтатья25.Видимость = Истина;
			Элементы.ЗатратыКПСтатья25.Видимость = Истина;
		Иначе
			Элементы.ЗатратыНоменклатура.Видимость = Ложь;
			Элементы.ЗатратыСтатья25.Видимость = Ложь;
			Элементы.ЗатратыКПСтатья25.Видимость = Ложь;
		КонецЕсли;
		Элементы.ПРНоменклатура.Видимость = Ложь;
		Элементы.КредитыНоменклатура.Видимость = Ложь;
		
		Элементы.Группа36.Заголовок = "БДР";
		//Если Объект.ОбъемПроизводства.Количество() ИЛИ Объект.ДвижениеСырья.Количество() Тогда
		//	Если Вопрос("Выбрано непроизводственное предприятие. Таблицы бюджета производства и бюджета материальных затрат будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да  Тогда
		Если Не Элемент = Неопределено Тогда
			Объект.ОбъемПроизводства.Очистить();
			Объект.ДвижениеСырья.Очистить();
		КонецЕсли;
		//	КонецЕсли;		
		//КонецЕсли;
	КонецЕсли;
	
	Объект.Валюта = СтруктураРеквизитовПредприятия.ОсновнаяВалютаУчета;
	РазграничениеВидимостиИДоступности(Ложь);
	
	Если НЕ Элемент = Неопределено И НЕ Элемент = 0 Тогда
		ОбновитьНадписьНеперенесенных();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СценарийДО = Объект.Сценарий;
	Если Объект.СценарийПП.Пустая() Тогда
		Объект.СценарийПП = Объект.Сценарий;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКорректировкиБП()
	
	// доступность строк затратыкп
	ТекБП1 = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиБюджета");
	ТекБП2 = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиИнвестиций");
	ТекБП3 = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиПредставительскихРасходов");
	
	СоотвНайденныхБП = Новый Соответствие;
	СоотвНайденныхБП.Вставить(Перечисления.Д_ТипыБюджетов.КорректировкиБюджета, ТекБП1);
	СоотвНайденныхБП.Вставить(Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций, ТекБП2);
	СоотвНайденныхБП.Вставить(Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов, ТекБП3);
	
	Если Объект.ЗатратыКП.Количество() Тогда
		Попытка //если у пользователя только просмотр
			Для Каждого Строка Из Объект.ЗатратыКП Цикл
				Если ЗначениеЗаполнено(Строка.ТипБюджета) Тогда
					Строка.ТекущийБизнесПроцесс = СоотвНайденныхБП.Получить(Строка.ТипБюджета);
				КонецЕсли;
			КонецЦикла
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеРасчетные

&НаСервереБезКонтекста
Функция ВернутьСчетПоКоду(КодСчета)
	Возврат ПланыСчетов.Учетный.НайтиПоКоду(КодСчета);
КонецФункции // ()

&НаСервереБезКонтекста
Функция ВернутьЗадолженность(ВидЗадолженности = "Дт")
	Если ВидЗадолженности = "Дт" Тогда
		Возврат Перечисления.Д_ДтКт.Дебет;
	Иначе
		Возврат Перечисления.Д_ДтКт.Кредит;
	КонецЕсли;
КонецФункции // ()

//считаем производимые номенклатуры
&НаКлиенте
Функция ПроизводимыеНоменклатуры()
	МассивНоменклатур = Новый Массив;
	Для каждого ТекСтрока Из Объект.ОбъемПроизводства Цикл
		Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекСтрока.ЕдинаяНоменклатура) И Не МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(ТекСтрока.ЕдинаяНоменклатура);
		КонецЕсли;
	КонецЦикла;
	Для каждого ТекСтрока Из Объект.ВводОстатковПрочее Цикл
		Если Счет4341(ТекСтрока.Счет) Тогда
			Если МассивНоменклатур.Найти(ТекСтрока.Субконто1) = Неопределено Тогда
				МассивНоменклатур.Добавить(ТекСтрока.Субконто1);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
	Возврат МассивНоменклатур;
КонецФункции // ()

&НаСервереБезКонтекста
Функция Счет4341(Счет)
	Возврат ПланыСчетов.Учетный.Счет43() = Счет ИЛИ ПланыСчетов.Учетный.Счет41() = Счет;
КонецФункции // ()


//считаем производимые номенклатуры
&НаКлиенте
Функция РеализуемыеНоменклатуры()
	МассивНоменклатур = Новый Массив;
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		Если МассивНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(ТекСтрока.Номенклатура);		
		КонецЕсли;	
	КонецЦикла;
	Возврат МассивНоменклатур;
КонецФункции // ()


&НаКлиенте
Процедура ЗагрузитьБюджет(Команда)
	ЗагрузитьБюджетСервер();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьБюджетСервер()
	ИменаДокументов = Новый Массив;
	ИменаДокументов.Добавить("Д_ДвижениеСырья");
	ИменаДокументов.Добавить("Д_ОбъемПроизводства");
	ИменаДокументов.Добавить("Д_Себестоимость");
	ИменаДокументов.Добавить("Д_Инвестиции");
	ИменаДокументов.Добавить("Д_РеестрПР");
	ИменаДокументов.Добавить("Д_ПрочиеРасходы");
	ИменаДокументов.Добавить("Д_БюджетКредитов");
	ИменаДокументов.Добавить("Д_БюджетПродаж");
	ИменаДокументов.Добавить("Д_БюджетПрочихПроектов");
	ИменаДокументов.Добавить("Д_ЛимитыНаОборотку");
	ИменаДокументов.Добавить("Д_Корректировки");
	
	Дата1 = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
	Дата2 = КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца"));
	
	
	Для каждого ТекДокумент Из ИменаДокументов Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	Документ." + ТекДокумент + " КАК Д_ДвижениеСырья
		|ГДЕ
		|	Д_ДвижениеСырья.Сценарий = &Сценарий
		|	И Д_ДвижениеСырья.Предприятие = &Предприятие
		|	И Д_ДвижениеСырья.Проведен = ИСТИНА
		|	И Д_ДвижениеСырья.Дата МЕЖДУ &Дата1 И &Дата2";
		
		Запрос.УстановитьПараметр("Сценарий", БюджетОснование);
		Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
		Запрос.УстановитьПараметр("Дата1", Дата1);
		Запрос.УстановитьПараметр("Дата2", Дата2);
		
		Результат = Запрос.Выполнить();
		
		Если ТекДокумент = "Д_ДвижениеСырья" Тогда
			Объект.ДвижениеСырья.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.ДвижениеСырья.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.ДвижениеСырья.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_ОбъемПроизводства" Тогда
			Объект.ОбъемПроизводства.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.ДвиженияДокумента.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.ОбъемПроизводства.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_Себестоимость" Тогда
			Объект.БюджетСебестоимости.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.БюджетСебестоимости.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.БюджетСебестоимости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
			Объект.ЗатратыНаПростой2.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.ЗатратыНаПростой2.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.ЗатратыНаПростой2.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_Инвестиции" Тогда
			Объект.Инвестиции.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Инвестиции.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Инвестиции.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_РеестрПР" Тогда
			Объект.ПР.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.ПР.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.ПР.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_ПрочиеРасходы" Тогда
			Объект.Прочие90.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Прочие90.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Прочие90.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла; 
			
			Объект.Прочие91.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Прочие91.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Прочие91.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
			Объект.РаспределениеПрибыли.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.РаспределениеПрибыли.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.РаспределениеПрибыли.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_БюджетКредитов" Тогда
			Объект.Кредиты.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Кредиты.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Кредиты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_БюджетПродаж" Тогда
			Объект.БюджетПродаж.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.БюджетПродаж.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.БюджетПродаж.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_БюджетПрочихПроектов" Тогда
			Объект.Затраты.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Затраты.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Затраты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТекДокумент = "Д_Корректировки" Тогда
			Объект.ЗатратыКП.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Затраты.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.ЗатратыКП.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		
		Если ТекДокумент = "Д_ЛимитыНаОборотку" Тогда
			Объект.СтатьиОборотки.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.СтатьиОборотки.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.СтатьиОборотки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
			Объект.Неликвиды.Очистить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТЧ = Выборка.Неликвиды.Выгрузить();
				
				Для каждого ТекСтрока Из ТЧ Цикл
					НоваяСтрока = Объект.Неликвиды.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
					НоваяСтрока.Месяц = НачалоМесяца(Выборка.Дата);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
				
	КонецЦикла; 
			
КонецПроцедуры

&НаКлиенте
Процедура КопироватьБюджет(Команда)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Месяцы", Элементы.Месяц.СписокВыбора);
	СтруктураДанных.Вставить("ТекМесяц", Объект.Месяц);
	СтруктураДанных.Вставить("ТекБюджет", Элементы.Страницы.ТекущаяСтраница);
	
	СтруктураКопирования = Неопределено;

	
	ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаКопирования", СтруктураДанных,,,,, Новый ОписаниеОповещения("КопироватьБюджетЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс); 
		
КонецПроцедуры

&НаКлиенте
Процедура КопироватьБюджетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураКопирования = Результат;
	
	Если НЕ СтруктураКопирования = Неопределено Тогда
		
		Если СтруктураКопирования.Замена Тогда
			
			Для ТекСтрока = 0 По Объект[СтруктураКопирования.ТипБюджета].Количество() - 1 Цикл
				
				Если Объект[СтруктураКопирования.ТипБюджета][ТекСтрока].Месяц = СтруктураКопирования.МесяцПриемник Тогда
					Объект[СтруктураКопирования.ТипБюджета].Удалить(Объект[СтруктураКопирования.ТипБюджета][ТекСтрока]);
					ТекСтрока = -1;				
				КонецЕсли;
				
			КонецЦикла;
			
			ОтобранныеСтроки = Объект[СтруктураКопирования.ТипБюджета].НайтиСтроки(Новый Структура("Месяц", СтруктураКопирования.МесяцИсходник));
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				НоваяСтрока = Объект[СтруктураКопирования.ТипБюджета].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.Месяц = СтруктураКопирования.МесяцПриемник;			
			КонецЦикла; 
			
			Объект[СтруктураКопирования.ТипБюджета].Сортировать("Месяц Возр, НомерСтроки Возр");
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтроки(ЭлТЧ, ТЧ)
	
	ТекСписокМесяцев = Элементы.Месяц.СписокВыбора.Скопировать();
	ТекСписокМесяцев.Удалить(0);
	ТекПользователь = БюджетныйНаСервере.ПолучитьПользователя();
	
	СпискоМесяцев = Неопределено;

	
	ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаКопированияСтрок", Новый Структура("СписокМесяцев", ТекСписокМесяцев),,,,, Новый ОписаниеОповещения("КопироватьСтрокиЗавершение", ЭтотОбъект, Новый Структура("ТекПользователь, ТЧ, ЭлТЧ", ТекПользователь, ТЧ, ЭлТЧ)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекПользователь = ДополнительныеПараметры.ТекПользователь;
	ТЧ = ДополнительныеПараметры.ТЧ;
	ЭлТЧ = ДополнительныеПараметры.ЭлТЧ;
	
	
	СпискоМесяцев = Результат; 
	
	Если ТипЗнч(СпискоМесяцев) = Тип("СписокЗначений")  Тогда
		
		Для каждого ТекМесяц Из СпискоМесяцев Цикл
			
			Если ТекМесяц.Пометка Тогда
				
				Для каждого ТекСтрока Из ЭлТЧ.ВыделенныеСтроки Цикл
					НоваяСтрока = ТЧ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЧ.НайтиПоИдентификатору(ТекСтрока));
					НоваяСтрока.Месяц = ТекМесяц.Значение;
					
					Если НоваяСтрока.Свойство("АвторЗаписи") Тогда
						НоваяСтрока.АвторЗаписи = ТекПользователь;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиОбъем(Команда)
	
	КопироватьСтроки(Элементы.ОбъемПроизводства, Объект.ОбъемПроизводства);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиСеб(Команда)
	
	КопироватьСтроки(Элементы.БюджетСебестоимости, Объект.БюджетСебестоимости);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиБюджетСебестоимостиПрочие(Команда)
	
	КопироватьСтроки(Элементы.БюджетСебестоимостиПрочие, Объект.БюджетСебестоимостиПрочие);	
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиЗатратыНаПростой2(Команда)
	
	КопироватьСтроки(Элементы.ЗатратыНаПРостой2, Объект.ЗатратыНаПРостой2);	
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиПрочие90(Команда)
	
	КопироватьСтроки(Элементы.Прочие90, Объект.Прочие90);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиПрочие91(Команда)
	
	КопироватьСтроки(Элементы.Прочие91, Объект.Прочие91);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиИнвестиции(Команда)
	
	КопироватьСтроки(Элементы.Инвестиции, Объект.Инвестиции);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиКредиты(Команда)
	
	КопироватьСтроки(Элементы.Кредиты, Объект.Кредиты);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиРаспределениеПрибыли(Команда)
	
	КопироватьСтроки(Элементы.РаспределениеПрибыли, Объект.РаспределениеПрибыли); 
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиСырье(Команда)
	
	КопироватьСтроки(Элементы.ДвижениеСырья, Объект.ДвижениеСырья);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиПродажи(Команда)
	
	КопироватьСтроки(Элементы.БюджетПродаж, Объект.БюджетПродаж);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиПроекта(Команда)
	
	КопироватьСтроки(Элементы.Затраты, Объект.Затраты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбъемПроизводства

&НаКлиенте
Процедура ОбъемПроизводстваПослеУдаления(Элемент)
	
	РасчитатьПроцентЗатрат();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьПроцентЗатрат()
	
	Для каждого ТекМесяц Из Элементы.Месяц.СписокВыбора Цикл
		ТекМесяцЗначение = ТекМесяц.Значение;
		ОбъемПроизводстваВсего = 0;
		СтруктураПоиска = Новый Структура("Месяц", ТекМесяцЗначение);
		ОтобранныеСтроки = Объект.ОбъемПроизводства.НайтиСтроки(СтруктураПоиска);	
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл		
			
			Если НЕ ТекСтрока.НЕРаспределять Тогда
				ОбъемПроизводстваВсего = ОбъемПроизводстваВсего + ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;		
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл		
			
			Если НЕ ТекСтрока.НЕРаспределять Тогда
				ТекСтрока.ПроцентЗатрат	= ?(ОбъемПроизводстваВсего, (ТекСтрока.Объем + ТекСтрока.ОбъемЦВ) / ОбъемПроизводстваВсего * 100, 0);	
			Иначе
				ТекСтрока.ПроцентЗатрат = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		//Если ОтобранныеСтроки.Количество() И НЕ ОбъемПроизводстваВсего Тогда
		//	ОтобранныеСтроки[0].ПроцентЗатрат = 100
		//КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъемПроизводстваПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) И ЗначениеЗаполнено(Объект.Месяц) Тогда
		Объект.ОбъемПроизводства[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
	
	//Объект.ОбъемПроизводства.Сортировать("Месяц Возр, НомерСтроки Возр");
	РасчитатьПроцентЗатрат();
	ОтразитьДетализацию();
	
КонецПроцедуры

#КонецОбласти

#Область ДвижениеСырья

&НаКлиенте
Процедура ДвижениеСырьяНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.ДвижениеСырья.ТекущиеДанные.Номенклатура), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подробнее(Команда)
	
	ТекущаяСтрока = Объект.ДвижениеСырья.НайтиПоИдентификатору(Элементы.ДвижениеСырья.ТекущаяСтрока);
	
	ОстаткиНаНачало = Новый Структура("Сумма, Количество, КоличествоКРХ",
	ТекущаяСтрока.КоличествоНаНачало * ТекущаяСтрока.ЦенаНаНачало, ТекущаяСтрока.КоличествоНаНачало, ТекущаяСтрока.КоличествоНаНачало * ТекущаяСтрока.КрахмалистостьНаНачало / 100);
	
	КрахмалистостьНаНачало = ?(ОстаткиНаНачало.Количество, ОстаткиНаНачало.КоличествоКРХ / ОстаткиНаНачало.Количество * 100, 0);
	ЦенаНаНачало = ?(ОстаткиНаНачало.Количество, ОстаткиНаНачало.Сумма / ОстаткиНаНачало.Количество, 0);
	
	Сырье = ТекущаяСтрока.Сырье;
	
	СреднийКрахмал = ?(ОстаткиНаНачало.Количество + ТекущаяСтрока.КоличествоПриход = 0, 0, (КрахмалистостьНаНачало * ОстаткиНаНачало.Количество + 
	ТекущаяСтрока.КрахмалистостьПриход * ТекущаяСтрока.КоличествоПриход) / 
	(ОстаткиНаНачало.Количество + ТекущаяСтрока.КоличествоПриход));	
	
	Номенклатура = ТекущаяСтрока.Номенклатура;
	Сырье2 = ТекущаяСтрока.Сырье;
	ПараметрыБюджета = Новый Структура;
	ПараметрыБюджета.Вставить("Сценарий", Объект.Сценарий);
	ПараметрыБюджета.Вставить("Предприятие", Объект.Предприятие);
	ПараметрыБюджета.Вставить("Сырье", Сырье2);
	ПараметрыБюджета.Вставить("Номенклатура", Номенклатура);
	ПараметрыБюджета.Вставить("ОбъемПрва", ПолучитьОбъемПроизводства(Номенклатура, ТекущаяСтрока.Месяц));
	ПараметрыБюджета.Вставить("Выход", ПолучитьПараметрыСырья(Сырье2, Объект.Дата, Объект.Сценарий).Д_ВыходИзТонныУслКРХ);
	ПараметрыБюджета.Вставить("Крахмал", СреднийКрахмал);
	ПараметрыБюджета.Вставить("Отбор", ПолучитьПараметрыНоменклатуры(Номенклатура, Объект.Дата, Объект.Сценарий, Объект.Предприятие).Д_ПроцентОтбора);
	ПараметрыБюджета.Вставить("Доля", ТекущаяСтрока.ДоляСырья);
	
	ОткрытьФорму("Документ.Д_ДвижениеСырья.Форма.ФормаДанные", ПараметрыБюджета);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьОстаткиНаНачало(ТекущаяСтрока)
	
	СтруктураПоиска = Новый Структура("Сырье", ТекущаяСтрока.Сырье);
	ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
	
	Сумма = 0;
	Количество = 0;
	КоличествоКРХ = 0;
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		
		Если ТекСтрока.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
			Сумма = Сумма + ТекСтрока.КоличествоНаНачало * ТекСтрока.ЦенаНаНачало;
			Количество = Количество + ТекСтрока.КоличествоНаНачало;
			КоличествоКРХ = КоличествоКРХ + ТекСтрока.КоличествоНаНачало * (ТекСтрока.КрахмалистостьНаНачало / 100);
		КонецЕсли;
		
		Если ТекСтрока.Месяц < ТекущаяСтрока.Месяц Тогда
			//приход
			Сумма = Сумма + ТекСтрока.КоличествоПриход * ТекСтрока.ЦенаПриход;
			Количество = Количество + ТекСтрока.КоличествоПриход;
			КоличествоКРХ = КоличествоКРХ + ТекСтрока.КоличествоПриход * (ТекСтрока.КрахмалистостьПриход / 100);
			
			//расход в производство
			СтруктураРасхода = РассчитатьРасходФункция(ТекСтрока);
			Сумма = Сумма - СтруктураРасхода.Сумма;
			Количество = Количество - СтруктураРасхода.Количество;
			КоличествоКРХ = КоличествоКРХ - СтруктураРасхода.КоличествоКРХ;			
		КонецЕсли;
		
		Если НЕ ТекСтрока.Месяц Тогда
			
			
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры // ()

&НаКлиенте
Процедура РассчитатьРасход(Команда)
	
	Выход = 0;
	Отбор = 0;
	Расход = РассчитатьРасходФункция(Элементы.ДвижениеСырья.ТекущиеДанные);	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОбъемПроизводства(Номенклатура, Месяц)
	
	ОбъемПроизводства = 0;
	ПоискСтрок = Новый Структура("Номенклатура, Месяц", Номенклатура, Месяц);
	ОтобранныеСтроки = Объект.ОбъемПроизводства.НайтиСтроки(ПоискСтрок);
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ОбъемПроизводства = ОбъемПроизводства + ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;	
	КонецЦикла; 
	
	Возврат ОбъемПроизводства;
	
КонецФункции

&НаКлиенте
Функция ПолучитьОбъемРеализации(Номенклатура, Месяц, Подразделение = Неопределено, ПоВыручке = Ложь)
	
	ОбъемРеализации = 0;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ПоискСтрок = Новый Структура("Подразделение, Номенклатура, Месяц", Подразделение, Номенклатура, Месяц);
	Иначе
		ПоискСтрок = Новый Структура("Номенклатура, Месяц", Номенклатура, Месяц);
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(ПоискСтрок);
	
	Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
		ОбъемРеализации = ОбъемРеализации + ТекСтрока.Количество * ?(ПоВыручке, ТекСтрока.Цена, 1);	
	КонецЦикла; 
	
	Возврат ОбъемРеализации;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыСырья(Сырье, Дата, Сценарий)
	
	ОтборСырья = Новый Структура("Сырье, СценарийПлана", Сырье,
	Сценарий);
	
	Возврат РегистрыСведений.Д_ПараметрыСырья.ПолучитьПоследнее(Дата, ОтборСырья);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыНоменклатуры(Номенклатура, Дата, Сценарий, Предприятие)
	
	ОтборНоменклатуры = Новый Структура("Номенклатура, СценарийПлана, Предприятие", Номенклатура, Сценарий, Предприятие);
	
	возврат РегистрыСведений.Д_ПараметрыНоменклатуры.ПолучитьПоследнее(Дата, ОтборНоменклатуры);
	
КонецФункции

&НаКлиенте
Функция РассчитатьРасходФункция(ТекущаяСтрока, ОбновлятьДанныеСтроки = Истина)
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Месяц) Тогда
		ТекДата = ТекущаяСтрока.Месяц;
	Иначе
		ТекДата = НачалоМесяца(Объект.Дата);
	КонецЕсли;
	
	СреднийКрахмал = ?(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход = 0, 0, (ТекущаяСтрока.КрахмалистостьНаНачало * ТекущаяСтрока.КоличествоНаНачало + 
	ТекущаяСтрока.КрахмалистостьПриход * ТекущаяСтрока.КоличествоПриход) / 
	(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход));
	
	Выход = ПолучитьПараметрыСырья(ТекущаяСтрока.Сырье, ТекДата, Объект.Сценарий).Д_ВыходИзТонныУслКРХ;
	Отбор = ПолучитьПараметрыНоменклатуры(ТекущаяСтрока.Номенклатура, ТекДата, Объект.Сценарий, Объект.Предприятие).Д_ПроцентОтбора;
	ОбъемПроизводства = ПолучитьОбъемПроизводства(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Месяц) * (ТекущаяСтрока.ДоляСырья / 100);
	
	//добавил для прямого счета без установленных параметров производства
	Если НЕ Отбор Тогда
		Отбор = 100;	
	КонецЕсли;
	Если НЕ Выход Тогда
		Выход = 1;
	КонецЕсли;
	//конец добавления
	
	Если НЕ Выход или НЕ Отбор Тогда
		Количество = 0;
	иначе
		Количество = Окр(ОбъемПроизводства / Выход / (Отбор / 100) / (?(СреднийКрахмал, СреднийКрахмал, 100) / 100), 2);
	КонецЕсли; 
	
	Цена = Окр(?(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход = 0, 0,
	(ТекущаяСтрока.КоличествоНаНачало * ТекущаяСтрока.ЦенаНаНачало + ТекущаяСтрока.КоличествоПриход * ТекущаяСтрока.ЦенаПриход) /
	(ТекущаяСтрока.КоличествоНаНачало + ТекущаяСтрока.КоличествоПриход)), 2);
	
	Если ОбновлятьДанныеСтроки Тогда
		ТекущаяСтрока.КоличествоРасход = Количество;
		ТекущаяСтрока.ЦенаРасход = Цена;
		ТекущаяСтрока.КрахмалистостьРасход = СреднийКрахмал;
	КонецЕсли;
		
	Возврат Новый Структура("Сумма, Количество, КоличествоКРХ, ОбъемПроизводства, ОтборРектификата, ВыходИзТонны, СреднийКрахмал", Количество * Цена, Количество, СреднийКрахмал, ОбъемПроизводства, Отбор, Выход, СреднийКрахмал);
	
КонецФункции

&НаКлиенте
Процедура ДвижениеСырьяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	//Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.АвторЗаписи) Тогда
		Объект.ДвижениеСырья[Элемент.ТекущаяСтрока].АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();
	//КонецЕсли;
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.ДвижениеСырья[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.ДвижениеСырья.Сортировать("Месяц Возр, НомерСтроки Возр");
	Если Объект.ДвижениеСырья[Элемент.ТекущаяСтрока].Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
		СформироватьОстаткиСырья();
	КонецЕсли; 	
	ПросчитатьОстатокИРасход();
	ПросчитатьКЗЗаСырье();
	//ЗаполнитьПараметрыПроизводстваКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОстаткиСырья()
	
	Объект.ВводОстатковСырья.Очистить();
	СтруктураПоиска = Новый Структура("Месяц", Элементы.Месяц.СписокВыбора[1].Значение);
	ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого ТекСтрокаДвижениеСырья Из ОтобранныеСтроки Цикл
		
		Если ТекСтрокаДвижениеСырья.КоличествоНаНачало Тогда
			НоваяСтрока = Объект.ВводОстатковСырья.Добавить();
			НоваяСтрока.Счет = ВернутьСчетПоКоду("10.01");
			НоваяСтрока.Задолженность = ВернутьЗадолженность();
			НоваяСтрока.Субконто1 = ТекСтрокаДвижениеСырья.Сырье;
			НоваяСтрока.Количество = ТекСтрокаДвижениеСырья.КоличествоНаНачало;
			НоваяСтрока.КоличествоКРХ = ТекСтрокаДвижениеСырья.КоличествоНаНачало * (ТекСтрокаДвижениеСырья.КрахмалистостьНаНачало /100);
			НоваяСтрока.Сумма = ТекСтрокаДвижениеСырья.ЦенаНаНачало * ТекСтрокаДвижениеСырья.КоличествоНаНачало;
			НоваяСтрока.Содержание = "Сырье на начало";  	
		КонецЕсли;
		
		Если ТекСтрокаДвижениеСырья.КЗ Тогда
			НоваяСтрока = Объект.ВводОстатковСырья.Добавить();
			НоваяСтрока.Счет = ВернутьСчетПоКоду("60.01");
			НоваяСтрока.Задолженность = ?(ТекСтрокаДвижениеСырья.КЗ > 0, ВернутьЗадолженность("Кт"), ВернутьЗадолженность());
			НоваяСтрока.Субконто1 = ТекСтрокаДвижениеСырья.Поставщик;
			НоваяСтрока.Сумма = ?(ТекСтрокаДвижениеСырья.КЗ < 0, - ТекСтрокаДвижениеСырья.КЗ, ТекСтрокаДвижениеСырья.КЗ) ;
			НоваяСтрока.Содержание = "Задолженность на начало";	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДвижениеСырьяПослеУдаления(Элемент)
	
	СформироватьОстаткиСырья();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьОстатокИРасход()
	//формируем список сырья, присутствующих в документе
	МассивСырья = Новый Массив;
	
	Для каждого ТекСтрока Из Объект.ДвижениеСырья Цикл
		
		Если МассивСырья.Найти(ТекСтрока.Сырье) = Неопределено Тогда
			МассивСырья.Добавить(ТекСтрока.Сырье);	
		КонецЕсли;
		
	КонецЦикла; 
	
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекСырье Из МассивСырья Цикл
		
		Выход = 0;
		Отбор = 0;
			
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Сырье", Элементы.Месяц.СписокВыбора[1].Значение, ТекСырье);
		ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			КоличествоНаНачало = ТекСтрока2.КоличествоНаНачало;	
			ЦенаНаНачало = ТекСтрока2.ЦенаНаНачало;
			КрахмалистостьНаНачало = ТекСтрока2.КрахмалистостьНаНачало;
			
			КоличествоПриход = ТекСтрока2.КоличествоПриход;	
			ЦенаПриход = ТекСтрока2.ЦенаПриход;
			КрахмалистостьПриход = ТекСтрока2.КрахмалистостьПриход;
			
			Расход = РассчитатьРасходФункция(ТекСтрока2);
			КоличествоРасход = Расход.Количество;	
			ЦенаРасход = ?(Расход.Количество, Расход.Сумма / Расход.Количество, 0);
			КрахмалистостьРасход = Расход.КоличествоКРХ;
			
			КоличествоКонец = КоличествоНаНачало + КоличествоПриход - КоличествоРасход;	
			ЦенаКонец = ?((КоличествоНаНачало + КоличествоПриход - КоличествоРасход), (КоличествоНаНачало * ЦенаНаНачало + КоличествоПриход * ЦенаПриход - Расход.Сумма) / (КоличествоНаНачало + КоличествоПриход - КоличествоРасход), 0);
			КрахмалистостьКонец = Расход.КоличествоКРХ;
			
		КонецЦикла;
		
			
		СтруктураПоиска = Новый Структура("Сырье", ТекСырье);
		ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			ТекСтрока2.КоличествоНаНачало = ?(ЗначениеЗаполнено(КоличествоКонец), КоличествоКонец, 0);	
			ТекСтрока2.ЦенаНаНачало = ?(ЗначениеЗаполнено(ЦенаКонец), ЦенаКонец, 0);
			ТекСтрока2.КрахмалистостьНаНачало = ?(ЗначениеЗаполнено(КрахмалистостьКонец), КрахмалистостьКонец, 0);
			
			КоличествоНаНачало = ?(ЗначениеЗаполнено(КоличествоКонец), КоличествоКонец, 0);		
			ЦенаНаНачало = ?(ЗначениеЗаполнено(ЦенаКонец), ЦенаКонец, 0);
			КрахмалистостьНаНачало = ?(ЗначениеЗаполнено(КрахмалистостьКонец), КрахмалистостьКонец, 0);
			
			КоличествоПриход = ТекСтрока2.КоличествоПриход;	
			ЦенаПриход = ТекСтрока2.ЦенаПриход;
			КрахмалистостьПриход = ТекСтрока2.КрахмалистостьПриход;
			
			
			Расход = РассчитатьРасходФункция(ТекСтрока2);
			КоличествоРасход = Расход.Количество;	
			ЦенаРасход = ?(Расход.Количество, Расход.Сумма / Расход.Количество, 0);
			КрахмалистостьРасход = Расход.КоличествоКРХ;
			
			КоличествоКонец = КоличествоНаНачало + КоличествоПриход - КоличествоРасход;	
			ЦенаКонец = ?((КоличествоНаНачало + КоличествоПриход - КоличествоРасход), (КоличествоНаНачало * ЦенаНаНачало + КоличествоПриход * ЦенаПриход - Расход.Сумма) / (КоличествоНаНачало + КоличествоПриход - КоличествоРасход), 0);
			КрахмалистостьКонец = Расход.КоличествоКРХ;
		КонецЦикла;
			
	КонецЦикла; 
		
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьКЗЗаСырье()
	//формируем список контрагентов, присутствующих в документе
	МассивКонтрагентов = Новый Массив;
	
	Для каждого ТекСтрока Из Объект.ДвижениеСырья Цикл
		
		Если МассивКонтрагентов.Найти(ТекСтрока.Поставщик) = Неопределено Тогда
			МассивКонтрагентов.Добавить(ТекСтрока.Поставщик);	
		КонецЕсли;	
		
	КонецЦикла; 
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекПозиция Из МассивКонтрагентов Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Поставщик", Элементы.Месяц.СписокВыбора[1].Значение, ТекПозиция);
		ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
		КЗНачало = 0; Поступило = 0; Оплата = 0; ОплатаПрочее = 0;
		
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			КЗНачало = КЗНачало + ТекСтрока2.КЗ;	
			
			Поступило = Поступило + ТекСтрока2.КоличествоПриход * ТекСтрока2.ЦенаПриход;
			Оплата = Оплата + ТекСтрока2.Оплата;
			ОплатаПрочее = ОплатаПрочее + ТекСтрока2.ОплатаПрочее;
			
			КЗКонец = КЗНачало + Поступило - Оплата - ОплатаПрочее;
		КонецЦикла;
		
		
		Для каждого ТекПозиция2 Из Элементы.Месяц.СписокВыбора Цикл
			СтруктураПоиска = Новый Структура("Поставщик, Месяц", ТекПозиция, ТекПозиция2.Значение);
			
			ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(СтруктураПоиска);
			СчетчикНайденных = 0;
			
			Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
				
				Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
					Продолжить;		
				КонецЕсли;
				
				Если НЕ СчетчикНайденных Тогда
					
					ТекСтрока2.КЗ = КЗКонец;	
					
					Поступило = ТекСтрока2.КоличествоПриход * ТекСтрока2.ЦенаПриход;
					Оплата = ТекСтрока2.Оплата;
					ОплатаПрочее = ТекСтрока2.ОплатаПрочее;
					
					КЗКонец = ТекСтрока2.КЗ + Поступило - Оплата - ОплатаПрочее;
					СчетчикНайденных = СчетчикНайденных + 1;
				Иначе
					ТекСтрока2.КЗ = 0;
				КонецЕсли;
				
			КонецЦикла;
				
		КонецЦикла; 
		
	КонецЦикла;	 
		
КонецПроцедуры

#КонецОбласти

#Область Себестоимость

&НаКлиенте
Процедура БюджетСебестоимостиНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.БюджетСебестоимости.ТекущиеДанные.Номенклатура), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетСебестоимостиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.БюджетСебестоимости[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.БюджетСебестоимости[Элемент.ТекущаяСтрока].СтатьяБДДС) Тогда
		Объект.БюджетСебестоимости[Элемент.ТекущаяСтрока].СтатьяБДДС = БюджетныйНаСервере.ВернутьРеквизит(Объект.БюджетСебестоимости[Элемент.ТекущаяСтрока].СтатьяЗатрат, "СтатьяБДДС");	
	КонецЕсли;
	//Объект.БюджетСебестоимости.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНаПРостой2ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//Объект.ЗатратыНаПРостой2.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

#КонецОбласти

#Область Инвестиции

&НаКлиенте
Процедура ИнвестицииНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.Инвестиции.ТекущиеДанные.Номенклатура), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвестицииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Инвестиции[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
	//Объект.Инвестиции.Сортировать("Месяц Возр, НомерСтроки Возр");
	
КонецПроцедуры

#КонецОбласти

#Область Прочие9091

&НаКлиенте
Процедура Прочие90ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Прочие90[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
		
	Если Объект.Прочие90[Элемент.ТекущаяСтрока].ФР Тогда
		Объект.Прочие90[Элемент.ТекущаяСтрока].СуммаФР = 0;
	КонецЕсли;
	
	Если Объект.Прочие90[Элемент.ТекущаяСтрока].ДДС Тогда
		Объект.Прочие90[Элемент.ТекущаяСтрока].СуммаБДДС = 0;
	КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(Элементы.Прочие90.ТекущиеДанные.АвторЗаписи) Тогда
		Объект.Прочие90[Элемент.ТекущаяСтрока].АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();	
	//КонецЕсли;
	//Объект.Прочие90.Сортировать("Месяц Возр, НомерСтроки Возр");
	
КонецПроцедуры

&НаКлиенте
Процедура Прочие91ПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Прочие91[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;		
	КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(Элементы.Прочие91.ТекущиеДанные.АвторЗаписи) Тогда
		Объект.Прочие91[Элемент.ТекущаяСтрока].АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();	
	//КонецЕсли;
	
	//Объект.Прочие91.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

&НаКлиенте
Процедура Прочие90НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ВидНоменклатурыБюджетКоммРасходов = "Все" Или ВидНоменклатурыБюджетКоммРасходов = "" Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
		Массив.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элемент.ОграничениеТипа = ОписаниеТиповС;
	Иначе
		Массив = Новый Массив;
		Массив.Добавить(?(ВидНоменклатурыБюджетКоммРасходов = "Номенклатура", Тип("СправочникСсылка.Номенклатура"), Тип("СправочникСсылка.ОсновныеСредства")));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элемент.ОграничениеТипа = ОписаниеТиповС;
	КонецЕсли;
	
	Если ВидНоменклатурыБюджетКоммРасходов = "Номенклатура" Тогда 
		ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
		Новый Структура("СписокНоменклатур",РеализуемыеНоменклатуры()), Элемент);	
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("РаспределитьЗавершение1", ЭтотОбъект), "Не выбран конкретный месяц. Распределение невозможно");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МетодРаспределения) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("РаспределитьЗавершение", ЭтотОбъект), "Не выбран метод распределения. Распределение невозможно");
		Возврат;
	КонецЕсли;
	
	Если МетодРаспределения = "Количество" Тогда
		РаспределитьСервер()
	Иначе
		РаспределитьПоВыручке()
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьЗавершение1(ДополнительныеПараметры) Экспорт
	
	

КонецПроцедуры

&НаКлиенте
Процедура РаспределитьЗавершение(ДополнительныеПараметры) Экспорт
	
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция НужныеТипы()
	
	ТипыНоменклатуры = Новый Массив;
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.ОсновнаяПродукция);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции // ()

&НаСервереБезКонтекста
Функция НужныеНомера()
	
	НомераНоменклатуры = Новый Массив;
	НомераНоменклатуры.Добавить(Перечисления.Д_НомерНоменклатуры.Номер1);
	НомераНоменклатуры.Добавить(Перечисления.Д_НомерНоменклатуры.Номер1закуп);
	НомераНоменклатуры.Добавить(Перечисления.Д_НомерНоменклатуры.Номер1закупТранзит);
	НомераНоменклатуры.Добавить(Перечисления.Д_НомерНоменклатуры.Номер1Транзит);
	
	Возврат НомераНоменклатуры;
	
КонецФункции // ()

&НаКлиенте
Процедура РаспределитьСервер()
	
	// закомментированно 18.11.14 {
	ТипыНоменклатуры = НужныеТипы();
	//НомераНоменклатуры = НужныеНомера();
	//}
	ПараметрыРеализации = РеализуемыеНоменклатуры();
	ИндексМассива = Ложь;
	
	Для каждого ТекСтрока Из ПараметрыРеализации Цикл
		// закомментированно 18.11.14 {
		Если ТипыНоменклатуры.Найти(БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока, "ТипНоменклатуры")) = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		//Если НомераНоменклатуры.Найти(БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока, "Д_НомерНоменклатуры")) = Неопределено Тогда
		//	Продолжить;		
		//КонецЕсли;
		//}
		ОбъемРеализации = ПолучитьОбъемРеализации(ТекСтрока, Объект.Месяц, Подразделение);
		
		Если ОбъемРеализации Тогда
			
			НоваяСтрока = Объект.Прочие90.Добавить();
			НоваяСтрока.Статья = Статья;
			НоваяСтрока.Месяц = Объект.Месяц;
			НоваяСтрока.Номенклатура = ТекСтрока;
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				НоваяСтрока.Подразделение = Подразделение;
			КонецЕсли;
			
			НоваяСтрока.НаЕд = Сумма / ОбъемРеализации;
			НоваяСтрока.ФР = Истина;
			НоваяСтрока.Номенклатура = ТекСтрока;
			
			Если НЕ ИндексМассива Тогда
				НоваяСтрока.СуммаБДДС = Сумма;	
				ИндексМассива = Истина;				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоВыручке()
	
	// закомментированно 18.11.14 {
	ТипыНоменклатуры = НужныеТипы();
	//НомераНоменклатуры = НужныеНомера();
	//}
	ПараметрыРеализации = РеализуемыеНоменклатуры();
	ИндексМассива = Ложь;
	
	Для каждого ТекСтрока Из ПараметрыРеализации Цикл
		// закомментированно 18.11.14 {
		Если ТипыНоменклатуры.Найти(БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока, "ТипНоменклатуры")) = Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		//Если НомераНоменклатуры.Найти(БюджетныйНаСервере.ВернутьРеквизит(ТекСтрока, "Д_НомерНоменклатуры")) = Неопределено Тогда
		//	Продолжить;		
		//КонецЕсли;
		//}
		ОбъемРеализации = ПолучитьОбъемРеализации(ТекСтрока, Объект.Месяц, Подразделение, Истина);
		
		Если ОбъемРеализации Тогда
			
			НоваяСтрока = Объект.Прочие90.Добавить();
			НоваяСтрока.Статья = Статья;
			НоваяСтрока.Месяц = Объект.Месяц;
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				НоваяСтрока.Подразделение = Подразделение;
			КонецЕсли;
			
			НоваяСтрока.НаЕд = Сумма / ОбъемРеализации;
			НоваяСтрока.ФР = Истина;
			НоваяСтрока.Номенклатура = ТекСтрока;
			
			Если НЕ ИндексМассива Тогда
				НоваяСтрока.СуммаБДДС = Сумма;	
				ИндексМассива = Истина;				
			КонецЕсли;
			
		КонецЕсли;
				
	КонецЦикла; 
		
КонецПроцедуры

#КонецОбласти

#Область Продажи

&НаСервереБезКонтекста
Функция ПеречислениеВНХ()
	
	Возврат Перечисления.Д_ВидыКонрагентов.ВНХКонтрагент;	
	
КонецФункции // ()

&НаКлиенте
Процедура БюджетПродажПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.БюджетПродаж[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
	//Объект.БюджетПродаж.Сортировать("Месяц Возр, НомерСтроки Возр");
	Если Объект.БюджетПродаж[Элемент.ТекущаяСтрока].Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
		СформироватьОстаткиГП();
	КонецЕсли; 	
	
	ПросчитатьДЗИКЗ();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОстаткиГП()
	
	Объект.ВводОстатковПокупатели.Очистить();
	СтруктураПоиска = Новый Структура("Месяц", Элементы.Месяц.СписокВыбора[1].Значение);
	ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого ТекСтрокаДвижение Из ОтобранныеСтроки Цикл
		
		Если ТекСтрокаДвижение.ДЗНачало Тогда
			НоваяСтрока = Объект.ВводОстатковПокупатели.Добавить();
			НоваяСтрока.Счет = ВернутьСчетПоКоду("62.01");
			НоваяСтрока.Задолженность = ?(ТекСтрокаДвижение.ДЗНачало > 0, ВернутьЗадолженность(), ВернутьЗадолженность("Кт"));
			НоваяСтрока.Субконто1 = ТекСтрокаДвижение.Контрагент;
			НоваяСтрока.Сумма = ?(ТекСтрокаДвижение.ДЗНачало < 0, - ТекСтрокаДвижение.ДЗНачало, ТекСтрокаДвижение.ДЗНачало) ;
			НоваяСтрока.Содержание = "ДЗ Задолженность на начало";	
		КонецЕсли;
		
		Если ТекСтрокаДвижение.КЗНачало Тогда
			НоваяСтрока = Объект.ВводОстатковПокупатели.Добавить();
			НоваяСтрока.Счет = ВернутьСчетПоКоду("76.01");
			НоваяСтрока.Задолженность = ?(ТекСтрокаДвижение.КЗНачало > 0, ВернутьЗадолженность("Кт"), ВернутьЗадолженность());
			НоваяСтрока.Субконто1 = ТекСтрокаДвижение.Контрагент;
			НоваяСтрока.Сумма = ?(ТекСтрокаДвижение.КЗНачало< 0, - ТекСтрокаДвижение.КЗНачало, ТекСтрокаДвижение.КЗНачало) ;
			НоваяСтрока.Содержание = "КЗ Задолженность на начало";	
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТЗКлиент()
	
	ТЗРеализация.Очистить();
	
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		СтрукрутаПоиска = Новый Структура("Контрагент, Номенклатура, Месяц, Подразделение", ТекСтрока.Контрагент, ТекСтрока.Номенклатура, ТекСтрока.Месяц, ТекСтрока.Подразделение);
		ОтобранныеСтроки = ТЗРеализация.НайтиСтроки(СтрукрутаПоиска);
		
		Если НЕ ОтобранныеСтроки.Количество() Тогда
			НоваяСтрока = ТЗРеализация.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьДЗИКЗ()
	
	//формируем список контрагентов, присутствующих в документе
	
	СвернутьТЗКлиент();
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекПозиция Из ТЗРеализация Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Контрагент, Номенклатура, Подразделение", Элементы.Месяц.СписокВыбора[1].Значение, ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Подразделение);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		ДЗНачало = 0; Отгрузка = 0; Оплата = 0;
		КЗНачало = 0; НачисленоКЗ = 0; ОплаченоКЗ = 0;
		Если НЕ ОтобранныеСтроки.Количество() Тогда
			ДЗКонец = 0;		
		КонецЕсли;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			ДЗНачало = ДЗНачало + ТекСтрока2.ДЗНачало;	
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз"  И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			Цена = Цена + Транспорт;
			
			
			Отгрузка = Отгрузка + ТекСтрока2.Количество * (ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.Дисконт + ?(НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)", 0, ТекСтрока2.ЖД) + ?(НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)", 0, ТекСтрока2.Авто)  + ТекСтрока2.Сопровождение);
			Оплата = Оплата + ТекСтрока2.ПоступлениеДС;
			
			ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ДЗНачало + Отгрузка - Оплата);
			ТекСтрока2.ДЗКонец = ДЗКонец;
			
			КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
			НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (?(ТекСтрока2.ПоступлениеДС > Транспорт, ТекСтрока2.ПоступлениеДС - Транспорт, 0)) * ТекСтрока2.Верх /
			Цена);
			ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
			КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			
		КонецЦикла;
		
		
		СтруктураПоиска = Новый Структура("Контрагент, Номенклатура, Подразделение", ТекПозиция.Контрагент, ТекПозиция.Номенклатура, ТекПозиция.Подразделение);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		//СчетчикНайденных = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			//Если НЕ СчетчикНайденных Тогда
			
			ТекСтрока2.ДЗНачало = ДЗКонец;	
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			Отгрузка = ТекСтрока2.Количество * (ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.Дисконт + ?(НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)", 0, ТекСтрока2.ЖД) + ?(НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)", 0, ТекСтрока2.Авто) + ТекСтрока2.Сопровождение);
			Оплата = ТекСтрока2.ПоступлениеДС;
			
			ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ТекСтрока2.ДЗНачало + Отгрузка - Оплата);
			ТекСтрока2.ДЗКонец = ДЗКонец;
			//СчетчикНайденных = СчетчикНайденных + 1;
			
			ТекСтрока2.КЗНачало = КЗКонец;
			НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (?(ТекСтрока2.ПоступлениеДС > Транспорт, ТекСтрока2.ПоступлениеДС - Транспорт, 0)) * ТекСтрока2.Верх /
			Цена);
			ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
			КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			//Иначе
			//	ТекСтрока2.ДЗНачало = 0;
			//	ТекСтрока2.КЗНачало = 0;
			//КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЦикла;	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьExcel(Команда)
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузки", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.БюджетПродаж);
ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.БюджетПродаж);	
	//Сообщить("Загрузка успешно выполнена.");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКоммРасходы(Команда)

	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиЗатрат", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.Прочие90);
ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.Прочие90);
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродаж(Команда)
	ПараметрыФормы = Новый Структура("Сценарий, Предприятие, Дата1, Дата2, ВидимостьШапки, ДЗНачало", Объект.Сценарий, Объект.Предприятие,
	НачалоМесяца(Объект.Дата), КонецМесяца(Объект.Дата), 0, Ложь);
	
	ОткрытьФорму("Отчет.Д_БюджетПродаж.Форма.ФормаОтчета", ПараметрыФормы)
	
КонецПроцедуры

&НаСервере
Функция НайтиКонтрагента(Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Предприятия.Предприятие В(&Предприятие)
	|	И Контрагенты.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
	Иначе
		УжеСуществует = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	Возврат УжеСуществует;
КонецФункции

&НаСервере
Функция НайтиНоменклатуру(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Предприятие = &Предприятие
	|	И Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("Наименование", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
	Иначе
		УжеСуществует = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	Возврат УжеСуществует;
КонецФункции

&НаСервере
Процедура ДозаполнитьБюджетПродажТипомНоменк()
	Для каждого ТекСтрока Из Объект.БюджетПродаж Цикл
		Если ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			ТекСтрока.ОбъектПродажи = "Основные средства";
		Иначе
			ТекСтрока.ОбъектПродажи = "Номенклатура";		
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого ТекСтрока Из Объект.Прочие90 Цикл
		Если ТипЗнч(ТекСтрока.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			ТекСтрока.ОбъектПродажи = "Основные средства";
		Иначе
			ТекСтрока.ОбъектПродажи = "Номенклатура";		
		КонецЕсли;	
	КонецЦикла; 

КонецПроцедуры
 
#КонецОбласти

#Область БюджетПрочихПроектов

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиЗатрат", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.Затраты);
ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.Затраты);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСебестоимость(Команда)
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		Объект,
		"Укажите конкретный месяц для загрузки данных.",
		,
		,
		"ВсеМесяцы",
		Истина);
		Возврат;	
	КонецЕсли;
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиСебестомости", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.БюджетСебестоимости);
	
	
КонецПроцедуры


&НаСервере
Функция НайтиСтатьюССПоКоду(КодСтатьи)
	Возврат Справочники.СтатьиЗатрат.НайтиПоКоду(КодСтатьи);	
КонецФункции // НайтиСтатьюССПоКоду()

&НаКлиенте
Процедура ЗатратыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Затраты[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	
	//Если НоваяСтрока Тогда
		Если Элементы.Затраты.ТекущиеДанные <> Неопределено Тогда
			Элементы.Затраты.ТекущиеДанные.АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();
			//Элементы.Затраты.ТекущиеДанные.Заявитель = Объект.Предприятие;
		КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокПредприятий = ПолучитьПППоРодителю(Объект.Предприятие);
	ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбораИзМассива", Новый Структура("Флаг, ТекущаяСтрока", СписокПредприятий, Элементы.Затраты.ТекущиеДанные.ЦФО), Элемент); 
КонецПроцедуры

&НаСервереБезконтекста
Функция ПолучитьПППоРодителю(ТекПП)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Предприятия.Ссылка
	|ИЗ
	|	Справочник.Предприятия КАК Предприятия
	|ГДЕ
	|	Предприятия.Ссылка В ИЕРАРХИИ(&Родитель)";
	
	Запрос.УстановитьПараметр("Родитель", ТекПП);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции // ()

&НаКлиенте
Процедура ЗатратыПризнакПриИзменении(Элемент)
	//Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат = СменитьТип(Элементы.Затраты.ТекущиеДанные.Признак);	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СменитьТип(ТипСправочника)
	Если ТипСправочника = Перечисления.Д_ПризнакСписания.Себестоимость Тогда
		НовыйТип = Справочники.СтатьиЗатрат.ПустаяСсылка();
	КонецЕсли; 
	
	Если ТипСправочника = Перечисления.Д_ПризнакСписания.ФинРез Тогда
		НовыйТип = Справочники.СтатьиДоходовРасходов.ПустаяСсылка();
	КонецЕсли;
	Возврат НовыйТип;
КонецФункции

&НаКлиенте
Процедура ЗатратыЦФОПриИзменении(Элемент)
	Если НЕ ПустаяСтрока(Элементы.Затраты.ТекущиеДанные.ЦФО) Тогда
		Элементы.Затраты.ТекущиеДанные.Подразделение = БюджетныйНаСервере.ВернутьРеквизит(Элементы.Затраты.ТекущиеДанные.ЦФО, "ВидДеятельности");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Кредиты

&НаКлиенте
Процедура КредитыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Кредиты[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.Кредиты.Сортировать("Месяц Возр, НомерСтроки Возр");
	Если Объект.Кредиты[Элемент.ТекущаяСтрока].Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
		СформироватьОстаткиКредиты();
	КонецЕсли;
	
	ПросчитатьКредиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьКредиты()
	
	//формируем список кредитов, присутствующих в документе
	Массивкредитов = Новый Массив;
	Для каждого ТекСтрока Из Объект.Кредиты Цикл
		Если Массивкредитов.Найти(ТекСтрока.Кредит) = Неопределено Тогда
			Массивкредитов.Добавить(ТекСтрока.Кредит);	
		КонецЕсли;	
	КонецЦикла; 
	
	Для каждого ТекКредит Из Массивкредитов Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Кредит", Элементы.Месяц.СписокВыбора[1].Значение, ТекКредит);
		ОтобранныеСтроки = Объект.Кредиты.НайтиСтроки(СтруктураПоиска);
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			НаНачало = ТекСтрока2.НаНачало;	
			Приход = ТекСтрока2.Поступление;	
			Расход = ТекСтрока2.Гашение;
			ЦенаКонец = НаНачало + Приход - Расход;
		КонецЦикла;
		
		
		СтруктураПоиска = Новый Структура("Кредит", ТекКредит);
		ОтобранныеСтроки = Объект.Кредиты.НайтиСтроки(СтруктураПоиска);
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			ТекСтрока2.НаНачало = ЦенаКонец;	
			
			Приход = ТекСтрока2.Поступление;	
			Расход = ТекСтрока2.Гашение;			
			
			ЦенаКонец = ТекСтрока2.НаНачало + Приход - Расход;
			
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОстаткиКредиты()
	
	Объект.ВводОстатковКредиты.Очистить();
	СтруктураПоиска = Новый Структура("Месяц", Элементы.Месяц.СписокВыбора[1].Значение);
	ОтобранныеСтроки = Объект.Кредиты.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого ТекСтрокаДвижение Из ОтобранныеСтроки Цикл
		
		
		Если ТекСтрокаДвижение.НаНачало Тогда
			НоваяСтрока = Объект.ВводОстатковКредиты.Добавить();
			НоваяСтрока.Счет = ВернутьСчетПоКоду("67.01");
			НоваяСтрока.Задолженность = ?(ТекСтрокаДвижение.НаНачало > 0, ВернутьЗадолженность("Кт"),  ВернутьЗадолженность());
			НоваяСтрока.Субконто1 = ТекСтрокаДвижение.Кредит;
			НоваяСтрока.Сумма = ?(ТекСтрокаДвижение.НаНачало < 0, - ТекСтрокаДвижение.НаНачало, ТекСтрокаДвижение.НаНачало) ;
			НоваяСтрока.Содержание = "Кредит на начало";	
		КонецЕсли;
		
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура КредитыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.Кредиты.ТекущиеДанные.Номенклатура), Элемент);
КонецПроцедуры

#КонецОбласти

#Область РеестрПР

&НаКлиенте
Процедура ПРПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.ПР[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.ПР.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

&НаКлиенте
Процедура ПРНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.ПР.ТекущиеДанные.Номенклатура), Элемент);
КонецПроцедуры

#КонецОбласти

#Область ЛимитыНаОБ

&НаСервереБезКонтекста
Функция ВернутьСтатьюОБ(КодСтатьи)
	Возврат Справочники.Д_СтатьиОборотки.НайтиПоКоду(КодСтатьи);
КонецФункции // ()

&НаСервереБезКонтекста
Функция ВернутьСтатьюСС(КодСтатьи)
	Возврат Справочники.СтатьиЗатрат.НайтиПоКоду(КодСтатьи);
КонецФункции // ()

&НаСервереБезКонтекста
Функция ВернутьОтсрочку(Дата, Сценарий, Номенклатура, Вид, Предприятие)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_ПараметрыНоменклатурыСрезПоследних.Д_ОтсрочкаОплаты КАК Отсрочка,
	|	Д_ПараметрыНоменклатурыСрезПоследних.Д_ЛимитНаОстатке КАК Остаток
	|ИЗ
	|	РегистрСведений.Д_ПараметрыНоменклатуры.СрезПоследних(
	|			&Дата,
	|			СценарийПлана = &Сценарий
	|				И Номенклатура = &Номенклатура И Предприятие = &Предприятие) КАК Д_ПараметрыНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Вид = "ДЗ" Тогда
			Возврат Выборка.Отсрочка;
		Иначе
			Возврат Выборка.Остаток;		
		КонецЕсли;
		
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции // ()

&НаКлиенте
Процедура РасчитатьЛимиты()
	
	// лимиты внесенные в регистр
	ПолучитьЛимитыВнесенныеВРегистр();
	
	// прибыль учров
	ПервыйМесяцСценария = ВернутьПервыйМесяц(Объект.Сценарий);
	Соотв_Прибыль = БюджетныйНаСервере.ПолучитьЛимитыНаПрибыльУчастников(Объект.Предприятие, Объект.Сценарий);
	
	//Считаем списание сырья и остатки сырья	
	СтатьяОб1 = ВернутьСтатьюОБ("ОБ166");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса", СтатьяОб1));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;  
	СтатьяОб2 = ВернутьСтатьюОБ("ОБ168");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса", СтатьяОб2));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	СтатьяОб3 = ВернутьСтатьюОБ("ОБ181");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса", СтатьяОб3));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;  
	
	
	// закомментированно, здесь будут данные из регистра по сливам
	Для каждого ТекСтрокаСырья Из Объект.ДвижениеСырья Цикл
		
		Если Не ТекСтрокаСырья.Месяц = ПервыйМесяцСценария Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаДвиж = ТекСтрокаСырья.КоличествоНаНачало * ТекСтрокаСырья.ЦенаНаНачало 
		+ ТекСтрокаСырья.КоличествоПриход * ТекСтрокаСырья.ЦенаПриход - ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.ЦенаРасход;
		Если СуммаДвиж Тогда
			
			
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрокаСырья);
			НоваяСтрока.СтатьяБаланса = СтатьяОб1;	 
			НоваяСтрока.Материалы = ТекСтрокаСырья.Сырье;	 
			
			Количество = ТекСтрокаСырья.КоличествоНаНачало + ТекСтрокаСырья.КоличествоПриход - ТекСтрокаСырья.КоличествоРасход;
			КоличкствоКРХ = ТекСтрокаСырья.КоличествоНаНачало * ТекСтрокаСырья.КрахмалистостьНаНачало / 100 
			+ ТекСтрокаСырья.КоличествоПриход * ТекСтрокаСырья.КрахмалистостьПриход / 100 - ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.КрахмалистостьРасход / 100;
			
			НоваяСтрока.Сумма = СуммаДвиж;
			НоваяСтрока.Количество = Количество;
			НоваяСтрока.КоличествоКРХ = КоличкствоКРХ;
			Если Количество > ТекСтрокаСырья.КоличествоРасход / 30 * 20 И ТекСтрокаСырья.КоличествоРасход Тогда // 30 дней в месяце, 20 дней тек лимит
				
				НоваяСтрока.Сумма = ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.ЦенаРасход / 30 * 20;
				НоваяСтрока.Количество = ТекСтрокаСырья.КоличествоРасход / 30 * 20;
				НоваяСтрока.КоличествоКРХ = (ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.КрахмалистостьРасход / 100) / 30 * 20;
				НоваяСтрока.Лимит = 20;
				НоваяСтрока.Основание = "Текущий запас не более 20 дней";
				
				НоваяСтрока = Объект.СтатьиОборотки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрокаСырья);
				НоваяСтрока.СтатьяБаланса = СтатьяОб2;
				НоваяСтрока.Материалы = ТекСтрокаСырья.Сырье;	 
				НоваяСтрока.Сумма = СуммаДвиж - ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.ЦенаРасход / 30 * 20;
				НоваяСтрока.Количество = Количество - ТекСтрокаСырья.КоличествоРасход / 30 * 20;
				НоваяСтрока.КоличествоКРХ = КоличкствоКРХ - (ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.КрахмалистостьРасход / 100) / 30 * 20;
				НоваяСтрока.Лимит = Количество / (ТекСтрокаСырья.КоличествоРасход / 30) - 20;
				НоваяСтрока.Основание = "Инвестиционный запас";
			КонецЕсли;
		КонецЕсли;	
		
		Если ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.ЦенаРасход / 30 * 3 Тогда			
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрокаСырья);
			НоваяСтрока.СтатьяБаланса = СтатьяОб3;
			НоваяСтрока.Материалы = ТекСтрокаСырья.Сырье;
			//НоваяСтрока.Сумма = ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.ЦенаРасход / 30 * 3;
			ПараметрыТекущегоСырья = ВычислитьКрахмалистостьИЦенуСырья(ТекСтрокаСырья.Номенклатура, ТекСтрокаСырья.Сырье, ПервыйМесяцСценария); 
			ТекущийПроцентОтбора = ПолучитьПроцентОтбора(ТекСтрокаСырья.Номенклатура, Объект.Сценарий, Объект.Предприятие);
			ТекущийВыходКРХ = ПолучитьВыходКРХ(ТекСтрокаСырья.Сырье, Объект.Сценарий);
			СуточныйСливИДниРаботы = ВычислитьСуточныйСливИДниРаботы(ПервыйМесяцСценария, ТекСтрокаСырья.Номенклатура);
			Если ПараметрыТекущегоСырья.Количество() И ТекущийПроцентОтбора И ТекущийВыходКРХ И СуточныйСливИДниРаботы.Количество() Тогда
				НоваяСтрока.Сумма = 1 / ТекущийПроцентОтбора * 100 / ТекущийВыходКРХ / ПараметрыТекущегоСырья.СредневзвешеннаяКрахмалистость * 100 * 3 * ПараметрыТекущегоСырья.ЦенаОстатка * СуточныйСливИДниРаботы.Слив;	
				НоваяСтрока.Количество = 1 / ТекущийПроцентОтбора * 100 / ТекущийВыходКРХ / ПараметрыТекущегоСырья.СредневзвешеннаяКрахмалистость * 100 * 3 * СуточныйСливИДниРаботы.Слив;
			КонецЕсли;
			Если СуточныйСливИДниРаботы.Количество() Тогда
				НоваяСтрока.КоличествоКРХ = (ТекСтрокаСырья.КоличествоРасход * ТекСтрокаСырья.КрахмалистостьРасход / 100) / СуточныйСливИДниРаботы.ДниРаботы * 3;
			КонецЕсли;
			НоваяСтрока.Лимит = 3;
		КонецЕсли;
		
	КонецЦикла;	
	
	//расчеты с поставщиками (60 сч)
	//счет 60.1 ДЗ или КЗ
	
	Лимит396Установлен = Ложь;
	Лимит167Установлен = Ложь;
	
	// если лимит установлен
	КЗ_ОснСырье = ВернутьСтатьюОБ("ОБ396");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", КЗ_ОснСырье, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = КЗ_ОснСырье;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", КЗ_ОснСырье, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит396Установлен = Истина;
	КонецЕсли;
	
	// если лимит установлен
	ДЗ_ОснСырье = ВернутьСтатьюОБ("ОБ167");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", ДЗ_ОснСырье, ПервыйМесяцСценария)).Количество() Тогда			
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = ДЗ_ОснСырье;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", ДЗ_ОснСырье, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;	
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит167Установлен = Истина;
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.ДвижениеСырья.НайтиСтроки(Новый Структура("Месяц", ПервыйМесяцСценария));
	СуммаДвиж = 0;
	Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
		СуммаДвиж = СуммаДвиж + (-ТекСтрокаОтбора.КЗ - ТекСтрокаОтбора.КоличествоПриход * ТекСтрокаОтбора.ЦенаПриход + ТекСтрокаОтбора.Оплата + ТекСтрокаОтбора.ОплатаПрочее);
	КонецЦикла; 
	
	Если СуммаДвиж > 0 Тогда
		СтатьяОб = ДЗ_ОснСырье;
	Иначе
		СтатьяОб = КЗ_ОснСырье;
		СуммаДвиж = - СуммаДвиж;
	КонецЕсли;
	
	Если СуммаДвиж Тогда
		Если (СтатьяОб = КЗ_ОснСырье И Не Лимит396Установлен) ИЛИ (СтатьяОб = ДЗ_ОснСырье И Не Лимит167Установлен) Тогда
			НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяОб, ПервыйМесяцСценария));
			Для каждого СтрокаМассива Из НайденныеСтроки Цикл
				Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
			КонецЦикла;  
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяОб;
			НоваяСтрока.Сумма = СуммаДвиж;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
		КонецЕсли;
	КонецЕсли;
	
	//60.5
	СуммаОстатков605 = 0;
	Для каждого ТекСтрокаОстатков Из Объект.ВводОстатковПрочее Цикл
		Если ВернутьСчетПоКоду("60.05") = ТекСтрокаОстатков.Счет Тогда
			Если ТекСтрокаОстатков.Задолженность = ВернутьЗадолженность() Тогда
				СуммаОстатков605 = СуммаОстатков605 + ТекСтрокаОстатков.Сумма;
			Иначе
				СуммаОстатков605 = СуммаОстатков605 - ТекСтрокаОстатков.Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДвиж = 0;
	
	Лимит176Установлен = Ложь;
	Лимит398Установлен = Ложь;
	
	// если лимит установлен
	МБПИнв = ВернутьСтатьюОБ("ОБ176");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", МБПИнв, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = МБПИнв;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", МБПИнв, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит176Установлен = Истина;
	КонецЕсли;
	
	// если лимит установлен
	КЗПрочая = ВернутьСтатьюОБ("ОБ398");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", КЗПрочая, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = КЗПрочая;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", КЗПрочая, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит398Установлен = Истина;
	КонецЕсли;
	
	СуммаДвиж = БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("10.06"), Объект.Предприятие, Объект.Сценарий) + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("60.05"), Объект.Предприятие, Объект.Сценарий) + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("08.01"), Объект.Предприятие, Объект.Сценарий) + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("08.02"), Объект.Предприятие, Объект.Сценарий);
	
	Если СуммаДвиж > 0 Тогда
		СтатьяОб = ВернутьСтатьюОБ("ОБ176");
	Иначе
		СтатьяОб = ВернутьСтатьюОБ("ОБ398");
		СуммаДвиж = - СуммаДвиж;
	КонецЕсли;
	Если СуммаДвиж Тогда
		Если (СтатьяОб = МБПИнв И Не Лимит176Установлен) ИЛИ (СтатьяОб = КЗПрочая И Не Лимит398Установлен) Тогда
			НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяОб, ПервыйМесяцСценария));
			Для каждого СтрокаМассива Из НайденныеСтроки Цикл
				Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
			КонецЦикла;  
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяОб;
			НоваяСтрока.Сумма = СуммаДвиж;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
		КонецЕсли;	
	КонецЕсли;
	
	//газ	
	Лимит251Установлен = Ложь;
	
	// если лимит установлен
	СтГаз = ВернутьСтатьюОБ("ОБ251");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтГаз, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтГаз;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтГаз, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит251Установлен = Истина;
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.БюджетСебестоимости.НайтиСтроки(Новый Структура("Месяц, СтатьяЗатрат", ПервыйМесяцСценария, ВернутьСтатьюСС("2050.01")));
	СуммаДвиж = 0;
	Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
		СуммаДвиж = СуммаДвиж + ТекСтрокаОтбора.СуммаСеб;
	КонецЦикла;
	
	Если СуммаДвиж И Не Лимит251Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтГаз, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтГаз;
		НоваяСтрока.Сумма = СуммаДвиж;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;	
	
	//эл		
	Лимит252Установлен = Ложь;
	
	// если лимит установлен
	СтЭл = ВернутьСтатьюОБ("ОБ252");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтЭл, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтЭл;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтЭл, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит252Установлен = Истина;
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.БюджетСебестоимости.НайтиСтроки(Новый Структура("Месяц, СтатьяЗатрат", ПервыйМесяцСценария, ВернутьСтатьюСС("2040.01")));
	СуммаДвиж = 0;
	Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
		СуммаДвиж = СуммаДвиж + ТекСтрокаОтбора.СуммаСеб;
	КонецЦикла;
	
	Если СуммаДвиж И Не Лимит252Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтЭл, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтЭл;
		НоваяСтрока.Сумма = СуммаДвиж;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;		
	
	//прочая дз	
	Лимит307Установлен = Ложь;
	
	// если лимит установлен
	ПрочДЗ = ВернутьСтатьюОБ("ОБ307");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", ПрочДЗ, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = ПрочДЗ;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", ПрочДЗ, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит307Установлен = Истина;
	КонецЕсли;
	
	Если Не Лимит307Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", ПрочДЗ, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = ПрочДЗ;
		НоваяСтрока.Сумма = ?(Объект.Предприятие = ВернутьПредприятие("С"), 2100000, 1800000);
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	//всп		
	Лимит169Установлен = Ложь;
	
	// если лимит установлен
	СтВспомСырье = ВернутьСтатьюОБ("ОБ169");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтВспомСырье, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтВспомСырье;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтВспомСырье, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит169Установлен = Истина;
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.БюджетСебестоимости.НайтиСтроки(Новый Структура("Месяц, СтатьяЗатрат", ПервыйМесяцСценария, ВернутьСтатьюСС("2030.01")));
	СуммаДвиж = 0;
	Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
		СуммаДвиж = СуммаДвиж + ТекСтрокаОтбора.СуммаСеб;
	КонецЦикла;
	
	Если СуммаДвиж И Не Лимит169Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтВспомСырье, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтВспомСырье;
		НоваяСтрока.Сумма = СуммаДвиж;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	//мбп
	СтатьиМБП = Новый Массив;
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.06"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.04"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.07"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.03"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2080.01"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2080.03"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.01"));
	СтатьиМБП.Добавить(ВернутьСтатьюСС("2060.02"));
	
	Лимит175Установлен = Ложь;
	
	// если лимит установлен
	СтМБП = ВернутьСтатьюОБ("ОБ175");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтМБП, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтМБП;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтМБП, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит175Установлен = Истина;
	КонецЕсли;
	
	ОтобранныеСтроки = Объект.БюджетСебестоимости.НайтиСтроки(Новый Структура("Месяц", ПервыйМесяцСценария));
	СуммаДвиж = 0;
	Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
		Если НЕ СтатьиМБП.Найти(ТекСтрокаОтбора.СтатьяЗатрат) = Неопределено Тогда
			СуммаДвиж = СуммаДвиж + ТекСтрокаОтбора.СуммаСеб;
		КонецЕсли;
	КонецЦикла;
	
	Если СуммаДвиж И Не Лимит175Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтМБП, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтМБП;
		НоваяСтрока.Сумма = СуммаДвиж + 1000000;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	// неликвиды ОБ306
	СтатьяНеликвиды = ВернутьСтатьюОБ("ОБ306");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяНеликвиды, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитНеликвиды = БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("10.07"), Объект.Предприятие, Объект.Сценарий);
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяНеликвиды, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяНеликвиды;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяНеликвиды, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитНеликвиды Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяНеликвиды;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			НоваяСтрока.Сумма = ЛимитНеликвиды;
		КонецЕсли;
	КонецЕсли;
	
	//ДЗ
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);
	
	Лимит241Установлен = Ложь;
	
	// если лимит установлен
	СтДЗНормальная = ВернутьСтатьюОБ("ОБ241");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтДЗНормальная, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтДЗНормальная;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтДЗНормальная, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит241Установлен = Истина;
	КонецЕсли;
	
	// закомментированно 12.05.14 по обращению №2687
	//ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(Новый Структура("Месяц", ПервыйМесяцСценария));
	//СуммаДвиж = 0;
	//Для каждого ТекСтрокаОтбора Из ОтобранныеСтроки Цикл
	//	ТекДата = ДобавитьМесяц(НачДата, ТекСтрокаОтбора.Месяц - Месяц(НачДата));
	//	СуммаДвиж = СуммаДвиж + ТекСтрокаОтбора.Количество * ТекСтрокаОтбора.Цена * ВернутьОтсрочку(ТекДата, Объект.Сценарий, ТекСтрокаОтбора.Номенклатура, "ДЗ", Объект.Предприятие) / 30;
	//КонецЦикла;
	
	// обращение №2687, изменен алгоритм расчета лимита
	Лимит241 = БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.01"), Объект.Предприятие, Объект.Сценарий, "Дт") + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.02"), Объект.Предприятие, Объект.Сценарий, "Дт") 
	+ БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.03"), Объект.Предприятие, Объект.Сценарий, "Дт") + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.04"), Объект.Предприятие, Объект.Сценарий, "Дт") + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.10"), Объект.Предприятие, Объект.Сценарий, "Дт") + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("62.20"), Объект.Предприятие, Объект.Сценарий, "Дт");
	
	Если Лимит241 И Не Лимит241Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтДЗНормальная, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтДЗНормальная;
		НоваяСтрока.Сумма = Лимит241;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	//60.5
	СуммаОстатков97 = 0;
	СуммаОстатков98 = 0;
	Для каждого ТекСтрокаОстатков Из Объект.ВводОстатковПрочее Цикл
		Если ВернутьСчетПоКоду("97") = ТекСтрокаОстатков.Счет Тогда
			Если ТекСтрокаОстатков.Задолженность = ВернутьЗадолженность() Тогда
				СуммаОстатков97 = СуммаОстатков97 + ТекСтрокаОстатков.Сумма;
			Иначе
				СуммаОстатков97 = СуммаОстатков97 - ТекСтрокаОстатков.Сумма;
			КонецЕсли;
		КонецЕсли;
		Если ВернутьСчетПоКоду("98") = ТекСтрокаОстатков.Счет Тогда
			Если ТекСтрокаОстатков.Задолженность = ВернутьЗадолженность("Кт") Тогда
				СуммаОстатков98 = СуммаОстатков98 + ТекСтрокаОстатков.Сумма;
			Иначе
				СуммаОстатков98 = СуммаОстатков98 - ТекСтрокаОстатков.Сумма;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаДвиж = 0;	
	Лимит270Установлен = Ложь;
	Лимит410Установлен = Ложь;
	
	// если лимит установлен
	СтРасходыБудПер = ВернутьСтатьюОБ("ОБ270");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтРасходыБудПер, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтРасходыБудПер;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтРасходыБудПер, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит270Установлен = Истина;
	КонецЕсли;
	
	// если лимит установлен
	СтДоходыБудПер = ВернутьСтатьюОБ("ОБ410");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтДоходыБудПер, ПервыйМесяцСценария)).Количество() Тогда	
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтДоходыБудПер;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтДоходыБудПер, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Основание = "получено из установленных лимитов";
		Лимит410Установлен = Истина;
	КонецЕсли;
	
	Если СуммаОстатков97 И Не Лимит270Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтРасходыБудПер, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтРасходыБудПер;
		НоваяСтрока.Сумма = СуммаОстатков97;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	Если СуммаОстатков98 И Не Лимит410Установлен Тогда
		НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтДоходыБудПер, ПервыйМесяцСценария));
		Для каждого СтрокаМассива Из НайденныеСтроки Цикл
			Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
		КонецЦикла;  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтДоходыБудПер;
		НоваяСтрока.Сумма = СуммаОстатков98;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
	КонецЕсли;
	
	// здесь будет плановый лимит на готовую продукцию ОБ191
	СтатьяГП = ВернутьСтатьюОБ("ОБ191");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяГП, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитГП = БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("43"), Объект.Предприятие, Объект.Сценарий) + БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("41"), Объект.Предприятие, Объект.Сценарий);
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяГП, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяГП;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяГП, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитГП Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяГП;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			НоваяСтрока.Сумма = ЛимитГП;
		КонецЕсли;
	КонецЕсли;
	
	// лимит кредиты ОБ360
	СтатьяКредиты = ВернутьСтатьюОБ("ОБ360");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяКредиты, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитКредиты = -БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("67.01"), Объект.Предприятие, Объект.Сценарий) - БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("67.02"), Объект.Предприятие, Объект.Сценарий);
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяКредиты, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяКредиты;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяКредиты, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитКредиты Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяКредиты;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			НоваяСтрока.Сумма = ЛимитКредиты;
		КонецЕсли;
	КонецЕсли;
	
	// 68 статья ОБ382 (заменена статья ОБ379 на ОБ382 по обращению №2687)
	СтатьяНалогиКЗ = ВернутьСтатьюОБ("ОБ382");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяНалогиКЗ, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитНалогиКЗ = БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("68"), Объект.Предприятие, Объект.Сценарий);
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяНалогиКЗ, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяНалогиКЗ;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяНалогиКЗ, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитНалогиКЗ Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяНалогиКЗ;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			// изменен знак лимита по обращению №2687
			НоваяСтрока.Сумма = -ЛимитНалогиКЗ;
		КонецЕсли;
	КонецЕсли;
	
	// лимит кз по зп
	СтатьяЗП = ВернутьСтатьюОБ("ОБ424");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяЗП, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитЗП = БюджетныйНаСервере.ПолучитьЛимитПоОплатеТруда(ВернутьСчетПоКоду("70"), Объект.Предприятие, Объект.Сценарий, "Кт");
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяЗП, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяЗП;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяЗП, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитЗП Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяЗП;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			НоваяСтрока.Сумма = ЛимитЗП;
		КонецЕсли;
	КонецЕсли;
	
	// прибыль учров
	Для Каждого СтрокаПрибыли Из Соотв_Прибыль Цикл
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтрокаПрибыли.Ключ;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтрокаПрибыли.Ключ, ПервыйМесяцСценария)).Количество() Тогда
			НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтрокаПрибыли.Ключ, ПервыйМесяцСценария))[0].Сумма;
			НоваяСтрока.Основание = "получено из установленных лимитов";
		Иначе
			НоваяСтрока.Сумма = СтрокаПрибыли.Значение; 
		КонецЕсли;
	КонецЦикла;
	
	// лимит инвестиционный фонд ОБ420
	СтатьяИФ = ВернутьСтатьюОБ("ОБ420");
	НайденныеСтроки = Объект.СтатьиОборотки.НайтиСтроки(Новый Структура("СтатьяБаланса, Месяц", СтатьяИФ, ПервыйМесяцСценария));
	Для каждого СтрокаМассива Из НайденныеСтроки Цикл
		Объект.СтатьиОборотки.Удалить(Объект.СтатьиОборотки.Индекс(СтрокаМассива));
	КонецЦикла;
	ЛимитИФ = -БюджетныйНаСервере.ПолучитьОстатокПоСчету(ВернутьСчетПоКоду("82"), Объект.Предприятие, Объект.Сценарий);
	Если ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяИФ, ПервыйМесяцСценария)).Количество() Тогда  
		НоваяСтрока = Объект.СтатьиОборотки.Добавить();
		НоваяСтрока.СтатьяБаланса = СтатьяИФ;
		НоваяСтрока.Месяц = ПервыйМесяцСценария;
		НоваяСтрока.Сумма = ТЗУстановленныеЛимитыНаОборотку.НайтиСтроки(Новый Структура("Статья, Период", СтатьяИФ, ПервыйМесяцСценария))[0].Сумма;
		НоваяСтрока.Основание = "получено из установленных лимитов";
	Иначе
		Если ЛимитИФ Тогда
			НоваяСтрока = Объект.СтатьиОборотки.Добавить();
			НоваяСтрока.СтатьяБаланса = СтатьяИФ;
			НоваяСтрока.Месяц = ПервыйМесяцСценария;
			НоваяСтрока.Сумма = ЛимитИФ;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиОбороткиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.СтатьиОборотки[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;	
	КонецЕсли;
	//Объект.СтатьиОборотки.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

&НаКлиенте
Процедура НеликвидыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.Неликвиды[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.Неликвиды.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

#КонецОбласти

#Область РаспределениеПрибыли

&НаСервереБезКонтекста
Функция ВыбратьИзСправочника(ТекПП, ТекМесяц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Учредители.Ссылка КАК Ссылка,
	               |	ДоляУчредителяСрезПоследних.ДоляУчредителя КАК Доля,
	               |	Учредители.ПроцентИзъятий КАК ПроцентИзъятий,
	               |	Учредители.СтатьяБДДС КАК СтатьяБДДС
	               |ИЗ
	               |	Справочник.Учредители КАК Учредители
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоляУчредителя.СрезПоследних(&ТекМесяц, ) КАК ДоляУчредителяСрезПоследних
	               |		ПО Учредители.Ссылка = ДоляУчредителяСрезПоследних.Учредитель
	               |			И Учредители.Предприятие = ДоляУчредителяСрезПоследних.Предприятие
	               |ГДЕ
	               |	Учредители.Предприятие = &Предприятие
	               |	И Учредители.Подробный = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Предприятие", ТекПП);
	Запрос.УстановитьПараметр("ТекМесяц", ТекМесяц);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции // ()

&НаКлиенте
Процедура ЗаполниьАвтоматически(Команда)
	
	Объект.РаспределениеПрибыли.Очистить();
	
	Для каждого ТекМесяц Из Элементы.Месяц.СписокВыбора Цикл
		ТекМесяцЗначение = ТекМесяц.Значение;
		ТЗ_Учр = ВыбратьИзСправочника(Объект.Предприятие, ТекМесяцЗначение);
		
		Для каждого ТекЭлемент Из ТЗ_Учр Цикл
			НоваяСтрока = Объект.РаспределениеПрибыли.Добавить();
			НоваяСтрока.Участник = ТекЭлемент.Ссылка;
			НоваяСтрока.ДоляУчастника = ТекЭлемент.Доля;
			НоваяСтрока.ДоляИзъятий = ТекЭлемент.ПроцентИзъятий;
			НоваяСтрока.СтатьяБДДС = ТекЭлемент.СтатьяБДДС;
			НоваяСтрока.Месяц = ТекМесяц.Значение; 
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПрибылиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.РаспределениеПрибыли[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	//Объект.РаспределениеПрибыли.Сортировать("Месяц Возр, НомерСтроки Возр");
КонецПроцедуры

#КонецОбласти

#Область Корректировки

&НаКлиенте
Процедура ЗатратыКППриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.ЗатратыКП[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
		
		Если Объект.ЗатратыКП[Элемент.ТекущаяСтрока].ЦФО.Пустая() Тогда
			Объект.ЗатратыКП[Элемент.ТекущаяСтрока].ЦФО = Объект.Предприятие;
		КонецЕсли;
				
	КонецЕсли;
	
	Если Элементы.ЗатратыКП.ТекущиеДанные <> Неопределено Тогда
		ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
		Элементы.ЗатратыКП.ТекущиеДанные.ТипБюджета = ТекТипБюджета;
		Элементы.ЗатратыКП.ТекущиеДанные.ТекущийБизнесПроцесс = ЗапретРедактированияКорректировок(ТекТипБюджета);
		Элементы.ЗатратыКП.ТекущиеДанные.АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();
		//Объект.ЗатратыКП.Сортировать("Месяц Возр, НомерСтроки Возр");	
		РассчитатьЛимитыПоСтроке(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиТипамиБюджетов()
	
	Для каждого ТекСтрока Из Объект.ЗатратыКП Цикл
		ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(ТекСтрока.ИнвПроект);
		ТекСтрока.ТипБюджета = ТекТипБюджета;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПСтатьяЗатратПриИзменении(Элемент)
	
	Если НЕ Элементы.ЗатратыКП.ТекущиеДанные = Неопределено Тогда
		
		Если ТипЗнч(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			Элементы.ЗатратыКП.ТекущиеДанные.СтатьяБДДС = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат, "СтатьяБДДС");
		Иначе
			Элементы.ЗатратыКП.ТекущиеДанные.СтатьяБДДС = "";
		КонецЕсли;	
			
		ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
		ЗапущенныйБП = ЗапретРедактированияКорректировок(ТекТипБюджета);
		
		Если ЗначениеЗаполнено(ЗапущенныйБП) И Не ЭтоБюджетныйОтдел Тогда
			Сообщить("Бизнес процесс утверждения уже запущен: " + Строка(ЗапущенныйБП));
		КонецЕсли;
		
		//Элементы.ЗатратыКП.ТекущиеДанные.ТипБюджета = ТекТипБюджета;
		//Элементы.ЗатратыКП.ТекущиеДанные.ТекущийБизнесПроцесс = ЗапретРедактированияКорректировок(ТекТипБюджета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПИнвПроектПриИзменении(Элемент)
	
	Если НЕ Элементы.ЗатратыКП.ТекущиеДанные = Неопределено Тогда
		ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
		ЗапущенныйБП = ЗапретРедактированияКорректировок(ТекТипБюджета);
		
		Если ЗначениеЗаполнено(ЗапущенныйБП) И Не ЭтоБюджетныйОтдел Тогда
			Сообщить("Бизнес процесс утверждения уже запущен: " + Строка(ЗапущенныйБП));
		КонецЕсли;
		
		//Элементы.ЗатратыКП.ТекущиеДанные.ТипБюджета = ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
		//Элементы.ЗатратыКП.ТекущиеДанные.ТекущийБизнесПроцесс = ЗапретРедактированияКорректировок(ТекТипБюджета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЛимитыПоСтроке(Команда)
	
	Если Объект.СценарийПП.Пустая() Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("РассчитатьЛимитыПоСтрокеЗавершение", ЭтотОбъект), "Для расчета лимитов, укажите Сценарий ПП!");
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.ЗатратыКП.ТекущиеДанные;
	
	Если НЕ ТекДанные = Неопределено Тогда
		СтатьяДДС = ?(ПустаяСтрока(ТекДанные.СтатьяБДДС), БюджетныйНаСервере.ВернутьРеквизит(ТекДанные.СтатьяЗатрат, "СтатьяБДДС"),  ТекДанные.СтатьяБДДС);
		Субконто2 = ТекДанные.ИнвПроект; // инвестиционный проект, либо ПР
		НаЕд = ?(ЗначениеЗаполнено(ТекДанные.Номенклатура), ТекДанные.НаЕдиницу, Ложь);
		СтруктураЛимитов = ПолучитьЛимитыНаНачало(НаЕд, ТекДанные.СтатьяЗатрат, СтатьяДДС, ТекДанные.Месяц, Объект.СценарийПП, Объект.Предприятие, ?(ПустаяСтрока(ТекДанные.ЦФО), Объект.Предприятие, ТекДанные.ЦФО), ТекДанные.Подразделение, Субконто2, ТекДанные.ТипБюджета, ТекДанные.Номенклатура);
		
		Если СтруктураЛимитов.Ошибка Тогда
			ТекДанные.ЛимитНаНачало = 0;
			ТекДанные.ЛимитНаНачалоДДС = 0;	
		Иначе
			ТекДанные.ЛимитНаНачало = СтруктураЛимитов.ЛимитСС;
			ТекДанные.ЛимитНаНачалоДДС = СтруктураЛимитов.ЛимитДДС;		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЛимитыПоСтрокеЗавершение(ДополнительныеПараметры) Экспорт
	
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЛимитыНаНачало(НаЕдиницу, СтатьяСеб, СтатьяДДС, Месяц, Сценарий, Предприятие, ЦФО, Подразделение, Субконто2, ТипБюджетаВКорректировке, Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_Бюджет.Ссылка
	|ИЗ
	|	Документ.Д_Бюджет КАК Д_Бюджет
	|ГДЕ
	|	Д_Бюджет.Сценарий = &Сценарий
	|	И Д_Бюджет.Предприятие = &Предприятие
	|	И Д_Бюджет.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураВозврата = Новый Структура;
	СуммаЗатраты = 0; 
	СуммаДДС = 0;
	
	Пока Выборка.Следующий() Цикл
		
		ЭтоКорректировкаЗатрат = Ложь;
		ЭтоКорректировкаКредитов = Ложь;
		
		Если Не СтруктураВозврата.Свойство("Ошибка") Тогда
			СтруктураВозврата.Вставить("Ошибка", Ложь);
		КонецЕсли;
		
		Если ТипБюджетаВКорректировке = Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций Тогда // корректировка инвестиций
			
			Если Предприятие.УчетПоПодразделениям Тогда
				СтруктураПоиска = Новый Структура("СтатьяБДДС, ИнвестиционныйПроект, Месяц, Подразделение", СтатьяДДС, Субконто2, Месяц, Подразделение);
			Иначе
				СтруктураПоиска = Новый Структура("СтатьяБДДС, ИнвестиционныйПроект, Месяц", СтатьяДДС, Субконто2, Месяц);
			КонецЕсли;
			
			// 24.08.2018 если если заполнена номенклатура, ищем и по ней тоже, актуально для производственных проектов {
			Если Предприятие.ПроизводственноеПредприятие И ЗначениеЗаполнено(Номенклатура) Тогда
				СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
			КонецЕсли;
			//}

			ОтобранныеСтроки = Выборка.Ссылка.Инвестиции.НайтиСтроки(СтруктураПоиска);
		ИначеЕсли ТипБюджетаВКорректировке = Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов Тогда // корректировка ПР
			
			Если Предприятие.УчетПоПодразделениям Тогда
				СтруктураПоиска = Новый Структура("СтатьяПР, Наименование, Месяц, Подразделение", СтатьяДДС, Субконто2, Месяц, Подразделение);
			Иначе
				СтруктураПоиска = Новый Структура("СтатьяПР, Наименование, Месяц", СтатьяДДС, Субконто2, Месяц);
			КонецЕсли;
			
			// 24.08.2018 если если заполнена номенклатура, ищем и по ней тоже, актуально для производственных проектов {
			Если Предприятие.ПроизводственноеПредприятие И ЗначениеЗаполнено(Номенклатура) Тогда
				СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
			КонецЕсли;
			//}

			ОтобранныеСтроки = Выборка.Ссылка.ПР.НайтиСтроки(СтруктураПоиска);
		//ИначеЕсли (СтатьяСеб = Справочники.СтатьиЗатрат.ЗатратыКредиты ИЛИ СтатьяСеб = Справочники.СтатьиЗатрат.ПроцентыПоКредитам) Тогда // корректировка кредитов
		//	ЭтоКорректировкаКредитов = Истина;
		Иначе  // корректировка затрат
			ЭтоКорректировкаЗатрат = Истина;
			
			Если Предприятие.УчетПоПодразделениям Тогда
				СтруктураПоиска = Новый Структура("СтатьяЗатрат, Месяц, Подразделение", СтатьяСеб, Месяц, Подразделение);
			Иначе
				СтруктураПоиска = Новый Структура("СтатьяЗатрат, Месяц", СтатьяСеб, Месяц);
			КонецЕсли;
			
			// 24.08.2018 если если заполнена номенклатура, ищем и по ней тоже, актуально для производственных проектов {
			Если Предприятие.ПроизводственноеПредприятие И ЗначениеЗаполнено(Номенклатура) Тогда
				СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
			КонецЕсли;
			//}
			
			ОтобранныеСтроки = Выборка.Ссылка.Затраты.НайтиСтроки(СтруктураПоиска);
			ТаблицаОперативныхБюджетов = РасчетыБюджет.ПолучитьДанныеИзОперативныхБюджетов(Сценарий, Предприятие, Выборка.Ссылка, Ложь, Истина);
			ОтобранныеСтрокиОБ = ТаблицаОперативныхБюджетов.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаОБ Из ОтобранныеСтрокиОБ Цикл
				ОтобранныеСтроки.Добавить(СтрокаОб)
			КонецЦикла;
			
		КонецЕсли;
		
		Если Не ЭтоКорректировкаКредитов Тогда
			
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				
				ТекСуммаСеб = ?(ЭтоКорректировкаЗатрат, ТекСтрока.СуммаСеб, ТекСтрока.СуммаФР);
				ТекНаЕдиницу = ?(ЭтоКорректировкаЗатрат, ТекСтрока.НаЕдиницу, Ложь);
				
				// на единицу
				СтруктураПоискаОбъема = Новый Структура("Номенклатура, Месяц", Номенклатура, ТекСтрока.Месяц);
				СтрОбъем = Выборка.Ссылка.ОбъемПроизводства.НайтиСтроки(СтруктураПоискаОбъема);
				
				Если НаЕдиницу Тогда
					
					Если ТекНаЕдиницу ИЛИ СтрОбъем.Количество() = 0 ИЛИ (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ) = 0 Тогда
						СуммаЗатраты = СуммаЗатраты + ТекСуммаСеб;
					Иначе
						СуммаЗатраты = СуммаЗатраты + ТекСуммаСеб /  (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ);			
					КонецЕсли;
					
				Иначе
					
					Если ТекНаЕдиницу И СтрОбъем.Количество() И (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ) <> 0 Тогда
						СуммаЗатраты = СуммаЗатраты + (СтрОбъем[0].Объем + СтрОбъем[0].ОбъемЦВ) * ТекСуммаСеб;
					Иначе
						СуммаЗатраты = СуммаЗатраты + ТекСуммаСеб;			
					КонецЕсли;
					
				КонецЕсли;
				//
				СуммаДДС = СуммаДДС + ТекСтрока.СуммаБДДС;
				
			КонецЦикла;
			
		Иначе
			
			Если СтатьяСеб = Справочники.СтатьиЗатрат.ЗатратыКредиты Тогда
				СтруктураПоиска = Новый Структура("Месяц", Месяц);
				ОтобранныеСтроки = Выборка.Ссылка.Кредиты.НайтиСтроки(СтруктураПоиска);
				
				Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
					СуммаЗатраты = СуммаЗатраты + ТекСтрока.ЗатратыПоОформлению;
					СуммаДДС = СуммаДДС + ТекСтрока.ЗатратыПоОформлению;
				КонецЦикла;
				
			КонецЕсли;
			
			Если СтатьяСеб = Справочники.СтатьиЗатрат.ПроцентыПоКредитам Тогда
				СтруктураПоиска = Новый Структура("Месяц", Месяц);
				ОтобранныеСтроки = Выборка.Ссылка.Кредиты.НайтиСтроки(СтруктураПоиска);
				
				Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
					СуммаЗатраты = СуммаЗатраты + ТекСтрока.ПроцНачислено;
					СуммаДДС = СуммаДДС + ТекСтрока.ПроцОплачено;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Выборка.Количество() Тогда
		
		Если Не СтруктураВозврата.Свойство("Ошибка") Тогда	
			СтруктураВозврата.Вставить("Ошибка", Истина);
		Иначе
			СтруктураВозврата.Ошибка = Истина;
		КонецЕсли;
		
	Иначе
		СтруктураВозврата.Вставить("ЛимитСС", СуммаЗатраты);
		СтруктураВозврата.Вставить("ЛимитДДС", СуммаДДС);
	КонецЕсли;		
	
	Возврат СтруктураВозврата;	
	
КонецФункции // ()

#КонецОбласти

/////////////////////////////////////////////////отчеты//////////////////////////////////////////////
&НаКлиенте
Процедура ОбновитьСебестоимость()
	РечатьСебестоимостьСервер(ОтчетСебестоимость);
	ОтчетСебестоимость.ОтображатьСетку = Ложь;
	ОтчетСебестоимость.Защита = Ложь;
	ОтчетСебестоимость.ТолькоПросмотр = Истина;
	ОтчетСебестоимость.ОтображатьЗаголовки = Истина;
	ОтчетСебестоимость.ОтображатьГруппировки = Истина;
	ОтчетСебестоимость.АвтоМасштаб = Истина;
	
	
	РассчитатьСырье(ОтчетСырье);
	ОтчетСырье.ОтображатьСетку = Ложь;
	ОтчетСырье.Защита = Ложь;
	ОтчетСырье.ТолькоПросмотр = Истина;
	ОтчетСырье.ОтображатьЗаголовки = Истина;
	ОтчетСырье.ОтображатьГруппировки = Истина;
	ОтчетСырье.АвтоМасштаб = Истина;
	
	РассчитатьИнвестиции(ОтчетИнвестиции);
	ОтчетСырье.ОтображатьСетку = Ложь;
	ОтчетСырье.Защита = Ложь;
	ОтчетСырье.ТолькоПросмотр = Истина;
	ОтчетСырье.ОтображатьЗаголовки = Истина;
	ОтчетСырье.ОтображатьГруппировки = Истина;
	ОтчетСырье.АвтоМасштаб = Истина;
	
	РасчитатьПродажи(ОтчетБюджетПродаж);
	ОтчетСырье.ОтображатьСетку = Ложь;
	ОтчетСырье.Защита = Ложь;
	ОтчетСырье.ТолькоПросмотр = Истина;
	ОтчетСырье.ОтображатьЗаголовки = Истина;
	ОтчетСырье.ОтображатьГруппировки = Истина;
	ОтчетСырье.АвтоМасштаб = Истина;
	
	ПечатьКорректировки(ОтчетКорректировки);
	ОтчетСырье.ОтображатьСетку = Ложь;
	ОтчетСырье.Защита = Ложь;
	ОтчетСырье.ТолькоПросмотр = Истина;
	ОтчетСырье.ОтображатьЗаголовки = Истина;
	ОтчетСырье.ОтображатьГруппировки = Истина;
	ОтчетСырье.АвтоМасштаб = Истина;
	
	// di 15.03.13
	ПечатьКорректировкиИнвестиций(ОтчетКорректировки);
	ОтчетСырье.ОтображатьСетку = Ложь;
	ОтчетСырье.Защита = Ложь;
	ОтчетСырье.ТолькоПросмотр = Истина;
	ОтчетСырье.ОтображатьЗаголовки = Истина;
	ОтчетСырье.ОтображатьГруппировки = Истина;
	ОтчетСырье.АвтоМасштаб = Истина;
	
КонецПроцедуры

&НаСервере
Процедура РечатьСебестоимостьСервер2(ТабДок) Экспорт
	
	НачДата = НачалоМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаНачала") + 60 * 60 * 24);;
	ИсходныеДанные = Новый Структура;
	ИсходныеДанные.Вставить("Интервал", Перечисления.Д_Интервал.Помесячно);
	ИсходныеДанные.Вставить("ДатаНачала", НачДата);
	ИсходныеДанные.Вставить("ДатаОкончания", КонецМесяца(БюджетныйНаСервере.ВернутьРеквизит(Объект.Сценарий, "ДатаКонца")));
	ИсходныеДанные.Вставить("Предприятие", Объект.Предприятие);
	ИсходныеДанные.Вставить("Прочие", Истина);
	ИсходныеДанные.Вставить("Сценарий2", "");
	ИсходныеДанные.Вставить("Сценарий1", Объект.Сценарий);
	
	//определяем таблицу значений, в которую будем вносить все значения
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Шрифт"); //1) 1-обычный, 2 - жирный, 3 - курсив
	
	ТЗ.Колонки.Добавить("Порядок");//2) для структурирования дальнейшего вывода
	ТЗ.Колонки.Добавить("Признак");//3) для уникальности строки
	//порядок и признак выступают уникальным идентификтором строки
	
	ТЗ.Колонки.Добавить("Предприятие");//4) для обозначения разных предприятий
	
	ТЗ.Колонки.Добавить("Значение");//5)
	ТЗ.Колонки.Добавить("Резерв1");
	ТЗ.Колонки.Добавить("Резерв2");
	ТЗ.Колонки.Добавить("Резерв3");
	ТЗ.Колонки.Добавить("Резерв4");
	ТЗ.Колонки.Добавить("Резерв5");
	НаборИмен = ""; ИндексКолонки = 10;
	Для Кол = 1 По 100 Цикл // добавляем заранее все колонки в ТЗ с индекса 9
		ИмяКол = "Колонка" + строка(Кол);
		НаборИмен = НаборИмен + ИмяКол + ",";
		ТЗ.Колонки.Добавить(ИмяКол);
	КонецЦикла; 
	
	Макет = Отчеты.Д_Себестоимость.ПолучитьМакет("Макет");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка|СтолбецНачало");
	ОбластьШапкаСтолбцы = Макет.ПолучитьОбласть("Шапка|ДанныеСтолбца");
	ОбластьОбъем = Макет.ПолучитьОбласть("ШапкаОбъем|СтолбецНачало");
	ОбластьКрасота = Макет.ПолучитьОбласть("Строка5|СтолбецНачало");
	ОбластьКрасотаСтолбцы = Макет.ПолучитьОбласть("Строка5|ДанныеСтолбца");
	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	
	Интервал = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, 1, 
	?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, 3, 12));
	
	КлючПериод = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, "Месяц", ?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, "Квартал", "Год"));
	
	НачалоПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаНачала),?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаНачала)), Год(ИсходныеДанные.ДатаНачала)));
	
	КонецПериода = ?(ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Помесячно, Месяц(ИсходныеДанные.ДатаОкончания),?(
	ИсходныеДанные.Интервал = Перечисления.Д_Интервал.Поквартально, ОпределитьКвартал(Месяц(ИсходныеДанные.ДатаОкончания)), Год(ИсходныеДанные.ДатаОкончания)));
	
	
	ВсегоПериодов = КонецПериода - НачалоПериода + 1;
	
	СписокПредприятий = ИсходныеДанные.Предприятие;
	
	//Для каждого Т Из ИсходныеДанные.Предприятие Цикл
	//	Если Т.Пометка Тогда
	//		СписокПредприятий.Добавить(Т.Значение);
	//	КонецЕсли; 
	//КонецЦикла;
	
	
	//Предпр = Т.Значение;
	ДатаНач = ИсходныеДанные.ДатаНачала;
	ДатаКон = ИсходныеДанные.ДатаОкончания;
	СчетчикМесяцев = 0;
	КоэффициентОтступа = 0;
	
	МассивОснЗатрат = Новый Массив;
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.ЗатратыОсн);
	МассивОснЗатрат.Добавить(Справочники.СтатьиЗатрат.ЗатратыВсп);
	
	
	
	ПереньНоменклатур = Новый Массив; //массив с неповторяющейся номенклатурой
	СчетчикНоменклатур = 0;
	
	КЧ = Новый КвалификаторыЧисла(19,4);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	
	//формируем таблицу объемов
	ВыборкаОбъемы = Новый ТаблицаЗначений;
	ВыборкаОбъемы.Колонки.Добавить("Номенклатура");
	ВыборкаОбъемы.Колонки.Добавить("Объем1", ОписаниеТиповЧ);
	ВыборкаОбъемы.Колонки.Добавить("Объем2", ОписаниеТиповЧ);
	ВыборкаОбъемы.Колонки.Добавить("Период");
	Для каждого ТекСтрока Из Объект.ОбъемПроизводства Цикл
		ТекДата = ДобавитьМесяц(НачДата, ТекСтрока.Месяц - Месяц(НачДата));
		НоваяСтрока = ВыборкаОбъемы.Добавить();
		НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
		НоваяСтрока.Объем1 = ТекСтрока.Объем + ТекСтрока.ОбъемЦВ;
		НоваяСтрока.Период = ТекСтрока.Месяц;
		Если ПереньНоменклатур.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			ПереньНоменклатур.Добавить(ТекСтрока.Номенклатура);
			СчетчикНоменклатур = СчетчикНоменклатур + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	//формируем таблицу основного сырья
	ВыборкаСырье = Новый ТаблицаЗначений;
	ВыборкаСырье.Колонки.Добавить("Материал");
	ВыборкаСырье.Колонки.Добавить("Номенклатура");
	ВыборкаСырье.Колонки.Добавить("МатериалФерменты");
	ВыборкаСырье.Колонки.Добавить("Сумма1", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("Сумма2", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("Количество1", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("Количество2", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("Цена1", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("Цена2", ОписаниеТиповЧ);
	ВыборкаСырье.Колонки.Добавить("СтатьяЗатрат");
	ВыборкаСырье.Колонки.Добавить("Период");
	ОснСырьеСтатья = Справочники.СтатьиЗатрат.ЗатратыОсн;
	
	//таблица затрат в переработку
	ВыборкаПереработка = Новый ТаблицаЗначений;
	ВыборкаПереработка.Колонки.Добавить("Номенклатура");
	ВыборкаПереработка.Колонки.Добавить("Период");
	ВыборкаПереработка.Колонки.Добавить("ПризнакСтатьи");
	ВыборкаПереработка.Колонки.Добавить("ЭтоГруппа", ОписаниеТиповЧ);
	ВыборкаПереработка.Колонки.Добавить("Статья");
	ВыборкаПереработка.Колонки.Добавить("Код");
	ВыборкаПереработка.Колонки.Добавить("Сумма1", ОписаниеТиповЧ);
	ВыборкаПереработка.Колонки.Добавить("Сумма2", ОписаниеТиповЧ);
	
	Для каждого ТекСтрока Из Объект.ДвижениеСырья Цикл
		ТекДата = ДобавитьМесяц(НачДата, ТекСтрока.Месяц - Месяц(НачДата));
		НоваяСтрока = ВыборкаСырье.Добавить();
		НоваяСтрока.Материал = ТекСтрока.Сырье;
		НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
		НоваяСтрока.Сумма1 = ТекСтрока.КоличествоРасход * ТекСтрока.ЦенаРасход;
		НоваяСтрока.Количество1 = ТекСтрока.КоличествоРасход ;
		НоваяСтрока.Цена1 = ТекСтрока.ЦенаРасход;
		НоваяСтрока.СтатьяЗатрат = ОснСырьеСтатья;
		НоваяСтрока.Период = ТекСтрока.Месяц;
		
		НоваяСтрока = ВыборкаПереработка.Добавить();
		НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
		НоваяСтрока.Сумма1 = ТекСтрока.КоличествоРасход * ТекСтрока.ЦенаРасход;
		НоваяСтрока.Статья = ОснСырьеСтатья;
		НоваяСтрока.Код = ОснСырьеСтатья.Код;
		НоваяСтрока.Период = ТекСтрока.Месяц;
		
		
	КонецЦикла;
	
	Для каждого ТекСтрока Из Объект.БюджетСебестоимости Цикл
		Если ТекСтрока.СуммаСеб Тогда
			ТекДата = ДобавитьМесяц(НачДата, ТекСтрока.Месяц - Месяц(НачДата));
			
			Если ПустаяСтрока(ТекСтрока.Номенклатура) Тогда
				ОтборНоменклатур = Объект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
				Для каждого ТекСтрокаНом Из ОтборНоменклатур Цикл
					Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат.Родитель) Тогда
						НоваяСтрока = ВыборкаПереработка.Добавить();
						НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
						НоваяСтрока.Сумма1 = ТекСтрока.СуммаСеб * ТекСтрокаНом.ПроцентЗатрат / 100;
						НоваяСтрока.Статья = ТекСтрока.СтатьяЗатрат.Родитель;
						НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
						НоваяСтрока.Период = ТекСтрока.Месяц;
						НоваяСтрока.ЭтоГруппа = Истина;
					КонецЕсли;
					
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.СуммаСеб * ТекСтрокаНом.ПроцентЗатрат / 100;
					НоваяСтрока.Статья = ТекСтрока.СтатьяЗатрат;
					НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
				КонецЦикла; 
			Иначе	
				Если НЕ ПустаяСтрока(ТекСтрока.СтатьяЗатрат.Родитель) Тогда
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.СуммаСеб;
					НоваяСтрока.Статья = ТекСтрока.СтатьяЗатрат.Родитель;
					НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Родитель.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
					НоваяСтрока.ЭтоГруппа = Истина;
				КонецЕсли;
				
				НоваяСтрока = ВыборкаПереработка.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Сумма1 = ТекСтрока.СуммаСеб;
				НоваяСтрока.Статья = ТекСтрока.СтатьяЗатрат;
				НоваяСтрока.Код = ТекСтрока.СтатьяЗатрат.Код;
				НоваяСтрока.Период = ТекСтрока.Месяц;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ТекСтрока Из Объект.ПР Цикл
		Если ТекСтрока.СуммаФР Тогда
			
			
			
			Если ПустаяСтрока(ТекСтрока.Номенклатура) Тогда
				ОтборНоменклатур = Объект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
				Для каждого ТекСтрокаНом Из ОтборНоменклатур Цикл
					Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ПрСвыше.Родитель) Тогда
						НоваяСтрока = ВыборкаПереработка.Добавить();
						НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
						НоваяСтрока.Сумма1 = ТекСтрока.СуммаФР * ТекСтрокаНом.ПроцентЗатрат / 100;
						НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПрСвыше.Родитель;
						НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Родитель.Код;
						НоваяСтрока.Период = ТекСтрока.Месяц;
						НоваяСтрока.ЭтоГруппа = Истина;
					КонецЕсли;
					
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.СуммаФР * ТекСтрокаНом.ПроцентЗатрат / 100;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПрСвыше;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
				КонецЦикла; 
			Иначе	
				Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ПрСвыше.Родитель) Тогда
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.СуммаФР;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПрСвыше.Родитель;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Родитель.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
					НоваяСтрока.ЭтоГруппа = Истина;
				КонецЕсли;
				
				НоваяСтрока = ВыборкаПереработка.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Сумма1 = ТекСтрока.СуммаФР;
				НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПрСвыше;
				НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПрСвыше.Код;
				НоваяСтрока.Период = ТекСтрока.Месяц;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ТекСтрока Из Объект.Кредиты Цикл
		Если ТекСтрока.ПроцНачислено Тогда
			
			Если ПустаяСтрока(ТекСтрока.Номенклатура) Тогда
				ОтборНоменклатур = Объект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
				Для каждого ТекСтрокаНом Из ОтборНоменклатур Цикл
					Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель) Тогда
						НоваяСтрока = ВыборкаПереработка.Добавить();
						НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
						НоваяСтрока.Сумма1 = ТекСтрока.ПроцНачислено * ТекСтрокаНом.ПроцентЗатрат / 100;
						НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель;
						НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель.Код;
						НоваяСтрока.Период = ТекСтрока.Месяц;
						НоваяСтрока.ЭтоГруппа = Истина;
					КонецЕсли;
					
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.ПроцНачислено * ТекСтрокаНом.ПроцентЗатрат / 100;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПроцентыПоКредитам;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
				КонецЦикла; 
			Иначе	
				Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель) Тогда
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.ПроцНачислено;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Родитель.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
					НоваяСтрока.ЭтоГруппа = Истина;
				КонецЕсли;
				
				НоваяСтрока = ВыборкаПереработка.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Сумма1 = ТекСтрока.ПроцНачислено;
				НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ПроцентыПоКредитам;
				НоваяСтрока.Код = Справочники.СтатьиЗатрат.ПроцентыПоКредитам.Код;
				НоваяСтрока.Период = ТекСтрока.Месяц;
			КонецЕсли;
			
		КонецЕсли; 
		
		Если ТекСтрока.ЗатратыПоОформлению Тогда
			
			Если ПустаяСтрока(ТекСтрока.Номенклатура) Тогда
				ОтборНоменклатур = Объект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, НЕРаспределять", ТекСтрока.Месяц, Ложь));
				Для каждого ТекСтрокаНом Из ОтборНоменклатур Цикл
					Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель) Тогда
						НоваяСтрока = ВыборкаПереработка.Добавить();
						НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
						НоваяСтрока.Сумма1 = ТекСтрока.ЗатратыПоОформлению * ТекСтрокаНом.ПроцентЗатрат / 100;
						НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель;
						НоваяСтрока.Код = Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель.Код;
						НоваяСтрока.Период = ТекСтрока.Месяц;
						НоваяСтрока.ЭтоГруппа = Истина;
					КонецЕсли;
					
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрокаНом.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.ЗатратыПоОформлению * ТекСтрокаНом.ПроцентЗатрат / 100;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыКредиты;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ЗатратыКредиты.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
				КонецЦикла; 
			Иначе	
				Если НЕ ПустаяСтрока(Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель) Тогда
					НоваяСтрока = ВыборкаПереработка.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
					НоваяСтрока.Сумма1 = ТекСтрока.ЗатратыПоОформлению;
					НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель;
					НоваяСтрока.Код = Справочники.СтатьиЗатрат.ЗатратыКредиты.Родитель.Код;
					НоваяСтрока.Период = ТекСтрока.Месяц;
					НоваяСтрока.ЭтоГруппа = Истина;
				КонецЕсли;
				
				НоваяСтрока = ВыборкаПереработка.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Сумма1 = ТекСтрока.ЗатратыПоОформлению;
				НоваяСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыКредиты;
				НоваяСтрока.Код = Справочники.СтатьиЗатрат.ЗатратыКредиты.Код;
				НоваяСтрока.Период = ТекСтрока.Месяц;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	ВыборкаПереработка.Сортировать("Код Возр");
	ВыборкаПереработка.Свернуть("Номенклатура, Период, ПризнакСтатьи, ЭтоГруппа, Статья, Код", "Сумма1, Сумма2");
	
	
	Для каждого Номенклатура Из ПереньНоменклатур Цикл
		Вторичка = ?(ПустаяСтрока(Номенклатура), Истина, Номенклатура.ВторичнаяПереработка);
		
		Объем1 = Новый Массив(60);
		Объем2 = Новый Массив(60);
		ОстатокЦена1 = Новый Массив(60);
		ОстатокЦена2 = Новый Массив(60);
		ОстатокКол1 = Новый Массив(60);
		ОстатокКол2 = Новый Массив(60);
		
		Для т = 0 По 49 Цикл
			Объем1[т] = 0;
			Объем2[т] = 0;
			ОстатокЦена1[т] = 0;
			ОстатокЦена2[т] = 0;
			ОстатокКол1[т] = 0;
			ОстатокКол2[т] = 0;
		КонецЦикла;
		
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока[0] = 3;
		НоваяСтрока[1] = 0;
		НоваяСтрока[2] = Строка(Номенклатура) + строка("Остаток на начало");
		НоваяСтрока[3] = Объект.Предприятие;
		НоваяСтрока[4] = "Остаток на начало " + Строка(Номенклатура) + ":";
		НоваяСтрока[5] = Номенклатура;
		НоваяСтрока[6] = Вторичка;
		
		
		//вывод объемов производства;
		СтруктураВыбораОбъемы = Новый Структура("Номенклатура", Номенклатура);
		ОтобранныеСтроки = ВыборкаОбъемы.НайтиСтроки(СтруктураВыбораОбъемы);
		Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
			СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 1;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + строка("Объем производства");
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = "Объем производства " + Строка(Номенклатура) + ?(Вторичка, " (Вторичка)", "");
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрока.Объем1;
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрока.Объем2;
			
			Объем1[СчетчикМесяцев] = ТекСтрока.Объем1;
			Объем2[СчетчикМесяцев] = ТекСтрока.Объем2;
		КонецЦикла;
		
		
		
		
		//очищаем массив и присваиваем числовой тип
		Сырье1 = Новый Массив(50);
		Сырье2 = Новый Массив(50);
		Переработка1 = Новый Массив(50);
		Переработка2 = Новый Массив(50);
		Итого1 = Новый Массив(50);
		Итого2 = Новый Массив(50);
		Для т = 0 По 49 Цикл
			Сырье1[т] = 0;
			Сырье2[т] = 0;
			Переработка1[т] = 0;
			Переработка2[т] = 0;
			Итого1[т] = 0;
			Итого2[т] = 0;
		КонецЦикла;
		//Номенклатура2.Добавить(ВыборкаОбъемы.Номенклатура);
		
		СтруктураПоиска = Новый Структура("Номенклатура", Номенклатура);
		ОтобранныеСтроки = ВыборкаПереработка.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого ТекСтрока ИЗ ОтобранныеСтроки Цикл
			
			СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			//расшифровка по основному сырью
			Прочие = Ложь;
			Если ТекСтрока.ПризнакСтатьи = "ПрочиеЗатраты" Тогда
				Прочие = Истина;				
			КонецЕсли;
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = ?(ТекСтрока.ЭтоГруппа, 0, ?(Прочие, 1, 6));
			
			Если НЕ ТекСтрока.ЭтоГруппа Тогда
				Если ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыОсн ИЛИ
					ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
					Сырье1[СчетчикМесяцев] = Сырье1[СчетчикМесяцев] + ТекСтрока.Сумма1;
					Сырье2[СчетчикМесяцев] = Сырье2[СчетчикМесяцев] + ТекСтрока.Сумма2;
					НоваяСтрока[0] = 0;
				иначе
					Переработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + ТекСтрока.Сумма1; 
					Переработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + ТекСтрока.Сумма2;									
				КонецЕсли;
			КонецЕсли;
			
			
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + строка(ТекСтрока.Статья);
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = ТекСтрока.Статья;
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ТекСтрока.Сумма1 / Объем1[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрока.Сумма1;
			НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ТекСтрока.Сумма2 / Объем2[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрока.Сумма2;
			
			//расшифровка по основному сырью
			Всп = Ложь;
			Если ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
				Всп = Истина;				
			КонецЕсли;
			
			Если ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыОсн ИЛИ Всп ИЛИ Прочие Тогда
				
				СтруктураПоискаСтатьи = Новый Структура("Номенклатура, Период, СтатьяЗатрат", Номенклатура, ТекСтрока.Период, ТекСтрока.Статья);	
				ОтборСырье = ВыборкаСырье.НайтиСтроки(СтруктураПоискаСтатьи);
				Для Каждого ТекСтрокаСырье ИЗ ОтборСырье Цикл
					
					Если Всп Тогда
						НоваяСтрока = ТЗ.Добавить();
						НоваяСтрока[0] = 8;
						НоваяСтрока[1] = 0;
						НоваяСтрока[2] = Строка(Номенклатура) + строка(ТекСтрокаСырье.МатериалФерменты);
						НоваяСтрока[3] = Объект.Предприятие;
						НоваяСтрока[4] = ТекСтрокаСырье.МатериалФерменты;
						НоваяСтрока[5] = Номенклатура;
						НоваяСтрока[6] = Вторичка;
						НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ТекСтрокаСырье.Сумма1 / Объем1[СчетчикМесяцев], 0);
						НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрокаСырье.Сумма1;
						НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ТекСтрокаСырье.Сумма2 / Объем2[СчетчикМесяцев], 0);
						НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрокаСырье.Сумма2;							
					КонецЕсли;
					
					
					
					НоваяСтрока = ТЗ.Добавить();
					НоваяСтрока[0] = ?(Всп, 9, 1);
					НоваяСтрока[1] = 2;
					НоваяСтрока[2] = Строка(Номенклатура) + строка(ТекСтрокаСырье.Материал);
					НоваяСтрока[3] = Объект.Предприятие;
					
					//Если ПустаяСтрока(ИсходныеДанные.Сценарий2) И ВсегоПериодов = 1 Тогда //выводим кол*цена в строчках
					//	Если ВыборкаСырье.Количество1 Тогда
					//		НоваяСтрока[4] = Строка(ТекСтрокаСырье.Материал) + " (К.- " + Строка(Формат(ТекСтрокаСырье.Количество1, "ЧДЦ=2")) 
					//		+ "; Ц.- " + Строка(Формат(ТекСтрокаСырье.Цена1, "ЧДЦ=2")) + ")";
					//	Иначе
					//		НоваяСтрока[4] = Строка(ТекСтрокаСырье.Материал);							
					//	КонецЕсли;
					//	НоваяСтрока[5] = Номенклатура;
					//	НоваяСтрока[6] = Вторичка;
					//	НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ТекСтрокаСырье.Сумма1 / Объем1[СчетчикМесяцев], 0);
					//	НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрокаСырье.Сумма1;
					//	НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ТекСтрокаСырье.Сумма2 / Объем2[СчетчикМесяцев], 0);
					//	НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрокаСырье.Сумма2;
					//Иначе
					НоваяСтрока[4] = Строка(ТекСтрокаСырье.Материал) + " (количество*цена)";
					НоваяСтрока[5] = Номенклатура;
					НоваяСтрока[6] = Вторичка;
					НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ТекСтрокаСырье.Количество1;
					НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ?(ТекСтрокаСырье.Количество1, ТекСтрокаСырье.Цена1, ТекСтрокаСырье.Сумма1);
					НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ТекСтрокаСырье.Количество2;
					НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ?(ТекСтрокаСырье.Количество2, ТекСтрокаСырье.Цена2, ТекСтрокаСырье.Сумма2);						
					
					
					//КонецЕсли;
					
					
				КонецЦикла;
				
				
			КонецЕсли;
			
		КонецЦикла;
		
		//выводим Итоги
		СтруктураВыбораОбъемы = Новый Структура("Номенклатура", Номенклатура);
		ОтобранныеСтроки = ВыборкаОбъемы.НайтиСтроки(СтруктураВыбораОбъемы);
		Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 7;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + "ИТОГО:";
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = "ИТОГО:";
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев];
			НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев];
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 7;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + "  переработка";
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = "  переработка";
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Переработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Переработка1[СчетчикМесяцев];
			НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Переработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Переработка2[СчетчикМесяцев];
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 7;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + "  затраты на сырье";
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = "  затраты на сырье";
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] =Сырье1[СчетчикМесяцев];
			НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
			НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] =  Сырье2[СчетчикМесяцев];
			
			
			
		КонецЦикла;
		
		
		//считаем прочиеЗатраты
		Если ИсходныеДанные.Прочие Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, ПризнакСтатьи", Номенклатура, "ПрочиеЗатраты");
			ОтобранныеСтроки = ВыборкаПереработка.НайтиСтроки(СтруктураПоиска);
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				
				СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 1 - ТекСтрока.ЭтоГруппа;
				
				Если НЕ ТекСтрока.ЭтоГруппа Тогда
					Если ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыОсн ИЛИ
						ТекСтрока.Статья = Справочники.СтатьиЗатрат.ЗатратыВсп Тогда
						Сырье1[СчетчикМесяцев] = Сырье1[СчетчикМесяцев] + ТекСтрока.Сумма1;
						Сырье2[СчетчикМесяцев] = Сырье2[СчетчикМесяцев] + ТекСтрока.Сумма2;
						НоваяСтрока[0] = 0;
					иначе
						Переработка1[СчетчикМесяцев] = Переработка1[СчетчикМесяцев] + ТекСтрока.Сумма1; 
						Переработка2[СчетчикМесяцев] = Переработка2[СчетчикМесяцев] + ТекСтрока.Сумма2;									
					КонецЕсли;
				КонецЕсли;
				
				
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + строка(ТекСтрока.Статья);
				НоваяСтрока[3] = Объект.Предприятие;
				НоваяСтрока[4] = ТекСтрока.Статья;
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], ТекСтрока.Сумма1 / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = ТекСтрока.Сумма1;
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], ТекСтрока.Сумма2 / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = ТекСтрока.Сумма2;
				
				
			КонецЦикла;
			
			//выводим Итоги ПОЛНЫЕ
			СтруктураВыбораОбъемы = Новый Структура("Номенклатура", Номенклатура);
			ОтобранныеСтроки = ВыборкаОбъемы.НайтиСтроки(СтруктураВыбораОбъемы);
			Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
				
				СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
				КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
				
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = 7;
				НоваяСтрока[1] = 0;
				НоваяСтрока[2] = Строка(Номенклатура) + "ИТОГО ПОЛНАЯ СЕБЕСТОИМОСТЬ:";
				НоваяСтрока[3] = Объект.Предприятие;
				НоваяСтрока[4] = "ИТОГО ПОЛНАЯ СЕБЕСТОИМОСТЬ:";
				НоваяСтрока[5] = Номенклатура;
				НоваяСтрока[6] = Вторичка;
				НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(Объем1[СчетчикМесяцев], (Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев]) / Объем1[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев];
				НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(Объем2[СчетчикМесяцев], (Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев]) / Объем2[СчетчикМесяцев], 0);
				НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев];
				
				
				
			КонецЦикла;
		Конецесли;
		
		//выводим Итоги
		СтруктураВыбораОбъемы = Новый Структура("Номенклатура", Номенклатура);
		ОтобранныеСтроки = ВыборкаОбъемы.НайтиСтроки(СтруктураВыбораОбъемы);
		Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
			
			СчетчикМесяцев = ТекСтрока.Период - НачалоПериода + 1;
			КоэффициентОтступа = ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 0, СчетчикМесяцев * 2 - 2);
			
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока[0] = 4;
			НоваяСтрока[1] = 0;
			НоваяСтрока[2] = Строка(Номенклатура) + " Средняя себестоимость:";
			НоваяСтрока[3] = Объект.Предприятие;
			НоваяСтрока[4] = "Средняя себестоимость:";
			НоваяСтрока[5] = Номенклатура;
			НоваяСтрока[6] = Вторичка;
			НоваяСтрока[СчетчикМесяцев * 2 + 8 + КоэффициентОтступа] = ?(ОстатокКол1[СчетчикМесяцев] + Объем1[СчетчикМесяцев], (ОстатокКол1[СчетчикМесяцев] * ОстатокЦена1[СчетчикМесяцев] + Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев]) / (ОстатокКол1[СчетчикМесяцев] + Объем1[СчетчикМесяцев]), 0);
			//НоваяСтрока[СчетчикМесяцев * 2 + 9 + КоэффициентОтступа] = (ОстатокКол1[СчетчикМесяцев] * ОстатокЦена1[СчетчикМесяцев] + Сырье1[СчетчикМесяцев] + Переработка1[СчетчикМесяцев]);
			НоваяСтрока[СчетчикМесяцев * 2+ 10 + КоэффициентОтступа] = ?(ОстатокКол2[СчетчикМесяцев] + Объем2[СчетчикМесяцев], (ОстатокКол2[СчетчикМесяцев] * ОстатокЦена2[СчетчикМесяцев] + Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев]) / (ОстатокКол2[СчетчикМесяцев] + Объем2[СчетчикМесяцев]), 0);
			//НоваяСтрока[СчетчикМесяцев * 2+ 11 + КоэффициентОтступа] = (ОстатокКол2[СчетчикМесяцев] * ОстатокЦена2[СчетчикМесяцев] + Сырье2[СчетчикМесяцев] + Переработка2[СчетчикМесяцев]);;
		Конеццикла;
		
	КонецЦикла;
	
	
	
	Простой = 0;
	//выводим всего по предприятию
	Если СчетчикНоменклатур + Простой > 1  Тогда
		//ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение", НаборИмен);
		Т32 = ТЗ.Скопировать();
		Т32.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение, Резерв1, Резерв2, Резерв3, Резерв4, Резерв5", НаборИмен);;
		//считаем итого объем
		ОбъемВсего = Новый Массив(1000);
		ОстаткиВсего = Новый Массив(1000);
		СуммаОстаткиВсего = Новый Массив(1000);
		Для Строчка = 0 По Т32.Количество()-1 Цикл
			Если Т32[Строчка][6] Тогда
				Продолжить;				
			КонецЕсли;
			Если Т32[Строчка][3] = Объект.Предприятие И НЕ Т32[Строчка][1] Тогда
				Если Лев(Т32[Строчка][4], 18) = "Объем производства" Тогда
					Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
						ОбъемВсего[Колонка] =  ?(ОбъемВсего[Колонка] = Неопределено, 0, ОбъемВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
					конеццикла;
				конецесли;
				
				Если Лев(Т32[Строчка][4], 17) = "Остаток на начало" Тогда
					Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
						СуммаОстаткиВсего[Колонка] =  ?(СуммаОстаткиВсего[Колонка] = Неопределено, 0, СуммаОстаткиВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
					конеццикла;
				конецесли;
				
				Если Лев(Т32[Строчка][4], 10) = "Количество" Тогда
					Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
						ОстаткиВсего[Колонка] =  ?(ОстаткиВсего[Колонка] = Неопределено, 0, ОстаткиВсего[Колонка]) + ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]);
					конеццикла;
				конецесли;
				
			КонецЕсли; 
		конеццикла;
		
		Для Строчка = 0 По Т32.Количество()-1 Цикл
			Если Т32[Строчка][6] Тогда
				Продолжить;				
			КонецЕсли;
			
			Если Т32[Строчка][3] = Объект.Предприятие И НЕ Т32[Строчка][1] Тогда
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока[0] = Т32[Строчка][0];
				НоваяСтрока[1] = Т32[Строчка][1];
				НоваяСтрока[2] = "всего-всего  переработка";
				НоваяСтрока[3] = Т32[Строчка][3];
				
				СуммаЕд = Истина;
				
				Если Лев(Т32[Строчка][4], 18) = "Объем производства" Тогда
					НоваяСтрока[4] = "Объем производства (ВСЕГО)";
				иначеЕсли Лев(Т32[Строчка][4], 17) = "Остаток на начало" Тогда
					НоваяСтрока[4] = "Остаток на начало (ВСЕГО)";
					СуммаЕд = Ложь;
				Иначе
					НоваяСтрока[4] = Т32[Строчка][4];
				конецесли;
				
				Если Лев(Т32[Строчка][4], 10) = "Количество" ИЛИ Лев(Т32[Строчка][4], 4) = "Цена" Тогда
					СуммаЕд = Ложь;
				КонецЕсли;
				
				Для Колонка = 7 По 10 + ВсегоПериодов * 2 * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
					НоваяСтрока[Колонка - 1] = ?(ОбъемВсего[Колонка], ?(Т32[Строчка][Колонка] = Неопределено, 0, Т32[Строчка][Колонка]) / ОбъемВсего[Колонка], 0);
					НоваяСтрока[Колонка] =  Т32[Строчка][Колонка];
					Если Лев(Т32[Строчка][4], 4) = "Цена" Тогда
						НоваяСтрока[Колонка] =  ?(СчетчикНоменклатур, ?(ОстаткиВсего[Колонка], СуммаОстаткиВсего[Колонка] / ОстаткиВсего[Колонка], 0) / СчетчикНоменклатур, 0);
					КонецЕсли;
					НоваяСтрока[Колонка - 1] = ?(СуммаЕд, НоваяСтрока[Колонка - 1], 0);
					Колонка = Колонка + 1;
				конеццикла;
			КонецЕсли; 
		конеццикла;
	КонецЕсли;
	
	
	
	
	ТЗ.Свернуть("Шрифт, Порядок, Признак, Предприятие, Значение, Резерв1, Резерв2", НаборИмен);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	Для Строчка = 0 По ТЗ.Количество()-1 Цикл
		
		
		//вывод шапки + остатки
		Если Лев(ТЗ[Строчка][4], 17) = "Остаток на начало" Тогда // выводим шапку
			
			//ОбластьШапка.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 19, СтрДлина(ТЗ[Строчка][4]));
			ОбластьШапка.Параметры.Предприятие = ТЗ[Строчка][3];
			ОбластьШапка.Параметры.Месяц = ПредставлениеПериода(ИсходныеДанные.ДатаНачала, ИсходныеДанные.ДатаОкончания);;
			
			ТабДок.Вывести(ОбластьШапка, 0);
			Период = 0;
			Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
				Период = Период + Интервал;
				ОбластьШапкаСтолбцы.Параметры.Сценарий1 = ИсходныеДанные.Сценарий1;
				Если ВсегоПериодов > 1 Тогда
					ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(НачалоМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - Интервал)), КонецМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - 1)));	
				иначе
					ОбластьШапкаСтолбцы.Параметры.Месяц = ПредставлениеПериода(ИсходныеДанные.ДатаНачала, ИсходныеДанные.ДатаОкончания);	
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(ИсходныеДанные.Сценарий2)  Тогда
					ОбластьШапкаСтолбцы.Параметры.Сценарий2 = ИсходныеДанные.Сценарий2;
					Колонка = Колонка + 1;
				КонецЕсли;
				
				
				ТабДок.Присоединить(ОбластьШапкаСтолбцы, 0);
			КонецЦикла;
			
		Конецесли;
		
		
		ОбластьОбъемСтолбцы = Макет.ПолучитьОбласть("ШапкаОбъем|ДанныеСтолбца");
		
		//вывод шапки объем пр-ва
		Если Лев(ТЗ[Строчка][4], 18) = "Объем производства" Тогда // выводим шапку
			ОбластьОбъем.Параметры.Номенклатура = Сред(ТЗ[Строчка][4], 19, СтрДлина(ТЗ[Строчка][4]));
			ТабДок.Вывести(ОбластьОбъем, 0);
			Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл				
				ОбластьОбъемСтолбцы.Параметры.Объем1 = ТЗ[Строчка][Колонка * 2 + 6];
				Если НЕ ПустаяСтрока(ИсходныеДанные.Сценарий2)  Тогда
					//ОбластьОбъемСтолбцы.Параметры.Сценарий2 = ИсходныеДанные.Сценарий2;
					ОбластьОбъемСтолбцы.Параметры.Объем2 = ТЗ[Строчка][Колонка * 2 + 8];
					ОбластьОбъемСтолбцы.Параметры.Объем3 = ОбластьОбъемСтолбцы.Параметры.Объем2 - ОбластьОбъемСтолбцы.Параметры.Объем1;
					Колонка = Колонка + 1;
				КонецЕсли;
				ТабДок.Присоединить(ОбластьОбъемСтолбцы, 0);
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		
		
		
		//получаем шрифт
		ОбластьДанные = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|СтолбецНачало");
		
		ОбластьДанныеСтолбцы = Макет.ПолучитьОбласть("Строка" + строка(ТЗ[Строчка][0]) + "|ДанныеСтолбца");
		
		
		
		//получаем данные
		ОбластьДанные.Параметры.Статья = ТЗ[Строчка][4];
		
		Уровень = ?(ТЗ[Строчка][0], 1, 0);
		Если ТЗ[Строчка][0] = 3 ИЛИ ТЗ[Строчка][0] = 4 ИЛИ ТЗ[Строчка][0] = 7 Тогда
			Уровень = 0;	
		КонецЕсли;
		
		ВидимостьОбласти = ?(ТЗ[Строчка][0] > 1, Ложь, Истина);
		
		//Если ТЗ[Строчка][0] = 6 Тогда
		//	Уровень = 1;
		//	ВидимостьОбласти = Истина;
		//КонецЕсли;
		
		Если ТЗ[Строчка][0] = 8 Тогда
			Уровень = 1;
			ВидимостьОбласти = Истина;
		КонецЕсли;
		
		
		Если ТЗ[Строчка][0] = 9 Тогда
			Уровень = 2;
			ВидимостьОбласти = Ложь;
		КонецЕсли;
		
		Если НЕ ВидимостьОбласти Тогда
			ИмяОбласти = "Остатки ГП на начало";
		КонецЕсли;
		Если ТЗ[Строчка][0] = 4 Тогда
			ИмяОбласти = "Средняя себестоимость";
		КонецЕсли;
		Если ТЗ[Строчка][0] = 6 Тогда
			ИмяОбласти = "Расшифровка затрат";
		КонецЕсли;
		Если НЕ рольдоступна("сабУчетчик") И (ТЗ[Строчка][0] = 3 ИЛИ ТЗ[Строчка][0] = 2 ИЛИ ТЗ[Строчка][0] = 4) Тогда
			Уровень = 2;
		КонецЕсли;
		
		
		
		
		ТабДок.Вывести(ОбластьДанные, Уровень, ИмяОбласти, ВидимостьОбласти);
		Период = 0;
		Для Колонка = 1 По ВсегоПериодов * ?(ПустаяСтрока(ИсходныеДанные.Сценарий2), 1, 2) Цикл
			Период = Период + Интервал;
			ОбластьДанныеСтолбцы.Параметры.Сумма11 =  ТЗ[Строчка][Колонка * 2 + 5];
			ОбластьДанныеСтолбцы.Параметры.Сумма1 =  ТЗ[Строчка][Колонка * 2 + 6];
			Если НЕ ПустаяСтрока(ИсходныеДанные.Сценарий2)  Тогда
				ОбластьДанныеСтолбцы.Параметры.Сумма21 = ТЗ[Строчка][Колонка * 2 + 7];
				ОбластьДанныеСтолбцы.Параметры.Сумма2 = ТЗ[Строчка][Колонка * 2 + 8];
				ОбластьДанныеСтолбцы.Параметры.Сумма31 = ОбластьДанныеСтолбцы.Параметры.Сумма21 - ОбластьДанныеСтолбцы.Параметры.Сумма11;
				ОбластьДанныеСтолбцы.Параметры.Сумма3 = ОбластьДанныеСтолбцы.Параметры.Сумма2 - ОбластьДанныеСтолбцы.Параметры.Сумма1;
				Колонка = Колонка + 1;
			КонецЕсли;
			
			//СтруктураРасшифровки = Новый Структура;
			//СтруктураРасшифровки.Вставить("ИсходныеДанные", "ИсходныеДанные.Д_Расшифровка");
			//Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
			//	СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ЗатратыНаПрво);
			//	СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][4]);
			//Иначе
			//	СтруктураРасшифровки.Вставить("Счет", ПланСчетов1.ОсновноеПрво);
			//	СтруктураРасшифровки.Вставить("Субконто1", ТЗ[Строчка][5]);
			//	СтруктураРасшифровки.Вставить("Субконто2", ТЗ[Строчка][4]);				
			//КонецЕсли;
			//СтруктураРасшифровки.Вставить("Предприятие", ТЗ[Строчка][3]);
			//СтруктураРасшифровки.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - Интервал)), ИсходныеДанные.ДатаНачала));
			//СтруктураРасшифровки.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - 1)), ИсходныеДанные.ДатаОкончания));
			//СтруктураРасшифровки.Вставить("ВидимостьШапки", 0);
			//СтруктураРасшифровки.Вставить("Сценарий1", ИсходныеДанные.Сценарий1);
			
			//ОбластьДанныеСтолбцы.Параметры.Расшифровка = СтруктураРасшифровки;
			//Если НЕ ПустаяСтрока(ИсходныеДанные.Сценарий2)  Тогда
			//	СтруктураРасшифровки2 = Новый Структура;
			//	СтруктураРасшифровки2.Вставить("ИсходныеДанные", "ИсходныеДанные.Д_Расшифровка");
			//	Если МассивОснЗатрат.Найти(ТЗ[Строчка][4]) = Неопределено Тогда
			//		СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ЗатратыНаПрво);
			//		СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][4]);
			//	Иначе
			//		СтруктураРасшифровки2.Вставить("Счет", ПланСчетов2.ОсновноеПрво);				
			//		СтруктураРасшифровки2.Вставить("Субконто1", ТЗ[Строчка][5]);
			//		СтруктураРасшифровки2.Вставить("Субконто2", ТЗ[Строчка][4]);
			//	КонецЕсли;
			//	СтруктураРасшифровки2.Вставить("Предприятие", ТЗ[Строчка][3]);
			//	
			//	СтруктураРасшифровки2.Вставить("Дата1", ?(ВсегоПериодов > 1, НачалоМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - Интервал)), ИсходныеДанные.ДатаНачала));
			//	СтруктураРасшифровки2.Вставить("Дата2", ?(ВсегоПериодов > 1, КонецМесяца(ДобавитьМесяц(ИсходныеДанные.ДатаНачала, Период - 1)), ИсходныеДанные.ДатаОкончания));
			//	СтруктураРасшифровки2.Вставить("ВидимостьШапки", 0);
			//	СтруктураРасшифровки2.Вставить("Сценарий1", ИсходныеДанные.Сценарий2);
			//	ОбластьДанныеСтолбцы.Параметры.Расшифровка2 = СтруктураРасшифровки2;
			//КонецЕсли;
			
			ТабДок.Присоединить(ОбластьДанныеСтолбцы, Уровень, ИмяОбласти, ВидимостьОбласти);
			
			//Колонка = Колонка + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	
	
КонецПроцедуры

&НаСервере
Процедура РечатьСебестоимостьСервер(ТабДок)
	
	Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, Объект, Перечисления.Д_ТипыБюджетов.БюджетЗатрат);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСырье(ТабДок)
	
	Документы.Д_Бюджет.РассчитатьСырье(ТабДок, Объект);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИнвестиции(ТабДок)
	
	Документы.Д_Бюджет.РассчитатьИнвестиции(ТабДок, Объект);
	
КонецПроцедуры

&НаСервере
Процедура РасчитатьПродажи(ТабДок)
	
	Документы.Д_Бюджет.РасчитатьПродажи(ТабДок, Объект);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьОтсрочку(Номенклатура, Дата, СценарийПлана, Предприятие)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_ПараметрыНоменклатурыСрезПоследних.Д_ОтсрочкаОплаты
	|ИЗ
	|	РегистрСведений.Д_ПараметрыНоменклатуры.СрезПоследних(
	|			&Дата,
	|			СценарийПлана = &Сценарий
	|				И Номенклатура = &Номенклатура И Предприятие = &Предприятие) КАК Д_ПараметрыНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сценарий", СценарийПлана);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если НЕ Выборка.Количество() Тогда
		Возврат "Отсрочка не установлена";
	Иначе
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Д_ОтсрочкаОплаты;	
		КонецЦикла;
	КонецЕсли;
	
	
	
КонецФункции // ()


&НаСервереБезКонтекста
Функция ОпределитьКвартал(НомерМесяца)
	Если НомерМесяца / 3 <= 1 Тогда
		Возврат 1;
	ИначеЕсли НомерМесяца / 3 > 1 И НомерМесяца / 3 <= 2 Тогда 
		Возврат 2;
	ИначеЕсли  НомерМесяца / 3 > 2 И НомерМесяца / 3 <= 3 Тогда
		Возврат 3;
	ИначеЕсли НомерМесяца / 3 > 3 И НомерМесяца / 3 <= 4 Тогда
		Возврат 4;	
	КонецЕсли; 
КонецФункции // ()

&НаКлиенте
Процедура ОбновитьОтчеты(Команда)
	ОбновитьСебестоимость();
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПИнвПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат) И ЗначениеЗаполнено(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяБДДС) Тогда 	
		Если НЕ СтатьяКапРемонт(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат) И НЕ СтатьяКапРемонт(Элементы.ЗатратыКП.ТекущиеДанные.СтатьяБДДС) Тогда
			СтандартнаяОбработка = Ложь;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтатьяКапРемонт(ТекСтатья)
	
	Возврат РасчетыБюджет.СтатьяИнв(ТекСтатья) ИЛИ РасчетыБюджет.СтатьяПредставительскихРасходов(ТекСтатья);
	
КонецФункции // ()

&НаСервере
Процедура ПечатьКорректировки(ТабДок)
	
	Документы.Д_Бюджет.ПечатьКорректировки(ТабДок, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПечатьКорректировкиИнвестиций(ТабДок)
	
	Документы.Д_Бюджет.ПечатьКорректировкиИнвестиций(ТабДок, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПЦФОПриИзменении(Элемент)
	Если НЕ Элементы.ЗатратыКП.ТекущиеДанные.ЦФО.Пустая() Тогда
		Элементы.ЗатратыКП.ТекущиеДанные.ВидДеятельности = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ЗатратыКП.ТекущиеДанные.ЦФО, "ВидДеятельности");
	Иначе
		Элементы.ЗатратыКП.ТекущиеДанные.ВидДеятельности = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НепроизводственноеПредприятие = Ложь Тогда 
		СтандартнаяОбработка = Ложь;
		Список = Новый СписокЗначений;
		Для каждого ТекНоменклатура Из ПроизводимыеНоменклатуры() Цикл
			Список.Добавить(ТекНоменклатура);
		КонецЦикла; 
		Список.Добавить("Простой");
		Список.Добавить("В пропорции к выпуску");
		
		
		ВыбраненоеЗначение = Неопределено;

		
		
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ЗатратыКПНоменклатураНачалоВыбораЗавершение", ЭтотОбъект), Список, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПНоменклатураНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбраненоеЗначение = ВыбранныйЭлемент;
	Если НЕ ВыбраненоеЗначение = Неопределено Тогда
		Если ВыбраненоеЗначение.Значение = "В пропорции к выпуску" Тогда
			Элементы.Затраты.ТекущиеДанные.Номенклатура = "";		
		Иначе
			Элементы.ЗатратыКП.ТекущиеДанные.Номенклатура = ВыбраненоеЗначение.Значение;		
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоответствиеНоменклатурыСоответствиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.СоответствиеНоменклатуры.ТекущиеДанные.Соответствие), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетСебестоимостиПрочиеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Объект.БюджетСебестоимостиПрочие[Элемент.ТекущаяСтрока].Месяц = Объект.Месяц;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.БюджетСебестоимостиПрочие[Элемент.ТекущаяСтрока].СтатьяБДДС) Тогда
		Объект.БюджетСебестоимостиПрочие[Элемент.ТекущаяСтрока].СтатьяБДДС = БюджетныйНаСервере.ВернутьРеквизит(Объект.БюджетСебестоимостиПрочие[Элемент.ТекущаяСтрока].СтатьяЗатрат, "СтатьяБДДС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетСебестоимостиПрочиеНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", ПроизводимыеНоменклатуры(), Элементы.БюджетСебестоимостиПрочие.ТекущиеДанные.Номенклатура), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПрочиеЗатраты(Команда)
	МассивСтрок = Новый Массив;
	Для каждого ТекСтрока Из Объект.БюджетСебестоимости Цикл
		Если ГруппаПрочие(ТекСтрока.СтатьяЗатрат) Тогда
			НоваяСтрока = Объект.БюджетСебестоимостиПрочие.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			МассивСтрок.Добавить(ТекСтрока);
		КонецЕсли;	
	КонецЦикла; 	
	
	Для каждого ТекСтрока Из МассивСтрок Цикл
		Объект.БюджетСебестоимости.Удалить(ТекСтрока);	
	КонецЦикла; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГруппаПрочие(ТекЭлемент)
	
	Возврат ТекЭлемент.ПринадлежитЭлементу(Справочники.СтатьиЗатрат.ПрочиеРасходы);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПродажи(Команда) 
	ЗаполнитьпродажиСервер(Объект.Сценарий, Объект.Предприятие);
	ДозаполнитьБюджетПродажТипомНоменк();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьпродажиСервер(Сценарий, Предприятие)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|*	               
	|ИЗ
	|	Документ.Д_БюджетПродажНовый.БюджетПродаж КАК Д_БюджетПродажНовыйБюджетПродаж
	|ГДЕ
	|	Д_БюджетПродажНовыйБюджетПродаж.Ссылка.Сценарий = &Сценарий
	|	И Д_БюджетПродажНовыйБюджетПродаж.Предприятие = &Предприятие
	|	И Д_БюджетПродажНовыйБюджетПродаж.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И Д_БюджетПродажНовыйБюджетПродаж.Ссылка.Недоступен = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц";
	
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.БюджетПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла; 	
	
КонецПроцедуры // ()

&НаКлиенте
Процедура ЗатратыПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.Затраты.ТекущиеДанные = Неопределено Тогда
		
		Если ПустаяСтрока(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат) Тогда
			Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат = СменитьТип(Элементы.Затраты.ТекущиеДанные.Признак);	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокПредприятий = ПолучитьПППоРодителю(Объект.Предприятие);
	ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбораИзМассива", Новый Структура("Флаг, ТекущаяСтрока", СписокПредприятий, Элементы.ЗатратыКП.ТекущиеДанные.ЦФО), Элемент); 
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеНоменклатурыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Д_ФормаВыбора",
	Новый Структура("СписокНоменклатур, ТекущаяСтрока", РеализуемыеНоменклатуры(), Элементы.СоответствиеНоменклатуры.ТекущиеДанные.Номенклатура), Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДвижениеСырьяСырьеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораСОстатками101", Новый Структура(
	//"ТекущаяСтрока,
	//|ВыбДата,
	//|ВыбПредприятие,
	//|ВыбПодразделение",
	//Элементы.ДвижениеСырья.ТекущиеДанные.Сырье,
	//Объект.Дата,
	//Объект.Предприятие,
	//,
	//) , Элемент); 
КонецПроцедуры

&НаКлиенте
Процедура ДокОснованиеПриИзменении(Элемент)
	Если НЕ ДокОснование.Пустая() Тогда
		ЗаполнитьСписокТЧСервер();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокТЧСервер()
	Если НЕ СписокТЧДляЗагрузки.Количество() Тогда
		
		Для каждого ТЧ Из ДокОснование.ПолучитьОбъект().Метаданные().ТабличныеЧасти Цикл
			СписокТЧДляЗагрузки.Добавить(ТЧ.Имя);	
		КонецЦикла; 	
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДокОснование(Команда)
	ЗаполнитьПоДокОснованиеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДокОснованиеСервер()
	Для каждого ТекТЧ Из СписокТЧДляЗагрузки Цикл
		Если ТекТЧ.Пометка Тогда
			ТЧИмя = ТекТЧ.Значение;
			Для каждого ТекСтрока Из ДокОснование[ТЧИмя] Цикл
				НоваяСтрока = Объект[ТЧИмя].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
			КонецЦикла; 		
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСтрокиПР(Команда)
	КопироватьСтроки(Элементы.ПР, Объект.ПР);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПростой(Команда)
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		Объект,
		"Укажите конкретный месяц для загрузки данных.",
		,
		,
		"ВсеМесяцы",
		Истина);
		Возврат;	
	КонецЕсли;
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиПростой", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.ЗатратыНаПРостой2);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПрочуюСС(Команда)
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		Объект,
		"Укажите конкретный месяц для загрузки данных.",
		,
		,
		"ВсеМесяцы",
		Истина);
		Возврат;	
	КонецЕсли;
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиСебестомости", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.БюджетСебестоимостиПрочие);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Блокировка" Тогда
		Если Параметр.Ссылка = Объект.Ссылка Тогда
			ПриОткрытии(Неопределено);			
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзменениеРеквизитовДоступности" Тогда
		Если Параметр = Объект.Ссылка Тогда
			БлокироватьДанныеФормы = Ложь;
			ПриОткрытии(Неопределено);			
		КонецЕсли;	
	ИначеЕсли ИмяСобытия = "ЕстьДетализация" Тогда
		ОтобранныеСтроки = Объект.ОбъемПроизводства.НайтиСтроки(Новый Структура("Месяц, Номенклатура", Параметр.Месяц, Параметр.Номенклатура)); 
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			ТекСтрока.ЕстьДетализация = Истина;		
		КонецЦикла;
	ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда
		//ОбщегоНазначенияКлиентСервер.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
	ИначеЕсли ИмяСобытия = "ПереносВБюджет" Тогда
		ПеренестиВБюджетСтрокиНепринятых(Параметр.МассивПринимаемых);
		ОбновитьНадписьНеперенесенных();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьНеперенесенных()
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		КоличНепринятыхСтрокКП = РассчитатьНепринятыеКБюджетуСтрокиОБ(Объект.Сценарий, Объект.Предприятие, ПолучитьПеренесенныеУИДы(), Истина);
		ПереносСтрокОБ_КП = "Непринятые строки корректировки опер. бюджетов: " + ?(КоличНепринятыхСтрокКП, КоличНепринятыхСтрокКП, "Нет. Нажмите для обновления");
	КонецЕсли;
	
	КоличНепринятыхСтрок = РассчитатьНепринятыеКБюджетуСтрокиОБ(Объект.Сценарий, Объект.Предприятие, ПолучитьПеренесенныеУИДы(), Ложь);
	ПереносСтрокОБ = "Непринятые строки опер. бюджетов: " + ?(КоличНепринятыхСтрок, КоличНепринятыхСтрок, "Нет. Нажмите для обновления");
	
	Элементы.ОперативныеБюджеты.Видимость = НепринятыеСтроки.Количество();
	Элементы.КорректировкиОперативныхБюджетов.Видимость = НепринятыеСтрокиКП.Количество();
КонецПроцедуры


&НаСервере
Процедура ПеренестиВБюджетСтрокиНепринятых(МассивСтрокУИДОВ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка,
	|	Д_БюджетПрочихПроектовЗатраты.НомерСтроки,
	|	Д_БюджетПрочихПроектовЗатраты.Признак,
	|	Д_БюджетПрочихПроектовЗатраты.СтатьяЗатрат,
	|	Д_БюджетПрочихПроектовЗатраты.СуммаСеб,
	|	Д_БюджетПрочихПроектовЗатраты.СуммаБДДС,
	|	Д_БюджетПрочихПроектовЗатраты.СтатьяБДДС,
	|	Д_БюджетПрочихПроектовЗатраты.Источник,
	|	Д_БюджетПрочихПроектовЗатраты.Подразделение,
	|	Д_БюджетПрочихПроектовЗатраты.Основание,
	|	Д_БюджетПрочихПроектовЗатраты.Месяц,
	|	Д_БюджетПрочихПроектовЗатраты.УИД КАК УИДОперативногоБюджета,
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка.Автор КАК АвторЗаписи,
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка.Предприятие КАК Заявитель,
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка.Подразделение КАК ПодразделениеЗаявителя
	|ИЗ
	|	Документ.Д_БюджетПрочихПроектов.Затраты КАК Д_БюджетПрочихПроектовЗатраты
	|ГДЕ
	|	Д_БюджетПрочихПроектовЗатраты.Ссылка.Сценарий = &Сценарий
	|	И Д_БюджетПрочихПроектовЗатраты.УИД В(&УИД)";
	
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	Запрос.УстановитьПараметр("УИД", МассивСтрокУИДОВ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Затраты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ДетализацияПоДням(Команда)
	ТекДанные = Элементы.ОбъемПроизводства.ТекущиеДанные;
	Если Не ТекДанные = Неопределено Тогда
		
		ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаДетализацииОбъема", Новый Структура("Месяц, Номенклатура, Объем", ТекДанные.Месяц, ТекДанные.Номенклатура, ТекДанные.Объем) ,ЭтаФорма); 
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОтразитьДетализацию();
	
	Если МодифицированностьБезПроведения Тогда
		МодифицированностьБезПроведения = Ложь;
	КонецЕсли;
	
	Если ФоновоеПроведение() Тогда
		ПодключитьОбработчикОжидания("ПроверитьПроведение", 1);
	КонецЕсли;
	
	//ОбщегоНазначенияКлиент.ПослеЗаписиАвтосохраняемойФормы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьОстатки(Команда)
	СинхронизироватьОстаткиСервер();
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьОстаткиСервер()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетныйОстатки.Счет,
	|	СУММА(УчетныйОстатки.СуммаРазвернутыйОстатокДт) КАК СуммаРазвернутыйОстатокДт,
	|	СУММА(УчетныйОстатки.СуммаРазвернутыйОстатокКт) КАК СуммаРазвернутыйОстатокКт,
	|	СУММА(УчетныйОстатки.КоличествоОстатокДт) КАК КоличествоОстатокДт,
	|	СУММА(УчетныйОстатки.КоличествоОстатокКт) КАК КоличествоОстатокКт,
	|	СУММА(УчетныйОстатки.КоличествоРазвернутыйОстатокДт) КАК КоличествоРазвернутыйОстатокДт,
	|	СУММА(УчетныйОстатки.КоличествоРазвернутыйОстатокКт) КАК КоличествоРазвернутыйОстатокКт,
	|	МАКСИМУМ(УчетныйОстатки.Субконто1) КАК Субконто1,
	|	СУММА(УчетныйОстатки.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(УчетныйОстатки.СуммаОстатокКт) КАК СуммаОстатокКт,
	|	ЛОЖЬ КАК ДетализацияСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ДатаНач,
	|			Счет.Забалансовый = ЛОЖЬ
	|				И НЕ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.РасчетыСУчр))
	|				И НЕ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВложенияВОС))
	|				И НЕ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.ГотоваяПродукция))
	|				И НЕ СЧЕТ В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.Кредиты)),
	|			,
	|			Предприятия = &Предприятие) КАК УчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетныйОстатки.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетныйОстатки.Счет,
	|	УчетныйОстатки.СуммаРазвернутыйОстатокДт,
	|	УчетныйОстатки.СуммаРазвернутыйОстатокКт,
	|	УчетныйОстатки.КоличествоОстатокДт,
	|	УчетныйОстатки.КоличествоОстатокКт,
	|	УчетныйОстатки.КоличествоРазвернутыйОстатокДт,
	|	УчетныйОстатки.КоличествоРазвернутыйОстатокКт,
	|	УчетныйОстатки.Субконто1,
	|	УчетныйОстатки.СуммаОстатокДт,
	|	УчетныйОстатки.СуммаОстатокКт,
	|	ИСТИНА
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&ДатаНач,
	|			Счет.Забалансовый = ЛОЖЬ
	|				И (Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.РасчетыСУчр))
	|					ИЛИ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.ВложенияВОС))
	|					ИЛИ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.ГотоваяПродукция))
	|					ИЛИ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Учетный.Кредиты))),
	|			,
	|			Предприятия = &Предприятие) КАК УчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетныйОстатки.Счет,
	|	УчетныйОстатки.Субконто1,
	|	УчетныйОстатки.СуммаРазвернутыйОстатокДт,
	|	УчетныйОстатки.СуммаРазвернутыйОстатокКт,
	|	УчетныйОстатки.КоличествоОстатокДт,
	|	УчетныйОстатки.КоличествоОстатокКт,
	|	УчетныйОстатки.КоличествоРазвернутыйОстатокДт,
	|	УчетныйОстатки.КоличествоРазвернутыйОстатокКт,
	|	УчетныйОстатки.СуммаОстатокДт,
	|	УчетныйОстатки.СуммаОстатокКт";
	
	
	КонецМес = КонецМесяца(Объект.Сценарий.ДатаНачала);
	МоментКонца = Новый Граница(КонецМес,ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("ДатаНач", МоментКонца);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ВводОстатковПрочее.Добавить();
		НоваяСтрока.Счет = БюджетныйНаСервере.ПолучитьСоответствиеСчета(Выборка.Счет);
		Если Выборка.ДетализацияСубконто1 Тогда
			НоваяСтрока.Субконто1 = Выборка.Субконто1;
		КонецЕсли;
		Если Выборка.СуммаОстатокДт Тогда
			НоваяСтрока.Задолженность = Перечисления.Д_ДтКт.Дебет;
			НоваяСтрока.Количество = Выборка.КоличествоОстатокДт;
			НоваяСтрока.Сумма = Выборка.СуммаОстатокДт;
		ИначеЕсли Выборка.СуммаОстатокКт Тогда
			НоваяСтрока.Задолженность = Перечисления.Д_ДтКт.Кредит;
			НоваяСтрока.Количество = Выборка.КоличествоОстатокКт;
			НоваяСтрока.Сумма = Выборка.СуммаОстатокКт;
		КонецЕсли;
		
		Если Выборка.СуммаОстатокДт И Выборка.СуммаОстатокКт Тогда
			НоваяСтрока = Объект.ВводОстатковПрочее.Добавить();
			НоваяСтрока.Счет = БюджетныйНаСервере.ПолучитьСоответствиеСчета(Выборка.Счет);
			НоваяСтрока.Задолженность = Перечисления.Д_ДтКт.Кредит;
			НоваяСтрока.Количество = Выборка.КоличествоОстатокКт;
			НоваяСтрока.Сумма = Выборка.СуммаОстатокКт;
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеНоменклатурыСоответствиеПриИзменении(Элемент)
	ТекСтрока = Элементы.СоответствиеНоменклатуры.ТекущиеДанные;
	Если ТекСтрока.Номенклатура = ТекСтрока.Соответствие Тогда
		ТекСтрока.Соответствие = "";
		ПоказатьПредупреждение(Новый ОписаниеОповещения("СоответствиеНоменклатурыСоответствиеПриИзмененииЗавершение", ЭтотОбъект), "Совпадение номенклатуры и соответствия недопустимо!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеНоменклатурыСоответствиеПриИзмененииЗавершение(ДополнительныеПараметры) Экспорт
	
	

КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПНаЕдиницуПриИзменении(Элемент)
	
	РассчитатьЛимитыПоСтроке(Неопределено);
	
КонецПроцедуры

// рассчет лимита ГП по себестоимости
&НаСервереБезКонтекста
Функция ВернутьСебестоимость(Предприятие, Сценарий, Номенклатура, Количество, Дата)
	
	Если Количество = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	КлючПериод = "Месяц";
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	-ЕСТЬNULL(ДанныеСценарий1.СуммаОборот, 0) КАК Сумма1,
	|	" + КлючПериод + "(ДанныеСценарий1.Период) КАК Период,
	|	ДанныеСценарий1.Субконто2 КАК Статья,
	|	ДанныеСценарий1.Субконто2.Родитель КАК Родитель1,
	|	ДанныеСценарий1.Субконто1 КАК Номенклатура,
	|	ДанныеСценарий1.Предприятия КАК Предприятия
	|ИЗ
	|	РегистрБухгалтерии.Бюджетный.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			" + КлючПериод + ",
	|			Счет = Значение(ПланСчетов.Управленческий.ОсновноеПрво),
	|			,
	|			Предприятия В ИЕРАРХИИ (&Предприятия)
	|				И СценарийПлана В (&Сценарий)
	|				И Субконто1 В (&Номенклатура),
	|			КорСчет = Значение(ПланСчетов.Управленческий.ВыпускПродукции),
	|			) КАК ДанныеСценарий1";
	
	Запрос.УстановитьПараметр("Предприятия", Предприятие);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Себ = 0;
	
	Пока Выборка.Следующий() Цикл
		Себ = Себ + Выборка.Сумма1;
	КонецЦикла;
	
	Возврат Себ / Количество;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если МодифицированностьБезПроведения Тогда
		ЭтаФорма.Записать();
	КонецЕсли;
	
	//Если Не РежимВосстановления Тогда
	//	сабОбщегоНазначения.ОчиститьАвтосохраненияОбъекта(Объект.Ссылка);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьБезПроведения(Команда)
	
	ЗаписатьТекущийДокументБезПроведения();
	
	ПослеЗаписиНаСервере(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТекущийДокументБезПроведения(НеобходимостьПривелегированногоРежима = Ложь)
	
	ЗаписатьБезПроведенияСервер(НеобходимостьПривелегированногоРежима);
	Прочитать();
	
	Если Не МодифицированностьБезПроведения Тогда
		МодифицированностьБезПроведения = Истина
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьБезПроведенияСервер(НеобходимостьПривелегированногоРежима)
	
	Если НеобходимостьПривелегированногоРежима Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ЗаписатьДокументБезПроведения(ДокОбъект);
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
	Если НеобходимостьПривелегированногоРежима Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьДокументБезПроведения(Док)
	
	Док.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПИнвестицииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И НЕ Объект.Месяц = Дата(3000, 12, 31) Тогда
		Элементы.ЗатратыКПИнвестиции.ТекущиеДанные.Месяц = Объект.Месяц;
		Если Элементы.ЗатратыКПИнвестиции.ТекущиеДанные.ЦФО.Пустая() Тогда
			Элементы.ЗатратыКПИнвестиции.ТекущиеДанные.ЦФО = Объект.Предприятие;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКБИ(Команда)
	Если Объект.КБИЗаполнен Тогда 
		Сообщить("Корректировки инвестиций уже заполненны на основании бюджета инвестиций");
	Иначе 
		Объект.ЗатратыКПИнвестиции.Очистить();
		ЗаполнитьКБИНаСервере();
		Элементы.ЗатратыКПИнвестицииЛимитНаНачалоДДС.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКБИНаСервере()
	ТЗ = Объект.Инвестиции.Выгрузить();
	Для Каждого Стр Из ТЗ Цикл 
		НоваяСтрока = Объект.ЗатратыКПИнвестиции.Добавить();
		НоваяСтрока.Месяц 		  = Стр.Месяц;
		
		Если ТЗ.Колонки.Найти("Подразделение") <> Неопределено Тогда
			НоваяСтрока.ВидДеятельности = Стр.Подразделение;
		КонецЕсли;
		
		НоваяСтрока.ПодразделениеЗаявителя = Стр.Подразделение;
		НоваяСтрока.СтатьяБДДС 	  = Стр.СтатьяБДДС;
		НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.НайтиПоРеквизиту("СтатьяБДДС", Стр.СтатьяБДДС);
		НоваяСтрока.ИнвПроект	  = Стр.ИнвестиционныйПроект;
		НоваяСтрока.Источник      = Стр.Источник;
		НоваяСтрока.ЛимитНаНачало = Стр.СуммаФР;
		НоваяСтрока.ЛимитНаНачалоДДС = Стр.СуммаБДДС;
		НоваяСтрока.Основание     = Стр.Основание;                    
	КонецЦикла;
	//ЗаполнитьЗначенияСвойств(ТЗЗКПИ, ТЗ);
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПСтатьяБДДСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// неактуально	
	//ИнвестиционныеСтатьи = ПолучитьСтатьиИД();
	
	//Если ИнвестиционныеСтатьи.Найти(ВыбранноеЗначение) <> Неопределено Тогда
	//	
	//	Сообщить("Статья " + """" + Строка(ВыбранноеЗначение) + """" + " редактируется на вкладке Корректировки бюджета инвестиций");	
	//	СтандартнаяОбработка = Ложь;
	//	Возврат;
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтатьиИД() 
	
	МассивСтатей = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиДДС.Ссылка
	|ИЗ
	|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
	|ГДЕ
	|	СтатьиДДС.ВидДеятельности = Значение(Перечисление.саб_Фин_ВидыДеятельности.ИД)
	|	И СтатьиДДС.ПометкаУдаления = ЛОЖЬ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивСтатей.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивСтатей;
	
КонецФункции

&НаСервереБезКонтекста
Функция РаботающееПредпр(Предприятие)
	Возврат ?(Предприятие.ТипПредприятия = Перечисления.Д_ТипыПредприятий.АРаботающее, Истина, Ложь);
КонецФункции

&НаКлиенте
Процедура ЗагрузитьКорректировкиИзExcel(Команда)
	
	Если Объект.Месяц = Дата(3000, 12, 31) Тогда
		сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(
		Объект,
		"Укажите конкретный месяц для загрузки данных.",
		,
		,
		"ВсеМесяцы",
		Истина);
		Возврат;	
	КонецЕсли;
	

//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиЗатрат", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.ЗатратыКП);
ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяц", Объект.Предприятие, Объект.Месяц) ,Элементы.ЗатратыКП);
	
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьПроведение()
	
	ЭтаФорма.Доступность = 1 - ПроверитьПроведениеСервер();
	Если НЕ ЭтаФорма.Доступность Тогда
		//Состояние("Проведение");
	Иначе
		ОтключитьОбработчикОжидания("ПроверитьПроведение");
		ЭтаФорма.Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьПроведениеСервер()
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Объект.Ссылка);
	
	ТекЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Конец", Объект.Номер, Дата('00010101000000')));
	Если ТекЗадания.Количество() Тогда
		Возврат Истина;
	Иначе
		Возврат ложь;
	КонецЕсли;
	
	
	
КонецФункции

&НаСервере
Процедура ПолучитьЛимитыВнесенныеВРегистр()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Сценарий.АктуальнаяДата));
	Запрос.УстановитьПараметр("ДатаКон", НачалоМесяца(Объект.Сценарий.ДатаКонца));
	Запрос.Текст = "ВЫБРАТЬ
	|	Б_ЛимитыОборотногоБаланса.Период КАК Период,
	|	Б_ЛимитыОборотногоБаланса.Предприятие,
	|	Б_ЛимитыОборотногоБаланса.Статья,
	|	Б_ЛимитыОборотногоБаланса.Сумма,
	|	Б_ЛимитыОборотногоБаланса.Комментарий
	|ИЗ
	|	РегистрСведений.Б_ЛимитыОборотногоБаланса КАК Б_ЛимитыОборотногоБаланса
	|ГДЕ
	|	Б_ЛимитыОборотногоБаланса.Период >= &ДатаНач
	|	И Б_ЛимитыОборотногоБаланса.Период <= &ДатаКон
	|	И Б_ЛимитыОборотногоБаланса.Предприятие = &Предприятие";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	ЗначениеВДанныеФормы(Выборка, ТЗУстановленныеЛимитыНаОборотку);
	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	//ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Функция ЗаполнитьМассивТЧНаСервере()
	МассивСинонемов = Новый Массив;
	Для Каждого ТЧ ИЗ Метаданные.Документы.Д_Бюджет.ТабличныеЧасти Цикл
		МассивСинонемов.Добавить(ТЧ.Синоним);
	КонецЦикла;
	Возврат МассивСинонемов
КонецФункции

&НаСервере
Функция ВернутьИмяТЧПоСинонему(Синоним)
	Для Каждого ТЧ ИЗ Метаданные.Документы.Д_Бюджет.ТабличныеЧасти Цикл
		Если ТЧ.Синоним = Синоним Тогда 
			Возврат ТЧ.Имя
		КонецЕсли;
	КонецЦикла;		
КонецФункции

&НаКлиенте
Процедура ДоступностьТЧПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(ЗаполнитьМассивТЧНаСервере());
	ВыбранноеЗначение = СписокВыбора.ВыбратьЭлемент();
	ИмяТЧ = ВернутьИмяТЧПоСинонему(ВыбранноеЗначение.Значение);
	СтрокаТЧ = Объект.ДоступностьТЧ.Добавить();
	СтрокаТЧ.ИмяТЧ = ИмяТЧ;
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда 
		Элементы.БюджетПродаж.ТекущиеДанные.ТипНоменклатуры = ?(ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства"), "ОС", "Номенклатура");
		Если БюджетныйНаСервере.ВернутьРеквизит(ВыбранноеЗначение, "ПометкаУдаления") Тогда
			Если НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") Тогда
				ВызватьИсключение("Номенклатура " + Строка(ВыбранноеЗначение) + " помечена на удаление. Выбор невозможен!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьПервыйМесяц(Сценарий)
	Возврат Сценарий.АктуальнаяДата;
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьПредприятие(Наименование)
	Возврат Справочники.Предприятия.НайтиПоНаименованию(Наименование).Ссылка;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПроцентОтбора(Номенклатура, Сценарий, Предприятие)
	
	Процент = 0;
	СтруктураВозврата = РегистрыСведений.Д_ПараметрыНоменклатуры.ПолучитьПоследнее(,Новый Структура("Номенклатура, СценарийПлана, Предприятие", Номенклатура, Сценарий, Предприятие));	
	Процент = СтруктураВозврата.Д_ПроцентОтбора;
	Возврат Процент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВыходКРХ(Сырье, Сценарий)
	
	ВыходКрх = 0;  
	СтруктураВозврата = РегистрыСведений.Д_ПараметрыСырья.ПолучитьПоследнее(,Новый Структура("Сырье, СценарийПлана", Сырье, Сценарий));	
	ВыходКрх = СтруктураВозврата.Д_ВыходИзТонныУслКРХ; 
	Возврат ВыходКрх;
	
КонецФункции

&НаКлиенте
Функция ВычислитьКрахмалистостьИЦенуСырья(Номенклатура, Сырье, Месяц)
	
	СтруктураВозврата = Новый Структура;
	СтрокиДС = Объект.ДвижениеСырья.НайтиСтроки(Новый Структура("Номенклатура, Сырье, Месяц", Номенклатура, Сырье, Месяц));
	
	Если СтрокиДС.Количество() Тогда
		СредневзвешеннаяКрахмалистость = (СтрокиДС[0].КоличествоНаНачало * СтрокиДС[0].КрахмалистостьНаНачало + СтрокиДС[0].КоличествоПриход * СтрокиДС[0].КрахмалистостьПриход) / (СтрокиДС[0].КоличествоНаНачало + СтрокиДС[0].КоличествоПриход);
		СтруктураВозврата.Вставить("СредневзвешеннаяКрахмалистость", СредневзвешеннаяКрахмалистость);
		ЦенаОстатка = СтрокиДС[0].ЦенаРасход;
		СтруктураВозврата.Вставить("ЦенаОстатка", ЦенаОстатка);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ВычислитьСуточныйСливИДниРаботы(Месяц, Номенклатура)
	
	СтруктураВозврата = Новый Структура;
	СтрокиСлива = Объект.ОбъемПроизводстваДетально.НайтиСтроки(Новый Структура("Месяц, Номенклатура, Простой", Месяц, Номенклатура, Ложь));
	Если СтрокиСлива.Количество() Тогда
		Если СтрокиСлива[0].Объем Тогда
			СтруктураВозврата.Вставить("Слив", СтрокиСлива[0].Объем);
			СтруктураВозврата.Вставить("ДниРаботы", СтрокиСлива.Количество())
		КонецЕсли;
	КонецЕсли;
	Возврат СтруктураВозврата;
	
КонецФункции


&НаКлиенте
Процедура АвтосохранениеРеквизитовФормыНаКлиенте()
	
	Если Модифицированность Тогда
		АвтосохранениеРеквизитовФормыНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Процедура АвтосохранениеРеквизитовФормыНаСервере()
	
	сабОбщегоНазначения.АвтосохранениеРеквизитовФормы(ЭтаФорма);
	
КонецПроцедуры


&НаСервере 
Процедура ПустаяСервернаяПроцедура()
	//Процедура-костыль.
	//Баг: при первом обращении на сервер в модуле формы откатывается введенный текст
	//Процедура вызывается при открытии формы, инициирует обращение на сервер, после чего баг с текстом не появляется
	
	Ы = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыСтатьяЗатратНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если Не ВыбранноеЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Если ВыбранноеЗначение.Значение = "Статья затрат (себестоимость)" Тогда
			ОткрытьФорму("Справочник.СтатьиЗатрат.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		ИначеЕсли ВыбранноеЗначение.Значение = "Статья доходов и расходов (финансовый результат)" Тогда
			ОткрытьФорму("Справочник.СтатьиДоходовРасходов.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		Иначе	
			ОткрытьФорму("Справочник.Стр_Задачи.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция БюджетСтроительногоНаправления(Предприятие)
	Возврат Не ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт();		
КонецФункции // ()

&НаКлиенте
Процедура ЗатратыКоличествоПриИзменении(Элемент)
	Элементы.Затраты.ТекущиеДанные.СуммаСеб = Элементы.Затраты.ТекущиеДанные.Количество * Элементы.Затраты.ТекущиеДанные.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыЦенаПриИзменении(Элемент)
	Элементы.Затраты.ТекущиеДанные.СуммаСеб = Элементы.Затраты.ТекущиеДанные.Количество * Элементы.Затраты.ТекущиеДанные.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПСтатьяЗатратНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если Не ВыбранноеЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Если ВыбранноеЗначение.Значение = "Статья затрат (себестоимость)" Тогда
			ОткрытьФорму("Справочник.СтатьиЗатрат.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		ИначеЕсли ВыбранноеЗначение.Значение = "Статья доходов и расходов (финансовый результат)" Тогда
			ОткрытьФорму("Справочник.СтатьиДоходовРасходов.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		Иначе	
			ОткрытьФорму("Справочник.Стр_Задачи.ФормаВыбора", Новый Структура("ТекущаяСтрока", ?(Элемент.Родитель.Родитель.Имя = "Затраты", Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, Элементы.ЗатратыКП.ТекущиеДанные.СтатьяЗатрат)), Элемент); 
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПИнвестицииСтатьяБДДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Справочник.СтатьиДвиженияДенежныхСредств.ФормаВыбора",,Элемент);
	Если Не БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "НаправлениеДеятельности") = ТуристическоеНаправление() Тогда
		ОтборПоИД =ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоИД.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидДеятельности");
		ОтборПоИД.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоИД.ПравоеЗначение = ПредопределенноеЗначение("Перечисление.саб_Фин_ВидыДеятельности.ИД");
	КонецЕсли;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТуристическоеНаправление()
	Возврат Справочники.НаправленияДеятельности.НайтиПоНаименованию("Туристическое");
КонецФункции

&НаКлиенте
Процедура ПолучитьБюджетПроизводства(Команда)
	
	Если Объект.ОбъемПроизводства.Количество() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПолучитьБюджетПроизводстваЗавершение", ЭтотОбъект), "Существующие строки будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет);
        Возврат;
	Иначе
		ЗагрузитьБюджетПроизводстваСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьБюджетПроизводстваЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		Объект.ОбъемПроизводства.Очистить();
		ЗагрузитьБюджетПроизводстваСервер();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьБюджетПроизводстваСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_БюджетПроизводстваПараметрыПроизводства.Ссылка,
	|	Д_БюджетПроизводстваПараметрыПроизводства.НомерСтроки,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Номенклатура,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Д_ДниРаботы,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Д_ПроцентОтбора,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Месяц КАК Месяц,
	|	Д_БюджетПроизводстваПараметрыПроизводства.ОбъемХранения,
	|	Д_БюджетПроизводстваПараметрыПроизводства.ИндивидуальноеХранение,
	|	Д_БюджетПроизводстваПараметрыПроизводства.МаксимальнаяПроизводительность КАК Объем,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Предприятие,
	|	Д_БюджетПроизводстваПараметрыПроизводства.МаксОтгрузкаВСутки,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьНалоги,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьМагистраль,
	|	Д_БюджетПроизводстваПараметрыПроизводства.Себестоимость91,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьПрочие,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьПроизводства,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьКоммерческиеРасходы,
	|	Д_БюджетПроизводстваПараметрыПроизводства.СебестоимостьИтого
	|ИЗ
	|	Документ.Д_БюджетПроизводства.ПараметрыПроизводства КАК Д_БюджетПроизводстваПараметрыПроизводства
	|ГДЕ
	|	Д_БюджетПроизводстваПараметрыПроизводства.Ссылка.Сценарий = &Сценарий
	|	И Д_БюджетПроизводстваПараметрыПроизводства.Предприятие = &Предприятие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ОбъемПроизводства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Ссылка,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.НомерСтроки,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Месяц КАК Месяц,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Номенклатура,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Объем,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.День КАК День,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Простой,
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Предприятие
	|ИЗ
	|	Документ.Д_БюджетПроизводства.ОбъемПроизводстваДетально КАК Д_БюджетПроизводстваОбъемПроизводстваДетально
	|ГДЕ
	|	Д_БюджетПроизводстваОбъемПроизводстваДетально.Ссылка.Сценарий = &Сценарий
	|	И Д_БюджетПроизводстваОбъемПроизводстваДетально.Предприятие = &Предприятие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц,
	|	День
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Сценарий", Объект.Сценарий);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ОбъемПроизводстваДетально.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НепроизводственноеПредприятие = Ложь Тогда
		СтандартнаяОбработка = Ложь;
		Список = Новый СписокЗначений;
		Для каждого ТекНоменклатура Из ПроизводимыеНоменклатуры() Цикл
			Список.Добавить(ТекНоменклатура);
		КонецЦикла; 
		Список.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.Простой"));
		Список.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"),"В пропорции к выпуску");
		
		
		ВыбраненоеЗначение = Неопределено;

		
		
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ЗатратыНоменклатураНачалоВыбораЗавершение", ЭтотОбъект), Список, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНоменклатураНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбраненоеЗначение = ВыбранныйЭлемент;
	Если НЕ ВыбраненоеЗначение = Неопределено Тогда
		Если ВыбраненоеЗначение.Значение = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
			Элементы.Затраты.ТекущиеДанные.Номенклатура = "";		
		Иначе
			Элементы.Затраты.ТекущиеДанные.Номенклатура = ВыбраненоеЗначение.Значение;		
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидБюджетаКорректировокПриИзменении(Элемент)
	Элементы.ЗатратыКП.ОтборСтрок = Новый ФиксированнаяСтруктура("ТипБюджета", ?(ЗначениеЗаполнено(ВидБюджетаКорректировок), ВидБюджетаКорректировок, Неопределено));
КонецПроцедуры

&НаКлиенте
Процедура ПереносСтрокОперативныхБюджетовНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Найти(ПереносСтрокОБ, "обновления") Тогда
		ОбновитьНадписьНеперенесенных();
	Иначе
		ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаНепринятыхСтрокБюджетов", Новый Структура("Предприятие, Сценарий, УИД", Объект.Предприятие, Объект.Сценарий, ПолучитьПеренесенныеУИДы()));
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПеренесенныеУИДы()
	Возврат Объект.Затраты.Выгрузить(,"УИДОперативногоБюджета").ВыгрузитьКолонку("УИДОперативногоБюджета");
КонецФункции // ()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если МодифицированностьОБ Тогда
		ПерезаписатьОперативныеБюджеты(ТекущийОбъект);
		ОбновитьНадписьНеперенесенных();
	КонецЕсли;
	
	СоздаватьГрафикБюджета = Объект.Сценарий.СоздаватьГрафикОплат;
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка) Тогда
		НовыйОбъектСсылка = Документы.Д_Бюджет.ПолучитьСсылку(Новый УникальныйИдентификатор);
		ТекущийОбъект.УстановитьСсылкуНового(НовыйОбъектСсылка);
	КонецЕсли;
	
	Для Каждого ТекТЧ Из ТекущийОбъект.Метаданные().ТабличныеЧасти Цикл
		
		Если НЕ ТекТЧ.Реквизиты.Найти("АвторЗаписи") = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из ТекущийОбъект[ТекТЧ.Имя] Цикл
				
				Если ЗначениеЗаполнено(СтрокаТЧ.АвторЗаписи) Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаТЧ.АвторЗаписи = БюджетныйНаСервере.ПолучитьПользователя();			
			КонецЦикла;
			
		КонецЕсли;
		
		Если НЕ ТекТЧ.Реквизиты.Найти("УИД") = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из ТекущийОбъект[ТекТЧ.Имя] Цикл
				
				Если НЕ ЗначениеЗаполнено(СтрокаТЧ.УИД) Тогда
					СтрокаТЧ.УИД = Новый УникальныйИдентификатор;			
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если НЕ ТекТЧ.Реквизиты.Найти("КлючАналитикиБюджета") = Неопределено И СоздаватьГрафикБюджета Тогда
			
			Для Каждого СтрокаТЧ Из ТекущийОбъект[ТекТЧ.Имя] Цикл
				
				//Если НЕ ЗначениеЗаполнено(СтрокаТЧ.КлючАналитикиБюджета) Тогда
				СоздатьОбновитьКлючАналитики(СтрокаТЧ, ТекущийОбъект);			
				//КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;

	КонецЦикла;
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Модифицирован", Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка));
	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьОбновитьКлючАналитики(СтрокаТЧ, ТекущийОбъект)
	Если ЗначениеЗаполнено(СтрокаТЧ.КлючАналитикиБюджета) Тогда
		НовыйКлючАналитики = СтрокаТЧ.КлючАналитикиБюджета.ПолучитьОбъект();
	Иначе
		НовыйКлючАналитики = Справочники.КлючиАналитикиБюджетов.СоздатьЭлемент();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(НовыйКлючАналитики, СтрокаТЧ);
	НовыйКлючАналитики.УИДСтроки = СтрокаТЧ.УИД;
	НовыйКлючАналитики.Предприятие = Объект.Предприятие;
	НовыйКлючАналитики.СтатьяДДС = СтрокаТЧ.СтатьяБДДС;
	НовыйКлючАналитики.СценарийПлана = Объект.Сценарий;
	НовыйКлючАналитики.Сумма = СтрокаТЧ.СуммаБДДС;
	НовыйКлючАналитики.Наименование = СтрокаТЧ.Основание;
	НовыйКлючАналитики.Документ = ?(ЗначениеЗаполнено(ТекущийОбъект.Ссылка), ТекущийОбъект.Ссылка, ТекущийОбъект.ПолучитьСсылкуНового());
	НовыйКлючАналитики.Записать();
	СтрокаТЧ.КлючАналитикиБюджета = НовыйКлючАналитики.Ссылка;
КонецПроцедуры
 

&НаСервере
Процедура ПерезаписатьОперативныеБюджеты(ТекущийОбъект)
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтрокиКП
	Иначе
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтроки
	КонецЕсли;
	
	Бюджеты = ТаблицаНепринятыхСтрокОБ.Выгрузить(, "ОперативныйБюджет, Принять");
	Бюджеты.Свернуть("ОперативныйБюджет", "Принять");
	
	Для каждого ТекСтрокаБюджета Из Бюджеты Цикл
		// связка бюджет-оперативный_бюджет
		Попытка 
			ЗаблокироватьДанныеДляРедактирования(ТекСтрокаБюджета.ОперативныйБюджет);		
			ТекОб = ТекСтрокаБюджета.ОперативныйБюджет.ПолучитьОбъект();
			ОтобранныеСтроки = ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет", ТекСтрокаБюджета.ОперативныйБюджет));
			Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
				ТекТЧ = ?(РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий), ТекОб.ЗатратыКП, ТекОб.Затраты);
				ОтобранныеСтрокиВБюджете = ТекТЧ.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДОперативногоБюджета));
				Для каждого ТекСтрокаОбъектаБюджет Из ОтобранныеСтрокиВБюджете Цикл
					Если ТекСтрока.Принять Тогда
						ТекСтрокаОбъектаБюджет.Бюджет = ТекущийОбъект.Ссылка;
						ТекСтрокаОбъектаБюджет.Номенклатура = ТекСтрока.Номенклатура;
						ТекСтрокаОбъектаБюджет.НаЕдиницу = ТекСтрока.НаЕдиницу;
						ТекСтрокаОбъектаБюджет.ВнесенаВБюджет = Истина;
					Иначе					
						ТекСтрокаОбъектаБюджет.ВнесенаВБюджет = Ложь;
					КонецЕсли;
				КонецЦикла; 			
			КонецЦикла;
			ТекОб.Записать();
			ОбработанныеОперативныеБюджеты.Добавить(ТекСтрокаБюджета.ОперативныйБюджет);
		Исключение
			ОтобранныеСтроки = ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет", ТекСтрокаБюджета.ОперативныйБюджет));
			НомераНеобработанныхСтрок = "";
			Для Каждого ТекСтрока Из ОтобранныеСтроки Цикл
				НомераНеобработанныхСтрок = НомераНеобработанныхСтрок + Строка(ТаблицаНепринятыхСтрокОБ.Индекс(ТекСтрока) + 1) + ?(ТаблицаНепринятыхСтрокОБ.Индекс(ТекСтрока) = ОтобранныеСтроки.Количество() - 1, ". ", ", ");
				РасчетыБюджет.ДобавитьСтрокуИзОперативногоБюджета(Объект.Ссылка, ТекСтрокаБюджета.ОперативныйБюджет, ТекСтрока.УИДОперативногоБюджета, ТекСтрока.Принять); // регистр сведений
			КонецЦикла;
			Ошибка = "";
			ТекстОшибки = ОписаниеОшибки();
			Знач1 = Найти(ТекстОшибки, "пользователь:");
			Знач2 = Найти(ТекстОшибки, "сеанс:");			
			Ошибка = Строка(ТекСтрокаБюджета.ОперативныйБюджет) + " открыт пользователем: " + Сред(ТекстОшибки, Знач1 + 14, Знач2-Знач1 - 16);
			Сообщить(Ошибка);
		КонецПопытки;
		//
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.Имя = "НепринятыеСтроки" Тогда
		КоличНепринятыхСтрок = НепринятыеСтроки.НайтиСтроки(Новый Структура("Принять", Ложь)).Количество(); 
	Иначе
		КоличНепринятыхСтрокКП = НепринятыеСтрокиКП.НайтиСтроки(Новый Структура("Принять", Ложь)).Количество(); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если НЕ Поле.Имя = "НепринятыеСтрокиНоменклатура" Тогда
		СтандартнаяОбработка = Ложь;
		//НачальныеДанные = Элементы.НепринятыеСтроки.ТекущиеДанные.Принять;
		//Элементы.НепринятыеСтроки.ТекущиеДанные.Принять = НЕ Элементы.НепринятыеСтроки.ТекущиеДанные.Принять; 
		//Если НЕ Элементы.НепринятыеСтроки.ТекущиеДанные.Принять Тогда
		//	Попытка
		//		ОчиститьСсылкуВОперативномБюджете(Элементы.НепринятыеСтроки.ТекущиеДанные.ОперативныйБюджет, Элементы.НепринятыеСтроки.ТекущиеДанные.УИДОперативногоБюджета);
		//	Исключение
		//		Элементы.НепринятыеСтроки.ТекущиеДанные.Принять = НЕ Элементы.НепринятыеСтроки.ТекущиеДанные.Принять; 
		//	КонецПопытки;
		//КонецЕсли;
		//Если Не Элементы.НепринятыеСтроки.ТекущиеДанные.Принять = НачальныеДанные Тогда
		//	МодифицированностьОБ = Истина;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьСсылкуВОперативномБюджете(ТекОперативныйБюджет, ТекУИД)
	ТекОперативныйБюджетОбъект = ТекОперативныйБюджет.ПолучитьОбъект();
	СтрокаЗатрат = ТекОперативныйБюджетОбъект.Затраты.Найти(ТекУИД, "УИД");
	Если СтрокаЗатрат = Неопределено Тогда
		СтрокаЗатрат = ТекОперативныйБюджетОбъект.Затраты.Найти(ТекУИД, "УИД");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрокаЗатрат) Тогда    
		СтрокаЗатрат.Бюджет = Документы.Д_Бюджет.ПустаяСсылка();
	КонецЕсли;
	ТекОперативныйБюджетОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиПринятьПриИзменении(Элемент)
	МодифицированностьОБ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ЗатратыВНХ" Тогда
		ДоступностьВНХ = (БюджетныйНаСервере.РольДоступнаСервер("Администратор") ИЛИ БюджетныйНаСервере.РольДоступнаСервер("БюджетныйОтдел"));
		Если Элемент.ТолькоПросмотр И ДоступностьВНХ Тогда 
			Элемент.ТекущиеДанные.ВНХ = 1 - Элемент.ТекущиеДанные.ВНХ;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	Для каждого ТекНоменклатура Из ПроизводимыеНоменклатуры() Цикл
		Список.Добавить(ТекНоменклатура);
	КонецЦикла; 
	Список.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.Простой"));
	Список.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"),"В пропорции к выпуску");
	
	
	ВыбраненоеЗначение = Неопределено;

	
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НепринятыеСтрокиНоменклатураНачалоВыбораЗавершение", ЭтотОбъект), Список, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиНоменклатураНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбраненоеЗначение = ВыбранныйЭлемент;
	Если НЕ ВыбраненоеЗначение = Неопределено Тогда
		Если ВыбраненоеЗначение.Значение = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
			Элементы.НепринятыеСтроки.ТекущиеДанные.Номенклатура = "";		
		Иначе
			Элементы.НепринятыеСтроки.ТекущиеДанные.Номенклатура = ВыбраненоеЗначение.Значение;		
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗатратыСтатьяЗатратПриИзменении(Элемент)
		
	Если ТипЗнч(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		Элементы.Затраты.ТекущиеДанные.СтатьяБДДС = БюджетныйНаСервере.ВернутьРеквизит(Элементы.Затраты.ТекущиеДанные.СтатьяЗатрат, "СтатьяБДДС");
		Элементы.Затраты.ТекущиеДанные.Признак = ПредопределенноеЗначение("Перечисление.Д_ПризнакСписания.Себестоимость");
	Иначе
		Элементы.Затраты.ТекущиеДанные.Признак = ПредопределенноеЗначение("Перечисление.Д_ПризнакСписания.ФинРез");
		Элементы.Затраты.ТекущиеДанные.СтатьяБДДС = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НепринятыеСтрокиНоменклатураПриИзменении(Элемент)
	МодифицированностьОБ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБюджета(Команда)
	
	СтандартнаяОбработка = Ложь;	
	ТабДок = Новый ТабличныйДокумент;
	ПараметрыИнна = Новый Структура;
	
	Если Строка(Объект.Предприятие) = "Инна-Тур" Тогда 
		ПараметрыИнна = ПечатьИннаТур();
	Иначе
		ПараметрыИнна.Вставить("ТабДокФР", Неопределено);
		ПараметрыИнна.Вставить("ТабДокДДС", Неопределено);
	КонецЕсли;
	
	ПечатьДокументаСервер(ТабДок, Команда.Имя, ПараметрыИнна);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Истина;
	ТабДок.ОтображатьГруппировки = Истина;
	ТабДок.АвтоМасштаб = Истина;
	ФормаПечати = ПолучитьФорму("ОбщаяФорма.ФормаПечатиДокумента");
	ФормаПечати.Результат = ТабДок;
	ФормаПечати.Открыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПечатьИннаТур()
	
	//супербоб на инну-тур
	ФормаФР = ПолучитьФорму("Отчет.Д_ФинансовыйРезультат.ФормаОбъекта");
	ФормаФР.УстановитьТекущийВариант("ПланИнна");
	ИдентификаторПредприятия = "";
	Для Каждого ЭлементНастроекФР Из ФормаФР.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементНастроекФР.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предприятия") Тогда
			ИдентификаторПредприятия = ЭлементНастроекФР.ИдентификаторПользовательскойНастройки;
		КонецЕсли;
	КонецЦикла;	
	БюджетФР = Объект.Ссылка;
	СценарийФР = БюджетныйНаСервере.ВернутьРеквизит(БюджетФР, "Сценарий");
	ЭлементыНастроекФР = ФормаФР.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого ЭлементНастроекФР Из ЭлементыНастроекФР Цикл
		Если ТипЗнч(ЭлементНастроекФР) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если ЭлементНастроекФР.Параметр 				= Новый ПараметрКомпоновкиДанных("Сценарий1") Тогда
				ЭлементНастроекФР.Значение 					= СценарийФР;
				ЭлементНастроекФР.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекФР.Параметр = Новый ПараметрКомпоновкиДанных("ВыбПериод") Тогда
				ЭлементНастроекФР.Значение.ДатаНачала 		= БюджетныйНаСервере.ВернутьРеквизит(СценарийФР, "ДатаНачала") + 86400;
				ЭлементНастроекФР.Значение.ДатаОкончания 	= КонецДня(БюджетныйНаСервере.ВернутьРеквизит(СценарийФР, "ДатаКонца")); 
				ЭлементНастроекФР.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекФР.Параметр = Новый ПараметрКомпоновкиДанных("Интервал") Тогда
				ЭлементНастроекФР.Значение 					= "Месяц";
				ЭлементНастроекФР.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекФР.Параметр = Новый ПараметрКомпоновкиДанных("Сводный") Тогда
				ЭлементНастроекФР.Значение 					= Ложь;
				ЭлементНастроекФР.Использование 			= Истина;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементНастроекФР) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если ЭлементНастроекФР.ИдентификаторПользовательскойНастройки = ИдентификаторПредприятия Тогда
				ЭлементНастроекФР.ПравоеЗначение = БюджетныйНаСервере.ВернутьРеквизит(БюджетФР, "Предприятие");
				ЭлементНастроекФР.Использование = Истина;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	ФормаФР.СкомпоноватьРезультат();
	ТабДокФР = ФормаФР.Результат;
	
	ФормаДДС = ПолучитьФорму("Отчет.Д_ОтчетОДДС1.ФормаОбъекта");
	ФормаДДС.УстановитьТекущийВариант("БезПодр2");
	ИдентификаторПредприятия = "";
	Для Каждого ЭлементНастроекДДС Из ФормаДДС.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементНастроекДДС.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Предприятия") Тогда
			ИдентификаторПредприятия = ЭлементНастроекДДС.ИдентификаторПользовательскойНастройки;
		КонецЕсли;
	КонецЦикла;	
	БюджетДДС = БюджетФР;
	СценарийДДС = СценарийФР;
	ЭлементыНастроекДДС = ФормаДДС.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого ЭлементНастроекДДС Из ЭлементыНастроекДДС Цикл
		Если ТипЗнч(ЭлементНастроекДДС) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если ЭлементНастроекДДС.Параметр = Новый ПараметрКомпоновкиДанных("Сценарий1") Тогда
				ЭлементНастроекДДС.Значение 				= СценарийДДС;
				ЭлементНастроекДДС.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекДДС.Параметр = Новый ПараметрКомпоновкиДанных("Сценарий2") Тогда
				ЭлементНастроекДДС.Использование 			= Ложь;
			ИначеЕсли ЭлементНастроекДДС.Параметр = Новый ПараметрКомпоновкиДанных("Период") Тогда
				ЭлементНастроекДДС.Значение.ДатаНачала 		= БюджетныйНаСервере.ВернутьРеквизит(СценарийДДС, "ДатаНачала") + 86400;
				ЭлементНастроекДДС.Значение.ДатаОкончания 	= КонецДня(БюджетныйНаСервере.ВернутьРеквизит(СценарийДДС, "ДатаКонца")); 
				ЭлементНастроекДДС.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекДДС.Параметр = Новый ПараметрКомпоновкиДанных("Интервал") Тогда
				ЭлементНастроекДДС.Значение 				= "Месяц";
				ЭлементНастроекДДС.Использование 			= Истина;
			ИначеЕсли ЭлементНастроекДДС.Параметр = Новый ПараметрКомпоновкиДанных("Сводный") Тогда
				ЭлементНастроекДДС.Значение 				= Ложь;
				ЭлементНастроекДДС.Использование 			= Истина;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементНастроекДДС) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если ЭлементНастроекДДС.ИдентификаторПользовательскойНастройки = ИдентификаторПредприятия Тогда
				ЭлементНастроекДДС.ПравоеЗначение = БюджетныйНаСервере.ВернутьРеквизит(БюджетДДС, "Предприятие");
				ЭлементНастроекДДС.Использование = Истина;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	ФормаДДС.СкомпоноватьРезультат();
	ТабДокДДС = ФормаДДС.Результат;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ТабДокФР", ТабДокФР);
	СтруктураВозврата.Вставить("ТабДокДДС", ТабДокДДС);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура ПечатьДокументаСервер(ТабДок, ТекКоманда, ПараметрыИнна)
	
	Если ТекКоманда = "ПечатьЗакупок" Тогда 
		Документы.Д_Бюджет.РассчитатьСырье(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.БюджетЗакупок);	
	ИначеЕсли ТекКоманда = "ПечатьИнвестиций" Тогда 
		Документы.Д_Бюджет.РассчитатьИнвестиции(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.БюджетИнвестиций);
	ИначеЕсли ТекКоманда = "ПечатьПродаж" Тогда 
		Документы.Д_Бюджет.РасчитатьПродажи(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.БюджетПродаж);
	ИначеЕсли ТекКоманда = "ПечатьКорректировокЗатрат" Тогда 
		Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.КорректировкиБюджета, ПараметрыИнна.ТабДокФР, ПараметрыИнна.ТабДокДДС);	
	ИначеЕсли ТекКоманда = "ПечатьКорректировокИнвестиций" Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиИнвестиций(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.КорректировкиИнвестиций);
	ИначеЕсли ТекКоманда = "ПечатьПроизводства" Тогда 
		Документы.Д_Бюджет.РечатьОбъемПроизводства(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.БюджетПроизводства);
	ИначеЕсли ТекКоманда = "ПечатьЗатрат" Тогда 
		Документы.Д_Бюджет.РечатьСебестоимостьСерверНовый(ТабДок, Объект.Ссылка, Неопределено, ПараметрыИнна.ТабДокФР, ПараметрыИнна.ТабДокДДС, КорректировочныйБюджет, ТекКоманда)
	ИначеЕсли ТекКоманда = "ПечатьПредставительскихРасходов" Тогда 
		Документы.Д_Бюджет.ПечатьПредставительскихРасходовБДР(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.БюджетПредставительскихРасходов);
	ИначеЕсли ТекКоманда = "ПечатьКорректировокПР" Тогда 
		Документы.Д_Бюджет.ПечатьКорректировкиПредставительские(ТабДок, Объект.Ссылка, Перечисления.Д_ТипыБюджетов.КорректировкиПредставительскихРасходов);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьДанныеОперативныхБюджетов(Команда)
	// связка бюджет-оперативный_бюджет
	ОбновитьНадписьНеперенесенных();
	// актуализация данных ОБ
	ПолучитьАктуальныеДанныеПоНепринятымСтрокам();
	//
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий) Тогда
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтрокиКП
	Иначе
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтроки
	КонецЕсли;
	
	// связка бюджет-оперативный_бюджет
	Для каждого ТекСтрокаБюджета Из ОбработанныеОперативныеБюджеты Цикл		
		ТекОб = ТекСтрокаБюджета.Значение.ПолучитьОбъект();
		ОтобранныеСтроки = ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет, Принять", ТекСтрокаБюджета.Значение, Истина));
		Для каждого ТекСтрока Из ОтобранныеСтроки Цикл
			ОтобранныеСтрокиВБюджете = ТекОб.Затраты.НайтиСтроки(Новый Структура("УИД", ТекСтрока.УИДОперативногоБюджета));
			Для каждого ТекСтрокаОбъектаБюджет Из ОтобранныеСтрокиВБюджете Цикл
				ТекСтрокаОбъектаБюджет.ВнесенаВБюджет = Истина;
			КонецЦикла; 			
		КонецЦикла;
		ТекОб.Записать();
	КонецЦикла;
	ОбработанныеОперативныеБюджеты.Очистить();
	
	ДозаполнитьБюджетПродажТипомНоменк();
	//
	
КонецПроцедуры

&НаКлиенте
Процедура КопированиеСИзменениемЗнака(Команда)
	
	//Если НЕ Команда = Неопределено И Команда.Имя = "РассчитатьЛимитыПоСтрокеИнв" Тогда
	//	ТекДанные = Элементы.ЗатратыКПИнвестиции.ТекущиеДанные;
	//	Инв = Истина;
	//Иначе	
	//	ТекДанные = Элементы.ЗатратыКП.ТекущиеДанные;
	//	Инв = Ложь;
	//КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьАктуальныеДанныеПоНепринятымСтрокам()
	
	ИзмененныеСтроки = РасчетыБюджет.ПолучитьИзмененныеСтрокиОперативныхБюджетов(Объект.Ссылка, Истина);
	КорректировочныйБюджет = РасчетыБюджет.ЭтоКорректировочныйБюджет(Объект.Сценарий);
	Если КорректировочныйБюджет Тогда
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтрокиКП
	Иначе
		ТаблицаНепринятыхСтрокОБ = НепринятыеСтроки
	КонецЕсли;
	Для Каждого Строка Из ИзмененныеСтроки Цикл
		Если ТаблицаНепринятыхСтрокОБ.НайтиСтроки(Новый Структура("ОперативныйБюджет, УИДОперативногоБюджета", Строка.ОперативныйБюджет, Строка.УИДСтроки)).Количество() Тогда
			Продолжить;
		КонецЕсли;
		ТЗ_Изм = РасчетыБюджет.ПолучитьСтрокуОперативногоБюджетаПоИдентификатору(Строка.УИДСтроки, Строка.ОперативныйБюджет, КорректировочныйБюджет);
		Если ТЗ_Изм.Количество() Тогда
			ИзмСтрока = ТЗ_Изм[0];
			НоваяСтрокаНепринятых = ТаблицаНепринятыхСтрокОБ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНепринятых, ИзмСтрока);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура ДвижениеСырьяПриАктивизацииСтроки(Элемент)
	ЗаполнитьПараметрыПроизводстваКлиент();
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПараметрыПроизводстваКлиент()
	ТекущаяСтрока = Элементы.ДвижениеСырья.ТекущиеДанные;
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		ТекПараметры = РассчитатьРасходФункция(ТекущаяСтрока, Ложь);
		ПоказательВыходИзТонныКрахмала = ТекПараметры.ВыходИзТонны;
		ПоказательОтборРектификата = ТекПараметры.ОтборРектификата;
		ПоказательРасчет = "Расход: " + ?(ЗначениеЗаполнено(ТекПараметры.ОбъемПроизводства), Формат(ТекПараметры.ОбъемПроизводства, "ЧДЦ="), "<..>") + " / "
		+ ?(ЗначениеЗаполнено(ТекПараметры.ВыходИзТонны), Формат(ТекПараметры.ВыходИзТонны, "ЧДЦ=2"), "<..>") + " / " 
		+ ?(ЗначениеЗаполнено(ТекПараметры.СреднийКрахмал), Формат(ТекПараметры.СреднийКрахмал, "ЧДЦ=2"), "<..>") + "% / " 
		+ ?(ЗначениеЗаполнено(ТекПараметры.ОтборРектификата), Формат(ТекПараметры.ОтборРектификата, "ЧДЦ=2"), "<..>") + "% * " 
		+ ?(ЗначениеЗаполнено(ТекущаяСтрока.ДоляСырья), Формат(ТекущаяСтрока.ДоляСырья, "ЧДЦ=2"), "<..>") + "% = " 
		+ ?(ЗначениеЗаполнено(ТекПараметры.Количество), Формат(ТекПараметры.Количество, "ЧДЦ=2"), "???");    
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметры(Команда)
	УстановитьПараметрыНоменклатурыИСырья(Элементы.ДвижениеСырья.ТекущиеДанные.Номенклатура, Элементы.ДвижениеСырья.ТекущиеДанные.Сырье, Объект.Сценарий, Объект.Дата, Объект.Предприятие);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПараметрыНоменклатурыИСырья(Номенклатура, Сырье, Сценарий, Дата, Предприятие)
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПараметрыСырья(Команда)
	ЗаполнитьПараметрыПроизводстваКлиент();
КонецПроцедуры

&НаСервере
Функция ЗапретРедактированияКорректировок(ТекСтрока)
	
	ТекБП = Неопределено;
	
	Попытка
		Если ЗначениеЗаполнено(ТекСтрока.ТипБюджета) Тогда
			
			Если Строка(ТекСтрока.ТипБюджета) = "Корректировки бюджета производства и затрат" Тогда
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиБюджета")
			ИначеЕсли Строка(ТекСтрока.ТипБюджета) = "Корректировки инвестиций" Тогда
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиИнвестиций")
			Иначе
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиПредставительскихРасходов")
			КонецЕсли;
			
		КонецЕсли;
	Исключение
		Если ЗначениеЗаполнено(ТекСтрока) Тогда
			
			Если Строка(ТекСтрока) = "Корректировки бюджета производства и затрат" Тогда
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиБюджета")
			ИначеЕсли Строка(ТекСтрока) = "Корректировки инвестиций" Тогда
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиИнвестиций")
			Иначе
				ТекБП = РасчетыБюджет.ПоискБП_УтверждениеБюджета(Объект.Ссылка, "КорректировкиПредставительскихРасходов")
			КонецЕсли;
			
		КонецЕсли;
	КонецПопытки;
	
	Возврат ТекБП;
	
КонецФункции

&НаКлиенте
Процедура ЗатратыКППриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
	БП = ЗапретРедактированияКорректировок(ТекТипБюджета);
	
	Если ЗначениеЗаполнено(БП) И Не ЭтоБюджетныйОтдел Тогда
		Сообщить("Бизнес процесс утверждения уже запущен: " + Строка(БП));
		Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКППередУдалением(Элемент, Отказ)	
	
	ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
	БП = ЗапретРедактированияКорректировок(ТекТипБюджета);
	
	Если ЗначениеЗаполнено(БП) И Не ЭтоБюджетныйОтдел Тогда
		Сообщить("Бизнес процесс утверждения уже запущен: " + Строка(БП));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьСтрокуСервер(ИндСтр)
	ДокОбъект = Объект.Ссылка.ПолучитьОбъект();
	Попытка
		Стр = ДокОбъект.ЗатратыКП[ИндСтр];
		Возврат Ложь
	Исключение
		Возврат Истина;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ЗатратыКППередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование И ОбщегоНазначенияПовтИсп.ЭтоБазаСпирт() Тогда
		ТекТипБюджета = РасчетыБюджет.ПолучитьТипБюджетаСтрокиКорректировок(Элементы.ЗатратыКП.ТекущиеДанные.ИнвПроект);
		БП = ЗапретРедактированияКорректировок(ТекТипБюджета);
		
		Если ЗначениеЗаполнено(БП) И Не ЭтоБюджетныйОтдел Тогда
			Сообщить("Бизнес процесс утверждения уже запущен: " + Строка(БП));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКППриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыБюджетКоммРасходовПриИзменении(Элемент)
	
	Для Каждого Строка Из Объект.Прочие90 Цикл
		Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			Строка.ТипНоменклатуры = "ОС"
		Иначе
			Строка.ТипНоменклатуры = "Номенклатура"
		КонецЕсли;
	КонецЦикла;
	
	Если ВидНоменклатурыБюджетКоммРасходов = "Все" Или ВидНоменклатурыБюджетКоммРасходов = "" Тогда
		Элементы.Прочие90.ОтборСтрок = Неопределено
	Иначе
		Элементы.Прочие90.ОтборСтрок = Новый ФиксированнаяСтруктура("ТипНоменклатуры", ?(ЗначениеЗаполнено(ВидНоменклатурыБюджетКоммРасходов), ВидНоменклатурыБюджетКоммРасходов, Неопределено));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыБюджетПродажПриИзменении(Элемент)
	
	Для Каждого Строка Из Объект.БюджетПродаж Цикл
		Если ТипЗнч(Строка.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			Строка.ТипНоменклатуры = "ОС"
		Иначе
			Строка.ТипНоменклатуры = "Номенклатура"
		КонецЕсли;
	КонецЦикла;
	
	Если ВидНоменклатурыБюджетПродаж = "Все" Или ВидНоменклатурыБюджетПродаж = "" Тогда
		Элементы.БюджетПродаж.ОтборСтрок = Неопределено;
	Иначе
		Элементы.БюджетПродаж.ОтборСтрок = Новый ФиксированнаяСтруктура("ТипНоменклатуры", ?(ЗначениеЗаполнено(ВидНоменклатурыБюджетПродаж), ВидНоменклатурыБюджетПродаж, Неопределено));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БюджетПродажНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ВидНоменклатурыБюджетПродаж = "Все" Или ВидНоменклатурыБюджетПродаж = "" Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
		Массив.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элемент.ОграничениеТипа = ОписаниеТиповС;
	Иначе
		Массив = Новый Массив;
		Массив.Добавить(?(ВидНоменклатурыБюджетПродаж = "Номенклатура", Тип("СправочникСсылка.Номенклатура"), Тип("СправочникСсылка.ОсновныеСредства")));
		ОписаниеТиповС = Новый ОписаниеТипов(Массив);
		Элемент.ОграничениеТипа = ОписаниеТиповС;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПР(Команда)
		
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиПР", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.ПР);
	ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.ПР);
	
КонецПроцедуры



&НаКлиенте
Процедура Прочие90НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда 
		Элементы.Прочие90.ТекущиеДанные.ТипНоменклатуры = ?(ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства"), "ОС", "Номенклатура");
		Если БюджетныйНаСервере.ВернутьРеквизит(ВыбранноеЗначение, "ПометкаУдаления") Тогда
			Если НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") Тогда
				ВызватьИсключение("Номенклатура " + Строка(ВыбранноеЗначение) + " помечена на удаление. Выбор невозможен!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ФункционалАвтоматическогоРасчетаВБюджетеПродаж

&НаКлиенте
Процедура БюджетПродажПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если ПустаяСтрока(Элементы.БюджетПродаж.ТекущиеДанные.Контрагент) Тогда
		Элементы.БюджетПродаж.ТекущиеДанные.Контрагент = ПустойКонтрагент();
	КонецЕсли;
	
	Если НоваяСтрока Тогда
	    Элементы.БюджетПродаж.ТекущиеДанные.ОбъектПродажи = "Номенклатура";
		Элементы.БюджетПродаж.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустойКонтрагент()
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();	
	
КонецФункции // ()

&НаКлиенте
Процедура БюджетПродажПоступлениеДСПриИзменении(Элемент)
	
	Элементы.БюджетПродаж.ТекущиеДанные.ИзменениеПоступления = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетДЗ(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("РасчетДЗЗавершение", ЭтотОбъект), "Будет произведена сотрировка строк по месяцам. Продлолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетДЗЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		СортировкаСтрок();		
		ПросчитатьДЗИКЗ();	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СортировкаСтрок()
	ВремТЗ = Объект.БюджетПродаж.Выгрузить();
	ВремТЗ.Сортировать("Месяц Возр, НомерСтроки Возр");
	Объект.БюджетПродаж.Загрузить(ВремТЗ);
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияДС(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПоступленияДСЗавершение", ЭтотОбъект, Новый Структура("Команда", Команда)), "Все поступления будут пересчитаны. Продолжить?", РежимДиалогаВопрос.ДаНет);	
КонецПроцедуры

&НаКлиенте
Процедура ПоступленияДСЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Команда = ДополнительныеПараметры.Команда;
	
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет  Тогда
		
		Возврат;	
		
	КонецЕсли;
	
	
	Если Команда.Имя = "ПоступленияДС" Тогда
		КоллекцияСтрок = Объект.БюджетПродаж;
	Иначе
		КоллекцияСтрок = Новый Массив;
		Для каждого ТекСтрока Из Элементы.БюджетПродаж.ВыделенныеСтроки Цикл
			ТекСтрокаОбъект = Объект.БюджетПродаж.НайтиПоИдентификатору(ТекСтрока);
			КоллекцияСтрок.Добавить(ТекСтрокаОбъект);	
		КонецЦикла; 	
	КонецЕсли;
	
	//формируем список контрагентов, присутствующих в документе
	
	СвернутьТЗКлиент();
	
	//обходим виды сырья и заполняем остатки на начало
	Для каждого ТекПозиция Из ТЗРеализация Цикл
		
		//находим первую строчку, т.е. остатки на начало
		СтруктураПоиска = Новый Структура("Месяц, Контрагент, Номенклатура", Элементы.Месяц.СписокВыбора[1].Значение, ТекПозиция.Контрагент, ТекПозиция.Номенклатура);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		ДЗНачало = 0; ДЗКонец = 0; Отгрузка = 0; Оплата = 0;
		КЗНачало = 0; НачисленоКЗ = 0; ОплаченоКЗ = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			ДЗНачало = ДЗНачало + ТекСтрока2.ДЗНачало;				
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
			//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
			//Иначе
			//	Транспорт = 0;
			//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			//	
			//КонецЕсли;
			
			
			Отгрузка = Отгрузка + ТекСтрока2.Количество * Цена;
			
			Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
			ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
			ТекСтрока2.ИзменениеПоступления = Ложь;
			
			Оплата = Оплата + ТекСтрока2.ПоступлениеДС;
			
			ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ДЗНачало + Отгрузка - Оплата);
			ДЗКонец = ТекСтрока2.ДЗКонец;
			
			//ЛимитДЗ = СуммаЛимита(ТекСтрока2.Контрагент);
			//ЛимитДЗПр = СуммаЛимитаПр(ТекСтрока2.Контрагент);
			//ТекСтрока2.Лимит = ЛимитДЗ;
			//ТекСтрока2.ЛимитПр = ЛимитДЗПр;
			//
			//От = ТекСтрока2.ДЗКонец - ЛимитДЗ;
			//ОтПр = ТекСтрока2.ДЗКонецПр - ЛимитДЗПр;
			//Если ТекСтрока2.ДЗКонец > ЛимитДЗ Тогда
			//	ТекСтрока2.ДЗКонец = ЛимитДЗ;
			//КонецЕсли;
			//
			//Если ТекСтрока2.ДЗКонецПр > ЛимитДЗПр Тогда
			//	ТекСтрока2.ДЗКонецПр = ЛимитДЗПр;
			//КонецЕсли;
			//ДЗКонец = ТекСтрока2.ДЗКонец; ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
			//Если Макс(От,ОтПр) > 0 Тогда
			//	ТекСтрока2.ПоступлениеДС = ТекСтрока2.ПоступлениеДС + Макс(От,ОтПр);
			//	Оплата = Оплата + Макс(От,ОтПр);
			//КонецЕсли;
			
			
			КЗНачало = КЗНачало + ТекСтрока2.КЗНачало;
			
			
			//Начислено = ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт) * ТекСтрока2.Верх / Цена);
			
			
			НачисленоКЗ = НачисленоКЗ + ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество) * ТекСтрока2.Верх /
			ТекСтрока2.Цена);
			ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
			КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			
		КонецЦикла;
		
		
		СтруктураПоиска = Новый Структура("Контрагент, Номенклатура", ТекПозиция.Контрагент, ТекПозиция.Номенклатура);
		ОтобранныеСтроки = Объект.БюджетПродаж.НайтиСтроки(СтруктураПоиска);
		СчетчикНайденных = 0;
		Для каждого ТекСтрока2 Из ОтобранныеСтроки Цикл
			Если ТекСтрока2.Месяц = Элементы.Месяц.СписокВыбора[1].Значение Тогда
				Продолжить;		
			КонецЕсли;
			
			Если НЕ СчетчикНайденных Тогда
				
				ТекСтрока2.ДЗНачало = ДЗКонец;	
				
				Транспорт =  0;
				Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр) = "сверх цены (отк)"  Тогда
					Транспорт = Транспорт + ТекСтрока2.ЖД;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены"  И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены (отк)" Тогда
					Транспорт = Транспорт + ТекСтрока2.Авто;
				КонецЕсли;
				Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
					Транспорт = Транспорт + ТекСтрока2.Сопровождение;
				КонецЕсли;
				
				Цена = Цена + Транспорт + ТекСтрока2.Дисконт;
				
				
				//Если ТекСтрока2.ВозмещениеТр = "Сверх цены" Тогда
				//	Транспорт = (ТекСтрока2.ЖД + ТекСтрока2.Авто) * ТекСтрока2.Количество;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх + ТекСтрока2.ЖД + ТекСтрока2.Авто;
				//Иначе
				//	Транспорт = 0;
				//	Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
				//	
				//КонецЕсли;
				
				Отгрузка = ТекСтрока2.Количество * Цена;
				
				Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
				ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
				ТекСтрока2.ИзменениеПоступления = Ложь;
				
				Оплата = ТекСтрока2.ПоступлениеДС;
				
				ТекСтрока2.ДЗКонец = ?(ТекСтрока2.ГаситьДЗ, 0, ТекСтрока2.ДЗНачало + Отгрузка - Оплата);
				ДЗКонец = ТекСтрока2.ДЗКонец;
				
				//ЛимитДЗ = СуммаЛимита(ТекСтрока2.Контрагент);
				//ЛимитДЗПр = СуммаЛимитаПр(ТекСтрока2.Контрагент);
				//ТекСтрока2.Лимит = ЛимитДЗ;
				//ТекСтрока2.ЛимитПр = ЛимитДЗПр;
				
				//От = ТекСтрока2.ДЗКонец - ЛимитДЗ;
				//ОтПр = ТекСтрока2.ДЗКонецПр - ЛимитДЗПр;
				//Если ТекСтрока2.ДЗКонец > ЛимитДЗ Тогда
				//	ТекСтрока2.ДЗКонец = ЛимитДЗ;
				//КонецЕсли;
				
				//Если ТекСтрока2.ДЗКонецПр > ЛимитДЗПр Тогда
				//	ТекСтрока2.ДЗКонецПр = ЛимитДЗПр;
				//КонецЕсли;
				//ДЗКонец = ТекСтрока2.ДЗКонец; ДЗКонецПр = ТекСтрока2.ДЗКонецПр;
				
				//Если Макс(От,ОтПр) > 0 Тогда
				//	ТекСтрока2.ПоступлениеДС = ТекСтрока2.ПоступлениеДС + Макс(От,ОтПр);
				//	Оплата = Оплата + Макс(От,ОтПр);
				//КонецЕсли;
				
				
				//СчетчикНайденных = СчетчикНайденных + 1;
				
				ТекСтрока2.КЗНачало = КЗКонец;
				НачисленоКЗ = ?(ТекСтрока2.Цена = 0, 0, (ТекСтрока2.ПоступлениеДС - Транспорт * ТекСтрока2.Количество) * ТекСтрока2.Верх / Цена);
				ОплаченоКЗ = КЗНачало + НачисленоКЗ;	
				КЗКонец = КЗНачало + НачисленоКЗ - ОплаченоКЗ;
			Иначе
				ТекСтрока2.ДЗНачало = 0;
				ТекСтрока2.КЗНачало = 0;
			КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СортироватьСтроки(Команда)
	СортировкаСтрок();
КонецПроцедуры

&НаКлиенте
Процедура РасчетПоступленийПоСтроке(Команда)
	
	Если НЕ Элементы.БюджетПродаж.ТекущиеДанные = Неопределено Тогда
		
		Для каждого ТекСтрока2 Из Элементы.БюджетПродаж.ВыделенныеСтроки Цикл
			
			ТекСтрока2 = Элементы.БюджетПродаж.ТекущиеДанные;
			
			ДЗНачало = ТекСтрока2.ДЗНачало;				
			
			Транспорт =  0;
			Цена = ТекСтрока2.Цена + ТекСтрока2.Верх;
			
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.ЖД;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "самовывоз" И НЕ НРег(ТекСтрока2.ВозмещениеТр2) = "сверх цены" Тогда
				Транспорт = Транспорт + ТекСтрока2.Авто;
			КонецЕсли;
			Если НЕ НРег(ТекСтрока2.ВозмещениеСопровождения) = "самовывоз" Тогда
				Транспорт = Транспорт + ТекСтрока2.Сопровождение;
			КонецЕсли;
			
			Цена = Цена + Транспорт;
			
			
			Отгрузка = ТекСтрока2.Количество * Цена;
			
			Лимит = Отгрузка * ТекСтрока2.Отсрочка / 30;
			ТекСтрока2.ПоступлениеДС = ?(ТекСтрока2.ДЗНачало + Отгрузка - Лимит < 0, 0, ТекСтрока2.ДЗНачало + Отгрузка - Лимит);
			ТекСтрока2.ИзменениеПоступления = Ложь;
			
			ПросчитатьДЗИКЗ();
			
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТаблицаПоказателейОперационнойДеятельности

&НаКлиенте
Процедура БюджетПродажОбъектПродажиПриИзменении(Элемент)
	Если Элементы.БюджетПродаж.ТекущиеДанные.ОбъектПродажи = "Основные средства" Тогда
		Если НЕ ТипЗнч(Элементы.БюджетПродаж.ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			Элементы.БюджетПродаж.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.БюджетПродаж.ТекущиеДанные.Номенклатура) Тогда
		Элементы.БюджетПродаж.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Прочие90ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.Прочие90.ТекущиеДанные.ОбъектПродажи = "Номенклатура";
		Элементы.Прочие90.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");	
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Прочие90ОбъектПродажиПриИзменении(Элемент)
	Если Элементы.Прочие90.ТекущиеДанные.ОбъектПродажи = "Основные средства" Тогда
		Если НЕ ТипЗнч(Элементы.Прочие90.ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			Элементы.Прочие90.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.Прочие90.ТекущиеДанные.Номенклатура) Тогда
		Элементы.Прочие90.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗагрузитьИнвестиции(Команда)
	
	//ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиИнв", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.Инвестиции);
	ОткрытьФорму("Документ.Д_Бюджет.Форма.ФормаЗагрузкиУниверсальная", Новый Структура("Предприятие, Месяцы", Объект.Предприятие, Элементы.Месяц.СписокВыбора) ,Элементы.Инвестиции);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыКПКлючАналитикиСтрокиЗатратПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ЗатратыКП.ТекущиеДанные.КлючАналитикиСтрокиЗатрат) Тогда
		ТекДанные = Элементы.ЗатратыКП.ТекущиеДанные;
		ДанныеКлючаАналитики = ДанныеСтроки(ТекДанные.КлючАналитикиСтрокиЗатрат)[0];
		ЗаполнитьЗначенияСвойств(ТекДанные, ДанныеКлючаАналитики,,"СуммаСеб");
		ТекДанные.СтатьяБДДС = ДанныеКлючаАналитики.СтатьяДДС;
		Если ТипЗнч(ТекДанные.СчетОрганизации) = Тип("СправочникСсылка.БанковскиеСчетаОрганизаций") Тогда
			ТекДанные.Источник = ПредопределенноеЗначение("Перечисление.Д_ИсточникиСредств.БезНал");
			ТекДанные.Организация = БюджетныйНаСервере.ВернутьРеквизит(ТекДанные.СчетОрганизации, "Владелец");
		Иначе
			ТекДанные.Источник = ПредопределенноеЗначение("Перечисление.Д_ИсточникиСредств.Нал");
		КонецЕсли;
		ТекДанные.ИнвПроект = ?(ЗначениеЗаполнено(ТекДанные.ИнвПроект), ТекДанные.ИнвПроект, Неопределено);
	КонецЕсли;
	РассчитатьЛимитыПоСтроке(Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеСтроки(КлючАналитики)

	  Запрос = Новый Запрос;
	  Запрос.Текст = "ВЫБРАТЬ
	  |	*
	  |ИЗ
	  |	Справочник.КлючиАналитикиБюджетов КАК КлючиАналитикиБюджетов
	  |ГДЕ
	  |	КлючиАналитикиБюджетов.Ссылка = &Ссылка";
	  
	  Запрос.УстановитьПараметр("Ссылка", КлючАналитики);
	  
	  Результат = Запрос.Выполнить();
	  Выборка = Результат.Выгрузить();
	  
	  Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Выборка);
	  

КонецФункции // ()

