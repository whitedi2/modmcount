
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	//Если Не Параметры.Свойство("НаОснованииЗаявки") Тогда	
	Если Объект.Ссылка.Пустая() Тогда
		//Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.ПриемНаРаботу;
		//Объект.УправленческийУчет = Истина;
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	//КонецЕсли;
	
	РассчитатьОбщуюСуммуУстановленнуюРанее();
	
	УстановитьВидимостьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПолнаяСтавкаПриИзменении(Элемент)
	
	ПересчитатьПроцентСтавки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПроцентСтавки();
	
	Если Объект.ПолнаяСтавка = 0 Тогда
		Объект.ПроцентСтавки = 0;
	Иначе
		Объект.ПроцентСтавки = Объект.РегламентированныеДанные.Итог("РазмерЗП") / Объект.ПолнаяСтавка;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПересчитатьОбщуюСумма();
	
	Объект.ОбщийРазмерЗП = Объект.РегламентированныеДанные.Итог("РазмерЗП") * 0.87 + Объект.УчетныеДанные.Итог("РазмерЗП");
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьВидимость(ЭтоПрием = Ложь, ЭтоУвольнение = Ложь, ЭтоПеремещение = Ложь)
	
	ЭтоПрием = Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.ПриемНаРаботу;
	ЭтоУвольнение = Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.Увольнение;
	ЭтоПеремещение = Не ЭтоПрием И НЕ ЭтоУвольнение;
	
	//Элементы.Группа27.Видимость 	= (Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.ПриемНаРаботу) ИЛИ (Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.Перемещение);
	Элементы.ГруппаПеремещениеСведенияОЗП.Видимость = ЭтоПрием;
	
	//Элементы.УчетныеДанныеПеремещение.Видимость 		= (Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.Увольнение) ИЛИ (Объект.ВидОперации = Перечисления.ВидыОперацийДвиженияКадров.Перемещение);
	Элементы.УсловияУвольнения.Видимость = ЭтоУвольнение;
	
	Элементы.УчетныеДанныеПрежниеПеремещение.Видимость 				= Объект.УправленческийУчет И (ЭтоУвольнение ИЛИ ЭтоПеремещение); 
	Элементы.РегламентированныеДанныеПрежниеПеремещение.Видимость 	= Объект.РегламентированныйУчет  И (ЭтоУвольнение ИЛИ ЭтоПеремещение); 
	Элементы.УчетныеДанныеПеремещение.Видимость 					= Объект.УправленческийУчет  И (ЭтоПрием ИЛИ ЭтоПеремещение); 
	Элементы.РегламентированныеДанныеПеремещение.Видимость 			= Объект.РегламентированныйУчет  И (ЭтоПрием ИЛИ ЭтоПеремещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Объект.ОбщийРазмерЗП = 0;
	Объект.УчетныеДанные.Очистить();
	Объект.УчетныеДанныеПрежние.Очистить();
	Объект.РегламентированныеДанные.Очистить();
	Объект.РегламентированныеДанныеПрежние.Очистить();
	
	ЭтоПрием = Ложь;
	ЭтоУвольнение = Ложь;
	ЭтоПеремещение = Ложь;
	УстановитьВидимость(ЭтоПрием, ЭтоУвольнение, ЭтоПеремещение);
	
	Если ЭтоУвольнение ИЛИ ЭтоПеремещение Тогда
		Если Объект.УправленческийУчет Тогда
			ЗаполнитьУчетныеДанные(Неопределено);		
		КонецЕсли;
		Если Объект.РегламентированныйУчет Тогда
			ЗаполнитьРегламентированныеДанные(Неопределено);		
		КонецЕсли;	
	КонецЕсли;
	
	Если ЭтоПеремещение Тогда
		Если Объект.УправленческийУчет Тогда
			СкопироватьУпр(Неопределено);		
		КонецЕсли;
		Если Объект.РегламентированныйУчет Тогда
			СкопироватьРегл(Неопределено);		
		КонецЕсли;	
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Пользователь", БюджетныйНаСервере.ПолучитьПользователя()));
	
	УстановитьВидимость();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекБП = БПСервер.НайтиТекущийБПСервер(Объект.Ссылка);
	Иначе	
		ТекБП = Неопределено;
	КонецЕсли;
	Если НЕ ТекБП = Неопределено И НЕ БюджетныйНаСервере.РольДоступнаСервер("Администратор") Тогда
		ОснованиеЗаблокирован = БюджетныйНаСервере.ВернутьРеквизит(ТекБП, "ОснованиеЗаблокирован");
		БюджетныйНаКлиенте.ФормаТолькоПросмотр(Объект, ЭтаФорма, ОснованиеЗаблокирован);
    КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ИзменятьШтатноеРасписаниеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УправленческийУчетПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныйУчетПриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУчетныеДанные(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен сотрудник!";
		Сообщение.Поле = "Объект.Сотрудник";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена дата операции!";
		Сообщение.Поле = "Объект.Дата";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьУчетныеДанныеНасервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРегламентированныеДанные(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен сотрудник!";
		Сообщение.Поле = "Объект.Сотрудник";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена дата операции!";
		Сообщение.Поле = "Объект.Дата";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРегламентированныеДанныеНасервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУчетныеДанныеНасервере()
		
	Объект.УчетныеДанныеПрежние.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.КадровоеСостояниеСотрудниковУпр.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК КадровоеСостояниеСотрудниковУпрСрезПоследних
	|ГДЕ
	|	КадровоеСостояниеСотрудниковУпрСрезПоследних.Работает";
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("Период", НачалоДня(Объект.Дата) - 2);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.УчетныеДанныеПрежние.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);	
		НоваяСтрока.Дата = Объект.Дата - 24*60*60;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегламентированныеДанныеНасервере()
	
	Объект.РегламентированныеДанныеПрежние.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.КадровоеСостояниеСотрудниковРегл.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК КадровоеСостояниеСотрудниковРеглСрезПоследних
	|ГДЕ
	|	КадровоеСостояниеСотрудниковРеглСрезПоследних.Работает";
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("Период", НачалоДня(Объект.Дата) - 2);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.РегламентированныеДанныеПрежние.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);	
		НоваяСтрока.Дата = Объект.Дата - 24*60*60;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеДанныеПриИзменении(Элемент)
	
	ПересчитатьПроцентСтавки();
	ПересчитатьОбщуюСумма();

КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПриИзменении(Элемент)
	
	ПересчитатьПроцентСтавки();
	ПересчитатьОбщуюСумма();
	
КонецПроцедуры

&НаКлиенте
Процедура УчетныеДанныеПеремещениеПриИзменении(Элемент)
	
	ПересчитатьПроцентСтавки();
	ПересчитатьОбщуюСумма();
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПеремещениеПриИзменении(Элемент)
	
	ПересчитатьПроцентСтавки();
	ПересчитатьОбщуюСумма();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатыПриУвольненииПриИзменении(Элемент)
	
	Объект.ВсегоВыплатПриУвольнени = Объект.ВыплатыПриУвольнении + Объект.ВыплатыПриУвольненииОфициальные;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатыПриУвольненииОфициальныеПриИзменении(Элемент)
	
	Объект.ВсегоВыплатПриУвольнени = Объект.ВыплатыПриУвольнении + Объект.ВыплатыПриУвольненииОфициальные;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьОбщуюСуммуУстановленнуюРанее()
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	Если Объект.РегламентированныйУчет И Не Объект.УправленческийУчет Тогда
		Если Не ЗначениеЗаполнено(Объект.ДатаРегл) Тогда
			Возврат;
		КонецЕсли;
		Период = Объект.ДатаРегл;
	ИначеЕсли Объект.УправленческийУчет И Не Объект.РегламентированныйУчет Тогда
		Если Не ЗначениеЗаполнено(Объект.Период) Тогда
			Возврат;
		КонецЕсли;
		Период = Объект.Период;
	ИначеЕсли Объект.УправленческийУчет И Объект.РегламентированныйУчет Тогда
		Если Не ЗначениеЗаполнено(Объект.Период) И Не ЗначениеЗаполнено(Объект.ДатаРегл) Тогда
			Возврат;
		ИначеЕсли ЗначениеЗаполнено(Объект.Период) И Не ЗначениеЗаполнено(Объект.ДатаРегл) Тогда
			Период = Объект.Период;
		ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Период) И ЗначениеЗаполнено(Объект.ДатаРегл) Тогда
			Период = Объект.ДатаРегл;
		ИначеЕсли ЗначениеЗаполнено(Объект.Период) И ЗначениеЗаполнено(Объект.ДатаРегл) Тогда
			Период = ?(Объект.ДатаРегл > Объект.Период, Объект.ДатаРегл, Объект.Период);
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияСотрудникамОстатки.ОбщийРазмерЗПОстаток
	|ИЗ
	|	РегистрНакопления.НачисленияСотрудникам.Остатки(&Период, Сотрудник = &Сотрудник) КАК НачисленияСотрудникамОстатки";
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РазмерЗпУстановленныйРанее = Выборка.ОбщийРазмерЗПОстаток;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	РассчитатьОбщуюСуммуУстановленнуюРанее();

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	//РасширенныйУпрУчет = ПараметрыСеанса.ТекущийПользователь.РасширенныйУправленческийУчет;
	//
	//Элементы.УчетныеДанныеПрежниеПеремещениеРазмерЗП.Видимость 	= РасширенныйУпрУчет;
	//Элементы.УчетныеДанныеПеремещениеРазмерЗП.Видимость 		= РасширенныйУпрУчет;
	//Элементы.ОбщийРазмерЗП.Видимость 							= РасширенныйУпрУчет;
	////Элементы.РазмерЗпУстановленныйРанее.Видимость 				= РасширенныйУпрУчет;
	//Элементы.ПремиальнаяЧасть.Видимость 						= РасширенныйУпрУчет;
	//Элементы.РазмерЗпУстановленныйРанее2.Видимость 				= РасширенныйУпрУчет;
	
КонецПроцедуры	

&НаКлиенте
Процедура СкопироватьРегл(Команда)
	
	Если Не Элементы.РегламентированныеДанныеПрежниеПеремещение.ТекущиеДанные = Неопределено Тогда
		НоваяСтрока = Объект.УчетныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(Объект.РегламентированныеДанные.Добавить(), Элементы.РегламентированныеДанныеПрежниеПеремещение.ТекущиеДанные);
		НоваяСтрока.Дата = Элементы.РегламентированныеДанныеПрежниеПеремещение.ТекущиеДанные.Дата + 24*60*60;
	Иначе
		Для каждого ТекСтрока Из Объект.РегламентированныеДанныеПрежние Цикл
			НоваяСтрока = Объект.РегламентированныеДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
			НоваяСтрока.Дата = ТекСтрока.Дата + 24*60*60;
		КонецЦикла; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьУпр(Команда)
	
	Если Не Элементы.УчетныеДанныеПрежниеПеремещение.ТекущиеДанные = Неопределено Тогда
		НоваяСтрока = Объект.УчетныеДанные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элементы.УчетныеДанныеПрежниеПеремещение.ТекущиеДанные);
		НоваяСтрока.Дата = Элементы.УчетныеДанныеПрежниеПеремещение.ТекущиеДанные.Дата + 24*60*60;
	Иначе
		Для каждого ТекСтрока Из Объект.УчетныеДанныеПрежние Цикл
			НоваяСтрока = Объект.УчетныеДанные.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);		
			НоваяСтрока.Дата = ТекСтрока.Дата + 24*60*60;
		КонецЦикла; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПеремещениеПолнаяСтавкаПриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы.РегламентированныеДанныеПеремещение.ТекущиеДанные);	
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПеремещениеРазмерЗППриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПолнаяСтавкаПриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеРазмерЗППриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПроцентСтавки(ТекДанные)
	
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекДанные.ПроцентСтавки = ?(ТекДанные.ПолнаяСтавка = 0, 0, ТекДанные.РазмерЗП / ТекДанные.ПолнаяСтавка); 
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ОткрытьФорму("Документ.Д_СлужебнаяЗаписка.ФормаВыбора", Новый Структура("Отбор", Новый Структура("ВидСз", ВидЗаявкиНаКадровоеДвижение())), Элемент);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидЗаявкиНаКадровоеДвижение()
	
	Возврат Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаКадровоеДвижение;
	
КонецФункции	

&НаКлиенте
Процедура РегламентированныеДанныеПрежниеУвольнениеРазмерЗППриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПрежниеУвольнениеПолнаяСтавкаПриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПрежниеПеремещениеПолнаяСтавкаПриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РегламентированныеДанныеПрежниеПеремещениеРазмерЗППриИзменении(Элемент)
	
	РассчитатьПроцентСтавки(Элементы[Элемент.Родитель.Имя].ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Пересчитать", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры
