&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДобавленныеКолонкиТаблиц();
	КонецЕсли;
	
	Элементы.Счет71.РежимВыбораИзСписка = Истина;;
	Элементы.Счет71.СписокВыбора.Добавить(сабОбщегоНазначенияБУХ.ПолучитьСчетПоКоду("71.01"));
	Элементы.Счет71.СписокВыбора.Добавить(сабОбщегоНазначенияБУХ.ПолучитьСчетПоКоду("71.02"));
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Счет71 = Элементы.Счет71.СписокВыбора[0].Значение;	
	КонецЕсли;
	
	ВестиУчетНДС = Объект.Предприятие.УчетнаяПолитика.УчетНДС;
	Элементы.УчитыватьНДС.Видимость = ВестиУчетНДС;
	Элементы.СуммаВключаетНДС.Видимость = ВестиУчетНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Счет71ПриИзменении(Неопределено);
КонецПроцедуры
 
 &НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	ПересчитатьПоКурсуНаДату(Истина);

КонецПроцедуры
 
&НаСервере
Функция КоличествоСубконто(Счет)
	КолСубконто = Счет.ВидыСубконто.Количество();	
	Возврат КолСубконто;
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьКорСубконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет);
	Если Кол < 1 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	Если ТипЗнч(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1) = Тип("СправочникСсылка.Предприятия")  Тогда
		СтандартнаяОбработка = Ложь;
	    ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора",,Элемент);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ТабличнаяЧастьКорСубконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет);
	Если Кол < 2 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКорСубконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет);
	Если Кол < 3 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКорПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		БюджетныйНаКлиенте.НачалоВыбораПодразделения(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
	СчетПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Счет71ПриИзменении(Элемент)
	СчетПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СчетПриИзмененииНаСервере()
	
	ДанныеСчета = УправленческийУчетПовтИсп.ПолучитьСвойстваСчета(Объект.Счет71, Объект.Предприятие);
	
	Наименование1 = ДанныеСчета["ВидСубконто1Наименование"];
	Наименование2 = ДанныеСчета["ВидСубконто2Наименование"];
	Наименование3 = ДанныеСчета["ВидСубконто3Наименование"];
	УчетПоПодразделениям = ДанныеСчета["УчетПоПодразделениям"];
	
	Элементы.Сотрудник.Заголовок = Наименование1;
	Элементы.Субконто2.Заголовок = Наименование2;
	Элементы.Субконто3.Заголовок = Наименование3;
	
	Элементы.Сотрудник.ПодсказкаВвода = Наименование1;
	Элементы.Субконто2.ПодсказкаВвода = Наименование2;
	Элементы.Субконто3.ПодсказкаВвода = Наименование3;
	Элементы.ВидДеятельности.ПодсказкаВвода = ?(УчетПоПодразделениям, ДанныеСчета.СинонимПодразделения, "");
	
	Элементы.Сотрудник.Видимость = ЗначениеЗаполнено(Наименование1);
	Элементы.Субконто2.Видимость = ЗначениеЗаполнено(Наименование2);
	Элементы.Субконто3.Видимость = ЗначениеЗаполнено(Наименование3);
	Элементы.ВидДеятельности.Видимость = УчетПоПодразделениям;
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьКорСчетПриИзменении(Элемент)
	//ПараметрВыбораЗатратыПоРеал = Новый ПараметрВыбора("Отбор.Родитель", ЗатратыПоРеализации());
	//Если Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет = Счет90_3() Тогда
	//	ПараметрыВыбораСтатьи = УЧ_Сервер.ПолучитьПараметрыВыбораСтатьиЗатрат(Объект.Предприятие, Элементы.ТабличнаяЧастьКорСубконто2.ПараметрыВыбора);
	//	Элементы.ТабличнаяЧастьКорСубконто2.ПараметрыВыбора = ПараметрыВыбораСтатьи
	//Иначе
	//	Если Элементы.ТабличнаяЧастьКорСубконто2.ПараметрыВыбора.Найти(ПараметрВыбораЗатратыПоРеал) <> Неопределено Тогда
	//		МассивПараметровВыбораБезРодителя = Новый Массив;
	//		Для Каждого Элемент Из Элементы.ТабличнаяЧастьКорСубконто2.ПараметрыВыбора Цикл
	//			Если Элемент = ПараметрВыбораЗатратыПоРеал Тогда
	//				Продолжить
	//			КонецЕсли;
	//			МассивПараметровВыбораБезРодителя.Добавить(Элемент);
	//		КонецЦикла;
	//		ПараметрыВыбораБезРодителя = Новый ФиксированныйМассив(МассивПараметровВыбораБезРодителя);
	//		Элементы.ТабличнаяЧастьКорСубконто2.ПараметрыВыбора = ПараметрыВыбораБезРодителя;
	//	КонецЕсли;	
	//КонецЕсли;
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3, Количество, Валюта, ВалютнаяСумма, Предприятие, КорСчет79, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение, Субконто2ВладелецРазличен, ЭлементСубконто2БезВладельца, ВалютаТолькоДенежныйСчет, ЕстьРасшифровкаСуммы",
	"КорСубконто1", "КорСубконто2", "КорСубконто3", "Количество", "Валюта", "ВалСумма", Объект.Предприятие, Ложь, "Подразделение", Элементы, "ТабличнаяЧастьКорСубконто1", "ТабличнаяЧастьКорСубконто2", "ТабличнаяЧастьКорСубконто3", "ПодразделениеКт", "КорСубконто2ВладелецРазличен", "ТабличнаяЧастьКорСубконто2БезВладельца", Истина, Истина);
	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.ТабличнаяЧасть.ТекущиеДанные, ПоляОбъекта);
	
	Если Не Элементы.ТабличнаяЧасть.ТекущиеДанные.ВалютаДоступность Тогда
		Элементы.ТабличнаяЧасть.ТекущиеДанные.Валюта = "";
		Элементы.ТабличнаяЧасть.ТекущиеДанные.ВалютнаяСумма = 0;
	КонецЕсли;
	
	//УстановитьСвязиПараметровВыбораДляТекущегоСчета(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет);
КонецПроцедуры

&НаСервереБезКонтекста
Функция Счет90_3()
	Возврат ПланыСчетов.Учетный.Счет9003();
КонецФункции

&НаСервереБезКонтекста
Функция ЗатратыПоРеализации()
	Возврат Справочники.СтатьиЗатрат.ЗатратыРеализация
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьКорСубконто1ПриИзменении(Элемент)
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.ТипСписания = ПредопределенноеЗначение("Перечисление.сабТипыНоменклатуры.Материалы") Тогда
		ТекКорСчет = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1, "Счет10"); 
		Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет = ?(ЗначениеЗаполнено(ТекКорСчет), ТекКорСчет, УЧ_Сервер.СчетПоКоду("10.05"));	
		ТабличнаяЧастьКорСчетПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораДляТекущегоСчета(Счет)
	Если Счет.ВидыСубконто.Количество() > 1 Тогда
		УЧ_Сервер.УстановитьСвязиМеждуСубконтоСчета(ЭтаФорма, Счет, 0, "Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1", "ТабличнаяЧастьКорСубконто2");
	КонецЕсли;
	
	Если Счет.ВидыСубконто.Количество() > 2 Тогда
		УЧ_Сервер.УстановитьСвязиМеждуСубконтоСчета(ЭтаФорма, Счет, 1, "Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1", "ТабличнаяЧастьКорСубконто3");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Пересчитать", Объект.Ссылка);
	Оповестить("ОповеститьРегистрОбработанных", Новый Структура("ДокументУУ, ДокументБУ", Объект.Ссылка, ?(БюджетныйНаКлиенте.ЕстьСвойствоОбъекта(ЭтаФорма, "ДокументБУ"), ЭтаФорма.ДокументБУ, Неопределено)));	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

#Область ВалютныеПроцедурыИФункции

&НаКлиенте
Процедура ТабличнаяЧастьВалютаПриИзменении(Элемент)
	
	ВалютаПроекта = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "ОсновнаяВалютаУчета");
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	ТекСтрока.Курс = УЧ_Сервер.ПолучитьКурсВалют(ТекСтрока.Валюта, ВалютаПроекта, Объект.Дата);
	ТабличнаяЧастьКурсПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКурсПриИзменении(Элемент)

	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если ТекСтрока.Курс <> 0 Тогда
		
		Если ТекСтрока.Сумма = 0 И ТекСтрока.ВалютнаяСумма <> 0 Тогда
			ТекСтрока.Сумма = ТекСтрока.ВалютнаяСумма * ТекСтрока.Курс;
		Иначе
			ТекСтрока.ВалютнаяСумма = ТекСтрока.Сумма / ТекСтрока.Курс; 
		КонецЕсли;
		
	Иначе
		ТекСтрока.ВалютнаяСумма = 0;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если ТекСтрока.Сумма <> 0 Тогда
		
		Если ТекСтрока.ВалютнаяСумма = 0 Тогда
			ТекСтрока.ВалютнаяСумма = ?(ТекСтрока.Курс, ТекСтрока.Сумма / ТекСтрока.Курс, 0);
		Иначе
			ТекСтрока.Курс = ?(ТекСтрока.ВалютнаяСумма, ТекСтрока.Сумма / ТекСтрока.ВалютнаяСумма, 0); 
		КонецЕсли;	
			
	Иначе
		ТекСтрока.ВалютнаяСумма = 0;
	КонецЕсли;
	
	ТекКоличество = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.Цена = ?(ТекКоличество <> 0, Элементы.ТабличнаяЧасть.ТекущиеДанные.Сумма / ТекКоличество, 0);
	//РассчитатьСумму();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВалютнаяСуммаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	
	Если ТекСтрока.ВалютнаяСумма <> 0 Тогда
		
		Если ТекСтрока.Сумма = 0 Тогда
			ТекСтрока.Сумма = ТекСтрока.ВалютнаяСумма * ТекСтрока.Курс;
		Иначе
			ТекСтрока.Курс = ТекСтрока.Сумма / ТекСтрока.ВалютнаяСумма; 
		КонецЕсли;	
			
	Иначе
		ТекСтрока.Сумма = 0;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПоКурсуНаДату(Команда)
	
	ВалютаПроекта = БюджетныйНаСервере.ВернутьРеквизит(Объект.Предприятие, "ОсновнаяВалютаУчета");
	
	Для Каждого ТекСтрока Из Объект.ТабличнаяЧасть Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Валюта) Тогда
			ТекСтрока.Курс = УЧ_Сервер.ПолучитьКурсВалют(ТекСтрока.Валюта, ВалютаПроекта, Объект.Дата); 
			
			Если ТекСтрока.Курс <> 0 Тогда
				
				Если ТекСтрока.Сумма = 0 И ТекСтрока.ВалютнаяСумма <> 0 Тогда
					ТекСтрока.Сумма = ТекСтрока.ВалютнаяСумма * ТекСтрока.Курс;
				Иначе
					ТекСтрока.ВалютнаяСумма = ТекСтрока.Сумма / ТекСтрока.Курс; 
				КонецЕсли;
				
			Иначе
				ТекСтрока.ВалютнаяСумма = 0;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Если Не ЗначениеЗаполнено(Элементы.ТабличнаяЧасть.ТекущиеДанные.ТипСписания) Тогда
			Элементы.ТабличнаяЧасть.ТекущиеДанные.ТипСписания = ПредопределенноеЗначение("Перечисление.сабТипыНоменклатуры.Материалы");
			ТабличнаяЧастьТипСписанияПриИзменении(Неопределено);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьТипСписанияПриИзменении(Элемент)
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.ТипСписания = ПредопределенноеЗначение("Перечисление.сабТипыНоменклатуры.Материалы") Тогда
		Если ЗначениеЗаполнено(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1) И ТипЗнч(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТекКорСчет = БюджетныйНаСервере.ВернутьРеквизит(Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСубконто1, "Счет10"); 
			Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет = ?(ЗначениеЗаполнено(ТекКорСчет), ТекКорСчет, УЧ_Сервер.СчетПоКоду("10.05"));
		Иначе	
			Элементы.ТабличнаяЧасть.ТекущиеДанные.КорСчет = сабОбщегоНазначенияБУХ.ПолучитьСчетПоКоду("10.05");
		КонецЕсли;
		ТабличнаяЧастьКорСчетПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(ТекДанные = Неопределено, ИмяТЧ = Неопределено)
	
	Если ТекДанные = Неопределено Тогда
		ТекДанные = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	КонецЕсли;
	Если ИмяТч = Неопределено Тогда
		ИмяТЧ = "ТабличнаяЧасть";
	КонецЕсли;
	
	Если Не ТекДанные = Неопределено Тогда
		ТекДанные.Сумма = ТекДанные.Количество * ТекДанные.Цена;
		ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, ИмяТЧ);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ТабличнаяЧастьЦенаПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры


&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	//Если НЕ Элементы.ТабличнаяЧасть.ТекущиеДанные = Неопределено Тогда
	//	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3, Количество, Валюта, ВалютнаяСумма, Предприятие, КорСчет79, Подразделение, Элементы, ЭлементСубконто1, ЭлементСубконто2, ЭлементСубконто3, ЭлементПодразделение",
	//	"КорСубконто1", "КорСубконто2", "КорСубконто3", "Количество", "Валюта", "ВалСумма", Объект.Предприятие, Ложь, "Подразделение", Элементы, "ТабличнаяЧастьКорСубконто1", "ТабличнаяЧастьКорСубконто2", "ТабличнаяЧастьКорСубконто3", "ПодразделениеКт");
	//	БюджетныйНаКлиенте.УстановитьДоступность(Элементы.ТабличнаяЧасть.ТекущиеДанные, ПоляОбъекта);
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДобавленныеКолонкиТаблиц();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Табл.КорСчет КАК Счет
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&Табл КАК Табл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Учетный.Количественный КАК Количественный,
	               |	Учетный.Ссылка КАК Счет,
	               |	Учетный.Валютный КАК Валютный,
	               |	Учетный.УчетПоПодразделениям КАК УчетПоПодразделениям
	               |ИЗ
	               |	Врем КАК Врем
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Учетный КАК Учетный
	               |		ПО Врем.Счет = Учетный.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Учетный.Ссылка,
	               |	Учетный.Количественный,
	               |	Учетный.Валютный,
	               |	Учетный.УчетПоПодразделениям";
	
	Запрос.УстановитьПараметр("Табл", Объект.ТабличнаяЧасть.Выгрузить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Соотв = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соотв.Вставить(Выборка.Счет, Новый Структура("Количественный, Валютный, УчетПоПодразделениям, КоличествоСубконто", Выборка.Количественный, Выборка.Валютный, Выборка.УчетПоПодразделениям, Выборка.Счет.ВидыСубконто.Количество())); 		
	КонецЦикла;
	
	
	Для Каждого СтрокаТаблицы Из Объект.ТабличнаяЧасть Цикл
		СчетВидыСубконто = СтрокаТаблицы.КорСчет.ВидыСубконто;
		СтруСчета = Соотв.Получить(СтрокаТаблицы.Корсчет);
		КоличествоСубконто   = СтруСчета.КоличествоСубконто;
		Для Индекс = 1 По 3 Цикл
			СтрокаТаблицы["КорСубконто"   + Индекс + "Доступность"] = (Индекс <= КоличествоСубконто);
			
			//проверка владельца субконто2
			Если Индекс = 2 И КоличествоСубконто > 1 Тогда
				ВладелецРазличен = Истина;
				Для каждого ТипСубконто2 Из СчетВидыСубконто[Индекс - 1].ВидСубконто.ТипЗначения.Типы() Цикл
					Если ТипСубконто2 = ТипЗнч("Строка") Тогда
						Продолжить;				
					КонецЕсли;
					СубСсылка2 = Новый(ТипСубконто2);
					ЕстьВладелец = Ложь;
					Для каждого ТекСтандРекв Из СубСсылка2.Метаданные().СтандартныеРеквизиты Цикл
						Если ТекСтандРекв.Имя = "Владелец" Тогда
							ЕстьВладелец = Истина;
						КонецЕсли;
					КонецЦикла;
					Если ЕстьВладелец Тогда
						ТипыРеквВладельца = СубСсылка2.Метаданные().СтандартныеРеквизиты.Владелец.Тип.Типы();
						Для каждого ТипРеквВладельца Из ТипыРеквВладельца Цикл
							СубСсылкаВладельца = Новый(ТипРеквВладельца);
							Для каждого ТипСубконто1 Из СчетВидыСубконто[Индекс - 2].ВидСубконто.ТипЗначения.Типы() Цикл
								СубСсылка1 = Новый(ТипСубконто1);
								Если ТипЗнч(СубСсылкаВладельца) = ТипЗнч(СубСсылка1) Тогда
									ВладелецРазличен = Ложь;
								КонецЕсли;
							КонецЦикла;					
						КонецЦикла; 
					КонецЕсли;
				КонецЦикла;
				СтрокаТаблицы["КорСубконто" + Индекс + "ВладелецРазличен"] = ВладелецРазличен;
			КонецЕсли;
			
		КонецЦикла;
		СтрокаТаблицы["Количество"   + "Доступность"] = СтруСчета.Количественный;
		СтрокаТаблицы["Подразделение"   + "Доступность"] = СтруСчета.УчетПоПодразделениям;
		Валютный = СтруСчета.Валютный;
		СтрокаТаблицы["Валюта"   + "Доступность"] = Валютный;
		СтрокаТаблицы["ВалСумма"   + "Доступность"] = Валютный;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВидДеятельностиПриИзмененииНаСервере()

	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		РеквизитыПодразделения = БюджетныйНаСервере.ВернутьРеквизиты(Объект.Подразделение, "Организация");
		Объект.Организация = РеквизитыПодразделения.Организация;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДеятельностиПриИзменении(Элемент)
	ВидДеятельностиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПровереноПоУчету(Команда)
	Элементы.КомандаПроверено.Пометка = НЕ Элементы.КомандаПроверено.Пометка;
	Если Элементы.КомандаПроверено.Пометка Тогда
		БюджетныйНаСервере.УстановитьПроверкуДокумента(Объект.Ссылка, Истина);
	Иначе
		БюджетныйНаСервере.УдалитьПроверкуДокумента(Объект.Ссылка, Истина);
	КонецЕсли;
	ОповеститьОбИзменении(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФормуУч_Операция" И Параметр = Объект.Ссылка Тогда
		ЭтаФорма.Прочитать();
		ОбновитьОтображениеДанных();
	ИначеЕсли ИмяСобытия = "Запись_Файл" Тогда
		Если Параметр.Свойство("ФормаВладелецУИД") И Параметр.ФормаВладелецУИД = ЭтаФорма.УникальныйИдентификатор Тогда
			сабОбщегоНазначения.ПрикрепитьФайлКДокументу(Параметр); 
		КонецЕсли
	КонецЕсли;	

КонецПроцедуры

#Область КомандыИзменения

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти
