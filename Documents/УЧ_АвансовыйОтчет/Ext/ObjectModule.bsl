
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если РучнаяКорректировка Тогда		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Движения документа %1 отредактированы вручную и не могут быть автоматически актуализированы'"), ЭтотОбъект);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = Ссылка;
		Сообщение.Сообщить();		
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Движения.Учетный.Записывать = Истина;
	//Движения.Стр_ФактПоОбъекту.Записывать = Истина;
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТабличнаяЧасть Цикл
		
		Движение = Движения.Учетный.Добавить();
		Движение.Период = Дата;
		Движение.Предприятия = Предприятие;
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		Движение.СчетКт = Счет71;
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,1,Сотрудник);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,2,Субконто2);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт,Движение.СчетКт,3,Субконто3);
		
		Движение.СчетДт = ТекСтрокаТабличнаяЧасть.КорСчет;
		Если ТекСтрокаТабличнаяЧасть.КорСчет.УчетПоПодразделениям Тогда
			Если ПустаяСтрока(ТекСтрокаТабличнаяЧасть.КорПодразделение) Тогда
				Движение.ПодразделениеДт = Подразделение;
			Иначе
				Движение.ПодразделениеДт = ТекСтрокаТабличнаяЧасть.КорПодразделение;
			КонецЕсли;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,ТекСтрокаТабличнаяЧасть.КорСчет,1,ТекСтрокаТабличнаяЧасть.КорСубконто1);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,ТекСтрокаТабличнаяЧасть.КорСчет,2,ТекСтрокаТабличнаяЧасть.КорСубконто2);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт,ТекСтрокаТабличнаяЧасть.КорСчет,3,ТекСтрокаТабличнаяЧасть.КорСубконто3);
		Если ТекСтрокаТабличнаяЧасть.КорСчет.Количественный Тогда
			Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество;
		КонецЕсли;
		Движение.Сумма = ТекСтрокаТабличнаяЧасть.Сумма;
		
		// валютная сумма {
		Если ТекСтрокаТабличнаяЧасть.КорСчет.Валютный И (УЧ_Сервер.ДенежныйСчет(ТекСтрокаТабличнаяЧасть.КорСчет) ИЛИ Предприятие.ВедетсяВалютныйУчет) Тогда
			Движение.ВалютаДт = ТекСтрокаТабличнаяЧасть.Валюта;
			Движение.ВалютнаяСуммаДт = ТекСтрокаТабличнаяЧасть.ВалютнаяСумма;
		КонецЕсли;
		//}
		
		Движение.Содержание = ?(ТекСтрокаТабличнаяЧасть.Содержание = "", Комментарий, ?(Комментарий = "", "", ТекСтрокаТабличнаяЧасть.Содержание + Символы.ПС + Комментарий));
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаИтог = ТабличнаяЧасть.Итог("Сумма");
	СуммаДокумента = ТабличнаяЧасть.Итог("Сумма");
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

//подбор статьи затрат по статье ДДС
Функция ВозвратСтатьиЗатрат(СтатьяБДДС)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.СтатьяБДДС = &СтатьяБДДС";
	
	Запрос.УстановитьПараметр("СтатьяБДДС", СтатьяБДДС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Возврат Выборка.Ссылка;	
		
	КонецЦикла;
	
	
	Возврат Неопределено	
	
КонецФункции // ()


Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	
	РучнаяКорректировка = Ложь;
	
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Д_ЗаявкаНаАвансовыйОтчет") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СогласованиеОбщее.Ссылка
		|ИЗ
		|	Справочник.СогласованиеОбщее КАК СогласованиеОбщее
		|ГДЕ
		|	СогласованиеОбщее.Заявка = &Заявка";
		
		Запрос.УстановитьПараметр("Заявка", ДанныеЗаполнения.Ссылка);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		НаИсполнении = Ложь;
		
		Пока Выборка.Следующий() Цикл
		
			НаИсполнении = БПСервер.СтадияИсполненияОбщая(Выборка.Ссылка);	
		
		КонецЦикла;
		
		Если НЕ НаИсполнении Тогда
			Сообщить("Заявка на авансовый не согласована. Создание авансового отчета невозможно.");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	УЧ_АвансовыйОтчет.Ссылка
		|ИЗ
		|	Документ.УЧ_АвансовыйОтчет КАК УЧ_АвансовыйОтчет
		|ГДЕ
		|	УЧ_АвансовыйОтчет.ДокОснование = &ДокОснование";
		
		Запрос.УстановитьПараметр("ДокОснование", ДанныеЗаполнения);
		
		Результат = Запрос.Выполнить();
		Если Результат.Выбрать().Количество() Тогда
			Сообщить("Вы уже создавали авансовый по данной заявке.");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли; 
				
				
		Сотрудник = ДанныеЗаполнения.ПодотчетноеЛицо;
		Описание = ДанныеЗаполнения.Комментарий;
		ДатаПолучения = ДанныеЗаполнения.ДатаПолучения;
		СуммаПолученная = ДанныеЗаполнения.ПолученоПодОтчет;
		// закомментированно 11.01.2016 по запросу оператора казны
		//Если НЕ ПараметрыСеанса.ДоступныеПредприятия.Найти(Справочники.Предприятия.Казна) = Неопределено Тогда
		//    Предприятие = Справочники.Предприятия.Казна;                               
		//Иначе	
			Предприятие = ДанныеЗаполнения.Предприятие;
		//КонецЕсли;
		ДокОснование = ДанныеЗаполнения.Ссылка;
		Для каждого ТекСтрока Из ДанныеЗаполнения.Затраты Цикл
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.ТипСписания = Перечисления.сабТипыНоменклатуры.Прочее;
			Если Предприятие = ТекСтрока.Предприятие Тогда //если затраты идут на предприятия, по которому был взят подотчет
				НоваяСтрока.КорСчет = ПланыСчетов.Учетный.Счет25();
				НоваяСтрока.КорСубконто1 = ВозвратСтатьиЗатрат(ТекСтрока.Статья);
			Иначе //если затраты идут на другое предприятие
				НоваяСтрока.КорСчет = ПланыСчетов.Учетный.Счет7901();
				НоваяСтрока.КорСубконто1 = ТекСтрока.Предприятие; 
			КонецЕсли;
			НоваяСтрока.Содержание = ТекСтрока.Описание;
		КонецЦикла;
		//ВозвратДенежныхСредств = ДанныеЗаполнения.ВозвратДенежныхСредств;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ДвижениеДС") Тогда
		
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка);
		Если Отказ.Признак = "##УжеСоздан" Тогда
			ВызватьИсключение "На основании Движения денежных средств (упр) уже введен документ " + Отказ.Ссылка;
		ИначеЕсли Отказ.Признак = "##НеПроведен" Тогда
			ВызватьИсключение "Документ Движения денежных средств (упр) не проведен. Ввод на основании не возможен.";
		КонецЕсли;
		
		Сотрудник = ДанныеЗаполнения.Контрагент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Предприятие = ДанныеЗаполнения.Предприятие;
		Если Константы.УЧ_ВНХМодуль.Получить() Тогда
			Если ДанныеЗаполнения.Проводки.Количество() = 1 И ЗначениеЗаполнено(ДанныеЗаполнения.Проводки[0].ФинЦФО) Тогда
				Предприятие = ДанныеЗаполнения.Проводки[0].ФинЦФО;
				Подразделение = ДанныеЗаполнения.Проводки[0].ФинПодразделение;
			КонецЕсли;
		КонецЕсли;
		Подразделение = ДанныеЗаполнения.Подразделение;
		СуммаПолученная = ДанныеЗаполнения.СуммаДокумента;
		ДатаПолучения = ДанныеЗаполнения.Дата;
		ДокОснование = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры
