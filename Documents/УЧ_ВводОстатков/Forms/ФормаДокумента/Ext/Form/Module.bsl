&НаСервере
Функция КоличествоСубконто(Счет)
	КолСубконто = Счет.ВидыСубконто.Количество();	
	Возврат КолСубконто;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
			 
КонецПроцедуры

&НаСервере
Функция НайтиКодСчета(КодСчета)
	Код = ПланыСчетов.Учетный.НайтиПоКоду(Строка(КодСчета)); 
	Если ПустаяСтрока(Код) Тогда
		Сообщить("Счет " + Строка(КодСчета) + " не найден!");
	КонецЕсли; 
	Возврат Код;
КонецФункции

&НаСервере
Функция ПроверитьКолич(КодСчета)
	Возврат КодСчета.Количественный;
КонецФункции

&НаСервере
Функция НайтиСтатьюСС(КодСтатьи)
	Статья = Справочники.СтатьиЗатрат.НайтиПоКоду(КодСтатьи); 
	Если ПустаяСтрока(Статья) Тогда
		Сообщить("Статья с кодом " + Строка(КодСтатьи) + " не найдена!");
	КонецЕсли; 
	Возврат Статья;
КонецФункции

&НаСервере
Функция ДобавитьЭлементСпр(Счет, ТипСпр, Наименование,ИнвНомер, ДатаДоговора,Владелец = Неопределено, Родитель1 = Неопределено, Родитель2 = Неопределено, ЭтоГруппа = Ложь, НаправлениеДеятельности = "")
	Если ПустаяСтрока(СокрЛП(Наименование)) Тогда
		Возврат "";	
	КонецЕсли;
	
	Предприятие = Объект.Предприятие;
		
	Запрос = Новый Запрос;
	Если ТипСпр = "Сотрудники" ИЛИ ТипСпр = "стр_СамостоятельныеЧастиОбъекта" Тогда
		Если ЗначениеЗаполнено(ИнвНомер) Тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	Материалы1.Ссылка
			|ИЗ
			|	Справочник." + ТипСпр + " КАК Материалы1
			|ГДЕ
			|	Материалы1.Наименование = &Наименование
			|	И Материалы1.СтраховойНомерПФР = &ИнвНомер";
		Иначе	
			Запрос.Текст = "ВЫБРАТЬ
			|	Материалы1.Ссылка
			|ИЗ
			|	Справочник." + ТипСпр + " КАК Материалы1
			|ГДЕ
			|	Материалы1.Наименование = &Наименование";
		КонецЕсли;
	ИначеЕсли ТипСпр = "Контрагенты" Тогда
		//Если ЗначениеЗаполнено(ИнвНомер) Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	Материалы1.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.Контрагенты КАК Материалы1
			               |ГДЕ
			               |	ВЫБОР
			               |			КОГДА &ИнвНомер = """"
			               |				ТОГДА Материалы1.Наименование = &Наименование
			               |			ИНАЧЕ Материалы1.ИНН = &ИнвНомер
			               |					И ВЫБОР
			               |						КОГДА &КПП = """"
			               |							ТОГДА ИСТИНА
			               |						ИНАЧЕ Материалы1.КПП = &КПП
			               |					КОНЕЦ
			               |		КОНЕЦ";
		//Иначе	
		//	Запрос.Текст = "ВЫБРАТЬ
		//	|	Материалы1.Ссылка
		//	|ИЗ
		//	|	Справочник." + ТипСпр + " КАК Материалы1
		//	|ГДЕ
		//	|	Материалы1.Наименование = &Наименование";
		//КонецЕсли;
	ИначеЕсли ТипСпр = "ДоговорыКонтрагентов" Или ТипСпр = "ВерхиКонтрагентов" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Предприятие = &Предприятие
		|	И Материалы1.Наименование = &Наименование
		|	И Материалы1.Владелец = &Владелец";
	ИначеЕсли ТипСпр = "Стр_Задачи" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Код = &Код";
	ИначеЕсли (ТипСпр = "Номенклатура") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Материалы1
		|ГДЕ
		|	Материалы1.НомерЯр = &ИнвНомер
		|	И Материалы1.Наименование = &Наименование";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Материалы1.Ссылка
		|ИЗ
		|	Справочник." + ТипСпр + " КАК Материалы1
		|ГДЕ
		|	Материалы1.Наименование = &Наименование";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ИнвНомер", ИнвНомер);
	Запрос.УстановитьПараметр("КПП", ДатаДоговора);
	Запрос.УстановитьПараметр("Код", Наименование);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		УжеСуществует = Выборка.Ссылка;
		Если ТипСпр = "Контрагенты" Тогда
			ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ОтобранныеСтроки = ТекОбъект.Предприятия.НайтиСтроки(Новый Структура("Предприятие", Предприятие));
			Если НЕ ОтобранныеСтроки.Количество() Тогда
				НоваяСтрока = ТекОбъект.Предприятия.Добавить();
				НоваяСтрока.Предприятие = Предприятие;
				ТекОбъект.Записать();
			КонецЕсли;
		КонецЕсли;
		Если ТипСпр = "Номенклатура" Тогда 
			ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ЗначениеЗаполнено(Родитель1) Тогда
				ТекОбъект.Родитель = ДобавитьЭлементСпр(ТипСпр, Родитель1, ИнвНомер, ДатаДоговора, Владелец, Родитель2, , Истина);
			КонецЕсли;
			//Если ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
			//	ТекОбъект.НаправлениеДеятельности = Справочники.НаправленияДеятельности.НайтиПоНаименованию(НаправлениеДеятельности, Истина);
			//КонецЕсли;	
			ТекОбъект.Записать();
		КонецЕсли;	
	иначе
		//ГруппаБюджет = Справочники[ТипСпр].НайтиПоНаименованию("Бюджет", 1);
		Если ТипСпр = "Номенклатура" И ЭтоГруппа Тогда 
			НовыйЭлемент = Справочники[ТипСпр].СоздатьГруппу();
		Иначе		
			НовыйЭлемент = Справочники[ТипСпр].СоздатьЭлемент();
		КонецЕсли;
		//НовыйЭлемент.Родитель = ГруппаБюджет;
		НовыйЭлемент.Наименование = Наименование;
		Если НЕ ТипСпр = "Сотрудники" И НЕ ТипСпр = "Контрагенты" И НЕ ТипСпр = "ДоговорыКонтрагентов" И Не ТипСпр = "ВерхиКонтрагентов"Тогда
			Если ТипСпр = "Номенклатура" Тогда
				НовСтрокаПредпр = НовыйЭлемент.ПредприятияНоменклатуры.Добавить();
				НовСтрокаПредпр.Предприятие = Предприятие;
			Иначе
				НовыйЭлемент.Предприятие = Предприятие;
			КонецЕсли;	
		ИначеЕсли ТипСпр = "ДоговорыКонтрагентов" Или ТипСпр = "ВерхиКонтрагентов" Тогда
			НовыйЭлемент.Предприятие = Предприятие;
			НовыйЭлемент.Владелец = Владелец;
		Иначе
			НоваяСтрока = НовыйЭлемент.Предприятия.Добавить();
			НоваяСтрока.Предприятие = Предприятие;
			Если ТипСпр = "Контрагенты" И ЗначениеЗаполнено(ИнвНомер) Тогда
				НовыйЭлемент.ИНН = ИнвНомер;
			КонецЕсли;
			Если ТипСпр = "Контрагенты" И ЗначениеЗаполнено(ДатаДоговора) Тогда
				НовыйЭлемент.КПП = ДатаДоговора;
			КонецЕсли;	
			Если ТипСпр = "Контрагенты" И ЗначениеЗаполнено(Родитель1) Тогда
				НовыйЭлемент.КПП = Родитель1;
			КонецЕсли;	
			Если ТипСпр = "Контрагенты" И ЗначениеЗаполнено(Родитель2) Тогда
				НовыйЭлемент.НаименованиеПолное = Родитель2;
			КонецЕсли;	
		КонецЕсли;
		Если ТипСпр = "Номенклатура" Или ТипСпр = "Материалы"  Или ТипСпр = "Товары"  Или ТипСпр = "ГотоваяПродукция" Тогда 
			Если ЗначениеЗаполнено(Родитель1) Тогда
				НовыйЭлемент.Родитель = ДобавитьЭлементСпр(ТипСпр, Родитель1, ИнвНомер, ДатаДоговора, Владелец, Родитель2, , Истина);
			КонецЕсли;
			Если Счет = "41" Тогда
				НовыйЭлемент.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
			ИначеЕсли Счет = "43" Тогда
				НовыйЭлемент.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ОсновнаяПродукция;
			Иначе
				НовыйЭлемент.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Материалы;
			КонецЕсли;
			//Если ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
			//	НовыйЭлемент.НаправлениеДеятельности = Справочники.НаправленияДеятельности.НайтиПоНаименованию(НаправлениеДеятельности, Истина);
			//КонецЕсли;	
			//Если Предприятие.НаправлениеДеятельности = Водочное Тогда
			НовыйЭлемент.НомерЯр = ИнвНомер;
			НовыйЭлемент.Счет10 = ПланыСчетов.Учетный.НайтиПоКоду(Счет);
			
			Если ЗначениеЗаполнено(ДатаДоговора) Тогда
				ТекЕдИзм = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ДатаДоговора, Истина);
				Если Не ЗначениеЗаполнено(ДатаДоговора) Тогда
					НовТекИзм = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
					НовТекИзм.Наименование = ДатаДоговора;
					НовТекИзм.Записать();
					ТекЕдИзм = НовТекИзм.Ссылка;
				КонецЕсли;	
				НовыйЭлемент.ЕдиницаИзмерения = ТекЕдИзм;
			КонецЕсли;
			//КонецЕсли;	
			//Если Не ЗначениеЗаполнено(НовыйЭлемент.НаправлениеДеятельности) Тогда
			//	НовыйЭлемент.НаправлениеДеятельности = Предприятие.НаправлениеДеятельности;
			//КонецЕсли;	
		ИначеЕсли ТипСпр = "Сотрудники" Тогда
			ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Наименование), " ");
			КоличествоПодстрок = ФИО.Количество();
			Фамилия            = ?(КоличествоПодстрок > 0, ФИО[0], "");
			Имя                = ?(КоличествоПодстрок > 1, ФИО[1], "");
			Отчество           = ?(КоличествоПодстрок > 2, ФИО[2], "");
			НовыйЭлемент.Фамилия = Фамилия;
			НовыйЭлемент.Имя = Имя;
			НовыйЭлемент.Отчество = Отчество;
			Если ЗначениеЗаполнено(ИнвНомер) Тогда
				НовыйЭлемент.СтраховойНомерПФР = ИнвНомер;
			КонецЕсли;	
			Если ЗначениеЗаполнено(ДатаДоговора) Тогда
				СпрДолжности = Справочники.Д_Должности.НайтиПоНаименованию(ДатаДоговора, Истина);
				Если Не ЗначениеЗаполнено(СпрДолжности) Тогда
					НовСпрДолжности = Справочники.Д_Должности.СоздатьЭлемент();
					НовСпрДолжности.Наименование = ДатаДоговора;
					НовСпрДолжности.Записать();
					СпрДолжности = НовСпрДолжности.Ссылка;
				КонецЕсли;
				НовыйЭлемент.Должность = СпрДолжности;
			КонецЕсли;	
		КонецЕсли;	
		НовыйЭлемент.Записать();
		УжеСуществует = НовыйЭлемент.Ссылка;
		//ДобавитьМатериал(Наименование, Предприятие);
		Сообщить(ТипСпр + " " + Строка(Наименование) + " создан!");
	КонецЕсли;
	Если ТипСпр = "ОсновныеСредства" И НЕ ПустаяСтрока(СокрЛП(ИнвНомер)) Тогда
		ОСОбъект = УжеСуществует.ПолучитьОбъект();
		ОСОбъект.ИнвентарныйНомер = ИнвНомер;
		ОСОбъект.Записать();
	КонецЕсли;
	
	Если ТипСпр = "ДоговорыКонтрагентов" И НЕ ПустаяСтрока(СокрЛП(ДатаДоговора)) Тогда
		ДогОбъект = УжеСуществует.ПолучитьОбъект();
		ДогОбъект.ДатаДоговора = ДатаДоговора;
		ДогОбъект.Записать();
	КонецЕсли;
	
	Возврат УжеСуществует;
КонецФункции

&НаСервере
Функция ВернутьДебет()
	возврат Перечисления.Д_ДтКт.Дебет;
КонецФункции // ()

&НаСервере
Функция ВернутьКредит()
	возврат Перечисления.Д_ДтКт.Кредит;
КонецФункции // ()

&НаСервереБезКонтекста
Функция ВернутьПодразделение(Код)
	
	Возврат Справочники.СтруктураПредприятия.НайтиПоКоду(Код);
	
КонецФункции

&НаКлиенте
Процедура СинхронизироватьОстатки(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Предприятие) Тогда
		Предупреждение("Укажите предприятие!");
		Возврат;	
	КонецЕсли;
	ЧислоСтрок = 0;
	ВвестиЧисло(ЧислоСтрок, "Введите число строк:"); 
	
	Сч10 = Новый Массив;
	Сч10.Добавить("10.01");
	Сч10.Добавить("10.02");
	Сч10.Добавить("10.03");
	Сч10.Добавить("10.04");
	Сч10.Добавить("10.05");
	Сч10.Добавить("10.06");
	Сч10.Добавить("10.07");
	Сч10.Добавить("10.011");
	Сч10.Добавить("10.08");
	Сч10.Добавить("10.09");
	Сч10.Добавить("10.11");
	Сч10.Добавить("10.11.02");
	Сч10.Добавить("007");
	
	
	
	ПутьКФайлу = БюджетныйНаКлиенте.ВыбратьФайлExcel();
	

	Если НЕ ПутьКФайлу = Неопределено Тогда
		
		XLSОбъект = Новый COMОбъект("Excel.Application");
		XLSОбъект.Visible       = Ложь;
		XLSОбъект.DisplayAlerts = Ложь;
		
		Попытка
			Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
		Исключение
			Сообщить ("Проблемы с подключением к Excel" );
		КонецПопытки;
		
		Лист = Book.Sheets(1);
		
		Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(ЧислоСтрок + 1,16));	
		Данные = Область.Value.Выгрузить();
		КоличествоСтраниц = 1;
		
		Для ТекНомер = 1 По КоличествоСтраниц Цикл
			счСтроки = 2;
			Для  счСтроки = 0 По ЧислоСтрок - 1 Цикл
				Состояние("Загрузка", счСтроки / ЧислоСтрок * 100);
				
				Счет = СокрЛП(Строка(Данные[0][счСтроки]));
				Признак = СокрЛП(Строка(Данные[1][счСтроки]));
				Субкотно1 = СокрЛП(Строка(Данные[2][счСтроки]));
				Субкотно2 = СокрЛП(Строка(Данные[3][счСтроки]));
				Субкотно3 = СокрЛП(Строка(Данные[4][счСтроки]));
				МОЛ = СокрЛП(Строка(Данные[8][счСтроки]));
				ИнвНом = СокрЛП(Строка(Данные[9][счСтроки]));
				ДатаДоговора = СокрЛП(Строка(Данные[10][счСтроки]));
				Родитель1 = СокрЛП(Строка(Данные[11][счСтроки]));
				Родитель2 = СокрЛП(Строка(Данные[12][счСтроки]));
				НаправлениеДеятельности = СокрЛП(Строка(Данные[13][счСтроки]));
				ПодразделениеКод = СокрЛП(Строка(Данные[14][счСтроки]));
				
				СтруктураСтроки = Новый Структура;
								
				Если НЕ Сч10.Найти(Счет) = Неопределено Тогда
					Если Счет = "10.11.02" Тогда
						СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,СтрЗаменить(ИнвНом, Символы.НПП , ""),ДатаДоговора,,,,,НаправлениеДеятельности));
						СтруктураСтроки.Вставить("Субконто2" ,ДобавитьЭлементСпр(Счет, "Сотрудники", Субкотно2,,));
					ИначеЕсли Счет = "10.08" Тогда
						СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,СтрЗаменить(ИнвНом, Символы.НПП , ""),ДатаДоговора,,,,,НаправлениеДеятельности));
						Контрагент = ДобавитьЭлементСпр(Счет, "Контрагенты", Субкотно2,СтрЗаменить(МОЛ, Символы.НПП , ""),,,СтрЗаменить(Родитель1, Символы.НПП , ""), СтрЗаменить(Родитель2, Символы.НПП , ""));
						СтруктураСтроки.Вставить("Субконто2" ,Контрагент);
						СтруктураСтроки.Вставить("Субконто3" ,ДобавитьЭлементСпр(Счет, "ДоговорыКонтрагентов", Субкотно3,,ДатаДоговора,Контрагент));
					Иначе
						СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,СтрЗаменить(ИнвНом, Символы.НПП , ""),ДатаДоговора,,,,,НаправлениеДеятельности));
						СтруктураСтроки.Вставить("Субконто2", ДобавитьЭлементСпр(Счет, "Склады", Субкотно2,,));				
						СтруктураСтроки.Вставить("Субконто3" ,ДобавитьЭлементСпр(Счет, "Сотрудники", Субкотно3,,));
					КонецЕсли;
				ИначеЕсли Счет = "41" Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,СтрЗаменить(ИнвНом, Символы.НПП , ""),,,Родитель1, Родитель2,,НаправлениеДеятельности));
					СтруктураСтроки.Вставить("Субконто2", ДобавитьЭлементСпр(Счет, "Склады", Субкотно2,,));
				ИначеЕсли Счет = "43" Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,СтрЗаменить(ИнвНом, Символы.НПП , ""),,,Родитель1, Родитель2,,НаправлениеДеятельности));
					СтруктураСтроки.Вставить("Субконто2", ДобавитьЭлементСпр(Счет, "Склады", Субкотно2,,));				
				ИначеЕсли Счет = "01" ИЛИ Счет = "02" Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "ОсновныеСредства", Субкотно1, ИнвНом,));
					СтруктураСтроки.Вставить("Субконто2", ДобавитьЭлементСпр(Счет, "Склады", Субкотно2,,));
					СтруктураСтроки.Вставить("МОЛ", ДобавитьЭлементСпр(Счет, "Сотрудники", МОЛ,,));
				ИначеЕсли Счет = "001"  Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "ОсновныеСредства", Субкотно1, ИнвНом,));
					СтруктураСтроки.Вставить("МОЛ", ДобавитьЭлементСпр(Счет, "Сотрудники", МОЛ,,));
				ИначеЕсли Счет = "003"  Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,,));
				ИначеЕсли Счет = "70" ИЛИ Счет = "71.01" ИЛИ Счет = "71.02" ИЛИ Счет = "71.03" Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Сотрудники", Субкотно1, СтрЗаменить(ИнвНом, Символы.НПП , ""), ДатаДоговора));
				ИначеЕсли Счет = "71.05" Тогда
					СтруктураСтроки.Вставить("Субконто1", ДобавитьЭлементСпр(Счет, "Сотрудники", Субкотно1, СтрЗаменить(ИнвНом, Символы.НПП , ""), ДатаДоговора));
					СтруктураСтроки.Вставить("Субконто2", ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно2,,));
				ИначеЕсли Счет = "60.06" ИЛИ Счет = "62.03"  ИЛИ Счет = "76.03" ИЛИ Счет = "60.04"  ИЛИ Счет = "60.01"  ИЛИ Счет = "60.03" ИЛИ Счет = "62.01" ИЛИ Счет = "76.01" ИЛИ Счет = "60.02" ИЛИ Счет = "60.07" Тогда
					Контрагент = ДобавитьЭлементСпр(Счет, "Контрагенты", Субкотно1,СтрЗаменить(МОЛ, Символы.НПП , ""),СтрЗаменить(ИнвНом, Символы.НПП , ""),,СтрЗаменить(Родитель1, Символы.НПП , ""), СтрЗаменить(Родитель2, Символы.НПП , ""));
					СтруктураСтроки.Вставить("Субконто1" ,Контрагент);
					СтруктураСтроки.Вставить("Субконто2" ,ДобавитьЭлементСпр(Счет, "ДоговорыКонтрагентов", Субкотно2,,ДатаДоговора,Контрагент));
				ИначеЕсли Счет = "76.02" Тогда
					Контрагент = ДобавитьЭлементСпр(Счет, "Контрагенты", Субкотно1,СтрЗаменить(МОЛ, Символы.НПП , ""),);
					СтруктураСтроки.Вставить("Субконто1" ,Контрагент);
					СтруктураСтроки.Вставить("Субконто2" ,ДобавитьЭлементСпр(Счет, "ВерхиКонтрагентов", Субкотно2,,,Контрагент));
				ИначеЕсли Счет = "76.08" Тогда
					Контрагент = ДобавитьЭлементСпр(Счет, "Контрагенты", Субкотно1,СтрЗаменить(МОЛ, Символы.НПП , ""),);
					СтруктураСтроки.Вставить("Субконто1" ,Контрагент);
					СтруктураСтроки.Вставить("Субконто2" ,ДобавитьЭлементСпр(Счет, "стр_СамостоятельныеЧастиОбъекта", Субкотно2,,));
				ИначеЕсли Счет = "005" Тогда
					Контрагент = ДобавитьЭлементСпр(Счет, "Контрагенты", Субкотно1,СтрЗаменить(МОЛ, Символы.НПП , ""),);
					СтруктураСтроки.Вставить("Субконто1" ,Контрагент);
				ИначеЕсли Счет = "08.03" Тогда
					СтруктураСтроки.Вставить("Субконто1" ,ДобавитьЭлементСпр(Счет, "Номенклатура", Субкотно1,,));
					//СтруктураСтроки.Вставить("Субконто2" ,ДобавитьЭлементСпр("Стр_Задачи", Субкотно2,,));
				ИначеЕсли Счет = "67.01" Или Счет = "67.02" Тогда
					СтруктураСтроки.Вставить("Субконто1" ,ДобавитьЭлементСпр(Счет, "ДоговорыКредитовИДепозитов", Субкотно1,,));
				ИначеЕсли Счет = "08.01" Или Счет = "08.02" Тогда
					СтруктураСтроки.Вставить("Субконто1" ,ДобавитьЭлементСпр(Счет, "ВнеобАктивы", Субкотно1,,));
				КонецЕсли;
				
				
				
				СтруктураСтроки.Вставить("Счет", НайтиКодСчета(Счет));
				СтруктураСтроки.Вставить("Задолженность", ?(Признак = "Дебет", ВернутьДебет(), ВернутьКредит()));
				СтруктураСтроки.Вставить("Количество", Строка(Данные[5][счСтроки]));
				СтруктураСтроки.Вставить("Крахмал", Строка(Данные[6][счСтроки]));
				СтруктураСтроки.Вставить("Сумма", Строка(Данные[7][счСтроки]));
				СтруктураСтроки.Вставить("Подразделение", ВернутьПодразделение(ПодразделениеКод));
				СтруктураСтроки.Вставить("Содержание", Строка(Данные[15][счСтроки]));
				
				//добавляем запись в табличную часть
				НоваяСтрока = Объект.ВводОстатковПрочее.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСтроки);
				
			КонецЦикла;
			
		КонецЦикла;	
		
		XLSОбъект.Application.Quit();
		Сообщить("Загрузка успешно выполнена.");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееСубконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ВводОстатковПрочее.ТекущиеДанные.Счет);
	Если Кол < 1 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	Если ТипЗнч(Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто1) = Тип("СправочникСсылка.Предприятия")  Тогда
		СтандартнаяОбработка = Ложь;
	    ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора",,Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееСубконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ВводОстатковПрочее.ТекущиеДанные.Счет);
	Если Кол < 2 Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто2) = Тип("СправочникСсылка.Предприятия")  Тогда
		СтандартнаяОбработка = Ложь;
	    ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора",,Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееСубконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Кол = КоличествоСубконто(Элементы.ВводОстатковПрочее.ТекущиеДанные.Счет);
	Если Кол < 3 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	Если ТипЗнч(Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто3) = Тип("СправочникСсылка.Предприятия")  Тогда
		СтандартнаяОбработка = Ложь;
	    ОткрытьФорму("Справочник.Предприятия.Форма.ФормаВыбора",,Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СправкаПоЗагрузке(Команда)
	ТабДок = Новый ТабличныйДокумент;
	Печать(ТабДок);
	
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Истина;
	ТабДок.АвтоМасштаб = Истина;
	
		
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Процедура Печать(ТабДок)
	Макет = Документы.УЧ_ВводОстатков.ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Справка");
	ТабДок.Вывести(ОбластьЗаголовок);
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	БюджетныйНаКлиенте.НачалоВыбораПодразделения(Элементы.ВводОстатковПрочее.ТекущиеДанные.Счет, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	ПредприятиеПриИзмененииНаСервере();
КонецПроцедуры
	
&НаСервере
Процедура ПредприятиеПриИзмененииНаСервере()
	сабОбщегоНазначенияКлиентСервер.СкрытьПодразделения(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция НайтиНоменклатуруПоНаимИРод(Наим, Род = Неопределено)
		
	Если ЗначениеЗаполнено(Род) Тогда 
		Возврат Справочники.Номенклатура.НайтиПоНаименованию(Наим, Истина, Род);
	Иначе
		Возврат Справочники.Номенклатура.НайтиПоНаименованию(Наим, Истина);
	КонецЕсли;	
	
КонецФункции	

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееПриАктивизацииЯчейки(Элемент)
	Если НЕ Элементы.ВводОстатковПрочее.ТекущиеДанные = Неопределено Тогда
		
		Если Элемент.ТекущийЭлемент.Имя = "ВводОстатковПрочееСубконто2" Тогда
			
			Если ЗначениеЗаполнено(Элементы.ВводОстатковПрочее.ТекущиеДанные.Счет) Тогда
				УстановитьСвязиПараметровВыбора(Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто1, Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто2, "Дт");
				Если РежимРедактированияТЧ Тогда
					Элементы.ВводОстатковПрочее.ИзменитьСтроку();
				КонецЕсли;
				//Если Элементы.Проводки.ТекущиеДанные.Субконто2Дебет = "" Тогда 
				//	Элементы.Проводки.ТекущиеДанные.Субконто2Дебет = ПолучитьСсылкуПВХ(Элементы.Проводки.ТекущиеДанные.СчетДебет);
				//КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбора(ТекСубконто1, ТекСубконто2, ВидДвижения)
	
	Если Не ТекСубконто2 = Неопределено И Не ТекСубконто2 = "" Тогда
		
		Если Метаданные.Справочники.Содержит(ТекСубконто2.Метаданные()) Тогда
			НеобходимаСвязьПовладельцу = Ложь;
			
			Для Каждого ТекВладелец Из ТекСубконто2.Метаданные().Владельцы Цикл
				
				Если Не ЗначениеЗаполнено(ТекСубконто1) Тогда
					Прервать;
				КонецЕсли;
				
				Если ТекСубконто1.Метаданные() = ТекВладелец Тогда
					НеобходимаСвязьПовладельцу = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;	
			
			МассивПараметровВыбора = Новый Массив;
			Если ТипЗнч(ТекСубконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				//МассивПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Объект.Организация", РежимИзмененияСвязанногоЗначения.Очищать));
			Иначе
				МассивПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Предприятие", "Объект.Предприятие", РежимИзмененияСвязанногоЗначения.Очищать));
			КонецЕсли;
			
			Если НеобходимаСвязьПовладельцу Тогда
				
				МассивПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.ВводОстатковПрочее.ТекущиеДанные.Субконто1", РежимИзмененияСвязанногоЗначения.Очищать));
				
			КонецЕсли;	
			
			Элементы.ВводОстатковПрочееСубконто2.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееПередНачаломИзменения(Элемент, Отказ)
		РежимРедактированияТЧ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
		РежимРедактированияТЧ = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ВводОстатковПрочееПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		РежимРедактированияТЧ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИзмененияВерсий(ИмяКоманды)

	СсылкаНаОбъект = ЭтаФорма.ДокументБУ; 
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Ссылка",СсылкаНаОбъект);
	СтруктураКоличествВерсий = сабОбщегоНазначенияБУХ.ПолучитьКоличествоВерсий(СсылкаНаОбъект);
	КолВерсий = СтруктураКоличествВерсий.КоличествоИзмененныхВерсий;
	СравниваемыеВерсии = Новый СписокЗначений;  
	Пока КолВерсий > 0 Цикл
		СравниваемыеВерсии.Добавить(СтруктураКоличествВерсий.КоличествоВерсий, СтруктураКоличествВерсий.КоличествоВерсий);
		СтруктураКоличествВерсий.КоличествоВерсий = СтруктураКоличествВерсий.КоличествоВерсий - 1;
		КолВерсий = КолВерсий - 1;
	КонецЦикла;
	ПараметрыОтчета.Вставить("СравниваемыеВерсии",СравниваемыеВерсии); 
	
	ОткрытьФорму("РегистрСведений.ВерсииОбъектов.Форма.ОтчетПоВерсиямОбъекта", ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоДокументу(ИмяКоманды)

	ПерезаполнитьДокументНаОснованиинаСервере();

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаОснованиинаСервере()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.ОбработкаЗаполненияСФормы(ЭтаФорма.ДокументБУ, Неопределено, Истина);
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
	
	//ОбновленнаяЗапись = РегистрыСведений.сабОбработкаДокументов.СоздатьМенеджерЗаписи();
	//ОбновленнаяЗапись.ДокументБУ = ЭтаФорма.ДокументБУ;
	//ОбновленнаяЗапись.ДокументУУ = Объект.Ссылка;
	//ОбновленнаяЗапись.ДатаОбработки = ТекущаяДата();
	//ОбновленнаяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	//ОбновленнаяЗапись.Модифицирован = Ложь;
	//ОбновленнаяЗапись.Записать();
	Элементы.ЭлементПерезаполнитьПоДокументу.Доступность = Ложь;
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗагрузкаСчетов" Тогда
		Если Объект.ВводОстатковПрочее.Количество() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаОповещенияЗавершение", ЭтотОбъект, Новый Структура("Параметр", Параметр)), "Таблица уже содержит данные. Очистить?", РежимДиалогаВопрос.ДаНетОтмена);
		Иначе	
			//ЗагрузитьСвернутыеПроводки(Параметр)	
			ВыполнитьАвтозаполение(Параметр);
		КонецЕсли;
		ИначеЕсли ИмяСобытия = "ПрикрепленныеФайлы" Тогда	
			сабОбщегоНазначенияКлиент.ОбновитьКоличествоПрикрепленныхФайлов(ЭтаФорма);
		ИначеЕсли ИмяСобытия = "ОбновитьФормуУч_Операция" И Параметр = Объект.Ссылка Тогда
		ЭтаФорма.Прочитать();
		ОбновитьОтображениеДанных();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещенияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Параметр = ДополнительныеПараметры.Параметр;
	
	
	Если РезультатВопроса = КодВозвратаДиалога.Да  Тогда
		Объект.ВводОстатковПрочее.Очистить();
		//ЗагрузитьСвернутыеПроводки(Параметр);
		ВыполнитьАвтозаполение(Параметр);
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет  Тогда
		//ЗагрузитьСвернутыеПроводки(Параметр);
		ВыполнитьАвтозаполение(Параметр);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьАвтозаполение(Параметр)
	
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствиеСчетовИСубконто.СчетБУ КАК СчетБУ,
	|	сабСоответствиеСчетовИСубконто.СубконтоБУ1 КАК СубконтоБУ1,
	|	сабСоответствиеСчетовИСубконто.СубконтоБУ2 КАК СубконтоБУ2,
	|	сабСоответствиеСчетовИСубконто.СубконтоБУ3 КАК СубконтоБУ3,
	|	сабСоответствиеСчетовИСубконто.СчетУУ КАК СчетУУ,
	|	сабСоответствиеСчетовИСубконто.СубконтоУУ1 КАК СубконтоУУ1,
	|	сабСоответствиеСчетовИСубконто.СубконтоУУ2 КАК СубконтоУУ2,
	|	сабСоответствиеСчетовИСубконто.СубконтоУУ3 КАК СубконтоУУ3,
	|	сабСоответствиеСчетовИСубконто.Комментарии КАК Комментарии
	|ИЗ
	|	РегистрСведений.сабСоответствиеСчетовИСубконто КАК сабСоответствиеСчетовИСубконто";
		
	Результат = Запрос.Выполнить();
	ВыборкаСоотв = Результат.Выгрузить();
	
	ТекСтрока = Справочники.сабМониторВнедрения.НайтиПоНаименованию("Дата остатков", Истина);
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		Об = ТекСтрока.ПолучитьОбъект();
		ДатаВводаОстатков = Об.Значение;
	Иначе
		ДатаВводаОстатков = Объект.Дата;
	КонецЕсли;
	
	
	//Константы.УЧ_ДатаВводаОстатков.Установить(ДатаВводаОстатков);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сабСоответствияОрганизацийПредприятиям.Организация КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	РегистрСведений.сабСоответствияОрганизацийПредприятиям КАК сабСоответствияОрганизацийПредприятиям
	|ГДЕ
	|	НЕ сабСоответствияОрганизацийПредприятиям.Предприятие = ЗНАЧЕНИЕ(Справочник.Предприятия.ПустаяСсылка)
	|	И сабСоответствияОрганизацийПредприятиям.Предприятие = &Предприятие
	|;
	
	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОстатки.Субконто3 КАК Субконто3,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоОстатокКт КАК КоличествоОстатокКт,
	|	ХозрасчетныйОстатки.Счет.Код КАК СчетКод,
	|	ХозрасчетныйОстатки.Организация.Предприятие КАК Предприятие
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НаДату,
	|			Счет В (&СписокСчетов),
	|			,
	|			Организация В
	|				(ВЫБРАТЬ
	|					Организации.Организация КАК Организация
	|				ИЗ
	|					Организации КАК Организации)) КАК ХозрасчетныйОстатки
	
	|УПОРЯДОЧИТЬ ПО
	|	СчетКод";
	
	Запрос.УстановитьПараметр("НаДату", ДатаВводаОстатков);
	Запрос.УстановитьПараметр("СписокСчетов", Параметр.Счета);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	СписокОрганизаций = Выборка.Скопировать();
	СписокОрганизаций.Свернуть("Организация, Предприятие");
	
	Для каждого ТекОрганизация Из СписокОрганизаций Цикл
		Объект.Комментарий = Строка(ТекОрганизация.Организация);
		Объект.Дата = ДатаВводаОстатков - 1;
		НайденныеСтроки = Выборка.НайтиСтроки(Новый Структура("Организация", ТекОрганизация.Организация)); 
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			
			Соотв = ВыборкаСоотв.НайтиСтроки(Новый Структура("СчетБУ", ТекСтрока.Счет));
			Для каждого ТекСчет Из Соотв Цикл
				НоваяСтрока = Объект.ВводОстатковПрочее.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.Задолженность = Перечисления.Д_ДтКт.Дебет;
				НоваяСтрока.Счет = ТекСчет.СчетУУ;
				ИндексСубконто = 0;
				Для каждого ТекСубконто Из ТекСчет.СчетУУ.ВидыСубконто Цикл
					ИндексСубконто = ИндексСубконто + 1;
					Если ТекСубконто.ВидСубконто = ТекСчет.СубконтоУУ1 Тогда
						НоваяСтрока.Субконто1 = ТекСтрока["Субконто" + Строка(ИндексСубконто)];
					ИначеЕсли ТекСубконто.ВидСубконто = ТекСчет.СубконтоУУ2 Тогда
						НоваяСтрока.Субконто2 = ТекСтрока["Субконто" + Строка(ИндексСубконто)];
					ИначеЕсли ТекСубконто.ВидСубконто = ТекСчет.СубконтоУУ3 Тогда
						НоваяСтрока.Субконто3 = ТекСтрока["Субконто" + Строка(ИндексСубконто)];
					КонецЕсли;
				КонецЦикла; 
				
				Прервать;
			КонецЦикла; 
		КонецЦикла;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры