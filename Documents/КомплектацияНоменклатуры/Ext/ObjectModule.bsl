
&Перед("ПередЗаписью")
Процедура УУ_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если Модифицированность() Тогда
		Если ДополнительныеСвойства.Свойство("НеДобавлятьЗаписьВРегистрИзмененных") Тогда
			Если Не ДополнительныеСвойства.НеДобавлятьЗаписьВРегистрИзмененных Тогда
				сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
			КонецЕсли;
		Иначе
			сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура УУ_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ВыпускПродукции") Тогда
		
		//Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, ЭтотОбъект.Комментарий, СтандартнаяОбработка, ТипЗнч(Ссылка));
		//Если Отказ.Признак = "##УжеСоздан" Тогда
		//	ВызватьИсключение "На основании Заказ на производство уже введен документ " + Отказ.Ссылка;
		//ИначеЕсли Отказ.Признак = "##НеПроведен" Тогда
		//	ВызватьИсключение "Документ Заказ на производство не проведен. Ввод на основании не возможен.";
		//КонецЕсли;
		
		Если ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.Комплектация Тогда
			ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
		ИначеЕсли ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацииВыпускаПродукции.Разукомплектация Тогда
			ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,, "Проведен, Номер, ВидОперации");
		ДокОснование = ДанныеЗаполнения;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сабСоответствиеСчетовИСубконто.СчетБУ КАК СчетБУ,
		|	сабСоответствиеСчетовИСубконто.СубконтоБУ1 КАК СубконтоБУ1,
		|	сабСоответствиеСчетовИСубконто.СубконтоБУ2 КАК СубконтоБУ2,
		|	сабСоответствиеСчетовИСубконто.СубконтоБУ3 КАК СубконтоБУ3,
		|	сабСоответствиеСчетовИСубконто.СчетУУ КАК СчетУУ,
		|	сабСоответствиеСчетовИСубконто.СубконтоУУ1 КАК СубконтоУУ1,
		|	сабСоответствиеСчетовИСубконто.СубконтоУУ2 КАК СубконтоУУ2,
		|	сабСоответствиеСчетовИСубконто.СубконтоУУ3 КАК СубконтоУУ3,
		|	сабСоответствиеСчетовИСубконто.Комментарии КАК Комментарии,
		|	сабСоответствиеСчетовИСубконто.ЗначениеСубконтоУУ1 КАК ЗначениеСубконтоУУ1,
		|	сабСоответствиеСчетовИСубконто.ЗначениеСубконтоУУ2 КАК ЗначениеСубконтоУУ2,
		|	сабСоответствиеСчетовИСубконто.ЗначениеСубконтоУУ3 КАК ЗначениеСубконтоУУ3
		|ИЗ
		|	РегистрСведений.сабСоответствиеСчетовИСубконто КАК сабСоответствиеСчетовИСубконто";
		
		Результат = Запрос.Выполнить();
		ВыборкаСоотв = Результат.Выгрузить();
		
		
		Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			ЭтотОбъект.Номенклатура = СтрокаТЧ.Номенклатура;
			ЭтотОбъект.Количество = СтрокаТЧ.Количество;
			ЭтотОбъект.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Распределяется;
			Если Не ЗначениеЗаполнено(ЭтотОбъект.Склад) Тогда
				ЭтотОбъект.Склад = СтрокаТЧ.Склад;				
			КонецЕсли;
			
			Соотв = ВыборкаСоотв.НайтиСтроки(Новый Структура("СчетУУ", СтрокаТЧ.СчетУчета));
			Для каждого ТекСчет Из Соотв Цикл
				ЭтотОбъект.СчетУчета = ТекСчет.СчетБУ;
				Прервать;
			КонецЦикла;
			
		КонецЦикла;
		
		ЭтотОбъект.Комплектующие.Очистить();
		
		Для Каждого СтрокаМатериалов Из ДанныеЗаполнения.Материалы Цикл
			НоваяСтрока = ЭтотОбъект.Комплектующие.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериалов);
			НоваяСтрока.Номенклатура = СтрокаМатериалов.Материал;
			НоваяСтрока.ИдентификаторСтроки = СтрокаМатериалов.УИДТЧ;
			НоваяСтрока.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Распределяется;
			
			СоответствиеСчета = ПолучитьСоответствияСчетовНоменклатуры(Ложь,ДанныеЗаполнения.Ссылка);
			ИсхСчетУчета = ?(ЗначениеЗаполнено(СтрокаМатериалов.СчетУчета), СтрокаМатериалов.СчетУчета, СоответствиеСчета.Получить(СтрокаМатериалов.Материал));
			
			Соотв = ВыборкаСоотв.НайтиСтроки(Новый Структура("СчетУУ", ИсхСчетУчета));
			Для каждого ТекСчет Из Соотв Цикл
				НоваяСтрока.СчетУчета = ТекСчет.СчетБУ;
				Прервать;
			КонецЦикла;
			
			НоваяСтрока.ДоляСтоимости = 1;
			
		КонецЦикла;
		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УУ_ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	УУ_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры

Функция ПолучитьСоответствияСчетовНоменклатуры(ЭтоГП = Ложь,УЧ_ВыпускСсылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииМатериалы.Материал КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.СчетУчета
	               |	КОНЕЦ КАК Счет
	               |ПОМЕСТИТЬ вт
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.Материалы КАК УЧ_ВыпускПродукцииМатериалы
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииМатериалы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииМатериалы.СчетУчета
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА &Счет1001
	               |		ИНАЧЕ УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10
	               |	КОНЕЦ
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.ТабличнаяЧасть КАК УЧ_ВыпускПродукцииТабличнаяЧасть
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА &Счет1001
	               |		ИНАЧЕ УЧ_ВыпускПродукцииТабличнаяЧасть.Номенклатура.Счет10
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета
	               |	КОНЕЦ
	               |ИЗ
	               |	Документ.УЧ_ВыпускПродукции.ВозвращенныеМатериалы КАК УЧ_ВыпускПродукцииВозвращенныеМатериалы
	               |ГДЕ
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |						ТОГДА &Счет1001
	               |					ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.Материал.Счет10
	               |				КОНЕЦ
	               |		ИНАЧЕ УЧ_ВыпускПродукцииВозвращенныеМатериалы.СчетУчета
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт.Номенклатура КАК Номенклатура,
	               |	вт.Счет КАК Счет
	               |ИЗ
	               |	вт КАК вт
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт.Номенклатура,
	               |	вт.Счет";
	
	Запрос.УстановитьПараметр("Ссылка", УЧ_ВыпускСсылка);
	Запрос.УстановитьПараметр("Счет1001", ?(ЭтоГП, ПланыСчетов.Учетный.Счет43(), ПланыСчетов.Учетный.Счет1001()));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ?(ЭтоГП, ПланыСчетов.Учетный.Счет43(), ПланыСчетов.Учетный.Счет1001()));
	Соответствия.Вставить(Null, ?(ЭтоГП, ПланыСчетов.Учетный.Счет43(), ПланыСчетов.Учетный.Счет1001()));
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ?(ЭтоГП, ПланыСчетов.Учетный.Счет43(), ПланыСчетов.Учетный.Счет1001()));
	
	МассивМатериаловБезСчета = Новый Массив;
	Для каждого ТекСтрока Из УЧ_ВыпускСсылка.Материалы Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.СчетУчета) И МассивМатериаловБезСчета.Найти(ТекСтрока.Материал) = Неопределено Тогда
			МассивМатериаловБезСчета.Добавить(ТекСтрока.Материал);	
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтрока Из УЧ_ВыпускСсылка.ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.СчетУчета) И МассивМатериаловБезСчета.Найти(ТекСтрока.Номенклатура) = Неопределено Тогда
			МассивМатериаловБезСчета.Добавить(ТекСтрока.Номенклатура);	
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтрока Из УЧ_ВыпускСсылка.ВозвращенныеМатериалы Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.СчетУчета) И МассивМатериаловБезСчета.Найти(ТекСтрока.Материал) = Неопределено Тогда
			МассивМатериаловБезСчета.Добавить(ТекСтрока.Материал);	
		КонецЕсли;
	КонецЦикла;
	
	НовоеСоответствие = сабОбщегоНазначения.ПолучитьСчетУчетаНоменклатуры(МассивМатериаловБезСчета, УЧ_ВыпускСсылка.Организация, ?(ЗначениеЗаполнено(УЧ_ВыпускСсылка.СкладМатериалов), УЧ_ВыпускСсылка.СкладМатериалов, УЧ_ВыпускСсылка.Склад));
	Для каждого ТекСоотв Из НовоеСоответствие Цикл
		Если ЗначениеЗаполнено(ТекСоотв.Значение.СчетУчетаУУ) Тогда
			Соответствия.Вставить(ТекСоотв.Ключ, ТекСоотв.Значение.СчетУчетаУУ);	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Соответствия;	
	
КонецФункции // ()
