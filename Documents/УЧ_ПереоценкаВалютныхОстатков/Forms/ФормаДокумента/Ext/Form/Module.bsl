&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//ответ = ОткрытьФормуМодально("Обработка.КурсыВалютРБК.Форма.Форма");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если не ЗначениеЗаполнено(Объект.СчетаПодлежащиеПереоценке) Тогда 
		ЗаполнитьСчетаТЧ();
	КонецЕсли;
	
	Элементы.СчетКурсовйРазницы.СписокВыбора.Добавить(ПланыСчетов.Учетный.Счет91(), "91");
	Элементы.СчетКурсовйРазницы.СписокВыбора.Добавить(ПланыСчетов.Учетный.Счет98(), "98");
	
	Если НЕ ЗначениеЗаполнено(Объект.СчетКурсовйРазницы) Тогда 
		Объект.СчетКурсовйРазницы = ПланыСчетов.Учетный.Счет91();
	КонецЕсли;   
	
	БюджетныйНаСервере.ДействияПриСозданииФормыДокумента(ЭтаФорма); 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетаТЧ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Учетный.Ссылка КАК Счет
	               |ИЗ
	               |	ПланСчетов.Учетный КАК Учетный
	               |ГДЕ
	               |	НЕ Учетный.Забалансовый
	               |	И Учетный.Валютный
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	Объект.СчетаПодлежащиеПереоценке.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

КонецПроцедуры

&НаКлиенте
Процедура СчетКурсовйРазницыПриИзменении(Элемент)

	Объект.СчетаПодлежащиеПереоценке.Очистить();
	ЗаполнитьСчетаТЧ();
	Элементы.Статья.Видимость = Истина;
      	
КонецПроцедуры
	
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сабОбщегоНазначения.ОтобразитьСостояниеДокумента(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры
