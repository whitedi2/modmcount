
&Перед("ПередЗаписью")
Процедура УУ_ПередЗаписью1(Отказ, РежимЗаписи, РежимПроведения) 

	Если Модифицированность() Тогда
		Если ДополнительныеСвойства.Свойство("НеДобавлятьЗаписьВРегистрИзмененных") Тогда
			Если Не ДополнительныеСвойства.НеДобавлятьЗаписьВРегистрИзмененных Тогда
				сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
			КонецЕсли;
		Иначе
			сабОбщегоНазначенияБУХ.УстановитьМодифицированностьБУДокумента(ЭтотОбъект, Ссылка, РежимЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&После("ПередЗаписью")
Процедура УУ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если сабОбщегоНазначенияПовтИсп.ПолучитьСерийныйУчет() Тогда 
		Если Не ЭтоНовый() Тогда 
			сабОперОбщегоНазначения.СинхронизацияНомераСтрокиОсновнойТЧССериямиБух(Материалы,Ссылка.Материалы,СерииНоменклатуры,ЭтотОбъект);
		КонецЕсли;
		
		сабОперОбщегоНазначения.ПерезаполнитьТЧСерииНоменклатурыПередЗаписью(Материалы,СерииНоменклатуры,Истина);
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаЗаполнения")
Процедура УУ_ОбработкаЗаполнения(ДанныеЗаполнения)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		
		//+lud 17/10/22 Проверка повторного создания документов из заказа по обр. №7861 от 12.10.2022 {
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, "", Ложь, ТипЗнч(Ссылка));
		Если Отказ.Признак = "##УжеСоздан" Тогда
			ВызватьИсключение "На основании заказа уже введен документ " + Отказ.Ссылка;
		ИначеЕсли Отказ.Признак = "##НеПроведен" Тогда
			ВызватьИсключение "Документ заказ клиента не проведен. Ввод на основании не возможен.";
		КонецЕсли;
		//}
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Дата, Номер, Проведен");
		ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов;
		ЭтотОбъект.Заказ = ДанныеЗаполнения;
		//ЭтотОбъект.СуммаВключаетНДС = Истина;
		//ЭтотОбъект.ДокументБезНДС = Ложь;
		//ЭтотОбъект.ДоговорКонтрагента = ДанныеЗаполнения.Договор;
		//ЭтотОбъект.ТипЦен = ЭтотОбъект.ДоговорКонтрагента.ТипЦен;
		ЭтотОбъект.Дата = ДанныеЗаполнения.ДатаПоступления;
		//ЭтотОбъект.ЭтоУниверсальныйДокумент = Истина;
		//ЭтотОбъект.ВалютаДокумента = ДанныеЗаполнения.Валюта;
		
		//Ответственным текущий пользователь
		ЭтотОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		//
		
		//Если Не ЗначениеЗаполнено(ЭтотОбъект.ВалютаДокумента) Тогда
		//	ЭтотОбъект.ВалютаДокумента = УЧ_Сервер.НациональнаяВалюта();		
		//КонецЕсли;
		Для каждого ТекСтрока Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			НоваяСтрока = ЭтотОбъект.Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			//НоваяСтрока.СтавкаНДС = сабОбщегоНазначенияБУХПовтИсп.СоотвСтавокНДСУУБУХ().Получить(ТекСтрока.СтавкаНДС);
			//Если Не ЗначениеЗаполнено(ЭтотОбъект.Склад) Тогда
			//	ЭтотОбъект.Склад = ТекСтрока.Склад;	
			//КонецЕсли;
		КонецЦикла;
		
		НовОбъект = Документы.ТребованиеНакладная.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(НовОбъект, ДанныеЗаполнения,,"Дата, Номер");
		НовОбъект.ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов;
		//НовОбъект.Заказ = ДанныеЗаполнения;
		//НовОбъект.СуммаВключаетНДС = Истина;
		//НовОбъект.ДокументБезНДС = Ложь;
		Для каждого ТекСтрока Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			НоваяСтрока = НовОбъект.Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			//НоваяСтрока.СтавкаНДС = сабОбщегоНазначенияБУХПовтИсп.СоотвСтавокНДСУУБУХ().Получить(ТекСтрока.СтавкаНДС);
		КонецЦикла;
		
		ЗаполнениеДокументов.Заполнить(НовОбъект, ДанныеЗаполнения, Истина);
		
		МассивНоменклатуры = Новый Массив;
		ЭтотОбъект.Материалы.Очистить();
		Для каждого ТекСтрока Из НовОбъект.Материалы Цикл
			НоваяСтрока = ЭтотОбъект.Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			МассивНоменклатуры.Добавить(НоваяСтрока.Номенклатура);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		| СправочникНомераГТД.Ссылка КАК НомерГТД,
		| СправочникНомераГТД.Код КАК Код,
		| СУММА(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0)) КАК КоличествоОстаток,
		| СУММА(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0)) КАК КоличествоПриход,
		| СУММА(ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0)) КАК КоличествоРасход,
		| ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто1, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		| ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто3, НЕОПРЕДЕЛЕНО) КАК СтранаПроисхождения
		| ИЗ
		| Справочник.НомераГТД КАК СправочникНомераГТД
		| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		| 			,
		| 			&Период,
		| 			Период,
		| 			,
		| 			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ГТД),
		| 			,
		| 			Субконто1 В (&Номенклатура)
		| 				И Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		| 	ПО СправочникНомераГТД.Ссылка = ХозрасчетныйОстаткиИОбороты.Субконто2
		| ГДЕ
		| НЕ СправочникНомераГТД.СтранаВвозаНеРФ
		| СГРУППИРОВАТЬ ПО
		| СправочникНомераГТД.Ссылка,
		| ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто1, НЕОПРЕДЕЛЕНО),
		| 	ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто3, НЕОПРЕДЕЛЕНО)";
		
		Запрос.УстановитьПараметр("Номенклатура", МассивНоменклатуры);
		Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
		Запрос.УстановитьПараметр("Период", ЭтотОбъект.Дата);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выгрузить();
		
		Для каждого ТекСтрока Из ЭтотОбъект.Материалы Цикл
			НуженГТД = ЗначениеЗаполнено(ТекСтрока.Номенклатура.СтранаПроисхождения);
			НайденГТД = Ложь;
			Если НуженГТД Тогда
				НайденныеСтрокиГТД = Выборка.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрока.Номенклатура));
				Для каждого ТекНайдСтрока Из НайденныеСтрокиГТД Цикл
					Если ТекНайдСтрока.КоличествоОстаток > ТекСтрока.Количество Тогда
						ТекСтрока.НомерГТД = ТекНайдСтрока.НомерГТД;
						ТекСтрока.СтранаПроисхождения = ТекНайдСтрока.СтранаПроисхождения;
						НайденГТД = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НуженГТД И НЕ НайденГТД Тогда
				Сообщить("В Требовании накладной по заказу " + Строка(ДанныеЗаполнения.Ссылка) + " в строке " + Строка(ТекСтрока.НомерСтроки) + " не найдена ГТД на остатках. Необходимо подобрать ГТД вручную.");		
			КонецЕсли;
		КонецЦикла;
		
		СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.ПредопределенныйЭлемент("РасходыПоБезвозмезднойПередаче");
		
		СчетЗатрат = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		СчетУчетаНДС = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Субконто1 = СтатьяРасходов;
		СубконтоНДС1 = СтатьяРасходов;
		
	КонецЕсли;
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура УУ_ОбработкаПроведения(Отказ, РежимПроведения)
	//меняем статус заказа
	Если НЕ ДополнительныеСвойства.Свойство("НеИзменятьСтатусЗаказа") И ЗначениеЗаполнено(Заказ) И ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказКлиента") И Не Заказ.Статус = Перечисления.СтатусыЗаказовКлиентов.Отгружен Тогда		
		ЗаказОб = Заказ.ПолучитьОбъект();
		ЗаказОб.Статус = Перечисления.СтатусыЗаказовКлиентов.Отгружен;
		Если ЗаказОб.Проведен Тогда
			ЗаказОб.Записать(РежимЗаписиДокумента.Проведение);
		Иначе	
			ЗаказОб.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
