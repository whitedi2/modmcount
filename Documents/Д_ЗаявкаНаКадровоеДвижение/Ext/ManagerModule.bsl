Процедура Печать(ТабДок, Ссылка, РецензентКомментарий = Неопределено, МассивОткрытыхИсторий = Неопределено, МассивОткрытыхИсторийАвтора = Неопределено) Экспорт
	
	Макет = Документы.Д_ЗаявкаНаКадровоеДвижение.ПолучитьМакет("Печать");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	// статус
	ОбластьШапкаСтатус = Макет.ПолучитьОбласть("ШапкаСтатус");
	ОбластьТекстовка = Макет.ПолучитьОбласть("Текстовка");
	ОбластьШапкаЗаг = Макет.ПолучитьОбласть("ШтампыЗаголовок");
	ОбластьШтампы = Макет.ПолучитьОбласть("Штампы");
	ОбластьСогласование = Макет.ПолучитьОбласть("ШапкаСогласование");
	ОбластьОзнакомлениеШапка = Макет.ПолучитьОбласть("ШапкаОзнакомление");
	ОбластьОзнакомление = Макет.ПолучитьОбласть("ШтампыОзнакомление");
	ОбластьПрикрепление = Макет.ПолучитьОбласть("Прикрепление");
	ОбластьПустыеСтроки = Макет.ПолучитьОбласть("ПустыеСтроки");
	ОбластьИнициатор = Макет.ПолучитьОбласть("ШтампыИнициатор");
	ОбластьОтступ = Макет.ПолучитьОбласть("ОтступСтрока|ОтступСтолбец");


	
	ТабДок.Очистить();
	ВставлятьРазделительСтраниц = Ложь;
	
	//////////////////////////вывод СЗ на печать
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	*
	|ИЗ
	|	Документ.Д_ЗаявкаНаКадровоеДвижение КАК Д_ЗаявкаНаКадровоеДвижение
	|ГДЕ
	|	Д_ЗаявкаНаКадровоеДвижение.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	//получаем прикрепленные объекты
	ВыборкаПоФайлам = БПСервер.ПолучитьПрикрепленныеОбъектыДляПечати(Ссылка);
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.Ссылка = Выборка.Ссылка;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Дата = Выборка.Дата;
		ОбластьШапка.Параметры.Комментарий = Выборка.Комментарий;
		ОбластьШапка.Параметры.ВидСЗ = ?(Выборка.ВидСЗ = Справочники.Д_ВидыВнутреннихДокументов.ЗаявкаНаКадровоеДвижение, "" + Выборка.ВидСЗ + " (" + Выборка.ВидКадровогоДвижения + ")", Выборка.ВидСЗ);
		// имя пользователя и должность
		ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, ?(ПустаяСтрока(Выборка.Автор), Выборка.Предприятие.Финансист, Выборка.Автор));
		ОбластьШапка.Параметры.ОтКого = ?(ЗначениеЗаполнено(ИмяДолжность.ПредставлениеПользователя), ИмяДолжность.ПредставлениеПользователя + " ", "") + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), ИмяДолжность.Должность, "");	
		
		// закомментированно 01.03.13 строка
		//ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Кому);
		//ОбластьШапка.Параметры.Кому = ?(ПустаяСтрока(Выборка.Кому), "ДКФ", Строка(ИмяДолжность.ПредставлениеПользователя) + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), " " + "(" + Строка(ИмяДолжность.Должность) + ")", ""));
		
		СтрокаКому = "";		
		Для ИндСтр = 0 По Выборка.Ссылка.Рецензенты.Количество() - 1 Цикл
			
			ИмяДолжность = БПСервер.ПолучитьИмяИДолжностьПользователя(Выборка.Дата, Выборка.Ссылка.Рецензенты[ИндСтр].Пользователь);
			СтрокаКому = СтрокаКому + Строка(ИмяДолжность.ПредставлениеПользователя) + ?(ЗначениеЗаполнено(ИмяДолжность.Должность), " " + ИмяДолжность.Должность, "") + ?(ИндСтр <> Выборка.Ссылка.Рецензенты.Количество() - 1, "; ", ""); 
			
		КонецЦикла;
		
		ОбластьШапка.Параметры.Кому = ?(ПустаяСтрока(Выборка.Кому), "ДКФ", СтрокаКому);
		
		ОбластьШапка.Параметры.ЦФО = Строка(Выборка.Предприятие) + ?(Выборка.Предприятие.УчетПоПодразделениям, " (" + Строка(Выборка.Подразделение) + ")", "");
		
		ТабДок.Вывести(ОбластьШапка);
		
		// статус 
		ОбластьШапкаСтатус.Параметры.ТекущийСтатус = БПСервер.ПолучитьТекущуюТочкуМаршрута(Ссылка);
		
		ТабДок.Вывести(ОбластьШапкаСтатус);
		
		
		Пока ВыборкаПоФайлам.Следующий() Цикл 
			ОбластьПрикрепление.Параметры.Вложение = Строка(ВыборкаПоФайлам.Файл);
			ОбластьПрикрепление.Параметры.РасшифровкаВложение = Новый Структура("Файл", ВыборкаПоФайлам.Файл);
			ТабДок.Вывести(ОбластьПрикрепление);
		КонецЦикла;	
		//Иначе
		//	ТабДок.Вывести(ОбластьПустыеСтроки);
		//КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Заявка", Выборка);
		
		
		
		
		ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
		ДоступенКадровыйУчет = ТекПользователь.ДоступенУправленческийУчет;
		Если ДоступенКадровыйУчет Тогда
			ВидСодержанияКадры = ?(Выборка.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение,"|СодержаниеКадрыПолноеПеремещение" ,"|СодержаниеКадрыПолное");
		Иначе
			ВидСодержанияКадры = ?(Выборка.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение,"|СодержаниеКадрыБезУпрУчетаПеремещение" ,"|СодержаниеКадрыБезУпрУчета");
		КонецЕсли;
		
		ЗаявкаКадры = Выборка.Ссылка;
		
		ПоляИРазделыШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + "|ПоляИРазделыКадры");
		ТабДок.Вывести(ПоляИРазделыШапкаКадры);
		
		Если ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.ПриемНаРаботу Тогда
			ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
			ТабДок.Присоединить(ОбластьШапкаКадры);
			
			ПоляИРазделыМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыМотивацияПрием);
			
			ОбластьМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьМотивацияПрием.Параметры, ЗаявкаКадры);
			ТабДок.Присоединить(ОбластьМотивацияПрием);
			
			ПоляИРазделыПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыПрочееПрием);
			
			ОбластьПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьПрочееПрием.Параметры, ЗаявкаКадры);
			ТабДок.Присоединить(ОбластьПрочееПрием);
		ИначеЕсли ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Перемещение Тогда	
			
			ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
			ТЧУпр = ЗаявкаКадры.УчетныеДанныеПрежние.Выгрузить();
			ТЧРегл = ЗаявкаКадры.РегламентированныеДанныеПрежние.Выгрузить();
			Для каждого ТекСтрока Из ТЧУпр Цикл
				ОбластьШапкаКадры.Параметры.ПредприятиеУпрТек = ТекСтрока.Предприятие;
				ОбластьШапкаКадры.Параметры.ПодразделениеУпрТек = ТекСтрока.Подразделение;
				ОбластьШапкаКадры.Параметры.ДолжностьУпрТек = ТекСтрока.Должность;
			КонецЦикла; 
			Для каждого ТекСтрока Из ТЧРегл Цикл
				ОбластьШапкаКадры.Параметры.ЮрЛицоТек = ТекСтрока.ЮрЛицо;
				ОбластьШапкаКадры.Параметры.ДолжностьРеглТек = ТекСтрока.Должность;
				ОбластьШапкаКадры.Параметры.ПодразделениеЮрЛицаТек = ТекСтрока.Подразделение;
			КонецЦикла; 
			ТабДок.Присоединить(ОбластьШапкаКадры);
			
			ПоляИРазделыМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыМотивацияПрием);
			
			ОбластьМотивацияПрием = Макет.ПолучитьОбласть("МотивацияПрием" + ВидСодержанияКадры);
			Если ДоступенКадровыйУчет Тогда
				ЗаполнитьЗначенияСвойств(ОбластьМотивацияПрием.Параметры, ЗаявкаКадры);
				
				Для каждого ТекСтрока Из ТЧУпр Цикл
					ОбластьМотивацияПрием.Параметры.РазмерУчетнойЗПТек = ТекСтрока.РазмерЗП;
					ОбластьМотивацияПрием.Параметры.ОбщийРазмерЗПТек = ТекСтрока.ОбщийРазмерЗП;
					ОбластьМотивацияПрием.Параметры.КомпенсацияАрендыЖильяТек = ТекСтрока.КомпенсацияАрендыЖилья;
					ОбластьМотивацияПрием.Параметры.КомпенсацияСотовойСвязиТек = ТекСтрока.КомпенсацияСотовойСвязи;				
				КонецЦикла; 
				Для каждого ТекСтрока Из ТЧРегл Цикл
					ОбластьМотивацияПрием.Параметры.ПолнаяСтавкаТек = ТекСтрока.ПолнаяСтавка;
					ОбластьМотивацияПрием.Параметры.РазмерОфициальнойЗПТек = ТекСтрока.РазмерЗП;
					ОбластьМотивацияПрием.Параметры.ПроцентСтавкиТек = ТекСтрока.ПроцентСтавки;
					ОбластьМотивацияПрием.Параметры.ОбщийРазмерЗПТек = ТекСтрока.ОбщийРазмерЗП;
					ОбластьМотивацияПрием.Параметры.ПремиальнаяЧастьТек = ТекСтрока.ПремиальнаяЧасть;
				КонецЦикла; 
			КонецЕсли;
			ТабДок.Присоединить(ОбластьМотивацияПрием);
			
			ПоляИРазделыПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыПрочееПрием);
			
			ОбластьПрочееПрием = Макет.ПолучитьОбласть("ПрочееПрием" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьПрочееПрием.Параметры, ЗаявкаКадры);
			
			Для каждого ТекСтрока Из ТЧУпр Цикл
				ОбластьПрочееПрием.Параметры.ПериодТек = ТекСтрока.Дата;
			КонецЦикла; 
			Для каждого ТекСтрока Из ТЧРегл Цикл
				ОбластьПрочееПрием.Параметры.ДатаРеглТек = ТекСтрока.Дата;
			КонецЦикла; 
			ОбластьПрочееПрием.Параметры.ПрочаяИнформацияТек = ЗаявкаКадры.ПрочаяИнформация;
			
			
			ТабДок.Присоединить(ОбластьПрочееПрием);
		ИначеЕсли ЗаявкаКадры.ВидКадровогоДвижения = Перечисления.ВидыОперацийДвиженияКадров.Увольнение Тогда
			ОбластьШапкаКадры = Макет.ПолучитьОбласть("ШапкаКадры" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьШапкаКадры.Параметры, ЗаявкаКадры);
			
			ТЧУпр = ЗаявкаКадры.УчетныеДанныеПрежние.Выгрузить();
			ТЧРегл = ЗаявкаКадры.РегламентированныеДанныеПрежние.Выгрузить();
			Для каждого ТекСтрока Из ТЧУпр Цикл
				ОбластьШапкаКадры.Параметры.ПредприятиеУпр = ТекСтрока.Предприятие;
				ОбластьШапкаКадры.Параметры.ПодразделениеУпр = ТекСтрока.Подразделение;
				ОбластьШапкаКадры.Параметры.ДолжностьУпр = ТекСтрока.Должность;
			КонецЦикла; 
			Для каждого ТекСтрока Из ТЧРегл Цикл
				ОбластьШапкаКадры.Параметры.ЮрЛицо = ТекСтрока.ЮрЛицо;
				ОбластьШапкаКадры.Параметры.ДолжностьРегл = ТекСтрока.Должность;
				ОбластьШапкаКадры.Параметры.ПодразделениеЮрЛица = ТекСтрока.Подразделение;
			КонецЦикла; 
			
			
			ТабДок.Присоединить(ОбластьШапкаКадры);
			
			ПоляИРазделыУсловияУвольнения = Макет.ПолучитьОбласть("УсловияУвольнения" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыУсловияУвольнения);
			
			ОбластьУсловияУвольнения = Макет.ПолучитьОбласть("УсловияУвольнения" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьУсловияУвольнения.Параметры, ЗаявкаКадры);
			ТабДок.Присоединить(ОбластьУсловияУвольнения);
			
			ПоляИРазделыПрочееУвольнение = Макет.ПолучитьОбласть("ПрочееУвольнение" + "|ПоляИРазделыКадры");
			ТабДок.Вывести(ПоляИРазделыПрочееУвольнение);
			
			ОбластьПрочееУвольнение = Макет.ПолучитьОбласть("ПрочееУвольнение" + ВидСодержанияКадры);
			ЗаполнитьЗначенияСвойств(ОбластьПрочееУвольнение.Параметры, ЗаявкаКадры);
			
			Для каждого ТекСтрока Из ТЧУпр Цикл
				ОбластьПрочееУвольнение.Параметры.Период = ТекСтрока.Дата;
			КонецЦикла; 
			Для каждого ТекСтрока Из ТЧРегл Цикл
				ОбластьПрочееУвольнение.Параметры.ДатаРегл = ТекСтрока.Дата;
			КонецЦикла; 
			ОбластьПрочееУвольнение.Параметры.ПрочаяИнформация = ЗаявкаКадры.ПрочаяИнформация;
			ТабДок.Присоединить(ОбластьПрочееУвольнение);
		КонецЕсли;
		
		
		БПСервер.ПоказатьРецензентов(ТабДок, Выборка.Ссылка, Неопределено, Ссылка, "Штампы", РецензентКомментарий, МассивОткрытыхИсторий, МассивОткрытыхИсторийАвтора);
		
		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
КонецПроцедуры
