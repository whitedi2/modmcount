
Процедура ОбработкаПроведения(Отказ, Режим)
		
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	//Нужно добавить реквизит в предприятие
	ВыпускПоПрямымЗатратам = Истина;
	
	СоответствиеСчета = ПоучитьСоответствияСчетовНоменклатуры();
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если ФлагВалюты Тогда
		КурсВалюты = Курс;
	Иначе
		КурсВалюты = 1
	КонецЕсли;
	
	Движения.Учетный.Записывать = Истина;
	
	Если ВыпускПоПрямымЗатратам Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УЧ_ВозвратГПВПереработкуТовары.Номенклатура КАК Номенклатура,
		|	СУММА(УЧ_ВозвратГПВПереработкуТовары.Количество) КАК Количество,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Предприятие,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Склад,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ТЧДока
		|ИЗ
		|	Документ.УЧ_ВозвратГПВПереработку.Товары КАК УЧ_ВозвратГПВПереработкуТовары
		|ГДЕ
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	УЧ_ВозвратГПВПереработкуТовары.Номенклатура,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Предприятие,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Склад,
		|	УЧ_ВозвратГПВПереработкуТовары.Ссылка.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетныйОстатки.Субконто1 КАК Номенклатура,
		|	УчетныйОстатки.Субконто2 КАК Склад,
		|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
		|			ТОГДА 0
		|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Цена,
		|	УчетныйОстатки.Счет,
		|	УчетныйОстатки.Предприятия,
		|	УчетныйОстатки.Подразделение
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрБухгалтерии.Учетный.Остатки(
		|			&ПозицияДокумента,
		|			Счет В (&ВыбСчет),
		|			,
		|			Предприятия = &ВыбПредприятие
		|				И Субконто1 В (&ВыбТовары)
		|				И Субконто2 = &ВыбСклад
		|				И Подразделение В (&Подразделение)) КАК УчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧДока.Номенклатура,
		|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество КАК КоличествоМинус,
		|	ТЧДока.Предприятие,
		|	ТЧДока.Подразделение,
		|	ТЧДока.Предприятие.УчетПоПодразделениям КАК УчетПоПодразделениям,
		|	Остатки.Склад,
		|	ТЧДока.Количество КАК КоличествоНужно,
		|	ЕСТЬNULL(Остатки.Количество, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТЧДока КАК ТЧДока
		|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
		|		ПО ТЧДока.Номенклатура = Остатки.Номенклатура
		|			И ТЧДока.Предприятие = Остатки.Предприятия
		|			И ТЧДока.Склад = Остатки.Склад
		|			И ТЧДока.Подразделение = Остатки.Подразделение
		|ГДЕ
		|	ЕСТЬNULL(Остатки.Количество, 0) - ТЧДока.Количество < 0
		|	И (Остатки.Счет ЕСТЬ NULL 
		|			ИЛИ (Остатки.Счет В ИЕРАРХИИ (&Счет41)
		|					И Остатки.Предприятия.НеКонтролировать41 = ЛОЖЬ
		|				ИЛИ Остатки.Счет В ИЕРАРХИИ (&Счет10)
		|					И Остатки.Предприятия.НеКонтролировать10 = ЛОЖЬ
		|				ИЛИ Остатки.Счет В ИЕРАРХИИ (&Счет43)
		|					И Остатки.Предприятия.НеКонтролировать43 = ЛОЖЬ))";
		
		ВыбСклад = Склад;
		ВыбСчет = ПланыСчетов.Учетный.Счет43();
		ВыбТовары = Товары.ВыгрузитьКолонку("Номенклатура");
		
		МоментКонца = МоментВремени();
		
		Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
		Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.УстановитьПараметр("ВыбСклад", ВыбСклад);
		Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
		Запрос.УстановитьПараметр("ПозицияДокумента", МоментКонца);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Счет10", ПланыСчетов.Учетный.Счет10());
		Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Учетный.Счет41());
		Запрос.УстановитьПараметр("Счет43", ПланыСчетов.Учетный.Счет43());
		
		МассивЗапросов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
		
		ТаблицаПлановыхЦен = МассивЗапросов[1].Выгрузить();
		РезультатКонтроль = МассивЗапросов[2].Выгрузить();
	Иначе	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПлановаяСебестоимостьСрезПоследних.Номенклатура,
		|	ПлановаяСебестоимостьСрезПоследних.Сумма
		|ИЗ
		|	РегистрСведений.ПлановаяСебестоимость.СрезПоследних(&Дата, Номенклатура В (&Номенклатура) И Предприятие = &ТекПредприятие) КАК ПлановаяСебестоимостьСрезПоследних";	
		Запрос.УстановитьПараметр("Дата", Новый Граница(Дата, ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Номенклатура", Товары.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("ТекПредприятие", Предприятие);
		ТаблицаПлановыхЦен = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
		
	Для Каждого ТекСтрокаТабличнаяЧасть Из Товары Цикл
		Движение = Движения.Учетный.Добавить();
		
		Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
		Движение.Предприятия = Предприятие;
		Движение.Период = Дата;
		Движение.СчетДт = ПланыСчетов.Учетный._10_012;
		Если Движение.СчетДт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеДт = Подразделение;
		КонецЕсли;
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, ТекСтрокаТабличнаяЧасть.Склад);
		
		СчетКт = сабОбщегоНазначения.ПолучитьСчетУчетаНоменклатуры(ТекСтрокаТабличнаяЧасть.Номенклатура);
		Движение.СчетКт = СчетКт;
		Если Движение.СчетКт.УчетПоПодразделениям Тогда
			Движение.ПодразделениеКт = Подразделение;
		КонецЕсли;
		
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, ТекСтрокаТабличнаяЧасть.Номенклатура);
		УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, ТекСтрокаТабличнаяЧасть.Склад);
				
		Если ФлагВалюты Тогда
			Движение.ВалютнаяСуммаКт = ТекСтрокаТабличнаяЧасть.Сумма; 
			Движение.ВалютаКт = Валюта;
		КонецЕсли;
		
		Движение.КоличествоДт = ТекСтрокаТабличнаяЧасть.Количество;
		Движение.КоличествоКт = ТекСтрокаТабличнаяЧасть.Количество;
		
		НайденныеСтроки = ТаблицаПлановыхЦен.НайтиСтроки(Новый Структура("Номенклатура", ТекСтрокаТабличнаяЧасть.Номенклатура));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Движение.Сумма = ТекСтрокаТабличнаяЧасть.Количество * ?(ВыпускПоПрямымЗатратам, НайденныеСтроки[0].Цена, НайденныеСтроки[0].Сумма) * КурсВалюты;
		Иначе
			Движение.Сумма = 0;
		КонецЕсли;	
						
		Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
		Движение.Содержание = Комментарий;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетныйОстатки.Субконто1,
	|	УчетныйОстатки.Субконто2,
	|	ЕСТЬNULL(УчетныйОстатки.СуммаОстаток, 0) КАК Сумма,
	|	ЕСТЬNULL(УчетныйОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА УчетныйОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ УчетныйОстатки.СуммаОстаток / УчетныйОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	УчетныйОстатки.Счет
	|ИЗ
	|	РегистрБухгалтерии.Учетный.Остатки(
	|			&Период,
	|			Счет В (&ВыбСчет),
	|			,
	|			Предприятия = &ВыбПредприятие
	|				И Субконто1 В (&ВыбТовары)
	|				И Субконто2 = &ВыбСклад
	|				И  Подразделение В (&Подразделение)
	|				) КАК УчетныйОстатки";
	
	ВыбСклад = Склад;
	ВыбСчет = Новый Массив;
	ВыбТовары = Материалы.ВыгрузитьКолонку("Материал");
	Для Каждого ТекСтрока Из Материалы Цикл
		Если ВыбСчет.Найти(СоответствиеСчета.Получить(ТекСтрока.Материал)) = Неопределено Тогда
			ВыбСчет.Добавить(СоответствиеСчета.Получить(ТекСтрока.Материал));
		КонецЕсли;
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("ВыбТовары", ВыбТовары);
	Запрос.УстановитьПараметр("ВыбПредприятие", Предприятие);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ВыбСклад", ВыбСклад);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("Период", МоментВремени());	
	
	РезультатОстатки = Запрос.Выполнить().Выгрузить();
				
	Для Каждого СтрокаНоменклатур Из Товары Цикл
		КоличествоДляОкругления = 0;
		СтрокиИспользуемых = Материалы.НайтиСтроки(Новый Структура("УИДТЧ", СтрокаНоменклатур.УИД));
		КоличествоВсегоПоМатериалам = 0;
		Для Каждого СтрокаИспользуемых Из СтрокиИспользуемых Цикл			
			КоличествоВсегоПоМатериалам = КоличествоВсегоПоМатериалам + СтрокаИспользуемых.Количество; 	
		КонецЦикла;
		Для Каждого СтрокаИспользуемых Из СтрокиИспользуемых Цикл			
			Движение = Движения.Учетный.Добавить();
			
			Движение.СценарийПлана = Справочники.СценарииПланирования.НайтиПоНаименованию("Факт", Истина);
			Движение.Предприятия = Предприятие;
			Движение.Период = Дата;
			Движение.СчетКт = ПланыСчетов.Учетный._10_012;
			Если Движение.СчетКт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеКт = Подразделение;
			КонецЕсли;
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 1, СтрокаНоменклатур.Номенклатура);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоКт, Движение.СчетКт, 2, СтрокаНоменклатур.Склад);
			
			СчетДт = СоответствиеСчета.Получить(СтрокаИспользуемых.Материал);
			Движение.СчетДт = СчетДт;
			Если Движение.СчетДт.УчетПоПодразделениям Тогда
				Движение.ПодразделениеДт = Подразделение;
			КонецЕсли;
			
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 1, СтрокаИспользуемых.Материал);
			УЧ_Сервер.УстановитьСубконто(Движение.СубконтоДт, Движение.СчетДт, 2, СтрокаНоменклатур.Склад);
			
			Движение.КоличествоДт = СтрокаИспользуемых.Количество;
			Движение.КоличествоКт = СтрокаИспользуемых.Количество * СтрокаНоменклатур.Количество / КоличествоВсегоПоМатериалам;
			
			НайденныеСтроки = РезультатОстатки.НайтиСтроки(Новый Структура("Субконто1, Счет", СтрокаИспользуемых.Материал, СчетДт));
			Если НайденныеСтроки.Количество() > 0 Тогда
				Движение.Сумма = СтрокаИспользуемых.Количество * НайденныеСтроки[0].Цена * КурсВалюты;
			Иначе
				Движение.Сумма = 0;
			КонецЕсли;	
			
			Движение.НомерСтрокиДок = ТекСтрокаТабличнаяЧасть.НомерСтроки;
			Движение.Содержание = Комментарий;
			
			КоличествоДляОкругления = КоличествоДляОкругления + Движение.КоличествоКт;
		КонецЦикла;	
		Движение.КоличествоКт = Движение.КоличествоКт + (СтрокаНоменклатур.Количество - КоличествоДляОкругления);	
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если Не СтрокаТЧ.Спецификация.ВозвозможностьВозвратаВПереработку Тогда
			сабОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(ЭтотОбъект, "По данной продукции невозможно делать возврат в переработку " + Строка(СтрокаТЧ.Номенклатура), "Товары", Строка(СтрокаТЧ.НомерСтроки), "Номенклатура");
			ЕстьОшибки = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Если ЕстьОшибки Тогда
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для Каждого СтрокаТовары Из Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТовары.Склад) Тогда
			СтрокаТовары.Склад = Склад;
		КонецЕсли;
	КонецЦикла;	
	
	СуммаИтог = Товары.Итог("Сумма");
	СуммаДокумента = СуммаИтог;
	
	//из подписки на событие
	БюджетныйНаСервере.ДокументыПередЗаписьюПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтотОбъект.ЭтоНовый());
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПеремещениеТоваров") Тогда
		
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка);
		Если НЕ Отказ = Неопределено Тогда
			Возврат;		
		КонецЕсли;
		
		ЗапросПоСпецификациям = Новый Запрос;
		ЗапросПоСпецификациям.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
		|	Спецификации.Продукция
		|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
		|ИЗ
		|	Справочник.Спецификации КАК Спецификации
		|ГДЕ
		|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|	И НЕ Спецификации.Ссылка.ПометкаУдаления
		|	И Спецификации.Дата <= &Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	Спецификации.Продукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпецификацииСостав.Ссылка КАК Спецификация,
		|	СпецификацииСостав.Ссылка.Продукция,
		|	СпецификацииСостав.Материал,
		|	СпецификацииСостав.Ссылка.Дата КАК Дата,
		|	СпецификацииСостав.МассаБрутто,
		|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
		|	СпецификацииСостав.МассаНетто,
		|	СпецификацииСостав.ПотериПриТепловойОбработке,
		|	СпецификацииСостав.Ссылка.Выход
		|ИЗ
		|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
		|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
		|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Продукция
		|ГДЕ
		|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
		|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		ЗапросПоСпецификациям.УстановитьПараметр("Дата", ТекущаяДата());
		РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
		ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
		
		// Заполнение шапки
		Предприятие = ДанныеЗаполнения.Предприятие;
		Подразделение = ДанныеЗаполнения.ПодразделениеПолучатель;
		Склад = ДанныеЗаполнения.СкладПолучатель;
		ДокОснование = ДанныеЗаполнения;
		Организация = ДанныеЗаполнения.Подразделение.Организация;
		Для Каждого ТекСтрокаТабличнаяЧасть Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТабличнаяЧасть.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТабличнаяЧасть.Номенклатура;
			НоваяСтрока.УИД = Новый УникальныйИдентификатор;
			СтрокиСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", НоваяСтрока.Номенклатура));
			Если СтрокиСпецификаций.Количество() > 0 Тогда
				НоваяСтрока.Спецификация = СтрокиСпецификаций[0].Спецификация;
				УстановитьМатериалыПоСпецификации(НоваяСтрока.Спецификация, НоваяСтрока.Количество, НоваяСтрока.УИД, ТаблицаСпецификаций);
			КонецЕсли;	
			НоваяСтрока.Склад = ДанныеЗаполнения.Склад;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЧ_ПоступлениеТоваров") Тогда	
		
		Отказ = сабОперОбщегоНазначения.ПроверкаСозданияНаОснованииНаСервере(ДанныеЗаполнения, Комментарий, СтандартнаяОбработка);
		Если НЕ Отказ = Неопределено Тогда
			Возврат;		
		КонецЕсли;
		
		ЗапросПоСпецификациям = Новый Запрос;
		ЗапросПоСпецификациям.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Спецификации.Дата) КАК Дата,
		|	Спецификации.Продукция
		|ПОМЕСТИТЬ ВТ_ПоследнииСпецификации
		|ИЗ
		|	Справочник.Спецификации КАК Спецификации
		|ГДЕ
		|	НЕ Спецификации.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|	И НЕ Спецификации.Ссылка.ПометкаУдаления
		|	И Спецификации.Дата <= &Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	Спецификации.Продукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпецификацииСостав.Ссылка КАК Спецификация,
		|	СпецификацииСостав.Ссылка.Продукция,
		|	СпецификацииСостав.Материал,
		|	СпецификацииСостав.Ссылка.Дата КАК Дата,
		|	СпецификацииСостав.МассаБрутто,
		|	СпецификацииСостав.ОтходыПриХолоднойОбработке,
		|	СпецификацииСостав.МассаНетто,
		|	СпецификацииСостав.ПотериПриТепловойОбработке,
		|	СпецификацииСостав.Ссылка.Выход
		|ИЗ
		|	ВТ_ПоследнииСпецификации КАК ВТ_ПоследнииСпецификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК СпецификацииСостав
		|		ПО ВТ_ПоследнииСпецификации.Дата = СпецификацииСостав.Ссылка.Дата
		|			И ВТ_ПоследнииСпецификации.Продукция = СпецификацииСостав.Ссылка.Продукция
		|ГДЕ
		|	НЕ СпецификацииСостав.Ссылка.ПометкаУдаления
		|	И НЕ СпецификацииСостав.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыСпецификаций.Разруб)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		ЗапросПоСпецификациям.УстановитьПараметр("Дата", ТекущаяДата());
		РезультатЗапроса = ЗапросПоСпецификациям.Выполнить();
		ТаблицаСпецификаций = РезультатЗапроса.Выгрузить();
		
		// Заполнение шапки
		Предприятие = ДанныеЗаполнения.Предприятие;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Склад = ДанныеЗаполнения.Склад;
		ДокОснование = ДанныеЗаполнения;
		Организация = Подразделение.Организация;
		Для Каждого ТекСтрокаТабличнаяЧасть Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТабличнаяЧасть.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТабличнаяЧасть.Номенклатура;
			НоваяСтрока.УИД = Новый УникальныйИдентификатор;
			СтрокиСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", НоваяСтрока.Номенклатура));
			Если СтрокиСпецификаций.Количество() > 0 Тогда
				НоваяСтрока.Спецификация = СтрокиСпецификаций[0].Спецификация;
				УстановитьМатериалыПоСпецификации(НоваяСтрока.Спецификация, НоваяСтрока.Количество, НоваяСтрока.УИД, ТаблицаСпецификаций);
			КонецЕсли;	
			НоваяСтрока.Склад = ДанныеЗаполнения.Склад;
		КонецЦикла;
		
	КонецЕсли;
	
	сабОбщегоНазначенияБУХ.сабОбработкиЗаполненияУчпетныхДокументовОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура УстановитьМатериалыПоСпецификации(ТекСпецификация, ПервоначальноеКоличество, ТекУИД, ТаблицаСпецификаций)
	
	ТаблицаМатериалов = Материалы.Выгрузить();
	
	ПодчиненныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("УИДТЧ", ТекУИД));
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		ТаблицаМатериалов.Удалить(ПодчиненнаяСтрока);	
	КонецЦикла;	
		
	//Если выпуск по спецификации, то спишем сразу материалы в производство
	Если ЗначениеЗаполнено(ТекСпецификация) Тогда
		НайденныйСоставСпецификаций = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Спецификация", ТекСпецификация));
		Для Каждого СоставСпецификаций Из НайденныйСоставСпецификаций Цикл
			ТекКоэф = СоставСпецификаций.МассаБрутто / СоставСпецификаций.Выход;
			//находим подчиненные спецификации
			СоставПодчиненнойСпецификации = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СоставСпецификаций.Материал));
			Если СоставПодчиненнойСпецификации.Количество() > 0 Тогда
				Для Каждого СтрокаПодчиненнойСпецификации Из СоставПодчиненнойСпецификации Цикл
					СоставПодчиненнойСпецификации2 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации.Материал));
					Если СоставПодчиненнойСпецификации2.Количество() > 0 Тогда
						Для Каждого СтрокаПодчиненнойСпецификации2 Из СоставПодчиненнойСпецификации2 Цикл
							СоставПодчиненнойСпецификации3 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации2.Материал));
							Если СоставПодчиненнойСпецификации3.Количество() > 0 Тогда
								Для Каждого СтрокаПодчиненнойСпецификации3 Из СоставПодчиненнойСпецификации3 Цикл
									СоставПодчиненнойСпецификации4 = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Продукция", СтрокаПодчиненнойСпецификации3.Материал));
									Если СоставПодчиненнойСпецификации4.Количество() > 0 Тогда
										Для Каждого СтрокаПодчиненнойСпецификации4 Из СоставПодчиненнойСпецификации4 Цикл
											СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
											СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто * СтрокаПодчиненнойСпецификации4.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход * СтрокаПодчиненнойСпецификации4.Выход);
											СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
											СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации4.Материал;
											СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
										КонецЦикла;	
									Иначе									
										СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
										СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто * СтрокаПодчиненнойСпецификации3.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход * СтрокаПодчиненнойСпецификации3.Выход);
										СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
										СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации3.Материал;
										СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
									КонецЕсли;
								КонецЦикла;	
							Иначе
								СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
								СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто * СтрокаПодчиненнойСпецификации2.МассаБрутто / (СтрокаПодчиненнойСпецификации.Выход * СтрокаПодчиненнойСпецификации2.Выход);
								СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
								СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации2.Материал;
								СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
							КонецЕсли;
						КонецЦикла;
					Иначе
						СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();	
						СтрокаТаблМатериалов.Коэффициент = ТекКоэф * СтрокаПодчиненнойСпецификации.МассаБрутто / СтрокаПодчиненнойСпецификации.Выход;
						СтрокаТаблМатериалов.Количество = ПервоначальноеКоличество * СтрокаТаблМатериалов.Коэффициент;
						СтрокаТаблМатериалов.Материал = СтрокаПодчиненнойСпецификации.Материал;
						СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
					КонецЕсли;
				КонецЦикла;
			Иначе
				СтрокаТаблМатериалов = ТаблицаМатериалов.Добавить();
				СтрокаТаблМатериалов.Коэффициент = ТекКоэф;
				СтрокаТаблМатериалов.Количество = СтрокаТаблМатериалов.Коэффициент * ПервоначальноеКоличество;
				СтрокаТаблМатериалов.Материал = СоставСпецификаций.Материал;
				СтрокаТаблМатериалов.УИДТЧ = ТекУИД;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//
	
	Материалы.Загрузить(ТаблицаМатериалов);
	
КонецПроцедуры

Функция ПоучитьСоответствияСчетовНоменклатуры()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УЧ_ВозвратГПВПереработкуМатериалы.Материал КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВозвратГПВПереработкуМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Учетный.ОсновноеСырье)
	               |		ИНАЧЕ УЧ_ВозвратГПВПереработкуМатериалы.Материал.Счет10
	               |	КОНЕЦ КАК Счет
	               |ИЗ
	               |	Документ.УЧ_ВозвратГПВПереработку.Материалы КАК УЧ_ВозвратГПВПереработкуМатериалы
	               |ГДЕ
	               |	УЧ_ВозвратГПВПереработкуМатериалы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УЧ_ВозвратГПВПереработкуМатериалы.Материал,
	               |	ВЫБОР
	               |		КОГДА УЧ_ВозвратГПВПереработкуМатериалы.Материал.Счет10 = ЗНАЧЕНИЕ(ПланСчетов.Учетный.ПустаяСсылка)
	               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Учетный.ОсновноеСырье)
	               |		ИНАЧЕ УЧ_ВозвратГПВПереработкуМатериалы.Материал.Счет10
	               |	КОНЕЦ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	Соответствия = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствия.Вставить(Выборка.Номенклатура, Выборка.Счет);
	КонецЦикла;
	Соответствия.Вставить(Неопределено, ПланыСчетов.Учетный.Счет1001());
	Соответствия.Вставить(Null, ПланыСчетов.Учетный.Счет1001());
	Соответствия.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПланыСчетов.Учетный.Счет1001());
	Возврат Соответствия;	
	
КонецФункции // ()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	БюджетныйНаСервере.ПриУстановкеНовогоНомераПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

Процедура ОбработкаЗаполненияСФормы(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	

КонецПроцедуры
